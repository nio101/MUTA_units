

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Aug 14 10:38:44 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
    10                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    26                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    30                           	psect	text0,global,reloc=2,class=CODE,delta=1
    31                           	psect	text1,global,reloc=2,class=CODE,delta=1
    32                           	psect	text2,global,reloc=2,class=CODE,delta=1
    33                           	psect	text3,global,reloc=2,class=CODE,delta=1
    34                           	psect	text4,global,reloc=2,class=CODE,delta=1
    35                           	psect	text5,global,reloc=2,class=CODE,delta=1
    36                           	psect	text6,global,reloc=2,class=CODE,delta=1
    37                           	psect	text7,global,reloc=2,class=CODE,delta=1
    38                           	psect	text8,global,reloc=2,class=CODE,delta=1
    39                           	psect	text9,global,reloc=2,class=CODE,delta=1
    40                           	psect	text10,global,reloc=2,class=CODE,delta=1
    41                           	psect	text11,global,reloc=2,class=CODE,delta=1
    42                           	psect	text12,global,reloc=2,class=CODE,delta=1
    43                           	psect	text13,global,reloc=2,class=CODE,delta=1
    44                           	psect	text14,global,reloc=2,class=CODE,delta=1
    45                           	psect	text15,global,reloc=2,class=CODE,delta=1
    46                           	psect	text16,global,reloc=2,class=CODE,delta=1
    47                           	psect	text17,global,reloc=2,class=CODE,delta=1
    48                           	psect	text18,global,reloc=2,class=CODE,delta=1
    49                           	psect	text19,global,reloc=2,class=CODE,delta=1
    50                           	psect	text20,global,reloc=2,class=CODE,delta=1
    51                           	psect	text21,global,reloc=2,class=CODE,delta=1
    52                           	psect	text22,global,reloc=2,class=CODE,delta=1
    53                           	psect	text23,global,reloc=2,class=CODE,delta=1
    54                           	psect	text24,global,reloc=2,class=CODE,delta=1
    55                           	psect	text25,global,reloc=2,class=CODE,delta=1
    56                           	psect	text26,global,reloc=2,class=CODE,delta=1
    57                           	psect	text27,global,reloc=2,class=CODE,delta=1
    58                           	psect	text28,global,reloc=2,class=CODE,delta=1
    59                           	psect	text29,global,reloc=2,class=CODE,delta=1
    60                           	psect	text30,global,reloc=2,class=CODE,delta=1
    61                           	psect	text31,global,reloc=2,class=CODE,delta=1
    62                           	psect	text32,global,reloc=2,class=CODE,delta=1
    63                           	psect	text33,global,reloc=2,class=CODE,delta=1
    64                           	psect	text34,global,reloc=2,class=CODE,delta=1
    65                           	psect	text35,global,reloc=2,class=CODE,delta=1
    66                           	psect	text36,global,reloc=2,class=CODE,delta=1
    67                           	psect	text37,global,reloc=2,class=CODE,delta=1
    68                           	psect	text38,global,reloc=2,class=CODE,delta=1
    69                           	psect	text39,global,reloc=2,class=CODE,delta=1
    70                           	psect	text40,global,reloc=2,class=CODE,delta=1
    71                           	psect	text41,global,reloc=2,class=CODE,delta=1
    72                           	psect	text42,global,reloc=2,class=CODE,delta=1
    73                           	psect	text43,global,reloc=2,class=CODE,delta=1
    74                           	psect	text44,global,reloc=2,class=CODE,delta=1
    75                           	psect	text45,global,reloc=2,class=CODE,delta=1
    76                           	psect	text46,global,reloc=2,class=CODE,delta=1
    77                           	psect	text47,global,reloc=2,class=CODE,delta=1
    78                           	psect	text48,global,reloc=2,class=CODE,delta=1
    79                           	psect	text49,global,reloc=2,class=CODE,delta=1
    80                           	psect	text50,global,reloc=2,class=CODE,delta=1
    81                           	psect	text51,global,reloc=2,class=CODE,delta=1
    82                           	psect	text52,global,reloc=2,class=CODE,delta=1
    83                           	psect	text53,global,reloc=2,class=CODE,delta=1
    84                           	psect	text54,global,reloc=2,class=CODE,delta=1
    85                           	psect	text55,global,reloc=2,class=CODE,delta=1
    86                           	psect	text56,global,reloc=2,class=CODE,delta=1
    87                           	psect	text57,global,reloc=2,class=CODE,delta=1
    88                           	psect	text58,global,reloc=2,class=CODE,delta=1
    89                           	psect	text59,global,reloc=2,class=CODE,delta=1
    90                           	psect	text60,global,reloc=2,class=CODE,delta=1
    91                           	psect	text61,global,reloc=2,class=CODE,delta=1
    92                           	psect	text62,global,reloc=2,class=CODE,delta=1
    93                           	psect	text63,global,reloc=2,class=CODE,delta=1
    94                           	psect	text64,global,reloc=2,class=CODE,delta=1
    95                           	psect	text65,global,reloc=2,class=CODE,delta=1
    96                           	psect	text66,global,reloc=2,class=CODE,delta=1
    97                           	psect	text67,global,reloc=2,class=CODE,delta=1
    98                           	psect	text68,global,reloc=2,class=CODE,delta=1
    99                           	psect	text69,global,reloc=2,class=CODE,delta=1
   100                           	psect	text70,global,reloc=2,class=CODE,delta=1
   101                           	psect	text71,global,reloc=2,class=CODE,delta=1
   102                           	psect	text72,global,reloc=2,class=CODE,delta=1
   103                           	psect	text73,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   105                           	psect	text75,global,reloc=2,class=CODE,delta=1
   106                           	psect	text76,global,reloc=2,class=CODE,delta=1
   107                           	psect	text77,global,reloc=2,class=CODE,delta=1
   108                           	psect	text78,global,reloc=2,class=CODE,delta=1
   109                           	psect	text79,global,reloc=2,class=CODE,delta=1
   110                           	psect	text80,global,reloc=2,class=CODE,delta=1
   111                           	psect	text81,global,reloc=2,class=CODE,delta=1
   112                           	psect	text82,global,reloc=2,class=CODE,delta=1
   113                           	psect	text83,global,reloc=2,class=CODE,delta=1
   114                           	psect	text84,global,reloc=2,class=CODE,delta=1
   115                           	psect	text85,global,reloc=2,class=CODE,delta=1
   116                           	psect	text86,global,reloc=2,class=CODE,delta=1
   117                           	psect	text87,global,reloc=2,class=CODE,delta=1
   118                           	psect	text88,global,reloc=2,class=CODE,delta=1
   119                           	psect	text89,global,reloc=2,class=CODE,delta=1
   120                           	psect	text90,global,reloc=2,class=CODE,delta=1
   121                           	psect	text91,global,reloc=2,class=CODE,delta=1
   122                           	psect	text92,global,reloc=2,class=CODE,delta=1
   123                           	psect	text93,global,reloc=2,class=CODE,delta=1
   124                           	psect	text94,global,reloc=2,class=CODE,delta=1
   125                           	psect	text95,global,reloc=2,class=CODE,delta=1
   126                           	psect	text96,global,reloc=2,class=CODE,delta=1
   127                           	psect	text97,global,reloc=2,class=CODE,delta=1
   128                           	psect	text98,global,reloc=2,class=CODE,delta=1
   129                           	psect	text99,global,reloc=2,class=CODE,delta=1
   130                           	psect	text100,global,reloc=2,class=CODE,delta=1
   131                           	psect	text101,global,reloc=2,class=CODE,delta=1
   132                           	psect	text102,global,reloc=2,class=CODE,delta=1
   133                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   134                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   135                           	psect	text104,global,reloc=2,class=CODE,delta=1
   136                           	psect	text105,global,reloc=2,class=CODE,delta=1
   137                           	psect	text106,global,reloc=2,class=CODE,delta=1
   138                           	psect	text107,global,reloc=2,class=CODE,delta=1
   139                           	psect	text108,global,reloc=2,class=CODE,delta=1
   140                           	psect	text109,global,reloc=2,class=CODE,delta=1
   141                           	psect	text110,global,reloc=2,class=CODE,delta=1
   142                           	psect	text111,global,reloc=2,class=CODE,delta=1
   143                           	psect	text112,global,reloc=2,class=CODE,delta=1
   144                           	psect	text113,global,reloc=2,class=CODE,delta=1
   145                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   146                           	psect	param0,global,class=BANK0,space=1,delta=1
   147                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   148                           	dabs	1,0xD00,32,_BDT
   149                           	dabs	1,0xD28,8,_CtrlTrfData
   150                           	dabs	1,0xD20,8,_SetupPkt
   151  0000                     
   152                           	psect	idataCOMRAM
   153  00AF90                     __pidataCOMRAM:
   154                           	opt stack 0
   155                           
   156                           ;initializer for _LED_brightness
   157  00AF90  00EB               	dw	235
   158                           
   159                           ;initializer for _timer_count
   160  00AF92  01                 	db	1
   161                           
   162                           	psect	idataBANK0
   163  00AF98                     __pidataBANK0:
   164                           	opt stack 0
   165                           
   166                           ;initializer for _m_update_frequency
   167  00AF98  01                 	db	1
   168                           
   169                           	psect	idataBANK1
   170  00AF93                     __pidataBANK1:
   171                           	opt stack 0
   172                           
   173                           ;initializer for _AcknowledgementSeq
   174  00AF93  FF                 	db	255
   175                           
   176                           ;initializer for _defaultHops
   177  00AF94  04                 	db	4
   178                           
   179                           	psect	idataBANK2
   180  00AF8A                     __pidataBANK2:
   181                           	opt stack 0
   182                           
   183                           ;initializer for MiMAC_ChannelAssessment@F10758
   184  00AF8A  2A                 	db	42
   185  00AF8B  4E                 	db	78
   186  00AF8C  72                 	db	114
   187  00AF8D  96                 	db	150
   188  00AF8E  BA                 	db	186
   189  00AF8F  DE                 	db	222
   190                           
   191                           	psect	mediumconst
   192  001FF4                     __pmediumconst:
   193                           	opt stack 0
   194  001FF4  00                 	db	0
   195  001FF5                     _InitConfigRegs:
   196                           	opt stack 0
   197  001FF5  0036               	dw	54
   198  001FF7  0284               	dw	644
   199  001FF9  0409               	dw	1033
   200  001FFB  0609               	dw	1545
   201  001FFD  080C               	dw	2060
   202  001FFF  0AC1               	dw	2753
   203  002001  0C7D               	dw	3197
   204  002003  0E64               	dw	3684
   205  002005  1014               	dw	4116
   206  002007  1200               	dw	4608
   207  002009  1400               	dw	5120
   208  00200B  1600               	dw	5632
   209  00200D  1838               	dw	6200
   210  00200F  1AC8               	dw	6856
   211  002011  1C0D               	dw	7181
   212  002013  1E00               	dw	7680
   213  002015  2072               	dw	8306
   214  002017  2238               	dw	8760
   215  002019  2438               	dw	9272
   216  00201B  2607               	dw	9735
   217  00201D  2800               	dw	10240
   218  00201F  2A00               	dw	10752
   219  002021  2C69               	dw	11369
   220  002023  2E81               	dw	11905
   221  002025  307E               	dw	12414
   222  002027  3296               	dw	12950
   223  002029  34F0               	dw	13552
   224  00202B  3688               	dw	13960
   225  00202D  3840               	dw	14400
   226  00202F  3A00               	dw	14848
   227  002031  3CE8               	dw	15592
   228  002033  3E00               	dw	15872
   229  002035                     __end_of_InitConfigRegs:
   230                           	opt stack 0
   231  002035                     _ScanTime:
   232                           	opt stack 0
   233  002035  03C0               	dw	960
   234  002037  0000               	dw	0
   235  002039  05A0               	dw	1440
   236  00203B  0000               	dw	0
   237  00203D  0960               	dw	2400
   238  00203F  0000               	dw	0
   239  002041  10E0               	dw	4320
   240  002043  0000               	dw	0
   241  002045  1FE0               	dw	8160
   242  002047  0000               	dw	0
   243  002049  3DE0               	dw	15840
   244  00204B  0000               	dw	0
   245  00204D  79E0               	dw	31200
   246  00204F  0000               	dw	0
   247  002051  F1E0               	dw	61920
   248  002053  0000               	dw	0
   249  002055  E1E0               	dw	57824
   250  002057  0001               	dw	1
   251  002059  C1E0               	dw	49632
   252  00205B  0003               	dw	3
   253  00205D  81E0               	dw	33248
   254  00205F  0007               	dw	7
   255  002061  01E0               	dw	480
   256  002063  000F               	dw	15
   257  002065  01E0               	dw	480
   258  002067  001E               	dw	30
   259  002069  3D44               	dw	15684
   260  00206B  001B               	dw	27
   261  00206D  B40D               	dw	46093
   262  00206F  0015               	dw	21
   263  002071                     __end_of_ScanTime:
   264                           	opt stack 0
   265  002071                     _PVALUE:
   266                           	opt stack 0
   267  002071  4F                 	db	79
   268  002072  4F                 	db	79
   269  002073  4F                 	db	79
   270  002074  4F                 	db	79
   271  002075  4F                 	db	79
   272  002076  4F                 	db	79
   273  002077  4F                 	db	79
   274  002078  4F                 	db	79
   275  002079  4F                 	db	79
   276  00207A  4F                 	db	79
   277  00207B  4F                 	db	79
   278  00207C  4F                 	db	79
   279  00207D  4F                 	db	79
   280  00207E  4F                 	db	79
   281  00207F  4F                 	db	79
   282  002080  4F                 	db	79
   283  002081  4F                 	db	79
   284  002082  4F                 	db	79
   285  002083  4F                 	db	79
   286  002084  4F                 	db	79
   287  002085  4F                 	db	79
   288  002086  4F                 	db	79
   289  002087  50                 	db	80
   290  002088  50                 	db	80
   291  002089  50                 	db	80
   292  00208A  50                 	db	80
   293  00208B  50                 	db	80
   294  00208C  50                 	db	80
   295  00208D  50                 	db	80
   296  00208E  50                 	db	80
   297  00208F  50                 	db	80
   298  002090  50                 	db	80
   299  002091                     __end_of_PVALUE:
   300                           	opt stack 0
   301  002091                     _SVALUE:
   302                           	opt stack 0
   303  002091  22                 	db	34
   304  002092  24                 	db	36
   305  002093  26                 	db	38
   306  002094  28                 	db	40
   307  002095  2A                 	db	42
   308  002096  2C                 	db	44
   309  002097  2E                 	db	46
   310  002098  30                 	db	48
   311  002099  32                 	db	50
   312  00209A  34                 	db	52
   313  00209B  37                 	db	55
   314  00209C  39                 	db	57
   315  00209D  3B                 	db	59
   316  00209E  3D                 	db	61
   317  00209F  3F                 	db	63
   318  0020A0  41                 	db	65
   319  0020A1  43                 	db	67
   320  0020A2  45                 	db	69
   321  0020A3  47                 	db	71
   322  0020A4  4A                 	db	74
   323  0020A5  4C                 	db	76
   324  0020A6  4E                 	db	78
   325  0020A7  05                 	db	5
   326  0020A8  07                 	db	7
   327  0020A9  09                 	db	9
   328  0020AA  0B                 	db	11
   329  0020AB  0D                 	db	13
   330  0020AC  0F                 	db	15
   331  0020AD  11                 	db	17
   332  0020AE  14                 	db	20
   333  0020AF  16                 	db	22
   334  0020B0  18                 	db	24
   335  0020B1                     __end_of_SVALUE:
   336                           	opt stack 0
   337  0020B1                     _dpowers:
   338                           	opt stack 0
   339  0020B1  0001               	dw	1
   340  0020B3  000A               	dw	10
   341  0020B5  0064               	dw	100
   342  0020B7  03E8               	dw	1000
   343  0020B9  2710               	dw	10000
   344  0020BB                     __end_of_dpowers:
   345                           	opt stack 0
   346  0000                     _StaticSecurityKey_absconstaddr	set	8172
   347  0020BB                     _hexpowers:
   348                           	opt stack 0
   349  0020BB  0001               	dw	1
   350  0020BD  0010               	dw	16
   351  0020BF  0100               	dw	256
   352  0020C1  1000               	dw	4096
   353  0020C3                     __end_of_hexpowers:
   354                           	opt stack 0
   355  0020C3                     _USB_SD_Ptr:
   356                           	opt stack 0
   357  0020C3  D3                 	db	low _sd000
   358  0020C4  21                 	db	high _sd000
   359  0020C5  CF                 	db	low _sd001
   360  0020C6  20                 	db	high _sd001
   361  0020C7  03                 	db	low _sd002
   362  0020C8  21                 	db	high _sd002
   363  0020C9                     __end_of_USB_SD_Ptr:
   364                           	opt stack 0
   365  0020C9                     _PANID_LABEL:
   366                           	opt stack 0
   367  0020C9  50                 	db	80
   368  0020CA  41                 	db	65
   369  0020CB  4E                 	db	78
   370  0020CC  00                 	db	0
   371  0020CD                     __end_of_PANID_LABEL:
   372                           	opt stack 0
   373  0020CD                     _USB_CD_Ptr:
   374                           	opt stack 0
   375  0020CD  31                 	db	low _configDescriptor1
   376  0020CE  21                 	db	high _configDescriptor1
   377  0020CF                     __end_of_USB_CD_Ptr:
   378                           	opt stack 0
   379  0000                     _myMODEL_absconstaddr	set	131060
   380  0000                     _myUID_absconstaddr	set	131062
   381  0020CF                     _sd001:
   382                           	opt stack 0
   383  0020CF  34                 	db	52
   384  0020D0  03                 	db	3
   385  0020D1  004D               	dw	77
   386  0020D3  0069               	dw	105
   387  0020D5  0063               	dw	99
   388  0020D7  0072               	dw	114
   389  0020D9  006F               	dw	111
   390  0020DB  0063               	dw	99
   391  0020DD  0068               	dw	104
   392  0020DF  0069               	dw	105
   393  0020E1  0070               	dw	112
   394  0020E3  0020               	dw	32
   395  0020E5  0054               	dw	84
   396  0020E7  0065               	dw	101
   397  0020E9  0063               	dw	99
   398  0020EB  0068               	dw	104
   399  0020ED  006E               	dw	110
   400  0020EF  006F               	dw	111
   401  0020F1  006C               	dw	108
   402  0020F3  006F               	dw	111
   403  0020F5  0067               	dw	103
   404  0020F7  0079               	dw	121
   405  0020F9  0020               	dw	32
   406  0020FB  0049               	dw	73
   407  0020FD  006E               	dw	110
   408  0020FF  0063               	dw	99
   409  002101  002E               	dw	46
   410  002103                     __end_of_sd001:
   411                           	opt stack 0
   412  002103                     _sd002:
   413                           	opt stack 0
   414  002103  2E                 	db	46
   415  002104  03                 	db	3
   416  002105  0053               	dw	83
   417  002107  0069               	dw	105
   418  002109  006D               	dw	109
   419  00210B  0070               	dw	112
   420  00210D  006C               	dw	108
   421  00210F  0065               	dw	101
   422  002111  0020               	dw	32
   423  002113  0048               	dw	72
   424  002115  0049               	dw	73
   425  002117  0044               	dw	68
   426  002119  0020               	dw	32
   427  00211B  0044               	dw	68
   428  00211D  0065               	dw	101
   429  00211F  0076               	dw	118
   430  002121  0069               	dw	105
   431  002123  0063               	dw	99
   432  002125  0065               	dw	101
   433  002127  0020               	dw	32
   434  002129  0044               	dw	68
   435  00212B  0065               	dw	101
   436  00212D  006D               	dw	109
   437  00212F  006F               	dw	111
   438  002131                     __end_of_sd002:
   439                           	opt stack 0
   440  002131                     _configDescriptor1:
   441                           	opt stack 0
   442  002131  09                 	db	9
   443  002132  02                 	db	2
   444  002133  29                 	db	41
   445  002134  00                 	db	0
   446  002135  01                 	db	1
   447  002136  01                 	db	1
   448  002137  00                 	db	0
   449  002138  C0                 	db	192
   450  002139  32                 	db	50
   451  00213A  09                 	db	9
   452  00213B  04                 	db	4
   453  00213C  00                 	db	0
   454  00213D  00                 	db	0
   455  00213E  02                 	db	2
   456  00213F  03                 	db	3
   457  002140  00                 	db	0
   458  002141  00                 	db	0
   459  002142  00                 	db	0
   460  002143  09                 	db	9
   461  002144  21                 	db	33
   462  002145  11                 	db	17
   463  002146  01                 	db	1
   464  002147  00                 	db	0
   465  002148  01                 	db	1
   466  002149  22                 	db	34
   467  00214A  1D                 	db	29
   468  00214B  00                 	db	0
   469  00214C  07                 	db	7
   470  00214D  05                 	db	5
   471  00214E  81                 	db	129
   472  00214F  03                 	db	3
   473  002150  40                 	db	64
   474  002151  00                 	db	0
   475  002152  01                 	db	1
   476  002153  07                 	db	7
   477  002154  05                 	db	5
   478  002155  01                 	db	1
   479  002156  03                 	db	3
   480  002157  40                 	db	64
   481  002158  00                 	db	0
   482  002159  01                 	db	1
   483  00215A                     __end_of_configDescriptor1:
   484                           	opt stack 0
   485  00215A                     _hid_rpt01:
   486                           	opt stack 0
   487  00215A  06                 	db	6
   488  00215B  00                 	db	0
   489  00215C  FF                 	db	255
   490  00215D  09                 	db	9
   491  00215E  01                 	db	1
   492  00215F  A1                 	db	161
   493  002160  01                 	db	1
   494  002161  19                 	db	25
   495  002162  01                 	db	1
   496  002163  29                 	db	41
   497  002164  40                 	db	64
   498  002165  15                 	db	21
   499  002166  00                 	db	0
   500  002167  26                 	db	38
   501  002168  FF                 	db	255
   502  002169  00                 	db	0
   503  00216A  75                 	db	117
   504  00216B  08                 	db	8
   505  00216C  95                 	db	149
   506  00216D  40                 	db	64
   507  00216E  81                 	db	129
   508  00216F  00                 	db	0
   509  002170  19                 	db	25
   510  002171  01                 	db	1
   511  002172  29                 	db	41
   512  002173  40                 	db	64
   513  002174  91                 	db	145
   514  002175  00                 	db	0
   515  002176  C0                 	db	192
   516  002177                     __end_of_hid_rpt01:
   517                           	opt stack 0
   518  002177                     _device_dsc:
   519                           	opt stack 0
   520  002177  12                 	db	18
   521  002178  01                 	db	1
   522  002179  0200               	dw	512
   523  00217B  00                 	db	0
   524  00217C  00                 	db	0
   525  00217D  00                 	db	0
   526  00217E  08                 	db	8
   527  00217F  04D8               	dw	1240
   528  002181  F7C9               	dw	63433
   529  002183  0100               	dw	256
   530  002185  01                 	db	1
   531  002186  02                 	db	2
   532  002187  00                 	db	0
   533  002188  01                 	db	1
   534  002189                     __end_of_device_dsc:
   535                           	opt stack 0
   536  002189                     _TX_POWER_INVALID:
   537                           	opt stack 0
   538  002189  69                 	db	105
   539  00218A  6E                 	db	110
   540  00218B  76                 	db	118
   541  00218C  61                 	db	97
   542  00218D  6C                 	db	108
   543  00218E  69                 	db	105
   544  00218F  64                 	db	100
   545  002190  21                 	db	33
   546  002191  00                 	db	0
   547  002192                     __end_of_TX_POWER_INVALID:
   548                           	opt stack 0
   549  002192                     _TX_POWER_N_8_DB_MW:
   550                           	opt stack 0
   551  002192  30                 	db	48
   552  002193  2E                 	db	46
   553  002194  31                 	db	49
   554  002195  35                 	db	53
   555  002196  6D                 	db	109
   556  002197  57                 	db	87
   557  002198  00                 	db	0
   558  002199                     __end_of_TX_POWER_N_8_DB_MW:
   559                           	opt stack 0
   560  002199                     _TX_POWER_1_DB_MW:
   561                           	opt stack 0
   562  002199  31                 	db	49
   563  00219A  2E                 	db	46
   564  00219B  32                 	db	50
   565  00219C  6D                 	db	109
   566  00219D  57                 	db	87
   567  00219E  00                 	db	0
   568  00219F                     __end_of_TX_POWER_1_DB_MW:
   569                           	opt stack 0
   570  00219F                     _TX_POWER_4_DB_MW:
   571                           	opt stack 0
   572  00219F  32                 	db	50
   573  0021A0  2E                 	db	46
   574  0021A1  35                 	db	53
   575  0021A2  6D                 	db	109
   576  0021A3  57                 	db	87
   577  0021A4  00                 	db	0
   578  0021A5                     __end_of_TX_POWER_4_DB_MW:
   579                           	opt stack 0
   580  0021A5                     _TX_POWER_N_2_DB_MW:
   581                           	opt stack 0
   582  0021A5  30                 	db	48
   583  0021A6  2E                 	db	46
   584  0021A7  36                 	db	54
   585  0021A8  6D                 	db	109
   586  0021A9  57                 	db	87
   587  0021AA  00                 	db	0
   588  0021AB                     __end_of_TX_POWER_N_2_DB_MW:
   589                           	opt stack 0
   590  0021AB                     _TX_POWER_N_5_DB_MW:
   591                           	opt stack 0
   592  0021AB  30                 	db	48
   593  0021AC  2E                 	db	46
   594  0021AD  33                 	db	51
   595  0021AE  6D                 	db	109
   596  0021AF  57                 	db	87
   597  0021B0  00                 	db	0
   598  0021B1                     __end_of_TX_POWER_N_5_DB_MW:
   599                           	opt stack 0
   600  0021B1                     _TX_POWER_10_DB_MW:
   601                           	opt stack 0
   602  0021B1  31                 	db	49
   603  0021B2  30                 	db	48
   604  0021B3  6D                 	db	109
   605  0021B4  57                 	db	87
   606  0021B5  00                 	db	0
   607  0021B6                     __end_of_TX_POWER_10_DB_MW:
   608                           	opt stack 0
   609  0021B6                     _TX_POWER_13_DB_MW:
   610                           	opt stack 0
   611  0021B6  32                 	db	50
   612  0021B7  30                 	db	48
   613  0021B8  6D                 	db	109
   614  0021B9  57                 	db	87
   615  0021BA  00                 	db	0
   616  0021BB                     __end_of_TX_POWER_13_DB_MW:
   617                           	opt stack 0
   618  0021BB                     _CHANNEL_LABEL:
   619                           	opt stack 0
   620  0021BB  43                 	db	67
   621  0021BC  68                 	db	104
   622  0021BD  6E                 	db	110
   623  0021BE  00                 	db	0
   624  0021BF                     __end_of_CHANNEL_LABEL:
   625                           	opt stack 0
   626  0021BF                     _NOISE_LABEL:
   627                           	opt stack 0
   628  0021BF  4E                 	db	78
   629  0021C0  73                 	db	115
   630  0021C1  65                 	db	101
   631  0021C2  00                 	db	0
   632  0021C3                     __end_of_NOISE_LABEL:
   633                           	opt stack 0
   634  0021C3                     _POWER_LABEL:
   635                           	opt stack 0
   636  0021C3  50                 	db	80
   637  0021C4  77                 	db	119
   638  0021C5  72                 	db	114
   639  0021C6  00                 	db	0
   640  0021C7                     __end_of_POWER_LABEL:
   641                           	opt stack 0
   642  0021C7                     _TX_POWER_7_DB_MW:
   643                           	opt stack 0
   644  0021C7  35                 	db	53
   645  0021C8  6D                 	db	109
   646  0021C9  57                 	db	87
   647  0021CA  00                 	db	0
   648  0021CB                     __end_of_TX_POWER_7_DB_MW:
   649                           	opt stack 0
   650  0021CB                     _UPDATE_FREQUENCY_LABEL:
   651                           	opt stack 0
   652  0021CB  55                 	db	85
   653  0021CC  70                 	db	112
   654  0021CD  46                 	db	70
   655  0021CE  00                 	db	0
   656  0021CF                     __end_of_UPDATE_FREQUENCY_LABEL:
   657                           	opt stack 0
   658  0021CF                     _UPTIME_LABEL:
   659                           	opt stack 0
   660  0021CF  55                 	db	85
   661  0021D0  70                 	db	112
   662  0021D1  74                 	db	116
   663  0021D2  00                 	db	0
   664  0021D3                     __end_of_UPTIME_LABEL:
   665                           	opt stack 0
   666  0021D3                     _sd000:
   667                           	opt stack 0
   668  0021D3  04                 	db	4
   669  0021D4  03                 	db	3
   670  0021D5  0409               	dw	1033
   671  0021D7                     __end_of_sd000:
   672                           	opt stack 0
   673  0000                     _StaticSecurityKey_absconstaddr	set	8172
   674  0021D7                     STR_11:
   675                           
   676                           ; BSR set to: 0
   677  0021D7  49                 	db	73	;'I'
   678  0021D8  7C                 	db	124
   679  0021D9  25                 	db	37
   680  0021DA  30                 	db	48	;'0'
   681  0021DB  32                 	db	50	;'2'
   682  0021DC  78                 	db	120	;'x'
   683  0021DD  25                 	db	37
   684  0021DE  30                 	db	48	;'0'
   685  0021DF  32                 	db	50	;'2'
   686  0021E0  78                 	db	120	;'x'
   687  0021E1  3A                 	db	58	;':'
   688  0021E2  50                 	db	80	;'P'
   689  0021E3  4F                 	db	79	;'O'
   690  0021E4  57                 	db	87	;'W'
   691  0021E5  45                 	db	69	;'E'
   692  0021E6  52                 	db	82	;'R'
   693  0021E7  5F                 	db	95	;'_'
   694  0021E8  54                 	db	84	;'T'
   695  0021E9  45                 	db	69	;'E'
   696  0021EA  53                 	db	83	;'S'
   697  0021EB  54                 	db	84	;'T'
   698  0021EC  3A                 	db	58	;':'
   699  0021ED  20                 	db	32
   700  0021EE  65                 	db	101	;'e'
   701  0021EF  72                 	db	114	;'r'
   702  0021F0  72                 	db	114	;'r'
   703  0021F1  6F                 	db	111	;'o'
   704  0021F2  72                 	db	114	;'r'
   705  0021F3  20                 	db	32
   706  0021F4  73                 	db	115	;'s'
   707  0021F5  65                 	db	101	;'e'
   708  0021F6  6E                 	db	110	;'n'
   709  0021F7  64                 	db	100	;'d'
   710  0021F8  69                 	db	105	;'i'
   711  0021F9  6E                 	db	110	;'n'
   712  0021FA  67                 	db	103	;'g'
   713  0021FB  20                 	db	32
   714  0021FC  62                 	db	98	;'b'
   715  0021FD  61                 	db	97	;'a'
   716  0021FE  63                 	db	99	;'c'
   717  0021FF  6B                 	db	107	;'k'
   718  002200  2C                 	db	44
   719  002201  20                 	db	32
   720  002202  25                 	db	37
   721  002203  73                 	db	115	;'s'
   722  002204  2C                 	db	44
   723  002205  20                 	db	32
   724  002206  52                 	db	82	;'R'
   725  002207  53                 	db	83	;'S'
   726  002208  53                 	db	83	;'S'
   727  002209  49                 	db	73	;'I'
   728  00220A  3D                 	db	61	;'='
   729  00220B  25                 	db	37
   730  00220C  69                 	db	105	;'i'
   731  00220D  00                 	db	0
   732  00220E                     STR_13:
   733                           
   734                           ; BSR set to: 0
   735  00220E  49                 	db	73	;'I'
   736  00220F  7C                 	db	124
   737  002210  25                 	db	37
   738  002211  30                 	db	48	;'0'
   739  002212  32                 	db	50	;'2'
   740  002213  78                 	db	120	;'x'
   741  002214  25                 	db	37
   742  002215  30                 	db	48	;'0'
   743  002216  32                 	db	50	;'2'
   744  002217  78                 	db	120	;'x'
   745  002218  3A                 	db	58	;':'
   746  002219  50                 	db	80	;'P'
   747  00221A  49                 	db	73	;'I'
   748  00221B  4E                 	db	78	;'N'
   749  00221C  47                 	db	71	;'G'
   750  00221D  20                 	db	32
   751  00221E  65                 	db	101	;'e'
   752  00221F  72                 	db	114	;'r'
   753  002220  72                 	db	114	;'r'
   754  002221  6F                 	db	111	;'o'
   755  002222  72                 	db	114	;'r'
   756  002223  20                 	db	32
   757  002224  73                 	db	115	;'s'
   758  002225  65                 	db	101	;'e'
   759  002226  6E                 	db	110	;'n'
   760  002227  64                 	db	100	;'d'
   761  002228  69                 	db	105	;'i'
   762  002229  6E                 	db	110	;'n'
   763  00222A  67                 	db	103	;'g'
   764  00222B  20                 	db	32
   765  00222C  62                 	db	98	;'b'
   766  00222D  61                 	db	97	;'a'
   767  00222E  63                 	db	99	;'c'
   768  00222F  6B                 	db	107	;'k'
   769  002230  3A                 	db	58	;':'
   770  002231  20                 	db	32
   771  002232  70                 	db	112	;'p'
   772  002233  61                 	db	97	;'a'
   773  002234  79                 	db	121	;'y'
   774  002235  6C                 	db	108	;'l'
   775  002236  6F                 	db	111	;'o'
   776  002237  61                 	db	97	;'a'
   777  002238  64                 	db	100	;'d'
   778  002239  5F                 	db	95	;'_'
   779  00223A  73                 	db	115	;'s'
   780  00223B  69                 	db	105	;'i'
   781  00223C  7A                 	db	122	;'z'
   782  00223D  65                 	db	101	;'e'
   783  00223E  3D                 	db	61	;'='
   784  00223F  25                 	db	37
   785  002240  69                 	db	105	;'i'
   786  002241  00                 	db	0
   787  002242                     STR_12:
   788                           
   789                           ; BSR set to: 0
   790  002242  49                 	db	73	;'I'
   791  002243  7C                 	db	124
   792  002244  25                 	db	37
   793  002245  30                 	db	48	;'0'
   794  002246  32                 	db	50	;'2'
   795  002247  78                 	db	120	;'x'
   796  002248  25                 	db	37
   797  002249  30                 	db	48	;'0'
   798  00224A  32                 	db	50	;'2'
   799  00224B  78                 	db	120	;'x'
   800  00224C  3A                 	db	58	;':'
   801  00224D  50                 	db	80	;'P'
   802  00224E  49                 	db	73	;'I'
   803  00224F  4E                 	db	78	;'N'
   804  002250  47                 	db	71	;'G'
   805  002251  20                 	db	32
   806  002252  73                 	db	115	;'s'
   807  002253  75                 	db	117	;'u'
   808  002254  63                 	db	99	;'c'
   809  002255  63                 	db	99	;'c'
   810  002256  65                 	db	101	;'e'
   811  002257  73                 	db	115	;'s'
   812  002258  73                 	db	115	;'s'
   813  002259  66                 	db	102	;'f'
   814  00225A  75                 	db	117	;'u'
   815  00225B  6C                 	db	108	;'l'
   816  00225C  3A                 	db	58	;':'
   817  00225D  20                 	db	32
   818  00225E  70                 	db	112	;'p'
   819  00225F  61                 	db	97	;'a'
   820  002260  79                 	db	121	;'y'
   821  002261  6C                 	db	108	;'l'
   822  002262  6F                 	db	111	;'o'
   823  002263  61                 	db	97	;'a'
   824  002264  64                 	db	100	;'d'
   825  002265  5F                 	db	95	;'_'
   826  002266  73                 	db	115	;'s'
   827  002267  69                 	db	105	;'i'
   828  002268  7A                 	db	122	;'z'
   829  002269  65                 	db	101	;'e'
   830  00226A  3D                 	db	61	;'='
   831  00226B  25                 	db	37
   832  00226C  69                 	db	105	;'i'
   833  00226D  00                 	db	0
   834  00226E                     STR_4:
   835                           
   836                           ; BSR set to: 0
   837  00226E  49                 	db	73	;'I'
   838  00226F  7C                 	db	124
   839  002270  45                 	db	69	;'E'
   840  002271  72                 	db	114	;'r'
   841  002272  72                 	db	114	;'r'
   842  002273  6F                 	db	111	;'o'
   843  002274  72                 	db	114	;'r'
   844  002275  3A                 	db	58	;':'
   845  002276  20                 	db	32
   846  002277  75                 	db	117	;'u'
   847  002278  6E                 	db	110	;'n'
   848  002279  61                 	db	97	;'a'
   849  00227A  62                 	db	98	;'b'
   850  00227B  6C                 	db	108	;'l'
   851  00227C  65                 	db	101	;'e'
   852  00227D  20                 	db	32
   853  00227E  74                 	db	116	;'t'
   854  00227F  6F                 	db	111	;'o'
   855  002280  20                 	db	32
   856  002281  73                 	db	115	;'s'
   857  002282  65                 	db	101	;'e'
   858  002283  74                 	db	116	;'t'
   859  002284  20                 	db	32
   860  002285  63                 	db	99	;'c'
   861  002286  68                 	db	104	;'h'
   862  002287  61                 	db	97	;'a'
   863  002288  6E                 	db	110	;'n'
   864  002289  6E                 	db	110	;'n'
   865  00228A  65                 	db	101	;'e'
   866  00228B  6C                 	db	108	;'l'
   867  00228C  20                 	db	32
   868  00228D  25                 	db	37
   869  00228E  69                 	db	105	;'i'
   870  00228F  21                 	db	33
   871  002290  20                 	db	32
   872  002291  28                 	db	40
   873  002292  54                 	db	84	;'T'
   874  002293  5F                 	db	95	;'_'
   875  002294  54                 	db	84	;'T'
   876  002295  29                 	db	41
   877  002296  00                 	db	0
   878  002297                     STR_14:
   879                           
   880                           ; BSR set to: 0
   881  002297  49                 	db	73	;'I'
   882  002298  7C                 	db	124
   883  002299  25                 	db	37
   884  00229A  30                 	db	48	;'0'
   885  00229B  32                 	db	50	;'2'
   886  00229C  78                 	db	120	;'x'
   887  00229D  25                 	db	37
   888  00229E  30                 	db	48	;'0'
   889  00229F  32                 	db	50	;'2'
   890  0022A0  78                 	db	120	;'x'
   891  0022A1  3A                 	db	58	;':'
   892  0022A2  20                 	db	32
   893  0022A3  25                 	db	37
   894  0022A4  69                 	db	105	;'i'
   895  0022A5  20                 	db	32
   896  0022A6  63                 	db	99	;'c'
   897  0022A7  6F                 	db	111	;'o'
   898  0022A8  6D                 	db	109	;'m'
   899  0022A9  6D                 	db	109	;'m'
   900  0022AA  61                 	db	97	;'a'
   901  0022AB  6E                 	db	110	;'n'
   902  0022AC  64                 	db	100	;'d'
   903  0022AD  20                 	db	32
   904  0022AE  6E                 	db	110	;'n'
   905  0022AF  6F                 	db	111	;'o'
   906  0022B0  74                 	db	116	;'t'
   907  0022B1  20                 	db	32
   908  0022B2  72                 	db	114	;'r'
   909  0022B3  65                 	db	101	;'e'
   910  0022B4  63                 	db	99	;'c'
   911  0022B5  6F                 	db	111	;'o'
   912  0022B6  67                 	db	103	;'g'
   913  0022B7  6E                 	db	110	;'n'
   914  0022B8  69                 	db	105	;'i'
   915  0022B9  7A                 	db	122	;'z'
   916  0022BA  65                 	db	101	;'e'
   917  0022BB  64                 	db	100	;'d'
   918  0022BC  21                 	db	33
   919  0022BD  00                 	db	0
   920  0022BE                     STR_10:
   921                           
   922                           ; BSR set to: 0
   923  0022BE  49                 	db	73	;'I'
   924  0022BF  7C                 	db	124
   925  0022C0  25                 	db	37
   926  0022C1  30                 	db	48	;'0'
   927  0022C2  32                 	db	50	;'2'
   928  0022C3  78                 	db	120	;'x'
   929  0022C4  25                 	db	37
   930  0022C5  30                 	db	48	;'0'
   931  0022C6  32                 	db	50	;'2'
   932  0022C7  78                 	db	120	;'x'
   933  0022C8  3A                 	db	58	;':'
   934  0022C9  50                 	db	80	;'P'
   935  0022CA  4F                 	db	79	;'O'
   936  0022CB  57                 	db	87	;'W'
   937  0022CC  45                 	db	69	;'E'
   938  0022CD  52                 	db	82	;'R'
   939  0022CE  5F                 	db	95	;'_'
   940  0022CF  54                 	db	84	;'T'
   941  0022D0  45                 	db	69	;'E'
   942  0022D1  53                 	db	83	;'S'
   943  0022D2  54                 	db	84	;'T'
   944  0022D3  3A                 	db	58	;':'
   945  0022D4  20                 	db	32
   946  0022D5  4F                 	db	79	;'O'
   947  0022D6  4B                 	db	75	;'K'
   948  0022D7  2C                 	db	44
   949  0022D8  20                 	db	32
   950  0022D9  25                 	db	37
   951  0022DA  73                 	db	115	;'s'
   952  0022DB  2C                 	db	44
   953  0022DC  20                 	db	32
   954  0022DD  52                 	db	82	;'R'
   955  0022DE  53                 	db	83	;'S'
   956  0022DF  53                 	db	83	;'S'
   957  0022E0  49                 	db	73	;'I'
   958  0022E1  3D                 	db	61	;'='
   959  0022E2  25                 	db	37
   960  0022E3  69                 	db	105	;'i'
   961  0022E4  00                 	db	0
   962  0022E5                     STR_3:
   963                           
   964                           ; BSR set to: 0
   965  0022E5  49                 	db	73	;'I'
   966  0022E6  7C                 	db	124
   967  0022E7  62                 	db	98	;'b'
   968  0022E8  65                 	db	101	;'e'
   969  0022E9  73                 	db	115	;'s'
   970  0022EA  74                 	db	116	;'t'
   971  0022EB  20                 	db	32
   972  0022EC  63                 	db	99	;'c'
   973  0022ED  68                 	db	104	;'h'
   974  0022EE  61                 	db	97	;'a'
   975  0022EF  6E                 	db	110	;'n'
   976  0022F0  6E                 	db	110	;'n'
   977  0022F1  65                 	db	101	;'e'
   978  0022F2  6C                 	db	108	;'l'
   979  0022F3  3A                 	db	58	;':'
   980  0022F4  20                 	db	32
   981  0022F5  25                 	db	37
   982  0022F6  69                 	db	105	;'i'
   983  0022F7  20                 	db	32
   984  0022F8  28                 	db	40
   985  0022F9  6E                 	db	110	;'n'
   986  0022FA  6F                 	db	111	;'o'
   987  0022FB  69                 	db	105	;'i'
   988  0022FC  73                 	db	115	;'s'
   989  0022FD  65                 	db	101	;'e'
   990  0022FE  20                 	db	32
   991  0022FF  3D                 	db	61	;'='
   992  002300  3D                 	db	61	;'='
   993  002301  20                 	db	32
   994  002302  25                 	db	37
   995  002303  69                 	db	105	;'i'
   996  002304  29                 	db	41
   997  002305  00                 	db	0
   998  002306                     STR_2:
   999                           
  1000                           ; BSR set to: 0
  1001  002306  49                 	db	73	;'I'
  1002  002307  7C                 	db	124
  1003  002308  73                 	db	115	;'s'
  1004  002309  63                 	db	99	;'c'
  1005  00230A  61                 	db	97	;'a'
  1006  00230B  6E                 	db	110	;'n'
  1007  00230C  6E                 	db	110	;'n'
  1008  00230D  69                 	db	105	;'i'
  1009  00230E  6E                 	db	110	;'n'
  1010  00230F  67                 	db	103	;'g'
  1011  002310  20                 	db	32
  1012  002311  63                 	db	99	;'c'
  1013  002312  68                 	db	104	;'h'
  1014  002313  61                 	db	97	;'a'
  1015  002314  6E                 	db	110	;'n'
  1016  002315  6E                 	db	110	;'n'
  1017  002316  65                 	db	101	;'e'
  1018  002317  6C                 	db	108	;'l'
  1019  002318  73                 	db	115	;'s'
  1020  002319  20                 	db	32
  1021  00231A  66                 	db	102	;'f'
  1022  00231B  6F                 	db	111	;'o'
  1023  00231C  72                 	db	114	;'r'
  1024  00231D  20                 	db	32
  1025  00231E  6E                 	db	110	;'n'
  1026  00231F  6F                 	db	111	;'o'
  1027  002320  69                 	db	105	;'i'
  1028  002321  73                 	db	115	;'s'
  1029  002322  65                 	db	101	;'e'
  1030  002323  2E                 	db	46
  1031  002324  2E                 	db	46
  1032  002325  2E                 	db	46
  1033  002326  00                 	db	0
  1034  002327                     STR_9:
  1035                           
  1036                           ; BSR set to: 0
  1037  002327  49                 	db	73	;'I'
  1038  002328  7C                 	db	124
  1039  002329  61                 	db	97	;'a'
  1040  00232A  63                 	db	99	;'c'
  1041  00232B  63                 	db	99	;'c'
  1042  00232C  65                 	db	101	;'e'
  1043  00232D  70                 	db	112	;'p'
  1044  00232E  74                 	db	116	;'t'
  1045  00232F  69                 	db	105	;'i'
  1046  002330  6E                 	db	110	;'n'
  1047  002331  67                 	db	103	;'g'
  1048  002332  20                 	db	32
  1049  002333  73                 	db	115	;'s'
  1050  002334  63                 	db	99	;'c'
  1051  002335  61                 	db	97	;'a'
  1052  002336  6E                 	db	110	;'n'
  1053  002337  73                 	db	115	;'s'
  1054  002338  20                 	db	32
  1055  002339  26                 	db	38
  1056  00233A  20                 	db	32
  1057  00233B  63                 	db	99	;'c'
  1058  00233C  6F                 	db	111	;'o'
  1059  00233D  6E                 	db	110	;'n'
  1060  00233E  6E                 	db	110	;'n'
  1061  00233F  65                 	db	101	;'e'
  1062  002340  63                 	db	99	;'c'
  1063  002341  74                 	db	116	;'t'
  1064  002342  69                 	db	105	;'i'
  1065  002343  6F                 	db	111	;'o'
  1066  002344  6E                 	db	110	;'n'
  1067  002345  73                 	db	115	;'s'
  1068  002346  00                 	db	0
  1069  002347                     STR_7:
  1070                           
  1071                           ; BSR set to: 0
  1072  002347  49                 	db	73	;'I'
  1073  002348  7C                 	db	124
  1074  002349  6F                 	db	111	;'o'
  1075  00234A  70                 	db	112	;'p'
  1076  00234B  65                 	db	101	;'e'
  1077  00234C  72                 	db	114	;'r'
  1078  00234D  61                 	db	97	;'a'
  1079  00234E  74                 	db	116	;'t'
  1080  00234F  6F                 	db	111	;'o'
  1081  002350  72                 	db	114	;'r'
  1082  002351  27                 	db	39
  1083  002352  73                 	db	115	;'s'
  1084  002353  20                 	db	32
  1085  002354  61                 	db	97	;'a'
  1086  002355  64                 	db	100	;'d'
  1087  002356  64                 	db	100	;'d'
  1088  002357  72                 	db	114	;'r'
  1089  002358  65                 	db	101	;'e'
  1090  002359  73                 	db	115	;'s'
  1091  00235A  73                 	db	115	;'s'
  1092  00235B  3A                 	db	58	;':'
  1093  00235C  20                 	db	32
  1094  00235D  25                 	db	37
  1095  00235E  30                 	db	48	;'0'
  1096  00235F  32                 	db	50	;'2'
  1097  002360  78                 	db	120	;'x'
  1098  002361  25                 	db	37
  1099  002362  30                 	db	48	;'0'
  1100  002363  32                 	db	50	;'2'
  1101  002364  78                 	db	120	;'x'
  1102  002365  00                 	db	0
  1103  002366                     STR_6:
  1104                           
  1105                           ; BSR set to: 0
  1106  002366  49                 	db	73	;'I'
  1107  002367  7C                 	db	124
  1108  002368  50                 	db	80	;'P'
  1109  002369  41                 	db	65	;'A'
  1110  00236A  4E                 	db	78	;'N'
  1111  00236B  49                 	db	73	;'I'
  1112  00236C  44                 	db	68	;'D'
  1113  00236D  3A                 	db	58	;':'
  1114  00236E  25                 	db	37
  1115  00236F  30                 	db	48	;'0'
  1116  002370  32                 	db	50	;'2'
  1117  002371  78                 	db	120	;'x'
  1118  002372  25                 	db	37
  1119  002373  30                 	db	48	;'0'
  1120  002374  32                 	db	50	;'2'
  1121  002375  78                 	db	120	;'x'
  1122  002376  20                 	db	32
  1123  002377  43                 	db	67	;'C'
  1124  002378  68                 	db	104	;'h'
  1125  002379  3A                 	db	58	;':'
  1126  00237A  25                 	db	37
  1127  00237B  30                 	db	48	;'0'
  1128  00237C  32                 	db	50	;'2'
  1129  00237D  64                 	db	100	;'d'
  1130  00237E  00                 	db	0
  1131  00237F                     STR_5:
  1132                           
  1133                           ; BSR set to: 0
  1134  00237F  49                 	db	73	;'I'
  1135  002380  7C                 	db	124
  1136  002381  63                 	db	99	;'c'
  1137  002382  72                 	db	114	;'r'
  1138  002383  65                 	db	101	;'e'
  1139  002384  61                 	db	97	;'a'
  1140  002385  74                 	db	116	;'t'
  1141  002386  69                 	db	105	;'i'
  1142  002387  6E                 	db	110	;'n'
  1143  002388  67                 	db	103	;'g'
  1144  002389  20                 	db	32
  1145  00238A  6E                 	db	110	;'n'
  1146  00238B  65                 	db	101	;'e'
  1147  00238C  74                 	db	116	;'t'
  1148  00238D  77                 	db	119	;'w'
  1149  00238E  6F                 	db	111	;'o'
  1150  00238F  72                 	db	114	;'r'
  1151  002390  6B                 	db	107	;'k'
  1152  002391  2E                 	db	46
  1153  002392  2E                 	db	46
  1154  002393  2E                 	db	46
  1155  002394  00                 	db	0
  1156  002395                     STR_16:
  1157                           
  1158                           ; BSR set to: 0
  1159  002395  30                 	db	48	;'0'
  1160  002396  31                 	db	49	;'1'
  1161  002397  32                 	db	50	;'2'
  1162  002398  33                 	db	51	;'3'
  1163  002399  34                 	db	52	;'4'
  1164  00239A  35                 	db	53	;'5'
  1165  00239B  36                 	db	54	;'6'
  1166  00239C  37                 	db	55	;'7'
  1167  00239D  38                 	db	56	;'8'
  1168  00239E  39                 	db	57	;'9'
  1169  00239F  61                 	db	97	;'a'
  1170  0023A0  62                 	db	98	;'b'
  1171  0023A1  63                 	db	99	;'c'
  1172  0023A2  64                 	db	100	;'d'
  1173  0023A3  65                 	db	101	;'e'
  1174  0023A4  66                 	db	102	;'f'
  1175  0023A5  00                 	db	0
  1176  0023A6                     STR_8:
  1177                           
  1178                           ; BSR set to: 0
  1179  0023A6  49                 	db	73	;'I'
  1180  0023A7  7C                 	db	124
  1181  0023A8  73                 	db	115	;'s'
  1182  0023A9  74                 	db	116	;'t'
  1183  0023AA  61                 	db	97	;'a'
  1184  0023AB  74                 	db	116	;'t'
  1185  0023AC  75                 	db	117	;'u'
  1186  0023AD  73                 	db	115	;'s'
  1187  0023AE  3A                 	db	58	;':'
  1188  0023AF  20                 	db	32
  1189  0023B0  72                 	db	114	;'r'
  1190  0023B1  65                 	db	101	;'e'
  1191  0023B2  61                 	db	97	;'a'
  1192  0023B3  64                 	db	100	;'d'
  1193  0023B4  79                 	db	121	;'y'
  1194  0023B5  21                 	db	33
  1195  0023B6  00                 	db	0
  1196  0023B7                     STR_1:
  1197                           
  1198                           ; BSR set to: 0
  1199  0023B7  49                 	db	73	;'I'
  1200  0023B8  7C                 	db	124
  1201  0023B9  52                 	db	82	;'R'
  1202  0023BA  45                 	db	69	;'E'
  1203  0023BB  53                 	db	83	;'S'
  1204  0023BC  45                 	db	69	;'E'
  1205  0023BD  54                 	db	84	;'T'
  1206  0023BE  00                 	db	0
  1207  0023BF                     STR_15:
  1208                           
  1209                           ; BSR set to: 0
  1210  0023BF  28                 	db	40
  1211  0023C0  6E                 	db	110	;'n'
  1212  0023C1  75                 	db	117	;'u'
  1213  0023C2  6C                 	db	108	;'l'
  1214  0023C3  6C                 	db	108	;'l'
  1215  0023C4  29                 	db	41
  1216  0023C5  00                 	db	0
  1217                           
  1218                           ; #config settings
  1219  0023C6  00                 	db	0	; dummy byte at the end
  1220  0000                     
  1221                           	psect	_StaticSecurityKey_const
  1222  001FEC                     __p_StaticSecurityKey_const:
  1223                           	opt stack 0
  1224  001FEC                     _StaticSecurityKey:
  1225                           	opt stack 0
  1226  001FEC  00                 	db	0
  1227  001FED  01                 	db	1
  1228  001FEE  02                 	db	2
  1229  001FEF  03                 	db	3
  1230  001FF0  04                 	db	4
  1231  001FF1  05                 	db	5
  1232  001FF2  06                 	db	6
  1233  001FF3  07                 	db	7
  1234  001FF4                     __end_of_StaticSecurityKey:
  1235                           	opt stack 0
  1236  0000                     _myMODEL_absconstaddr	set	131060
  1237                           
  1238                           	psect	_myMODEL_const
  1239  01FFF4                     __p_myMODEL_const:
  1240                           	opt stack 0
  1241  01FFF4                     _myMODEL:
  1242                           	opt stack 0
  1243  01FFF4  00                 	db	0
  1244  01FFF5  03                 	db	3
  1245  01FFF6                     __end_of_myMODEL:
  1246                           	opt stack 0
  1247  0000                     _myUID_absconstaddr	set	131062
  1248                           
  1249                           	psect	_myUID_const
  1250  01FFF6                     __p_myUID_const:
  1251                           	opt stack 0
  1252  01FFF6                     _myUID:
  1253                           	opt stack 0
  1254  01FFF6  00                 	db	0
  1255  01FFF7  01                 	db	1
  1256  01FFF8                     __end_of_myUID:
  1257                           	opt stack 0
  1258  0000                     _PPSCONbits	set	3775
  1259  0000                     _RPINR1	set	3809
  1260  0000                     _RPINR21	set	3836
  1261  0000                     _RPINR22	set	3837
  1262  0000                     _RPOR11	set	3787
  1263  0000                     _RPOR4	set	3780
  1264  0000                     _RPOR5	set	3781
  1265  0000                     _ALRMCFGbits	set	3911
  1266  0000                     _ANCON0	set	3912
  1267  0000                     _ANCON1	set	3913
  1268  0000                     _CCPTMRS0	set	3922
  1269  0000                     _RTCCAL	set	3902
  1270  0000                     _RTCCFG	set	3903
  1271  0000                     _RTCCFGbits	set	3903
  1272  0000                     _RTCVALHbits	set	3899
  1273  0000                     _RTCVALLbits	set	3898
  1274  0000                     _UADDR	set	3896
  1275  0000                     _UCFG	set	3897
  1276  0000                     _UEIE	set	3895
  1277  0000                     _UEP0bits	set	3878
  1278  0000                     _UIE	set	3894
  1279  0000                     _UIEbits	set	3894
  1280  0000                     _UEP0	set	3878
  1281  0000                     _UEP1	set	3879
  1282  0000                     _RTCEN	set	31231
  1283  0000                     _RTCOE	set	31226
  1284  0000                     _CCP1CONbits	set	4026
  1285  0000                     _CCPR1L	set	4027
  1286  0000                     _EECON2	set	4007
  1287  0000                     _INTCON2bits	set	4081
  1288  0000                     _INTCON3bits	set	4080
  1289  0000                     _INTCONbits	set	4082
  1290  0000                     _IPR2bits	set	4002
  1291  0000                     _IPR3bits	set	4005
  1292  0000                     _LATAbits	set	3977
  1293  0000                     _LATBbits	set	3978
  1294  0000                     _LATCbits	set	3979
  1295  0000                     _OSCTUNEbits	set	3995
  1296  0000                     _PIE1bits	set	3997
  1297  0000                     _PIE2bits	set	4000
  1298  0000                     _PIE3bits	set	4003
  1299  0000                     _PIR1bits	set	3998
  1300  0000                     _PIR2bits	set	4001
  1301  0000                     _PIR3bits	set	4004
  1302  0000                     _PR2	set	4043
  1303  0000                     _PR4	set	3959
  1304  0000                     _RCONbits	set	4048
  1305  0000                     _SSP2BUF	set	3957
  1306  0000                     _SSP2CON1	set	3954
  1307  0000                     _SSP2CON1bits	set	3954
  1308  0000                     _SSP2STAT	set	3955
  1309  0000                     _T1CON	set	4045
  1310  0000                     _T1CONbits	set	4045
  1311  0000                     _T2CONbits	set	4042
  1312  0000                     _T4CONbits	set	3958
  1313  0000                     _TMR1H	set	4047
  1314  0000                     _TMR1L	set	4046
  1315  0000                     _TRISA	set	3986
  1316  0000                     _TRISAbits	set	3986
  1317  0000                     _TRISB	set	3987
  1318  0000                     _TRISBbits	set	3987
  1319  0000                     _TRISC	set	3988
  1320  0000                     _TRISCbits	set	3988
  1321  0000                     _UCON	set	3941
  1322  0000                     _UCONbits	set	3941
  1323  0000                     _UEIR	set	3939
  1324  0000                     _UIR	set	3938
  1325  0000                     _UIRbits	set	3938
  1326  0000                     _USTAT	set	3940
  1327                           
  1328                           	psect	cinit
  1329  008ED0                     __pcinit:
  1330                           	opt stack 0
  1331  008ED0                     start_initialization:
  1332                           	opt stack 0
  1333  008ED0                     __initialization:
  1334                           	opt stack 0
  1335                           
  1336                           ; Clear objects allocated to BIGRAMl (576 bytes)
  1337  008ED0  EE06  F000         	lfsr	0,__pbssBIGRAMl
  1338  008ED4  EE12 F040          	lfsr	1,576
  1339  008ED8                     clear_0:
  1340  008ED8  6AEE               	clrf	postinc0,c
  1341  008EDA  50E5               	movf	postdec1,w,c
  1342  008EDC  50E1               	movf	fsr1l,w,c
  1343  008EDE  E1FC               	bnz	clear_0
  1344  008EE0  50E2               	movf	fsr1h,w,c
  1345  008EE2  E1FA               	bnz	clear_0
  1346                           
  1347                           ; Clear objects allocated to BANK5 (256 bytes)
  1348  008EE4  EE05  F000         	lfsr	0,__pbssBANK5
  1349  008EE8  EE11 F000          	lfsr	1,256
  1350  008EEC                     clear_1:
  1351  008EEC  6AEE               	clrf	postinc0,c
  1352  008EEE  50E5               	movf	postdec1,w,c
  1353  008EF0  50E1               	movf	fsr1l,w,c
  1354  008EF2  E1FC               	bnz	clear_1
  1355  008EF4  50E2               	movf	fsr1h,w,c
  1356  008EF6  E1FA               	bnz	clear_1
  1357                           
  1358                           ; Clear objects allocated to BANK4 (64 bytes)
  1359  008EF8  EE04  F000         	lfsr	0,__pbssBANK4
  1360  008EFC  0E40               	movlw	64
  1361  008EFE                     clear_2:
  1362  008EFE  6AEE               	clrf	postinc0,c
  1363  008F00  06E8               	decf	wreg,f,c
  1364  008F02  E1FD               	bnz	clear_2
  1365                           
  1366                           ; Clear objects allocated to BANK3 (196 bytes)
  1367  008F04  EE03  F000         	lfsr	0,__pbssBANK3
  1368  008F08  0EC4               	movlw	196
  1369  008F0A                     clear_3:
  1370  008F0A  6AEE               	clrf	postinc0,c
  1371  008F0C  06E8               	decf	wreg,f,c
  1372  008F0E  E1FD               	bnz	clear_3
  1373                           
  1374                           ; Clear objects allocated to BANK2 (249 bytes)
  1375  008F10  EE02  F000         	lfsr	0,__pbssBANK2
  1376  008F14  0EF9               	movlw	249
  1377  008F16                     clear_4:
  1378  008F16  6AEE               	clrf	postinc0,c
  1379  008F18  06E8               	decf	wreg,f,c
  1380  008F1A  E1FD               	bnz	clear_4
  1381                           
  1382                           ; Clear objects allocated to BANK1 (104 bytes)
  1383  008F1C  EE01  F090         	lfsr	0,__pbssBANK1
  1384  008F20  0E68               	movlw	104
  1385  008F22                     clear_5:
  1386  008F22  6AEE               	clrf	postinc0,c
  1387  008F24  06E8               	decf	wreg,f,c
  1388  008F26  E1FD               	bnz	clear_5
  1389                           
  1390                           ; Clear objects allocated to BANK0 (65 bytes)
  1391  008F28  EE00  F0A3         	lfsr	0,__pbssBANK0
  1392  008F2C  0E41               	movlw	65
  1393  008F2E                     clear_6:
  1394  008F2E  6AEE               	clrf	postinc0,c
  1395  008F30  06E8               	decf	wreg,f,c
  1396  008F32  E1FD               	bnz	clear_6
  1397                           
  1398                           ; Clear objects allocated to COMRAM (39 bytes)
  1399  008F34  EE00  F032         	lfsr	0,__pbssCOMRAM
  1400  008F38  0E27               	movlw	39
  1401  008F3A                     clear_7:
  1402  008F3A  6AEE               	clrf	postinc0,c
  1403  008F3C  06E8               	decf	wreg,f,c
  1404  008F3E  E1FD               	bnz	clear_7
  1405                           
  1406                           ; Initialize objects allocated to BANK2 (6 bytes)
  1407                           ; load TBLPTR registers with __pidataBANK2
  1408  008F40  0E8A               	movlw	low __pidataBANK2
  1409  008F42  6EF6               	movwf	tblptrl,c
  1410  008F44  0EAF               	movlw	high __pidataBANK2
  1411  008F46  6EF7               	movwf	tblptrh,c
  1412  008F48  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1413  008F4A  6EF8               	movwf	tblptru,c
  1414  008F4C  EE02  F0F9         	lfsr	0,__pdataBANK2
  1415  008F50  EE10 F006          	lfsr	1,6
  1416  008F54                     copy_data0:
  1417  008F54  0009               	tblrd		*+
  1418  008F56  CFF5 FFEE          	movff	tablat,postinc0
  1419  008F5A  50E5               	movf	postdec1,w,c
  1420  008F5C  50E1               	movf	fsr1l,w,c
  1421  008F5E  E1FA               	bnz	copy_data0
  1422                           
  1423                           ; Initialize objects allocated to BANK1 (2 bytes)
  1424                           ; load TBLPTR registers with __pidataBANK1
  1425  008F60  0E93               	movlw	low __pidataBANK1
  1426  008F62  6EF6               	movwf	tblptrl,c
  1427  008F64  0EAF               	movlw	high __pidataBANK1
  1428  008F66  6EF7               	movwf	tblptrh,c
  1429  008F68  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1430  008F6A  6EF8               	movwf	tblptru,c
  1431  008F6C  0009               	tblrd		*+	;fetch initializer
  1432  008F6E  CFF5 F1F8          	movff	tablat,__pdataBANK1
  1433  008F72  0009               	tblrd		*+	;fetch initializer
  1434  008F74  CFF5 F1F9          	movff	tablat,__pdataBANK1+1
  1435                           
  1436                           ; Initialize objects allocated to BANK0 (1 bytes)
  1437                           ; load TBLPTR registers with __pidataBANK0
  1438  008F78  0E98               	movlw	low __pidataBANK0
  1439  008F7A  6EF6               	movwf	tblptrl,c
  1440  008F7C  0EAF               	movlw	high __pidataBANK0
  1441  008F7E  6EF7               	movwf	tblptrh,c
  1442  008F80  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1443  008F82  6EF8               	movwf	tblptru,c
  1444  008F84  0009               	tblrd		*+	;fetch initializer
  1445  008F86  CFF5 F0E4          	movff	tablat,__pdataBANK0
  1446                           
  1447                           ; Initialize objects allocated to COMRAM (3 bytes)
  1448                           ; load TBLPTR registers with __pidataCOMRAM
  1449  008F8A  0E90               	movlw	low __pidataCOMRAM
  1450  008F8C  6EF6               	movwf	tblptrl,c
  1451  008F8E  0EAF               	movlw	high __pidataCOMRAM
  1452  008F90  6EF7               	movwf	tblptrh,c
  1453  008F92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1454  008F94  6EF8               	movwf	tblptru,c
  1455  008F96  0009               	tblrd		*+	;fetch initializer
  1456  008F98  CFF5 F059          	movff	tablat,__pdataCOMRAM
  1457  008F9C  0009               	tblrd		*+	;fetch initializer
  1458  008F9E  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
  1459  008FA2  0009               	tblrd		*+	;fetch initializer
  1460  008FA4  CFF5 F05B          	movff	tablat,__pdataCOMRAM+2
  1461  008FA8                     end_of_initialization:
  1462                           	opt stack 0
  1463  008FA8                     __end_of__initialization:
  1464                           	opt stack 0
  1465  008FA8  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1466  008FAA  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1467  008FAC  0100               	movlb	0
  1468  008FAE  EFA6  F01E         	goto	_main	;jump to C main() function
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1h	equ	0xFE2
  1477                           fsr1l	equ	0xFE1
  1478                           
  1479                           	psect	bssCOMRAM
  1480  000032                     __pbssCOMRAM:
  1481                           	opt stack 0
  1482  000032                     _m_failed_messages:
  1483                           	opt stack 0
  1484  000032                     	ds	4
  1485  000036                     _pBDTEntryEP0OutCurrent:
  1486                           	opt stack 0
  1487  000036                     	ds	2
  1488  000038                     _pBDTEntryEP0OutNext:
  1489                           	opt stack 0
  1490  000038                     	ds	2
  1491  00003A                     _pDst:
  1492                           	opt stack 0
  1493  00003A                     	ds	2
  1494  00003C                     _pUsbBuffer:
  1495                           	opt stack 0
  1496  00003C                     	ds	2
  1497  00003E                     do_NETWORK_REGISTER@F10203:
  1498                           	opt stack 0
  1499  00003E                     	ds	2
  1500  000040                     do_UPDATE@F10231:
  1501                           	opt stack 0
  1502  000040                     	ds	2
  1503  000042                     _BothEP0OutUOWNsSet:
  1504                           	opt stack 0
  1505  000042                     	ds	1
  1506  000043                     _LED_increasing:
  1507                           	opt stack 0
  1508  000043                     	ds	1
  1509  000044                     _RemoteWakeup:
  1510                           	opt stack 0
  1511  000044                     	ds	1
  1512  000045                     _USBBusIsSuspended:
  1513                           	opt stack 0
  1514  000045                     	ds	1
  1515  000046                     _USBDeferINDataStagePackets:
  1516                           	opt stack 0
  1517  000046                     	ds	1
  1518  000047                     _USBDeferOUTDataStagePackets:
  1519                           	opt stack 0
  1520  000047                     	ds	1
  1521  000048                     _USBDeferStatusStagePacket:
  1522                           	opt stack 0
  1523  000048                     	ds	1
  1524  000049                     _USBDeviceState:
  1525                           	opt stack 0
  1526  000049                     	ds	1
  1527  00004A                     _USBStatusStageEnabledFlag1:
  1528                           	opt stack 0
  1529  00004A                     	ds	1
  1530  00004B                     _USBStatusStageEnabledFlag2:
  1531                           	opt stack 0
  1532  00004B                     	ds	1
  1533  00004C                     _USBStatusStageTimeoutCounter:
  1534                           	opt stack 0
  1535  00004C                     	ds	1
  1536  00004D                     _controlTransferState:
  1537                           	opt stack 0
  1538  00004D                     	ds	1
  1539  00004E                     _endpoint_number:
  1540                           	opt stack 0
  1541  00004E                     	ds	1
  1542  00004F                     _last_rssi:
  1543                           	opt stack 0
  1544  00004F                     	ds	1
  1545  000050                     _myAppState:
  1546                           	opt stack 0
  1547  000050                     	ds	1
  1548  000051                     _repeat_full:
  1549                           	opt stack 0
  1550  000051                     	ds	1
  1551  000052                     _shortPacketStatus:
  1552                           	opt stack 0
  1553  000052                     	ds	1
  1554  000053                     _status_led:
  1555                           	opt stack 0
  1556  000053                     	ds	1
  1557  000054                     _USBActiveConfiguration:
  1558                           	opt stack 0
  1559  000054                     	ds	1
  1560  000055                     _USBAlternateInterface:
  1561                           	opt stack 0
  1562  000055                     	ds	1
  1563  000056                     _USTATcopy:
  1564                           	opt stack 0
  1565  000056                     	ds	1
  1566  000057                     _active_protocol:
  1567                           	opt stack 0
  1568  000057                     	ds	1
  1569  000058                     _idle_rate:
  1570                           	opt stack 0
  1571  000058                     	ds	1
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           postdec1	equ	0xFE5
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           
  1582                           	psect	dataCOMRAM
  1583  000059                     __pdataCOMRAM:
  1584                           	opt stack 0
  1585  000059                     _LED_brightness:
  1586                           	opt stack 0
  1587  000059                     	ds	2
  1588  00005B                     _timer_count:
  1589                           	opt stack 0
  1590  00005B                     	ds	1
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1h	equ	0xFE2
  1599                           fsr1l	equ	0xFE1
  1600                           
  1601                           	psect	bssBANK0
  1602  0000A3                     __pbssBANK0:
  1603                           	opt stack 0
  1604  0000A3                     _outPipes:
  1605                           	opt stack 0
  1606  0000A3                     	ds	9
  1607  0000AC                     _RouterFailures:
  1608                           	opt stack 0
  1609  0000AC                     	ds	8
  1610  0000B4                     _RoutingTable:
  1611                           	opt stack 0
  1612  0000B4                     	ds	8
  1613  0000BC                     _mySecurityKey:
  1614                           	opt stack 0
  1615  0000BC                     	ds	8
  1616  0000C4                     _inPipes:
  1617                           	opt stack 0
  1618  0000C4                     	ds	6
  1619  0000CA                     _m_uptime_seconds:
  1620                           	opt stack 0
  1621  0000CA                     	ds	4
  1622  0000CE                     _pBDTEntryIn:
  1623                           	opt stack 0
  1624  0000CE                     	ds	4
  1625  0000D2                     _pBDTEntryOut:
  1626                           	opt stack 0
  1627  0000D2                     	ds	4
  1628  0000D6                     _USBInHandle:
  1629                           	opt stack 0
  1630  0000D6                     	ds	2
  1631  0000D8                     _ep_data_in:
  1632                           	opt stack 0
  1633  0000D8                     	ds	2
  1634  0000DA                     _ep_data_out:
  1635                           	opt stack 0
  1636  0000DA                     	ds	2
  1637  0000DC                     _IRQ1_Received:
  1638                           	opt stack 0
  1639  0000DC                     	ds	1
  1640  0000DD                     _RF_Mode:
  1641                           	opt stack 0
  1642  0000DD                     	ds	1
  1643  0000DE                     _RSSIVal:
  1644                           	opt stack 0
  1645  0000DE                     	ds	1
  1646  0000DF                     _TxMACSeq:
  1647                           	opt stack 0
  1648  0000DF                     	ds	1
  1649  0000E0                     _hasAck:
  1650                           	opt stack 0
  1651  0000E0                     	ds	1
  1652  0000E1                     _tempNodeStatus:
  1653                           	opt stack 0
  1654  0000E1                     	ds	1
  1655  0000E2                     _timerExtension1:
  1656                           	opt stack 0
  1657  0000E2                     	ds	1
  1658  0000E3                     _timerExtension2:
  1659                           	opt stack 0
  1660  0000E3                     	ds	1
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           postdec1	equ	0xFE5
  1668                           fsr1h	equ	0xFE2
  1669                           fsr1l	equ	0xFE1
  1670                           
  1671                           	psect	dataBANK0
  1672  0000E4                     __pdataBANK0:
  1673                           	opt stack 0
  1674  0000E4                     _m_update_frequency:
  1675                           	opt stack 0
  1676  0000E4                     	ds	1
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1h	equ	0xFE2
  1685                           fsr1l	equ	0xFE1
  1686                           
  1687                           	psect	bssBANK1
  1688  000190                     __pbssBANK1:
  1689                           	opt stack 0
  1690  000190                     _rxMessage:
  1691                           	opt stack 0
  1692  000190                     	ds	10
  1693  00019A                     _MACRxPacket:
  1694                           	opt stack 0
  1695  00019A                     	ds	8
  1696  0001A2                     _OutgoingFrameCounter:
  1697                           	opt stack 0
  1698  0001A2                     	ds	4
  1699  0001A6                     _m_sent_messages:
  1700                           	opt stack 0
  1701  0001A6                     	ds	4
  1702  0001AA                     _tempLongAddress:
  1703                           	opt stack 0
  1704  0001AA                     	ds	4
  1705  0001AE                     _MACInitParams:
  1706                           	opt stack 0
  1707  0001AE                     	ds	3
  1708  0001B1                     _MTP:
  1709                           	opt stack 0
  1710  0001B1                     	ds	3
  1711  0001B4                     _AcknowledgementAddr:
  1712                           	opt stack 0
  1713  0001B4                     	ds	2
  1714  0001B6                     _MiWiStateMachine:
  1715                           	opt stack 0
  1716  0001B6                     	ds	2
  1717  0001B8                     _USBOutHandle:
  1718                           	opt stack 0
  1719  0001B8                     	ds	2
  1720  0001BA                     _p_buffer:
  1721                           	opt stack 0
  1722  0001BA                     	ds	2
  1723  0001BC                     _tempPANID:
  1724                           	opt stack 0
  1725  0001BC                     	ds	2
  1726  0001BE                     _ActiveScanResultIndex:
  1727                           	opt stack 0
  1728  0001BE                     	ds	1
  1729  0001BF                     _BestChannel:
  1730                           	opt stack 0
  1731  0001BF                     	ds	1
  1732  0001C0                     _ConnMode:
  1733                           	opt stack 0
  1734  0001C0                     	ds	1
  1735  0001C1                     _MACSeq:
  1736                           	opt stack 0
  1737  0001C1                     	ds	1
  1738  0001C2                     _MiWiAckRequired:
  1739                           	opt stack 0
  1740  0001C2                     	ds	1
  1741  0001C3                     _MiWiCapacityInfo:
  1742                           	opt stack 0
  1743  0001C3                     	ds	1
  1744  0001C4                     _MiWiSeqNum:
  1745                           	opt stack 0
  1746  0001C4                     	ds	1
  1747  0001C5                     _RSSILock:
  1748                           	opt stack 0
  1749  0001C5                     	ds	1
  1750  0001C6                     _ReceivedBankIndex:
  1751                           	opt stack 0
  1752  0001C6                     	ds	1
  1753  0001C7                     _TxData:
  1754                           	opt stack 0
  1755  0001C7                     	ds	1
  1756  0001C8                     _knownCoordinators:
  1757                           	opt stack 0
  1758  0001C8                     	ds	1
  1759  0001C9                     _m_power:
  1760                           	opt stack 0
  1761  0001C9                     	ds	1
  1762  0001CA                     _myParent:
  1763                           	opt stack 0
  1764  0001CA                     	ds	1
  1765  0001CB                     _role:
  1766                           	opt stack 0
  1767  0001CB                     	ds	1
  1768  0001CC                     _timer_flag:
  1769                           	opt stack 0
  1770  0001CC                     	ds	1
  1771  0001CD                     _openSocketInfo:
  1772                           	opt stack 0
  1773  0001CD                     	ds	18
  1774  0001DF                     _m_var:
  1775                           	opt stack 0
  1776  0001DF                     	ds	9
  1777  0001E8                     _myLongAddress:
  1778                           	opt stack 0
  1779  0001E8                     	ds	4
  1780  0001EC                     _tmpBlock:
  1781                           	opt stack 0
  1782  0001EC                     	ds	4
  1783  0001F0                     _myPANID:
  1784                           	opt stack 0
  1785  0001F0                     	ds	2
  1786  0001F2                     _myShortAddress:
  1787                           	opt stack 0
  1788  0001F2                     	ds	2
  1789  0001F4                     _tempShortAddress:
  1790                           	opt stack 0
  1791  0001F4                     	ds	2
  1792  0001F6                     _currentChannel:
  1793                           	opt stack 0
  1794  0001F6                     	ds	1
  1795  0001F7                     _noise_level:
  1796                           	opt stack 0
  1797  0001F7                     	ds	1
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           
  1808                           	psect	dataBANK1
  1809  0001F8                     __pdataBANK1:
  1810                           	opt stack 0
  1811  0001F8                     _AcknowledgementSeq:
  1812                           	opt stack 0
  1813  0001F8                     	ds	1
  1814  0001F9                     _defaultHops:
  1815                           	opt stack 0
  1816  0001F9                     	ds	1
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1h	equ	0xFE2
  1825                           fsr1l	equ	0xFE1
  1826                           
  1827                           	psect	bssBANK2
  1828  000200                     __pbssBANK2:
  1829                           	opt stack 0
  1830  000200                     _ActiveScanResults:
  1831                           	opt stack 0
  1832  000200                     	ds	40
  1833  000228                     _BroadcastRecords:
  1834                           	opt stack 0
  1835  000228                     	ds	32
  1836  000248                     _AckInfo:
  1837                           	opt stack 0
  1838  000248                     	ds	30
  1839  000266                     _MACTxBuffer:
  1840                           	opt stack 0
  1841  000266                     	ds	64
  1842  0002A6                     _TxBuffer:
  1843                           	opt stack 0
  1844  0002A6                     	ds	43
  1845  0002D1                     _m_buffer:
  1846                           	opt stack 0
  1847  0002D1                     	ds	32
  1848  0002F1                     _key:
  1849                           	opt stack 0
  1850  0002F1                     	ds	8
  1851                           tblptru	equ	0xFF8
  1852                           tblptrh	equ	0xFF7
  1853                           tblptrl	equ	0xFF6
  1854                           tablat	equ	0xFF5
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec1	equ	0xFE5
  1858                           fsr1h	equ	0xFE2
  1859                           fsr1l	equ	0xFE1
  1860                           
  1861                           	psect	dataBANK2
  1862  0002F9                     __pdataBANK2:
  1863                           	opt stack 0
  1864  0002F9                     MiMAC_ChannelAssessment@F10758:
  1865                           	opt stack 0
  1866  0002F9                     	ds	6
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           postdec1	equ	0xFE5
  1874                           fsr1h	equ	0xFE2
  1875                           fsr1l	equ	0xFE1
  1876                           
  1877                           	psect	bssBANK3
  1878  000300                     __pbssBANK3:
  1879                           	opt stack 0
  1880  000300                     _RxPacket:
  1881                           	opt stack 0
  1882  000300                     	ds	132
  1883  000384                     _ToSendDataBuffer:
  1884                           	opt stack 0
  1885  000384                     	ds	64
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           
  1896                           	psect	bssBANK4
  1897  000400                     __pbssBANK4:
  1898                           	opt stack 0
  1899  000400                     _ReceivedDataBuffer:
  1900                           	opt stack 0
  1901  000400                     	ds	64
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           
  1912                           	psect	bssBANK5
  1913  000500                     __pbssBANK5:
  1914                           	opt stack 0
  1915  000500                     _IncomingFrameCounter:
  1916                           	opt stack 0
  1917  000500                     	ds	256
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           postinc0	equ	0xFEE
  1923                           wreg	equ	0xFE8
  1924                           postdec1	equ	0xFE5
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           
  1928                           	psect	bssBIGRAMl
  1929  000600                     __pbssBIGRAMl:
  1930                           	opt stack 0
  1931  000600                     _ConnectionTable:
  1932                           	opt stack 0
  1933  000600                     	ds	576
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           
  1944                           	psect	cstackBANK3
  1945  0003C4                     __pcstackBANK3:
  1946                           	opt stack 0
  1947  0003C4                     MiApp_UnicastAddress@t1:
  1948                           	opt stack 0
  1949                           
  1950                           ; 4 bytes @ 0x0
  1951  0003C4                     	ds	4
  1952  0003C8                     MiApp_UnicastAddress@t2:
  1953                           	opt stack 0
  1954                           
  1955                           ; 4 bytes @ 0x4
  1956  0003C8                     	ds	4
  1957  0003CC                     MiApp_UnicastAddress@t1_2749:
  1958                           	opt stack 0
  1959                           
  1960                           ; 4 bytes @ 0x8
  1961  0003CC                     	ds	4
  1962  0003D0                     MiApp_UnicastAddress@t2_2760:
  1963                           	opt stack 0
  1964                           
  1965                           ; 4 bytes @ 0xC
  1966  0003D0                     	ds	4
  1967  0003D4                     MiApp_UnicastAddress@MiWiFrameControl:
  1968                           	opt stack 0
  1969                           
  1970                           ; 1 bytes @ 0x10
  1971  0003D4                     	ds	1
  1972  0003D5                     MiApp_UnicastAddress@i:
  1973                           	opt stack 0
  1974                           
  1975                           ; 1 bytes @ 0x11
  1976  0003D5                     	ds	1
  1977  0003D6                     MiApp_UnicastAddress@handle:
  1978                           	opt stack 0
  1979                           
  1980                           ; 1 bytes @ 0x12
  1981  0003D6                     	ds	1
  1982  0003D7                     main@last_update:
  1983                           	opt stack 0
  1984                           
  1985                           ; 1 bytes @ 0x13
  1986  0003D7                     	ds	1
  1987  0003D8                     _main$4875:
  1988                           	opt stack 0
  1989                           
  1990                           ; 2 bytes @ 0x14
  1991  0003D8                     	ds	2
  1992  0003DA                     _main$4898:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0x16
  1996  0003DA                     	ds	2
  1997  0003DC                     main@power:
  1998                           	opt stack 0
  1999                           
  2000                           ; 1 bytes @ 0x18
  2001  0003DC                     	ds	1
  2002  0003DD                     main@rssi:
  2003                           	opt stack 0
  2004                           
  2005                           ; 1 bytes @ 0x19
  2006  0003DD                     	ds	1
  2007  0003DE                     main@x:
  2008                           	opt stack 0
  2009                           
  2010                           ; 2 bytes @ 0x1A
  2011  0003DE                     	ds	2
  2012  0003E0                     main@size:
  2013                           	opt stack 0
  2014                           
  2015                           ; 1 bytes @ 0x1C
  2016  0003E0                     	ds	1
  2017  0003E1                     main@shortaddress:
  2018                           	opt stack 0
  2019                           
  2020                           ; 2 bytes @ 0x1D
  2021  0003E1                     	ds	2
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           
  2032                           	psect	cstackBANK1
  2033  000100                     __pcstackBANK1:
  2034                           	opt stack 0
  2035  000100                     ??_SearchForLongAddress:
  2036  000100                     ??_isdigit:
  2037  000100                     ??_MiApp_ConnectionMode:
  2038  000100                     ?_dBm_to_mW:
  2039                           	opt stack 0
  2040  000100                     ?_strcmp:
  2041                           	opt stack 0
  2042  000100                     ?_USBTransferOnePacket:
  2043                           	opt stack 0
  2044  000100                     ?___wmul:
  2045                           	opt stack 0
  2046  000100                     ?___lwdiv:
  2047                           	opt stack 0
  2048  000100                     ?_MiWi_TickGet:
  2049                           	opt stack 0
  2050  000100                     ?___lmul:
  2051                           	opt stack 0
  2052  000100                     ?___lldiv:
  2053                           	opt stack 0
  2054  000100                     SPIPut@i:
  2055                           	opt stack 0
  2056  000100                     findNextNetworkEntry@i:
  2057                           	opt stack 0
  2058  000100                     USBTransferOnePacket@dir:
  2059                           	opt stack 0
  2060  000100                     ___lbmod@divisor:
  2061                           	opt stack 0
  2062  000100                     SYSTEM_Initialize@pll_startup_counter:
  2063                           	opt stack 0
  2064  000100                     MiMAC_SetAltAddress@Address:
  2065                           	opt stack 0
  2066  000100                     encode@text:
  2067                           	opt stack 0
  2068  000100                     isSameAddress@Address1:
  2069                           	opt stack 0
  2070  000100                     encode_uint8_variable@buffer:
  2071                           	opt stack 0
  2072  000100                     encode_uint16_variable@buffer:
  2073                           	opt stack 0
  2074  000100                     ___wmul@multiplier:
  2075                           	opt stack 0
  2076  000100                     ___lwdiv@dividend:
  2077                           	opt stack 0
  2078  000100                     memcpy@d1:
  2079                           	opt stack 0
  2080  000100                     memset@p1:
  2081                           	opt stack 0
  2082  000100                     strcmp@s1:
  2083                           	opt stack 0
  2084  000100                     strcpy@to:
  2085                           	opt stack 0
  2086  000100                     ___lmul@multiplier:
  2087                           	opt stack 0
  2088  000100                     ___lldiv@dividend:
  2089                           	opt stack 0
  2090                           
  2091                           ; 4 bytes @ 0x0
  2092  000100                     	ds	1
  2093  000101                     SPIPut@v:
  2094                           	opt stack 0
  2095  000101                     MiApp_ConnectionMode@Mode:
  2096                           	opt stack 0
  2097  000101                     _isdigit$5487:
  2098                           	opt stack 0
  2099  000101                     ___lbmod@dividend:
  2100                           	opt stack 0
  2101  000101                     USBTransferOnePacket@data:
  2102                           	opt stack 0
  2103                           
  2104                           ; 2 bytes @ 0x1
  2105  000101                     	ds	1
  2106  000102                     RegisterRead@value:
  2107                           	opt stack 0
  2108  000102                     WriteFIFO@Data:
  2109                           	opt stack 0
  2110  000102                     SearchForShortAddress@i:
  2111                           	opt stack 0
  2112  000102                     dBm_to_mW@power:
  2113                           	opt stack 0
  2114  000102                     isdigit@c:
  2115                           	opt stack 0
  2116  000102                     ___lbmod@counter:
  2117                           	opt stack 0
  2118  000102                     RegisterSet@setting:
  2119                           	opt stack 0
  2120  000102                     MiMAC_SetAltAddress@PANID:
  2121                           	opt stack 0
  2122  000102                     encode@key:
  2123                           	opt stack 0
  2124  000102                     isSameAddress@Address2:
  2125                           	opt stack 0
  2126  000102                     ___wmul@multiplicand:
  2127                           	opt stack 0
  2128  000102                     ___lwdiv@divisor:
  2129                           	opt stack 0
  2130  000102                     memcpy@s1:
  2131                           	opt stack 0
  2132  000102                     memset@c:
  2133                           	opt stack 0
  2134  000102                     strcmp@s2:
  2135                           	opt stack 0
  2136  000102                     strcpy@from:
  2137                           	opt stack 0
  2138  000102                     encode_uint8_variable@var:
  2139                           	opt stack 0
  2140  000102                     encode_uint16_variable@var:
  2141                           	opt stack 0
  2142                           
  2143                           ; 9 bytes @ 0x2
  2144  000102                     	ds	1
  2145  000103                     RegisterRead@IRQ1select:
  2146                           	opt stack 0
  2147  000103                     WriteFIFO@IRQ1select:
  2148                           	opt stack 0
  2149  000103                     USBTransferOnePacket@len:
  2150                           	opt stack 0
  2151  000103                     ___lbmod@rem:
  2152                           	opt stack 0
  2153                           
  2154                           ; 1 bytes @ 0x3
  2155  000103                     	ds	1
  2156  000104                     ??_strcmp:
  2157  000104                     ??_MiWi_TickGet:
  2158  000104                     ??_encode:
  2159  000104                     RegisterSet@IRQ1select:
  2160                           	opt stack 0
  2161  000104                     RegisterRead@IRQ0select:
  2162                           	opt stack 0
  2163  000104                     WriteFIFO@IRQ0select:
  2164                           	opt stack 0
  2165  000104                     SearchForLongAddress@j:
  2166                           	opt stack 0
  2167  000104                     USBTransferOnePacket@ep:
  2168                           	opt stack 0
  2169  000104                     ___lwdiv@counter:
  2170                           	opt stack 0
  2171  000104                     ___wmul@product:
  2172                           	opt stack 0
  2173  000104                     memcpy@n:
  2174                           	opt stack 0
  2175  000104                     memset@n:
  2176                           	opt stack 0
  2177  000104                     strcpy@cp:
  2178                           	opt stack 0
  2179  000104                     ___lmul@multiplicand:
  2180                           	opt stack 0
  2181  000104                     ___lldiv@divisor:
  2182                           	opt stack 0
  2183                           
  2184                           ; 4 bytes @ 0x4
  2185  000104                     	ds	1
  2186  000105                     MiWi_TickGet@failureCounter:
  2187                           	opt stack 0
  2188  000105                     RegisterSet@IRQ0select:
  2189                           	opt stack 0
  2190  000105                     RegisterRead@address:
  2191                           	opt stack 0
  2192  000105                     SearchForLongAddress@i:
  2193                           	opt stack 0
  2194  000105                     strcmp@r:
  2195                           	opt stack 0
  2196  000105                     USBTransferOnePacket@handle:
  2197                           	opt stack 0
  2198  000105                     ___lwdiv@quotient:
  2199                           	opt stack 0
  2200                           
  2201                           ; 2 bytes @ 0x5
  2202  000105                     	ds	1
  2203  000106                     ??_AddNodeToNetworkTable:
  2204  000106                     ??_MiMAC_SetPower:
  2205  000106                     ?___awdiv:
  2206                           	opt stack 0
  2207  000106                     SetRFMode@mode:
  2208                           	opt stack 0
  2209  000106                     isSameAddress@i:
  2210                           	opt stack 0
  2211  000106                     ___awdiv@dividend:
  2212                           	opt stack 0
  2213  000106                     memcpy@d:
  2214                           	opt stack 0
  2215  000106                     memset@p:
  2216                           	opt stack 0
  2217  000106                     MiWi_TickGet@currentTime:
  2218                           	opt stack 0
  2219                           
  2220                           ; 4 bytes @ 0x6
  2221  000106                     	ds	1
  2222  000107                     ?___lwmod:
  2223                           	opt stack 0
  2224  000107                     MiMAC_SetChannel@offsetFreq:
  2225                           	opt stack 0
  2226  000107                     sendHIDText@str:
  2227                           	opt stack 0
  2228  000107                     ___lwmod@dividend:
  2229                           	opt stack 0
  2230                           
  2231                           ; 2 bytes @ 0x7
  2232  000107                     	ds	1
  2233  000108                     ??_MiMAC_SetChannel:
  2234  000108                     MiMAC_SetPower@outputPower:
  2235                           	opt stack 0
  2236  000108                     AddNodeToNetworkTable@i:
  2237                           	opt stack 0
  2238  000108                     USBDeviceInit@i:
  2239                           	opt stack 0
  2240  000108                     ___awdiv@divisor:
  2241                           	opt stack 0
  2242  000108                     memcpy@s:
  2243                           	opt stack 0
  2244  000108                     ___lmul@product:
  2245                           	opt stack 0
  2246  000108                     ___lldiv@quotient:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x8
  2250  000108                     	ds	1
  2251  000109                     ??_sendHIDText:
  2252  000109                     MiMAC_SetChannel@channel:
  2253                           	opt stack 0
  2254  000109                     AddNodeToNetworkTable@handle:
  2255                           	opt stack 0
  2256  000109                     ___lwmod@divisor:
  2257                           	opt stack 0
  2258                           
  2259                           ; 2 bytes @ 0x9
  2260  000109                     	ds	1
  2261  00010A                     ??_BroadcastJitter:
  2262  00010A                     ?_decode_variable:
  2263                           	opt stack 0
  2264  00010A                     TxPacket@CCA:
  2265                           	opt stack 0
  2266  00010A                     MiApp_SetChannel@channel:
  2267                           	opt stack 0
  2268  00010A                     sendHIDText@c:
  2269                           	opt stack 0
  2270  00010A                     ___awdiv@counter:
  2271                           	opt stack 0
  2272  00010A                     sendHIDBinary@buffer:
  2273                           	opt stack 0
  2274  00010A                     decode_variable@p_buffer:
  2275                           	opt stack 0
  2276                           
  2277                           ; 2 bytes @ 0xA
  2278  00010A                     	ds	1
  2279  00010B                     ??_TxPacket:
  2280  00010B                     ___awdiv@sign:
  2281                           	opt stack 0
  2282  00010B                     ___lwmod@counter:
  2283                           	opt stack 0
  2284  00010B                     _sendHIDText$4950:
  2285                           	opt stack 0
  2286                           
  2287                           ; 2 bytes @ 0xB
  2288  00010B                     	ds	1
  2289  00010C                     ?_sprintf:
  2290                           	opt stack 0
  2291  00010C                     sendHIDBinary@length:
  2292                           	opt stack 0
  2293  00010C                     ___lldiv@counter:
  2294                           	opt stack 0
  2295  00010C                     DELAY_ms@ms:
  2296                           	opt stack 0
  2297  00010C                     sprintf@sp:
  2298                           	opt stack 0
  2299  00010C                     ___awdiv@quotient:
  2300                           	opt stack 0
  2301                           
  2302                           ; 2 bytes @ 0xC
  2303  00010C                     	ds	1
  2304  00010D                     ??_sendHIDBinary:
  2305  00010D                     sendHIDText@p:
  2306                           	opt stack 0
  2307                           
  2308                           ; 2 bytes @ 0xD
  2309  00010D                     	ds	1
  2310  00010E                     ??_MiMAC_ChannelAssessment:
  2311  00010E                     encode@delta:
  2312                           	opt stack 0
  2313  00010E                     _sendHIDBinary$4947:
  2314                           	opt stack 0
  2315  00010E                     sprintf@f:
  2316                           	opt stack 0
  2317  00010E                     DELAY_ms@cyclesRequiredForEntireDelay:
  2318                           	opt stack 0
  2319                           
  2320                           ; 4 bytes @ 0xE
  2321  00010E                     	ds	1
  2322  00010F                     sendHIDText@size:
  2323                           	opt stack 0
  2324                           
  2325                           ; 2 bytes @ 0xF
  2326  00010F                     	ds	1
  2327  000110                     ??_send_complete_update:
  2328  000110                     ??_send_writables_update:
  2329  000110                     ??_send_periodic_update:
  2330  000110                     encode@i:
  2331                           	opt stack 0
  2332                           
  2333                           ; 1 bytes @ 0x10
  2334  000110                     	ds	1
  2335  000111                     send_complete_update@tmp:
  2336                           	opt stack 0
  2337  000111                     send_periodic_update@tmp:
  2338                           	opt stack 0
  2339  000111                     encode@part1:
  2340                           	opt stack 0
  2341                           
  2342                           ; 2 bytes @ 0x11
  2343  000111                     	ds	1
  2344  000112                     MiMAC_Init@initValue:
  2345                           	opt stack 0
  2346  000112                     BroadcastJitter@t1:
  2347                           	opt stack 0
  2348  000112                     MiMAC_ChannelAssessment@result:
  2349                           	opt stack 0
  2350                           
  2351                           ; 6 bytes @ 0x12
  2352  000112                     	ds	1
  2353  000113                     ??_decode_variable:
  2354  000113                     encode@part2:
  2355                           	opt stack 0
  2356  000113                     TxPacket@t1:
  2357                           	opt stack 0
  2358                           
  2359                           ; 4 bytes @ 0x13
  2360  000113                     	ds	2
  2361  000115                     MiMAC_Init@i:
  2362                           	opt stack 0
  2363  000115                     encode@sum:
  2364                           	opt stack 0
  2365  000115                     decode_variable@var:
  2366                           	opt stack 0
  2367                           
  2368                           ; 9 bytes @ 0x15
  2369  000115                     	ds	1
  2370  000116                     ??_MiApp_ProtocolInit:
  2371  000116                     BroadcastJitter@t2:
  2372                           	opt stack 0
  2373                           
  2374                           ; 4 bytes @ 0x16
  2375  000116                     	ds	1
  2376  000117                     MiApp_ProtocolInit@bNetworkFreezer:
  2377                           	opt stack 0
  2378  000117                     CTR@text:
  2379                           	opt stack 0
  2380  000117                     CBC_MAC@text:
  2381                           	opt stack 0
  2382  000117                     TxPacket@t2:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x17
  2386  000117                     	ds	1
  2387  000118                     ??_sprintf:
  2388  000118                     MiMAC_ChannelAssessment@AssessmentMode:
  2389                           	opt stack 0
  2390  000118                     MiApp_ProtocolInit@MIP:
  2391                           	opt stack 0
  2392                           
  2393                           ; 3 bytes @ 0x18
  2394  000118                     	ds	1
  2395  000119                     MiMAC_ChannelAssessment@k:
  2396                           	opt stack 0
  2397  000119                     CTR@len:
  2398                           	opt stack 0
  2399  000119                     CBC_MAC@len:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x19
  2403  000119                     	ds	1
  2404  00011A                     BroadcastJitter@range:
  2405                           	opt stack 0
  2406  00011A                     MiMAC_ChannelAssessment@count:
  2407                           	opt stack 0
  2408  00011A                     CTR@key:
  2409                           	opt stack 0
  2410  00011A                     CBC_MAC@key:
  2411                           	opt stack 0
  2412                           
  2413                           ; 2 bytes @ 0x1A
  2414  00011A                     	ds	1
  2415  00011B                     TxPacket@CCARetries:
  2416                           	opt stack 0
  2417  00011B                     BroadcastJitter@jitter:
  2418                           	opt stack 0
  2419  00011B                     MiApp_ProtocolInit@i:
  2420                           	opt stack 0
  2421                           
  2422                           ; 1 bytes @ 0x1B
  2423  00011B                     	ds	1
  2424  00011C                     TxPacket@reTry:
  2425                           	opt stack 0
  2426  00011C                     MiMAC_ChannelAssessment@i:
  2427                           	opt stack 0
  2428  00011C                     sprintf@idx:
  2429                           	opt stack 0
  2430  00011C                     CTR@nounce:
  2431                           	opt stack 0
  2432  00011C                     CBC_MAC@MIC:
  2433                           	opt stack 0
  2434                           
  2435                           ; 2 bytes @ 0x1C
  2436  00011C                     	ds	1
  2437  00011D                     TxPacket@allowedTxFailure:
  2438                           	opt stack 0
  2439  00011D                     sprintf@prec:
  2440                           	opt stack 0
  2441  00011D                     MiApp_NoiseDetection@ChannelMap:
  2442                           	opt stack 0
  2443                           
  2444                           ; 4 bytes @ 0x1D
  2445  00011D                     	ds	1
  2446  00011E                     ??_CTR:
  2447  00011E                     ??_CBC_MAC:
  2448  00011E                     TxPacket@status:
  2449                           	opt stack 0
  2450  00011E                     sprintf@cp:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x1E
  2454  00011E                     	ds	1
  2455  00011F                     TxPacket@TxPacketLen:
  2456                           	opt stack 0
  2457                           
  2458                           ; 1 bytes @ 0x1F
  2459  00011F                     	ds	1
  2460  000120                     TxPacket@i:
  2461                           	opt stack 0
  2462  000120                     sprintf@ap:
  2463                           	opt stack 0
  2464                           
  2465                           ; 2 bytes @ 0x20
  2466  000120                     	ds	1
  2467  000121                     TxPacket@rssival:
  2468                           	opt stack 0
  2469  000121                     CTR@block:
  2470                           	opt stack 0
  2471  000121                     CBC_MAC@block:
  2472                           	opt stack 0
  2473  000121                     MiApp_NoiseDetection@ScanDuration:
  2474                           	opt stack 0
  2475                           
  2476                           ; 1 bytes @ 0x21
  2477  000121                     	ds	1
  2478  000122                     CTR@i:
  2479                           	opt stack 0
  2480  000122                     CBC_MAC@j:
  2481                           	opt stack 0
  2482  000122                     MiApp_NoiseDetection@DetectionMode:
  2483                           	opt stack 0
  2484  000122                     sprintf@len:
  2485                           	opt stack 0
  2486                           
  2487                           ; 2 bytes @ 0x22
  2488  000122                     	ds	1
  2489  000123                     CTR@j:
  2490                           	opt stack 0
  2491  000123                     CBC_MAC@i:
  2492                           	opt stack 0
  2493  000123                     MiApp_NoiseDetection@RSSIValue:
  2494                           	opt stack 0
  2495                           
  2496                           ; 2 bytes @ 0x23
  2497  000123                     	ds	1
  2498  000124                     CCM_Enc@text:
  2499                           	opt stack 0
  2500  000124                     CCM_Dec@text:
  2501                           	opt stack 0
  2502  000124                     sprintf@val:
  2503                           	opt stack 0
  2504                           
  2505                           ; 2 bytes @ 0x24
  2506  000124                     	ds	1
  2507  000125                     ??_MiApp_NoiseDetection:
  2508                           
  2509                           ; 0 bytes @ 0x25
  2510  000125                     	ds	1
  2511  000126                     CCM_Enc@headerLen:
  2512                           	opt stack 0
  2513  000126                     CCM_Dec@headerLen:
  2514                           	opt stack 0
  2515  000126                     sprintf@flag:
  2516                           	opt stack 0
  2517                           
  2518                           ; 1 bytes @ 0x26
  2519  000126                     	ds	1
  2520  000127                     CCM_Enc@payloadLen:
  2521                           	opt stack 0
  2522  000127                     CCM_Dec@payloadLen:
  2523                           	opt stack 0
  2524  000127                     sprintf@width:
  2525                           	opt stack 0
  2526                           
  2527                           ; 2 bytes @ 0x27
  2528  000127                     	ds	1
  2529  000128                     CCM_Enc@key:
  2530                           	opt stack 0
  2531  000128                     CCM_Dec@key:
  2532                           	opt stack 0
  2533                           
  2534                           ; 2 bytes @ 0x28
  2535  000128                     	ds	1
  2536  000129                     sprintf@c:
  2537                           	opt stack 0
  2538                           
  2539                           ; 1 bytes @ 0x29
  2540  000129                     	ds	1
  2541  00012A                     ??_CCM_Enc:
  2542  00012A                     ??_CCM_Dec:
  2543                           
  2544                           ; 0 bytes @ 0x2A
  2545  00012A                     	ds	2
  2546  00012C                     _CCM_Enc$1978:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0x2C
  2550  00012C                     	ds	2
  2551  00012E                     CCM_Enc@i:
  2552                           	opt stack 0
  2553  00012E                     MiApp_NoiseDetection@channelMask:
  2554                           	opt stack 0
  2555                           
  2556                           ; 4 bytes @ 0x2E
  2557  00012E                     	ds	1
  2558  00012F                     MiMAC_SendPacket@transParam:
  2559                           	opt stack 0
  2560                           
  2561                           ; 3 bytes @ 0x2F
  2562  00012F                     	ds	1
  2563  000130                     _CCM_Dec$1986:
  2564                           	opt stack 0
  2565                           
  2566                           ; 2 bytes @ 0x30
  2567  000130                     	ds	2
  2568  000132                     CCM_Dec@i:
  2569                           	opt stack 0
  2570  000132                     MiMAC_SendPacket@MACPayload:
  2571                           	opt stack 0
  2572  000132                     MiApp_NoiseDetection@t1:
  2573                           	opt stack 0
  2574                           
  2575                           ; 4 bytes @ 0x32
  2576  000132                     	ds	1
  2577  000133                     ??_MiMAC_ReceivedPacket:
  2578                           
  2579                           ; 0 bytes @ 0x33
  2580  000133                     	ds	1
  2581  000134                     MiMAC_SendPacket@MACPayloadLen:
  2582                           	opt stack 0
  2583                           
  2584                           ; 1 bytes @ 0x34
  2585  000134                     	ds	1
  2586  000135                     ??_MiMAC_SendPacket:
  2587                           
  2588                           ; 0 bytes @ 0x35
  2589  000135                     	ds	1
  2590  000136                     MiMAC_SendPacket@headerLen:
  2591                           	opt stack 0
  2592  000136                     MiApp_NoiseDetection@t2:
  2593                           	opt stack 0
  2594                           
  2595                           ; 4 bytes @ 0x36
  2596  000136                     	ds	1
  2597  000137                     MiMAC_SendPacket@TxIndex:
  2598                           	opt stack 0
  2599                           
  2600                           ; 1 bytes @ 0x37
  2601  000137                     	ds	1
  2602  000138                     MiMAC_SendPacket@i:
  2603                           	opt stack 0
  2604                           
  2605                           ; 1 bytes @ 0x38
  2606  000138                     	ds	1
  2607  000139                     SendMACPacket@Address:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0x39
  2611  000139                     	ds	1
  2612  00013A                     MiApp_NoiseDetection@OptimalChannel:
  2613                           	opt stack 0
  2614                           
  2615                           ; 1 bytes @ 0x3A
  2616  00013A                     	ds	1
  2617  00013B                     SendMACPacket@PacketType:
  2618                           	opt stack 0
  2619  00013B                     MiApp_NoiseDetection@j:
  2620                           	opt stack 0
  2621  00013B                     MiMAC_ReceivedPacket@currentTick:
  2622                           	opt stack 0
  2623                           
  2624                           ; 4 bytes @ 0x3B
  2625  00013B                     	ds	1
  2626  00013C                     ??_SendMACPacket:
  2627  00013C                     MiApp_NoiseDetection@k:
  2628                           	opt stack 0
  2629                           
  2630                           ; 1 bytes @ 0x3C
  2631  00013C                     	ds	1
  2632  00013D                     MiApp_NoiseDetection@RSSIcheck:
  2633                           	opt stack 0
  2634  00013D                     RouteMessage@PANID:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0x3D
  2638  00013D                     	ds	1
  2639  00013E                     MiApp_NoiseDetection@minRSSI:
  2640                           	opt stack 0
  2641                           
  2642                           ; 1 bytes @ 0x3E
  2643  00013E                     	ds	1
  2644  00013F                     MiApp_NoiseDetection@i:
  2645                           	opt stack 0
  2646  00013F                     RouteMessage@ShortAddress:
  2647                           	opt stack 0
  2648  00013F                     MiMAC_ReceivedPacket@FrameCounter:
  2649                           	opt stack 0
  2650                           
  2651                           ; 4 bytes @ 0x3F
  2652  00013F                     	ds	1
  2653  000140                     MiApp_NoiseDetection@maxRSSI:
  2654                           	opt stack 0
  2655                           
  2656                           ; 1 bytes @ 0x40
  2657  000140                     	ds	1
  2658  000141                     RouteMessage@SecEn:
  2659                           	opt stack 0
  2660  000141                     MiApp_StartConnection@ScanDuration:
  2661                           	opt stack 0
  2662                           
  2663                           ; 1 bytes @ 0x41
  2664  000141                     	ds	1
  2665  000142                     ??_RouteMessage:
  2666  000142                     MiApp_StartConnection@ChannelMap:
  2667                           	opt stack 0
  2668                           
  2669                           ; 4 bytes @ 0x42
  2670  000142                     	ds	1
  2671  000143                     MiMAC_ReceivedPacket@k:
  2672                           	opt stack 0
  2673                           
  2674                           ; 1 bytes @ 0x43
  2675  000143                     	ds	1
  2676  000144                     MiMAC_ReceivedPacket@j:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x44
  2680  000144                     	ds	1
  2681  000145                     MiMAC_ReceivedPacket@PayloadIndex:
  2682                           	opt stack 0
  2683  000145                     RouteMessage@j:
  2684                           	opt stack 0
  2685                           
  2686                           ; 1 bytes @ 0x45
  2687  000145                     	ds	1
  2688  000146                     ??_MiApp_StartConnection:
  2689  000146                     MiMAC_ReceivedPacket@i:
  2690                           	opt stack 0
  2691  000146                     RouteMessage@parentNode:
  2692                           	opt stack 0
  2693                           
  2694                           ; 1 bytes @ 0x46
  2695  000146                     	ds	1
  2696  000147                     RouteMessage@i:
  2697                           	opt stack 0
  2698  000147                     MiApp_StartConnection@Mode:
  2699                           	opt stack 0
  2700                           
  2701                           ; 1 bytes @ 0x47
  2702  000147                     	ds	1
  2703  000148                     MiApp_StartConnection@channel:
  2704                           	opt stack 0
  2705  000148                     UnicastShortAddress@DestAddress:
  2706                           	opt stack 0
  2707                           
  2708                           ; 2 bytes @ 0x48
  2709  000148                     	ds	1
  2710  000149                     MiApp_StartConnection@RSSIValue:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0x49
  2714  000149                     	ds	1
  2715  00014A                     ??_MiWiTasks:
  2716                           
  2717                           ; 0 bytes @ 0x4A
  2718  00014A                     	ds	8
  2719  000152                     MiWiTasks@t2:
  2720                           	opt stack 0
  2721                           
  2722                           ; 4 bytes @ 0x52
  2723  000152                     	ds	4
  2724  000156                     MiWiTasks@t1_2546:
  2725                           	opt stack 0
  2726                           
  2727                           ; 4 bytes @ 0x56
  2728  000156                     	ds	4
  2729  00015A                     MiWiTasks@t2_2557:
  2730                           	opt stack 0
  2731                           
  2732                           ; 4 bytes @ 0x5A
  2733  00015A                     	ds	4
  2734  00015E                     MiWiTasks@CoordAddress:
  2735                           	opt stack 0
  2736                           
  2737                           ; 2 bytes @ 0x5E
  2738  00015E                     	ds	2
  2739  000160                     MiWiTasks@mask:
  2740                           	opt stack 0
  2741                           
  2742                           ; 1 bytes @ 0x60
  2743  000160                     	ds	1
  2744  000161                     MiWiTasks@entry_2536:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x61
  2748  000161                     	ds	1
  2749  000162                     MiWiTasks@jitter:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x62
  2753  000162                     	ds	1
  2754  000163                     MiWiTasks@associateStatus:
  2755                           	opt stack 0
  2756                           
  2757                           ; 1 bytes @ 0x63
  2758  000163                     	ds	1
  2759  000164                     MiWiTasks@t1:
  2760                           	opt stack 0
  2761                           
  2762                           ; 4 bytes @ 0x64
  2763  000164                     	ds	4
  2764  000168                     MiWiTasks@coordinatorNumber:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0x68
  2768  000168                     	ds	1
  2769  000169                     MiWiTasks@j_2544:
  2770                           	opt stack 0
  2771                           
  2772                           ; 2 bytes @ 0x69
  2773  000169                     	ds	2
  2774  00016B                     MiWiTasks@cIndex:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0x6B
  2778  00016B                     	ds	1
  2779  00016C                     MiWiTasks@j_2569:
  2780                           	opt stack 0
  2781                           
  2782                           ; 1 bytes @ 0x6C
  2783  00016C                     	ds	1
  2784  00016D                     MiWiTasks@destPANID:
  2785                           	opt stack 0
  2786                           
  2787                           ; 2 bytes @ 0x6D
  2788  00016D                     	ds	2
  2789  00016F                     MiWiTasks@rxIndex:
  2790                           	opt stack 0
  2791                           
  2792                           ; 1 bytes @ 0x6F
  2793  00016F                     	ds	1
  2794  000170                     MiWiTasks@CapacityByte:
  2795                           	opt stack 0
  2796                           
  2797                           ; 1 bytes @ 0x70
  2798  000170                     	ds	1
  2799  000171                     MiWiTasks@j_2488:
  2800                           	opt stack 0
  2801                           
  2802                           ; 1 bytes @ 0x71
  2803  000171                     	ds	1
  2804  000172                     MiWiTasks@j_2532:
  2805                           	opt stack 0
  2806                           
  2807                           ; 1 bytes @ 0x72
  2808  000172                     	ds	1
  2809  000173                     MiWiTasks@destShortAddress:
  2810                           	opt stack 0
  2811                           
  2812                           ; 2 bytes @ 0x73
  2813  000173                     	ds	2
  2814  000175                     MiWiTasks@sourcePANID:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x75
  2818  000175                     	ds	2
  2819  000177                     MiWiTasks@handle:
  2820                           	opt stack 0
  2821                           
  2822                           ; 1 bytes @ 0x77
  2823  000177                     	ds	1
  2824  000178                     MiWiTasks@sourceShortAddress:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x78
  2828  000178                     	ds	2
  2829  00017A                     MiWiTasks@entry:
  2830                           	opt stack 0
  2831                           
  2832                           ; 1 bytes @ 0x7A
  2833  00017A                     	ds	1
  2834  00017B                     MiWiTasks@j:
  2835                           	opt stack 0
  2836                           
  2837                           ; 1 bytes @ 0x7B
  2838  00017B                     	ds	1
  2839  00017C                     MiWiTasks@i:
  2840                           	opt stack 0
  2841                           
  2842                           ; 1 bytes @ 0x7C
  2843  00017C                     	ds	1
  2844  00017D                     MiApp_UnicastAddress@DestAddress:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x7D
  2848  00017D                     	ds	2
  2849  00017F                     MiApp_UnicastAddress@PermanentAddr:
  2850                           	opt stack 0
  2851                           
  2852                           ; 1 bytes @ 0x7F
  2853  00017F                     	ds	1
  2854  000180                     MiApp_UnicastAddress@SecEn:
  2855                           	opt stack 0
  2856                           
  2857                           ; 1 bytes @ 0x80
  2858  000180                     	ds	1
  2859  000181                     ??_MiApp_UnicastAddress:
  2860                           
  2861                           ; 0 bytes @ 0x81
  2862  000181                     	ds	8
  2863  000189                     ??_main:
  2864                           
  2865                           ; 0 bytes @ 0x89
  2866  000189                     	ds	7
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           postinc0	equ	0xFEE
  2872                           wreg	equ	0xFE8
  2873                           postdec1	equ	0xFE5
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           
  2877                           	psect	cstackBANK0
  2878  000060                     __pcstackBANK0:
  2879                           	opt stack 0
  2880  000060                     ?i2_MiWi_TickGet:
  2881                           	opt stack 0
  2882  000060                     i2SPIPut@i:
  2883                           	opt stack 0
  2884                           
  2885                           ; 1 bytes @ 0x0
  2886  000060                     	ds	1
  2887  000061                     i2SPIPut@v:
  2888                           	opt stack 0
  2889                           
  2890                           ; 1 bytes @ 0x1
  2891  000061                     	ds	1
  2892  000062                     i2RegisterRead@value:
  2893                           	opt stack 0
  2894  000062                     i2WriteFIFO@Data:
  2895                           	opt stack 0
  2896  000062                     i2RegisterSet@setting:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x2
  2900  000062                     	ds	1
  2901  000063                     i2RegisterRead@IRQ1select:
  2902                           	opt stack 0
  2903  000063                     i2WriteFIFO@IRQ1select:
  2904                           	opt stack 0
  2905                           
  2906                           ; 1 bytes @ 0x3
  2907  000063                     	ds	1
  2908  000064                     ??i2_MiWi_TickGet:
  2909  000064                     i2RegisterSet@IRQ1select:
  2910                           	opt stack 0
  2911  000064                     i2RegisterRead@IRQ0select:
  2912                           	opt stack 0
  2913  000064                     i2WriteFIFO@IRQ0select:
  2914                           	opt stack 0
  2915                           
  2916                           ; 1 bytes @ 0x4
  2917  000064                     	ds	1
  2918  000065                     i2MiWi_TickGet@failureCounter:
  2919                           	opt stack 0
  2920  000065                     i2RegisterSet@IRQ0select:
  2921                           	opt stack 0
  2922  000065                     i2RegisterRead@address:
  2923                           	opt stack 0
  2924                           
  2925                           ; 1 bytes @ 0x5
  2926  000065                     	ds	1
  2927  000066                     i2SetRFMode@mode:
  2928                           	opt stack 0
  2929  000066                     i2MiWi_TickGet@currentTime:
  2930                           	opt stack 0
  2931                           
  2932                           ; 4 bytes @ 0x6
  2933  000066                     	ds	4
  2934  00006A                     i2TxPacket@CCA:
  2935                           	opt stack 0
  2936                           
  2937                           ; 1 bytes @ 0xA
  2938  00006A                     	ds	1
  2939  00006B                     ??i2_TxPacket:
  2940                           
  2941                           ; 0 bytes @ 0xB
  2942  00006B                     	ds	8
  2943  000073                     i2TxPacket@t1:
  2944                           	opt stack 0
  2945                           
  2946                           ; 4 bytes @ 0x13
  2947  000073                     	ds	4
  2948  000077                     i2TxPacket@t2:
  2949                           	opt stack 0
  2950                           
  2951                           ; 4 bytes @ 0x17
  2952  000077                     	ds	4
  2953  00007B                     i2TxPacket@status:
  2954                           	opt stack 0
  2955                           
  2956                           ; 1 bytes @ 0x1B
  2957  00007B                     	ds	1
  2958  00007C                     i2TxPacket@CCARetries:
  2959                           	opt stack 0
  2960                           
  2961                           ; 1 bytes @ 0x1C
  2962  00007C                     	ds	1
  2963  00007D                     i2TxPacket@reTry:
  2964                           	opt stack 0
  2965                           
  2966                           ; 1 bytes @ 0x1D
  2967  00007D                     	ds	1
  2968  00007E                     i2TxPacket@allowedTxFailure:
  2969                           	opt stack 0
  2970                           
  2971                           ; 1 bytes @ 0x1E
  2972  00007E                     	ds	1
  2973  00007F                     i2TxPacket@TxPacketLen:
  2974                           	opt stack 0
  2975                           
  2976                           ; 1 bytes @ 0x1F
  2977  00007F                     	ds	1
  2978  000080                     i2TxPacket@i:
  2979                           	opt stack 0
  2980                           
  2981                           ; 1 bytes @ 0x20
  2982  000080                     	ds	1
  2983  000081                     i2TxPacket@rssival:
  2984                           	opt stack 0
  2985                           
  2986                           ; 1 bytes @ 0x21
  2987  000081                     	ds	1
  2988  000082                     ??_MIWIInterruptHandler:
  2989                           
  2990                           ; 0 bytes @ 0x22
  2991  000082                     	ds	6
  2992  000088                     MIWIInterruptHandler@counter:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x28
  2996  000088                     	ds	2
  2997  00008A                     MIWIInterruptHandler@fifo_stat:
  2998                           	opt stack 0
  2999                           
  3000                           ; 1 bytes @ 0x2A
  3001  00008A                     	ds	1
  3002  00008B                     MIWIInterruptHandler@ackPacket:
  3003                           	opt stack 0
  3004                           
  3005                           ; 4 bytes @ 0x2B
  3006  00008B                     	ds	4
  3007  00008F                     MIWIInterruptHandler@bAck:
  3008                           	opt stack 0
  3009                           
  3010                           ; 1 bytes @ 0x2F
  3011  00008F                     	ds	1
  3012  000090                     MIWIInterruptHandler@RxPacketPtr:
  3013                           	opt stack 0
  3014                           
  3015                           ; 1 bytes @ 0x30
  3016  000090                     	ds	1
  3017  000091                     MIWIInterruptHandler@ackInfoIndex:
  3018                           	opt stack 0
  3019                           
  3020                           ; 1 bytes @ 0x31
  3021  000091                     	ds	1
  3022  000092                     MIWIInterruptHandler@PacketLen:
  3023                           	opt stack 0
  3024                           
  3025                           ; 1 bytes @ 0x32
  3026  000092                     	ds	1
  3027  000093                     MIWIInterruptHandler@BankIndex:
  3028                           	opt stack 0
  3029                           
  3030                           ; 1 bytes @ 0x33
  3031  000093                     	ds	1
  3032  000094                     MIWIInterruptHandler@i:
  3033                           	opt stack 0
  3034                           
  3035                           ; 1 bytes @ 0x34
  3036  000094                     	ds	1
  3037  000095                     ??_SYS_InterruptHigh:
  3038                           
  3039                           ; 0 bytes @ 0x35
  3040  000095                     	ds	14
  3041                           tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           
  3051                           	psect	cstackCOMRAM
  3052  000001                     __pcstackCOMRAM:
  3053                           	opt stack 0
  3054  000001                     ??_USBStdGetDscHandler:
  3055  000001                     ??_USBStdGetStatusHandler:
  3056  000001                     ?i1_USBTransferOnePacket:
  3057                           	opt stack 0
  3058  000001                     USBConfigureEndpoint@direction:
  3059                           	opt stack 0
  3060  000001                     USBCtrlTrfTxService@byteToSend:
  3061                           	opt stack 0
  3062  000001                     USBCtrlTrfRxService@i:
  3063                           	opt stack 0
  3064  000001                     i1USBTransferOnePacket@dir:
  3065                           	opt stack 0
  3066  000001                     i1memset@p1:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x0
  3070  000001                     	ds	1
  3071  000002                     ??_USBConfigureEndpoint:
  3072  000002                     USBCtrlTrfRxService@byteToRead:
  3073                           	opt stack 0
  3074  000002                     USBCtrlTrfInHandler@lastDTS:
  3075                           	opt stack 0
  3076  000002                     USBStdGetStatusHandler@p:
  3077                           	opt stack 0
  3078  000002                     i1USBTransferOnePacket@data:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x1
  3082  000002                     	ds	1
  3083  000003                     i1memset@c:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x2
  3087  000003                     	ds	1
  3088  000004                     i1USBTransferOnePacket@len:
  3089                           	opt stack 0
  3090                           
  3091                           ; 1 bytes @ 0x3
  3092  000004                     	ds	1
  3093  000005                     i1USBTransferOnePacket@ep:
  3094                           	opt stack 0
  3095  000005                     i1memset@n:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x4
  3099  000005                     	ds	1
  3100  000006                     USBConfigureEndpoint@EPNum:
  3101                           	opt stack 0
  3102  000006                     i1USBTransferOnePacket@handle:
  3103                           	opt stack 0
  3104                           
  3105                           ; 2 bytes @ 0x5
  3106  000006                     	ds	1
  3107  000007                     USBConfigureEndpoint@handle:
  3108                           	opt stack 0
  3109  000007                     i1memset@p:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x6
  3113  000007                     	ds	2
  3114  000009                     USBEnableEndpoint@options:
  3115                           	opt stack 0
  3116  000009                     i1USBDeviceInit@i:
  3117                           	opt stack 0
  3118                           
  3119                           ; 1 bytes @ 0x8
  3120  000009                     	ds	1
  3121  00000A                     USBEnableEndpoint@p:
  3122                           	opt stack 0
  3123                           
  3124                           ; 2 bytes @ 0x9
  3125  00000A                     	ds	2
  3126  00000C                     USBEnableEndpoint@ep:
  3127                           	opt stack 0
  3128                           
  3129                           ; 1 bytes @ 0xB
  3130  00000C                     	ds	1
  3131  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3132                           	opt stack 0
  3133                           
  3134                           ; 2 bytes @ 0xC
  3135  00000D                     	ds	2
  3136  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3137                           	opt stack 0
  3138                           
  3139                           ; 2 bytes @ 0xE
  3140  00000F                     	ds	2
  3141  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3142                           	opt stack 0
  3143                           
  3144                           ; 2 bytes @ 0x10
  3145  000011                     	ds	2
  3146  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3147                           
  3148                           ; 0 bytes @ 0x12
  3149  000013                     	ds	2
  3150  000015                     ??_USBStdFeatureReqHandler:
  3151  000015                     USBStdSetCfgHandler@i:
  3152                           	opt stack 0
  3153                           
  3154                           ; 1 bytes @ 0x14
  3155  000015                     	ds	1
  3156  000016                     USBStdFeatureReqHandler@pUEP:
  3157                           	opt stack 0
  3158                           
  3159                           ; 2 bytes @ 0x15
  3160  000016                     	ds	2
  3161  000018                     USBStdFeatureReqHandler@current_ep_data:
  3162                           	opt stack 0
  3163                           
  3164                           ; 1 bytes @ 0x17
  3165  000018                     	ds	1
  3166  000019                     USBStdFeatureReqHandler@p:
  3167                           	opt stack 0
  3168                           
  3169                           ; 2 bytes @ 0x18
  3170  000019                     	ds	2
  3171  00001B                     ??_USBCtrlEPService:
  3172  00001B                     
  3173                           ; 0 bytes @ 0x1A
  3174  00001B                     	ds	2
  3175  00001D                     USBCtrlEPService@setup_cnt:
  3176                           	opt stack 0
  3177                           
  3178                           ; 1 bytes @ 0x1C
  3179  00001D                     	ds	1
  3180  00001E                     USBDeviceTasks@i:
  3181                           	opt stack 0
  3182                           
  3183                           ; 1 bytes @ 0x1D
  3184  00001E                     	ds	1
  3185  00001F                     ??_SYS_InterruptLow:
  3186                           
  3187                           ; 0 bytes @ 0x1E
  3188  00001F                     	ds	19
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           postinc0	equ	0xFEE
  3194                           wreg	equ	0xFE8
  3195                           postdec1	equ	0xFE5
  3196                           fsr1h	equ	0xFE2
  3197                           fsr1l	equ	0xFE1
  3198                           
  3199 ;;
  3200 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  3201 ;;
  3202 ;; *************** function _main *****************
  3203 ;; Defined at:
  3204 ;;		line 141 in file "src/main.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  last_update     1   19[BANK3 ] unsigned char 
  3209 ;;  shortaddress    2   29[BANK3 ] unsigned char [2]
  3210 ;;  uid             2    0        unsigned char [2]
  3211 ;;  size            1   28[BANK3 ] unsigned char 
  3212 ;;  rssi            1   25[BANK3 ] unsigned char 
  3213 ;;  power           1   24[BANK3 ] unsigned char 
  3214 ;;  x               2   26[BANK3 ] int 
  3215 ;;  result          1    0        unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3228 ;;      Totals:         0       0       7       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3229 ;;Total ram usage:       19 bytes
  3230 ;; Hardware stack levels required when called:   28
  3231 ;; This function calls:
  3232 ;;		_MiApp_ConnectionMode
  3233 ;;		_MiApp_DiscardMessage
  3234 ;;		_MiApp_MessageAvailable
  3235 ;;		_MiApp_NoiseDetection
  3236 ;;		_MiApp_ProtocolInit
  3237 ;;		_MiApp_SetChannel
  3238 ;;		_MiApp_StartConnection
  3239 ;;		_MiApp_UnicastAddress
  3240 ;;		_MiMAC_SetPower
  3241 ;;		_MiWiTasks
  3242 ;;		_SYSTEM_Initialize
  3243 ;;		_USBDeviceAttach
  3244 ;;		_USBDeviceInit
  3245 ;;		_USBTransferOnePacket
  3246 ;;		_dBm_to_mW
  3247 ;;		_decode_variable
  3248 ;;		_memcpy
  3249 ;;		_sendHIDBinary
  3250 ;;		_sendHIDText
  3251 ;;		_send_complete_update
  3252 ;;		_send_network_register
  3253 ;;		_send_periodic_update
  3254 ;;		_send_writables_update
  3255 ;;		_sprintf
  3256 ;;		_strcpy
  3257 ;;		_timer_reset
  3258 ;;		_update_LED
  3259 ;;		_update_variable
  3260 ;; This function is called by:
  3261 ;;		Startup code after reset
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text0
  3266  003D4C                     __ptext0:
  3267                           	opt stack 0
  3268  003D4C                     _main:
  3269                           	opt stack 3
  3270                           
  3271                           ;main.c: 143: SYSTEM_Initialize();
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;incstack = 0
  3275  003D4C  EC54  F040         	call	_SYSTEM_Initialize	;wreg free
  3276                           
  3277                           ;main.c: 148: myAppState = STATE_INIT;
  3278  003D50  0E00               	movlw	0
  3279  003D52  6E50               	movwf	_myAppState,c
  3280                           
  3281                           ;main.c: 150: bool result;
  3282                           ;main.c: 152: myLongAddress[0] = myMODEL[0];
  3283  003D54  0EF4               	movlw	244
  3284  003D56  6EF6               	movwf	tblptrl,c
  3285  003D58                     	if	1	;There is more than 1 active tblptr byte
  3286  003D58  0EFF               	movlw	255
  3287  003D5A  6EF7               	movwf	tblptrh,c
  3288  003D5C                     	endif
  3289  003D5C                     	if	1	;There are 3 active tblptr bytes
  3290  003D5C  0E01               	movlw	1
  3291  003D5E  6EF8               	movwf	tblptru,c
  3292  003D60                     	endif
  3293  003D60  0008               	tblrd		*
  3294  003D62  CFF5 F1E8          	movff	tablat,_myLongAddress
  3295                           
  3296                           ;main.c: 153: myLongAddress[1] = myMODEL[1];
  3297  003D66  0EF5               	movlw	245
  3298  003D68  6EF6               	movwf	tblptrl,c
  3299  003D6A  0EFF               	movlw	255
  3300  003D6C  6EF7               	movwf	tblptrh,c
  3301  003D6E  0E01               	movlw	1
  3302  003D70  6EF8               	movwf	tblptru,c
  3303  003D72  0008               	tblrd		*
  3304  003D74  CFF5 F1E9          	movff	tablat,_myLongAddress+1
  3305                           
  3306                           ;main.c: 154: myLongAddress[2] = myUID[0];
  3307  003D78  0EF6               	movlw	246
  3308  003D7A  6EF6               	movwf	tblptrl,c
  3309  003D7C                     	if	1	;There is more than 1 active tblptr byte
  3310  003D7C  0EFF               	movlw	255
  3311  003D7E  6EF7               	movwf	tblptrh,c
  3312  003D80                     	endif
  3313  003D80                     	if	1	;There are 3 active tblptr bytes
  3314  003D80  0E01               	movlw	1
  3315  003D82  6EF8               	movwf	tblptru,c
  3316  003D84                     	endif
  3317  003D84  0008               	tblrd		*
  3318  003D86  CFF5 F1EA          	movff	tablat,_myLongAddress+2
  3319                           
  3320                           ;main.c: 155: myLongAddress[3] = myUID[1];
  3321  003D8A  0EF7               	movlw	247
  3322  003D8C  6EF6               	movwf	tblptrl,c
  3323  003D8E  0EFF               	movlw	255
  3324  003D90  6EF7               	movwf	tblptrh,c
  3325  003D92  0E01               	movlw	1
  3326  003D94  6EF8               	movwf	tblptru,c
  3327  003D96  0008               	tblrd		*
  3328  003D98  CFF5 F1EB          	movff	tablat,_myLongAddress+3
  3329                           
  3330                           ;main.c: 158: for (int x=0; x<8; x++)
  3331  003D9C  0E00               	movlw	0
  3332  003D9E  0103               	movlb	3	; () banked
  3333  003DA0  6FDF               	movwf	(main@x+1)& (0+255),b
  3334  003DA2  0E00               	movlw	0
  3335  003DA4  6FDE               	movwf	main@x& (0+255),b
  3336  003DA6                     l20274:
  3337                           
  3338                           ; BSR set to: 3
  3339  003DA6  0103               	movlb	3	; () banked
  3340  003DA8  BFDF               	btfsc	(main@x+1)& (0+255),7,b
  3341  003DAA  D008               	goto	l20278
  3342  003DAC  0103               	movlb	3	; () banked
  3343  003DAE  51DF               	movf	(main@x+1)& (0+255),w,b
  3344  003DB0  E11E               	bnz	l20284
  3345  003DB2  0E08               	movlw	8
  3346  003DB4  0103               	movlb	3	; () banked
  3347  003DB6  5DDE               	subwf	main@x& (0+255),w,b
  3348  003DB8  B0D8               	btfsc	status,0,c
  3349  003DBA  D019               	goto	l20284
  3350  003DBC                     l20278:
  3351                           
  3352                           ; BSR set to: 3
  3353                           ;main.c: 159: mySecurityKey[x] = StaticSecurityKey[x];
  3354  003DBC  0EEC               	movlw	236
  3355  003DBE  0103               	movlb	3	; () banked
  3356  003DC0  25DE               	addwf	main@x& (0+255),w,b
  3357  003DC2  6EF6               	movwf	tblptrl,c
  3358  003DC4  0E1F               	movlw	31
  3359  003DC6  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3360  003DC8  6EF7               	movwf	tblptrh,c
  3361  003DCA  6AF8               	clrf	tblptru,c
  3362  003DCC  0E00               	movlw	0
  3363  003DCE  22F8               	addwfc	tblptru,f,c
  3364  003DD0  0EBC               	movlw	low _mySecurityKey
  3365  003DD2  0103               	movlb	3	; () banked
  3366  003DD4  25DE               	addwf	main@x& (0+255),w,b
  3367  003DD6  6ED9               	movwf	fsr2l,c
  3368  003DD8  0E00               	movlw	high _mySecurityKey
  3369  003DDA  0103               	movlb	3	; () banked
  3370  003DDC  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3371  003DDE  6EDA               	movwf	fsr2h,c
  3372  003DE0  0008               	tblrd		*
  3373  003DE2  CFF5 FFDF          	movff	tablat,indf2
  3374                           
  3375                           ; BSR set to: 3
  3376  003DE6  0103               	movlb	3	; () banked
  3377  003DE8  4BDE               	infsnz	main@x& (0+255),f,b
  3378  003DEA  2BDF               	incf	(main@x+1)& (0+255),f,b
  3379  003DEC  D7DC               	goto	l20274
  3380  003DEE                     l20284:
  3381                           
  3382                           ; BSR set to: 3
  3383                           ;main.c: 166: status_led = LED_FAST_PULSE;
  3384  003DEE  0E01               	movlw	1
  3385  003DF0  6E53               	movwf	_status_led,c	;volatile
  3386                           
  3387                           ; BSR set to: 3
  3388                           ;main.c: 167: update_LED();
  3389  003DF2  ECCF  F053         	call	_update_LED	;wreg free
  3390                           
  3391                           ;main.c: 170: USBDeviceInit();
  3392  003DF6  EC6C  F03C         	call	_USBDeviceInit	;wreg free
  3393                           
  3394                           ;main.c: 174: USBDeviceAttach();
  3395  003DFA  EC54  F056         	call	_USBDeviceAttach	;wreg free
  3396  003DFE                     l20292:
  3397                           
  3398                           ;main.c: 176: {
  3399                           ;main.c: 180: if( USBDeviceState < CONFIGURED_STATE )
  3400  003DFE  0E20               	movlw	32
  3401  003E00  6049               	cpfslt	_USBDeviceState,c	;volatile
  3402  003E02  D001               	goto	l1723
  3403  003E04  D7FC               	goto	l20292
  3404  003E06                     l1723:
  3405                           
  3406                           ;main.c: 182: if( UCONbits.SUSPND == 1 )
  3407  003E06  B265               	btfsc	3941,1,c	;volatile
  3408  003E08  D7FA               	goto	l20292
  3409                           
  3410                           ;main.c: 184: myAppState = STATE_USB_READY;
  3411                           
  3412                           ;main.c: 183: continue;
  3413  003E0A  0E01               	movlw	1
  3414  003E0C  6E50               	movwf	_myAppState,c
  3415                           
  3416                           ;main.c: 186: }
  3417                           ;main.c: 188: strcpy(ToSendDataBuffer, "I|RESET");
  3418                           
  3419                           ;main.c: 185: break;
  3420  003E0E  0E84               	movlw	low _ToSendDataBuffer
  3421  003E10  0101               	movlb	1	; () banked
  3422  003E12  6F00               	movwf	strcpy@to& (0+255),b
  3423  003E14  0E03               	movlw	high _ToSendDataBuffer
  3424  003E16  0101               	movlb	1	; () banked
  3425  003E18  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3426  003E1A  0EB7               	movlw	low STR_1
  3427  003E1C  0101               	movlb	1	; () banked
  3428  003E1E  6F02               	movwf	strcpy@from& (0+255),b
  3429  003E20  0E23               	movlw	high STR_1
  3430  003E22  0101               	movlb	1	; () banked
  3431  003E24  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3432  003E26  EC71  F056         	call	_strcpy	;wreg free
  3433                           
  3434                           ;main.c: 189: sendHIDText(ToSendDataBuffer);
  3435  003E2A  0E84               	movlw	low _ToSendDataBuffer
  3436  003E2C  0101               	movlb	1	; () banked
  3437  003E2E  6F07               	movwf	sendHIDText@str& (0+255),b
  3438  003E30  0E03               	movlw	high _ToSendDataBuffer
  3439  003E32  0101               	movlb	1	; () banked
  3440  003E34  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3441  003E36  EC5B  F04A         	call	_sendHIDText	;wreg free
  3442                           
  3443                           ;main.c: 190: _delay((unsigned long)((20)*(16000000/4000.0)));
  3444  003E3A  0E68               	movlw	104
  3445  003E3C  0101               	movlb	1	; () banked
  3446  003E3E  6F89               	movwf	??_main& (0+255),b
  3447  003E40  0EE4               	movlw	228
  3448  003E42                     u22757:
  3449  003E42  2EE8               	decfsz	wreg,f,c
  3450  003E44  D7FE               	goto	u22757
  3451  003E46  2F89               	decfsz	??_main& (0+255),f,b
  3452  003E48  D7FC               	goto	u22757
  3453  003E4A  D000               	nop2	
  3454                           
  3455                           ;main.c: 194: send_network_register();
  3456  003E4C  EC0F  F04E         	call	_send_network_register	;wreg free
  3457  003E50                     l20308:
  3458                           
  3459                           ;main.c: 196: {
  3460                           ;main.c: 198: if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN) == 0
      +                          )
  3461  003E50  0101               	movlb	1	; () banked
  3462  003E52  51B8               	movf	_USBOutHandle& (0+255),w,b
  3463  003E54  0101               	movlb	1	; () banked
  3464  003E56  11B9               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  3465  003E58  B4D8               	btfsc	status,2,c
  3466  003E5A  D013               	goto	l20312
  3467                           
  3468                           ; BSR set to: 1
  3469  003E5C  C1B8  FFD9         	movff	_USBOutHandle,fsr2l
  3470  003E60  C1B9  FFDA         	movff	_USBOutHandle+1,fsr2h
  3471  003E64  0101               	movlb	1	; () banked
  3472  003E66  AEDF               	btfss	indf2,7,c
  3473  003E68  D004               	goto	u22220
  3474  003E6A  0101               	movlb	1	; () banked
  3475  003E6C  6B89               	clrf	??_main& (0+255),b
  3476  003E6E  2B89               	incf	??_main& (0+255),f,b
  3477  003E70  D002               	goto	u22228
  3478  003E72                     u22220:
  3479  003E72  0101               	movlb	1	; () banked
  3480  003E74  6B89               	clrf	??_main& (0+255),b
  3481  003E76                     u22228:
  3482  003E76  0101               	movlb	1	; () banked
  3483  003E78  5189               	movf	??_main& (0+255),w,b
  3484  003E7A  0103               	movlb	3	; () banked
  3485  003E7C  6FD8               	movwf	_main$4875& (0+255),b
  3486  003E7E  6BD9               	clrf	(_main$4875+1)& (0+255),b
  3487  003E80  D005               	goto	l20314
  3488  003E82                     l20312:
  3489  003E82  0E00               	movlw	0
  3490  003E84  0103               	movlb	3	; () banked
  3491  003E86  6FD9               	movwf	(_main$4875+1)& (0+255),b
  3492  003E88  0E00               	movlw	0
  3493  003E8A  6FD8               	movwf	_main$4875& (0+255),b
  3494  003E8C                     l20314:
  3495                           
  3496                           ; BSR set to: 3
  3497  003E8C  0103               	movlb	3	; () banked
  3498  003E8E  51D8               	movf	_main$4875& (0+255),w,b
  3499  003E90  0103               	movlb	3	; () banked
  3500  003E92  11D9               	iorwf	(_main$4875+1)& (0+255),w,b
  3501  003E94  B4D8               	btfsc	status,2,c
  3502  003E96  D01E               	goto	l20330
  3503  003E98  D7DB               	goto	l20308
  3504  003E9A                     l20318:
  3505                           
  3506                           ;main.c: 203: if (ReceivedDataBuffer[1] != 0x00 || ReceivedDataBuffer[2] != 0x00 || Rece
      +                          ivedDataBuffer[3] != 4 ||ReceivedDataBuffer[4] != 02 || ReceivedDataBuffer[5] != 0xff)
  3507  003E9A  0104               	movlb	4	; () banked
  3508  003E9C  5101               	movf	(_ReceivedDataBuffer+1)& (0+255),w,b
  3509  003E9E  A4D8               	btfss	status,2,c
  3510  003EA0  D011               	goto	l1737
  3511                           
  3512                           ; BSR set to: 4
  3513  003EA2  0104               	movlb	4	; () banked
  3514  003EA4  5102               	movf	(_ReceivedDataBuffer+2)& (0+255),w,b
  3515  003EA6  A4D8               	btfss	status,2,c
  3516  003EA8  D00D               	goto	l1737
  3517                           
  3518                           ; BSR set to: 4
  3519  003EAA  0E04               	movlw	4
  3520  003EAC  0104               	movlb	4	; () banked
  3521  003EAE  1903               	xorwf	(_ReceivedDataBuffer+3)& (0+255),w,b
  3522  003EB0  A4D8               	btfss	status,2,c
  3523  003EB2  D008               	goto	l1737
  3524                           
  3525                           ; BSR set to: 4
  3526  003EB4  0E02               	movlw	2
  3527  003EB6  0104               	movlb	4	; () banked
  3528  003EB8  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  3529  003EBA  A4D8               	btfss	status,2,c
  3530  003EBC  D003               	goto	l1737
  3531                           
  3532                           ; BSR set to: 4
  3533  003EBE  0104               	movlb	4	; () banked
  3534  003EC0  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  3535  003EC2  A4D8               	btfss	status,2,c
  3536  003EC4                     l1737:
  3537                           
  3538                           ; BSR set to: 4
  3539  003EC4  00FF               	reset		;# 
  3540                           
  3541                           ;main.c: 208: }
  3542                           ;main.c: 209: mySecurityKey[2] = ReceivedDataBuffer[6];
  3543  003EC6  C406  F0BE         	movff	_ReceivedDataBuffer+6,_mySecurityKey+2
  3544                           
  3545                           ;main.c: 210: mySecurityKey[6] = ReceivedDataBuffer[7];
  3546  003ECA  C407  F0C2         	movff	_ReceivedDataBuffer+7,_mySecurityKey+6
  3547                           
  3548                           ;main.c: 211: break;
  3549  003ECE  D00A               	goto	l20332
  3550  003ED0                     l1739:
  3551                           
  3552                           ; BSR set to: 4
  3553  003ED0  00FF               	reset		;# 
  3554                           
  3555                           ;main.c: 218: }
  3556                           
  3557                           ;main.c: 217: break;
  3558                           
  3559                           ;main.c: 215: default:
  3560                           
  3561                           ;main.c: 214: break;
  3562  003ED2  D008               	goto	l20332
  3563  003ED4                     l20330:
  3564  003ED4  0104               	movlb	4	; () banked
  3565  003ED6  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  3566                           
  3567                           ; Switch size 1, requested type "space"
  3568                           ; Number of cases is 2, Range of values is 83 to 88
  3569                           ; switch strategies available:
  3570                           ; Name         Instructions Cycles
  3571                           ; simple_byte            7     4 (average)
  3572                           ;	Chosen strategy is simple_byte
  3573  003ED8  0A53               	xorlw	83	; case 83
  3574  003EDA  B4D8               	btfsc	status,2,c
  3575  003EDC  D7DE               	goto	l20318
  3576  003EDE  0A0B               	xorlw	11	; case 88
  3577  003EE0  B4D8               	btfsc	status,2,c
  3578  003EE2  D7F6               	goto	l1739
  3579  003EE4                     l20332:
  3580                           
  3581                           ;main.c: 220: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  3582  003EE4  0E00               	movlw	0
  3583  003EE6  0101               	movlb	1	; () banked
  3584  003EE8  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  3585  003EEA  0E00               	movlw	low _ReceivedDataBuffer
  3586  003EEC  0101               	movlb	1	; () banked
  3587  003EEE  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  3588  003EF0  0E04               	movlw	high _ReceivedDataBuffer
  3589  003EF2  0101               	movlb	1	; () banked
  3590  003EF4  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3591  003EF6  0E40               	movlw	64
  3592  003EF8  0101               	movlb	1	; () banked
  3593  003EFA  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  3594  003EFC  0E01               	movlw	1
  3595  003EFE  ECB8  F048         	call	_USBTransferOnePacket
  3596  003F02  C100  F1B8         	movff	?_USBTransferOnePacket,_USBOutHandle
  3597  003F06  C101  F1B9         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  3598                           
  3599                           ;main.c: 222: }
  3600                           ;main.c: 223: }
  3601                           ;main.c: 227: MiApp_ProtocolInit(0);
  3602                           
  3603                           ;main.c: 221: break;
  3604  003F0A  0E00               	movlw	0
  3605  003F0C  ECEF  F03A         	call	_MiApp_ProtocolInit
  3606                           
  3607                           ;main.c: 228: m_power = 0x00;
  3608  003F10  0E00               	movlw	0
  3609  003F12  0101               	movlb	1	; () banked
  3610  003F14  6FC9               	movwf	_m_power& (0+255),b
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;main.c: 229: MiMAC_SetPower(m_power);
  3614  003F16  0101               	movlb	1	; () banked
  3615  003F18  51C9               	movf	_m_power& (0+255),w,b
  3616  003F1A  EC37  F056         	call	_MiMAC_SetPower
  3617                           
  3618                           ;main.c: 232: strcpy(ToSendDataBuffer, "I|scanning channels for noise...");
  3619  003F1E  0E84               	movlw	low _ToSendDataBuffer
  3620  003F20  0101               	movlb	1	; () banked
  3621  003F22  6F00               	movwf	strcpy@to& (0+255),b
  3622  003F24  0E03               	movlw	high _ToSendDataBuffer
  3623  003F26  0101               	movlb	1	; () banked
  3624  003F28  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3625  003F2A  0E06               	movlw	low STR_2
  3626  003F2C  0101               	movlb	1	; () banked
  3627  003F2E  6F02               	movwf	strcpy@from& (0+255),b
  3628  003F30  0E23               	movlw	high STR_2
  3629  003F32  0101               	movlb	1	; () banked
  3630  003F34  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3631  003F36  EC71  F056         	call	_strcpy	;wreg free
  3632                           
  3633                           ;main.c: 233: sendHIDText(ToSendDataBuffer);
  3634  003F3A  0E84               	movlw	low _ToSendDataBuffer
  3635  003F3C  0101               	movlb	1	; () banked
  3636  003F3E  6F07               	movwf	sendHIDText@str& (0+255),b
  3637  003F40  0E03               	movlw	high _ToSendDataBuffer
  3638  003F42  0101               	movlb	1	; () banked
  3639  003F44  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3640  003F46  EC5B  F04A         	call	_sendHIDText	;wreg free
  3641                           
  3642                           ;main.c: 234: _delay((unsigned long)((20)*(16000000/4000.0)));
  3643  003F4A  0E68               	movlw	104
  3644  003F4C  0101               	movlb	1	; () banked
  3645  003F4E  6F89               	movwf	??_main& (0+255),b
  3646  003F50  0EE4               	movlw	228
  3647  003F52                     u22767:
  3648  003F52  2EE8               	decfsz	wreg,f,c
  3649  003F54  D7FE               	goto	u22767
  3650  003F56  2F89               	decfsz	??_main& (0+255),f,b
  3651  003F58  D7FC               	goto	u22767
  3652  003F5A  D000               	nop2	
  3653                           
  3654                           ;main.c: 238: BestChannel = MiApp_NoiseDetection(0x00000001, 8, 0x00, &noise_level);
  3655  003F5C  0E01               	movlw	1
  3656  003F5E  0101               	movlb	1	; () banked
  3657  003F60  6F1D               	movwf	MiApp_NoiseDetection@ChannelMap& (0+255),b
  3658  003F62  0E00               	movlw	0
  3659  003F64  6F1E               	movwf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),b
  3660  003F66  0E00               	movlw	0
  3661  003F68  6F1F               	movwf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),b
  3662  003F6A  0E00               	movlw	0
  3663  003F6C  6F20               	movwf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),b
  3664  003F6E  0E08               	movlw	8
  3665  003F70  0101               	movlb	1	; () banked
  3666  003F72  6F21               	movwf	MiApp_NoiseDetection@ScanDuration& (0+255),b
  3667  003F74  0E00               	movlw	0
  3668  003F76  0101               	movlb	1	; () banked
  3669  003F78  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
  3670  003F7A  0EF7               	movlw	low _noise_level
  3671  003F7C  0101               	movlb	1	; () banked
  3672  003F7E  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
  3673  003F80  0E01               	movlw	high _noise_level
  3674  003F82  0101               	movlb	1	; () banked
  3675  003F84  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
  3676  003F86  EC4B  F038         	call	_MiApp_NoiseDetection	;wreg free
  3677  003F8A  0101               	movlb	1	; () banked
  3678  003F8C  6FBF               	movwf	_BestChannel& (0+255),b
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;main.c: 240: sprintf(ToSendDataBuffer, "I|best channel: %i (noise == %i)", BestChannel,
      +                           noise_level);
  3682  003F8E  0E84               	movlw	low _ToSendDataBuffer
  3683  003F90  0101               	movlb	1	; () banked
  3684  003F92  6F0C               	movwf	sprintf@sp& (0+255),b
  3685  003F94  0E03               	movlw	high _ToSendDataBuffer
  3686  003F96  0101               	movlb	1	; () banked
  3687  003F98  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3688  003F9A  0EE5               	movlw	low STR_3
  3689  003F9C  0101               	movlb	1	; () banked
  3690  003F9E  6F0E               	movwf	sprintf@f& (0+255),b
  3691  003FA0  0E22               	movlw	high STR_3
  3692  003FA2  0101               	movlb	1	; () banked
  3693  003FA4  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3694  003FA6  C1BF  F110         	movff	_BestChannel,?_sprintf+4
  3695  003FAA  0101               	movlb	1	; () banked
  3696  003FAC  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3697  003FAE  C1F7  F112         	movff	_noise_level,?_sprintf+6
  3698  003FB2  0101               	movlb	1	; () banked
  3699  003FB4  6B13               	clrf	(?_sprintf+7)& (0+255),b
  3700  003FB6  ECDD  F029         	call	_sprintf	;wreg free
  3701                           
  3702                           ;main.c: 241: sendHIDText(ToSendDataBuffer);
  3703  003FBA  0E84               	movlw	low _ToSendDataBuffer
  3704  003FBC  0101               	movlb	1	; () banked
  3705  003FBE  6F07               	movwf	sendHIDText@str& (0+255),b
  3706  003FC0  0E03               	movlw	high _ToSendDataBuffer
  3707  003FC2  0101               	movlb	1	; () banked
  3708  003FC4  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3709  003FC6  EC5B  F04A         	call	_sendHIDText	;wreg free
  3710                           
  3711                           ;main.c: 242: _delay((unsigned long)((20)*(16000000/4000.0)));
  3712  003FCA  0E68               	movlw	104
  3713  003FCC  0101               	movlb	1	; () banked
  3714  003FCE  6F89               	movwf	??_main& (0+255),b
  3715  003FD0  0EE4               	movlw	228
  3716  003FD2                     u22777:
  3717  003FD2  2EE8               	decfsz	wreg,f,c
  3718  003FD4  D7FE               	goto	u22777
  3719  003FD6  2F89               	decfsz	??_main& (0+255),f,b
  3720  003FD8  D7FC               	goto	u22777
  3721  003FDA  D000               	nop2	
  3722                           
  3723                           ;main.c: 244: if( MiApp_SetChannel(BestChannel) == 0 )
  3724  003FDC  0101               	movlb	1	; () banked
  3725  003FDE  51BF               	movf	_BestChannel& (0+255),w,b
  3726  003FE0  EC5D  F057         	call	_MiApp_SetChannel
  3727  003FE4  0900               	iorlw	0
  3728  003FE6  A4D8               	btfss	status,2,c
  3729  003FE8  D025               	goto	l20364
  3730                           
  3731                           ;main.c: 245: {
  3732                           ;main.c: 246: sprintf(ToSendDataBuffer, "I|Error: unable to set channel %i! (T_T)", Best
      +                          Channel);
  3733  003FEA  0E84               	movlw	low _ToSendDataBuffer
  3734  003FEC  0101               	movlb	1	; () banked
  3735  003FEE  6F0C               	movwf	sprintf@sp& (0+255),b
  3736  003FF0  0E03               	movlw	high _ToSendDataBuffer
  3737  003FF2  0101               	movlb	1	; () banked
  3738  003FF4  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3739  003FF6  0E6E               	movlw	low STR_4
  3740  003FF8  0101               	movlb	1	; () banked
  3741  003FFA  6F0E               	movwf	sprintf@f& (0+255),b
  3742  003FFC  0E22               	movlw	high STR_4
  3743  003FFE  0101               	movlb	1	; () banked
  3744  004000  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3745  004002  C1BF  F110         	movff	_BestChannel,?_sprintf+4
  3746  004006  0101               	movlb	1	; () banked
  3747  004008  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3748  00400A  ECDD  F029         	call	_sprintf	;wreg free
  3749                           
  3750                           ;main.c: 247: sendHIDText(ToSendDataBuffer);
  3751  00400E  0E84               	movlw	low _ToSendDataBuffer
  3752  004010  0101               	movlb	1	; () banked
  3753  004012  6F07               	movwf	sendHIDText@str& (0+255),b
  3754  004014  0E03               	movlw	high _ToSendDataBuffer
  3755  004016  0101               	movlb	1	; () banked
  3756  004018  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3757  00401A  EC5B  F04A         	call	_sendHIDText	;wreg free
  3758                           
  3759                           ;main.c: 248: _delay((unsigned long)((20)*(16000000/4000.0)));
  3760  00401E  0E68               	movlw	104
  3761  004020  0101               	movlb	1	; () banked
  3762  004022  6F89               	movwf	??_main& (0+255),b
  3763  004024  0EE4               	movlw	228
  3764  004026                     u22787:
  3765  004026  2EE8               	decfsz	wreg,f,c
  3766  004028  D7FE               	goto	u22787
  3767  00402A  2F89               	decfsz	??_main& (0+255),f,b
  3768  00402C  D7FC               	goto	u22787
  3769  00402E  D000               	nop2	
  3770                           
  3771                           ;main.c: 249: return;
  3772  004030  EFF2  F000         	goto	start
  3773  004034                     l20364:
  3774                           
  3775                           ;main.c: 250: }
  3776                           ;main.c: 252: sprintf(ToSendDataBuffer, "I|creating network...");
  3777  004034  0E84               	movlw	low _ToSendDataBuffer
  3778  004036  0101               	movlb	1	; () banked
  3779  004038  6F0C               	movwf	sprintf@sp& (0+255),b
  3780  00403A  0E03               	movlw	high _ToSendDataBuffer
  3781  00403C  0101               	movlb	1	; () banked
  3782  00403E  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3783  004040  0E7F               	movlw	low STR_5
  3784  004042  0101               	movlb	1	; () banked
  3785  004044  6F0E               	movwf	sprintf@f& (0+255),b
  3786  004046  0E23               	movlw	high STR_5
  3787  004048  0101               	movlb	1	; () banked
  3788  00404A  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3789  00404C  ECDD  F029         	call	_sprintf	;wreg free
  3790                           
  3791                           ;main.c: 253: sendHIDText(ToSendDataBuffer);
  3792  004050  0E84               	movlw	low _ToSendDataBuffer
  3793  004052  0101               	movlb	1	; () banked
  3794  004054  6F07               	movwf	sendHIDText@str& (0+255),b
  3795  004056  0E03               	movlw	high _ToSendDataBuffer
  3796  004058  0101               	movlb	1	; () banked
  3797  00405A  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3798  00405C  EC5B  F04A         	call	_sendHIDText	;wreg free
  3799                           
  3800                           ;main.c: 254: _delay((unsigned long)((20)*(16000000/4000.0)));
  3801  004060  0E68               	movlw	104
  3802  004062  0101               	movlb	1	; () banked
  3803  004064  6F89               	movwf	??_main& (0+255),b
  3804  004066  0EE4               	movlw	228
  3805  004068                     u22797:
  3806  004068  2EE8               	decfsz	wreg,f,c
  3807  00406A  D7FE               	goto	u22797
  3808  00406C  2F89               	decfsz	??_main& (0+255),f,b
  3809  00406E  D7FC               	goto	u22797
  3810  004070  D000               	nop2	
  3811                           
  3812                           ;main.c: 256: MiApp_StartConnection(0x00, 0, 0);
  3813  004072  0E00               	movlw	0
  3814  004074  0101               	movlb	1	; () banked
  3815  004076  6F41               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  3816  004078  0E00               	movlw	0
  3817  00407A  0101               	movlb	1	; () banked
  3818  00407C  6F42               	movwf	MiApp_StartConnection@ChannelMap& (0+255),b
  3819  00407E  0E00               	movlw	0
  3820  004080  6F43               	movwf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  3821  004082  0E00               	movlw	0
  3822  004084  6F44               	movwf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  3823  004086  0E00               	movlw	0
  3824  004088  6F45               	movwf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  3825  00408A  0E00               	movlw	0
  3826  00408C  EC71  F044         	call	_MiApp_StartConnection
  3827                           
  3828                           ;main.c: 257: MiApp_ConnectionMode(0x03);
  3829  004090  0E03               	movlw	3
  3830  004092  ECF5  F056         	call	_MiApp_ConnectionMode
  3831                           
  3832                           ;main.c: 259: sprintf(ToSendDataBuffer, "I|PANID:%02x%02x Ch:%02d",myPANID.v[1],myPANID.
      +                          v[0],BestChannel);
  3833  004096  0E84               	movlw	low _ToSendDataBuffer
  3834  004098  0101               	movlb	1	; () banked
  3835  00409A  6F0C               	movwf	sprintf@sp& (0+255),b
  3836  00409C  0E03               	movlw	high _ToSendDataBuffer
  3837  00409E  0101               	movlb	1	; () banked
  3838  0040A0  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3839  0040A2  0E66               	movlw	low STR_6
  3840  0040A4  0101               	movlb	1	; () banked
  3841  0040A6  6F0E               	movwf	sprintf@f& (0+255),b
  3842  0040A8  0E23               	movlw	high STR_6
  3843  0040AA  0101               	movlb	1	; () banked
  3844  0040AC  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3845  0040AE  C1F1  F110         	movff	_myPANID+1,?_sprintf+4
  3846  0040B2  0101               	movlb	1	; () banked
  3847  0040B4  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3848  0040B6  C1F0  F112         	movff	_myPANID,?_sprintf+6
  3849  0040BA  0101               	movlb	1	; () banked
  3850  0040BC  6B13               	clrf	(?_sprintf+7)& (0+255),b
  3851  0040BE  C1BF  F114         	movff	_BestChannel,?_sprintf+8
  3852  0040C2  0101               	movlb	1	; () banked
  3853  0040C4  6B15               	clrf	(?_sprintf+9)& (0+255),b
  3854  0040C6  ECDD  F029         	call	_sprintf	;wreg free
  3855                           
  3856                           ;main.c: 260: sendHIDText(ToSendDataBuffer);
  3857  0040CA  0E84               	movlw	low _ToSendDataBuffer
  3858  0040CC  0101               	movlb	1	; () banked
  3859  0040CE  6F07               	movwf	sendHIDText@str& (0+255),b
  3860  0040D0  0E03               	movlw	high _ToSendDataBuffer
  3861  0040D2  0101               	movlb	1	; () banked
  3862  0040D4  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3863  0040D6  EC5B  F04A         	call	_sendHIDText	;wreg free
  3864                           
  3865                           ;main.c: 261: _delay((unsigned long)((20)*(16000000/4000.0)));
  3866  0040DA  0E68               	movlw	104
  3867  0040DC  0101               	movlb	1	; () banked
  3868  0040DE  6F89               	movwf	??_main& (0+255),b
  3869  0040E0  0EE4               	movlw	228
  3870  0040E2                     u22807:
  3871  0040E2  2EE8               	decfsz	wreg,f,c
  3872  0040E4  D7FE               	goto	u22807
  3873  0040E6  2F89               	decfsz	??_main& (0+255),f,b
  3874  0040E8  D7FC               	goto	u22807
  3875  0040EA  D000               	nop2	
  3876                           
  3877                           ;main.c: 263: sprintf(ToSendDataBuffer, "I|operator's address: %02x%02x", myShortAddress
      +                          .v[1], myShortAddress.v[0]);
  3878  0040EC  0E84               	movlw	low _ToSendDataBuffer
  3879  0040EE  0101               	movlb	1	; () banked
  3880  0040F0  6F0C               	movwf	sprintf@sp& (0+255),b
  3881  0040F2  0E03               	movlw	high _ToSendDataBuffer
  3882  0040F4  0101               	movlb	1	; () banked
  3883  0040F6  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3884  0040F8  0E47               	movlw	low STR_7
  3885  0040FA  0101               	movlb	1	; () banked
  3886  0040FC  6F0E               	movwf	sprintf@f& (0+255),b
  3887  0040FE  0E23               	movlw	high STR_7
  3888  004100  0101               	movlb	1	; () banked
  3889  004102  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3890  004104  C1F3  F110         	movff	_myShortAddress+1,?_sprintf+4
  3891  004108  0101               	movlb	1	; () banked
  3892  00410A  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3893  00410C  C1F2  F112         	movff	_myShortAddress,?_sprintf+6
  3894  004110  0101               	movlb	1	; () banked
  3895  004112  6B13               	clrf	(?_sprintf+7)& (0+255),b
  3896  004114  ECDD  F029         	call	_sprintf	;wreg free
  3897                           
  3898                           ;main.c: 264: sendHIDText(ToSendDataBuffer);
  3899  004118  0E84               	movlw	low _ToSendDataBuffer
  3900  00411A  0101               	movlb	1	; () banked
  3901  00411C  6F07               	movwf	sendHIDText@str& (0+255),b
  3902  00411E  0E03               	movlw	high _ToSendDataBuffer
  3903  004120  0101               	movlb	1	; () banked
  3904  004122  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3905  004124  EC5B  F04A         	call	_sendHIDText	;wreg free
  3906                           
  3907                           ;main.c: 265: _delay((unsigned long)((20)*(16000000/4000.0)));
  3908  004128  0E68               	movlw	104
  3909  00412A  0101               	movlb	1	; () banked
  3910  00412C  6F89               	movwf	??_main& (0+255),b
  3911  00412E  0EE4               	movlw	228
  3912  004130                     u22817:
  3913  004130  2EE8               	decfsz	wreg,f,c
  3914  004132  D7FE               	goto	u22817
  3915  004134  2F89               	decfsz	??_main& (0+255),f,b
  3916  004136  D7FC               	goto	u22817
  3917  004138  D000               	nop2	
  3918                           
  3919                           ;main.c: 267: sprintf(ToSendDataBuffer, "I|status: ready!");
  3920  00413A  0E84               	movlw	low _ToSendDataBuffer
  3921  00413C  0101               	movlb	1	; () banked
  3922  00413E  6F0C               	movwf	sprintf@sp& (0+255),b
  3923  004140  0E03               	movlw	high _ToSendDataBuffer
  3924  004142  0101               	movlb	1	; () banked
  3925  004144  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3926  004146  0EA6               	movlw	low STR_8
  3927  004148  0101               	movlb	1	; () banked
  3928  00414A  6F0E               	movwf	sprintf@f& (0+255),b
  3929  00414C  0E23               	movlw	high STR_8
  3930  00414E  0101               	movlb	1	; () banked
  3931  004150  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3932  004152  ECDD  F029         	call	_sprintf	;wreg free
  3933                           
  3934                           ;main.c: 268: sendHIDText(ToSendDataBuffer);
  3935  004156  0E84               	movlw	low _ToSendDataBuffer
  3936  004158  0101               	movlb	1	; () banked
  3937  00415A  6F07               	movwf	sendHIDText@str& (0+255),b
  3938  00415C  0E03               	movlw	high _ToSendDataBuffer
  3939  00415E  0101               	movlb	1	; () banked
  3940  004160  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3941  004162  EC5B  F04A         	call	_sendHIDText	;wreg free
  3942                           
  3943                           ;main.c: 269: _delay((unsigned long)((20)*(16000000/4000.0)));
  3944  004166  0E68               	movlw	104
  3945  004168  0101               	movlb	1	; () banked
  3946  00416A  6F89               	movwf	??_main& (0+255),b
  3947  00416C  0EE4               	movlw	228
  3948  00416E                     u22827:
  3949  00416E  2EE8               	decfsz	wreg,f,c
  3950  004170  D7FE               	goto	u22827
  3951  004172  2F89               	decfsz	??_main& (0+255),f,b
  3952  004174  D7FC               	goto	u22827
  3953  004176  D000               	nop2	
  3954                           
  3955                           ;main.c: 274: send_complete_update();
  3956  004178  EC83  F02C         	call	_send_complete_update	;wreg free
  3957                           
  3958                           ;main.c: 277: MiApp_ConnectionMode(0x00);
  3959  00417C  0E00               	movlw	0
  3960  00417E  ECF5  F056         	call	_MiApp_ConnectionMode
  3961                           
  3962                           ;main.c: 279: sprintf(ToSendDataBuffer, "I|accepting scans & connections");
  3963  004182  0E84               	movlw	low _ToSendDataBuffer
  3964  004184  0101               	movlb	1	; () banked
  3965  004186  6F0C               	movwf	sprintf@sp& (0+255),b
  3966  004188  0E03               	movlw	high _ToSendDataBuffer
  3967  00418A  0101               	movlb	1	; () banked
  3968  00418C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3969  00418E  0E27               	movlw	low STR_9
  3970  004190  0101               	movlb	1	; () banked
  3971  004192  6F0E               	movwf	sprintf@f& (0+255),b
  3972  004194  0E23               	movlw	high STR_9
  3973  004196  0101               	movlb	1	; () banked
  3974  004198  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3975  00419A  ECDD  F029         	call	_sprintf	;wreg free
  3976                           
  3977                           ;main.c: 280: sendHIDText(ToSendDataBuffer);
  3978  00419E  0E84               	movlw	low _ToSendDataBuffer
  3979  0041A0  0101               	movlb	1	; () banked
  3980  0041A2  6F07               	movwf	sendHIDText@str& (0+255),b
  3981  0041A4  0E03               	movlw	high _ToSendDataBuffer
  3982  0041A6  0101               	movlb	1	; () banked
  3983  0041A8  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3984  0041AA  EC5B  F04A         	call	_sendHIDText	;wreg free
  3985                           
  3986                           ;main.c: 281: _delay((unsigned long)((20)*(16000000/4000.0)));
  3987  0041AE  0E68               	movlw	104
  3988  0041B0  0101               	movlb	1	; () banked
  3989  0041B2  6F89               	movwf	??_main& (0+255),b
  3990  0041B4  0EE4               	movlw	228
  3991  0041B6                     u22837:
  3992  0041B6  2EE8               	decfsz	wreg,f,c
  3993  0041B8  D7FE               	goto	u22837
  3994  0041BA  2F89               	decfsz	??_main& (0+255),f,b
  3995  0041BC  D7FC               	goto	u22837
  3996  0041BE  D000               	nop2	
  3997                           
  3998                           ;main.c: 283: myAppState = STATE_READY;
  3999  0041C0  0E02               	movlw	2
  4000  0041C2  6E50               	movwf	_myAppState,c
  4001                           
  4002                           ;main.c: 284: status_led = LED_SLOW_PULSE;
  4003  0041C4  0E02               	movlw	2
  4004  0041C6  6E53               	movwf	_status_led,c	;volatile
  4005                           
  4006                           ;main.c: 285: update_LED();
  4007  0041C8  ECCF  F053         	call	_update_LED	;wreg free
  4008                           
  4009                           ;main.c: 287: m_uptime_seconds = 0;
  4010  0041CC  0E00               	movlw	0
  4011  0041CE  0100               	movlb	0	; () banked
  4012  0041D0  6FCA               	movwf	_m_uptime_seconds& (0+255),b	;volatile
  4013  0041D2  0E00               	movlw	0
  4014  0041D4  6FCB               	movwf	(_m_uptime_seconds+1)& (0+255),b	;volatile
  4015  0041D6  0E00               	movlw	0
  4016  0041D8  6FCC               	movwf	(_m_uptime_seconds+2)& (0+255),b	;volatile
  4017  0041DA  0E00               	movlw	0
  4018  0041DC  6FCD               	movwf	(_m_uptime_seconds+3)& (0+255),b	;volatile
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 288: timer_reset();
  4022  0041DE  EC8B  F057         	call	_timer_reset	;wreg free
  4023  0041E2                     l20412:
  4024                           
  4025                           ;main.c: 293: {
  4026                           ;main.c: 294: uint8_t shortaddress[2];
  4027                           ;main.c: 295: uint8_t power;
  4028                           ;main.c: 296: uint8_t rssi;
  4029                           ;main.c: 297: uint8_t uid[2];
  4030                           ;main.c: 298: uint8_t size;
  4031                           ;main.c: 302: MiWiTasks();
  4032  0041E2  ECE4  F011         	call	_MiWiTasks	;wreg free
  4033                           
  4034                           ;main.c: 306: if(MiApp_MessageAvailable())
  4035  0041E6  ECAD  F057         	call	_MiApp_MessageAvailable	;wreg free
  4036  0041EA  0900               	iorlw	0
  4037  0041EC  B4D8               	btfsc	status,2,c
  4038  0041EE  D1FD               	goto	l20514
  4039                           
  4040                           ;main.c: 307: {
  4041                           ;main.c: 308: shortaddress[0] = rxMessage.SourceAddress[0];
  4042  0041F0  C193  FFD9         	movff	_rxMessage+3,fsr2l
  4043  0041F4  C194  FFDA         	movff	_rxMessage+4,fsr2h
  4044  0041F8  50DF               	movf	indf2,w,c
  4045  0041FA  0103               	movlb	3	; () banked
  4046  0041FC  6FE1               	movwf	main@shortaddress& (0+255),b
  4047                           
  4048                           ; BSR set to: 3
  4049                           ;main.c: 309: shortaddress[1] = rxMessage.SourceAddress[1];
  4050  0041FE  0101               	movlb	1	; () banked
  4051  004200  EE20 F001          	lfsr	2,1
  4052  004204  5193               	movf	(_rxMessage+3)& (0+255),w,b
  4053  004206  26D9               	addwf	fsr2l,f,c
  4054  004208  5194               	movf	(_rxMessage+4)& (0+255),w,b
  4055  00420A  22DA               	addwfc	fsr2h,f,c
  4056  00420C  50DF               	movf	indf2,w,c
  4057  00420E  0103               	movlb	3	; () banked
  4058  004210  6FE2               	movwf	(main@shortaddress+1)& (0+255),b
  4059                           
  4060                           ;main.c: 310: switch(rxMessage.Payload[0])
  4061  004212  D1D9               	goto	l20512
  4062  004214                     l1748:
  4063                           
  4064                           ;main.c: 313: rssi = rxMessage.PacketRSSI;
  4065  004214  C198  F3DD         	movff	_rxMessage+8,main@rssi
  4066                           
  4067                           ;main.c: 314: power = rxMessage.Payload[1];
  4068  004218  0101               	movlb	1	; () banked
  4069  00421A  EE20 F001          	lfsr	2,1
  4070  00421E  5195               	movf	(_rxMessage+5)& (0+255),w,b
  4071  004220  26D9               	addwf	fsr2l,f,c
  4072  004222  5196               	movf	(_rxMessage+6)& (0+255),w,b
  4073  004224  22DA               	addwfc	fsr2h,f,c
  4074  004226  50DF               	movf	indf2,w,c
  4075  004228  0103               	movlb	3	; () banked
  4076  00422A  6FDC               	movwf	main@power& (0+255),b
  4077                           
  4078                           ; BSR set to: 3
  4079                           ;main.c: 315: MiApp_DiscardMessage();
  4080  00422C  ECB6  F057         	call	_MiApp_DiscardMessage	;wreg free
  4081                           
  4082                           ;main.c: 317: {TxData = 11;};
  4083  004230  0E0B               	movlw	11
  4084  004232  0101               	movlb	1	; () banked
  4085  004234  6FC7               	movwf	_TxData& (0+255),b
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;main.c: 318: TxBuffer[TxData++] = 01;
  4089  004236  0101               	movlb	1	; () banked
  4090  004238  51C7               	movf	_TxData& (0+255),w,b
  4091  00423A  0D01               	mullw	1
  4092  00423C  0EA6               	movlw	low _TxBuffer
  4093  00423E  24F3               	addwf	prodl,w,c
  4094  004240  6ED9               	movwf	fsr2l,c
  4095  004242  0E02               	movlw	high _TxBuffer
  4096  004244  20F4               	addwfc	prodh,w,c
  4097  004246  6EDA               	movwf	fsr2h,c
  4098  004248  0E01               	movlw	1
  4099  00424A  6EDF               	movwf	indf2,c
  4100                           
  4101                           ; BSR set to: 1
  4102  00424C  0101               	movlb	1	; () banked
  4103  00424E  2BC7               	incf	_TxData& (0+255),f,b
  4104                           
  4105                           ; BSR set to: 1
  4106                           ;main.c: 319: TxBuffer[TxData++] = power;
  4107  004250  0101               	movlb	1	; () banked
  4108  004252  51C7               	movf	_TxData& (0+255),w,b
  4109  004254  0D01               	mullw	1
  4110  004256  0EA6               	movlw	low _TxBuffer
  4111  004258  24F3               	addwf	prodl,w,c
  4112  00425A  6ED9               	movwf	fsr2l,c
  4113  00425C  0E02               	movlw	high _TxBuffer
  4114  00425E  20F4               	addwfc	prodh,w,c
  4115  004260  6EDA               	movwf	fsr2h,c
  4116  004262  C3DC  FFDF         	movff	main@power,indf2
  4117                           
  4118                           ; BSR set to: 1
  4119  004266  0101               	movlb	1	; () banked
  4120  004268  2BC7               	incf	_TxData& (0+255),f,b
  4121                           
  4122                           ; BSR set to: 1
  4123                           ;main.c: 320: TxBuffer[TxData++] = rssi;
  4124  00426A  0101               	movlb	1	; () banked
  4125  00426C  51C7               	movf	_TxData& (0+255),w,b
  4126  00426E  0D01               	mullw	1
  4127  004270  0EA6               	movlw	low _TxBuffer
  4128  004272  24F3               	addwf	prodl,w,c
  4129  004274  6ED9               	movwf	fsr2l,c
  4130  004276  0E02               	movlw	high _TxBuffer
  4131  004278  20F4               	addwfc	prodh,w,c
  4132  00427A  6EDA               	movwf	fsr2h,c
  4133  00427C  C3DD  FFDF         	movff	main@rssi,indf2
  4134                           
  4135                           ; BSR set to: 1
  4136  004280  0101               	movlb	1	; () banked
  4137  004282  2BC7               	incf	_TxData& (0+255),f,b
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;main.c: 322: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4141  004284  0EE1               	movlw	low main@shortaddress
  4142  004286  0101               	movlb	1	; () banked
  4143  004288  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4144  00428A  0E03               	movlw	high main@shortaddress
  4145  00428C  0101               	movlb	1	; () banked
  4146  00428E  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4147  004290  0E00               	movlw	0
  4148  004292  0101               	movlb	1	; () banked
  4149  004294  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4150  004296  0E01               	movlw	1
  4151  004298  0101               	movlb	1	; () banked
  4152  00429A  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4153  00429C  EC4D  F031         	call	_MiApp_UnicastAddress	;wreg free
  4154  0042A0  06E8               	decf	wreg,f,c
  4155  0042A2  A4D8               	btfss	status,2,c
  4156  0042A4  D02B               	goto	l20444
  4157                           
  4158                           ;main.c: 323: {
  4159                           ;main.c: 324: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: OK, %s, RSSI=%i", shorta
      +                          ddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4160  0042A6  0E84               	movlw	low _ToSendDataBuffer
  4161  0042A8  0101               	movlb	1	; () banked
  4162  0042AA  6F0C               	movwf	sprintf@sp& (0+255),b
  4163  0042AC  0E03               	movlw	high _ToSendDataBuffer
  4164  0042AE  0101               	movlb	1	; () banked
  4165  0042B0  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4166  0042B2  0EBE               	movlw	low STR_10
  4167  0042B4  0101               	movlb	1	; () banked
  4168  0042B6  6F0E               	movwf	sprintf@f& (0+255),b
  4169  0042B8  0E22               	movlw	high STR_10
  4170  0042BA  0101               	movlb	1	; () banked
  4171  0042BC  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4172  0042BE  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4173  0042C2  0101               	movlb	1	; () banked
  4174  0042C4  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4175  0042C6  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4176  0042CA  0101               	movlb	1	; () banked
  4177  0042CC  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4178  0042CE  0103               	movlb	3	; () banked
  4179  0042D0  51DC               	movf	main@power& (0+255),w,b
  4180  0042D2  EC3E  F04C         	call	_dBm_to_mW
  4181  0042D6  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4182  0042DA  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4183  0042DE  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4184  0042E2  0101               	movlb	1	; () banked
  4185  0042E4  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4186  0042E6  ECDD  F029         	call	_sprintf	;wreg free
  4187                           
  4188                           ;main.c: 325: sendHIDText(ToSendDataBuffer);
  4189  0042EA  0E84               	movlw	low _ToSendDataBuffer
  4190  0042EC  0101               	movlb	1	; () banked
  4191  0042EE  6F07               	movwf	sendHIDText@str& (0+255),b
  4192  0042F0  0E03               	movlw	high _ToSendDataBuffer
  4193  0042F2  0101               	movlb	1	; () banked
  4194  0042F4  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4195  0042F6  EC5B  F04A         	call	_sendHIDText	;wreg free
  4196                           
  4197                           ;main.c: 327: }
  4198  0042FA  D773               	goto	l20412
  4199  0042FC                     l20444:
  4200                           
  4201                           ;main.c: 328: else
  4202                           ;main.c: 329: {
  4203                           ;main.c: 330: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: error sending back, %s, 
      +                          RSSI=%i", shortaddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4204  0042FC  0E84               	movlw	low _ToSendDataBuffer
  4205  0042FE  0101               	movlb	1	; () banked
  4206  004300  6F0C               	movwf	sprintf@sp& (0+255),b
  4207  004302  0E03               	movlw	high _ToSendDataBuffer
  4208  004304  0101               	movlb	1	; () banked
  4209  004306  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4210  004308  0ED7               	movlw	low STR_11
  4211  00430A  0101               	movlb	1	; () banked
  4212  00430C  6F0E               	movwf	sprintf@f& (0+255),b
  4213  00430E  0E21               	movlw	high STR_11
  4214  004310  0101               	movlb	1	; () banked
  4215  004312  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4216  004314  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4217  004318  0101               	movlb	1	; () banked
  4218  00431A  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4219  00431C  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4220  004320  0101               	movlb	1	; () banked
  4221  004322  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4222  004324  0103               	movlb	3	; () banked
  4223  004326  51DC               	movf	main@power& (0+255),w,b
  4224  004328  EC3E  F04C         	call	_dBm_to_mW
  4225  00432C  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4226  004330  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4227  004334  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4228  004338  0101               	movlb	1	; () banked
  4229  00433A  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4230  00433C  ECDD  F029         	call	_sprintf	;wreg free
  4231                           
  4232                           ;main.c: 331: sendHIDText(ToSendDataBuffer);
  4233  004340  0E84               	movlw	low _ToSendDataBuffer
  4234  004342  0101               	movlb	1	; () banked
  4235  004344  6F07               	movwf	sendHIDText@str& (0+255),b
  4236  004346  0E03               	movlw	high _ToSendDataBuffer
  4237  004348  0101               	movlb	1	; () banked
  4238  00434A  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4239  00434C  EC5B  F04A         	call	_sendHIDText	;wreg free
  4240                           
  4241                           ;main.c: 333: }
  4242                           ;main.c: 334: break;
  4243  004350  D748               	goto	l20412
  4244  004352                     l20448:
  4245                           
  4246                           ;main.c: 338: p_buffer = &m_buffer[0];
  4247  004352  0ED1               	movlw	low _m_buffer
  4248  004354  0101               	movlb	1	; () banked
  4249  004356  6FBA               	movwf	_p_buffer& (0+255),b
  4250  004358  0E02               	movlw	high _m_buffer
  4251  00435A  0101               	movlb	1	; () banked
  4252  00435C  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;main.c: 339: *(p_buffer++) = 0x4d;
  4256  00435E  C1BA  FFD9         	movff	_p_buffer,fsr2l
  4257  004362  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  4258  004366  0E4D               	movlw	77
  4259  004368  6EDF               	movwf	indf2,c
  4260                           
  4261                           ; BSR set to: 1
  4262  00436A  0101               	movlb	1	; () banked
  4263  00436C  4BBA               	infsnz	_p_buffer& (0+255),f,b
  4264  00436E  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  4265                           
  4266                           ;main.c: 340: *(p_buffer++) = shortaddress[0];
  4267  004370  C1BA  FFD9         	movff	_p_buffer,fsr2l
  4268  004374  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  4269  004378  C3E1  FFDF         	movff	main@shortaddress,indf2
  4270                           
  4271                           ; BSR set to: 1
  4272  00437C  0101               	movlb	1	; () banked
  4273  00437E  4BBA               	infsnz	_p_buffer& (0+255),f,b
  4274  004380  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;main.c: 341: *(p_buffer++) = shortaddress[1];
  4278  004382  C1BA  FFD9         	movff	_p_buffer,fsr2l
  4279  004386  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  4280  00438A  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4281  00438E  0101               	movlb	1	; () banked
  4282  004390  4BBA               	infsnz	_p_buffer& (0+255),f,b
  4283  004392  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  4284                           
  4285                           ; BSR set to: 1
  4286                           ;main.c: 342: size = rxMessage.PayloadSize;
  4287  004394  C197  F3E0         	movff	_rxMessage+7,main@size
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;main.c: 343: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4291  004398  C1BA  F100         	movff	_p_buffer,memcpy@d1
  4292  00439C  C1BB  F101         	movff	_p_buffer+1,memcpy@d1+1
  4293  0043A0  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4294  0043A4  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4295  0043A8  C3E0  F104         	movff	main@size,memcpy@n
  4296  0043AC  0101               	movlb	1	; () banked
  4297  0043AE  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4298  0043B0  EC9E  F053         	call	_memcpy	;wreg free
  4299                           
  4300                           ;main.c: 344: p_buffer += size;
  4301  0043B4  0103               	movlb	3	; () banked
  4302  0043B6  51E0               	movf	main@size& (0+255),w,b
  4303  0043B8  0D01               	mullw	1
  4304  0043BA  50F3               	movf	prodl,w,c
  4305  0043BC  0101               	movlb	1	; () banked
  4306  0043BE  27BA               	addwf	_p_buffer& (0+255),f,b
  4307  0043C0  50F4               	movf	prodh,w,c
  4308  0043C2  0101               	movlb	1	; () banked
  4309  0043C4  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  4310                           
  4311                           ; BSR set to: 1
  4312                           ;main.c: 346: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4313  0043C6  0ED1               	movlw	low _m_buffer
  4314  0043C8  0101               	movlb	1	; () banked
  4315  0043CA  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4316  0043CC  0E02               	movlw	high _m_buffer
  4317  0043CE  0101               	movlb	1	; () banked
  4318  0043D0  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4319  0043D2  0ED1               	movlw	_m_buffer& (0+255)
  4320  0043D4  0800               	sublw	0
  4321  0043D6  0101               	movlb	1	; () banked
  4322  0043D8  25BA               	addwf	_p_buffer& (0+255),w,b
  4323  0043DA  0101               	movlb	1	; () banked
  4324  0043DC  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4325  0043DE  EC59  F04F         	call	_sendHIDBinary	;wreg free
  4326                           
  4327                           ;main.c: 347: MiApp_DiscardMessage();
  4328  0043E2  ECB6  F057         	call	_MiApp_DiscardMessage	;wreg free
  4329                           
  4330                           ;main.c: 348: break;
  4331  0043E6  D6FD               	goto	l20412
  4332  0043E8                     l20468:
  4333                           
  4334                           ;main.c: 351: {TxData = 11;};
  4335  0043E8  0E0B               	movlw	11
  4336  0043EA  0101               	movlb	1	; () banked
  4337  0043EC  6FC7               	movwf	_TxData& (0+255),b
  4338                           
  4339                           ; BSR set to: 1
  4340                           ;main.c: 352: size = rxMessage.PayloadSize;
  4341  0043EE  C197  F3E0         	movff	_rxMessage+7,main@size
  4342                           
  4343                           ; BSR set to: 1
  4344                           ;main.c: 353: memcpy(&TxBuffer[TxData], &rxMessage.Payload[0], size);
  4345  0043F2  0101               	movlb	1	; () banked
  4346  0043F4  51C7               	movf	_TxData& (0+255),w,b
  4347  0043F6  0D01               	mullw	1
  4348  0043F8  0EA6               	movlw	low _TxBuffer
  4349  0043FA  24F3               	addwf	prodl,w,c
  4350  0043FC  0101               	movlb	1	; () banked
  4351  0043FE  6F00               	movwf	memcpy@d1& (0+255),b
  4352  004400  0E02               	movlw	high _TxBuffer
  4353  004402  20F4               	addwfc	prodh,w,c
  4354  004404  0101               	movlb	1	; () banked
  4355  004406  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  4356  004408  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4357  00440C  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4358  004410  C3E0  F104         	movff	main@size,memcpy@n
  4359  004414  0101               	movlb	1	; () banked
  4360  004416  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4361  004418  EC9E  F053         	call	_memcpy	;wreg free
  4362                           
  4363                           ;main.c: 354: TxData = TxData + size;
  4364  00441C  0101               	movlb	1	; () banked
  4365  00441E  51C7               	movf	_TxData& (0+255),w,b
  4366  004420  0103               	movlb	3	; () banked
  4367  004422  25E0               	addwf	main@size& (0+255),w,b
  4368  004424  0101               	movlb	1	; () banked
  4369  004426  6FC7               	movwf	_TxData& (0+255),b
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;main.c: 355: MiApp_DiscardMessage();
  4373  004428  ECB6  F057         	call	_MiApp_DiscardMessage	;wreg free
  4374                           
  4375                           ;main.c: 357: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4376  00442C  0EE1               	movlw	low main@shortaddress
  4377  00442E  0101               	movlb	1	; () banked
  4378  004430  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4379  004432  0E03               	movlw	high main@shortaddress
  4380  004434  0101               	movlb	1	; () banked
  4381  004436  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4382  004438  0E00               	movlw	0
  4383  00443A  0101               	movlb	1	; () banked
  4384  00443C  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4385  00443E  0E01               	movlw	1
  4386  004440  0101               	movlb	1	; () banked
  4387  004442  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4388  004444  EC4D  F031         	call	_MiApp_UnicastAddress	;wreg free
  4389  004448  06E8               	decf	wreg,f,c
  4390  00444A  A4D8               	btfss	status,2,c
  4391  00444C  D023               	goto	l20484
  4392                           
  4393                           ;main.c: 358: {
  4394                           ;main.c: 359: sprintf(ToSendDataBuffer, "I|%02x%02x:PING successful: payload_size=%i", s
      +                          hortaddress[1], shortaddress[0], size);
  4395  00444E  0E84               	movlw	low _ToSendDataBuffer
  4396  004450  0101               	movlb	1	; () banked
  4397  004452  6F0C               	movwf	sprintf@sp& (0+255),b
  4398  004454  0E03               	movlw	high _ToSendDataBuffer
  4399  004456  0101               	movlb	1	; () banked
  4400  004458  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4401  00445A  0E42               	movlw	low STR_12
  4402  00445C  0101               	movlb	1	; () banked
  4403  00445E  6F0E               	movwf	sprintf@f& (0+255),b
  4404  004460  0E22               	movlw	high STR_12
  4405  004462  0101               	movlb	1	; () banked
  4406  004464  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4407  004466  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4408  00446A  0101               	movlb	1	; () banked
  4409  00446C  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4410  00446E  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4411  004472  0101               	movlb	1	; () banked
  4412  004474  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4413  004476  C3E0  F114         	movff	main@size,?_sprintf+8
  4414  00447A  0101               	movlb	1	; () banked
  4415  00447C  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4416  00447E  ECDD  F029         	call	_sprintf	;wreg free
  4417                           
  4418                           ;main.c: 360: sendHIDText(ToSendDataBuffer);
  4419  004482  0E84               	movlw	low _ToSendDataBuffer
  4420  004484  0101               	movlb	1	; () banked
  4421  004486  6F07               	movwf	sendHIDText@str& (0+255),b
  4422  004488  0E03               	movlw	high _ToSendDataBuffer
  4423  00448A  0101               	movlb	1	; () banked
  4424  00448C  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4425  00448E  EC5B  F04A         	call	_sendHIDText	;wreg free
  4426                           
  4427                           ;main.c: 362: }
  4428  004492  D6A7               	goto	l20412
  4429  004494                     l20484:
  4430                           
  4431                           ;main.c: 363: else
  4432                           ;main.c: 364: {
  4433                           ;main.c: 365: sprintf(ToSendDataBuffer, "I|%02x%02x:PING error sending back: payload_siz
      +                          e=%i", shortaddress[1], shortaddress[0], size);
  4434  004494  0E84               	movlw	low _ToSendDataBuffer
  4435  004496  0101               	movlb	1	; () banked
  4436  004498  6F0C               	movwf	sprintf@sp& (0+255),b
  4437  00449A  0E03               	movlw	high _ToSendDataBuffer
  4438  00449C  0101               	movlb	1	; () banked
  4439  00449E  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4440  0044A0  0E0E               	movlw	low STR_13
  4441  0044A2  0101               	movlb	1	; () banked
  4442  0044A4  6F0E               	movwf	sprintf@f& (0+255),b
  4443  0044A6  0E22               	movlw	high STR_13
  4444  0044A8  0101               	movlb	1	; () banked
  4445  0044AA  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4446  0044AC  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4447  0044B0  0101               	movlb	1	; () banked
  4448  0044B2  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4449  0044B4  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4450  0044B8  0101               	movlb	1	; () banked
  4451  0044BA  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4452  0044BC  C3E0  F114         	movff	main@size,?_sprintf+8
  4453  0044C0  0101               	movlb	1	; () banked
  4454  0044C2  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4455  0044C4  ECDD  F029         	call	_sprintf	;wreg free
  4456                           
  4457                           ;main.c: 366: sendHIDText(ToSendDataBuffer);
  4458  0044C8  0E84               	movlw	low _ToSendDataBuffer
  4459  0044CA  0101               	movlb	1	; () banked
  4460  0044CC  6F07               	movwf	sendHIDText@str& (0+255),b
  4461  0044CE  0E03               	movlw	high _ToSendDataBuffer
  4462  0044D0  0101               	movlb	1	; () banked
  4463  0044D2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4464  0044D4  EC5B  F04A         	call	_sendHIDText	;wreg free
  4465                           
  4466                           ;main.c: 368: }
  4467                           ;main.c: 369: break;
  4468  0044D8  D684               	goto	l20412
  4469  0044DA                     l20488:
  4470                           
  4471                           ;main.c: 373: p_buffer = &m_buffer[0];
  4472  0044DA  0ED1               	movlw	low _m_buffer
  4473  0044DC  0101               	movlb	1	; () banked
  4474  0044DE  6FBA               	movwf	_p_buffer& (0+255),b
  4475  0044E0  0E02               	movlw	high _m_buffer
  4476  0044E2  0101               	movlb	1	; () banked
  4477  0044E4  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  4478                           
  4479                           ; BSR set to: 1
  4480                           ;main.c: 374: *(p_buffer++) = 0x4d;
  4481  0044E6  C1BA  FFD9         	movff	_p_buffer,fsr2l
  4482  0044EA  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  4483  0044EE  0E4D               	movlw	77
  4484  0044F0  6EDF               	movwf	indf2,c
  4485                           
  4486                           ; BSR set to: 1
  4487  0044F2  0101               	movlb	1	; () banked
  4488  0044F4  4BBA               	infsnz	_p_buffer& (0+255),f,b
  4489  0044F6  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  4490                           
  4491                           ;main.c: 375: *(p_buffer++) = shortaddress[0];
  4492  0044F8  C1BA  FFD9         	movff	_p_buffer,fsr2l
  4493  0044FC  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  4494  004500  C3E1  FFDF         	movff	main@shortaddress,indf2
  4495                           
  4496                           ; BSR set to: 1
  4497  004504  0101               	movlb	1	; () banked
  4498  004506  4BBA               	infsnz	_p_buffer& (0+255),f,b
  4499  004508  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;main.c: 376: *(p_buffer++) = shortaddress[1];
  4503  00450A  C1BA  FFD9         	movff	_p_buffer,fsr2l
  4504  00450E  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  4505  004512  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4506  004516  0101               	movlb	1	; () banked
  4507  004518  4BBA               	infsnz	_p_buffer& (0+255),f,b
  4508  00451A  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  4509                           
  4510                           ; BSR set to: 1
  4511                           ;main.c: 377: size = rxMessage.PayloadSize;
  4512  00451C  C197  F3E0         	movff	_rxMessage+7,main@size
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;main.c: 378: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4516  004520  C1BA  F100         	movff	_p_buffer,memcpy@d1
  4517  004524  C1BB  F101         	movff	_p_buffer+1,memcpy@d1+1
  4518  004528  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4519  00452C  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4520  004530  C3E0  F104         	movff	main@size,memcpy@n
  4521  004534  0101               	movlb	1	; () banked
  4522  004536  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4523  004538  EC9E  F053         	call	_memcpy	;wreg free
  4524                           
  4525                           ;main.c: 379: p_buffer += size;
  4526  00453C  0103               	movlb	3	; () banked
  4527  00453E  51E0               	movf	main@size& (0+255),w,b
  4528  004540  0D01               	mullw	1
  4529  004542  50F3               	movf	prodl,w,c
  4530  004544  0101               	movlb	1	; () banked
  4531  004546  27BA               	addwf	_p_buffer& (0+255),f,b
  4532  004548  50F4               	movf	prodh,w,c
  4533  00454A  0101               	movlb	1	; () banked
  4534  00454C  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  4535                           
  4536                           ; BSR set to: 1
  4537                           ;main.c: 381: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4538  00454E  0ED1               	movlw	low _m_buffer
  4539  004550  0101               	movlb	1	; () banked
  4540  004552  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4541  004554  0E02               	movlw	high _m_buffer
  4542  004556  0101               	movlb	1	; () banked
  4543  004558  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4544  00455A  0ED1               	movlw	_m_buffer& (0+255)
  4545  00455C  0800               	sublw	0
  4546  00455E  0101               	movlb	1	; () banked
  4547  004560  25BA               	addwf	_p_buffer& (0+255),w,b
  4548  004562  0101               	movlb	1	; () banked
  4549  004564  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4550  004566  EC59  F04F         	call	_sendHIDBinary	;wreg free
  4551                           
  4552                           ;main.c: 382: MiApp_DiscardMessage();
  4553  00456A  ECB6  F057         	call	_MiApp_DiscardMessage	;wreg free
  4554                           
  4555                           ;main.c: 383: break;
  4556  00456E  D639               	goto	l20412
  4557  004570                     l20508:
  4558                           
  4559                           ;main.c: 387: sprintf(ToSendDataBuffer, "I|%02x%02x: %i command not recognized!", shorta
      +                          ddress[1], shortaddress[0], rxMessage.Payload[0]);
  4560  004570  0E84               	movlw	low _ToSendDataBuffer
  4561  004572  0101               	movlb	1	; () banked
  4562  004574  6F0C               	movwf	sprintf@sp& (0+255),b
  4563  004576  0E03               	movlw	high _ToSendDataBuffer
  4564  004578  0101               	movlb	1	; () banked
  4565  00457A  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4566  00457C  0E97               	movlw	low STR_14
  4567  00457E  0101               	movlb	1	; () banked
  4568  004580  6F0E               	movwf	sprintf@f& (0+255),b
  4569  004582  0E22               	movlw	high STR_14
  4570  004584  0101               	movlb	1	; () banked
  4571  004586  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4572  004588  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4573  00458C  0101               	movlb	1	; () banked
  4574  00458E  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4575  004590  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4576  004594  0101               	movlb	1	; () banked
  4577  004596  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4578  004598  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4579  00459C  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4580  0045A0  50DF               	movf	indf2,w,c
  4581  0045A2  0101               	movlb	1	; () banked
  4582  0045A4  6F89               	movwf	??_main& (0+255),b
  4583  0045A6  0101               	movlb	1	; () banked
  4584  0045A8  5189               	movf	??_main& (0+255),w,b
  4585  0045AA  0101               	movlb	1	; () banked
  4586  0045AC  6F14               	movwf	(?_sprintf+8)& (0+255),b
  4587  0045AE  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4588  0045B0  ECDD  F029         	call	_sprintf	;wreg free
  4589                           
  4590                           ;main.c: 388: sendHIDText(ToSendDataBuffer);
  4591  0045B4  0E84               	movlw	low _ToSendDataBuffer
  4592  0045B6  0101               	movlb	1	; () banked
  4593  0045B8  6F07               	movwf	sendHIDText@str& (0+255),b
  4594  0045BA  0E03               	movlw	high _ToSendDataBuffer
  4595  0045BC  0101               	movlb	1	; () banked
  4596  0045BE  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4597  0045C0  EC5B  F04A         	call	_sendHIDText	;wreg free
  4598                           
  4599                           ;main.c: 389: }
  4600  0045C4  D60E               	goto	l20412
  4601  0045C6                     l20512:
  4602  0045C6  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4603  0045CA  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4604  0045CE  50DF               	movf	indf2,w,c
  4605                           
  4606                           ; Switch size 1, requested type "space"
  4607                           ; Number of cases is 4, Range of values is 1 to 4
  4608                           ; switch strategies available:
  4609                           ; Name         Instructions Cycles
  4610                           ; simple_byte           13     7 (average)
  4611                           ;	Chosen strategy is simple_byte
  4612  0045D0  0A01               	xorlw	1	; case 1
  4613  0045D2  B4D8               	btfsc	status,2,c
  4614  0045D4  D61F               	goto	l1748
  4615  0045D6  0A03               	xorlw	3	; case 2
  4616  0045D8  B4D8               	btfsc	status,2,c
  4617  0045DA  D6BB               	goto	l20448
  4618  0045DC  0A01               	xorlw	1	; case 3
  4619  0045DE  B4D8               	btfsc	status,2,c
  4620  0045E0  D703               	goto	l20468
  4621  0045E2  0A07               	xorlw	7	; case 4
  4622  0045E4  B4D8               	btfsc	status,2,c
  4623  0045E6  D779               	goto	l20488
  4624  0045E8  D7C3               	goto	l20508
  4625  0045EA                     l20514:
  4626                           
  4627                           ;main.c: 394: else if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN)
      +                           == 0)
  4628  0045EA  0101               	movlb	1	; () banked
  4629  0045EC  51B8               	movf	_USBOutHandle& (0+255),w,b
  4630  0045EE  0101               	movlb	1	; () banked
  4631  0045F0  11B9               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  4632  0045F2  B4D8               	btfsc	status,2,c
  4633  0045F4  D013               	goto	l20518
  4634                           
  4635                           ; BSR set to: 1
  4636  0045F6  C1B8  FFD9         	movff	_USBOutHandle,fsr2l
  4637  0045FA  C1B9  FFDA         	movff	_USBOutHandle+1,fsr2h
  4638  0045FE  0101               	movlb	1	; () banked
  4639  004600  AEDF               	btfss	indf2,7,c
  4640  004602  D004               	goto	u22340
  4641  004604  0101               	movlb	1	; () banked
  4642  004606  6B89               	clrf	??_main& (0+255),b
  4643  004608  2B89               	incf	??_main& (0+255),f,b
  4644  00460A  D002               	goto	u22348
  4645  00460C                     u22340:
  4646  00460C  0101               	movlb	1	; () banked
  4647  00460E  6B89               	clrf	??_main& (0+255),b
  4648  004610                     u22348:
  4649  004610  0101               	movlb	1	; () banked
  4650  004612  5189               	movf	??_main& (0+255),w,b
  4651  004614  0103               	movlb	3	; () banked
  4652  004616  6FDA               	movwf	_main$4898& (0+255),b
  4653  004618  6BDB               	clrf	(_main$4898+1)& (0+255),b
  4654  00461A  D005               	goto	l20520
  4655  00461C                     l20518:
  4656  00461C  0E00               	movlw	0
  4657  00461E  0103               	movlb	3	; () banked
  4658  004620  6FDB               	movwf	(_main$4898+1)& (0+255),b
  4659  004622  0E00               	movlw	0
  4660  004624  6FDA               	movwf	_main$4898& (0+255),b
  4661  004626                     l20520:
  4662                           
  4663                           ; BSR set to: 3
  4664  004626  0103               	movlb	3	; () banked
  4665  004628  51DA               	movf	_main$4898& (0+255),w,b
  4666  00462A  0103               	movlb	3	; () banked
  4667  00462C  11DB               	iorwf	(_main$4898+1)& (0+255),w,b
  4668  00462E  B4D8               	btfsc	status,2,c
  4669  004630  D0C9               	goto	l20560
  4670  004632  D0E4               	goto	l20564
  4671  004634                     l1765:
  4672                           
  4673                           ; BSR set to: 4
  4674  004634  00FF               	reset		;# 
  4675                           
  4676                           ;main.c: 400: break;
  4677  004636  D0CE               	goto	l20562
  4678  004638                     l1767:
  4679                           
  4680                           ; BSR set to: 4
  4681                           ;main.c: 403: shortaddress[0] = ReceivedDataBuffer[1];
  4682  004638  C401  F3E1         	movff	_ReceivedDataBuffer+1,main@shortaddress
  4683                           
  4684                           ;main.c: 404: shortaddress[1] = ReceivedDataBuffer[2];
  4685  00463C  C402  F3E2         	movff	_ReceivedDataBuffer+2,main@shortaddress+1
  4686                           
  4687                           ;main.c: 405: size = ReceivedDataBuffer[3];
  4688  004640  C403  F3E0         	movff	_ReceivedDataBuffer+3,main@size
  4689                           
  4690                           ; BSR set to: 4
  4691                           ;main.c: 406: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00))
  4692  004644  0103               	movlb	3	; () banked
  4693  004646  51E1               	movf	main@shortaddress& (0+255),w,b
  4694  004648  0103               	movlb	3	; () banked
  4695  00464A  A4D8               	btfss	status,2,c
  4696  00464C  D078               	goto	l20546
  4697                           
  4698                           ; BSR set to: 3
  4699  00464E  0103               	movlb	3	; () banked
  4700  004650  51E2               	movf	(main@shortaddress+1)& (0+255),w,b
  4701  004652  A4D8               	btfss	status,2,c
  4702  004654  D074               	goto	l20546
  4703                           
  4704                           ; BSR set to: 3
  4705                           ;main.c: 407: {
  4706                           ;main.c: 409: if ((ReceivedDataBuffer[4] == 04) && (size > 2))
  4707  004656  0E04               	movlw	4
  4708  004658  0104               	movlb	4	; () banked
  4709  00465A  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  4710  00465C  A4D8               	btfss	status,2,c
  4711  00465E  D0BA               	goto	l20562
  4712                           
  4713                           ; BSR set to: 4
  4714  004660  0E02               	movlw	2
  4715  004662  0103               	movlb	3	; () banked
  4716  004664  65E0               	cpfsgt	main@size& (0+255),b
  4717  004666  D0B6               	goto	l20562
  4718                           
  4719                           ; BSR set to: 3
  4720                           ;main.c: 410: {
  4721                           ;main.c: 411: bool last_update = (ReceivedDataBuffer[5] == 0xff);
  4722  004668  0104               	movlb	4	; () banked
  4723  00466A  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  4724  00466C  A4D8               	btfss	status,2,c
  4725  00466E  D002               	goto	u22400
  4726  004670  0E01               	movlw	1
  4727  004672  D001               	goto	u22410
  4728  004674                     u22400:
  4729  004674  0E00               	movlw	0
  4730  004676                     u22410:
  4731  004676  0103               	movlb	3	; () banked
  4732  004678  6FD7               	movwf	main@last_update& (0+255),b
  4733                           
  4734                           ;main.c: 413: p_buffer = &ReceivedDataBuffer[6];
  4735  00467A  0E06               	movlw	low (_ReceivedDataBuffer+6)
  4736  00467C  0101               	movlb	1	; () banked
  4737  00467E  6FBA               	movwf	_p_buffer& (0+255),b
  4738  004680  0E04               	movlw	high (_ReceivedDataBuffer+6)
  4739  004682  0101               	movlb	1	; () banked
  4740  004684  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  4741                           
  4742                           ;main.c: 414: while ((p_buffer - &ReceivedDataBuffer[6]) < (size - 2))
  4743  004686  D018               	goto	l20540
  4744  004688                     l20534:
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;main.c: 415: {
  4748                           ;main.c: 416: m_var = decode_variable(p_buffer);
  4749  004688  C1BA  F10A         	movff	_p_buffer,decode_variable@p_buffer
  4750  00468C  C1BB  F10B         	movff	_p_buffer+1,decode_variable@p_buffer+1
  4751  004690  EC4A  F048         	call	_decode_variable	;wreg free
  4752  004694  EE21  F0DF         	lfsr	2,_m_var
  4753  004698  0E08               	movlw	8
  4754  00469A                     u22421:
  4755  00469A  CFEB FFDB          	movff	plusw0,plusw2
  4756  00469E  06E8               	decf	wreg,f,c
  4757  0046A0  E2FC               	bc	u22421
  4758                           
  4759                           ;main.c: 417: p_buffer += m_var.size;
  4760  0046A2  0101               	movlb	1	; () banked
  4761  0046A4  51E7               	movf	(_m_var+8)& (0+255),w,b
  4762  0046A6  0D01               	mullw	1
  4763  0046A8  50F3               	movf	prodl,w,c
  4764  0046AA  0101               	movlb	1	; () banked
  4765  0046AC  27BA               	addwf	_p_buffer& (0+255),f,b
  4766  0046AE  50F4               	movf	prodh,w,c
  4767  0046B0  0101               	movlb	1	; () banked
  4768  0046B2  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  4769                           
  4770                           ; BSR set to: 1
  4771                           ;main.c: 422: update_variable();
  4772  0046B4  ECFA  F045         	call	_update_variable	;wreg free
  4773  0046B8                     l20540:
  4774  0046B8  0EFE               	movlw	254
  4775  0046BA  0101               	movlb	1	; () banked
  4776  0046BC  6F89               	movwf	??_main& (0+255),b
  4777  0046BE  0EFF               	movlw	255
  4778  0046C0  0101               	movlb	1	; () banked
  4779  0046C2  6F8A               	movwf	(??_main+1)& (0+255),b
  4780  0046C4  0103               	movlb	3	; () banked
  4781  0046C6  51E0               	movf	main@size& (0+255),w,b
  4782  0046C8  0101               	movlb	1	; () banked
  4783  0046CA  6F8B               	movwf	(??_main+2)& (0+255),b
  4784  0046CC  6B8C               	clrf	(??_main+3)& (0+255),b
  4785  0046CE  0101               	movlb	1	; () banked
  4786  0046D0  5189               	movf	??_main& (0+255),w,b
  4787  0046D2  0101               	movlb	1	; () banked
  4788  0046D4  278B               	addwf	(??_main+2)& (0+255),f,b
  4789  0046D6  0101               	movlb	1	; () banked
  4790  0046D8  518A               	movf	(??_main+1)& (0+255),w,b
  4791  0046DA  0101               	movlb	1	; () banked
  4792  0046DC  238C               	addwfc	(??_main+3)& (0+255),f,b
  4793  0046DE  0E00               	movlw	low _ReceivedDataBuffer
  4794  0046E0  0101               	movlb	1	; () banked
  4795  0046E2  6F8D               	movwf	(??_main+4)& (0+255),b
  4796  0046E4  0E04               	movlw	high _ReceivedDataBuffer
  4797  0046E6  0101               	movlb	1	; () banked
  4798  0046E8  6F8E               	movwf	(??_main+5)& (0+255),b
  4799  0046EA  0E06               	movlw	6
  4800  0046EC  0101               	movlb	1	; () banked
  4801  0046EE  278D               	addwf	(??_main+4)& (0+255),f,b
  4802  0046F0  0E00               	movlw	0
  4803  0046F2  238E               	addwfc	(??_main+5)& (0+255),f,b
  4804  0046F4  0101               	movlb	1	; () banked
  4805  0046F6  1F8D               	comf	(??_main+4)& (0+255),f,b
  4806  0046F8  1F8E               	comf	(??_main+5)& (0+255),f,b
  4807  0046FA  4B8D               	infsnz	(??_main+4)& (0+255),f,b
  4808  0046FC  2B8E               	incf	(??_main+5)& (0+255),f,b
  4809  0046FE  0101               	movlb	1	; () banked
  4810  004700  51BA               	movf	_p_buffer& (0+255),w,b
  4811  004702  0101               	movlb	1	; () banked
  4812  004704  278D               	addwf	(??_main+4)& (0+255),f,b
  4813  004706  0101               	movlb	1	; () banked
  4814  004708  51BB               	movf	(_p_buffer+1)& (0+255),w,b
  4815  00470A  0101               	movlb	1	; () banked
  4816  00470C  238E               	addwfc	(??_main+5)& (0+255),f,b
  4817  00470E  0101               	movlb	1	; () banked
  4818  004710  518B               	movf	(??_main+2)& (0+255),w,b
  4819  004712  0101               	movlb	1	; () banked
  4820  004714  5D8D               	subwf	(??_main+4)& (0+255),w,b
  4821  004716  0101               	movlb	1	; () banked
  4822  004718  518E               	movf	(??_main+5)& (0+255),w,b
  4823  00471A  0A80               	xorlw	128
  4824  00471C  0101               	movlb	1	; () banked
  4825  00471E  6F8F               	movwf	(??_main+6)& (0+255),b
  4826  004720  0101               	movlb	1	; () banked
  4827  004722  518C               	movf	(??_main+3)& (0+255),w,b
  4828  004724  0A80               	xorlw	128
  4829  004726  0101               	movlb	1	; () banked
  4830  004728  598F               	subwfb	(??_main+6)& (0+255),w,b
  4831  00472A  A0D8               	btfss	status,0,c
  4832  00472C  D7AD               	goto	l20534
  4833                           
  4834                           ; BSR set to: 1
  4835                           ;main.c: 423: }
  4836                           ;main.c: 424: if (last_update)
  4837                           
  4838                           ; BSR set to: 1
  4839  00472E  0103               	movlb	3	; () banked
  4840  004730  51D7               	movf	main@last_update& (0+255),w,b
  4841  004732  0103               	movlb	3	; () banked
  4842  004734  B4D8               	btfsc	status,2,c
  4843  004736  D04E               	goto	l20562
  4844                           
  4845                           ; BSR set to: 3
  4846                           ;main.c: 425: {
  4847                           ;main.c: 427: send_writables_update();
  4848  004738  ECB7  F03B         	call	_send_writables_update	;wreg free
  4849                           
  4850                           ;main.c: 428: }
  4851                           ;main.c: 429: }
  4852                           ;main.c: 430: }
  4853  00473C  D04B               	goto	l20562
  4854  00473E                     l20546:
  4855                           
  4856                           ;main.c: 431: else
  4857                           ;main.c: 432: {
  4858                           ;main.c: 433: {TxData = 11;};
  4859  00473E  0E0B               	movlw	11
  4860  004740  0101               	movlb	1	; () banked
  4861  004742  6FC7               	movwf	_TxData& (0+255),b
  4862                           
  4863                           ; BSR set to: 1
  4864                           ;main.c: 434: memcpy(&TxBuffer[TxData], &ReceivedDataBuffer[4], size);
  4865  004744  0101               	movlb	1	; () banked
  4866  004746  51C7               	movf	_TxData& (0+255),w,b
  4867  004748  0D01               	mullw	1
  4868  00474A  0EA6               	movlw	low _TxBuffer
  4869  00474C  24F3               	addwf	prodl,w,c
  4870  00474E  0101               	movlb	1	; () banked
  4871  004750  6F00               	movwf	memcpy@d1& (0+255),b
  4872  004752  0E02               	movlw	high _TxBuffer
  4873  004754  20F4               	addwfc	prodh,w,c
  4874  004756  0101               	movlb	1	; () banked
  4875  004758  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  4876  00475A  0E04               	movlw	low (_ReceivedDataBuffer+4)
  4877  00475C  0101               	movlb	1	; () banked
  4878  00475E  6F02               	movwf	memcpy@s1& (0+255),b
  4879  004760  0E04               	movlw	high (_ReceivedDataBuffer+4)
  4880  004762  0101               	movlb	1	; () banked
  4881  004764  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  4882  004766  C3E0  F104         	movff	main@size,memcpy@n
  4883  00476A  0101               	movlb	1	; () banked
  4884  00476C  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4885  00476E  EC9E  F053         	call	_memcpy	;wreg free
  4886                           
  4887                           ;main.c: 435: TxData = TxData + size;
  4888  004772  0101               	movlb	1	; () banked
  4889  004774  51C7               	movf	_TxData& (0+255),w,b
  4890  004776  0103               	movlb	3	; () banked
  4891  004778  25E0               	addwf	main@size& (0+255),w,b
  4892  00477A  0101               	movlb	1	; () banked
  4893  00477C  6FC7               	movwf	_TxData& (0+255),b
  4894                           
  4895                           ; BSR set to: 1
  4896                           ;main.c: 436: if (ReceivedDataBuffer[4] == 02)
  4897  00477E  0E02               	movlw	2
  4898  004780  0104               	movlb	4	; () banked
  4899  004782  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  4900  004784  A4D8               	btfss	status,2,c
  4901  004786  D00F               	goto	l20556
  4902                           
  4903                           ; BSR set to: 4
  4904                           ;main.c: 438: MiApp_UnicastAddress(&shortaddress, 0, 0) == 1;
  4905  004788  0EE1               	movlw	low main@shortaddress
  4906  00478A  0101               	movlb	1	; () banked
  4907  00478C  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4908  00478E  0E03               	movlw	high main@shortaddress
  4909  004790  0101               	movlb	1	; () banked
  4910  004792  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4911  004794  0E00               	movlw	0
  4912  004796  0101               	movlb	1	; () banked
  4913  004798  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4914  00479A  0E00               	movlw	0
  4915  00479C  0101               	movlb	1	; () banked
  4916  00479E  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4917  0047A0  EC4D  F031         	call	_MiApp_UnicastAddress	;wreg free
  4918  0047A4  D017               	goto	l20562
  4919  0047A6                     l20556:
  4920                           
  4921                           ;main.c: 439: else
  4922                           ;main.c: 440: MiApp_UnicastAddress(&shortaddress, 0, 1);
  4923  0047A6  0EE1               	movlw	low main@shortaddress
  4924  0047A8  0101               	movlb	1	; () banked
  4925  0047AA  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4926  0047AC  0E03               	movlw	high main@shortaddress
  4927  0047AE  0101               	movlb	1	; () banked
  4928  0047B0  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4929  0047B2  0E00               	movlw	0
  4930  0047B4  0101               	movlb	1	; () banked
  4931  0047B6  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4932  0047B8  0E01               	movlw	1
  4933  0047BA  0101               	movlb	1	; () banked
  4934  0047BC  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4935  0047BE  EC4D  F031         	call	_MiApp_UnicastAddress	;wreg free
  4936                           
  4937                           ;main.c: 450: }
  4938                           
  4939                           ;main.c: 449: break;
  4940                           
  4941                           ;main.c: 447: default:
  4942                           
  4943                           ;main.c: 445: }
  4944                           ;main.c: 446: break;
  4945  0047C2  D008               	goto	l20562
  4946  0047C4                     l20560:
  4947  0047C4  0104               	movlb	4	; () banked
  4948  0047C6  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  4949                           
  4950                           ; Switch size 1, requested type "space"
  4951                           ; Number of cases is 2, Range of values is 83 to 88
  4952                           ; switch strategies available:
  4953                           ; Name         Instructions Cycles
  4954                           ; simple_byte            7     4 (average)
  4955                           ;	Chosen strategy is simple_byte
  4956  0047C8  0A53               	xorlw	83	; case 83
  4957  0047CA  B4D8               	btfsc	status,2,c
  4958  0047CC  D735               	goto	l1767
  4959  0047CE  0A0B               	xorlw	11	; case 88
  4960  0047D0  B4D8               	btfsc	status,2,c
  4961  0047D2  D730               	goto	l1765
  4962  0047D4                     l20562:
  4963                           
  4964                           ;main.c: 452: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  4965  0047D4  0E00               	movlw	0
  4966  0047D6  0101               	movlb	1	; () banked
  4967  0047D8  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  4968  0047DA  0E00               	movlw	low _ReceivedDataBuffer
  4969  0047DC  0101               	movlb	1	; () banked
  4970  0047DE  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  4971  0047E0  0E04               	movlw	high _ReceivedDataBuffer
  4972  0047E2  0101               	movlb	1	; () banked
  4973  0047E4  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  4974  0047E6  0E40               	movlw	64
  4975  0047E8  0101               	movlb	1	; () banked
  4976  0047EA  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  4977  0047EC  0E01               	movlw	1
  4978  0047EE  ECB8  F048         	call	_USBTransferOnePacket
  4979  0047F2  C100  F1B8         	movff	?_USBTransferOnePacket,_USBOutHandle
  4980  0047F6  C101  F1B9         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  4981                           
  4982                           ;main.c: 453: }
  4983  0047FA  D4F3               	goto	l20412
  4984  0047FC                     l20564:
  4985                           
  4986                           ;main.c: 457: else if (timer_flag == 1)
  4987  0047FC  0101               	movlb	1	; () banked
  4988  0047FE  05CC               	decf	_timer_flag& (0+255),w,b	;volatile
  4989  004800  A4D8               	btfss	status,2,c
  4990  004802  D4EF               	goto	l20412
  4991                           
  4992                           ; BSR set to: 1
  4993                           ;main.c: 458: {
  4994                           ;main.c: 459: send_periodic_update();
  4995  004804  EC82  F033         	call	_send_periodic_update	;wreg free
  4996                           
  4997                           ;main.c: 460: timer_flag = 0;
  4998  004808  0E00               	movlw	0
  4999  00480A  0101               	movlb	1	; () banked
  5000  00480C  6FCC               	movwf	_timer_flag& (0+255),b	;volatile
  5001                           
  5002                           ; BSR set to: 1
  5003                           
  5004                           ; BSR set to: 1
  5005                           
  5006                           ; BSR set to: 1
  5007                           
  5008                           ; BSR set to: 1
  5009  00480E  D4E9               	goto	l20412
  5010  004810                     __end_of_main:
  5011                           	opt stack 0
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           postinc0	equ	0xFEE
  5019                           plusw0	equ	0xFEB
  5020                           wreg	equ	0xFE8
  5021                           postdec1	equ	0xFE5
  5022                           fsr1h	equ	0xFE2
  5023                           fsr1l	equ	0xFE1
  5024                           indf2	equ	0xFDF
  5025                           plusw2	equ	0xFDB
  5026                           fsr2h	equ	0xFDA
  5027                           fsr2l	equ	0xFD9
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _update_variable *****************
  5031 ;; Defined at:
  5032 ;;		line 653 in file "src/main.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:   19
  5053 ;; This function calls:
  5054 ;;		_MiMAC_SetPower
  5055 ;;		_RtccWrOn
  5056 ;;		_strcmp
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text1
  5063  008BF4                     __ptext1:
  5064                           	opt stack 0
  5065  008BF4                     _update_variable:
  5066                           	opt stack 11
  5067                           
  5068                           ;main.c: 656: if (strcmp(POWER_LABEL, m_var.label) == 0)
  5069                           
  5070                           ;incstack = 0
  5071  008BF4  0EC3               	movlw	low _POWER_LABEL
  5072  008BF6  0101               	movlb	1	; () banked
  5073  008BF8  6F00               	movwf	strcmp@s1& (0+255),b
  5074  008BFA  0E21               	movlw	high _POWER_LABEL
  5075  008BFC  0101               	movlb	1	; () banked
  5076  008BFE  6F01               	movwf	(strcmp@s1+1)& (0+255),b
  5077  008C00  0EDF               	movlw	low _m_var
  5078  008C02  0101               	movlb	1	; () banked
  5079  008C04  6F02               	movwf	strcmp@s2& (0+255),b
  5080  008C06  0E01               	movlw	high _m_var
  5081  008C08  0101               	movlb	1	; () banked
  5082  008C0A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
  5083  008C0C  EC3C  F053         	call	_strcmp	;wreg free
  5084  008C10  0101               	movlb	1	; () banked
  5085  008C12  5100               	movf	?_strcmp& (0+255),w,b
  5086  008C14  0101               	movlb	1	; () banked
  5087  008C16  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
  5088  008C18  A4D8               	btfss	status,2,c
  5089  008C1A  D00F               	goto	l19650
  5090                           
  5091                           ; BSR set to: 1
  5092                           ;main.c: 657: {
  5093                           ;main.c: 658: m_power = m_var.value_byte1;
  5094  008C1C  C1E3  F1C9         	movff	_m_var+4,_m_power
  5095                           
  5096                           ; BSR set to: 1
  5097                           ;main.c: 659: if ((m_power >= 1) && (m_power <= 7))
  5098  008C20  0101               	movlb	1	; () banked
  5099  008C22  51C9               	movf	_m_power& (0+255),w,b
  5100  008C24  B4D8               	btfsc	status,2,c
  5101  008C26  0012               	return	
  5102                           
  5103                           ; BSR set to: 1
  5104  008C28  0E08               	movlw	8
  5105  008C2A  0101               	movlb	1	; () banked
  5106  008C2C  61C9               	cpfslt	_m_power& (0+255),b
  5107  008C2E  0012               	return	
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;main.c: 660: MiMAC_SetPower(m_power);
  5111  008C30  0101               	movlb	1	; () banked
  5112  008C32  51C9               	movf	_m_power& (0+255),w,b
  5113  008C34  EC37  F056         	call	_MiMAC_SetPower
  5114                           
  5115                           ;main.c: 661: }
  5116  008C38  0012               	return	
  5117  008C3A                     l19650:
  5118                           
  5119                           ;main.c: 662: else if ((strcmp(UPDATE_FREQUENCY_LABEL, m_var.label) == 0) && (m_var.unit
      +                           == 4) && (m_var.type == 0))
  5120  008C3A  0ECB               	movlw	low _UPDATE_FREQUENCY_LABEL
  5121  008C3C  0101               	movlb	1	; () banked
  5122  008C3E  6F00               	movwf	strcmp@s1& (0+255),b
  5123  008C40  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  5124  008C42  0101               	movlb	1	; () banked
  5125  008C44  6F01               	movwf	(strcmp@s1+1)& (0+255),b
  5126  008C46  0EDF               	movlw	low _m_var
  5127  008C48  0101               	movlb	1	; () banked
  5128  008C4A  6F02               	movwf	strcmp@s2& (0+255),b
  5129  008C4C  0E01               	movlw	high _m_var
  5130  008C4E  0101               	movlb	1	; () banked
  5131  008C50  6F03               	movwf	(strcmp@s2+1)& (0+255),b
  5132  008C52  EC3C  F053         	call	_strcmp	;wreg free
  5133  008C56  0101               	movlb	1	; () banked
  5134  008C58  5100               	movf	?_strcmp& (0+255),w,b
  5135  008C5A  0101               	movlb	1	; () banked
  5136  008C5C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
  5137  008C5E  A4D8               	btfss	status,2,c
  5138  008C60  0012               	return	
  5139                           
  5140                           ; BSR set to: 1
  5141  008C62  0E04               	movlw	4
  5142  008C64  0101               	movlb	1	; () banked
  5143  008C66  19E5               	xorwf	(_m_var+6)& (0+255),w,b
  5144  008C68  A4D8               	btfss	status,2,c
  5145  008C6A  0012               	return	
  5146                           
  5147                           ; BSR set to: 1
  5148  008C6C  0101               	movlb	1	; () banked
  5149  008C6E  51E2               	movf	(_m_var+3)& (0+255),w,b
  5150  008C70  A4D8               	btfss	status,2,c
  5151  008C72  0012               	return	
  5152                           
  5153                           ; BSR set to: 1
  5154                           ;main.c: 664: {
  5155                           ;main.c: 665: if (m_var.value_byte1 == 0)
  5156  008C74  0101               	movlb	1	; () banked
  5157  008C76  51E3               	movf	(_m_var+4)& (0+255),w,b
  5158  008C78  A4D8               	btfss	status,2,c
  5159  008C7A  D01C               	goto	l1812
  5160                           
  5161                           ; BSR set to: 1
  5162                           ;main.c: 666: {
  5163                           ;main.c: 667: m_update_frequency = 0;
  5164  008C7C  0E00               	movlw	0
  5165  008C7E  0100               	movlb	0	; () banked
  5166  008C80  6FE4               	movwf	_m_update_frequency& (0+255),b	;volatile
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;main.c: 668: RtccWrOn();
  5170  008C82  ECA4  F057         	call	_RtccWrOn	;wreg free
  5171                           
  5172                           ;main.c: 669: RTCCFGbits.RTCPTR0 = 0;
  5173  008C86  010F               	movlb	15	; () banked
  5174  008C88  913F               	bcf	63,0,b	;volatile
  5175                           
  5176                           ; BSR set to: 15
  5177                           ;main.c: 670: RTCCFGbits.RTCPTR1 = 0;
  5178  008C8A  010F               	movlb	15	; () banked
  5179  008C8C  933F               	bcf	63,1,b	;volatile
  5180                           
  5181                           ; BSR set to: 15
  5182                           ;main.c: 671: RTCVALHbits.RTCVALH = 0x00;
  5183  008C8E  0E00               	movlw	0
  5184  008C90  010F               	movlb	15	; () banked
  5185  008C92  6F3B               	movwf	59,b	;volatile
  5186                           
  5187                           ; BSR set to: 15
  5188                           ;main.c: 672: RTCVALLbits.RTCVALL = 0x00;
  5189  008C94  0E00               	movlw	0
  5190  008C96  010F               	movlb	15	; () banked
  5191  008C98  6F3A               	movwf	58,b	;volatile
  5192                           
  5193                           ; BSR set to: 15
  5194                           ;main.c: 673: ALRMCFGbits.AMASK = 0b0010;
  5195  008C9A  010F               	movlb	15	; () banked
  5196  008C9C  5147               	movf	71,w,b	;volatile
  5197  008C9E  0BC3               	andlw	-61
  5198  008CA0  0908               	iorlw	8
  5199  008CA2  6F47               	movwf	71,b	;volatile
  5200                           
  5201                           ; BSR set to: 15
  5202                           ;main.c: 674: (RTCCFGbits.RTCWREN = 0);
  5203  008CA4  010F               	movlb	15	; () banked
  5204  008CA6  9B3F               	bcf	63,5,b	;volatile
  5205                           
  5206                           ; BSR set to: 15
  5207                           ;main.c: 675: timer_count = 1;
  5208  008CA8  0E01               	movlw	1
  5209  008CAA  6E5B               	movwf	_timer_count,c	;volatile
  5210                           
  5211                           ; BSR set to: 15
  5212                           ;main.c: 676: timer_flag = 0;
  5213  008CAC  0E00               	movlw	0
  5214  008CAE  0101               	movlb	1	; () banked
  5215  008CB0  6FCC               	movwf	_timer_flag& (0+255),b	;volatile
  5216                           
  5217                           ;main.c: 677: }
  5218  008CB2  0012               	return	
  5219  008CB4                     l1812:
  5220                           
  5221                           ; BSR set to: 1
  5222                           ;main.c: 678: else
  5223                           ;main.c: 679: {
  5224                           ;main.c: 680: m_update_frequency = m_var.value_byte1;
  5225  008CB4  C1E3  F0E4         	movff	_m_var+4,_m_update_frequency	;volatile
  5226                           
  5227                           ; BSR set to: 1
  5228                           ;main.c: 681: RtccWrOn();
  5229  008CB8  ECA4  F057         	call	_RtccWrOn	;wreg free
  5230                           
  5231                           ;main.c: 682: RTCCFGbits.RTCPTR0 = 0;
  5232  008CBC  010F               	movlb	15	; () banked
  5233  008CBE  913F               	bcf	63,0,b	;volatile
  5234                           
  5235                           ; BSR set to: 15
  5236                           ;main.c: 683: RTCCFGbits.RTCPTR1 = 0;
  5237  008CC0  010F               	movlb	15	; () banked
  5238  008CC2  933F               	bcf	63,1,b	;volatile
  5239                           
  5240                           ; BSR set to: 15
  5241                           ;main.c: 684: RTCVALHbits.RTCVALH = 0x00;
  5242  008CC4  0E00               	movlw	0
  5243  008CC6  010F               	movlb	15	; () banked
  5244  008CC8  6F3B               	movwf	59,b	;volatile
  5245                           
  5246                           ; BSR set to: 15
  5247                           ;main.c: 685: RTCVALLbits.RTCVALL = 0x00;
  5248  008CCA  0E00               	movlw	0
  5249  008CCC  010F               	movlb	15	; () banked
  5250  008CCE  6F3A               	movwf	58,b	;volatile
  5251                           
  5252                           ; BSR set to: 15
  5253                           ;main.c: 686: ALRMCFGbits.AMASK = 0b0011;
  5254  008CD0  010F               	movlb	15	; () banked
  5255  008CD2  5147               	movf	71,w,b	;volatile
  5256  008CD4  0BC3               	andlw	-61
  5257  008CD6  090C               	iorlw	12
  5258  008CD8  6F47               	movwf	71,b	;volatile
  5259                           
  5260                           ; BSR set to: 15
  5261                           ;main.c: 687: (RTCCFGbits.RTCWREN = 0);
  5262  008CDA  010F               	movlb	15	; () banked
  5263  008CDC  9B3F               	bcf	63,5,b	;volatile
  5264                           
  5265                           ; BSR set to: 15
  5266                           ;main.c: 688: timer_count = m_update_frequency;
  5267  008CDE  C0E4  F05B         	movff	_m_update_frequency,_timer_count	;volatile
  5268                           
  5269                           ; BSR set to: 15
  5270                           ;main.c: 689: timer_flag = 0;
  5271  008CE2  0E00               	movlw	0
  5272  008CE4  0101               	movlb	1	; () banked
  5273  008CE6  6FCC               	movwf	_timer_flag& (0+255),b	;volatile
  5274                           
  5275                           ; BSR set to: 1
  5276                           
  5277                           ; BSR set to: 1
  5278  008CE8  0012               	return	
  5279  008CEA                     __end_of_update_variable:
  5280                           	opt stack 0
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           postinc0	equ	0xFEE
  5288                           plusw0	equ	0xFEB
  5289                           wreg	equ	0xFE8
  5290                           postdec1	equ	0xFE5
  5291                           fsr1h	equ	0xFE2
  5292                           fsr1l	equ	0xFE1
  5293                           indf2	equ	0xFDF
  5294                           plusw2	equ	0xFDB
  5295                           fsr2h	equ	0xFDA
  5296                           fsr2l	equ	0xFD9
  5297                           status	equ	0xFD8
  5298                           
  5299 ;; *************** function _strcmp *****************
  5300 ;; Defined at:
  5301 ;;		line 33 in file "/opt/microchip/xc8/v1.35/sources/common/strcmp.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  s1              2    0[BANK1 ] PTR const unsigned char 
  5304 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  5305 ;;  s2              2    2[BANK1 ] PTR const unsigned char 
  5306 ;;		 -> m_var.label(3), m_var(9), 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  r               1    5[BANK1 ] char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  2    0[BANK1 ] int 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5318 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5319 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;Total ram usage:        6 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:   16
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_update_variable
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text2
  5333  00A678                     __ptext2:
  5334                           	opt stack 0
  5335  00A678                     _strcmp:
  5336                           	opt stack 13
  5337                           
  5338                           ;incstack = 0
  5339  00A678  D006               	goto	l18034
  5340  00A67A                     l18032:
  5341  00A67A  0101               	movlb	1	; () banked
  5342  00A67C  4B00               	infsnz	strcmp@s1& (0+255),f,b
  5343  00A67E  2B01               	incf	(strcmp@s1+1)& (0+255),f,b
  5344  00A680  0101               	movlb	1	; () banked
  5345  00A682  4B02               	infsnz	strcmp@s2& (0+255),f,b
  5346  00A684  2B03               	incf	(strcmp@s2+1)& (0+255),f,b
  5347  00A686                     l18034:
  5348  00A686  C100  FFF6         	movff	strcmp@s1,tblptrl
  5349  00A68A  C101  FFF7         	movff	strcmp@s1+1,tblptrh
  5350  00A68E                     	if	0	;tblptru may be non-zero
  5351  00A68E                     	endif
  5352  00A68E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5353  00A68E  0E00               	movlw	low (__mediumconst shr (0+16))
  5354  00A690  6EF8               	movwf	tblptru,c
  5355  00A692                     	endif
  5356  00A692  0008               	tblrd		*
  5357  00A694  CFF5 F104          	movff	tablat,??_strcmp
  5358  00A698  C102  FFD9         	movff	strcmp@s2,fsr2l
  5359  00A69C  C103  FFDA         	movff	strcmp@s2+1,fsr2h
  5360  00A6A0  50DF               	movf	indf2,w,c
  5361  00A6A2  0800               	sublw	0
  5362  00A6A4  0101               	movlb	1	; () banked
  5363  00A6A6  2504               	addwf	??_strcmp& (0+255),w,b
  5364  00A6A8  0101               	movlb	1	; () banked
  5365  00A6AA  6F05               	movwf	strcmp@r& (0+255),b
  5366  00A6AC  0101               	movlb	1	; () banked
  5367  00A6AE  5105               	movf	strcmp@r& (0+255),w,b
  5368  00A6B0  A4D8               	btfss	status,2,c
  5369  00A6B2  D00B               	goto	l18038
  5370                           
  5371                           ; BSR set to: 1
  5372  00A6B4  C100  FFF6         	movff	strcmp@s1,tblptrl
  5373  00A6B8  C101  FFF7         	movff	strcmp@s1+1,tblptrh
  5374  00A6BC                     	if	0	;tblptru may be non-zero
  5375  00A6BC                     	endif
  5376  00A6BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5377  00A6BC  0E00               	movlw	low (__mediumconst shr (0+16))
  5378  00A6BE  6EF8               	movwf	tblptru,c
  5379  00A6C0                     	endif
  5380  00A6C0  0008               	tblrd		*
  5381  00A6C2  50F5               	movf	tablat,w,c
  5382  00A6C4  0900               	iorlw	0
  5383  00A6C6  A4D8               	btfss	status,2,c
  5384  00A6C8  D7D8               	goto	l18032
  5385  00A6CA                     l18038:
  5386                           
  5387                           ; BSR set to: 1
  5388  00A6CA  0101               	movlb	1	; () banked
  5389  00A6CC  5105               	movf	strcmp@r& (0+255),w,b
  5390  00A6CE  0101               	movlb	1	; () banked
  5391  00A6D0  6F00               	movwf	?_strcmp& (0+255),b
  5392  00A6D2  6B01               	clrf	(?_strcmp+1)& (0+255),b
  5393  00A6D4  BF00               	btfsc	?_strcmp& (0+255),7,b
  5394  00A6D6  0701               	decf	(?_strcmp+1)& (0+255),f,b
  5395  00A6D8  0012               	return	
  5396  00A6DA                     __end_of_strcmp:
  5397                           	opt stack 0
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           postinc0	equ	0xFEE
  5405                           plusw0	equ	0xFEB
  5406                           wreg	equ	0xFE8
  5407                           postdec1	equ	0xFE5
  5408                           fsr1h	equ	0xFE2
  5409                           fsr1l	equ	0xFE1
  5410                           indf2	equ	0xFDF
  5411                           plusw2	equ	0xFDB
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8
  5415                           
  5416 ;; *************** function _MiMAC_SetPower *****************
  5417 ;; Defined at:
  5418 ;;		line 537 in file "src/miwi/drv_mrf_miwi_89xa.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  outputPower     1    wreg     unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  outputPower     1    8[BANK1 ] unsigned char 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      unsigned char 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5434 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5436 ;;Total ram usage:        3 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:   18
  5439 ;; This function calls:
  5440 ;;		_RegisterSet
  5441 ;; This function is called by:
  5442 ;;		_main
  5443 ;;		_update_variable
  5444 ;;		_adapt_power_level
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text3
  5449  00AC6E                     __ptext3:
  5450                           	opt stack 0
  5451  00AC6E                     _MiMAC_SetPower:
  5452                           	opt stack 11
  5453                           
  5454                           ; BSR set to: 1
  5455                           ;incstack = 0
  5456                           ;MiMAC_SetPower@outputPower stored from wreg
  5457  00AC6E  0101               	movlb	1	; () banked
  5458  00AC70  6F08               	movwf	MiMAC_SetPower@outputPower& (0+255),b
  5459                           
  5460                           ;drv_mrf_miwi_89xa.c: 539: if( outputPower > 0x07 )
  5461  00AC72  0E07               	movlw	7
  5462  00AC74  0101               	movlb	1	; () banked
  5463  00AC76  6508               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
  5464  00AC78  D001               	goto	l17798
  5465  00AC7A  0012               	return	
  5466  00AC7C                     l17798:
  5467                           
  5468                           ; BSR set to: 1
  5469                           ;drv_mrf_miwi_89xa.c: 542: }
  5470                           ;drv_mrf_miwi_89xa.c: 543: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
  5471  00AC7C  0101               	movlb	1	; () banked
  5472  00AC7E  5108               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
  5473  00AC80  0101               	movlb	1	; () banked
  5474  00AC82  6F06               	movwf	??_MiMAC_SetPower& (0+255),b
  5475  00AC84  6B07               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
  5476  00AC86  90D8               	bcf	status,0,c
  5477  00AC88  0101               	movlb	1	; () banked
  5478  00AC8A  3706               	rlcf	??_MiMAC_SetPower& (0+255),f,b
  5479  00AC8C  3707               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
  5480  00AC8E  0EF0               	movlw	240
  5481  00AC90  0101               	movlb	1	; () banked
  5482  00AC92  1106               	iorwf	??_MiMAC_SetPower& (0+255),w,b
  5483  00AC94  0101               	movlb	1	; () banked
  5484  00AC96  6F02               	movwf	RegisterSet@setting& (0+255),b
  5485  00AC98  0E34               	movlw	52
  5486  00AC9A  0101               	movlb	1	; () banked
  5487  00AC9C  1107               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
  5488  00AC9E  0101               	movlb	1	; () banked
  5489  00ACA0  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
  5490  00ACA2  EC0E  F055         	call	_RegisterSet	;wreg free
  5491  00ACA6  0012               	return	
  5492  00ACA8                     __end_of_MiMAC_SetPower:
  5493                           	opt stack 0
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           prodh	equ	0xFF4
  5499                           prodl	equ	0xFF3
  5500                           postinc0	equ	0xFEE
  5501                           plusw0	equ	0xFEB
  5502                           wreg	equ	0xFE8
  5503                           postdec1	equ	0xFE5
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           indf2	equ	0xFDF
  5507                           plusw2	equ	0xFDB
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function _update_LED *****************
  5513 ;; Defined at:
  5514 ;;		line 774 in file "src/main.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2  203[None  ] int 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:   16
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text4
  5543  00A79E                     __ptext4:
  5544                           	opt stack 0
  5545  00A79E                     _update_LED:
  5546                           	opt stack 14
  5547                           
  5548                           ;main.c: 776: switch(status_led)
  5549                           
  5550                           ;incstack = 0
  5551  00A79E  D021               	goto	l18590
  5552  00A7A0                     l1857:
  5553                           
  5554                           ;main.c: 780: CCP1CONbits.DC1B0 = 0;
  5555  00A7A0  98BA               	bcf	4026,4,c	;volatile
  5556                           
  5557                           ;main.c: 781: CCP1CONbits.DC1B1 = 0;
  5558  00A7A2  9ABA               	bcf	4026,5,c	;volatile
  5559                           
  5560                           ;main.c: 782: CCPR1L = 0;
  5561  00A7A4  0E00               	movlw	0
  5562  00A7A6  6EBB               	movwf	4027,c	;volatile
  5563                           
  5564                           ;main.c: 783: LED_increasing = 1;
  5565  00A7A8  0E01               	movlw	1
  5566  00A7AA  6E43               	movwf	_LED_increasing,c	;volatile
  5567                           
  5568                           ;main.c: 784: break;
  5569  00A7AC  0012               	return	
  5570  00A7AE                     l1859:
  5571                           
  5572                           ;main.c: 788: CCP1CONbits.DC1B0 = 1023 & 1;
  5573  00A7AE  88BA               	bsf	4026,4,c	;volatile
  5574                           
  5575                           ;main.c: 789: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
  5576  00A7B0  8ABA               	bsf	4026,5,c	;volatile
  5577                           
  5578                           ;main.c: 790: CCPR1L = (1023 >> 2);
  5579  00A7B2  68BB               	setf	4027,c	;volatile
  5580                           
  5581                           ;main.c: 791: repeat_full = 4;
  5582  00A7B4  0E04               	movlw	4
  5583  00A7B6  6E51               	movwf	_repeat_full,c	;volatile
  5584                           
  5585                           ;main.c: 792: break;
  5586  00A7B8  0012               	return	
  5587  00A7BA                     l18576:
  5588                           
  5589                           ;main.c: 795: T4CONbits.T4CKPS = 0b01;
  5590  00A7BA  5076               	movf	3958,w,c	;volatile
  5591  00A7BC  0BFC               	andlw	-4
  5592  00A7BE  0901               	iorlw	1
  5593  00A7C0  6E76               	movwf	3958,c	;volatile
  5594                           
  5595                           ;main.c: 797: CCP1CONbits.DC1B0 = 235 & 1;
  5596  00A7C2  88BA               	bsf	4026,4,c	;volatile
  5597                           
  5598                           ;main.c: 798: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  5599  00A7C4  8ABA               	bsf	4026,5,c	;volatile
  5600                           
  5601                           ;main.c: 799: CCPR1L = (235 >> 2);
  5602  00A7C6  0E3A               	movlw	58
  5603  00A7C8  6EBB               	movwf	4027,c	;volatile
  5604                           
  5605                           ;main.c: 800: LED_increasing = 0;
  5606  00A7CA  0E00               	movlw	0
  5607  00A7CC  6E43               	movwf	_LED_increasing,c	;volatile
  5608                           
  5609                           ;main.c: 801: break;
  5610  00A7CE  0012               	return	
  5611  00A7D0                     l18582:
  5612                           
  5613                           ;main.c: 804: T4CONbits.T4CKPS = 0b11;
  5614  00A7D0  0E03               	movlw	3
  5615  00A7D2  1276               	iorwf	3958,f,c	;volatile
  5616                           
  5617                           ;main.c: 806: CCP1CONbits.DC1B0 = 235 & 1;
  5618  00A7D4  88BA               	bsf	4026,4,c	;volatile
  5619                           
  5620                           ;main.c: 807: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  5621  00A7D6  8ABA               	bsf	4026,5,c	;volatile
  5622                           
  5623                           ;main.c: 808: CCPR1L = (235 >> 2);
  5624  00A7D8  0E3A               	movlw	58
  5625  00A7DA  6EBB               	movwf	4027,c	;volatile
  5626                           
  5627                           ;main.c: 809: LED_increasing = 0;
  5628  00A7DC  0E00               	movlw	0
  5629  00A7DE  6E43               	movwf	_LED_increasing,c	;volatile
  5630                           
  5631                           ;main.c: 811: }
  5632                           
  5633                           ;main.c: 810: break;
  5634  00A7E0  0012               	return	
  5635  00A7E2                     l18590:
  5636  00A7E2  5053               	movf	_status_led,w,c	;volatile
  5637                           
  5638                           ; Switch size 1, requested type "space"
  5639                           ; Number of cases is 4, Range of values is 0 to 3
  5640                           ; switch strategies available:
  5641                           ; Name         Instructions Cycles
  5642                           ; simple_byte           13     7 (average)
  5643                           ;	Chosen strategy is simple_byte
  5644  00A7E4  0A00               	xorlw	0	; case 0
  5645  00A7E6  B4D8               	btfsc	status,2,c
  5646  00A7E8  D7DB               	goto	l1857
  5647  00A7EA  0A01               	xorlw	1	; case 1
  5648  00A7EC  B4D8               	btfsc	status,2,c
  5649  00A7EE  D7E5               	goto	l18576
  5650  00A7F0  0A03               	xorlw	3	; case 2
  5651  00A7F2  B4D8               	btfsc	status,2,c
  5652  00A7F4  D7ED               	goto	l18582
  5653  00A7F6  0A01               	xorlw	1	; case 3
  5654  00A7F8  A4D8               	btfss	status,2,c
  5655  00A7FA  0012               	return	
  5656  00A7FC  D7D8               	goto	l1859
  5657  00A7FE                     __end_of_update_LED:
  5658                           	opt stack 0
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           prodh	equ	0xFF4
  5664                           prodl	equ	0xFF3
  5665                           postinc0	equ	0xFEE
  5666                           plusw0	equ	0xFEB
  5667                           wreg	equ	0xFE8
  5668                           postdec1	equ	0xFE5
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           plusw2	equ	0xFDB
  5673                           fsr2h	equ	0xFDA
  5674                           fsr2l	equ	0xFD9
  5675                           status	equ	0xFD8
  5676                           
  5677 ;; *************** function _timer_reset *****************
  5678 ;; Defined at:
  5679 ;;		line 694 in file "src/main.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;		None               void
  5686 ;; Registers used:
  5687 ;;		wreg, status,2
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:   16
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_main
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text5
  5708  00AF16                     __ptext5:
  5709                           	opt stack 0
  5710  00AF16                     _timer_reset:
  5711                           	opt stack 14
  5712                           
  5713                           ;main.c: 703: if (m_update_frequency == 0)
  5714                           
  5715                           ;incstack = 0
  5716  00AF16  0100               	movlb	0	; () banked
  5717  00AF18  51E4               	movf	_m_update_frequency& (0+255),w,b	;volatile
  5718  00AF1A  A4D8               	btfss	status,2,c
  5719  00AF1C  D003               	goto	l1817
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;main.c: 704: timer_count = 1;
  5723  00AF1E  0E01               	movlw	1
  5724  00AF20  6E5B               	movwf	_timer_count,c	;volatile
  5725  00AF22  D002               	goto	l19562
  5726  00AF24                     l1817:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;main.c: 705: else
  5730                           ;main.c: 706: timer_count = m_update_frequency;
  5731  00AF24  C0E4  F05B         	movff	_m_update_frequency,_timer_count	;volatile
  5732  00AF28                     l19562:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;main.c: 707: timer_flag = 0;
  5736  00AF28  0E00               	movlw	0
  5737  00AF2A  0101               	movlb	1	; () banked
  5738  00AF2C  6FCC               	movwf	_timer_flag& (0+255),b	;volatile
  5739                           
  5740                           ; BSR set to: 1
  5741  00AF2E  0012               	return		;funcret
  5742  00AF30                     __end_of_timer_reset:
  5743                           	opt stack 0
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           postinc0	equ	0xFEE
  5751                           plusw0	equ	0xFEB
  5752                           wreg	equ	0xFE8
  5753                           postdec1	equ	0xFE5
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           indf2	equ	0xFDF
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _strcpy *****************
  5763 ;; Defined at:
  5764 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/strcpy.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  to              2    0[BANK1 ] PTR unsigned char 
  5767 ;;		 -> ToSendDataBuffer(64), 
  5768 ;;  from            2    2[BANK1 ] PTR const unsigned char 
  5769 ;;		 -> STR_2(33), STR_1(8), 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  cp              2    4[BANK1 ] PTR unsigned char 
  5772 ;;		 -> ToSendDataBuffer(64), 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2    0[BANK1 ] PTR unsigned char 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5782 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;Total ram usage:        6 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:   16
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text6
  5797  00ACE2                     __ptext6:
  5798                           	opt stack 0
  5799  00ACE2                     _strcpy:
  5800                           	opt stack 14
  5801                           
  5802                           ; BSR set to: 1
  5803                           ;incstack = 0
  5804  00ACE2  C100  F104         	movff	strcpy@to,strcpy@cp
  5805  00ACE6  C101  F105         	movff	strcpy@to+1,strcpy@cp+1
  5806  00ACEA  D006               	goto	l19186
  5807  00ACEC                     l19184:
  5808  00ACEC  0101               	movlb	1	; () banked
  5809  00ACEE  4B04               	infsnz	strcpy@cp& (0+255),f,b
  5810  00ACF0  2B05               	incf	(strcpy@cp+1)& (0+255),f,b
  5811  00ACF2  0101               	movlb	1	; () banked
  5812  00ACF4  4B02               	infsnz	strcpy@from& (0+255),f,b
  5813  00ACF6  2B03               	incf	(strcpy@from+1)& (0+255),f,b
  5814  00ACF8                     l19186:
  5815  00ACF8  C102  FFF6         	movff	strcpy@from,tblptrl
  5816  00ACFC  C103  FFF7         	movff	strcpy@from+1,tblptrh
  5817  00AD00                     	if	0	;tblptru may be non-zero
  5818  00AD00                     	endif
  5819  00AD00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5820  00AD00  0E00               	movlw	low (__mediumconst shr (0+16))
  5821  00AD02  6EF8               	movwf	tblptru,c
  5822  00AD04                     	endif
  5823  00AD04  C104  FFD9         	movff	strcpy@cp,fsr2l
  5824  00AD08  C105  FFDA         	movff	strcpy@cp+1,fsr2h
  5825  00AD0C  0008               	tblrd		*
  5826  00AD0E  CFF5 FFDF          	movff	tablat,indf2
  5827  00AD12  50DF               	movf	indf2,w,c
  5828  00AD14  B4D8               	btfsc	status,2,c
  5829  00AD16  0012               	return	
  5830  00AD18  D7E9               	goto	l19184
  5831  00AD1A                     __end_of_strcpy:
  5832                           	opt stack 0
  5833                           tblptru	equ	0xFF8
  5834                           tblptrh	equ	0xFF7
  5835                           tblptrl	equ	0xFF6
  5836                           tablat	equ	0xFF5
  5837                           prodh	equ	0xFF4
  5838                           prodl	equ	0xFF3
  5839                           postinc0	equ	0xFEE
  5840                           plusw0	equ	0xFEB
  5841                           wreg	equ	0xFE8
  5842                           postdec1	equ	0xFE5
  5843                           fsr1h	equ	0xFE2
  5844                           fsr1l	equ	0xFE1
  5845                           indf2	equ	0xFDF
  5846                           plusw2	equ	0xFDB
  5847                           fsr2h	equ	0xFDA
  5848                           fsr2l	equ	0xFD9
  5849                           status	equ	0xFD8
  5850                           
  5851 ;; *************** function _sprintf *****************
  5852 ;; Defined at:
  5853 ;;		line 492 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  sp              2   12[BANK1 ] PTR unsigned char 
  5856 ;;		 -> ToSendDataBuffer(64), 
  5857 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  5858 ;;		 -> STR_14(39), STR_13(52), STR_12(44), STR_11(55), 
  5859 ;;		 -> STR_10(39), STR_9(32), STR_8(17), STR_7(31), 
  5860 ;;		 -> STR_6(25), STR_5(22), STR_4(41), STR_3(33), 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  idx             1   28[BANK1 ] unsigned char 
  5863 ;;  tmpval          4    0        struct .
  5864 ;;  width           2   39[BANK1 ] int 
  5865 ;;  val             2   36[BANK1 ] unsigned int 
  5866 ;;  len             2   34[BANK1 ] unsigned int 
  5867 ;;  ap              2   32[BANK1 ] PTR void [1]
  5868 ;;		 -> ?_sprintf(2), 
  5869 ;;  cp              2   30[BANK1 ] PTR const unsigned char 
  5870 ;;		 -> STR_15(7), TX_POWER_INVALID(9), TX_POWER_N_8_DB_MW(7), TX_POWER_N_5_DB_MW(6), 
  5871 ;;		 -> TX_POWER_N_2_DB_MW(6), TX_POWER_1_DB_MW(6), TX_POWER_4_DB_MW(6), TX_POWER_7_DB_MW(4), 
  5872 ;;		 -> TX_POWER_10_DB_MW(5), TX_POWER_13_DB_MW(5), 
  5873 ;;  c               1   41[BANK1 ] char 
  5874 ;;  flag            1   38[BANK1 ] unsigned char 
  5875 ;;  prec            1   29[BANK1 ] char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  2   12[BANK1 ] int 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5885 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;Total ram usage:       30 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:   17
  5892 ;; This function calls:
  5893 ;;		___lwdiv
  5894 ;;		___lwmod
  5895 ;;		___wmul
  5896 ;;		_isdigit
  5897 ;; This function is called by:
  5898 ;;		_main
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text7
  5903  0053BA                     __ptext7:
  5904                           	opt stack 0
  5905  0053BA                     _sprintf:
  5906                           	opt stack 13
  5907                           
  5908                           ;doprnt.c: 494: va_list ap;
  5909                           ;doprnt.c: 499: signed char c;
  5910                           ;doprnt.c: 501: int width;
  5911                           ;doprnt.c: 506: signed char prec;
  5912                           ;doprnt.c: 508: unsigned char flag;
  5913                           ;doprnt.c: 523: union {
  5914                           ;doprnt.c: 524: unsigned long vd;
  5915                           ;doprnt.c: 525: double integ;
  5916                           ;doprnt.c: 526: } tmpval;
  5917                           ;doprnt.c: 528: unsigned int val;
  5918                           ;doprnt.c: 529: unsigned len;
  5919                           ;doprnt.c: 530: const char * cp;
  5920                           ;doprnt.c: 533: *ap = __va_start();
  5921                           
  5922                           ;incstack = 0
  5923  0053BA  0E10               	movlw	low (?_sprintf+4)
  5924  0053BC  0101               	movlb	1	; () banked
  5925  0053BE  6F20               	movwf	sprintf@ap& (0+255),b
  5926  0053C0  0E01               	movlw	high (?_sprintf+4)
  5927  0053C2  0101               	movlb	1	; () banked
  5928  0053C4  6F21               	movwf	(sprintf@ap+1)& (0+255),b
  5929                           
  5930                           ;doprnt.c: 536: while(c = *f++) {
  5931  0053C6  D288               	goto	l19418
  5932  0053C8                     l19246:
  5933                           
  5934                           ; BSR set to: 1
  5935                           ;doprnt.c: 538: if(c != '%')
  5936  0053C8  0E25               	movlw	37
  5937  0053CA  0101               	movlb	1	; () banked
  5938  0053CC  1929               	xorwf	sprintf@c& (0+255),w,b
  5939  0053CE  B4D8               	btfsc	status,2,c
  5940  0053D0  D00A               	goto	l19252
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;doprnt.c: 540: {
  5944                           ;doprnt.c: 541: ((*sp++ = (c)));
  5945  0053D2  C10C  FFD9         	movff	sprintf@sp,fsr2l
  5946  0053D6  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  5947  0053DA  C129  FFDF         	movff	sprintf@c,indf2
  5948                           
  5949                           ; BSR set to: 1
  5950  0053DE  0101               	movlb	1	; () banked
  5951  0053E0  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  5952  0053E2  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  5953                           
  5954                           ;doprnt.c: 542: continue;
  5955  0053E4  D279               	goto	l19418
  5956  0053E6                     l19252:
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;doprnt.c: 543: }
  5960                           ;doprnt.c: 546: width = 0;
  5961  0053E6  0E00               	movlw	0
  5962  0053E8  0101               	movlb	1	; () banked
  5963  0053EA  6F28               	movwf	(sprintf@width+1)& (0+255),b
  5964  0053EC  0E00               	movlw	0
  5965  0053EE  6F27               	movwf	sprintf@width& (0+255),b
  5966                           
  5967                           ;doprnt.c: 548: flag = 0;
  5968  0053F0  0E00               	movlw	0
  5969  0053F2  0101               	movlb	1	; () banked
  5970  0053F4  6F26               	movwf	sprintf@flag& (0+255),b
  5971                           
  5972                           ; BSR set to: 1
  5973                           ;doprnt.c: 551: switch(*f) {
  5974                           
  5975                           ;doprnt.c: 550: for(;;) {
  5976  0053F6  D005               	goto	l19258
  5977  0053F8                     l19254:
  5978                           
  5979                           ;doprnt.c: 580: flag |= 0x04;
  5980  0053F8  0101               	movlb	1	; () banked
  5981  0053FA  8526               	bsf	sprintf@flag& (0+255),2,b
  5982                           
  5983                           ;doprnt.c: 581: f++;
  5984  0053FC  0101               	movlb	1	; () banked
  5985  0053FE  4B0E               	infsnz	sprintf@f& (0+255),f,b
  5986  005400  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  5987  005402                     l19258:
  5988  005402  C10E  FFF6         	movff	sprintf@f,tblptrl
  5989  005406  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  5990  00540A                     	if	0	;tblptru may be non-zero
  5991  00540A                     	endif
  5992  00540A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5993  00540A  0E00               	movlw	low (__mediumconst shr (0+16))
  5994  00540C  6EF8               	movwf	tblptru,c
  5995  00540E                     	endif
  5996  00540E  0008               	tblrd		*
  5997  005410  50F5               	movf	tablat,w,c
  5998                           
  5999                           ; Switch size 1, requested type "space"
  6000                           ; Number of cases is 1, Range of values is 48 to 48
  6001                           ; switch strategies available:
  6002                           ; Name         Instructions Cycles
  6003                           ; simple_byte            4     3 (average)
  6004                           ;	Chosen strategy is simple_byte
  6005  005412  0A30               	xorlw	48	; case 48
  6006  005414  B4D8               	btfsc	status,2,c
  6007  005416  D7F0               	goto	l19254
  6008                           
  6009                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6010                           
  6011                           ;doprnt.c: 586: }
  6012                           
  6013                           ;doprnt.c: 585: break;
  6014  005418  C10E  FFF6         	movff	sprintf@f,tblptrl
  6015  00541C  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6016  005420                     	if	0	;tblptru may be non-zero
  6017  005420                     	endif
  6018  005420                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6019  005420  0E00               	movlw	low (__mediumconst shr (0+16))
  6020  005422  6EF8               	movwf	tblptru,c
  6021  005424                     	endif
  6022  005424  0008               	tblrd		*
  6023  005426  50F5               	movf	tablat,w,c
  6024  005428  EC21  F057         	call	_isdigit
  6025  00542C  A0D8               	btfss	status,0,c
  6026  00542E  D0CE               	goto	l19310
  6027                           
  6028                           ;doprnt.c: 598: width = 0;
  6029  005430  0E00               	movlw	0
  6030  005432  0101               	movlb	1	; () banked
  6031  005434  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6032  005436  0E00               	movlw	0
  6033  005438  6F27               	movwf	sprintf@width& (0+255),b
  6034  00543A                     l19264:
  6035                           
  6036                           ;doprnt.c: 600: width *= 10;
  6037  00543A  C127  F100         	movff	sprintf@width,___wmul@multiplier
  6038  00543E  C128  F101         	movff	sprintf@width+1,___wmul@multiplier+1
  6039  005442  0E00               	movlw	0
  6040  005444  0101               	movlb	1	; () banked
  6041  005446  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6042  005448  0E0A               	movlw	10
  6043  00544A  6F02               	movwf	___wmul@multiplicand& (0+255),b
  6044  00544C  EC8D  F056         	call	___wmul	;wreg free
  6045  005450  C100  F127         	movff	?___wmul,sprintf@width
  6046  005454  C101  F128         	movff	?___wmul+1,sprintf@width+1
  6047                           
  6048                           ;doprnt.c: 601: width += *f++ - '0';
  6049  005458  0ED0               	movlw	208
  6050  00545A  0101               	movlb	1	; () banked
  6051  00545C  6F18               	movwf	??_sprintf& (0+255),b
  6052  00545E  0EFF               	movlw	255
  6053  005460  0101               	movlb	1	; () banked
  6054  005462  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6055  005464  C10E  FFF6         	movff	sprintf@f,tblptrl
  6056  005468  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6057  00546C                     	if	0	;tblptru may be non-zero
  6058  00546C                     	endif
  6059  00546C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6060  00546C  0E00               	movlw	low (__mediumconst shr (0+16))
  6061  00546E  6EF8               	movwf	tblptru,c
  6062  005470                     	endif
  6063  005470  0008               	tblrd		*
  6064  005472  50F5               	movf	tablat,w,c
  6065  005474  0101               	movlb	1	; () banked
  6066  005476  6F1A               	movwf	(??_sprintf+2)& (0+255),b
  6067  005478  6B1B               	clrf	(??_sprintf+3)& (0+255),b
  6068  00547A  0101               	movlb	1	; () banked
  6069  00547C  5118               	movf	??_sprintf& (0+255),w,b
  6070  00547E  0101               	movlb	1	; () banked
  6071  005480  271A               	addwf	(??_sprintf+2)& (0+255),f,b
  6072  005482  0101               	movlb	1	; () banked
  6073  005484  5119               	movf	(??_sprintf+1)& (0+255),w,b
  6074  005486  0101               	movlb	1	; () banked
  6075  005488  231B               	addwfc	(??_sprintf+3)& (0+255),f,b
  6076  00548A  0101               	movlb	1	; () banked
  6077  00548C  511A               	movf	(??_sprintf+2)& (0+255),w,b
  6078  00548E  0101               	movlb	1	; () banked
  6079  005490  2727               	addwf	sprintf@width& (0+255),f,b
  6080  005492  0101               	movlb	1	; () banked
  6081  005494  511B               	movf	(??_sprintf+3)& (0+255),w,b
  6082  005496  0101               	movlb	1	; () banked
  6083  005498  2328               	addwfc	(sprintf@width+1)& (0+255),f,b
  6084                           
  6085                           ; BSR set to: 1
  6086  00549A  0101               	movlb	1	; () banked
  6087  00549C  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6088  00549E  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6089                           
  6090                           ; BSR set to: 1
  6091                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6092  0054A0  C10E  FFF6         	movff	sprintf@f,tblptrl
  6093  0054A4  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6094  0054A8                     	if	0	;tblptru may be non-zero
  6095  0054A8                     	endif
  6096  0054A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6097  0054A8  0E00               	movlw	low (__mediumconst shr (0+16))
  6098  0054AA  6EF8               	movwf	tblptru,c
  6099  0054AC                     	endif
  6100  0054AC  0008               	tblrd		*
  6101  0054AE  50F5               	movf	tablat,w,c
  6102  0054B0  EC21  F057         	call	_isdigit
  6103  0054B4  A0D8               	btfss	status,0,c
  6104  0054B6  D08A               	goto	l19310
  6105  0054B8  D7C0               	goto	l19264
  6106  0054BA                     l19272:
  6107                           
  6108                           ;doprnt.c: 721: flag |= 0x80;
  6109  0054BA  0101               	movlb	1	; () banked
  6110  0054BC  8F26               	bsf	sprintf@flag& (0+255),7,b
  6111                           
  6112                           ;doprnt.c: 723: break;
  6113  0054BE  D0A4               	goto	l2116
  6114  0054C0                     l19274:
  6115                           
  6116                           ; BSR set to: 1
  6117                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6118  0054C0  C120  FFD9         	movff	sprintf@ap,fsr2l
  6119  0054C4  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6120  0054C8  CFDE F11E          	movff	postinc2,sprintf@cp
  6121  0054CC  CFDD F11F          	movff	postdec2,sprintf@cp+1
  6122                           
  6123                           ; BSR set to: 1
  6124  0054D0  0E02               	movlw	2
  6125  0054D2  0101               	movlb	1	; () banked
  6126  0054D4  2720               	addwf	sprintf@ap& (0+255),f,b
  6127  0054D6  0E00               	movlw	0
  6128  0054D8  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;doprnt.c: 740: if(!cp)
  6132  0054DA  0101               	movlb	1	; () banked
  6133  0054DC  511E               	movf	sprintf@cp& (0+255),w,b
  6134  0054DE  0101               	movlb	1	; () banked
  6135  0054E0  111F               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6136  0054E2  A4D8               	btfss	status,2,c
  6137  0054E4  D006               	goto	l19282
  6138                           
  6139                           ; BSR set to: 1
  6140                           ;doprnt.c: 741: cp = "(null)";
  6141  0054E6  0EBF               	movlw	low STR_15
  6142  0054E8  0101               	movlb	1	; () banked
  6143  0054EA  6F1E               	movwf	sprintf@cp& (0+255),b
  6144  0054EC  0E23               	movlw	high STR_15
  6145  0054EE  0101               	movlb	1	; () banked
  6146  0054F0  6F1F               	movwf	(sprintf@cp+1)& (0+255),b
  6147  0054F2                     l19282:
  6148                           
  6149                           ; BSR set to: 1
  6150                           ;doprnt.c: 745: len = 0;
  6151  0054F2  0E00               	movlw	0
  6152  0054F4  0101               	movlb	1	; () banked
  6153  0054F6  6F23               	movwf	(sprintf@len+1)& (0+255),b
  6154  0054F8  0E00               	movlw	0
  6155  0054FA  6F22               	movwf	sprintf@len& (0+255),b
  6156                           
  6157                           ;doprnt.c: 746: while(cp[len])
  6158  0054FC  D003               	goto	l19286
  6159  0054FE                     l19284:
  6160                           
  6161                           ; BSR set to: 1
  6162                           ;doprnt.c: 747: len++;
  6163  0054FE  0101               	movlb	1	; () banked
  6164  005500  4B22               	infsnz	sprintf@len& (0+255),f,b
  6165  005502  2B23               	incf	(sprintf@len+1)& (0+255),f,b
  6166  005504                     l19286:
  6167                           
  6168                           ; BSR set to: 1
  6169  005504  0101               	movlb	1	; () banked
  6170  005506  5122               	movf	sprintf@len& (0+255),w,b
  6171  005508  0101               	movlb	1	; () banked
  6172  00550A  251E               	addwf	sprintf@cp& (0+255),w,b
  6173  00550C  0101               	movlb	1	; () banked
  6174  00550E  6F18               	movwf	??_sprintf& (0+255),b
  6175  005510  0101               	movlb	1	; () banked
  6176  005512  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6177  005514  0101               	movlb	1	; () banked
  6178  005516  211F               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6179  005518  0101               	movlb	1	; () banked
  6180  00551A  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6181  00551C  C118  FFF6         	movff	??_sprintf,tblptrl
  6182  005520  C119  FFF7         	movff	??_sprintf+1,tblptrh
  6183  005524                     	if	0	;tblptru may be non-zero
  6184  005524                     	endif
  6185  005524                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6186  005524  0E00               	movlw	low (__mediumconst shr (0+16))
  6187  005526  6EF8               	movwf	tblptru,c
  6188  005528                     	endif
  6189  005528  0008               	tblrd		*
  6190  00552A  50F5               	movf	tablat,w,c
  6191  00552C  0900               	iorlw	0
  6192  00552E  A4D8               	btfss	status,2,c
  6193  005530  D7E6               	goto	l19284
  6194                           
  6195                           ; BSR set to: 1
  6196                           ;doprnt.c: 757: if(width > len)
  6197                           
  6198                           ; BSR set to: 1
  6199  005532  0101               	movlb	1	; () banked
  6200  005534  5127               	movf	sprintf@width& (0+255),w,b
  6201  005536  0101               	movlb	1	; () banked
  6202  005538  5D22               	subwf	sprintf@len& (0+255),w,b
  6203  00553A  0101               	movlb	1	; () banked
  6204  00553C  5128               	movf	(sprintf@width+1)& (0+255),w,b
  6205  00553E  0101               	movlb	1	; () banked
  6206  005540  5923               	subwfb	(sprintf@len+1)& (0+255),w,b
  6207  005542  B0D8               	btfsc	status,0,c
  6208  005544  D009               	goto	l19292
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;doprnt.c: 758: width -= len;
  6212  005546  0101               	movlb	1	; () banked
  6213  005548  5122               	movf	sprintf@len& (0+255),w,b
  6214  00554A  0101               	movlb	1	; () banked
  6215  00554C  5F27               	subwf	sprintf@width& (0+255),f,b
  6216  00554E  0101               	movlb	1	; () banked
  6217  005550  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6218  005552  0101               	movlb	1	; () banked
  6219  005554  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  6220  005556  D00F               	goto	l19298
  6221  005558                     l19292:
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;doprnt.c: 759: else
  6225                           ;doprnt.c: 760: width = 0;
  6226  005558  0E00               	movlw	0
  6227  00555A  0101               	movlb	1	; () banked
  6228  00555C  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6229  00555E  0E00               	movlw	0
  6230  005560  6F27               	movwf	sprintf@width& (0+255),b
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;doprnt.c: 764: while(width--)
  6234  005562  D009               	goto	l19298
  6235  005564                     l19294:
  6236                           
  6237                           ; BSR set to: 1
  6238                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6239  005564  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6240  005568  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6241  00556C  0E20               	movlw	32
  6242  00556E  6EDF               	movwf	indf2,c
  6243                           
  6244                           ; BSR set to: 1
  6245  005570  0101               	movlb	1	; () banked
  6246  005572  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6247  005574  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6248  005576                     l19298:
  6249                           
  6250                           ; BSR set to: 1
  6251  005576  0101               	movlb	1	; () banked
  6252  005578  0727               	decf	sprintf@width& (0+255),f,b
  6253  00557A  A0D8               	btfss	status,0,c
  6254  00557C  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6255  00557E  0101               	movlb	1	; () banked
  6256  005580  2927               	incf	sprintf@width& (0+255),w,b
  6257  005582  E1F0               	bnz	l19294
  6258  005584  0101               	movlb	1	; () banked
  6259  005586  2928               	incf	(sprintf@width+1)& (0+255),w,b
  6260  005588  B4D8               	btfsc	status,2,c
  6261  00558A  D014               	goto	l19306
  6262  00558C  D7EB               	goto	l19294
  6263  00558E                     l19300:
  6264                           
  6265                           ; BSR set to: 1
  6266                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6267  00558E  C11E  FFF6         	movff	sprintf@cp,tblptrl
  6268  005592  C11F  FFF7         	movff	sprintf@cp+1,tblptrh
  6269  005596                     	if	0	;tblptru may be non-zero
  6270  005596                     	endif
  6271  005596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6272  005596  0E00               	movlw	low (__mediumconst shr (0+16))
  6273  005598  6EF8               	movwf	tblptru,c
  6274  00559A                     	endif
  6275  00559A  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6276  00559E  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6277  0055A2  0008               	tblrd		*
  6278  0055A4  CFF5 FFDF          	movff	tablat,indf2
  6279                           
  6280                           ; BSR set to: 1
  6281  0055A8  0101               	movlb	1	; () banked
  6282  0055AA  4B1E               	infsnz	sprintf@cp& (0+255),f,b
  6283  0055AC  2B1F               	incf	(sprintf@cp+1)& (0+255),f,b
  6284                           
  6285                           ; BSR set to: 1
  6286  0055AE  0101               	movlb	1	; () banked
  6287  0055B0  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6288  0055B2  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6289  0055B4                     l19306:
  6290                           
  6291                           ; BSR set to: 1
  6292  0055B4  0101               	movlb	1	; () banked
  6293  0055B6  0722               	decf	sprintf@len& (0+255),f,b
  6294  0055B8  A0D8               	btfss	status,0,c
  6295  0055BA  0723               	decf	(sprintf@len+1)& (0+255),f,b
  6296  0055BC  0101               	movlb	1	; () banked
  6297  0055BE  2922               	incf	sprintf@len& (0+255),w,b
  6298  0055C0  E1E6               	bnz	l19300
  6299  0055C2  0101               	movlb	1	; () banked
  6300  0055C4  2923               	incf	(sprintf@len+1)& (0+255),w,b
  6301  0055C6  B4D8               	btfsc	status,2,c
  6302  0055C8  D187               	goto	l19418
  6303  0055CA  D7E1               	goto	l19300
  6304  0055CC                     l19310:
  6305  0055CC  C10E  FFF6         	movff	sprintf@f,tblptrl
  6306  0055D0  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6307  0055D4  0101               	movlb	1	; () banked
  6308  0055D6  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6309  0055D8  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6310  0055DA                     	if	0	;tblptru may be non-zero
  6311  0055DA                     	endif
  6312  0055DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6313  0055DA  0E00               	movlw	low (__mediumconst shr (0+16))
  6314  0055DC  6EF8               	movwf	tblptru,c
  6315  0055DE                     	endif
  6316  0055DE  0008               	tblrd		*
  6317  0055E0  CFF5 F129          	movff	tablat,sprintf@c
  6318  0055E4  0101               	movlb	1	; () banked
  6319  0055E6  5129               	movf	sprintf@c& (0+255),w,b
  6320                           
  6321                           ; Switch size 1, requested type "space"
  6322                           ; Number of cases is 5, Range of values is 0 to 120
  6323                           ; switch strategies available:
  6324                           ; Name         Instructions Cycles
  6325                           ; simple_byte           16     9 (average)
  6326                           ;	Chosen strategy is simple_byte
  6327  0055E8  0A00               	xorlw	0	; case 0
  6328  0055EA  B4D8               	btfsc	status,2,c
  6329  0055EC  D185               	goto	l19420
  6330  0055EE  0A64               	xorlw	100	; case 100
  6331  0055F0  B4D8               	btfsc	status,2,c
  6332  0055F2  D00A               	goto	l2116
  6333  0055F4  0A0D               	xorlw	13	; case 105
  6334  0055F6  B4D8               	btfsc	status,2,c
  6335  0055F8  D007               	goto	l2116
  6336  0055FA  0A1A               	xorlw	26	; case 115
  6337  0055FC  B4D8               	btfsc	status,2,c
  6338  0055FE  D760               	goto	l19274
  6339  005600  0A0B               	xorlw	11	; case 120
  6340  005602  B4D8               	btfsc	status,2,c
  6341  005604  D75A               	goto	l19272
  6342  005606  D168               	goto	l19418
  6343  005608                     l2116:
  6344                           
  6345                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  6346  005608  0101               	movlb	1	; () banked
  6347  00560A  BF26               	btfsc	sprintf@flag& (0+255),7,b
  6348  00560C  D019               	goto	l19322
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;doprnt.c: 1253: {
  6352                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6353  00560E  C120  FFD9         	movff	sprintf@ap,fsr2l
  6354  005612  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6355  005616  CFDE F124          	movff	postinc2,sprintf@val
  6356  00561A  CFDD F125          	movff	postdec2,sprintf@val+1
  6357                           
  6358                           ; BSR set to: 1
  6359  00561E  0E02               	movlw	2
  6360  005620  0101               	movlb	1	; () banked
  6361  005622  2720               	addwf	sprintf@ap& (0+255),f,b
  6362  005624  0E00               	movlw	0
  6363  005626  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;doprnt.c: 1261: if((int)val < 0) {
  6367  005628  0101               	movlb	1	; () banked
  6368  00562A  AF25               	btfss	(sprintf@val+1)& (0+255),7,b
  6369  00562C  D059               	goto	l19356
  6370                           
  6371                           ; BSR set to: 1
  6372                           ;doprnt.c: 1262: flag |= 0x03;
  6373  00562E  0E03               	movlw	3
  6374  005630  0101               	movlb	1	; () banked
  6375  005632  1326               	iorwf	sprintf@flag& (0+255),f,b
  6376                           
  6377                           ; BSR set to: 1
  6378                           ;doprnt.c: 1263: val = -val;
  6379  005634  0101               	movlb	1	; () banked
  6380  005636  6D24               	negf	sprintf@val& (0+255),b
  6381  005638  1F25               	comf	(sprintf@val+1)& (0+255),f,b
  6382  00563A  B0D8               	btfsc	status,0,c
  6383  00563C  2B25               	incf	(sprintf@val+1)& (0+255),f,b
  6384                           
  6385                           ; BSR set to: 1
  6386                           ;doprnt.c: 1264: }
  6387                           ;doprnt.c: 1266: }
  6388  00563E  D050               	goto	l19356
  6389  005640                     l19322:
  6390                           
  6391                           ; BSR set to: 1
  6392                           ;doprnt.c: 1268: else
  6393                           ;doprnt.c: 1273: {
  6394                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6395  005640  C120  FFD9         	movff	sprintf@ap,fsr2l
  6396  005644  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6397  005648  CFDE F124          	movff	postinc2,sprintf@val
  6398  00564C  CFDD F125          	movff	postdec2,sprintf@val+1
  6399                           
  6400                           ; BSR set to: 1
  6401  005650  0E02               	movlw	2
  6402  005652  0101               	movlb	1	; () banked
  6403  005654  2720               	addwf	sprintf@ap& (0+255),f,b
  6404  005656  0E00               	movlw	0
  6405  005658  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6406                           
  6407                           ; BSR set to: 1
  6408                           ;doprnt.c: 1287: }
  6409                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6410  00565A  D042               	goto	l19356
  6411  00565C                     l19326:
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6415  00565C  0E01               	movlw	1
  6416  00565E  0101               	movlb	1	; () banked
  6417  005660  6F29               	movwf	sprintf@c& (0+255),b
  6418  005662                     l19328:
  6419                           
  6420                           ; BSR set to: 1
  6421  005662  0E05               	movlw	5
  6422  005664  0101               	movlb	1	; () banked
  6423  005666  1929               	xorwf	sprintf@c& (0+255),w,b
  6424  005668  B4D8               	btfsc	status,2,c
  6425  00566A  D043               	goto	l19358
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;doprnt.c: 1306: if(val < dpowers[c])
  6429                           
  6430                           ; BSR set to: 1
  6431                           
  6432                           ; BSR set to: 1
  6433  00566C  0101               	movlb	1	; () banked
  6434  00566E  5129               	movf	sprintf@c& (0+255),w,b
  6435  005670  0D02               	mullw	2
  6436  005672  0EB1               	movlw	low _dpowers
  6437  005674  24F3               	addwf	prodl,w,c
  6438  005676  6EF6               	movwf	tblptrl,c
  6439  005678  0E20               	movlw	high _dpowers
  6440  00567A  20F4               	addwfc	prodh,w,c
  6441  00567C  6EF7               	movwf	tblptrh,c
  6442  00567E                     	if	1	;There are 3 active tblptr bytes
  6443  00567E  6AF8               	clrf	tblptru,c
  6444  005680  0E00               	movlw	low (__mediumconst shr (0+16))
  6445  005682  22F8               	addwfc	tblptru,f,c
  6446  005684                     	endif
  6447  005684  0009               	tblrd		*+
  6448  005686  50F5               	movf	tablat,w,c
  6449  005688  0101               	movlb	1	; () banked
  6450  00568A  5D24               	subwf	sprintf@val& (0+255),w,b
  6451  00568C  0009               	tblrd		*+
  6452  00568E  50F5               	movf	tablat,w,c
  6453  005690  0101               	movlb	1	; () banked
  6454  005692  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6455  005694  A0D8               	btfss	status,0,c
  6456  005696  D02D               	goto	l19358
  6457                           
  6458                           ; BSR set to: 1
  6459                           
  6460                           ; BSR set to: 1
  6461                           
  6462                           ; BSR set to: 1
  6463                           ;doprnt.c: 1307: break;
  6464  005698  0101               	movlb	1	; () banked
  6465  00569A  2B29               	incf	sprintf@c& (0+255),f,b
  6466  00569C  D7E2               	goto	l19328
  6467  00569E                     l19340:
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6471  00569E  0E01               	movlw	1
  6472  0056A0  0101               	movlb	1	; () banked
  6473  0056A2  6F29               	movwf	sprintf@c& (0+255),b
  6474  0056A4                     l19342:
  6475                           
  6476                           ; BSR set to: 1
  6477  0056A4  0E04               	movlw	4
  6478  0056A6  0101               	movlb	1	; () banked
  6479  0056A8  1929               	xorwf	sprintf@c& (0+255),w,b
  6480  0056AA  B4D8               	btfsc	status,2,c
  6481  0056AC  D022               	goto	l19358
  6482                           
  6483                           ; BSR set to: 1
  6484                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6485                           
  6486                           ; BSR set to: 1
  6487                           
  6488                           ; BSR set to: 1
  6489  0056AE  0101               	movlb	1	; () banked
  6490  0056B0  5129               	movf	sprintf@c& (0+255),w,b
  6491  0056B2  0D02               	mullw	2
  6492  0056B4  0EBB               	movlw	low _hexpowers
  6493  0056B6  24F3               	addwf	prodl,w,c
  6494  0056B8  6EF6               	movwf	tblptrl,c
  6495  0056BA  0E20               	movlw	high _hexpowers
  6496  0056BC  20F4               	addwfc	prodh,w,c
  6497  0056BE  6EF7               	movwf	tblptrh,c
  6498  0056C0                     	if	1	;There are 3 active tblptr bytes
  6499  0056C0  6AF8               	clrf	tblptru,c
  6500  0056C2  0E00               	movlw	low (__mediumconst shr (0+16))
  6501  0056C4  22F8               	addwfc	tblptru,f,c
  6502  0056C6                     	endif
  6503  0056C6  0009               	tblrd		*+
  6504  0056C8  50F5               	movf	tablat,w,c
  6505  0056CA  0101               	movlb	1	; () banked
  6506  0056CC  5D24               	subwf	sprintf@val& (0+255),w,b
  6507  0056CE  0009               	tblrd		*+
  6508  0056D0  50F5               	movf	tablat,w,c
  6509  0056D2  0101               	movlb	1	; () banked
  6510  0056D4  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6511  0056D6  A0D8               	btfss	status,0,c
  6512  0056D8  D00C               	goto	l19358
  6513                           
  6514                           ; BSR set to: 1
  6515                           
  6516                           ; BSR set to: 1
  6517                           
  6518                           ; BSR set to: 1
  6519                           ;doprnt.c: 1318: break;
  6520  0056DA  0101               	movlb	1	; () banked
  6521  0056DC  2B29               	incf	sprintf@c& (0+255),f,b
  6522  0056DE  D7E2               	goto	l19342
  6523  0056E0                     l19356:
  6524                           
  6525                           ; BSR set to: 1
  6526  0056E0  0101               	movlb	1	; () banked
  6527  0056E2  5126               	movf	sprintf@flag& (0+255),w,b
  6528  0056E4  0B80               	andlw	128
  6529                           
  6530                           ; Switch size 1, requested type "space"
  6531                           ; Number of cases is 2, Range of values is 0 to 128
  6532                           ; switch strategies available:
  6533                           ; Name         Instructions Cycles
  6534                           ; simple_byte            7     4 (average)
  6535                           ;	Chosen strategy is simple_byte
  6536  0056E6  0A00               	xorlw	0	; case 0
  6537  0056E8  B4D8               	btfsc	status,2,c
  6538  0056EA  D7B8               	goto	l19326
  6539  0056EC  0A80               	xorlw	128	; case 128
  6540  0056EE  B4D8               	btfsc	status,2,c
  6541  0056F0  D7D6               	goto	l19340
  6542  0056F2                     l19358:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6546  0056F2  0101               	movlb	1	; () banked
  6547  0056F4  5127               	movf	sprintf@width& (0+255),w,b
  6548  0056F6  0101               	movlb	1	; () banked
  6549  0056F8  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  6550  0056FA  B4D8               	btfsc	status,2,c
  6551  0056FC  D00B               	goto	l19364
  6552                           
  6553                           ; BSR set to: 1
  6554  0056FE  C126  F118         	movff	sprintf@flag,??_sprintf
  6555  005702  0E03               	movlw	3
  6556  005704  0101               	movlb	1	; () banked
  6557  005706  1718               	andwf	??_sprintf& (0+255),f,b
  6558  005708  B4D8               	btfsc	status,2,c
  6559  00570A  D004               	goto	l19364
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;doprnt.c: 1346: width--;
  6563  00570C  0101               	movlb	1	; () banked
  6564  00570E  0727               	decf	sprintf@width& (0+255),f,b
  6565  005710  A0D8               	btfss	status,0,c
  6566  005712  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6567  005714                     l19364:
  6568                           
  6569                           ; BSR set to: 1
  6570                           ;doprnt.c: 1381: if(width > c)
  6571  005714  0E80               	movlw	128
  6572  005716  0101               	movlb	1	; () banked
  6573  005718  BF29               	btfsc	sprintf@c& (0+255),7,b
  6574  00571A  0E7F               	movlw	127
  6575  00571C  0101               	movlb	1	; () banked
  6576  00571E  6F18               	movwf	??_sprintf& (0+255),b
  6577  005720  0101               	movlb	1	; () banked
  6578  005722  5127               	movf	sprintf@width& (0+255),w,b
  6579  005724  0101               	movlb	1	; () banked
  6580  005726  5D29               	subwf	sprintf@c& (0+255),w,b
  6581  005728  0101               	movlb	1	; () banked
  6582  00572A  5128               	movf	(sprintf@width+1)& (0+255),w,b
  6583  00572C  0A80               	xorlw	128
  6584  00572E  0101               	movlb	1	; () banked
  6585  005730  5918               	subwfb	??_sprintf& (0+255),w,b
  6586  005732  B0D8               	btfsc	status,0,c
  6587  005734  D00B               	goto	l19368
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;doprnt.c: 1382: width -= c;
  6591  005736  0101               	movlb	1	; () banked
  6592  005738  5129               	movf	sprintf@c& (0+255),w,b
  6593  00573A  0101               	movlb	1	; () banked
  6594  00573C  5F27               	subwf	sprintf@width& (0+255),f,b
  6595  00573E  0E00               	movlw	0
  6596  005740  0101               	movlb	1	; () banked
  6597  005742  BF29               	btfsc	sprintf@c& (0+255),7,b
  6598  005744  0EFF               	movlw	255
  6599  005746  0101               	movlb	1	; () banked
  6600  005748  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  6601  00574A  D005               	goto	l19370
  6602  00574C                     l19368:
  6603                           
  6604                           ; BSR set to: 1
  6605                           ;doprnt.c: 1383: else
  6606                           ;doprnt.c: 1384: width = 0;
  6607  00574C  0E00               	movlw	0
  6608  00574E  0101               	movlb	1	; () banked
  6609  005750  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6610  005752  0E00               	movlw	0
  6611  005754  6F27               	movwf	sprintf@width& (0+255),b
  6612  005756                     l19370:
  6613                           
  6614                           ; BSR set to: 1
  6615                           ;doprnt.c: 1387: if(flag & 0x04) {
  6616  005756  0101               	movlb	1	; () banked
  6617  005758  A526               	btfss	sprintf@flag& (0+255),2,b
  6618  00575A  D024               	goto	l19386
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;doprnt.c: 1392: if(flag & 0x03)
  6622  00575C  C126  F118         	movff	sprintf@flag,??_sprintf
  6623  005760  0E03               	movlw	3
  6624  005762  0101               	movlb	1	; () banked
  6625  005764  1718               	andwf	??_sprintf& (0+255),f,b
  6626  005766  B4D8               	btfsc	status,2,c
  6627  005768  D009               	goto	l19378
  6628                           
  6629                           ; BSR set to: 1
  6630                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  6631  00576A  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6632  00576E  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6633  005772  0E2D               	movlw	45
  6634  005774  6EDF               	movwf	indf2,c
  6635                           
  6636                           ; BSR set to: 1
  6637  005776  0101               	movlb	1	; () banked
  6638  005778  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6639  00577A  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6640  00577C                     l19378:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;doprnt.c: 1415: if(width)
  6644  00577C  0101               	movlb	1	; () banked
  6645  00577E  5127               	movf	sprintf@width& (0+255),w,b
  6646  005780  0101               	movlb	1	; () banked
  6647  005782  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  6648  005784  B4D8               	btfsc	status,2,c
  6649  005786  D037               	goto	l19400
  6650                           
  6651                           ; BSR set to: 1
  6652                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  6653                           
  6654                           ; BSR set to: 1
  6655                           
  6656                           ;doprnt.c: 1416: do
  6657  005788  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6658  00578C  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6659  005790  0E30               	movlw	48
  6660  005792  6EDF               	movwf	indf2,c
  6661                           
  6662                           ; BSR set to: 1
  6663  005794  0101               	movlb	1	; () banked
  6664  005796  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6665  005798  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6666                           
  6667                           ; BSR set to: 1
  6668                           ;doprnt.c: 1418: while(--width);
  6669  00579A  0101               	movlb	1	; () banked
  6670  00579C  0727               	decf	sprintf@width& (0+255),f,b
  6671  00579E  A0D8               	btfss	status,0,c
  6672  0057A0  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6673  0057A2  D7EC               	goto	l19378
  6674  0057A4                     l19386:
  6675                           
  6676                           ; BSR set to: 1
  6677                           ;doprnt.c: 1422: {
  6678                           ;doprnt.c: 1424: if(width
  6679                           ;doprnt.c: 1428: )
  6680  0057A4  0101               	movlb	1	; () banked
  6681  0057A6  5127               	movf	sprintf@width& (0+255),w,b
  6682  0057A8  0101               	movlb	1	; () banked
  6683  0057AA  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  6684  0057AC  B4D8               	btfsc	status,2,c
  6685  0057AE  D013               	goto	l19394
  6686  0057B0                     l19388:
  6687                           
  6688                           ; BSR set to: 1
  6689                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6690  0057B0  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6691  0057B4  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6692  0057B8  0E20               	movlw	32
  6693  0057BA  6EDF               	movwf	indf2,c
  6694                           
  6695                           ; BSR set to: 1
  6696  0057BC  0101               	movlb	1	; () banked
  6697  0057BE  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6698  0057C0  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6699                           
  6700                           ; BSR set to: 1
  6701                           ;doprnt.c: 1431: while(--width);
  6702  0057C2  0101               	movlb	1	; () banked
  6703  0057C4  0727               	decf	sprintf@width& (0+255),f,b
  6704  0057C6  A0D8               	btfss	status,0,c
  6705  0057C8  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6706  0057CA  0101               	movlb	1	; () banked
  6707  0057CC  5127               	movf	sprintf@width& (0+255),w,b
  6708  0057CE  0101               	movlb	1	; () banked
  6709  0057D0  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  6710  0057D2  A4D8               	btfss	status,2,c
  6711  0057D4  D7ED               	goto	l19388
  6712  0057D6                     l19394:
  6713                           
  6714                           ; BSR set to: 1
  6715                           ;doprnt.c: 1438: if(flag & 0x03)
  6716  0057D6  C126  F118         	movff	sprintf@flag,??_sprintf
  6717  0057DA  0E03               	movlw	3
  6718  0057DC  0101               	movlb	1	; () banked
  6719  0057DE  1718               	andwf	??_sprintf& (0+255),f,b
  6720  0057E0  B4D8               	btfsc	status,2,c
  6721  0057E2  D009               	goto	l19400
  6722                           
  6723                           ; BSR set to: 1
  6724                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6725  0057E4  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6726  0057E8  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6727  0057EC  0E2D               	movlw	45
  6728  0057EE  6EDF               	movwf	indf2,c
  6729                           
  6730                           ; BSR set to: 1
  6731  0057F0  0101               	movlb	1	; () banked
  6732  0057F2  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6733  0057F4  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6734  0057F6                     l19400:
  6735                           
  6736                           ; BSR set to: 1
  6737                           ;doprnt.c: 1469: }
  6738                           ;doprnt.c: 1472: prec = c;
  6739  0057F6  C129  F11D         	movff	sprintf@c,sprintf@prec
  6740                           
  6741                           ;doprnt.c: 1474: while(prec--) {
  6742  0057FA  D068               	goto	l19416
  6743  0057FC                     l19402:
  6744                           
  6745                           ; BSR set to: 1
  6746                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6747  0057FC  0101               	movlb	1	; () banked
  6748  0057FE  511D               	movf	sprintf@prec& (0+255),w,b
  6749  005800  0D02               	mullw	2
  6750  005802  0EB1               	movlw	low _dpowers
  6751  005804  24F3               	addwf	prodl,w,c
  6752  005806  6EF6               	movwf	tblptrl,c
  6753  005808  0E20               	movlw	high _dpowers
  6754  00580A  20F4               	addwfc	prodh,w,c
  6755  00580C  6EF7               	movwf	tblptrh,c
  6756  00580E                     	if	1	;There are 3 active tblptr bytes
  6757  00580E  6AF8               	clrf	tblptru,c
  6758  005810  0E00               	movlw	low (__mediumconst shr (0+16))
  6759  005812  22F8               	addwfc	tblptru,f,c
  6760  005814                     	endif
  6761  005814  0009               	tblrd		*+
  6762  005816  CFF5 F102          	movff	tablat,___lwdiv@divisor
  6763  00581A  000A               	tblrd		*-
  6764  00581C  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  6765  005820  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  6766  005824  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  6767  005828  ECE0  F051         	call	___lwdiv	;wreg free
  6768  00582C  C100  F107         	movff	?___lwdiv,___lwmod@dividend
  6769  005830  C101  F108         	movff	?___lwdiv+1,___lwmod@dividend+1
  6770  005834  0E00               	movlw	0
  6771  005836  0101               	movlb	1	; () banked
  6772  005838  6F0A               	movwf	(___lwmod@divisor+1)& (0+255),b
  6773  00583A  0E0A               	movlw	10
  6774  00583C  6F09               	movwf	___lwmod@divisor& (0+255),b
  6775  00583E  EC6D  F053         	call	___lwmod	;wreg free
  6776  005842  0101               	movlb	1	; () banked
  6777  005844  5107               	movf	?___lwmod& (0+255),w,b
  6778  005846  0F30               	addlw	48
  6779  005848  0101               	movlb	1	; () banked
  6780  00584A  6F29               	movwf	sprintf@c& (0+255),b
  6781                           
  6782                           ;doprnt.c: 1491: break;
  6783  00584C  D036               	goto	l19412
  6784  00584E                     l19404:
  6785                           
  6786                           ; BSR set to: 1
  6787                           ;doprnt.c: 1499: {
  6788                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  6789  00584E  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  6790  005852  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  6791  005856  0101               	movlb	1	; () banked
  6792  005858  511D               	movf	sprintf@prec& (0+255),w,b
  6793  00585A  0D02               	mullw	2
  6794  00585C  0EBB               	movlw	low _hexpowers
  6795  00585E  24F3               	addwf	prodl,w,c
  6796  005860  6EF6               	movwf	tblptrl,c
  6797  005862  0E20               	movlw	high _hexpowers
  6798  005864  20F4               	addwfc	prodh,w,c
  6799  005866  6EF7               	movwf	tblptrh,c
  6800  005868                     	if	1	;There are 3 active tblptr bytes
  6801  005868  6AF8               	clrf	tblptru,c
  6802  00586A  0E00               	movlw	low (__mediumconst shr (0+16))
  6803  00586C  22F8               	addwfc	tblptru,f,c
  6804  00586E                     	endif
  6805  00586E  0009               	tblrd		*+
  6806  005870  CFF5 F102          	movff	tablat,___lwdiv@divisor
  6807  005874  000A               	tblrd		*-
  6808  005876  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  6809  00587A  ECE0  F051         	call	___lwdiv	;wreg free
  6810  00587E  0101               	movlb	1	; () banked
  6811  005880  5100               	movf	?___lwdiv& (0+255),w,b
  6812  005882  0B0F               	andlw	15
  6813  005884  0101               	movlb	1	; () banked
  6814  005886  6F1C               	movwf	sprintf@idx& (0+255),b
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  6818  005888  0101               	movlb	1	; () banked
  6819  00588A  511C               	movf	sprintf@idx& (0+255),w,b
  6820  00588C  0D01               	mullw	1
  6821  00588E  0E95               	movlw	low STR_16
  6822  005890  24F3               	addwf	prodl,w,c
  6823  005892  6EF6               	movwf	tblptrl,c
  6824  005894  0E23               	movlw	high STR_16
  6825  005896  20F4               	addwfc	prodh,w,c
  6826  005898  6EF7               	movwf	tblptrh,c
  6827  00589A                     	if	1	;There are 3 active tblptr bytes
  6828  00589A  6AF8               	clrf	tblptru,c
  6829  00589C  0E00               	movlw	low (__mediumconst shr (0+16))
  6830  00589E  22F8               	addwfc	tblptru,f,c
  6831  0058A0                     	endif
  6832  0058A0  0008               	tblrd		*
  6833  0058A2  CFF5 F129          	movff	tablat,sprintf@c
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;doprnt.c: 1523: }
  6837                           
  6838                           ;doprnt.c: 1508: }
  6839                           ;doprnt.c: 1510: break;
  6840  0058A6  D009               	goto	l19412
  6841  0058A8                     l19410:
  6842                           
  6843                           ; BSR set to: 1
  6844  0058A8  0101               	movlb	1	; () banked
  6845  0058AA  5126               	movf	sprintf@flag& (0+255),w,b
  6846  0058AC  0B80               	andlw	128
  6847                           
  6848                           ; Switch size 1, requested type "space"
  6849                           ; Number of cases is 2, Range of values is 0 to 128
  6850                           ; switch strategies available:
  6851                           ; Name         Instructions Cycles
  6852                           ; simple_byte            7     4 (average)
  6853                           ;	Chosen strategy is simple_byte
  6854  0058AE  0A00               	xorlw	0	; case 0
  6855  0058B0  B4D8               	btfsc	status,2,c
  6856  0058B2  D7A4               	goto	l19402
  6857  0058B4  0A80               	xorlw	128	; case 128
  6858  0058B6  B4D8               	btfsc	status,2,c
  6859  0058B8  D7CA               	goto	l19404
  6860  0058BA                     l19412:
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6864  0058BA  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6865  0058BE  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6866  0058C2  C129  FFDF         	movff	sprintf@c,indf2
  6867                           
  6868                           ; BSR set to: 1
  6869  0058C6  0101               	movlb	1	; () banked
  6870  0058C8  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6871  0058CA  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6872  0058CC                     l19416:
  6873                           
  6874                           ; BSR set to: 1
  6875  0058CC  0101               	movlb	1	; () banked
  6876  0058CE  071D               	decf	sprintf@prec& (0+255),f,b
  6877  0058D0  0101               	movlb	1	; () banked
  6878  0058D2  291D               	incf	sprintf@prec& (0+255),w,b
  6879  0058D4  A4D8               	btfss	status,2,c
  6880  0058D6  D7E8               	goto	l19410
  6881  0058D8                     l19418:
  6882                           
  6883                           ; BSR set to: 1
  6884  0058D8  C10E  FFF6         	movff	sprintf@f,tblptrl
  6885  0058DC  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6886  0058E0  0101               	movlb	1	; () banked
  6887  0058E2  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6888  0058E4  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6889  0058E6                     	if	0	;tblptru may be non-zero
  6890  0058E6                     	endif
  6891  0058E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6892  0058E6  0E00               	movlw	low (__mediumconst shr (0+16))
  6893  0058E8  6EF8               	movwf	tblptru,c
  6894  0058EA                     	endif
  6895  0058EA  0008               	tblrd		*
  6896  0058EC  CFF5 F129          	movff	tablat,sprintf@c
  6897  0058F0  0101               	movlb	1	; () banked
  6898  0058F2  5129               	movf	sprintf@c& (0+255),w,b
  6899  0058F4  A4D8               	btfss	status,2,c
  6900  0058F6  D568               	goto	l19246
  6901  0058F8                     l19420:
  6902                           
  6903                           ;doprnt.c: 1538: *sp = 0;
  6904  0058F8  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6905  0058FC  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6906  005900  0E00               	movlw	0
  6907  005902  6EDF               	movwf	indf2,c
  6908  005904  0012               	return	
  6909  005906                     __end_of_sprintf:
  6910                           	opt stack 0
  6911                           tblptru	equ	0xFF8
  6912                           tblptrh	equ	0xFF7
  6913                           tblptrl	equ	0xFF6
  6914                           tablat	equ	0xFF5
  6915                           prodh	equ	0xFF4
  6916                           prodl	equ	0xFF3
  6917                           postinc0	equ	0xFEE
  6918                           plusw0	equ	0xFEB
  6919                           wreg	equ	0xFE8
  6920                           postdec1	equ	0xFE5
  6921                           fsr1h	equ	0xFE2
  6922                           fsr1l	equ	0xFE1
  6923                           indf2	equ	0xFDF
  6924                           postinc2	equ	0xFDE
  6925                           postdec2	equ	0xFDD
  6926                           plusw2	equ	0xFDB
  6927                           fsr2h	equ	0xFDA
  6928                           fsr2l	equ	0xFD9
  6929                           status	equ	0xFD8
  6930                           
  6931 ;; *************** function _isdigit *****************
  6932 ;; Defined at:
  6933 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isdigit.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  c               1    wreg     unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  c               1    2[BANK1 ] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;		None               void
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;Total ram usage:        3 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:   16
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_sprintf
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text8
  6962  00AE42                     __ptext8:
  6963                           	opt stack 0
  6964  00AE42                     _isdigit:
  6965                           	opt stack 13
  6966                           
  6967                           ;incstack = 0
  6968                           ;isdigit@c stored from wreg
  6969  00AE42  0101               	movlb	1	; () banked
  6970  00AE44  6F02               	movwf	isdigit@c& (0+255),b
  6971  00AE46  0E00               	movlw	0
  6972  00AE48  0101               	movlb	1	; () banked
  6973  00AE4A  6F01               	movwf	_isdigit$5487& (0+255),b
  6974                           
  6975                           ; BSR set to: 1
  6976  00AE4C  0E3A               	movlw	58
  6977  00AE4E  0101               	movlb	1	; () banked
  6978  00AE50  6102               	cpfslt	isdigit@c& (0+255),b
  6979  00AE52  D007               	goto	l18050
  6980                           
  6981                           ; BSR set to: 1
  6982  00AE54  0E2F               	movlw	47
  6983  00AE56  0101               	movlb	1	; () banked
  6984  00AE58  6502               	cpfsgt	isdigit@c& (0+255),b
  6985  00AE5A  D003               	goto	l18050
  6986                           
  6987                           ; BSR set to: 1
  6988  00AE5C  0E01               	movlw	1
  6989  00AE5E  0101               	movlb	1	; () banked
  6990  00AE60  6F01               	movwf	_isdigit$5487& (0+255),b
  6991  00AE62                     l18050:
  6992                           
  6993                           ; BSR set to: 1
  6994  00AE62  C101  F100         	movff	_isdigit$5487,??_isdigit
  6995  00AE66  0101               	movlb	1	; () banked
  6996  00AE68  3100               	rrcf	??_isdigit& (0+255),w,b
  6997  00AE6A  0012               	return	
  6998  00AE6C                     __end_of_isdigit:
  6999                           	opt stack 0
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           postinc0	equ	0xFEE
  7007                           plusw0	equ	0xFEB
  7008                           wreg	equ	0xFE8
  7009                           postdec1	equ	0xFE5
  7010                           fsr1h	equ	0xFE2
  7011                           fsr1l	equ	0xFE1
  7012                           indf2	equ	0xFDF
  7013                           postinc2	equ	0xFDE
  7014                           postdec2	equ	0xFDD
  7015                           plusw2	equ	0xFDB
  7016                           fsr2h	equ	0xFDA
  7017                           fsr2l	equ	0xFD9
  7018                           status	equ	0xFD8
  7019                           
  7020 ;; *************** function ___wmul *****************
  7021 ;; Defined at:
  7022 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul16.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7025 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  product         2    4[BANK1 ] unsigned int 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  2    0[BANK1 ] unsigned int 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2, status,0, prodl, prodh
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7037 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;Total ram usage:        6 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:   16
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_sprintf
  7048 ;;		_getReceiverBW
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text9
  7053  00AD1A                     __ptext9:
  7054                           	opt stack 0
  7055  00AD1A                     ___wmul:
  7056                           	opt stack 13
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;incstack = 0
  7060  00AD1A  0101               	movlb	1	; () banked
  7061  00AD1C  5100               	movf	___wmul@multiplier& (0+255),w,b
  7062  00AD1E  0101               	movlb	1	; () banked
  7063  00AD20  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7064  00AD22  CFF3 F104          	movff	prodl,___wmul@product
  7065  00AD26  CFF4 F105          	movff	prodh,___wmul@product+1
  7066  00AD2A  0101               	movlb	1	; () banked
  7067  00AD2C  5100               	movf	___wmul@multiplier& (0+255),w,b
  7068  00AD2E  0101               	movlb	1	; () banked
  7069  00AD30  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7070  00AD32  50F3               	movf	prodl,w,c
  7071  00AD34  0101               	movlb	1	; () banked
  7072  00AD36  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7073  00AD38  0101               	movlb	1	; () banked
  7074  00AD3A  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7075  00AD3C  0101               	movlb	1	; () banked
  7076  00AD3E  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7077  00AD40  50F3               	movf	prodl,w,c
  7078  00AD42  0101               	movlb	1	; () banked
  7079  00AD44  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7080                           
  7081                           ; BSR set to: 1
  7082  00AD46  C104  F100         	movff	___wmul@product,?___wmul
  7083  00AD4A  C105  F101         	movff	___wmul@product+1,?___wmul+1
  7084  00AD4E  0012               	return	
  7085  00AD50                     __end_of___wmul:
  7086                           	opt stack 0
  7087                           tblptru	equ	0xFF8
  7088                           tblptrh	equ	0xFF7
  7089                           tblptrl	equ	0xFF6
  7090                           tablat	equ	0xFF5
  7091                           prodh	equ	0xFF4
  7092                           prodl	equ	0xFF3
  7093                           postinc0	equ	0xFEE
  7094                           plusw0	equ	0xFEB
  7095                           wreg	equ	0xFE8
  7096                           postdec1	equ	0xFE5
  7097                           fsr1h	equ	0xFE2
  7098                           fsr1l	equ	0xFE1
  7099                           indf2	equ	0xFDF
  7100                           postinc2	equ	0xFDE
  7101                           postdec2	equ	0xFDD
  7102                           plusw2	equ	0xFDB
  7103                           fsr2h	equ	0xFDA
  7104                           fsr2l	equ	0xFD9
  7105                           status	equ	0xFD8
  7106                           
  7107 ;; *************** function ___lwmod *****************
  7108 ;; Defined at:
  7109 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lwmod.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  dividend        2    7[BANK1 ] unsigned int 
  7112 ;;  divisor         2    9[BANK1 ] unsigned int 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  counter         1   11[BANK1 ] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  2    7[BANK1 ] unsigned int 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7124 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;Total ram usage:        5 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:   16
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_sprintf
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text10
  7139  00A6DA                     __ptext10:
  7140                           	opt stack 0
  7141  00A6DA                     ___lwmod:
  7142                           	opt stack 13
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;incstack = 0
  7146  00A6DA  0101               	movlb	1	; () banked
  7147  00A6DC  5109               	movf	___lwmod@divisor& (0+255),w,b
  7148  00A6DE  0101               	movlb	1	; () banked
  7149  00A6E0  110A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7150  00A6E2  B4D8               	btfsc	status,2,c
  7151  00A6E4  D026               	goto	l2593
  7152                           
  7153                           ; BSR set to: 1
  7154  00A6E6  0E01               	movlw	1
  7155  00A6E8  0101               	movlb	1	; () banked
  7156  00A6EA  6F0B               	movwf	___lwmod@counter& (0+255),b
  7157  00A6EC  D006               	goto	l18088
  7158  00A6EE                     l18086:
  7159                           
  7160                           ; BSR set to: 1
  7161  00A6EE  0101               	movlb	1	; () banked
  7162  00A6F0  90D8               	bcf	status,0,c
  7163  00A6F2  3709               	rlcf	___lwmod@divisor& (0+255),f,b
  7164  00A6F4  370A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7165  00A6F6  0101               	movlb	1	; () banked
  7166  00A6F8  2B0B               	incf	___lwmod@counter& (0+255),f,b
  7167  00A6FA                     l18088:
  7168                           
  7169                           ; BSR set to: 1
  7170  00A6FA  0101               	movlb	1	; () banked
  7171  00A6FC  AF0A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7172  00A6FE  D7F7               	goto	l18086
  7173  00A700                     l18090:
  7174                           
  7175                           ; BSR set to: 1
  7176  00A700  0101               	movlb	1	; () banked
  7177  00A702  5109               	movf	___lwmod@divisor& (0+255),w,b
  7178  00A704  0101               	movlb	1	; () banked
  7179  00A706  5D07               	subwf	___lwmod@dividend& (0+255),w,b
  7180  00A708  0101               	movlb	1	; () banked
  7181  00A70A  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7182  00A70C  0101               	movlb	1	; () banked
  7183  00A70E  5908               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7184  00A710  A0D8               	btfss	status,0,c
  7185  00A712  D008               	goto	l18094
  7186                           
  7187                           ; BSR set to: 1
  7188  00A714  0101               	movlb	1	; () banked
  7189  00A716  5109               	movf	___lwmod@divisor& (0+255),w,b
  7190  00A718  0101               	movlb	1	; () banked
  7191  00A71A  5F07               	subwf	___lwmod@dividend& (0+255),f,b
  7192  00A71C  0101               	movlb	1	; () banked
  7193  00A71E  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7194  00A720  0101               	movlb	1	; () banked
  7195  00A722  5B08               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7196  00A724                     l18094:
  7197                           
  7198                           ; BSR set to: 1
  7199  00A724  0101               	movlb	1	; () banked
  7200  00A726  90D8               	bcf	status,0,c
  7201  00A728  330A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7202  00A72A  3309               	rrcf	___lwmod@divisor& (0+255),f,b
  7203                           
  7204                           ; BSR set to: 1
  7205  00A72C  0101               	movlb	1	; () banked
  7206  00A72E  2F0B               	decfsz	___lwmod@counter& (0+255),f,b
  7207  00A730  D7E7               	goto	l18090
  7208  00A732                     l2593:
  7209                           
  7210                           ; BSR set to: 1
  7211  00A732  C107  F107         	movff	___lwmod@dividend,?___lwmod
  7212  00A736  C108  F108         	movff	___lwmod@dividend+1,?___lwmod+1
  7213                           
  7214                           ; BSR set to: 1
  7215  00A73A  0012               	return		;funcret
  7216  00A73C                     __end_of___lwmod:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           postinc0	equ	0xFEE
  7225                           plusw0	equ	0xFEB
  7226                           wreg	equ	0xFE8
  7227                           postdec1	equ	0xFE5
  7228                           fsr1h	equ	0xFE2
  7229                           fsr1l	equ	0xFE1
  7230                           indf2	equ	0xFDF
  7231                           postinc2	equ	0xFDE
  7232                           postdec2	equ	0xFDD
  7233                           plusw2	equ	0xFDB
  7234                           fsr2h	equ	0xFDA
  7235                           fsr2l	equ	0xFD9
  7236                           status	equ	0xFD8
  7237                           
  7238 ;; *************** function _send_writables_update *****************
  7239 ;; Defined at:
  7240 ;;		line 574 in file "src/main.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  tmp             1    0        unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7256 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7257 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7258 ;;Total ram usage:        1 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:   18
  7261 ;; This function calls:
  7262 ;;		_encode_uint8_variable
  7263 ;;		_memcpy
  7264 ;;		_sendHIDBinary
  7265 ;; This function is called by:
  7266 ;;		_main
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text11
  7271  00776E                     __ptext11:
  7272                           	opt stack 0
  7273  00776E                     _send_writables_update:
  7274                           	opt stack 12
  7275                           
  7276                           ;main.c: 576: p_buffer = m_buffer;
  7277                           
  7278                           ; BSR set to: 1
  7279                           ;incstack = 0
  7280  00776E  0ED1               	movlw	low _m_buffer
  7281  007770  0101               	movlb	1	; () banked
  7282  007772  6FBA               	movwf	_p_buffer& (0+255),b
  7283  007774  0E02               	movlw	high _m_buffer
  7284  007776  0101               	movlb	1	; () banked
  7285  007778  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;main.c: 577: *(p_buffer++) = 0x4d;
  7289  00777A  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7290  00777E  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7291  007782  0E4D               	movlw	77
  7292  007784  6EDF               	movwf	indf2,c
  7293                           
  7294                           ; BSR set to: 1
  7295  007786  0101               	movlb	1	; () banked
  7296  007788  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7297  00778A  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;main.c: 578: *(p_buffer++) = 0x00;
  7301  00778C  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7302  007790  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7303  007794  0E00               	movlw	0
  7304  007796  6EDF               	movwf	indf2,c
  7305                           
  7306                           ; BSR set to: 1
  7307  007798  0101               	movlb	1	; () banked
  7308  00779A  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7309  00779C  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7310                           
  7311                           ; BSR set to: 1
  7312                           ;main.c: 579: *(p_buffer++) = 0x00;
  7313  00779E  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7314  0077A2  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7315  0077A6  0E00               	movlw	0
  7316  0077A8  6EDF               	movwf	indf2,c
  7317                           
  7318                           ; BSR set to: 1
  7319  0077AA  0101               	movlb	1	; () banked
  7320  0077AC  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7321  0077AE  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7322                           
  7323                           ; BSR set to: 1
  7324                           ;main.c: 580: *(p_buffer++) = 04;
  7325  0077B0  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7326  0077B4  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7327  0077B8  0E04               	movlw	4
  7328  0077BA  6EDF               	movwf	indf2,c
  7329                           
  7330                           ; BSR set to: 1
  7331  0077BC  0101               	movlb	1	; () banked
  7332  0077BE  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7333  0077C0  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;main.c: 581: *(p_buffer++) = 0xff;
  7337  0077C2  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7338  0077C6  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7339  0077CA  0EFF               	movlw	255
  7340  0077CC  6EDF               	movwf	indf2,c
  7341                           
  7342                           ; BSR set to: 1
  7343  0077CE  0101               	movlb	1	; () banked
  7344  0077D0  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7345  0077D2  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;main.c: 584: memcpy(m_var.label, POWER_LABEL, 3);
  7349  0077D4  0EDF               	movlw	low _m_var
  7350  0077D6  0101               	movlb	1	; () banked
  7351  0077D8  6F00               	movwf	memcpy@d1& (0+255),b
  7352  0077DA  0E01               	movlw	high _m_var
  7353  0077DC  0101               	movlb	1	; () banked
  7354  0077DE  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  7355  0077E0  0EC3               	movlw	low _POWER_LABEL
  7356  0077E2  0101               	movlb	1	; () banked
  7357  0077E4  6F02               	movwf	memcpy@s1& (0+255),b
  7358  0077E6  0E21               	movlw	high _POWER_LABEL
  7359  0077E8  0101               	movlb	1	; () banked
  7360  0077EA  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  7361  0077EC  0E00               	movlw	0
  7362  0077EE  0101               	movlb	1	; () banked
  7363  0077F0  6F05               	movwf	(memcpy@n+1)& (0+255),b
  7364  0077F2  0E03               	movlw	3
  7365  0077F4  6F04               	movwf	memcpy@n& (0+255),b
  7366  0077F6  EC9E  F053         	call	_memcpy	;wreg free
  7367                           
  7368                           ;main.c: 585: m_var.unit = 0;
  7369  0077FA  0E00               	movlw	0
  7370  0077FC  0101               	movlb	1	; () banked
  7371  0077FE  6FE5               	movwf	(_m_var+6)& (0+255),b
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;main.c: 586: m_var.value_byte1 = m_power;
  7375  007800  C1C9  F1E3         	movff	_m_power,_m_var+4
  7376                           
  7377                           ; BSR set to: 1
  7378                           ;main.c: 587: m_var.writable = 1;
  7379  007804  0E01               	movlw	1
  7380  007806  0101               	movlb	1	; () banked
  7381  007808  6FE6               	movwf	(_m_var+7)& (0+255),b
  7382                           
  7383                           ; BSR set to: 1
  7384                           ;main.c: 588: p_buffer += encode_uint8_variable(p_buffer, m_var);
  7385  00780A  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  7386  00780E  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  7387  007812  EE21  F0DF         	lfsr	2,_m_var
  7388  007816  EE01  F002         	lfsr	0,encode_uint8_variable@var
  7389  00781A  0E08               	movlw	8
  7390  00781C                     u21491:
  7391  00781C  CFDB FFEB          	movff	plusw2,plusw0
  7392  007820  06E8               	decf	wreg,f,c
  7393  007822  E2FC               	bc	u21491
  7394  007824  EC19  F051         	call	_encode_uint8_variable	;wreg free
  7395  007828  0101               	movlb	1	; () banked
  7396  00782A  6F10               	movwf	??_send_writables_update& (0+255),b
  7397  00782C  0101               	movlb	1	; () banked
  7398  00782E  5110               	movf	??_send_writables_update& (0+255),w,b
  7399  007830  0D01               	mullw	1
  7400  007832  50F3               	movf	prodl,w,c
  7401  007834  0101               	movlb	1	; () banked
  7402  007836  27BA               	addwf	_p_buffer& (0+255),f,b
  7403  007838  50F4               	movf	prodh,w,c
  7404  00783A  0101               	movlb	1	; () banked
  7405  00783C  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  7406                           
  7407                           ; BSR set to: 1
  7408                           ;main.c: 590: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  7409  00783E  0EDF               	movlw	low _m_var
  7410  007840  0101               	movlb	1	; () banked
  7411  007842  6F00               	movwf	memcpy@d1& (0+255),b
  7412  007844  0E01               	movlw	high _m_var
  7413  007846  0101               	movlb	1	; () banked
  7414  007848  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  7415  00784A  0ECB               	movlw	low _UPDATE_FREQUENCY_LABEL
  7416  00784C  0101               	movlb	1	; () banked
  7417  00784E  6F02               	movwf	memcpy@s1& (0+255),b
  7418  007850  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  7419  007852  0101               	movlb	1	; () banked
  7420  007854  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  7421  007856  0E00               	movlw	0
  7422  007858  0101               	movlb	1	; () banked
  7423  00785A  6F05               	movwf	(memcpy@n+1)& (0+255),b
  7424  00785C  0E03               	movlw	3
  7425  00785E  6F04               	movwf	memcpy@n& (0+255),b
  7426  007860  EC9E  F053         	call	_memcpy	;wreg free
  7427                           
  7428                           ;main.c: 591: m_var.unit = 4;
  7429  007864  0E04               	movlw	4
  7430  007866  0101               	movlb	1	; () banked
  7431  007868  6FE5               	movwf	(_m_var+6)& (0+255),b
  7432                           
  7433                           ; BSR set to: 1
  7434                           ;main.c: 592: m_var.value_byte1 = m_update_frequency;
  7435  00786A  C0E4  F1E3         	movff	_m_update_frequency,_m_var+4	;volatile
  7436                           
  7437                           ; BSR set to: 1
  7438                           ;main.c: 593: m_var.writable = 1;
  7439  00786E  0E01               	movlw	1
  7440  007870  0101               	movlb	1	; () banked
  7441  007872  6FE6               	movwf	(_m_var+7)& (0+255),b
  7442                           
  7443                           ; BSR set to: 1
  7444                           ;main.c: 594: p_buffer += encode_uint8_variable(p_buffer, m_var);
  7445  007874  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  7446  007878  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  7447  00787C  EE21  F0DF         	lfsr	2,_m_var
  7448  007880  EE01  F002         	lfsr	0,encode_uint8_variable@var
  7449  007884  0E08               	movlw	8
  7450  007886                     u21501:
  7451  007886  CFDB FFEB          	movff	plusw2,plusw0
  7452  00788A  06E8               	decf	wreg,f,c
  7453  00788C  E2FC               	bc	u21501
  7454  00788E  EC19  F051         	call	_encode_uint8_variable	;wreg free
  7455  007892  0101               	movlb	1	; () banked
  7456  007894  6F10               	movwf	??_send_writables_update& (0+255),b
  7457  007896  0101               	movlb	1	; () banked
  7458  007898  5110               	movf	??_send_writables_update& (0+255),w,b
  7459  00789A  0D01               	mullw	1
  7460  00789C  50F3               	movf	prodl,w,c
  7461  00789E  0101               	movlb	1	; () banked
  7462  0078A0  27BA               	addwf	_p_buffer& (0+255),f,b
  7463  0078A2  50F4               	movf	prodh,w,c
  7464  0078A4  0101               	movlb	1	; () banked
  7465  0078A6  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;main.c: 596: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  7469  0078A8  0ED1               	movlw	low _m_buffer
  7470  0078AA  0101               	movlb	1	; () banked
  7471  0078AC  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  7472  0078AE  0E02               	movlw	high _m_buffer
  7473  0078B0  0101               	movlb	1	; () banked
  7474  0078B2  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  7475  0078B4  0ED1               	movlw	_m_buffer& (0+255)
  7476  0078B6  0800               	sublw	0
  7477  0078B8  0101               	movlb	1	; () banked
  7478  0078BA  25BA               	addwf	_p_buffer& (0+255),w,b
  7479  0078BC  0101               	movlb	1	; () banked
  7480  0078BE  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  7481  0078C0  EC59  F04F         	call	_sendHIDBinary	;wreg free
  7482                           
  7483                           ;main.c: 597: _delay((unsigned long)((20)*(16000000/4000.0)));
  7484  0078C4  0E68               	movlw	104
  7485  0078C6  0101               	movlb	1	; () banked
  7486  0078C8  6F10               	movwf	??_send_writables_update& (0+255),b
  7487  0078CA  0EE4               	movlw	228
  7488  0078CC                     u22847:
  7489  0078CC  2EE8               	decfsz	wreg,f,c
  7490  0078CE  D7FE               	goto	u22847
  7491  0078D0  2F10               	decfsz	??_send_writables_update& (0+255),f,b
  7492  0078D2  D7FC               	goto	u22847
  7493  0078D4  D000               	nop2	
  7494  0078D6  0012               	return		;funcret
  7495  0078D8                     __end_of_send_writables_update:
  7496                           	opt stack 0
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           postinc0	equ	0xFEE
  7504                           plusw0	equ	0xFEB
  7505                           wreg	equ	0xFE8
  7506                           postdec1	equ	0xFE5
  7507                           fsr1h	equ	0xFE2
  7508                           fsr1l	equ	0xFE1
  7509                           indf2	equ	0xFDF
  7510                           postinc2	equ	0xFDE
  7511                           postdec2	equ	0xFDD
  7512                           plusw2	equ	0xFDB
  7513                           fsr2h	equ	0xFDA
  7514                           fsr2l	equ	0xFD9
  7515                           status	equ	0xFD8
  7516                           
  7517 ;; *************** function _send_periodic_update *****************
  7518 ;; Defined at:
  7519 ;;		line 602 in file "src/main.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  tmp             1   17[BANK1 ] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;		None               void
  7526 ;; Registers used:
  7527 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;Total ram usage:        2 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:   18
  7540 ;; This function calls:
  7541 ;;		___awdiv
  7542 ;;		___lldiv
  7543 ;;		_encode_uint16_variable
  7544 ;;		_encode_uint8_variable
  7545 ;;		_memcpy
  7546 ;;		_sendHIDBinary
  7547 ;; This function is called by:
  7548 ;;		_main
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text12
  7553  006704                     __ptext12:
  7554                           	opt stack 0
  7555  006704                     _send_periodic_update:
  7556                           	opt stack 12
  7557                           
  7558                           ;main.c: 604: p_buffer = m_buffer;
  7559                           
  7560                           ;incstack = 0
  7561  006704  0ED1               	movlw	low _m_buffer
  7562  006706  0101               	movlb	1	; () banked
  7563  006708  6FBA               	movwf	_p_buffer& (0+255),b
  7564  00670A  0E02               	movlw	high _m_buffer
  7565  00670C  0101               	movlb	1	; () banked
  7566  00670E  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  7567                           
  7568                           ; BSR set to: 1
  7569                           ;main.c: 605: *(p_buffer++) = 0x4d;
  7570  006710  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7571  006714  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7572  006718  0E4D               	movlw	77
  7573  00671A  6EDF               	movwf	indf2,c
  7574                           
  7575                           ; BSR set to: 1
  7576  00671C  0101               	movlb	1	; () banked
  7577  00671E  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7578  006720  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7579                           
  7580                           ; BSR set to: 1
  7581                           ;main.c: 606: *(p_buffer++) = 0x00;
  7582  006722  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7583  006726  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7584  00672A  0E00               	movlw	0
  7585  00672C  6EDF               	movwf	indf2,c
  7586                           
  7587                           ; BSR set to: 1
  7588  00672E  0101               	movlb	1	; () banked
  7589  006730  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7590  006732  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 1
  7593                           ;main.c: 607: *(p_buffer++) = 0x00;
  7594  006734  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7595  006738  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7596  00673C  0E00               	movlw	0
  7597  00673E  6EDF               	movwf	indf2,c
  7598                           
  7599                           ; BSR set to: 1
  7600  006740  0101               	movlb	1	; () banked
  7601  006742  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7602  006744  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7603                           
  7604                           ; BSR set to: 1
  7605                           ;main.c: 608: *(p_buffer++) = 04;
  7606  006746  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7607  00674A  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7608  00674E  0E04               	movlw	4
  7609  006750  6EDF               	movwf	indf2,c
  7610                           
  7611                           ; BSR set to: 1
  7612  006752  0101               	movlb	1	; () banked
  7613  006754  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7614  006756  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7615                           
  7616                           ; BSR set to: 1
  7617                           ;main.c: 609: *(p_buffer++) = 0xff;
  7618  006758  C1BA  FFD9         	movff	_p_buffer,fsr2l
  7619  00675C  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  7620  006760  0EFF               	movlw	255
  7621  006762  6EDF               	movwf	indf2,c
  7622                           
  7623                           ; BSR set to: 1
  7624  006764  0101               	movlb	1	; () banked
  7625  006766  4BBA               	infsnz	_p_buffer& (0+255),f,b
  7626  006768  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  7627                           
  7628                           ; BSR set to: 1
  7629                           ;main.c: 612: memcpy(m_var.label, UPTIME_LABEL, 3);
  7630  00676A  0EDF               	movlw	low _m_var
  7631  00676C  0101               	movlb	1	; () banked
  7632  00676E  6F00               	movwf	memcpy@d1& (0+255),b
  7633  006770  0E01               	movlw	high _m_var
  7634  006772  0101               	movlb	1	; () banked
  7635  006774  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  7636  006776  0ECF               	movlw	low _UPTIME_LABEL
  7637  006778  0101               	movlb	1	; () banked
  7638  00677A  6F02               	movwf	memcpy@s1& (0+255),b
  7639  00677C  0E21               	movlw	high _UPTIME_LABEL
  7640  00677E  0101               	movlb	1	; () banked
  7641  006780  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  7642  006782  0E00               	movlw	0
  7643  006784  0101               	movlb	1	; () banked
  7644  006786  6F05               	movwf	(memcpy@n+1)& (0+255),b
  7645  006788  0E03               	movlw	3
  7646  00678A  6F04               	movwf	memcpy@n& (0+255),b
  7647  00678C  EC9E  F053         	call	_memcpy	;wreg free
  7648                           
  7649                           ;main.c: 613: if (m_uptime_seconds < 60)
  7650  006790  0100               	movlb	0	; () banked
  7651  006792  51CD               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  7652  006794  0100               	movlb	0	; () banked
  7653  006796  11CC               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  7654  006798  0100               	movlb	0	; () banked
  7655  00679A  11CB               	iorwf	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  7656  00679C  E11D               	bnz	l19774
  7657  00679E  0E3C               	movlw	60
  7658  0067A0  0100               	movlb	0	; () banked
  7659  0067A2  5DCA               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  7660  0067A4  B0D8               	btfsc	status,0,c
  7661  0067A6  D018               	goto	l19774
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;main.c: 614: {
  7665                           ;main.c: 615: m_var.unit = 5;
  7666  0067A8  0E05               	movlw	5
  7667  0067AA  0101               	movlb	1	; () banked
  7668  0067AC  6FE5               	movwf	(_m_var+6)& (0+255),b
  7669                           
  7670                           ; BSR set to: 1
  7671                           ;main.c: 616: m_var.value_byte1 = m_uptime_seconds;
  7672  0067AE  C0CA  F1E3         	movff	_m_uptime_seconds,_m_var+4	;volatile
  7673                           
  7674                           ;main.c: 617: m_var.writable = 0;
  7675  0067B2  0E00               	movlw	0
  7676  0067B4  0101               	movlb	1	; () banked
  7677  0067B6  6FE6               	movwf	(_m_var+7)& (0+255),b
  7678                           
  7679                           ; BSR set to: 1
  7680                           ;main.c: 618: p_buffer += encode_uint8_variable(p_buffer, m_var);
  7681  0067B8  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  7682  0067BC  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  7683  0067C0  EE21  F0DF         	lfsr	2,_m_var
  7684  0067C4  EE01  F002         	lfsr	0,encode_uint8_variable@var
  7685  0067C8  0E08               	movlw	8
  7686  0067CA                     u21521:
  7687  0067CA  CFDB FFEB          	movff	plusw2,plusw0
  7688  0067CE  06E8               	decf	wreg,f,c
  7689  0067D0  E2FC               	bc	u21521
  7690  0067D2  EC19  F051         	call	_encode_uint8_variable	;wreg free
  7691  0067D6  D0C3               	goto	L3
  7692  0067D8                     l19774:
  7693                           
  7694                           ;main.c: 620: else if (m_uptime_seconds < 3600)
  7695  0067D8  0100               	movlb	0	; () banked
  7696  0067DA  51CD               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  7697  0067DC  0100               	movlb	0	; () banked
  7698  0067DE  11CC               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  7699  0067E0  E135               	bnz	l19784
  7700  0067E2  0E10               	movlw	16
  7701  0067E4  0100               	movlb	0	; () banked
  7702  0067E6  5DCA               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  7703  0067E8  0E0E               	movlw	14
  7704  0067EA  0100               	movlb	0	; () banked
  7705  0067EC  59CB               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  7706  0067EE  B0D8               	btfsc	status,0,c
  7707  0067F0  D02D               	goto	l19784
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;main.c: 621: {
  7711                           ;main.c: 622: m_var.unit = 4;
  7712  0067F2  0E04               	movlw	4
  7713  0067F4  0101               	movlb	1	; () banked
  7714  0067F6  6FE5               	movwf	(_m_var+6)& (0+255),b
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;main.c: 623: m_var.value_byte1 = m_uptime_seconds / 60;
  7718  0067F8  C0CA  F100         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  7719  0067FC  C0CB  F101         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  7720  006800  C0CC  F102         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  7721  006804  C0CD  F103         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  7722  006808  0E3C               	movlw	60
  7723  00680A  0101               	movlb	1	; () banked
  7724  00680C  6F04               	movwf	___lldiv@divisor& (0+255),b
  7725  00680E  0E00               	movlw	0
  7726  006810  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  7727  006812  0E00               	movlw	0
  7728  006814  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  7729  006816  0E00               	movlw	0
  7730  006818  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  7731  00681A  ECE0  F04B         	call	___lldiv	;wreg free
  7732  00681E  0101               	movlb	1	; () banked
  7733  006820  5100               	movf	?___lldiv& (0+255),w,b
  7734  006822  0101               	movlb	1	; () banked
  7735  006824  6FE3               	movwf	(_m_var+4)& (0+255),b
  7736                           
  7737                           ; BSR set to: 1
  7738                           ;main.c: 624: m_var.writable = 0;
  7739  006826  0E00               	movlw	0
  7740  006828  0101               	movlb	1	; () banked
  7741  00682A  6FE6               	movwf	(_m_var+7)& (0+255),b
  7742                           
  7743                           ; BSR set to: 1
  7744                           ;main.c: 625: p_buffer += encode_uint8_variable(p_buffer, m_var);
  7745  00682C  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  7746  006830  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  7747  006834  EE21  F0DF         	lfsr	2,_m_var
  7748  006838  EE01  F002         	lfsr	0,encode_uint8_variable@var
  7749  00683C  0E08               	movlw	8
  7750  00683E                     u21541:
  7751  00683E  CFDB FFEB          	movff	plusw2,plusw0
  7752  006842  06E8               	decf	wreg,f,c
  7753  006844  E2FC               	bc	u21541
  7754  006846  EC19  F051         	call	_encode_uint8_variable	;wreg free
  7755  00684A  D089               	goto	L3
  7756  00684C                     l19784:
  7757                           
  7758                           ;main.c: 627: else if (m_uptime_seconds < (86400))
  7759  00684C  0100               	movlb	0	; () banked
  7760  00684E  51CD               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  7761  006850  E149               	bnz	l19796
  7762  006852  0E80               	movlw	128
  7763  006854  0100               	movlb	0	; () banked
  7764  006856  5DCA               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  7765  006858  0E51               	movlw	81
  7766  00685A  0100               	movlb	0	; () banked
  7767  00685C  59CB               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  7768  00685E  0E01               	movlw	1
  7769  006860  0100               	movlb	0	; () banked
  7770  006862  59CC               	subwfb	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  7771  006864  B0D8               	btfsc	status,0,c
  7772  006866  D03E               	goto	l19796
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;main.c: 628: {
  7776                           ;main.c: 629: m_var.unit = 6;
  7777  006868  0E06               	movlw	6
  7778  00686A  0101               	movlb	1	; () banked
  7779  00686C  6FE5               	movwf	(_m_var+6)& (0+255),b
  7780                           
  7781                           ; BSR set to: 1
  7782                           ;main.c: 630: tmp = m_uptime_seconds / 3600;
  7783  00686E  C0CA  F100         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  7784  006872  C0CB  F101         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  7785  006876  C0CC  F102         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  7786  00687A  C0CD  F103         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  7787  00687E  0E10               	movlw	16
  7788  006880  0101               	movlb	1	; () banked
  7789  006882  6F04               	movwf	___lldiv@divisor& (0+255),b
  7790  006884  0E0E               	movlw	14
  7791  006886  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  7792  006888  0E00               	movlw	0
  7793  00688A  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  7794  00688C  0E00               	movlw	0
  7795  00688E  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  7796  006890  ECE0  F04B         	call	___lldiv	;wreg free
  7797  006894  0101               	movlb	1	; () banked
  7798  006896  5100               	movf	?___lldiv& (0+255),w,b
  7799  006898  0101               	movlb	1	; () banked
  7800  00689A  6F11               	movwf	send_periodic_update@tmp& (0+255),b
  7801                           
  7802                           ; BSR set to: 1
  7803                           ;main.c: 631: m_var.value_byte1 = tmp / 256;
  7804  00689C  C111  F106         	movff	send_periodic_update@tmp,___awdiv@dividend
  7805  0068A0  0101               	movlb	1	; () banked
  7806  0068A2  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
  7807  0068A4  0E01               	movlw	1
  7808  0068A6  0101               	movlb	1	; () banked
  7809  0068A8  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
  7810  0068AA  0E00               	movlw	0
  7811  0068AC  6F08               	movwf	___awdiv@divisor& (0+255),b
  7812  0068AE  EC81  F04B         	call	___awdiv	;wreg free
  7813  0068B2  0101               	movlb	1	; () banked
  7814  0068B4  5106               	movf	?___awdiv& (0+255),w,b
  7815  0068B6  0101               	movlb	1	; () banked
  7816  0068B8  6FE3               	movwf	(_m_var+4)& (0+255),b
  7817                           
  7818                           ; BSR set to: 1
  7819                           ;main.c: 632: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  7820  0068BA  C111  F1E4         	movff	send_periodic_update@tmp,_m_var+5
  7821                           
  7822                           ;main.c: 633: m_var.writable = 0;
  7823  0068BE  0E00               	movlw	0
  7824  0068C0  0101               	movlb	1	; () banked
  7825  0068C2  6FE6               	movwf	(_m_var+7)& (0+255),b
  7826                           
  7827                           ; BSR set to: 1
  7828                           ;main.c: 634: p_buffer += encode_uint16_variable(p_buffer, m_var);
  7829  0068C4  C1BA  F100         	movff	_p_buffer,encode_uint16_variable@buffer
  7830  0068C8  C1BB  F101         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  7831  0068CC  EE21  F0DF         	lfsr	2,_m_var
  7832  0068D0  EE01  F002         	lfsr	0,encode_uint16_variable@var
  7833  0068D4  0E08               	movlw	8
  7834  0068D6                     u21561:
  7835  0068D6  CFDB FFEB          	movff	plusw2,plusw0
  7836  0068DA  06E8               	decf	wreg,f,c
  7837  0068DC  E2FC               	bc	u21561
  7838  0068DE  EC0B  F04F         	call	_encode_uint16_variable	;wreg free
  7839  0068E2  D03D               	goto	L3
  7840  0068E4                     l19796:
  7841                           
  7842                           ;main.c: 636: else
  7843                           ;main.c: 637: {
  7844                           ;main.c: 638: m_var.unit = 0;
  7845  0068E4  0E00               	movlw	0
  7846  0068E6  0101               	movlb	1	; () banked
  7847  0068E8  6FE5               	movwf	(_m_var+6)& (0+255),b
  7848                           
  7849                           ; BSR set to: 1
  7850                           ;main.c: 639: tmp = m_uptime_seconds / 86400;
  7851  0068EA  C0CA  F100         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  7852  0068EE  C0CB  F101         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  7853  0068F2  C0CC  F102         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  7854  0068F6  C0CD  F103         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  7855  0068FA  0E80               	movlw	128
  7856  0068FC  0101               	movlb	1	; () banked
  7857  0068FE  6F04               	movwf	___lldiv@divisor& (0+255),b
  7858  006900  0E51               	movlw	81
  7859  006902  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  7860  006904  0E01               	movlw	1
  7861  006906  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  7862  006908  0E00               	movlw	0
  7863  00690A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  7864  00690C  ECE0  F04B         	call	___lldiv	;wreg free
  7865  006910  0101               	movlb	1	; () banked
  7866  006912  5100               	movf	?___lldiv& (0+255),w,b
  7867  006914  0101               	movlb	1	; () banked
  7868  006916  6F11               	movwf	send_periodic_update@tmp& (0+255),b
  7869                           
  7870                           ; BSR set to: 1
  7871                           ;main.c: 640: m_var.value_byte1 = tmp / 256;
  7872  006918  C111  F106         	movff	send_periodic_update@tmp,___awdiv@dividend
  7873  00691C  0101               	movlb	1	; () banked
  7874  00691E  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
  7875  006920  0E01               	movlw	1
  7876  006922  0101               	movlb	1	; () banked
  7877  006924  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
  7878  006926  0E00               	movlw	0
  7879  006928  6F08               	movwf	___awdiv@divisor& (0+255),b
  7880  00692A  EC81  F04B         	call	___awdiv	;wreg free
  7881  00692E  0101               	movlb	1	; () banked
  7882  006930  5106               	movf	?___awdiv& (0+255),w,b
  7883  006932  0101               	movlb	1	; () banked
  7884  006934  6FE3               	movwf	(_m_var+4)& (0+255),b
  7885                           
  7886                           ; BSR set to: 1
  7887                           ;main.c: 641: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  7888  006936  C111  F1E4         	movff	send_periodic_update@tmp,_m_var+5
  7889                           
  7890                           ;main.c: 642: m_var.writable = 0;
  7891  00693A  0E00               	movlw	0
  7892  00693C  0101               	movlb	1	; () banked
  7893  00693E  6FE6               	movwf	(_m_var+7)& (0+255),b
  7894                           
  7895                           ; BSR set to: 1
  7896                           ;main.c: 643: p_buffer += encode_uint16_variable(p_buffer, m_var);
  7897  006940  C1BA  F100         	movff	_p_buffer,encode_uint16_variable@buffer
  7898  006944  C1BB  F101         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  7899  006948  EE21  F0DF         	lfsr	2,_m_var
  7900  00694C  EE01  F002         	lfsr	0,encode_uint16_variable@var
  7901  006950  0E08               	movlw	8
  7902  006952                     u21571:
  7903  006952  CFDB FFEB          	movff	plusw2,plusw0
  7904  006956  06E8               	decf	wreg,f,c
  7905  006958  E2FC               	bc	u21571
  7906  00695A  EC0B  F04F         	call	_encode_uint16_variable	;wreg free
  7907  00695E                     L3:
  7908  00695E  0101               	movlb	1	; () banked
  7909  006960  6F10               	movwf	??_send_periodic_update& (0+255),b
  7910  006962  0101               	movlb	1	; () banked
  7911  006964  5110               	movf	??_send_periodic_update& (0+255),w,b
  7912  006966  0D01               	mullw	1
  7913  006968  50F3               	movf	prodl,w,c
  7914  00696A  0101               	movlb	1	; () banked
  7915  00696C  27BA               	addwf	_p_buffer& (0+255),f,b
  7916  00696E  50F4               	movf	prodh,w,c
  7917  006970  0101               	movlb	1	; () banked
  7918  006972  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;main.c: 644: }
  7922                           ;main.c: 646: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  7923                           
  7924                           ; BSR set to: 1
  7925                           
  7926                           ; BSR set to: 1
  7927                           
  7928                           ; BSR set to: 1
  7929  006974  0ED1               	movlw	low _m_buffer
  7930  006976  0101               	movlb	1	; () banked
  7931  006978  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  7932  00697A  0E02               	movlw	high _m_buffer
  7933  00697C  0101               	movlb	1	; () banked
  7934  00697E  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  7935  006980  0ED1               	movlw	_m_buffer& (0+255)
  7936  006982  0800               	sublw	0
  7937  006984  0101               	movlb	1	; () banked
  7938  006986  25BA               	addwf	_p_buffer& (0+255),w,b
  7939  006988  0101               	movlb	1	; () banked
  7940  00698A  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  7941  00698C  EC59  F04F         	call	_sendHIDBinary	;wreg free
  7942                           
  7943                           ;main.c: 647: _delay((unsigned long)((20)*(16000000/4000.0)));
  7944  006990  0E68               	movlw	104
  7945  006992  0101               	movlb	1	; () banked
  7946  006994  6F10               	movwf	??_send_periodic_update& (0+255),b
  7947  006996  0EE4               	movlw	228
  7948  006998                     u22857:
  7949  006998  2EE8               	decfsz	wreg,f,c
  7950  00699A  D7FE               	goto	u22857
  7951  00699C  2F10               	decfsz	??_send_periodic_update& (0+255),f,b
  7952  00699E  D7FC               	goto	u22857
  7953  0069A0  D000               	nop2	
  7954  0069A2  0012               	return		;funcret
  7955  0069A4                     __end_of_send_periodic_update:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           postinc0	equ	0xFEE
  7964                           plusw0	equ	0xFEB
  7965                           wreg	equ	0xFE8
  7966                           postdec1	equ	0xFE5
  7967                           fsr1h	equ	0xFE2
  7968                           fsr1l	equ	0xFE1
  7969                           indf2	equ	0xFDF
  7970                           postinc2	equ	0xFDE
  7971                           postdec2	equ	0xFDD
  7972                           plusw2	equ	0xFDB
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function _send_network_register *****************
  7978 ;; Defined at:
  7979 ;;		line 468 in file "src/main.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;		None               void
  7986 ;; Registers used:
  7987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;Total ram usage:        0 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:   18
  8000 ;; This function calls:
  8001 ;;		_memcpy
  8002 ;;		_sendHIDBinary
  8003 ;; This function is called by:
  8004 ;;		_main
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text13
  8009  009C1E                     __ptext13:
  8010                           	opt stack 0
  8011  009C1E                     _send_network_register:
  8012                           	opt stack 12
  8013                           
  8014                           ;main.c: 471: p_buffer = &m_buffer[0];
  8015                           
  8016                           ;incstack = 0
  8017  009C1E  0ED1               	movlw	low _m_buffer
  8018  009C20  0101               	movlb	1	; () banked
  8019  009C22  6FBA               	movwf	_p_buffer& (0+255),b
  8020  009C24  0E02               	movlw	high _m_buffer
  8021  009C26  0101               	movlb	1	; () banked
  8022  009C28  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  8023                           
  8024                           ; BSR set to: 1
  8025                           ;main.c: 472: *(p_buffer++) = 0x4d;
  8026  009C2A  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8027  009C2E  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8028  009C32  0E4D               	movlw	77
  8029  009C34  6EDF               	movwf	indf2,c
  8030                           
  8031                           ; BSR set to: 1
  8032  009C36  0101               	movlb	1	; () banked
  8033  009C38  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8034  009C3A  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8035                           
  8036                           ; BSR set to: 1
  8037                           ;main.c: 473: *(p_buffer++) = 0x00;
  8038  009C3C  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8039  009C40  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8040  009C44  0E00               	movlw	0
  8041  009C46  6EDF               	movwf	indf2,c
  8042                           
  8043                           ; BSR set to: 1
  8044  009C48  0101               	movlb	1	; () banked
  8045  009C4A  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8046  009C4C  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8047                           
  8048                           ; BSR set to: 1
  8049                           ;main.c: 474: *(p_buffer++) = 0x00;
  8050  009C4E  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8051  009C52  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8052  009C56  0E00               	movlw	0
  8053  009C58  6EDF               	movwf	indf2,c
  8054                           
  8055                           ; BSR set to: 1
  8056  009C5A  0101               	movlb	1	; () banked
  8057  009C5C  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8058  009C5E  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8059                           
  8060                           ; BSR set to: 1
  8061                           ;main.c: 476: *(p_buffer++) = 02;
  8062  009C60  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8063  009C64  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8064  009C68  0E02               	movlw	2
  8065  009C6A  6EDF               	movwf	indf2,c
  8066                           
  8067                           ; BSR set to: 1
  8068  009C6C  0101               	movlb	1	; () banked
  8069  009C6E  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8070  009C70  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8071                           
  8072                           ; BSR set to: 1
  8073                           ;main.c: 477: memcpy(p_buffer, &myLongAddress[0], 4);
  8074  009C72  C1BA  F100         	movff	_p_buffer,memcpy@d1
  8075  009C76  C1BB  F101         	movff	_p_buffer+1,memcpy@d1+1
  8076  009C7A  0EE8               	movlw	low _myLongAddress
  8077  009C7C  0101               	movlb	1	; () banked
  8078  009C7E  6F02               	movwf	memcpy@s1& (0+255),b
  8079  009C80  0E01               	movlw	high _myLongAddress
  8080  009C82  0101               	movlb	1	; () banked
  8081  009C84  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8082  009C86  0E00               	movlw	0
  8083  009C88  0101               	movlb	1	; () banked
  8084  009C8A  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8085  009C8C  0E04               	movlw	4
  8086  009C8E  6F04               	movwf	memcpy@n& (0+255),b
  8087  009C90  EC9E  F053         	call	_memcpy	;wreg free
  8088                           
  8089                           ;main.c: 478: p_buffer += 4;
  8090  009C94  0E04               	movlw	4
  8091  009C96  0101               	movlb	1	; () banked
  8092  009C98  27BA               	addwf	_p_buffer& (0+255),f,b
  8093  009C9A  0E00               	movlw	0
  8094  009C9C  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 1
  8097                           ;main.c: 482: *(p_buffer++) = 0xf0;
  8098  009C9E  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8099  009CA2  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8100  009CA6  0EF0               	movlw	240
  8101  009CA8  6EDF               	movwf	indf2,c
  8102                           
  8103                           ; BSR set to: 1
  8104  009CAA  0101               	movlb	1	; () banked
  8105  009CAC  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8106  009CAE  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8107                           
  8108                           ; BSR set to: 1
  8109                           ;main.c: 485: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  8110  009CB0  0ED1               	movlw	low _m_buffer
  8111  009CB2  0101               	movlb	1	; () banked
  8112  009CB4  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8113  009CB6  0E02               	movlw	high _m_buffer
  8114  009CB8  0101               	movlb	1	; () banked
  8115  009CBA  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8116  009CBC  0ED1               	movlw	_m_buffer& (0+255)
  8117  009CBE  0800               	sublw	0
  8118  009CC0  0101               	movlb	1	; () banked
  8119  009CC2  25BA               	addwf	_p_buffer& (0+255),w,b
  8120  009CC4  0101               	movlb	1	; () banked
  8121  009CC6  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8122  009CC8  EC59  F04F         	call	_sendHIDBinary	;wreg free
  8123  009CCC  0012               	return		;funcret
  8124  009CCE                     __end_of_send_network_register:
  8125                           	opt stack 0
  8126                           tblptru	equ	0xFF8
  8127                           tblptrh	equ	0xFF7
  8128                           tblptrl	equ	0xFF6
  8129                           tablat	equ	0xFF5
  8130                           prodh	equ	0xFF4
  8131                           prodl	equ	0xFF3
  8132                           postinc0	equ	0xFEE
  8133                           plusw0	equ	0xFEB
  8134                           wreg	equ	0xFE8
  8135                           postdec1	equ	0xFE5
  8136                           fsr1h	equ	0xFE2
  8137                           fsr1l	equ	0xFE1
  8138                           indf2	equ	0xFDF
  8139                           postinc2	equ	0xFDE
  8140                           postdec2	equ	0xFDD
  8141                           plusw2	equ	0xFDB
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8
  8145                           
  8146 ;; *************** function _send_complete_update *****************
  8147 ;; Defined at:
  8148 ;;		line 491 in file "src/main.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  tmp             1   17[BANK1 ] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;		None               void
  8155 ;; Registers used:
  8156 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8163 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8164 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;Total ram usage:        2 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:   18
  8169 ;; This function calls:
  8170 ;;		___awdiv
  8171 ;;		___lldiv
  8172 ;;		_encode_uint16_variable
  8173 ;;		_encode_uint8_variable
  8174 ;;		_memcpy
  8175 ;;		_sendHIDBinary
  8176 ;; This function is called by:
  8177 ;;		_main
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text14
  8182  005906                     __ptext14:
  8183                           	opt stack 0
  8184  005906                     _send_complete_update:
  8185                           	opt stack 12
  8186                           
  8187                           ;main.c: 493: uint8_t tmp;
  8188                           ;main.c: 494: p_buffer = m_buffer;
  8189                           
  8190                           ;incstack = 0
  8191  005906  0ED1               	movlw	low _m_buffer
  8192  005908  0101               	movlb	1	; () banked
  8193  00590A  6FBA               	movwf	_p_buffer& (0+255),b
  8194  00590C  0E02               	movlw	high _m_buffer
  8195  00590E  0101               	movlb	1	; () banked
  8196  005910  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  8197                           
  8198                           ; BSR set to: 1
  8199                           ;main.c: 495: *(p_buffer++) = 0x4d;
  8200  005912  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8201  005916  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8202  00591A  0E4D               	movlw	77
  8203  00591C  6EDF               	movwf	indf2,c
  8204                           
  8205                           ; BSR set to: 1
  8206  00591E  0101               	movlb	1	; () banked
  8207  005920  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8208  005922  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8209                           
  8210                           ; BSR set to: 1
  8211                           ;main.c: 496: *(p_buffer++) = 0x00;
  8212  005924  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8213  005928  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8214  00592C  0E00               	movlw	0
  8215  00592E  6EDF               	movwf	indf2,c
  8216                           
  8217                           ; BSR set to: 1
  8218  005930  0101               	movlb	1	; () banked
  8219  005932  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8220  005934  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;main.c: 497: *(p_buffer++) = 0x00;
  8224  005936  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8225  00593A  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8226  00593E  0E00               	movlw	0
  8227  005940  6EDF               	movwf	indf2,c
  8228                           
  8229                           ; BSR set to: 1
  8230  005942  0101               	movlb	1	; () banked
  8231  005944  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8232  005946  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8233                           
  8234                           ; BSR set to: 1
  8235                           ;main.c: 498: *(p_buffer++) = 04;
  8236  005948  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8237  00594C  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8238  005950  0E04               	movlw	4
  8239  005952  6EDF               	movwf	indf2,c
  8240                           
  8241                           ; BSR set to: 1
  8242  005954  0101               	movlb	1	; () banked
  8243  005956  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8244  005958  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8245                           
  8246                           ; BSR set to: 1
  8247                           ;main.c: 499: *(p_buffer++) = 0xf0;
  8248  00595A  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8249  00595E  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8250  005962  0EF0               	movlw	240
  8251  005964  6EDF               	movwf	indf2,c
  8252                           
  8253                           ; BSR set to: 1
  8254  005966  0101               	movlb	1	; () banked
  8255  005968  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8256  00596A  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8257                           
  8258                           ; BSR set to: 1
  8259                           ;main.c: 501: memcpy(m_var.label, POWER_LABEL, 3);
  8260  00596C  0EDF               	movlw	low _m_var
  8261  00596E  0101               	movlb	1	; () banked
  8262  005970  6F00               	movwf	memcpy@d1& (0+255),b
  8263  005972  0E01               	movlw	high _m_var
  8264  005974  0101               	movlb	1	; () banked
  8265  005976  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8266  005978  0EC3               	movlw	low _POWER_LABEL
  8267  00597A  0101               	movlb	1	; () banked
  8268  00597C  6F02               	movwf	memcpy@s1& (0+255),b
  8269  00597E  0E21               	movlw	high _POWER_LABEL
  8270  005980  0101               	movlb	1	; () banked
  8271  005982  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8272  005984  0E00               	movlw	0
  8273  005986  0101               	movlb	1	; () banked
  8274  005988  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8275  00598A  0E03               	movlw	3
  8276  00598C  6F04               	movwf	memcpy@n& (0+255),b
  8277  00598E  EC9E  F053         	call	_memcpy	;wreg free
  8278                           
  8279                           ;main.c: 502: m_var.unit = 0;
  8280  005992  0E00               	movlw	0
  8281  005994  0101               	movlb	1	; () banked
  8282  005996  6FE5               	movwf	(_m_var+6)& (0+255),b
  8283                           
  8284                           ; BSR set to: 1
  8285                           ;main.c: 503: m_var.value_byte1 = m_power;
  8286  005998  C1C9  F1E3         	movff	_m_power,_m_var+4
  8287                           
  8288                           ; BSR set to: 1
  8289                           ;main.c: 504: m_var.writable = 1;
  8290  00599C  0E01               	movlw	1
  8291  00599E  0101               	movlb	1	; () banked
  8292  0059A0  6FE6               	movwf	(_m_var+7)& (0+255),b
  8293                           
  8294                           ; BSR set to: 1
  8295                           ;main.c: 505: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8296  0059A2  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8297  0059A6  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8298  0059AA  EE21  F0DF         	lfsr	2,_m_var
  8299  0059AE  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8300  0059B2  0E08               	movlw	8
  8301  0059B4                     u21251:
  8302  0059B4  CFDB FFEB          	movff	plusw2,plusw0
  8303  0059B8  06E8               	decf	wreg,f,c
  8304  0059BA  E2FC               	bc	u21251
  8305  0059BC  EC19  F051         	call	_encode_uint8_variable	;wreg free
  8306  0059C0  0101               	movlb	1	; () banked
  8307  0059C2  6F10               	movwf	??_send_complete_update& (0+255),b
  8308  0059C4  0101               	movlb	1	; () banked
  8309  0059C6  5110               	movf	??_send_complete_update& (0+255),w,b
  8310  0059C8  0D01               	mullw	1
  8311  0059CA  50F3               	movf	prodl,w,c
  8312  0059CC  0101               	movlb	1	; () banked
  8313  0059CE  27BA               	addwf	_p_buffer& (0+255),f,b
  8314  0059D0  50F4               	movf	prodh,w,c
  8315  0059D2  0101               	movlb	1	; () banked
  8316  0059D4  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  8317                           
  8318                           ; BSR set to: 1
  8319                           ;main.c: 506: memcpy(m_var.label, CHANNEL_LABEL, 3);
  8320  0059D6  0EDF               	movlw	low _m_var
  8321  0059D8  0101               	movlb	1	; () banked
  8322  0059DA  6F00               	movwf	memcpy@d1& (0+255),b
  8323  0059DC  0E01               	movlw	high _m_var
  8324  0059DE  0101               	movlb	1	; () banked
  8325  0059E0  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8326  0059E2  0EBB               	movlw	low _CHANNEL_LABEL
  8327  0059E4  0101               	movlb	1	; () banked
  8328  0059E6  6F02               	movwf	memcpy@s1& (0+255),b
  8329  0059E8  0E21               	movlw	high _CHANNEL_LABEL
  8330  0059EA  0101               	movlb	1	; () banked
  8331  0059EC  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8332  0059EE  0E00               	movlw	0
  8333  0059F0  0101               	movlb	1	; () banked
  8334  0059F2  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8335  0059F4  0E03               	movlw	3
  8336  0059F6  6F04               	movwf	memcpy@n& (0+255),b
  8337  0059F8  EC9E  F053         	call	_memcpy	;wreg free
  8338                           
  8339                           ;main.c: 507: m_var.unit = 0;
  8340  0059FC  0E00               	movlw	0
  8341  0059FE  0101               	movlb	1	; () banked
  8342  005A00  6FE5               	movwf	(_m_var+6)& (0+255),b
  8343                           
  8344                           ; BSR set to: 1
  8345                           ;main.c: 508: m_var.value_byte1 = BestChannel;
  8346  005A02  C1BF  F1E3         	movff	_BestChannel,_m_var+4
  8347                           
  8348                           ; BSR set to: 1
  8349                           ;main.c: 509: m_var.writable = 0;
  8350  005A06  0E00               	movlw	0
  8351  005A08  0101               	movlb	1	; () banked
  8352  005A0A  6FE6               	movwf	(_m_var+7)& (0+255),b
  8353                           
  8354                           ; BSR set to: 1
  8355                           ;main.c: 510: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8356  005A0C  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8357  005A10  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8358  005A14  EE21  F0DF         	lfsr	2,_m_var
  8359  005A18  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8360  005A1C  0E08               	movlw	8
  8361  005A1E                     u21261:
  8362  005A1E  CFDB FFEB          	movff	plusw2,plusw0
  8363  005A22  06E8               	decf	wreg,f,c
  8364  005A24  E2FC               	bc	u21261
  8365  005A26  EC19  F051         	call	_encode_uint8_variable	;wreg free
  8366  005A2A  0101               	movlb	1	; () banked
  8367  005A2C  6F10               	movwf	??_send_complete_update& (0+255),b
  8368  005A2E  0101               	movlb	1	; () banked
  8369  005A30  5110               	movf	??_send_complete_update& (0+255),w,b
  8370  005A32  0D01               	mullw	1
  8371  005A34  50F3               	movf	prodl,w,c
  8372  005A36  0101               	movlb	1	; () banked
  8373  005A38  27BA               	addwf	_p_buffer& (0+255),f,b
  8374  005A3A  50F4               	movf	prodh,w,c
  8375  005A3C  0101               	movlb	1	; () banked
  8376  005A3E  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  8377                           
  8378                           ; BSR set to: 1
  8379                           ;main.c: 511: memcpy(m_var.label, NOISE_LABEL, 3);
  8380  005A40  0EDF               	movlw	low _m_var
  8381  005A42  0101               	movlb	1	; () banked
  8382  005A44  6F00               	movwf	memcpy@d1& (0+255),b
  8383  005A46  0E01               	movlw	high _m_var
  8384  005A48  0101               	movlb	1	; () banked
  8385  005A4A  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8386  005A4C  0EBF               	movlw	low _NOISE_LABEL
  8387  005A4E  0101               	movlb	1	; () banked
  8388  005A50  6F02               	movwf	memcpy@s1& (0+255),b
  8389  005A52  0E21               	movlw	high _NOISE_LABEL
  8390  005A54  0101               	movlb	1	; () banked
  8391  005A56  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8392  005A58  0E00               	movlw	0
  8393  005A5A  0101               	movlb	1	; () banked
  8394  005A5C  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8395  005A5E  0E03               	movlw	3
  8396  005A60  6F04               	movwf	memcpy@n& (0+255),b
  8397  005A62  EC9E  F053         	call	_memcpy	;wreg free
  8398                           
  8399                           ;main.c: 512: m_var.unit = 0;
  8400  005A66  0E00               	movlw	0
  8401  005A68  0101               	movlb	1	; () banked
  8402  005A6A  6FE5               	movwf	(_m_var+6)& (0+255),b
  8403                           
  8404                           ; BSR set to: 1
  8405                           ;main.c: 513: m_var.value_byte1 = noise_level;
  8406  005A6C  C1F7  F1E3         	movff	_noise_level,_m_var+4
  8407                           
  8408                           ; BSR set to: 1
  8409                           ;main.c: 514: m_var.writable = 0;
  8410  005A70  0E00               	movlw	0
  8411  005A72  0101               	movlb	1	; () banked
  8412  005A74  6FE6               	movwf	(_m_var+7)& (0+255),b
  8413                           
  8414                           ; BSR set to: 1
  8415                           ;main.c: 515: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8416  005A76  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8417  005A7A  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8418  005A7E  EE21  F0DF         	lfsr	2,_m_var
  8419  005A82  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8420  005A86  0E08               	movlw	8
  8421  005A88                     u21271:
  8422  005A88  CFDB FFEB          	movff	plusw2,plusw0
  8423  005A8C  06E8               	decf	wreg,f,c
  8424  005A8E  E2FC               	bc	u21271
  8425  005A90  EC19  F051         	call	_encode_uint8_variable	;wreg free
  8426  005A94  0101               	movlb	1	; () banked
  8427  005A96  6F10               	movwf	??_send_complete_update& (0+255),b
  8428  005A98  0101               	movlb	1	; () banked
  8429  005A9A  5110               	movf	??_send_complete_update& (0+255),w,b
  8430  005A9C  0D01               	mullw	1
  8431  005A9E  50F3               	movf	prodl,w,c
  8432  005AA0  0101               	movlb	1	; () banked
  8433  005AA2  27BA               	addwf	_p_buffer& (0+255),f,b
  8434  005AA4  50F4               	movf	prodh,w,c
  8435  005AA6  0101               	movlb	1	; () banked
  8436  005AA8  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  8437                           
  8438                           ; BSR set to: 1
  8439                           ;main.c: 517: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8440  005AAA  0ED1               	movlw	low _m_buffer
  8441  005AAC  0101               	movlb	1	; () banked
  8442  005AAE  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8443  005AB0  0E02               	movlw	high _m_buffer
  8444  005AB2  0101               	movlb	1	; () banked
  8445  005AB4  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8446  005AB6  0ED1               	movlw	_m_buffer& (0+255)
  8447  005AB8  0800               	sublw	0
  8448  005ABA  0101               	movlb	1	; () banked
  8449  005ABC  25BA               	addwf	_p_buffer& (0+255),w,b
  8450  005ABE  0101               	movlb	1	; () banked
  8451  005AC0  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8452  005AC2  EC59  F04F         	call	_sendHIDBinary	;wreg free
  8453                           
  8454                           ;main.c: 518: _delay((unsigned long)((20)*(16000000/4000.0)));
  8455  005AC6  0E68               	movlw	104
  8456  005AC8  0101               	movlb	1	; () banked
  8457  005ACA  6F10               	movwf	??_send_complete_update& (0+255),b
  8458  005ACC  0EE4               	movlw	228
  8459  005ACE                     u22867:
  8460  005ACE  2EE8               	decfsz	wreg,f,c
  8461  005AD0  D7FE               	goto	u22867
  8462  005AD2  2F10               	decfsz	??_send_complete_update& (0+255),f,b
  8463  005AD4  D7FC               	goto	u22867
  8464  005AD6  D000               	nop2	
  8465                           
  8466                           ;main.c: 520: p_buffer = m_buffer;
  8467  005AD8  0ED1               	movlw	low _m_buffer
  8468  005ADA  0101               	movlb	1	; () banked
  8469  005ADC  6FBA               	movwf	_p_buffer& (0+255),b
  8470  005ADE  0E02               	movlw	high _m_buffer
  8471  005AE0  0101               	movlb	1	; () banked
  8472  005AE2  6FBB               	movwf	(_p_buffer+1)& (0+255),b
  8473                           
  8474                           ; BSR set to: 1
  8475                           ;main.c: 521: *(p_buffer++) = 0x4d;
  8476  005AE4  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8477  005AE8  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8478  005AEC  0E4D               	movlw	77
  8479  005AEE  6EDF               	movwf	indf2,c
  8480                           
  8481                           ; BSR set to: 1
  8482  005AF0  0101               	movlb	1	; () banked
  8483  005AF2  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8484  005AF4  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;main.c: 522: *(p_buffer++) = 0x00;
  8488  005AF6  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8489  005AFA  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8490  005AFE  0E00               	movlw	0
  8491  005B00  6EDF               	movwf	indf2,c
  8492                           
  8493                           ; BSR set to: 1
  8494  005B02  0101               	movlb	1	; () banked
  8495  005B04  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8496  005B06  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8497                           
  8498                           ; BSR set to: 1
  8499                           ;main.c: 523: *(p_buffer++) = 0x00;
  8500  005B08  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8501  005B0C  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8502  005B10  0E00               	movlw	0
  8503  005B12  6EDF               	movwf	indf2,c
  8504                           
  8505                           ; BSR set to: 1
  8506  005B14  0101               	movlb	1	; () banked
  8507  005B16  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8508  005B18  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8509                           
  8510                           ; BSR set to: 1
  8511                           ;main.c: 524: *(p_buffer++) = 04;
  8512  005B1A  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8513  005B1E  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8514  005B22  0E04               	movlw	4
  8515  005B24  6EDF               	movwf	indf2,c
  8516                           
  8517                           ; BSR set to: 1
  8518  005B26  0101               	movlb	1	; () banked
  8519  005B28  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8520  005B2A  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8521                           
  8522                           ; BSR set to: 1
  8523                           ;main.c: 525: *(p_buffer++) = 0xff;
  8524  005B2C  C1BA  FFD9         	movff	_p_buffer,fsr2l
  8525  005B30  C1BB  FFDA         	movff	_p_buffer+1,fsr2h
  8526  005B34  0EFF               	movlw	255
  8527  005B36  6EDF               	movwf	indf2,c
  8528                           
  8529                           ; BSR set to: 1
  8530  005B38  0101               	movlb	1	; () banked
  8531  005B3A  4BBA               	infsnz	_p_buffer& (0+255),f,b
  8532  005B3C  2BBB               	incf	(_p_buffer+1)& (0+255),f,b
  8533                           
  8534                           ; BSR set to: 1
  8535                           ;main.c: 528: memcpy(m_var.label, UPTIME_LABEL, 3);
  8536  005B3E  0EDF               	movlw	low _m_var
  8537  005B40  0101               	movlb	1	; () banked
  8538  005B42  6F00               	movwf	memcpy@d1& (0+255),b
  8539  005B44  0E01               	movlw	high _m_var
  8540  005B46  0101               	movlb	1	; () banked
  8541  005B48  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8542  005B4A  0ECF               	movlw	low _UPTIME_LABEL
  8543  005B4C  0101               	movlb	1	; () banked
  8544  005B4E  6F02               	movwf	memcpy@s1& (0+255),b
  8545  005B50  0E21               	movlw	high _UPTIME_LABEL
  8546  005B52  0101               	movlb	1	; () banked
  8547  005B54  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8548  005B56  0E00               	movlw	0
  8549  005B58  0101               	movlb	1	; () banked
  8550  005B5A  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8551  005B5C  0E03               	movlw	3
  8552  005B5E  6F04               	movwf	memcpy@n& (0+255),b
  8553  005B60  EC9E  F053         	call	_memcpy	;wreg free
  8554                           
  8555                           ;main.c: 529: if (m_uptime_seconds < 60)
  8556  005B64  0100               	movlb	0	; () banked
  8557  005B66  51CD               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  8558  005B68  0100               	movlb	0	; () banked
  8559  005B6A  11CC               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  8560  005B6C  0100               	movlb	0	; () banked
  8561  005B6E  11CB               	iorwf	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  8562  005B70  E11D               	bnz	l19512
  8563  005B72  0E3C               	movlw	60
  8564  005B74  0100               	movlb	0	; () banked
  8565  005B76  5DCA               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  8566  005B78  B0D8               	btfsc	status,0,c
  8567  005B7A  D018               	goto	l19512
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;main.c: 530: {
  8571                           ;main.c: 531: m_var.unit = 5;
  8572  005B7C  0E05               	movlw	5
  8573  005B7E  0101               	movlb	1	; () banked
  8574  005B80  6FE5               	movwf	(_m_var+6)& (0+255),b
  8575                           
  8576                           ; BSR set to: 1
  8577                           ;main.c: 532: m_var.value_byte1 = m_uptime_seconds;
  8578  005B82  C0CA  F1E3         	movff	_m_uptime_seconds,_m_var+4	;volatile
  8579                           
  8580                           ;main.c: 533: m_var.writable = 0;
  8581  005B86  0E00               	movlw	0
  8582  005B88  0101               	movlb	1	; () banked
  8583  005B8A  6FE6               	movwf	(_m_var+7)& (0+255),b
  8584                           
  8585                           ; BSR set to: 1
  8586                           ;main.c: 534: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8587  005B8C  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8588  005B90  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8589  005B94  EE21  F0DF         	lfsr	2,_m_var
  8590  005B98  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8591  005B9C  0E08               	movlw	8
  8592  005B9E                     u21291:
  8593  005B9E  CFDB FFEB          	movff	plusw2,plusw0
  8594  005BA2  06E8               	decf	wreg,f,c
  8595  005BA4  E2FC               	bc	u21291
  8596  005BA6  EC19  F051         	call	_encode_uint8_variable	;wreg free
  8597  005BAA  D0C3               	goto	L6
  8598  005BAC                     l19512:
  8599                           
  8600                           ;main.c: 536: else if (m_uptime_seconds < 3600)
  8601  005BAC  0100               	movlb	0	; () banked
  8602  005BAE  51CD               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  8603  005BB0  0100               	movlb	0	; () banked
  8604  005BB2  11CC               	iorwf	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  8605  005BB4  E135               	bnz	l19522
  8606  005BB6  0E10               	movlw	16
  8607  005BB8  0100               	movlb	0	; () banked
  8608  005BBA  5DCA               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  8609  005BBC  0E0E               	movlw	14
  8610  005BBE  0100               	movlb	0	; () banked
  8611  005BC0  59CB               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  8612  005BC2  B0D8               	btfsc	status,0,c
  8613  005BC4  D02D               	goto	l19522
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;main.c: 537: {
  8617                           ;main.c: 538: m_var.unit = 4;
  8618  005BC6  0E04               	movlw	4
  8619  005BC8  0101               	movlb	1	; () banked
  8620  005BCA  6FE5               	movwf	(_m_var+6)& (0+255),b
  8621                           
  8622                           ; BSR set to: 1
  8623                           ;main.c: 539: m_var.value_byte1 = m_uptime_seconds / 60;
  8624  005BCC  C0CA  F100         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  8625  005BD0  C0CB  F101         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  8626  005BD4  C0CC  F102         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  8627  005BD8  C0CD  F103         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  8628  005BDC  0E3C               	movlw	60
  8629  005BDE  0101               	movlb	1	; () banked
  8630  005BE0  6F04               	movwf	___lldiv@divisor& (0+255),b
  8631  005BE2  0E00               	movlw	0
  8632  005BE4  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  8633  005BE6  0E00               	movlw	0
  8634  005BE8  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  8635  005BEA  0E00               	movlw	0
  8636  005BEC  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  8637  005BEE  ECE0  F04B         	call	___lldiv	;wreg free
  8638  005BF2  0101               	movlb	1	; () banked
  8639  005BF4  5100               	movf	?___lldiv& (0+255),w,b
  8640  005BF6  0101               	movlb	1	; () banked
  8641  005BF8  6FE3               	movwf	(_m_var+4)& (0+255),b
  8642                           
  8643                           ; BSR set to: 1
  8644                           ;main.c: 540: m_var.writable = 0;
  8645  005BFA  0E00               	movlw	0
  8646  005BFC  0101               	movlb	1	; () banked
  8647  005BFE  6FE6               	movwf	(_m_var+7)& (0+255),b
  8648                           
  8649                           ; BSR set to: 1
  8650                           ;main.c: 541: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8651  005C00  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8652  005C04  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8653  005C08  EE21  F0DF         	lfsr	2,_m_var
  8654  005C0C  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8655  005C10  0E08               	movlw	8
  8656  005C12                     u21311:
  8657  005C12  CFDB FFEB          	movff	plusw2,plusw0
  8658  005C16  06E8               	decf	wreg,f,c
  8659  005C18  E2FC               	bc	u21311
  8660  005C1A  EC19  F051         	call	_encode_uint8_variable	;wreg free
  8661  005C1E  D089               	goto	L6
  8662  005C20                     l19522:
  8663                           
  8664                           ;main.c: 543: else if (m_uptime_seconds < (86400))
  8665  005C20  0100               	movlb	0	; () banked
  8666  005C22  51CD               	movf	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
  8667  005C24  E149               	bnz	l19534
  8668  005C26  0E80               	movlw	128
  8669  005C28  0100               	movlb	0	; () banked
  8670  005C2A  5DCA               	subwf	_m_uptime_seconds& (0+255),w,b	;volatile
  8671  005C2C  0E51               	movlw	81
  8672  005C2E  0100               	movlb	0	; () banked
  8673  005C30  59CB               	subwfb	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
  8674  005C32  0E01               	movlw	1
  8675  005C34  0100               	movlb	0	; () banked
  8676  005C36  59CC               	subwfb	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
  8677  005C38  B0D8               	btfsc	status,0,c
  8678  005C3A  D03E               	goto	l19534
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;main.c: 544: {
  8682                           ;main.c: 545: m_var.unit = 6;
  8683  005C3C  0E06               	movlw	6
  8684  005C3E  0101               	movlb	1	; () banked
  8685  005C40  6FE5               	movwf	(_m_var+6)& (0+255),b
  8686                           
  8687                           ; BSR set to: 1
  8688                           ;main.c: 546: tmp = m_uptime_seconds / 3600;
  8689  005C42  C0CA  F100         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  8690  005C46  C0CB  F101         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  8691  005C4A  C0CC  F102         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  8692  005C4E  C0CD  F103         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  8693  005C52  0E10               	movlw	16
  8694  005C54  0101               	movlb	1	; () banked
  8695  005C56  6F04               	movwf	___lldiv@divisor& (0+255),b
  8696  005C58  0E0E               	movlw	14
  8697  005C5A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  8698  005C5C  0E00               	movlw	0
  8699  005C5E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  8700  005C60  0E00               	movlw	0
  8701  005C62  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  8702  005C64  ECE0  F04B         	call	___lldiv	;wreg free
  8703  005C68  0101               	movlb	1	; () banked
  8704  005C6A  5100               	movf	?___lldiv& (0+255),w,b
  8705  005C6C  0101               	movlb	1	; () banked
  8706  005C6E  6F11               	movwf	send_complete_update@tmp& (0+255),b
  8707                           
  8708                           ; BSR set to: 1
  8709                           ;main.c: 547: m_var.value_byte1 = tmp / 256;
  8710  005C70  C111  F106         	movff	send_complete_update@tmp,___awdiv@dividend
  8711  005C74  0101               	movlb	1	; () banked
  8712  005C76  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
  8713  005C78  0E01               	movlw	1
  8714  005C7A  0101               	movlb	1	; () banked
  8715  005C7C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
  8716  005C7E  0E00               	movlw	0
  8717  005C80  6F08               	movwf	___awdiv@divisor& (0+255),b
  8718  005C82  EC81  F04B         	call	___awdiv	;wreg free
  8719  005C86  0101               	movlb	1	; () banked
  8720  005C88  5106               	movf	?___awdiv& (0+255),w,b
  8721  005C8A  0101               	movlb	1	; () banked
  8722  005C8C  6FE3               	movwf	(_m_var+4)& (0+255),b
  8723                           
  8724                           ; BSR set to: 1
  8725                           ;main.c: 548: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  8726  005C8E  C111  F1E4         	movff	send_complete_update@tmp,_m_var+5
  8727                           
  8728                           ;main.c: 549: m_var.writable = 0;
  8729  005C92  0E00               	movlw	0
  8730  005C94  0101               	movlb	1	; () banked
  8731  005C96  6FE6               	movwf	(_m_var+7)& (0+255),b
  8732                           
  8733                           ; BSR set to: 1
  8734                           ;main.c: 550: p_buffer += encode_uint16_variable(p_buffer, m_var);
  8735  005C98  C1BA  F100         	movff	_p_buffer,encode_uint16_variable@buffer
  8736  005C9C  C1BB  F101         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  8737  005CA0  EE21  F0DF         	lfsr	2,_m_var
  8738  005CA4  EE01  F002         	lfsr	0,encode_uint16_variable@var
  8739  005CA8  0E08               	movlw	8
  8740  005CAA                     u21331:
  8741  005CAA  CFDB FFEB          	movff	plusw2,plusw0
  8742  005CAE  06E8               	decf	wreg,f,c
  8743  005CB0  E2FC               	bc	u21331
  8744  005CB2  EC0B  F04F         	call	_encode_uint16_variable	;wreg free
  8745  005CB6  D03D               	goto	L6
  8746  005CB8                     l19534:
  8747                           
  8748                           ;main.c: 552: else
  8749                           ;main.c: 553: {
  8750                           ;main.c: 554: m_var.unit = 0;
  8751  005CB8  0E00               	movlw	0
  8752  005CBA  0101               	movlb	1	; () banked
  8753  005CBC  6FE5               	movwf	(_m_var+6)& (0+255),b
  8754                           
  8755                           ; BSR set to: 1
  8756                           ;main.c: 555: tmp = m_uptime_seconds / 86400;
  8757  005CBE  C0CA  F100         	movff	_m_uptime_seconds,___lldiv@dividend	;volatile
  8758  005CC2  C0CB  F101         	movff	_m_uptime_seconds+1,___lldiv@dividend+1	;volatile
  8759  005CC6  C0CC  F102         	movff	_m_uptime_seconds+2,___lldiv@dividend+2	;volatile
  8760  005CCA  C0CD  F103         	movff	_m_uptime_seconds+3,___lldiv@dividend+3	;volatile
  8761  005CCE  0E80               	movlw	128
  8762  005CD0  0101               	movlb	1	; () banked
  8763  005CD2  6F04               	movwf	___lldiv@divisor& (0+255),b
  8764  005CD4  0E51               	movlw	81
  8765  005CD6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  8766  005CD8  0E01               	movlw	1
  8767  005CDA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  8768  005CDC  0E00               	movlw	0
  8769  005CDE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  8770  005CE0  ECE0  F04B         	call	___lldiv	;wreg free
  8771  005CE4  0101               	movlb	1	; () banked
  8772  005CE6  5100               	movf	?___lldiv& (0+255),w,b
  8773  005CE8  0101               	movlb	1	; () banked
  8774  005CEA  6F11               	movwf	send_complete_update@tmp& (0+255),b
  8775                           
  8776                           ; BSR set to: 1
  8777                           ;main.c: 556: m_var.value_byte1 = tmp / 256;
  8778  005CEC  C111  F106         	movff	send_complete_update@tmp,___awdiv@dividend
  8779  005CF0  0101               	movlb	1	; () banked
  8780  005CF2  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
  8781  005CF4  0E01               	movlw	1
  8782  005CF6  0101               	movlb	1	; () banked
  8783  005CF8  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
  8784  005CFA  0E00               	movlw	0
  8785  005CFC  6F08               	movwf	___awdiv@divisor& (0+255),b
  8786  005CFE  EC81  F04B         	call	___awdiv	;wreg free
  8787  005D02  0101               	movlb	1	; () banked
  8788  005D04  5106               	movf	?___awdiv& (0+255),w,b
  8789  005D06  0101               	movlb	1	; () banked
  8790  005D08  6FE3               	movwf	(_m_var+4)& (0+255),b
  8791                           
  8792                           ; BSR set to: 1
  8793                           ;main.c: 557: m_var.value_byte2 = tmp - (m_var.value_byte1 * 256);
  8794  005D0A  C111  F1E4         	movff	send_complete_update@tmp,_m_var+5
  8795                           
  8796                           ;main.c: 558: m_var.writable = 0;
  8797  005D0E  0E00               	movlw	0
  8798  005D10  0101               	movlb	1	; () banked
  8799  005D12  6FE6               	movwf	(_m_var+7)& (0+255),b
  8800                           
  8801                           ; BSR set to: 1
  8802                           ;main.c: 559: p_buffer += encode_uint16_variable(p_buffer, m_var);
  8803  005D14  C1BA  F100         	movff	_p_buffer,encode_uint16_variable@buffer
  8804  005D18  C1BB  F101         	movff	_p_buffer+1,encode_uint16_variable@buffer+1
  8805  005D1C  EE21  F0DF         	lfsr	2,_m_var
  8806  005D20  EE01  F002         	lfsr	0,encode_uint16_variable@var
  8807  005D24  0E08               	movlw	8
  8808  005D26                     u21341:
  8809  005D26  CFDB FFEB          	movff	plusw2,plusw0
  8810  005D2A  06E8               	decf	wreg,f,c
  8811  005D2C  E2FC               	bc	u21341
  8812  005D2E  EC0B  F04F         	call	_encode_uint16_variable	;wreg free
  8813  005D32                     L6:
  8814  005D32  0101               	movlb	1	; () banked
  8815  005D34  6F10               	movwf	??_send_complete_update& (0+255),b
  8816  005D36  0101               	movlb	1	; () banked
  8817  005D38  5110               	movf	??_send_complete_update& (0+255),w,b
  8818  005D3A  0D01               	mullw	1
  8819  005D3C  50F3               	movf	prodl,w,c
  8820  005D3E  0101               	movlb	1	; () banked
  8821  005D40  27BA               	addwf	_p_buffer& (0+255),f,b
  8822  005D42  50F4               	movf	prodh,w,c
  8823  005D44  0101               	movlb	1	; () banked
  8824  005D46  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  8825                           
  8826                           ; BSR set to: 1
  8827                           ;main.c: 560: }
  8828                           ;main.c: 562: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  8829                           
  8830                           ; BSR set to: 1
  8831                           
  8832                           ; BSR set to: 1
  8833                           
  8834                           ; BSR set to: 1
  8835  005D48  0EDF               	movlw	low _m_var
  8836  005D4A  0101               	movlb	1	; () banked
  8837  005D4C  6F00               	movwf	memcpy@d1& (0+255),b
  8838  005D4E  0E01               	movlw	high _m_var
  8839  005D50  0101               	movlb	1	; () banked
  8840  005D52  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8841  005D54  0ECB               	movlw	low _UPDATE_FREQUENCY_LABEL
  8842  005D56  0101               	movlb	1	; () banked
  8843  005D58  6F02               	movwf	memcpy@s1& (0+255),b
  8844  005D5A  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  8845  005D5C  0101               	movlb	1	; () banked
  8846  005D5E  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8847  005D60  0E00               	movlw	0
  8848  005D62  0101               	movlb	1	; () banked
  8849  005D64  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8850  005D66  0E03               	movlw	3
  8851  005D68  6F04               	movwf	memcpy@n& (0+255),b
  8852  005D6A  EC9E  F053         	call	_memcpy	;wreg free
  8853                           
  8854                           ;main.c: 563: m_var.unit = 4;
  8855  005D6E  0E04               	movlw	4
  8856  005D70  0101               	movlb	1	; () banked
  8857  005D72  6FE5               	movwf	(_m_var+6)& (0+255),b
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;main.c: 564: m_var.value_byte1 = m_update_frequency;
  8861  005D74  C0E4  F1E3         	movff	_m_update_frequency,_m_var+4	;volatile
  8862                           
  8863                           ; BSR set to: 1
  8864                           ;main.c: 565: m_var.writable = 1;
  8865  005D78  0E01               	movlw	1
  8866  005D7A  0101               	movlb	1	; () banked
  8867  005D7C  6FE6               	movwf	(_m_var+7)& (0+255),b
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;main.c: 566: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8871  005D7E  C1BA  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8872  005D82  C1BB  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8873  005D86  EE21  F0DF         	lfsr	2,_m_var
  8874  005D8A  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8875  005D8E  0E08               	movlw	8
  8876  005D90                     u21351:
  8877  005D90  CFDB FFEB          	movff	plusw2,plusw0
  8878  005D94  06E8               	decf	wreg,f,c
  8879  005D96  E2FC               	bc	u21351
  8880  005D98  EC19  F051         	call	_encode_uint8_variable	;wreg free
  8881  005D9C  0101               	movlb	1	; () banked
  8882  005D9E  6F10               	movwf	??_send_complete_update& (0+255),b
  8883  005DA0  0101               	movlb	1	; () banked
  8884  005DA2  5110               	movf	??_send_complete_update& (0+255),w,b
  8885  005DA4  0D01               	mullw	1
  8886  005DA6  50F3               	movf	prodl,w,c
  8887  005DA8  0101               	movlb	1	; () banked
  8888  005DAA  27BA               	addwf	_p_buffer& (0+255),f,b
  8889  005DAC  50F4               	movf	prodh,w,c
  8890  005DAE  0101               	movlb	1	; () banked
  8891  005DB0  23BB               	addwfc	(_p_buffer+1)& (0+255),f,b
  8892                           
  8893                           ; BSR set to: 1
  8894                           ;main.c: 568: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8895  005DB2  0ED1               	movlw	low _m_buffer
  8896  005DB4  0101               	movlb	1	; () banked
  8897  005DB6  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8898  005DB8  0E02               	movlw	high _m_buffer
  8899  005DBA  0101               	movlb	1	; () banked
  8900  005DBC  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8901  005DBE  0ED1               	movlw	_m_buffer& (0+255)
  8902  005DC0  0800               	sublw	0
  8903  005DC2  0101               	movlb	1	; () banked
  8904  005DC4  25BA               	addwf	_p_buffer& (0+255),w,b
  8905  005DC6  0101               	movlb	1	; () banked
  8906  005DC8  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8907  005DCA  EC59  F04F         	call	_sendHIDBinary	;wreg free
  8908                           
  8909                           ;main.c: 569: _delay((unsigned long)((20)*(16000000/4000.0)));
  8910  005DCE  0E68               	movlw	104
  8911  005DD0  0101               	movlb	1	; () banked
  8912  005DD2  6F10               	movwf	??_send_complete_update& (0+255),b
  8913  005DD4  0EE4               	movlw	228
  8914  005DD6                     u22877:
  8915  005DD6  2EE8               	decfsz	wreg,f,c
  8916  005DD8  D7FE               	goto	u22877
  8917  005DDA  2F10               	decfsz	??_send_complete_update& (0+255),f,b
  8918  005DDC  D7FC               	goto	u22877
  8919  005DDE  D000               	nop2	
  8920  005DE0  0012               	return		;funcret
  8921  005DE2                     __end_of_send_complete_update:
  8922                           	opt stack 0
  8923                           tblptru	equ	0xFF8
  8924                           tblptrh	equ	0xFF7
  8925                           tblptrl	equ	0xFF6
  8926                           tablat	equ	0xFF5
  8927                           prodh	equ	0xFF4
  8928                           prodl	equ	0xFF3
  8929                           postinc0	equ	0xFEE
  8930                           plusw0	equ	0xFEB
  8931                           wreg	equ	0xFE8
  8932                           postdec1	equ	0xFE5
  8933                           fsr1h	equ	0xFE2
  8934                           fsr1l	equ	0xFE1
  8935                           indf2	equ	0xFDF
  8936                           postinc2	equ	0xFDE
  8937                           postdec2	equ	0xFDD
  8938                           plusw2	equ	0xFDB
  8939                           fsr2h	equ	0xFDA
  8940                           fsr2l	equ	0xFD9
  8941                           status	equ	0xFD8
  8942                           
  8943 ;; *************** function _sendHIDBinary *****************
  8944 ;; Defined at:
  8945 ;;		line 726 in file "src/main.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
  8948 ;;		 -> m_buffer(32), 
  8949 ;;  length          1   12[BANK1 ] unsigned char 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      unsigned char 
  8954 ;; Registers used:
  8955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8961 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8962 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;Total ram usage:        6 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; Hardware stack levels required when called:   17
  8968 ;; This function calls:
  8969 ;;		_USBTransferOnePacket
  8970 ;;		_memcpy
  8971 ;; This function is called by:
  8972 ;;		_main
  8973 ;;		_send_network_register
  8974 ;;		_send_complete_update
  8975 ;;		_send_writables_update
  8976 ;;		_send_periodic_update
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text15
  8981  009EB2                     __ptext15:
  8982                           	opt stack 0
  8983  009EB2                     _sendHIDBinary:
  8984                           	opt stack 12
  8985                           
  8986                           ;main.c: 728: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
  8987                           
  8988                           ;incstack = 0
  8989  009EB2  0E1F               	movlw	31
  8990  009EB4  6449               	cpfsgt	_USBDeviceState,c	;volatile
  8991  009EB6  0012               	return	
  8992  009EB8  B265               	btfsc	3941,1,c	;volatile
  8993  009EBA  0012               	return	
  8994  009EBC                     l17956:
  8995                           
  8996                           ;main.c: 733: {
  8997                           ;main.c: 734: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
  8998  009EBC  0100               	movlb	0	; () banked
  8999  009EBE  51D6               	movf	_USBInHandle& (0+255),w,b
  9000  009EC0  0100               	movlb	0	; () banked
  9001  009EC2  11D7               	iorwf	(_USBInHandle+1)& (0+255),w,b
  9002  009EC4  B4D8               	btfsc	status,2,c
  9003  009EC6  D013               	goto	l17960
  9004                           
  9005                           ; BSR set to: 0
  9006  009EC8  C0D6  FFD9         	movff	_USBInHandle,fsr2l
  9007  009ECC  C0D7  FFDA         	movff	_USBInHandle+1,fsr2h
  9008  009ED0  0100               	movlb	0	; () banked
  9009  009ED2  AEDF               	btfss	indf2,7,c
  9010  009ED4  D004               	goto	u19660
  9011  009ED6  0101               	movlb	1	; () banked
  9012  009ED8  6B0D               	clrf	??_sendHIDBinary& (0+255),b
  9013  009EDA  2B0D               	incf	??_sendHIDBinary& (0+255),f,b
  9014  009EDC  D002               	goto	u19668
  9015  009EDE                     u19660:
  9016  009EDE  0101               	movlb	1	; () banked
  9017  009EE0  6B0D               	clrf	??_sendHIDBinary& (0+255),b
  9018  009EE2                     u19668:
  9019  009EE2  0101               	movlb	1	; () banked
  9020  009EE4  510D               	movf	??_sendHIDBinary& (0+255),w,b
  9021  009EE6  0101               	movlb	1	; () banked
  9022  009EE8  6F0E               	movwf	_sendHIDBinary$4947& (0+255),b
  9023  009EEA  6B0F               	clrf	(_sendHIDBinary$4947+1)& (0+255),b
  9024  009EEC  D005               	goto	l17962
  9025  009EEE                     l17960:
  9026  009EEE  0E00               	movlw	0
  9027  009EF0  0101               	movlb	1	; () banked
  9028  009EF2  6F0F               	movwf	(_sendHIDBinary$4947+1)& (0+255),b
  9029  009EF4  0E00               	movlw	0
  9030  009EF6  6F0E               	movwf	_sendHIDBinary$4947& (0+255),b
  9031  009EF8                     l17962:
  9032                           
  9033                           ; BSR set to: 1
  9034  009EF8  0101               	movlb	1	; () banked
  9035  009EFA  510E               	movf	_sendHIDBinary$4947& (0+255),w,b
  9036  009EFC  0101               	movlb	1	; () banked
  9037  009EFE  110F               	iorwf	(_sendHIDBinary$4947+1)& (0+255),w,b
  9038  009F00  A4D8               	btfss	status,2,c
  9039  009F02  D7DC               	goto	l17956
  9040                           
  9041                           ; BSR set to: 1
  9042                           ;main.c: 735: {
  9043                           ;main.c: 736: memcpy(&ToSendDataBuffer[0], buffer, length);
  9044  009F04  0E84               	movlw	low _ToSendDataBuffer
  9045  009F06  0101               	movlb	1	; () banked
  9046  009F08  6F00               	movwf	memcpy@d1& (0+255),b
  9047  009F0A  0E03               	movlw	high _ToSendDataBuffer
  9048  009F0C  0101               	movlb	1	; () banked
  9049  009F0E  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  9050  009F10  C10A  F102         	movff	sendHIDBinary@buffer,memcpy@s1
  9051  009F14  C10B  F103         	movff	sendHIDBinary@buffer+1,memcpy@s1+1
  9052  009F18  C10C  F104         	movff	sendHIDBinary@length,memcpy@n
  9053  009F1C  0101               	movlb	1	; () banked
  9054  009F1E  6B05               	clrf	(memcpy@n+1)& (0+255),b
  9055  009F20  EC9E  F053         	call	_memcpy	;wreg free
  9056                           
  9057                           ;main.c: 737: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],length);
  9058  009F24  0E01               	movlw	1
  9059  009F26  0101               	movlb	1	; () banked
  9060  009F28  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  9061  009F2A  0E84               	movlw	low _ToSendDataBuffer
  9062  009F2C  0101               	movlb	1	; () banked
  9063  009F2E  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  9064  009F30  0E03               	movlw	high _ToSendDataBuffer
  9065  009F32  0101               	movlb	1	; () banked
  9066  009F34  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9067  009F36  C10C  F103         	movff	sendHIDBinary@length,USBTransferOnePacket@len
  9068  009F3A  0E01               	movlw	1
  9069  009F3C  ECB8  F048         	call	_USBTransferOnePacket
  9070  009F40  C100  F0D6         	movff	?_USBTransferOnePacket,_USBInHandle
  9071  009F44  C101  F0D7         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
  9072                           
  9073                           ;main.c: 738: return 1;
  9074                           ;	Return value of _sendHIDBinary is never used
  9075  009F48  0012               	return	
  9076  009F4A                     __end_of_sendHIDBinary:
  9077                           	opt stack 0
  9078                           tblptru	equ	0xFF8
  9079                           tblptrh	equ	0xFF7
  9080                           tblptrl	equ	0xFF6
  9081                           tablat	equ	0xFF5
  9082                           prodh	equ	0xFF4
  9083                           prodl	equ	0xFF3
  9084                           postinc0	equ	0xFEE
  9085                           plusw0	equ	0xFEB
  9086                           wreg	equ	0xFE8
  9087                           postdec1	equ	0xFE5
  9088                           fsr1h	equ	0xFE2
  9089                           fsr1l	equ	0xFE1
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           plusw2	equ	0xFDB
  9094                           fsr2h	equ	0xFDA
  9095                           fsr2l	equ	0xFD9
  9096                           status	equ	0xFD8
  9097                           
  9098 ;; *************** function _encode_uint8_variable *****************
  9099 ;; Defined at:
  9100 ;;		line 43 in file "../../muta/muta_messages.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
  9103 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
  9104 ;;  var             9    2[BANK1 ] struct .
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      unsigned char 
  9109 ;; Registers used:
  9110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9116 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;Total ram usage:       11 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:   16
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_send_complete_update
  9127 ;;		_send_writables_update
  9128 ;;		_send_periodic_update
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text16
  9133  00A232                     __ptext16:
  9134                           	opt stack 0
  9135  00A232                     _encode_uint8_variable:
  9136                           	opt stack 13
  9137                           
  9138                           ;muta_messages.c: 45: *(buffer++) = var.label[0];
  9139                           
  9140                           ;incstack = 0
  9141  00A232  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9142  00A236  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9143  00A23A  C102  FFDF         	movff	encode_uint8_variable@var,indf2
  9144  00A23E  0101               	movlb	1	; () banked
  9145  00A240  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9146  00A242  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9147                           
  9148                           ; BSR set to: 1
  9149                           ;muta_messages.c: 46: *(buffer++) = var.label[1];
  9150  00A244  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9151  00A248  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9152  00A24C  C103  FFDF         	movff	encode_uint8_variable@var+1,indf2
  9153  00A250  0101               	movlb	1	; () banked
  9154  00A252  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9155  00A254  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9156                           
  9157                           ; BSR set to: 1
  9158                           ;muta_messages.c: 47: *(buffer++) = var.label[2];
  9159  00A256  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9160  00A25A  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9161  00A25E  C104  FFDF         	movff	encode_uint8_variable@var+2,indf2
  9162                           
  9163                           ; BSR set to: 1
  9164  00A262  0101               	movlb	1	; () banked
  9165  00A264  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9166  00A266  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9167                           
  9168                           ; BSR set to: 1
  9169                           ;muta_messages.c: 48: var.type = 0 << 1;
  9170  00A268  0E00               	movlw	0
  9171  00A26A  0101               	movlb	1	; () banked
  9172  00A26C  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9173                           
  9174                           ; BSR set to: 1
  9175                           ;muta_messages.c: 49: if (var.writable)
  9176  00A26E  0101               	movlb	1	; () banked
  9177  00A270  5109               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
  9178  00A272  B4D8               	btfsc	status,2,c
  9179  00A274  D004               	goto	l1989
  9180                           
  9181                           ; BSR set to: 1
  9182                           ;muta_messages.c: 50: {
  9183                           ;muta_messages.c: 51: var.type = var.type + 1;
  9184  00A276  0101               	movlb	1	; () banked
  9185  00A278  2905               	incf	(encode_uint8_variable@var+3)& (0+255),w,b
  9186  00A27A  0101               	movlb	1	; () banked
  9187  00A27C  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9188  00A27E                     l1989:
  9189                           
  9190                           ; BSR set to: 1
  9191                           ;muta_messages.c: 52: }
  9192                           ;muta_messages.c: 53: var.type = var.type << 4;
  9193  00A27E  0101               	movlb	1	; () banked
  9194  00A280  3905               	swapf	(encode_uint8_variable@var+3)& (0+255),w,b
  9195  00A282  0BF0               	andlw	240
  9196  00A284  0101               	movlb	1	; () banked
  9197  00A286  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9198                           
  9199                           ;muta_messages.c: 54: var.type = var.type + var.unit;
  9200  00A288  0101               	movlb	1	; () banked
  9201  00A28A  5105               	movf	(encode_uint8_variable@var+3)& (0+255),w,b
  9202  00A28C  0101               	movlb	1	; () banked
  9203  00A28E  2508               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
  9204  00A290  0101               	movlb	1	; () banked
  9205  00A292  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;muta_messages.c: 55: *(buffer++) = var.type;
  9209  00A294  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9210  00A298  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9211  00A29C  C105  FFDF         	movff	encode_uint8_variable@var+3,indf2
  9212                           
  9213                           ; BSR set to: 1
  9214  00A2A0  0101               	movlb	1	; () banked
  9215  00A2A2  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9216  00A2A4  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9217                           
  9218                           ; BSR set to: 1
  9219                           ;muta_messages.c: 56: *(buffer++) = var.value_byte1;
  9220  00A2A6  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
  9221  00A2AA  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
  9222  00A2AE  C106  FFDF         	movff	encode_uint8_variable@var+4,indf2
  9223                           
  9224                           ; BSR set to: 1
  9225  00A2B2  0101               	movlb	1	; () banked
  9226  00A2B4  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
  9227  00A2B6  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
  9228                           
  9229                           ; BSR set to: 1
  9230                           ;muta_messages.c: 57: return 5;
  9231  00A2B8  0E05               	movlw	5
  9232  00A2BA  0012               	return	
  9233  00A2BC                     __end_of_encode_uint8_variable:
  9234                           	opt stack 0
  9235                           tblptru	equ	0xFF8
  9236                           tblptrh	equ	0xFF7
  9237                           tblptrl	equ	0xFF6
  9238                           tablat	equ	0xFF5
  9239                           prodh	equ	0xFF4
  9240                           prodl	equ	0xFF3
  9241                           postinc0	equ	0xFEE
  9242                           plusw0	equ	0xFEB
  9243                           wreg	equ	0xFE8
  9244                           postdec1	equ	0xFE5
  9245                           fsr1h	equ	0xFE2
  9246                           fsr1l	equ	0xFE1
  9247                           indf2	equ	0xFDF
  9248                           postinc2	equ	0xFDE
  9249                           postdec2	equ	0xFDD
  9250                           plusw2	equ	0xFDB
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _encode_uint16_variable *****************
  9256 ;; Defined at:
  9257 ;;		line 60 in file "../../muta/muta_messages.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
  9260 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
  9261 ;;  var             9    2[BANK1 ] struct .
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      unsigned char 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9273 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9277 ;;Total ram usage:       11 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:   16
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_send_complete_update
  9284 ;;		_send_periodic_update
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text17
  9289  009E16                     __ptext17:
  9290                           	opt stack 0
  9291  009E16                     _encode_uint16_variable:
  9292                           	opt stack 13
  9293                           
  9294                           ;muta_messages.c: 62: *(buffer++) = var.label[0];
  9295                           
  9296                           ; BSR set to: 1
  9297                           ;incstack = 0
  9298  009E16  C100  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  9299  009E1A  C101  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  9300  009E1E  C102  FFDF         	movff	encode_uint16_variable@var,indf2
  9301  009E22  0101               	movlb	1	; () banked
  9302  009E24  4B00               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  9303  009E26  2B01               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  9304                           
  9305                           ; BSR set to: 1
  9306                           ;muta_messages.c: 63: *(buffer++) = var.label[1];
  9307  009E28  C100  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  9308  009E2C  C101  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  9309  009E30  C103  FFDF         	movff	encode_uint16_variable@var+1,indf2
  9310  009E34  0101               	movlb	1	; () banked
  9311  009E36  4B00               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  9312  009E38  2B01               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  9313                           
  9314                           ; BSR set to: 1
  9315                           ;muta_messages.c: 64: *(buffer++) = var.label[2];
  9316  009E3A  C100  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  9317  009E3E  C101  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  9318  009E42  C104  FFDF         	movff	encode_uint16_variable@var+2,indf2
  9319                           
  9320                           ; BSR set to: 1
  9321  009E46  0101               	movlb	1	; () banked
  9322  009E48  4B00               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  9323  009E4A  2B01               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  9324                           
  9325                           ; BSR set to: 1
  9326                           ;muta_messages.c: 65: var.type = 1 << 1;
  9327  009E4C  0E02               	movlw	2
  9328  009E4E  0101               	movlb	1	; () banked
  9329  009E50  6F05               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  9330                           
  9331                           ; BSR set to: 1
  9332                           ;muta_messages.c: 66: if (var.writable)
  9333  009E52  0101               	movlb	1	; () banked
  9334  009E54  5109               	movf	(encode_uint16_variable@var+7)& (0+255),w,b
  9335  009E56  B4D8               	btfsc	status,2,c
  9336  009E58  D004               	goto	l1993
  9337                           
  9338                           ; BSR set to: 1
  9339                           ;muta_messages.c: 67: {
  9340                           ;muta_messages.c: 68: var.type = var.type + 1;
  9341  009E5A  0101               	movlb	1	; () banked
  9342  009E5C  2905               	incf	(encode_uint16_variable@var+3)& (0+255),w,b
  9343  009E5E  0101               	movlb	1	; () banked
  9344  009E60  6F05               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  9345  009E62                     l1993:
  9346                           
  9347                           ; BSR set to: 1
  9348                           ;muta_messages.c: 69: }
  9349                           ;muta_messages.c: 70: var.type = var.type << 4;
  9350  009E62  0101               	movlb	1	; () banked
  9351  009E64  3905               	swapf	(encode_uint16_variable@var+3)& (0+255),w,b
  9352  009E66  0BF0               	andlw	240
  9353  009E68  0101               	movlb	1	; () banked
  9354  009E6A  6F05               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  9355                           
  9356                           ;muta_messages.c: 71: var.type = var.type + var.unit;
  9357  009E6C  0101               	movlb	1	; () banked
  9358  009E6E  5105               	movf	(encode_uint16_variable@var+3)& (0+255),w,b
  9359  009E70  0101               	movlb	1	; () banked
  9360  009E72  2508               	addwf	(encode_uint16_variable@var+6)& (0+255),w,b
  9361  009E74  0101               	movlb	1	; () banked
  9362  009E76  6F05               	movwf	(encode_uint16_variable@var+3)& (0+255),b
  9363                           
  9364                           ; BSR set to: 1
  9365                           ;muta_messages.c: 72: *(buffer++) = var.type;
  9366  009E78  C100  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  9367  009E7C  C101  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  9368  009E80  C105  FFDF         	movff	encode_uint16_variable@var+3,indf2
  9369                           
  9370                           ; BSR set to: 1
  9371  009E84  0101               	movlb	1	; () banked
  9372  009E86  4B00               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  9373  009E88  2B01               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  9374                           
  9375                           ; BSR set to: 1
  9376                           ;muta_messages.c: 73: *(buffer++) = var.value_byte2;
  9377  009E8A  C100  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  9378  009E8E  C101  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  9379  009E92  C107  FFDF         	movff	encode_uint16_variable@var+5,indf2
  9380                           
  9381                           ; BSR set to: 1
  9382  009E96  0101               	movlb	1	; () banked
  9383  009E98  4B00               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  9384  009E9A  2B01               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  9385                           
  9386                           ; BSR set to: 1
  9387                           ;muta_messages.c: 74: *(buffer++) = var.value_byte1;
  9388  009E9C  C100  FFD9         	movff	encode_uint16_variable@buffer,fsr2l
  9389  009EA0  C101  FFDA         	movff	encode_uint16_variable@buffer+1,fsr2h
  9390  009EA4  C106  FFDF         	movff	encode_uint16_variable@var+4,indf2
  9391                           
  9392                           ; BSR set to: 1
  9393  009EA8  0101               	movlb	1	; () banked
  9394  009EAA  4B00               	infsnz	encode_uint16_variable@buffer& (0+255),f,b
  9395  009EAC  2B01               	incf	(encode_uint16_variable@buffer+1)& (0+255),f,b
  9396                           
  9397                           ; BSR set to: 1
  9398                           ;muta_messages.c: 75: return 6;
  9399  009EAE  0E06               	movlw	6
  9400  009EB0  0012               	return	
  9401  009EB2                     __end_of_encode_uint16_variable:
  9402                           	opt stack 0
  9403                           tblptru	equ	0xFF8
  9404                           tblptrh	equ	0xFF7
  9405                           tblptrl	equ	0xFF6
  9406                           tablat	equ	0xFF5
  9407                           prodh	equ	0xFF4
  9408                           prodl	equ	0xFF3
  9409                           postinc0	equ	0xFEE
  9410                           plusw0	equ	0xFEB
  9411                           wreg	equ	0xFE8
  9412                           postdec1	equ	0xFE5
  9413                           fsr1h	equ	0xFE2
  9414                           fsr1l	equ	0xFE1
  9415                           indf2	equ	0xFDF
  9416                           postinc2	equ	0xFDE
  9417                           postdec2	equ	0xFDD
  9418                           plusw2	equ	0xFDB
  9419                           fsr2h	equ	0xFDA
  9420                           fsr2l	equ	0xFD9
  9421                           status	equ	0xFD8
  9422                           
  9423 ;; *************** function ___lldiv *****************
  9424 ;; Defined at:
  9425 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  dividend        4    0[BANK1 ] unsigned long 
  9428 ;;  divisor         4    4[BANK1 ] unsigned long 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;  quotient        4    8[BANK1 ] unsigned long 
  9431 ;;  counter         1   12[BANK1 ] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  4    0[BANK1 ] unsigned long 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9441 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9442 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9444 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9445 ;;Total ram usage:       13 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:   16
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_send_complete_update
  9452 ;;		_send_periodic_update
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text18
  9457  0097C0                     __ptext18:
  9458                           	opt stack 0
  9459  0097C0                     ___lldiv:
  9460                           	opt stack 13
  9461                           
  9462                           ; BSR set to: 1
  9463                           ;incstack = 0
  9464  0097C0  0E00               	movlw	0
  9465  0097C2  0101               	movlb	1	; () banked
  9466  0097C4  6F08               	movwf	___lldiv@quotient& (0+255),b
  9467  0097C6  0E00               	movlw	0
  9468  0097C8  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
  9469  0097CA  0E00               	movlw	0
  9470  0097CC  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
  9471  0097CE  0E00               	movlw	0
  9472  0097D0  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
  9473                           
  9474                           ; BSR set to: 1
  9475  0097D2  0101               	movlb	1	; () banked
  9476  0097D4  5104               	movf	___lldiv@divisor& (0+255),w,b
  9477  0097D6  0101               	movlb	1	; () banked
  9478  0097D8  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9479  0097DA  0101               	movlb	1	; () banked
  9480  0097DC  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9481  0097DE  0101               	movlb	1	; () banked
  9482  0097E0  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9483  0097E2  B4D8               	btfsc	status,2,c
  9484  0097E4  D042               	goto	l2530
  9485                           
  9486                           ; BSR set to: 1
  9487  0097E6  0E01               	movlw	1
  9488  0097E8  0101               	movlb	1	; () banked
  9489  0097EA  6F0C               	movwf	___lldiv@counter& (0+255),b
  9490  0097EC  D008               	goto	l18068
  9491  0097EE                     l18066:
  9492                           
  9493                           ; BSR set to: 1
  9494  0097EE  0101               	movlb	1	; () banked
  9495  0097F0  90D8               	bcf	status,0,c
  9496  0097F2  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  9497  0097F4  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9498  0097F6  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9499  0097F8  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9500  0097FA  0101               	movlb	1	; () banked
  9501  0097FC  2B0C               	incf	___lldiv@counter& (0+255),f,b
  9502  0097FE                     l18068:
  9503                           
  9504                           ; BSR set to: 1
  9505  0097FE  0101               	movlb	1	; () banked
  9506  009800  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9507  009802  D7F5               	goto	l18066
  9508  009804                     l18070:
  9509                           
  9510                           ; BSR set to: 1
  9511  009804  0101               	movlb	1	; () banked
  9512  009806  90D8               	bcf	status,0,c
  9513  009808  3708               	rlcf	___lldiv@quotient& (0+255),f,b
  9514  00980A  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9515  00980C  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9516  00980E  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9517                           
  9518                           ; BSR set to: 1
  9519  009810  0101               	movlb	1	; () banked
  9520  009812  5104               	movf	___lldiv@divisor& (0+255),w,b
  9521  009814  0101               	movlb	1	; () banked
  9522  009816  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  9523  009818  0101               	movlb	1	; () banked
  9524  00981A  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9525  00981C  0101               	movlb	1	; () banked
  9526  00981E  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9527  009820  0101               	movlb	1	; () banked
  9528  009822  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9529  009824  0101               	movlb	1	; () banked
  9530  009826  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9531  009828  0101               	movlb	1	; () banked
  9532  00982A  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9533  00982C  0101               	movlb	1	; () banked
  9534  00982E  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9535  009830  A0D8               	btfss	status,0,c
  9536  009832  D012               	goto	l18078
  9537                           
  9538                           ; BSR set to: 1
  9539  009834  0101               	movlb	1	; () banked
  9540  009836  5104               	movf	___lldiv@divisor& (0+255),w,b
  9541  009838  0101               	movlb	1	; () banked
  9542  00983A  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  9543  00983C  0101               	movlb	1	; () banked
  9544  00983E  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9545  009840  0101               	movlb	1	; () banked
  9546  009842  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9547  009844  0101               	movlb	1	; () banked
  9548  009846  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9549  009848  0101               	movlb	1	; () banked
  9550  00984A  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9551  00984C  0101               	movlb	1	; () banked
  9552  00984E  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9553  009850  0101               	movlb	1	; () banked
  9554  009852  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9555                           
  9556                           ; BSR set to: 1
  9557  009854  0101               	movlb	1	; () banked
  9558  009856  8108               	bsf	___lldiv@quotient& (0+255),0,b
  9559  009858                     l18078:
  9560                           
  9561                           ; BSR set to: 1
  9562  009858  0101               	movlb	1	; () banked
  9563  00985A  90D8               	bcf	status,0,c
  9564  00985C  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9565  00985E  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9566  009860  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9567  009862  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  9568                           
  9569                           ; BSR set to: 1
  9570  009864  0101               	movlb	1	; () banked
  9571  009866  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
  9572  009868  D7CD               	goto	l18070
  9573  00986A                     l2530:
  9574                           
  9575                           ; BSR set to: 1
  9576  00986A  C108  F100         	movff	___lldiv@quotient,?___lldiv
  9577  00986E  C109  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  9578  009872  C10A  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  9579  009876  C10B  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  9580                           
  9581                           ; BSR set to: 1
  9582  00987A  0012               	return		;funcret
  9583  00987C                     __end_of___lldiv:
  9584                           	opt stack 0
  9585                           tblptru	equ	0xFF8
  9586                           tblptrh	equ	0xFF7
  9587                           tblptrl	equ	0xFF6
  9588                           tablat	equ	0xFF5
  9589                           prodh	equ	0xFF4
  9590                           prodl	equ	0xFF3
  9591                           postinc0	equ	0xFEE
  9592                           plusw0	equ	0xFEB
  9593                           wreg	equ	0xFE8
  9594                           postdec1	equ	0xFE5
  9595                           fsr1h	equ	0xFE2
  9596                           fsr1l	equ	0xFE1
  9597                           indf2	equ	0xFDF
  9598                           postinc2	equ	0xFDE
  9599                           postdec2	equ	0xFDD
  9600                           plusw2	equ	0xFDB
  9601                           fsr2h	equ	0xFDA
  9602                           fsr2l	equ	0xFD9
  9603                           status	equ	0xFD8
  9604                           
  9605 ;; *************** function _sendHIDText *****************
  9606 ;; Defined at:
  9607 ;;		line 746 in file "src/main.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  str             2    7[BANK1 ] PTR unsigned char 
  9610 ;;		 -> ToSendDataBuffer(64), 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  size            2   15[BANK1 ] int 
  9613 ;;  p               2   13[BANK1 ] PTR unsigned char 
  9614 ;;		 -> ToSendDataBuffer(64), 
  9615 ;;  c               1   10[BANK1 ] unsigned char 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  1    wreg      unsigned char 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9625 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;Total ram usage:       10 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   17
  9632 ;; This function calls:
  9633 ;;		_USBTransferOnePacket
  9634 ;; This function is called by:
  9635 ;;		_main
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text19
  9640  0094B6                     __ptext19:
  9641                           	opt stack 0
  9642  0094B6                     _sendHIDText:
  9643                           	opt stack 13
  9644                           
  9645                           ;main.c: 748: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
  9646                           
  9647                           ; BSR set to: 1
  9648                           ;incstack = 0
  9649  0094B6  0E1F               	movlw	31
  9650  0094B8  6449               	cpfsgt	_USBDeviceState,c	;volatile
  9651  0094BA  0012               	return	
  9652  0094BC  B265               	btfsc	3941,1,c	;volatile
  9653  0094BE  0012               	return	
  9654  0094C0                     l19192:
  9655                           
  9656                           ;main.c: 753: {
  9657                           ;main.c: 754: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
  9658  0094C0  0100               	movlb	0	; () banked
  9659  0094C2  51D6               	movf	_USBInHandle& (0+255),w,b
  9660  0094C4  0100               	movlb	0	; () banked
  9661  0094C6  11D7               	iorwf	(_USBInHandle+1)& (0+255),w,b
  9662  0094C8  B4D8               	btfsc	status,2,c
  9663  0094CA  D013               	goto	l19196
  9664                           
  9665                           ; BSR set to: 0
  9666  0094CC  C0D6  FFD9         	movff	_USBInHandle,fsr2l
  9667  0094D0  C0D7  FFDA         	movff	_USBInHandle+1,fsr2h
  9668  0094D4  0100               	movlb	0	; () banked
  9669  0094D6  AEDF               	btfss	indf2,7,c
  9670  0094D8  D004               	goto	u20940
  9671  0094DA  0101               	movlb	1	; () banked
  9672  0094DC  6B09               	clrf	??_sendHIDText& (0+255),b
  9673  0094DE  2B09               	incf	??_sendHIDText& (0+255),f,b
  9674  0094E0  D002               	goto	u20948
  9675  0094E2                     u20940:
  9676  0094E2  0101               	movlb	1	; () banked
  9677  0094E4  6B09               	clrf	??_sendHIDText& (0+255),b
  9678  0094E6                     u20948:
  9679  0094E6  0101               	movlb	1	; () banked
  9680  0094E8  5109               	movf	??_sendHIDText& (0+255),w,b
  9681  0094EA  0101               	movlb	1	; () banked
  9682  0094EC  6F0B               	movwf	_sendHIDText$4950& (0+255),b
  9683  0094EE  6B0C               	clrf	(_sendHIDText$4950+1)& (0+255),b
  9684  0094F0  D005               	goto	l19198
  9685  0094F2                     l19196:
  9686  0094F2  0E00               	movlw	0
  9687  0094F4  0101               	movlb	1	; () banked
  9688  0094F6  6F0C               	movwf	(_sendHIDText$4950+1)& (0+255),b
  9689  0094F8  0E00               	movlw	0
  9690  0094FA  6F0B               	movwf	_sendHIDText$4950& (0+255),b
  9691  0094FC                     l19198:
  9692                           
  9693                           ; BSR set to: 1
  9694  0094FC  0101               	movlb	1	; () banked
  9695  0094FE  510B               	movf	_sendHIDText$4950& (0+255),w,b
  9696  009500  0101               	movlb	1	; () banked
  9697  009502  110C               	iorwf	(_sendHIDText$4950+1)& (0+255),w,b
  9698  009504  A4D8               	btfss	status,2,c
  9699  009506  D7DC               	goto	l19192
  9700                           
  9701                           ; BSR set to: 1
  9702                           ;main.c: 755: {
  9703                           ;main.c: 756: uint8_t* p = &ToSendDataBuffer[0];
  9704  009508  0E84               	movlw	low _ToSendDataBuffer
  9705  00950A  0101               	movlb	1	; () banked
  9706  00950C  6F0D               	movwf	sendHIDText@p& (0+255),b
  9707  00950E  0E03               	movlw	high _ToSendDataBuffer
  9708  009510  0101               	movlb	1	; () banked
  9709  009512  6F0E               	movwf	(sendHIDText@p+1)& (0+255),b
  9710                           
  9711                           ; BSR set to: 1
  9712                           ;main.c: 757: int size = 0;
  9713  009514  0E00               	movlw	0
  9714  009516  0101               	movlb	1	; () banked
  9715  009518  6F10               	movwf	(sendHIDText@size+1)& (0+255),b
  9716  00951A  0E00               	movlw	0
  9717  00951C  6F0F               	movwf	sendHIDText@size& (0+255),b
  9718                           
  9719                           ;main.c: 758: uint8_t c;
  9720                           ;main.c: 759: while ( c = *str++ )
  9721  00951E  D00C               	goto	l19210
  9722  009520                     l19204:
  9723                           
  9724                           ; BSR set to: 1
  9725                           ;main.c: 760: {
  9726                           ;main.c: 761: *p = c;
  9727  009520  C10D  FFD9         	movff	sendHIDText@p,fsr2l
  9728  009524  C10E  FFDA         	movff	sendHIDText@p+1,fsr2h
  9729  009528  C10A  FFDF         	movff	sendHIDText@c,indf2
  9730                           
  9731                           ; BSR set to: 1
  9732                           ;main.c: 762: p++;
  9733  00952C  0101               	movlb	1	; () banked
  9734  00952E  4B0D               	infsnz	sendHIDText@p& (0+255),f,b
  9735  009530  2B0E               	incf	(sendHIDText@p+1)& (0+255),f,b
  9736                           
  9737                           ; BSR set to: 1
  9738                           ;main.c: 763: size++;
  9739  009532  0101               	movlb	1	; () banked
  9740  009534  4B0F               	infsnz	sendHIDText@size& (0+255),f,b
  9741  009536  2B10               	incf	(sendHIDText@size+1)& (0+255),f,b
  9742  009538                     l19210:
  9743                           
  9744                           ; BSR set to: 1
  9745  009538  C107  FFD9         	movff	sendHIDText@str,fsr2l
  9746  00953C  C108  FFDA         	movff	sendHIDText@str+1,fsr2h
  9747  009540  0101               	movlb	1	; () banked
  9748  009542  4B07               	infsnz	sendHIDText@str& (0+255),f,b
  9749  009544  2B08               	incf	(sendHIDText@str+1)& (0+255),f,b
  9750  009546  50DF               	movf	indf2,w,c
  9751  009548  0101               	movlb	1	; () banked
  9752  00954A  6F0A               	movwf	sendHIDText@c& (0+255),b
  9753  00954C  0101               	movlb	1	; () banked
  9754  00954E  510A               	movf	sendHIDText@c& (0+255),w,b
  9755  009550  A4D8               	btfss	status,2,c
  9756  009552  D7E6               	goto	l19204
  9757                           
  9758                           ; BSR set to: 1
  9759                           ;main.c: 764: }
  9760                           ;main.c: 765: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],size);
  9761                           
  9762                           ; BSR set to: 1
  9763  009554  0E01               	movlw	1
  9764  009556  0101               	movlb	1	; () banked
  9765  009558  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  9766  00955A  0E84               	movlw	low _ToSendDataBuffer
  9767  00955C  0101               	movlb	1	; () banked
  9768  00955E  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  9769  009560  0E03               	movlw	high _ToSendDataBuffer
  9770  009562  0101               	movlb	1	; () banked
  9771  009564  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9772  009566  C10F  F103         	movff	sendHIDText@size,USBTransferOnePacket@len
  9773  00956A  0E01               	movlw	1
  9774  00956C  ECB8  F048         	call	_USBTransferOnePacket
  9775  009570  C100  F0D6         	movff	?_USBTransferOnePacket,_USBInHandle
  9776  009574  C101  F0D7         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
  9777                           
  9778                           ;main.c: 766: return 1;
  9779                           ;	Return value of _sendHIDText is never used
  9780  009578  0012               	return	
  9781  00957A                     __end_of_sendHIDText:
  9782                           	opt stack 0
  9783                           tblptru	equ	0xFF8
  9784                           tblptrh	equ	0xFF7
  9785                           tblptrl	equ	0xFF6
  9786                           tablat	equ	0xFF5
  9787                           prodh	equ	0xFF4
  9788                           prodl	equ	0xFF3
  9789                           postinc0	equ	0xFEE
  9790                           plusw0	equ	0xFEB
  9791                           wreg	equ	0xFE8
  9792                           postdec1	equ	0xFE5
  9793                           fsr1h	equ	0xFE2
  9794                           fsr1l	equ	0xFE1
  9795                           indf2	equ	0xFDF
  9796                           postinc2	equ	0xFDE
  9797                           postdec2	equ	0xFDD
  9798                           plusw2	equ	0xFDB
  9799                           fsr2h	equ	0xFDA
  9800                           fsr2l	equ	0xFD9
  9801                           status	equ	0xFD8
  9802                           
  9803 ;; *************** function _USBTransferOnePacket *****************
  9804 ;; Defined at:
  9805 ;;		line 995 in file "src/usb/usb_device.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  ep              1    wreg     unsigned char 
  9808 ;;  dir             1    0[BANK1 ] unsigned char 
  9809 ;;  data            2    1[BANK1 ] PTR unsigned char 
  9810 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
  9811 ;;  len             1    3[BANK1 ] unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  ep              1    4[BANK1 ] unsigned char 
  9814 ;;  handle          2    5[BANK1 ] PTR volatile struct __BD
  9815 ;;		 -> BDT(32), NULL(0), 
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  2    0[BANK1 ] PTR void 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9825 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9826 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9828 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9829 ;;Total ram usage:        7 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:   16
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_main
  9836 ;;		_sendHIDBinary
  9837 ;;		_sendHIDText
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text20
  9842  009170                     __ptext20:
  9843                           	opt stack 0
  9844  009170                     _USBTransferOnePacket:
  9845                           	opt stack 12
  9846                           
  9847                           ;incstack = 0
  9848                           ;USBTransferOnePacket@ep stored from wreg
  9849  009170  0101               	movlb	1	; () banked
  9850  009172  6F04               	movwf	USBTransferOnePacket@ep& (0+255),b
  9851                           
  9852                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  9853                           ;usb_device.c: 1000: if(dir != 0)
  9854  009174  0101               	movlb	1	; () banked
  9855  009176  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
  9856  009178  0101               	movlb	1	; () banked
  9857  00917A  B4D8               	btfsc	status,2,c
  9858  00917C  D008               	goto	l17714
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;usb_device.c: 1001: {
  9862                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  9863  00917E  0101               	movlb	1	; () banked
  9864  009180  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9865  009182  0D02               	mullw	2
  9866  009184  0ECE               	movlw	low _pBDTEntryIn
  9867  009186  24F3               	addwf	prodl,w,c
  9868  009188  6ED9               	movwf	fsr2l,c
  9869  00918A  0E00               	movlw	high _pBDTEntryIn
  9870  00918C  D007               	goto	L7
  9871  00918E                     l17714:
  9872                           
  9873                           ; BSR set to: 1
  9874                           ;usb_device.c: 1005: else
  9875                           ;usb_device.c: 1006: {
  9876                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  9877  00918E  0101               	movlb	1	; () banked
  9878  009190  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9879  009192  0D02               	mullw	2
  9880  009194  0ED2               	movlw	low _pBDTEntryOut
  9881  009196  24F3               	addwf	prodl,w,c
  9882  009198  6ED9               	movwf	fsr2l,c
  9883  00919A  0E00               	movlw	high _pBDTEntryOut
  9884  00919C                     L7:
  9885  00919C  20F4               	addwfc	prodh,w,c
  9886  00919E  6EDA               	movwf	fsr2h,c
  9887  0091A0  CFDE F105          	movff	postinc2,USBTransferOnePacket@handle
  9888  0091A4  CFDD F106          	movff	postdec2,USBTransferOnePacket@handle+1
  9889                           
  9890                           ; BSR set to: 1
  9891                           ;usb_device.c: 1009: }
  9892                           ;usb_device.c: 1013: if(handle == 0)
  9893                           
  9894                           ; BSR set to: 1
  9895  0091A8  0101               	movlb	1	; () banked
  9896  0091AA  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
  9897  0091AC  0101               	movlb	1	; () banked
  9898  0091AE  1106               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  9899  0091B0  A4D8               	btfss	status,2,c
  9900  0091B2  D007               	goto	l17722
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;usb_device.c: 1014: {
  9904                           ;usb_device.c: 1015: return 0;
  9905  0091B4  0E00               	movlw	0
  9906  0091B6  0101               	movlb	1	; () banked
  9907  0091B8  6F00               	movwf	?_USBTransferOnePacket& (0+255),b
  9908  0091BA  0E00               	movlw	0
  9909  0091BC  0101               	movlb	1	; () banked
  9910  0091BE  6F01               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  9911                           
  9912                           ; BSR set to: 1
  9913  0091C0  0012               	return	
  9914  0091C2                     l17722:
  9915                           
  9916                           ; BSR set to: 1
  9917                           ;usb_device.c: 1016: }
  9918                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  9919  0091C2  0101               	movlb	1	; () banked
  9920  0091C4  EE20 F002          	lfsr	2,2
  9921  0091C8  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
  9922  0091CA  26D9               	addwf	fsr2l,f,c
  9923  0091CC  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  9924  0091CE  22DA               	addwfc	fsr2h,f,c
  9925  0091D0  C101  FFDE         	movff	USBTransferOnePacket@data,postinc2
  9926  0091D4  C102  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  9927                           
  9928                           ;usb_device.c: 1030: handle->CNT = len;
  9929  0091D8  0101               	movlb	1	; () banked
  9930  0091DA  EE20 F001          	lfsr	2,1
  9931  0091DE  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
  9932  0091E0  26D9               	addwf	fsr2l,f,c
  9933  0091E2  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  9934  0091E4  22DA               	addwfc	fsr2h,f,c
  9935  0091E6  C103  FFDF         	movff	USBTransferOnePacket@len,indf2
  9936                           
  9937                           ; BSR set to: 1
  9938                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  9939  0091EA  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9940  0091EE  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9941  0091F2  0E40               	movlw	64
  9942  0091F4  16DF               	andwf	indf2,f,c
  9943                           
  9944                           ; BSR set to: 1
  9945                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9946  0091F6  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9947  0091FA  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9948  0091FE  0E00               	movlw	0
  9949  009200  86DB               	bsf	plusw2,3,c
  9950                           
  9951                           ; BSR set to: 1
  9952                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9953  009202  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9954  009206  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9955  00920A  0E00               	movlw	0
  9956  00920C  8EDB               	bsf	plusw2,7,c
  9957                           
  9958                           ; BSR set to: 1
  9959                           ;usb_device.c: 1036: if(dir != 0)
  9960  00920E  0101               	movlb	1	; () banked
  9961  009210  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
  9962  009212  0101               	movlb	1	; () banked
  9963  009214  B4D8               	btfsc	status,2,c
  9964  009216  D008               	goto	l17734
  9965                           
  9966                           ; BSR set to: 1
  9967                           ;usb_device.c: 1037: {
  9968                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  9969  009218  0101               	movlb	1	; () banked
  9970  00921A  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9971  00921C  0D02               	mullw	2
  9972  00921E  0ECE               	movlw	low _pBDTEntryIn
  9973  009220  24F3               	addwf	prodl,w,c
  9974  009222  6ED9               	movwf	fsr2l,c
  9975  009224  0E00               	movlw	high _pBDTEntryIn
  9976  009226  D007               	goto	L8
  9977  009228                     l17734:
  9978                           
  9979                           ; BSR set to: 1
  9980                           ;usb_device.c: 1041: else
  9981                           ;usb_device.c: 1042: {
  9982                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  9983  009228  0101               	movlb	1	; () banked
  9984  00922A  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9985  00922C  0D02               	mullw	2
  9986  00922E  0ED2               	movlw	low _pBDTEntryOut
  9987  009230  24F3               	addwf	prodl,w,c
  9988  009232  6ED9               	movwf	fsr2l,c
  9989  009234  0E00               	movlw	high _pBDTEntryOut
  9990  009236                     L8:
  9991  009236  20F4               	addwfc	prodh,w,c
  9992  009238  6EDA               	movwf	fsr2h,c
  9993  00923A  0E04               	movlw	4
  9994  00923C  1ADF               	xorwf	indf2,f,c
  9995                           
  9996                           ; BSR set to: 1
  9997                           ;usb_device.c: 1045: }
  9998                           ;usb_device.c: 1046: return (void*)handle;
  9999                           
 10000                           ; BSR set to: 1
 10001  00923E  C105  F100         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 10002  009242  C106  F101         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 10003  009246  0012               	return	
 10004  009248                     __end_of_USBTransferOnePacket:
 10005                           	opt stack 0
 10006                           tblptru	equ	0xFF8
 10007                           tblptrh	equ	0xFF7
 10008                           tblptrl	equ	0xFF6
 10009                           tablat	equ	0xFF5
 10010                           prodh	equ	0xFF4
 10011                           prodl	equ	0xFF3
 10012                           postinc0	equ	0xFEE
 10013                           plusw0	equ	0xFEB
 10014                           wreg	equ	0xFE8
 10015                           postdec1	equ	0xFE5
 10016                           fsr1h	equ	0xFE2
 10017                           fsr1l	equ	0xFE1
 10018                           indf2	equ	0xFDF
 10019                           postinc2	equ	0xFDE
 10020                           postdec2	equ	0xFDD
 10021                           plusw2	equ	0xFDB
 10022                           fsr2h	equ	0xFDA
 10023                           fsr2l	equ	0xFD9
 10024                           status	equ	0xFD8
 10025                           
 10026 ;; *************** function _decode_variable *****************
 10027 ;; Defined at:
 10028 ;;		line 120 in file "../../muta/muta_messages.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  p_buffer        2   10[BANK1 ] PTR unsigned char 
 10031 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  var             9   21[BANK1 ] struct .
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  9   10[BANK1 ] struct .
 10036 ;; Registers used:
 10037 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10043 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10047 ;;Total ram usage:       20 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:   17
 10050 ;; This function calls:
 10051 ;;		_memcpy
 10052 ;; This function is called by:
 10053 ;;		_main
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text21
 10058  009094                     __ptext21:
 10059                           	opt stack 0
 10060  009094                     _decode_variable:
 10061                           	opt stack 13
 10062                           
 10063                           ;muta_messages.c: 122: MUTA_VARIABLE var;
 10064                           ;muta_messages.c: 123: memcpy(var.label, p_buffer, 3);
 10065                           
 10066                           ; BSR set to: 1
 10067                           ;incstack = 0
 10068  009094  0E15               	movlw	low decode_variable@var
 10069  009096  0101               	movlb	1	; () banked
 10070  009098  6F00               	movwf	memcpy@d1& (0+255),b
 10071  00909A  0E01               	movlw	high decode_variable@var
 10072  00909C  0101               	movlb	1	; () banked
 10073  00909E  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 10074  0090A0  C10A  F102         	movff	decode_variable@p_buffer,memcpy@s1
 10075  0090A4  C10B  F103         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 10076  0090A8  0E00               	movlw	0
 10077  0090AA  0101               	movlb	1	; () banked
 10078  0090AC  6F05               	movwf	(memcpy@n+1)& (0+255),b
 10079  0090AE  0E03               	movlw	3
 10080  0090B0  6F04               	movwf	memcpy@n& (0+255),b
 10081  0090B2  EC9E  F053         	call	_memcpy	;wreg free
 10082                           
 10083                           ;muta_messages.c: 124: p_buffer += 3;
 10084  0090B6  0E03               	movlw	3
 10085  0090B8  0101               	movlb	1	; () banked
 10086  0090BA  270A               	addwf	decode_variable@p_buffer& (0+255),f,b
 10087  0090BC  0E00               	movlw	0
 10088  0090BE  230B               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 10089                           
 10090                           ; BSR set to: 1
 10091                           ;muta_messages.c: 126: var.unit = *p_buffer & 0b00000111;
 10092  0090C0  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10093  0090C4  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10094  0090C8  50DF               	movf	indf2,w,c
 10095  0090CA  0B07               	andlw	7
 10096  0090CC  0101               	movlb	1	; () banked
 10097  0090CE  6F1B               	movwf	(decode_variable@var+6)& (0+255),b
 10098                           
 10099                           ; BSR set to: 1
 10100                           ;muta_messages.c: 127: if (*p_buffer & 0b00010000)
 10101  0090D0  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10102  0090D4  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10103  0090D8  0101               	movlb	1	; () banked
 10104  0090DA  A8DF               	btfss	indf2,4,c
 10105  0090DC  D002               	goto	l19616
 10106                           
 10107                           ; BSR set to: 1
 10108                           ;muta_messages.c: 128: var.writable = 1;
 10109  0090DE  0E01               	movlw	1
 10110  0090E0  D001               	goto	L9
 10111  0090E2                     l19616:
 10112                           
 10113                           ; BSR set to: 1
 10114                           ;muta_messages.c: 129: else
 10115                           ;muta_messages.c: 130: var.writable = 0;
 10116  0090E2  0E00               	movlw	0
 10117  0090E4                     L9:
 10118  0090E4  0101               	movlb	1	; () banked
 10119  0090E6  6F1C               	movwf	(decode_variable@var+7)& (0+255),b
 10120                           
 10121                           ; BSR set to: 1
 10122                           ;muta_messages.c: 131: var.type = (*p_buffer++ & 0b11100000) >> 5;
 10123                           
 10124                           ; BSR set to: 1
 10125  0090E8  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10126  0090EC  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10127  0090F0  50DF               	movf	indf2,w,c
 10128  0090F2  0101               	movlb	1	; () banked
 10129  0090F4  6F13               	movwf	??_decode_variable& (0+255),b
 10130  0090F6  0E05               	movlw	5
 10131  0090F8  0101               	movlb	1	; () banked
 10132  0090FA  6F14               	movwf	(??_decode_variable+1)& (0+255),b
 10133  0090FC                     u21385:
 10134  0090FC  0101               	movlb	1	; () banked
 10135  0090FE  90D8               	bcf	status,0,c
 10136  009100  3313               	rrcf	??_decode_variable& (0+255),f,b
 10137  009102  0101               	movlb	1	; () banked
 10138  009104  2F14               	decfsz	(??_decode_variable+1)& (0+255),f,b
 10139  009106  D7FA               	goto	u21385
 10140  009108  0101               	movlb	1	; () banked
 10141  00910A  5113               	movf	??_decode_variable& (0+255),w,b
 10142  00910C  0B07               	andlw	7
 10143  00910E  0101               	movlb	1	; () banked
 10144  009110  6F18               	movwf	(decode_variable@var+3)& (0+255),b
 10145                           
 10146                           ; BSR set to: 1
 10147  009112  0101               	movlb	1	; () banked
 10148  009114  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10149  009116  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10150                           
 10151                           ; BSR set to: 1
 10152                           ;muta_messages.c: 132: var.value_byte1 = *p_buffer++;
 10153  009118  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10154  00911C  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10155  009120  50DF               	movf	indf2,w,c
 10156  009122  0101               	movlb	1	; () banked
 10157  009124  6F19               	movwf	(decode_variable@var+4)& (0+255),b
 10158                           
 10159                           ; BSR set to: 1
 10160  009126  0101               	movlb	1	; () banked
 10161  009128  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10162  00912A  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10163                           
 10164                           ;muta_messages.c: 133: if ((var.type == 1) || (var.type == 2))
 10165  00912C  0101               	movlb	1	; () banked
 10166  00912E  0518               	decf	(decode_variable@var+3)& (0+255),w,b
 10167  009130  B4D8               	btfsc	status,2,c
 10168  009132  D005               	goto	l19628
 10169                           
 10170                           ; BSR set to: 1
 10171  009134  0E02               	movlw	2
 10172  009136  0101               	movlb	1	; () banked
 10173  009138  1918               	xorwf	(decode_variable@var+3)& (0+255),w,b
 10174  00913A  A4D8               	btfss	status,2,c
 10175  00913C  D00C               	goto	l19634
 10176  00913E                     l19628:
 10177                           
 10178                           ; BSR set to: 1
 10179                           ;muta_messages.c: 134: {
 10180                           ;muta_messages.c: 135: var.value_byte2 = *p_buffer++;
 10181  00913E  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 10182  009142  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 10183  009146  50DF               	movf	indf2,w,c
 10184  009148  0101               	movlb	1	; () banked
 10185  00914A  6F1A               	movwf	(decode_variable@var+5)& (0+255),b
 10186                           
 10187                           ; BSR set to: 1
 10188  00914C  0101               	movlb	1	; () banked
 10189  00914E  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 10190  009150  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 10191                           
 10192                           ; BSR set to: 1
 10193                           ;muta_messages.c: 136: var.size = 6;
 10194  009152  0E06               	movlw	6
 10195  009154  D001               	goto	L10
 10196  009156                     l19634:
 10197                           
 10198                           ; BSR set to: 1
 10199                           ;muta_messages.c: 138: else
 10200                           ;muta_messages.c: 139: var.size = 5;
 10201  009156  0E05               	movlw	5
 10202  009158                     L10:
 10203  009158  0101               	movlb	1	; () banked
 10204  00915A  6F1D               	movwf	(decode_variable@var+8)& (0+255),b
 10205                           
 10206                           ; BSR set to: 1
 10207                           ;muta_messages.c: 140: return var;
 10208                           
 10209                           ; BSR set to: 1
 10210  00915C  EE21  F015         	lfsr	2,decode_variable@var
 10211  009160  EE01  F00A         	lfsr	0,?_decode_variable
 10212  009164  0E08               	movlw	8
 10213  009166                     u21411:
 10214  009166  CFDB FFEB          	movff	plusw2,plusw0
 10215  00916A  06E8               	decf	wreg,f,c
 10216  00916C  E2FC               	bc	u21411
 10217  00916E  0012               	return	
 10218  009170                     __end_of_decode_variable:
 10219                           	opt stack 0
 10220                           tblptru	equ	0xFF8
 10221                           tblptrh	equ	0xFF7
 10222                           tblptrl	equ	0xFF6
 10223                           tablat	equ	0xFF5
 10224                           prodh	equ	0xFF4
 10225                           prodl	equ	0xFF3
 10226                           postinc0	equ	0xFEE
 10227                           plusw0	equ	0xFEB
 10228                           wreg	equ	0xFE8
 10229                           postdec1	equ	0xFE5
 10230                           fsr1h	equ	0xFE2
 10231                           fsr1l	equ	0xFE1
 10232                           indf2	equ	0xFDF
 10233                           postinc2	equ	0xFDE
 10234                           postdec2	equ	0xFDD
 10235                           plusw2	equ	0xFDB
 10236                           fsr2h	equ	0xFDA
 10237                           fsr2l	equ	0xFD9
 10238                           status	equ	0xFD8
 10239                           
 10240 ;; *************** function _memcpy *****************
 10241 ;; Defined at:
 10242 ;;		line 11 in file "/opt/microchip/xc8/v1.35/sources/common/memcpy.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  d1              2    0[BANK1 ] PTR void 
 10245 ;;		 -> decode_variable@var(9), m_var(9), m_buffer(32), ReceivedDataBuffer(64), 
 10246 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 10247 ;;  s1              2    2[BANK1 ] PTR const void 
 10248 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 10249 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 10250 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 10251 ;;  n               2    4[BANK1 ] unsigned int 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  s               2    8[BANK1 ] PTR const unsigned char 
 10254 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 10255 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 10256 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 10257 ;;  d               2    6[BANK1 ] PTR unsigned char 
 10258 ;;		 -> decode_variable@var(9), m_var(9), m_buffer(32), ReceivedDataBuffer(64), 
 10259 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  2    0[BANK1 ] PTR void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10269 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10270 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10272 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10273 ;;Total ram usage:       10 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:   16
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_main
 10280 ;;		_send_network_register
 10281 ;;		_send_complete_update
 10282 ;;		_send_writables_update
 10283 ;;		_send_periodic_update
 10284 ;;		_sendHIDBinary
 10285 ;;		_decode_variable
 10286 ;;		_do_NETWORK_REGISTER
 10287 ;;		_do_PING
 10288 ;;		_do_UPDATE
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text22
 10293  00A73C                     __ptext22:
 10294                           	opt stack 0
 10295  00A73C                     _memcpy:
 10296                           	opt stack 12
 10297                           
 10298                           ; BSR set to: 1
 10299                           ;incstack = 0
 10300  00A73C  C102  F108         	movff	memcpy@s1,memcpy@s
 10301  00A740  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
 10302  00A744  C100  F106         	movff	memcpy@d1,memcpy@d
 10303  00A748  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
 10304  00A74C  D01C               	goto	l17748
 10305  00A74E                     l17742:
 10306  00A74E  C108  FFF6         	movff	memcpy@s,tblptrl
 10307  00A752  C109  FFF7         	movff	memcpy@s+1,tblptrh
 10308  00A756  0E00               	movlw	low (__mediumconst shr (0+16))
 10309  00A758  6EF8               	movwf	tblptru,c
 10310  00A75A  C106  FFD9         	movff	memcpy@d,fsr2l
 10311  00A75E  C107  FFDA         	movff	memcpy@d+1,fsr2h
 10312  00A762  0E0E               	movlw	(high __ramtop+-1)
 10313  00A764  64F7               	cpfsgt	tblptrh,c
 10314  00A766  D003               	bra	u19377
 10315  00A768  0008               	tblrd		*
 10316  00A76A  50F5               	movf	tablat,w,c
 10317  00A76C  D005               	bra	u19370
 10318  00A76E                     u19377:
 10319  00A76E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10320  00A772  CFF7 FFEA          	movff	tblptrh,fsr0h
 10321  00A776  50EF               	movf	indf0,w,c
 10322  00A778                     u19370:
 10323  00A778  6EDF               	movwf	indf2,c
 10324  00A77A  0101               	movlb	1	; () banked
 10325  00A77C  4B08               	infsnz	memcpy@s& (0+255),f,b
 10326  00A77E  2B09               	incf	(memcpy@s+1)& (0+255),f,b
 10327                           
 10328                           ; BSR set to: 1
 10329  00A780  0101               	movlb	1	; () banked
 10330  00A782  4B06               	infsnz	memcpy@d& (0+255),f,b
 10331  00A784  2B07               	incf	(memcpy@d+1)& (0+255),f,b
 10332  00A786                     l17748:
 10333  00A786  0101               	movlb	1	; () banked
 10334  00A788  0704               	decf	memcpy@n& (0+255),f,b
 10335  00A78A  A0D8               	btfss	status,0,c
 10336  00A78C  0705               	decf	(memcpy@n+1)& (0+255),f,b
 10337  00A78E  0101               	movlb	1	; () banked
 10338  00A790  2904               	incf	memcpy@n& (0+255),w,b
 10339  00A792  E1DD               	bnz	l17742
 10340  00A794  0101               	movlb	1	; () banked
 10341  00A796  2905               	incf	(memcpy@n+1)& (0+255),w,b
 10342  00A798  B4D8               	btfsc	status,2,c
 10343  00A79A  0012               	return	
 10344  00A79C  D7D8               	goto	l17742
 10345  00A79E                     __end_of_memcpy:
 10346                           	opt stack 0
 10347                           tblptru	equ	0xFF8
 10348                           tblptrh	equ	0xFF7
 10349                           tblptrl	equ	0xFF6
 10350                           tablat	equ	0xFF5
 10351                           prodh	equ	0xFF4
 10352                           prodl	equ	0xFF3
 10353                           indf0	equ	0xFEF
 10354                           postinc0	equ	0xFEE
 10355                           plusw0	equ	0xFEB
 10356                           fsr0h	equ	0xFEA
 10357                           fsr0l	equ	0xFE9
 10358                           wreg	equ	0xFE8
 10359                           postdec1	equ	0xFE5
 10360                           fsr1h	equ	0xFE2
 10361                           fsr1l	equ	0xFE1
 10362                           indf2	equ	0xFDF
 10363                           postinc2	equ	0xFDE
 10364                           postdec2	equ	0xFDD
 10365                           plusw2	equ	0xFDB
 10366                           fsr2h	equ	0xFDA
 10367                           fsr2l	equ	0xFD9
 10368                           status	equ	0xFD8
 10369                           
 10370 ;; *************** function _dBm_to_mW *****************
 10371 ;; Defined at:
 10372 ;;		line 14 in file "../../muta/muta_messages.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  power           1    wreg     unsigned char 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;  power           1    2[BANK1 ] unsigned char 
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  2    0[BANK1 ] PTR const unsigned char 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2, status,0
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10386 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10387 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10389 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10390 ;;Total ram usage:        3 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:   16
 10393 ;; This function calls:
 10394 ;;		Nothing
 10395 ;; This function is called by:
 10396 ;;		_main
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text23
 10401  00987C                     __ptext23:
 10402                           	opt stack 0
 10403  00987C                     _dBm_to_mW:
 10404                           	opt stack 14
 10405                           
 10406                           ; BSR set to: 1
 10407                           ;incstack = 0
 10408                           ;dBm_to_mW@power stored from wreg
 10409  00987C  0101               	movlb	1	; () banked
 10410  00987E  6F02               	movwf	dBm_to_mW@power& (0+255),b
 10411                           
 10412                           ;muta_messages.c: 16: switch(power)
 10413  009880  D03F               	goto	l19604
 10414  009882                     l19566:
 10415                           
 10416                           ;muta_messages.c: 19: return TX_POWER_13_DB_MW;
 10417  009882  0EB6               	movlw	low _TX_POWER_13_DB_MW
 10418  009884  0101               	movlb	1	; () banked
 10419  009886  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10420  009888  0E21               	movlw	high _TX_POWER_13_DB_MW
 10421  00988A  0101               	movlb	1	; () banked
 10422  00988C  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10423                           
 10424                           ; BSR set to: 1
 10425  00988E  0012               	return	
 10426  009890                     l19570:
 10427                           
 10428                           ; BSR set to: 1
 10429                           ;muta_messages.c: 21: return TX_POWER_10_DB_MW;
 10430  009890  0EB1               	movlw	low _TX_POWER_10_DB_MW
 10431  009892  0101               	movlb	1	; () banked
 10432  009894  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10433  009896  0E21               	movlw	high _TX_POWER_10_DB_MW
 10434  009898  0101               	movlb	1	; () banked
 10435  00989A  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10436                           
 10437                           ; BSR set to: 1
 10438  00989C  0012               	return	
 10439  00989E                     l19574:
 10440                           
 10441                           ; BSR set to: 1
 10442                           ;muta_messages.c: 23: return TX_POWER_7_DB_MW;
 10443  00989E  0EC7               	movlw	low _TX_POWER_7_DB_MW
 10444  0098A0  0101               	movlb	1	; () banked
 10445  0098A2  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10446  0098A4  0E21               	movlw	high _TX_POWER_7_DB_MW
 10447  0098A6  0101               	movlb	1	; () banked
 10448  0098A8  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10449                           
 10450                           ; BSR set to: 1
 10451  0098AA  0012               	return	
 10452  0098AC                     l19578:
 10453                           
 10454                           ; BSR set to: 1
 10455                           ;muta_messages.c: 25: return TX_POWER_4_DB_MW;
 10456  0098AC  0E9F               	movlw	low _TX_POWER_4_DB_MW
 10457  0098AE  0101               	movlb	1	; () banked
 10458  0098B0  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10459  0098B2  0E21               	movlw	high _TX_POWER_4_DB_MW
 10460  0098B4  0101               	movlb	1	; () banked
 10461  0098B6  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10462                           
 10463                           ; BSR set to: 1
 10464  0098B8  0012               	return	
 10465  0098BA                     l19582:
 10466                           
 10467                           ; BSR set to: 1
 10468                           ;muta_messages.c: 27: return TX_POWER_1_DB_MW;
 10469  0098BA  0E99               	movlw	low _TX_POWER_1_DB_MW
 10470  0098BC  0101               	movlb	1	; () banked
 10471  0098BE  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10472  0098C0  0E21               	movlw	high _TX_POWER_1_DB_MW
 10473  0098C2  0101               	movlb	1	; () banked
 10474  0098C4  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10475                           
 10476                           ; BSR set to: 1
 10477  0098C6  0012               	return	
 10478  0098C8                     l19586:
 10479                           
 10480                           ; BSR set to: 1
 10481                           ;muta_messages.c: 29: return TX_POWER_N_2_DB_MW;
 10482  0098C8  0EA5               	movlw	low _TX_POWER_N_2_DB_MW
 10483  0098CA  0101               	movlb	1	; () banked
 10484  0098CC  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10485  0098CE  0E21               	movlw	high _TX_POWER_N_2_DB_MW
 10486  0098D0  0101               	movlb	1	; () banked
 10487  0098D2  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10488                           
 10489                           ; BSR set to: 1
 10490  0098D4  0012               	return	
 10491  0098D6                     l19590:
 10492                           
 10493                           ; BSR set to: 1
 10494                           ;muta_messages.c: 31: return TX_POWER_N_5_DB_MW;
 10495  0098D6  0EAB               	movlw	low _TX_POWER_N_5_DB_MW
 10496  0098D8  0101               	movlb	1	; () banked
 10497  0098DA  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10498  0098DC  0E21               	movlw	high _TX_POWER_N_5_DB_MW
 10499  0098DE  0101               	movlb	1	; () banked
 10500  0098E0  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10501                           
 10502                           ; BSR set to: 1
 10503  0098E2  0012               	return	
 10504  0098E4                     l19594:
 10505                           
 10506                           ; BSR set to: 1
 10507                           ;muta_messages.c: 33: return TX_POWER_N_8_DB_MW;
 10508  0098E4  0E92               	movlw	low _TX_POWER_N_8_DB_MW
 10509  0098E6  0101               	movlb	1	; () banked
 10510  0098E8  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10511  0098EA  0E21               	movlw	high _TX_POWER_N_8_DB_MW
 10512  0098EC  0101               	movlb	1	; () banked
 10513  0098EE  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10514                           
 10515                           ; BSR set to: 1
 10516  0098F0  0012               	return	
 10517  0098F2                     l19598:
 10518                           
 10519                           ; BSR set to: 1
 10520                           ;muta_messages.c: 35: return TX_POWER_INVALID;
 10521  0098F2  0E89               	movlw	low _TX_POWER_INVALID
 10522  0098F4  0101               	movlb	1	; () banked
 10523  0098F6  6F00               	movwf	?_dBm_to_mW& (0+255),b
 10524  0098F8  0E21               	movlw	high _TX_POWER_INVALID
 10525  0098FA  0101               	movlb	1	; () banked
 10526  0098FC  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 10527                           
 10528                           ; BSR set to: 1
 10529                           ;muta_messages.c: 36: }
 10530                           
 10531                           ; BSR set to: 1
 10532  0098FE  0012               	return	
 10533  009900                     l19604:
 10534  009900  0101               	movlb	1	; () banked
 10535  009902  5102               	movf	dBm_to_mW@power& (0+255),w,b
 10536                           
 10537                           ; Switch size 1, requested type "space"
 10538                           ; Number of cases is 8, Range of values is 0 to 7
 10539                           ; switch strategies available:
 10540                           ; Name         Instructions Cycles
 10541                           ; simple_byte           25    13 (average)
 10542                           ;	Chosen strategy is simple_byte
 10543  009904  0A00               	xorlw	0	; case 0
 10544  009906  B4D8               	btfsc	status,2,c
 10545  009908  D7BC               	goto	l19566
 10546  00990A  0A01               	xorlw	1	; case 1
 10547  00990C  B4D8               	btfsc	status,2,c
 10548  00990E  D7C0               	goto	l19570
 10549  009910  0A03               	xorlw	3	; case 2
 10550  009912  B4D8               	btfsc	status,2,c
 10551  009914  D7C4               	goto	l19574
 10552  009916  0A01               	xorlw	1	; case 3
 10553  009918  B4D8               	btfsc	status,2,c
 10554  00991A  D7C8               	goto	l19578
 10555  00991C  0A07               	xorlw	7	; case 4
 10556  00991E  B4D8               	btfsc	status,2,c
 10557  009920  D7CC               	goto	l19582
 10558  009922  0A01               	xorlw	1	; case 5
 10559  009924  B4D8               	btfsc	status,2,c
 10560  009926  D7D0               	goto	l19586
 10561  009928  0A03               	xorlw	3	; case 6
 10562  00992A  B4D8               	btfsc	status,2,c
 10563  00992C  D7D4               	goto	l19590
 10564  00992E  0A01               	xorlw	1	; case 7
 10565  009930  B4D8               	btfsc	status,2,c
 10566  009932  D7D8               	goto	l19594
 10567  009934  D7DE               	goto	l19598
 10568  009936                     __end_of_dBm_to_mW:
 10569                           	opt stack 0
 10570                           tblptru	equ	0xFF8
 10571                           tblptrh	equ	0xFF7
 10572                           tblptrl	equ	0xFF6
 10573                           tablat	equ	0xFF5
 10574                           prodh	equ	0xFF4
 10575                           prodl	equ	0xFF3
 10576                           indf0	equ	0xFEF
 10577                           postinc0	equ	0xFEE
 10578                           plusw0	equ	0xFEB
 10579                           fsr0h	equ	0xFEA
 10580                           fsr0l	equ	0xFE9
 10581                           wreg	equ	0xFE8
 10582                           postdec1	equ	0xFE5
 10583                           fsr1h	equ	0xFE2
 10584                           fsr1l	equ	0xFE1
 10585                           indf2	equ	0xFDF
 10586                           postinc2	equ	0xFDE
 10587                           postdec2	equ	0xFDD
 10588                           plusw2	equ	0xFDB
 10589                           fsr2h	equ	0xFDA
 10590                           fsr2l	equ	0xFD9
 10591                           status	equ	0xFD8
 10592                           
 10593 ;; *************** function _USBDeviceInit *****************
 10594 ;; Defined at:
 10595 ;;		line 298 in file "src/usb/usb_device.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;		None
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  i               1    8[BANK1 ] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;		None               void
 10602 ;; Registers used:
 10603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10610 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10612 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10613 ;;Total ram usage:        1 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:   17
 10616 ;; This function calls:
 10617 ;;		_memset
 10618 ;; This function is called by:
 10619 ;;		_main
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text24
 10624  0078D8                     __ptext24:
 10625                           	opt stack 0
 10626  0078D8                     _USBDeviceInit:
 10627                           	opt stack 13
 10628                           
 10629                           ;usb_device.c: 300: uint8_t i;
 10630                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 10631                           
 10632                           ; BSR set to: 1
 10633                           ;incstack = 0
 10634  0078D8  98A0               	bcf	4000,4,c	;volatile
 10635                           
 10636                           ;usb_device.c: 305: {UEIR = 0;};
 10637  0078DA  0E00               	movlw	0
 10638  0078DC  6E63               	movwf	3939,c	;volatile
 10639                           
 10640                           ;usb_device.c: 308: {UIR = 0;};
 10641  0078DE  0E00               	movlw	0
 10642  0078E0  6E62               	movwf	3938,c	;volatile
 10643                           
 10644                           ;usb_device.c: 311: UEP0 = 0;
 10645  0078E2  0E00               	movlw	0
 10646  0078E4  010F               	movlb	15	; () banked
 10647  0078E6  6F26               	movwf	38,b	;volatile
 10648                           
 10649                           ; BSR set to: 15
 10650                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 10651  0078E8  0E27               	movlw	39
 10652  0078EA  0101               	movlb	1	; () banked
 10653  0078EC  6F00               	movwf	memset@p1& (0+255),b
 10654  0078EE  0E0F               	movlw	15
 10655  0078F0  0101               	movlb	1	; () banked
 10656  0078F2  6F01               	movwf	(memset@p1+1)& (0+255),b
 10657  0078F4  0E00               	movlw	0
 10658  0078F6  0101               	movlb	1	; () banked
 10659  0078F8  6F03               	movwf	(memset@c+1)& (0+255),b
 10660  0078FA  0E00               	movlw	0
 10661  0078FC  6F02               	movwf	memset@c& (0+255),b
 10662  0078FE  0E00               	movlw	0
 10663  007900  0101               	movlb	1	; () banked
 10664  007902  6F05               	movwf	(memset@n+1)& (0+255),b
 10665  007904  0E01               	movlw	1
 10666  007906  6F04               	movwf	memset@n& (0+255),b
 10667  007908  ECC3  F056         	call	_memset	;wreg free
 10668                           
 10669                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10670  00790C  0E16               	movlw	22
 10671  00790E  010F               	movlb	15	; () banked
 10672  007910  6F39               	movwf	57,b	;volatile
 10673                           
 10674                           ; BSR set to: 15
 10675  007912  0E9F               	movlw	159
 10676  007914  010F               	movlb	15	; () banked
 10677  007916  6F37               	movwf	55,b	;volatile
 10678                           
 10679                           ; BSR set to: 15
 10680  007918  0E7B               	movlw	123
 10681  00791A  010F               	movlb	15	; () banked
 10682  00791C  6F36               	movwf	54,b	;volatile
 10683                           
 10684                           ; BSR set to: 15
 10685                           ;usb_device.c: 318: ;
 10686                           ;usb_device.c: 321: ;
 10687                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 10688  00791E  0E00               	movlw	0
 10689  007920  0101               	movlb	1	; () banked
 10690  007922  6F08               	movwf	USBDeviceInit@i& (0+255),b
 10691  007924                     l19112:
 10692                           
 10693                           ; BSR set to: 1
 10694  007924  0E07               	movlw	7
 10695  007926  0101               	movlb	1	; () banked
 10696  007928  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 10697  00792A  D001               	goto	l19116
 10698  00792C  D010               	goto	l1222
 10699  00792E                     l19116:
 10700                           
 10701                           ; BSR set to: 1
 10702                           ;usb_device.c: 325: {
 10703                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 10704  00792E  0101               	movlb	1	; () banked
 10705  007930  5108               	movf	USBDeviceInit@i& (0+255),w,b
 10706  007932  0D04               	mullw	4
 10707  007934  0E00               	movlw	0
 10708  007936  24F3               	addwf	prodl,w,c
 10709  007938  6ED9               	movwf	fsr2l,c
 10710  00793A  0E0D               	movlw	13
 10711  00793C  20F4               	addwfc	prodh,w,c
 10712  00793E  6EDA               	movwf	fsr2h,c
 10713  007940  6ADE               	clrf	postinc2,c
 10714  007942  6ADE               	clrf	postinc2,c
 10715  007944  6ADE               	clrf	postinc2,c
 10716  007946  6ADD               	clrf	postdec2,c
 10717                           
 10718                           ; BSR set to: 1
 10719  007948  0101               	movlb	1	; () banked
 10720  00794A  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 10721  00794C  D7EB               	goto	l19112
 10722  00794E                     l1222:
 10723                           
 10724                           ; BSR set to: 1
 10725                           ;usb_device.c: 327: }
 10726                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 10727  00794E  8C65               	bsf	3941,6,c	;volatile
 10728                           
 10729                           ; BSR set to: 1
 10730                           ;usb_device.c: 333: UADDR = 0x00;
 10731  007950  0E00               	movlw	0
 10732  007952  010F               	movlb	15	; () banked
 10733  007954  6F38               	movwf	56,b	;volatile
 10734                           
 10735                           ; BSR set to: 15
 10736                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 10737  007956  9865               	bcf	3941,4,c	;volatile
 10738                           
 10739                           ; BSR set to: 15
 10740                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 10741  007958  9C65               	bcf	3941,6,c	;volatile
 10742                           
 10743                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 10744  00795A  D00C               	goto	l19136
 10745  00795C                     l19128:
 10746                           
 10747                           ;usb_device.c: 343: {
 10748                           ;usb_device.c: 344: (UIR &= 0xF7);
 10749  00795C  9662               	bcf	3938,3,c	;volatile
 10750                           
 10751                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 10752  00795E  0E00               	movlw	0
 10753  007960  0100               	movlb	0	; () banked
 10754  007962  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 10758  007964  0E00               	movlw	0
 10759  007966  0100               	movlb	0	; () banked
 10760  007968  6FA6               	movwf	(_outPipes+3)& (0+255),b	;volatile
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 10764  00796A  0E00               	movlw	0
 10765  00796C  0100               	movlb	0	; () banked
 10766  00796E  6FA8               	movwf	(_outPipes+5)& (0+255),b	;volatile
 10767  007970  0E00               	movlw	0
 10768  007972  6FA7               	movwf	(_outPipes+4)& (0+255),b	;volatile
 10769  007974                     l19136:
 10770  007974  B662               	btfsc	3938,3,c	;volatile
 10771  007976  D7F2               	goto	l19128
 10772                           
 10773                           ;usb_device.c: 349: }
 10774                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 10775  007978  0E01               	movlw	1
 10776  00797A  6E4A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10777                           
 10778                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 10779  00797C  0E01               	movlw	1
 10780  00797E  6E4B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10781                           
 10782                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 10783  007980  0E00               	movlw	0
 10784  007982  6E46               	movwf	_USBDeferINDataStagePackets,c	;volatile
 10785                           
 10786                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 10787  007984  0E00               	movlw	0
 10788  007986  6E47               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 10789                           
 10790                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 10791  007988  0E00               	movlw	0
 10792  00798A  6E45               	movwf	_USBBusIsSuspended,c	;volatile
 10793                           
 10794                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 10795  00798C  0E00               	movlw	0
 10796  00798E  0101               	movlb	1	; () banked
 10797  007990  6F08               	movwf	USBDeviceInit@i& (0+255),b
 10798  007992                     l19140:
 10799                           
 10800                           ; BSR set to: 1
 10801  007992  0E01               	movlw	1
 10802  007994  0101               	movlb	1	; () banked
 10803  007996  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 10804  007998  D001               	goto	l19144
 10805  00799A  D033               	goto	l19150
 10806  00799C                     l19144:
 10807                           
 10808                           ; BSR set to: 1
 10809                           ;usb_device.c: 363: {
 10810                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 10811  00799C  0101               	movlb	1	; () banked
 10812  00799E  5108               	movf	USBDeviceInit@i& (0+255),w,b
 10813  0079A0  0D02               	mullw	2
 10814  0079A2  0ECE               	movlw	low _pBDTEntryIn
 10815  0079A4  24F3               	addwf	prodl,w,c
 10816  0079A6  6ED9               	movwf	fsr2l,c
 10817  0079A8  0E00               	movlw	high _pBDTEntryIn
 10818  0079AA  20F4               	addwfc	prodh,w,c
 10819  0079AC  6EDA               	movwf	fsr2h,c
 10820  0079AE  0E00               	movlw	0
 10821  0079B0  6EDE               	movwf	postinc2,c
 10822  0079B2  0E00               	movlw	0
 10823  0079B4  6EDD               	movwf	postdec2,c
 10824                           
 10825                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 10826  0079B6  0101               	movlb	1	; () banked
 10827  0079B8  5108               	movf	USBDeviceInit@i& (0+255),w,b
 10828  0079BA  0D02               	mullw	2
 10829  0079BC  0ED2               	movlw	low _pBDTEntryOut
 10830  0079BE  24F3               	addwf	prodl,w,c
 10831  0079C0  6ED9               	movwf	fsr2l,c
 10832  0079C2  0E00               	movlw	high _pBDTEntryOut
 10833  0079C4  20F4               	addwfc	prodh,w,c
 10834  0079C6  6EDA               	movwf	fsr2h,c
 10835  0079C8  0E00               	movlw	0
 10836  0079CA  6EDE               	movwf	postinc2,c
 10837  0079CC  0E00               	movlw	0
 10838  0079CE  6EDD               	movwf	postdec2,c
 10839                           
 10840                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 10841  0079D0  0101               	movlb	1	; () banked
 10842  0079D2  5108               	movf	USBDeviceInit@i& (0+255),w,b
 10843  0079D4  0D01               	mullw	1
 10844  0079D6  0ED8               	movlw	low _ep_data_in
 10845  0079D8  24F3               	addwf	prodl,w,c
 10846  0079DA  6ED9               	movwf	fsr2l,c
 10847  0079DC  0E00               	movlw	high _ep_data_in
 10848  0079DE  20F4               	addwfc	prodh,w,c
 10849  0079E0  6EDA               	movwf	fsr2h,c
 10850  0079E2  0E00               	movlw	0
 10851  0079E4  6EDF               	movwf	indf2,c
 10852                           
 10853                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 10854  0079E6  0101               	movlb	1	; () banked
 10855  0079E8  5108               	movf	USBDeviceInit@i& (0+255),w,b
 10856  0079EA  0D01               	mullw	1
 10857  0079EC  0EDA               	movlw	low _ep_data_out
 10858  0079EE  24F3               	addwf	prodl,w,c
 10859  0079F0  6ED9               	movwf	fsr2l,c
 10860  0079F2  0E00               	movlw	high _ep_data_out
 10861  0079F4  20F4               	addwfc	prodh,w,c
 10862  0079F6  6EDA               	movwf	fsr2h,c
 10863  0079F8  0E00               	movlw	0
 10864  0079FA  6EDF               	movwf	indf2,c
 10865                           
 10866                           ; BSR set to: 1
 10867  0079FC  0101               	movlb	1	; () banked
 10868  0079FE  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 10869  007A00  D7C8               	goto	l19140
 10870  007A02                     l19150:
 10871                           
 10872                           ; BSR set to: 1
 10873                           ;usb_device.c: 368: }
 10874                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10875  007A02  0E08               	movlw	8
 10876  007A04  0100               	movlb	0	; () banked
 10877  007A06  6FCE               	movwf	_pBDTEntryIn& (0+255),b
 10878  007A08  0E0D               	movlw	13
 10879  007A0A  0100               	movlb	0	; () banked
 10880  007A0C  6FCF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 10884  007A0E  0E16               	movlw	22
 10885  007A10  010F               	movlb	15	; () banked
 10886  007A12  6F26               	movwf	38,b	;volatile
 10887                           
 10888                           ; BSR set to: 15
 10889                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 10890  007A14  0E0D               	movlw	13
 10891  007A16  010D               	movlb	13	; () banked
 10892  007A18  6F03               	movwf	3,b	;volatile
 10893  007A1A  0E20               	movlw	32
 10894  007A1C  6F02               	movwf	2,b	;volatile
 10895                           
 10896                           ; BSR set to: 13
 10897                           ;usb_device.c: 376: BDT[0].CNT = 8;
 10898  007A1E  0E08               	movlw	8
 10899  007A20  010D               	movlb	13	; () banked
 10900  007A22  6F01               	movwf	1,b	;volatile
 10901                           
 10902                           ; BSR set to: 13
 10903                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 10904  007A24  0E04               	movlw	4
 10905  007A26  010D               	movlb	13	; () banked
 10906  007A28  6F00               	movwf	0,b	;volatile
 10907                           
 10908                           ; BSR set to: 13
 10909                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 10910  007A2A  010D               	movlb	13	; () banked
 10911  007A2C  8F00               	bsf	0,7,b	;volatile
 10912                           
 10913                           ; BSR set to: 13
 10914                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 10915  007A2E  0E00               	movlw	0
 10916  007A30  6E54               	movwf	_USBActiveConfiguration,c	;volatile
 10917                           
 10918                           ; BSR set to: 13
 10919                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 10920  007A32  0E00               	movlw	0
 10921  007A34  6E49               	movwf	_USBDeviceState,c	;volatile
 10922                           
 10923                           ; BSR set to: 13
 10924  007A36  0012               	return		;funcret
 10925  007A38                     __end_of_USBDeviceInit:
 10926                           	opt stack 0
 10927                           tblptru	equ	0xFF8
 10928                           tblptrh	equ	0xFF7
 10929                           tblptrl	equ	0xFF6
 10930                           tablat	equ	0xFF5
 10931                           prodh	equ	0xFF4
 10932                           prodl	equ	0xFF3
 10933                           indf0	equ	0xFEF
 10934                           postinc0	equ	0xFEE
 10935                           plusw0	equ	0xFEB
 10936                           fsr0h	equ	0xFEA
 10937                           fsr0l	equ	0xFE9
 10938                           wreg	equ	0xFE8
 10939                           postdec1	equ	0xFE5
 10940                           fsr1h	equ	0xFE2
 10941                           fsr1l	equ	0xFE1
 10942                           indf2	equ	0xFDF
 10943                           postinc2	equ	0xFDE
 10944                           postdec2	equ	0xFDD
 10945                           plusw2	equ	0xFDB
 10946                           fsr2h	equ	0xFDA
 10947                           fsr2l	equ	0xFD9
 10948                           status	equ	0xFD8
 10949                           
 10950 ;; *************** function _memset *****************
 10951 ;; Defined at:
 10952 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/memset.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;  p1              2    0[BANK1 ] PTR void 
 10955 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 10956 ;;  c               2    2[BANK1 ] int 
 10957 ;;  n               2    4[BANK1 ] unsigned int 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;  p               2    6[BANK1 ] PTR unsigned char 
 10960 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  2    0[BANK1 ] PTR void 
 10963 ;; Registers used:
 10964 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10970 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10971 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10973 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10974 ;;Total ram usage:        8 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; Hardware stack levels required when called:   16
 10977 ;; This function calls:
 10978 ;;		Nothing
 10979 ;; This function is called by:
 10980 ;;		_USBDeviceInit
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text25
 10985  00AD86                     __ptext25:
 10986                           	opt stack 0
 10987  00AD86                     _memset:
 10988                           	opt stack 13
 10989                           
 10990                           ; BSR set to: 13
 10991                           ;incstack = 0
 10992  00AD86  C100  F106         	movff	memset@p1,memset@p
 10993  00AD8A  C101  F107         	movff	memset@p1+1,memset@p+1
 10994  00AD8E  D009               	goto	l17950
 10995  00AD90                     l17946:
 10996  00AD90  C106  FFD9         	movff	memset@p,fsr2l
 10997  00AD94  C107  FFDA         	movff	memset@p+1,fsr2h
 10998  00AD98  C102  FFDF         	movff	memset@c,indf2
 10999  00AD9C  0101               	movlb	1	; () banked
 11000  00AD9E  4B06               	infsnz	memset@p& (0+255),f,b
 11001  00ADA0  2B07               	incf	(memset@p+1)& (0+255),f,b
 11002  00ADA2                     l17950:
 11003  00ADA2  0101               	movlb	1	; () banked
 11004  00ADA4  0704               	decf	memset@n& (0+255),f,b
 11005  00ADA6  A0D8               	btfss	status,0,c
 11006  00ADA8  0705               	decf	(memset@n+1)& (0+255),f,b
 11007  00ADAA  0101               	movlb	1	; () banked
 11008  00ADAC  2904               	incf	memset@n& (0+255),w,b
 11009  00ADAE  E1F0               	bnz	l17946
 11010  00ADB0  0101               	movlb	1	; () banked
 11011  00ADB2  2905               	incf	(memset@n+1)& (0+255),w,b
 11012  00ADB4  B4D8               	btfsc	status,2,c
 11013  00ADB6  0012               	return	
 11014  00ADB8  D7EB               	goto	l17946
 11015  00ADBA                     __end_of_memset:
 11016                           	opt stack 0
 11017                           tblptru	equ	0xFF8
 11018                           tblptrh	equ	0xFF7
 11019                           tblptrl	equ	0xFF6
 11020                           tablat	equ	0xFF5
 11021                           prodh	equ	0xFF4
 11022                           prodl	equ	0xFF3
 11023                           indf0	equ	0xFEF
 11024                           postinc0	equ	0xFEE
 11025                           plusw0	equ	0xFEB
 11026                           fsr0h	equ	0xFEA
 11027                           fsr0l	equ	0xFE9
 11028                           wreg	equ	0xFE8
 11029                           postdec1	equ	0xFE5
 11030                           fsr1h	equ	0xFE2
 11031                           fsr1l	equ	0xFE1
 11032                           indf2	equ	0xFDF
 11033                           postinc2	equ	0xFDE
 11034                           postdec2	equ	0xFDD
 11035                           plusw2	equ	0xFDB
 11036                           fsr2h	equ	0xFDA
 11037                           fsr2l	equ	0xFD9
 11038                           status	equ	0xFD8
 11039                           
 11040 ;; *************** function _USBDeviceAttach *****************
 11041 ;; Defined at:
 11042 ;;		line 1352 in file "src/usb/usb_device.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;		None               void
 11049 ;; Registers used:
 11050 ;;		wreg, status,2
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11060 ;;Total ram usage:        0 bytes
 11061 ;; Hardware stack levels used:    1
 11062 ;; Hardware stack levels required when called:   16
 11063 ;; This function calls:
 11064 ;;		Nothing
 11065 ;; This function is called by:
 11066 ;;		_main
 11067 ;; This function uses a non-reentrant model
 11068 ;;
 11069                           
 11070                           	psect	text26
 11071  00ACA8                     __ptext26:
 11072                           	opt stack 0
 11073  00ACA8                     _USBDeviceAttach:
 11074                           	opt stack 14
 11075                           
 11076                           ;usb_device.c: 1356: {
 11077                           ;usb_device.c: 1357: if(1 == 1)
 11078                           
 11079                           ; BSR set to: 1
 11080                           ;incstack = 0
 11081  00ACA8  5049               	movf	_USBDeviceState,w,c	;volatile
 11082  00ACAA  A4D8               	btfss	status,2,c
 11083  00ACAC  0012               	return	
 11084                           
 11085                           ;usb_device.c: 1358: {
 11086                           ;usb_device.c: 1360: UCON = 0;
 11087  00ACAE  0E00               	movlw	0
 11088  00ACB0  6E65               	movwf	3941,c	;volatile
 11089                           
 11090                           ;usb_device.c: 1363: UIE = 0;
 11091  00ACB2  0E00               	movlw	0
 11092  00ACB4  010F               	movlb	15	; () banked
 11093  00ACB6  6F36               	movwf	54,b	;volatile
 11094                           
 11095                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 11096  00ACB8  0E16               	movlw	22
 11097  00ACBA  010F               	movlb	15	; () banked
 11098  00ACBC  6F39               	movwf	57,b	;volatile
 11099  00ACBE  0E9F               	movlw	159
 11100  00ACC0  010F               	movlb	15	; () banked
 11101  00ACC2  6F37               	movwf	55,b	;volatile
 11102  00ACC4  0E7B               	movlw	123
 11103  00ACC6  010F               	movlb	15	; () banked
 11104  00ACC8  6F36               	movwf	54,b	;volatile
 11105                           
 11106                           ; BSR set to: 15
 11107                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 0; PIE2bits.USBIE = 1;INTCONbit
      +                          s.GIEL = 1;INTCONbits.GIEH = 1;};
 11108  00ACCA  8ED0               	bsf	4048,7,c	;volatile
 11109                           
 11110                           ; BSR set to: 15
 11111  00ACCC  98A2               	bcf	4002,4,c	;volatile
 11112                           
 11113                           ; BSR set to: 15
 11114  00ACCE  88A0               	bsf	4000,4,c	;volatile
 11115                           
 11116                           ; BSR set to: 15
 11117  00ACD0  8CF2               	bsf	intcon,6,c	;volatile
 11118                           
 11119                           ; BSR set to: 15
 11120  00ACD2  8EF2               	bsf	intcon,7,c	;volatile
 11121                           
 11122                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 11123  00ACD4  D001               	goto	l1283
 11124  00ACD6                     l1284:
 11125  00ACD6  8665               	bsf	3941,3,c	;volatile
 11126  00ACD8                     l1283:
 11127  00ACD8  A665               	btfss	3941,3,c	;volatile
 11128  00ACDA  D7FD               	goto	l1284
 11129                           
 11130                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 11131  00ACDC  0E01               	movlw	1
 11132  00ACDE  6E49               	movwf	_USBDeviceState,c	;volatile
 11133  00ACE0  0012               	return	
 11134  00ACE2                     __end_of_USBDeviceAttach:
 11135                           	opt stack 0
 11136                           tblptru	equ	0xFF8
 11137                           tblptrh	equ	0xFF7
 11138                           tblptrl	equ	0xFF6
 11139                           tablat	equ	0xFF5
 11140                           prodh	equ	0xFF4
 11141                           prodl	equ	0xFF3
 11142                           intcon	equ	0xFF2
 11143                           indf0	equ	0xFEF
 11144                           postinc0	equ	0xFEE
 11145                           plusw0	equ	0xFEB
 11146                           fsr0h	equ	0xFEA
 11147                           fsr0l	equ	0xFE9
 11148                           wreg	equ	0xFE8
 11149                           postdec1	equ	0xFE5
 11150                           fsr1h	equ	0xFE2
 11151                           fsr1l	equ	0xFE1
 11152                           indf2	equ	0xFDF
 11153                           postinc2	equ	0xFDE
 11154                           postdec2	equ	0xFDD
 11155                           plusw2	equ	0xFDB
 11156                           fsr2h	equ	0xFDA
 11157                           fsr2l	equ	0xFD9
 11158                           status	equ	0xFD8
 11159                           
 11160 ;; *************** function _SYSTEM_Initialize *****************
 11161 ;; Defined at:
 11162 ;;		line 60 in file "src/18F27J53/system.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;		None
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;  pll_startup_    2    0[BANK1 ] unsigned int 
 11167 ;; Return value:  Size  Location     Type
 11168 ;;		None               void
 11169 ;; Registers used:
 11170 ;;		wreg, status,2, status,0, cstack
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11177 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11179 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11180 ;;Total ram usage:        2 bytes
 11181 ;; Hardware stack levels used:    1
 11182 ;; Hardware stack levels required when called:   17
 11183 ;; This function calls:
 11184 ;;		_RtccWrOn
 11185 ;; This function is called by:
 11186 ;;		_main
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text27
 11191  0080A8                     __ptext27:
 11192                           	opt stack 0
 11193  0080A8                     _SYSTEM_Initialize:
 11194                           	opt stack 13
 11195                           
 11196                           ;system.c: 64: unsigned int pll_startup_counter = 600;
 11197                           
 11198                           ;incstack = 0
 11199  0080A8  0E02               	movlw	2
 11200  0080AA  0101               	movlb	1	; () banked
 11201  0080AC  6F01               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 11202  0080AE  0E58               	movlw	88
 11203  0080B0  6F00               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 11204                           
 11205                           ; BSR set to: 1
 11206                           ;system.c: 65: OSCTUNEbits.PLLEN = 1;
 11207  0080B2  8C9B               	bsf	3995,6,c	;volatile
 11208  0080B4                     l18176:
 11209                           
 11210                           ; BSR set to: 1
 11211  0080B4  0101               	movlb	1	; () banked
 11212  0080B6  0700               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 11213  0080B8  A0D8               	btfss	status,0,c
 11214  0080BA  0701               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 11215  0080BC  0101               	movlb	1	; () banked
 11216  0080BE  2900               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 11217  0080C0  E1F9               	bnz	l18176
 11218  0080C2  0101               	movlb	1	; () banked
 11219  0080C4  2901               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 11220  0080C6  A4D8               	btfss	status,2,c
 11221  0080C8  D7F5               	goto	l18176
 11222                           
 11223                           ; BSR set to: 1
 11224                           ;system.c: 74: TRISA = 0;
 11225                           
 11226                           ; BSR set to: 1
 11227  0080CA  0E00               	movlw	0
 11228  0080CC  6E92               	movwf	3986,c	;volatile
 11229                           
 11230                           ;system.c: 75: TRISB = 0;
 11231  0080CE  0E00               	movlw	0
 11232  0080D0  6E93               	movwf	3987,c	;volatile
 11233                           
 11234                           ;system.c: 76: TRISC = 0;
 11235  0080D2  0E00               	movlw	0
 11236  0080D4  6E94               	movwf	3988,c	;volatile
 11237                           
 11238                           ; BSR set to: 1
 11239                           ;system.c: 78: LATCbits.LATC0 = 1;
 11240  0080D6  808B               	bsf	3979,0,c	;volatile
 11241                           
 11242                           ;system.c: 83: RTCCFG = 0x0;
 11243  0080D8  0E00               	movlw	0
 11244  0080DA  010F               	movlb	15	; () banked
 11245  0080DC  6F3F               	movwf	63,b	;volatile
 11246                           
 11247                           ;system.c: 84: RTCCAL = 0x00;
 11248  0080DE  0E00               	movlw	0
 11249  0080E0  010F               	movlb	15	; () banked
 11250  0080E2  6F3E               	movwf	62,b	;volatile
 11251                           
 11252                           ; BSR set to: 15
 11253                           ;system.c: 93: (RTCCFGbits.RTCWREN = 0);
 11254  0080E4  010F               	movlb	15	; () banked
 11255  0080E6  9B3F               	bcf	63,5,b	;volatile
 11256                           
 11257                           ; BSR set to: 15
 11258                           ;system.c: 94: RtccWrOn();
 11259  0080E8  ECA4  F057         	call	_RtccWrOn	;wreg free
 11260                           
 11261                           ;system.c: 95: (RTCCFGbits.RTCEN=1);
 11262  0080EC  010F               	movlb	15	; () banked
 11263  0080EE  8F3F               	bsf	63,7,b	;volatile
 11264                           
 11265                           ; BSR set to: 15
 11266                           ;system.c: 96: (ALRMCFGbits.ALRMEN=1);
 11267  0080F0  010F               	movlb	15	; () banked
 11268  0080F2  8F47               	bsf	71,7,b	;volatile
 11269                           
 11270                           ; BSR set to: 15
 11271                           ;system.c: 97: RTCCFGbits.RTCPTR0 = 0;
 11272  0080F4  010F               	movlb	15	; () banked
 11273  0080F6  913F               	bcf	63,0,b	;volatile
 11274                           
 11275                           ; BSR set to: 15
 11276                           ;system.c: 98: RTCCFGbits.RTCPTR1 = 0;
 11277  0080F8  010F               	movlb	15	; () banked
 11278  0080FA  933F               	bcf	63,1,b	;volatile
 11279                           
 11280                           ; BSR set to: 15
 11281                           ;system.c: 99: RTCVALHbits.RTCVALH = 0x00;
 11282  0080FC  0E00               	movlw	0
 11283  0080FE  010F               	movlb	15	; () banked
 11284  008100  6F3B               	movwf	59,b	;volatile
 11285                           
 11286                           ; BSR set to: 15
 11287                           ;system.c: 100: RTCVALLbits.RTCVALL = 0x00;
 11288  008102  0E00               	movlw	0
 11289  008104  010F               	movlb	15	; () banked
 11290  008106  6F3A               	movwf	58,b	;volatile
 11291                           
 11292                           ; BSR set to: 15
 11293                           ;system.c: 102: ALRMCFGbits.AMASK = 0b0011;
 11294  008108  010F               	movlb	15	; () banked
 11295  00810A  5147               	movf	71,w,b	;volatile
 11296  00810C  0BC3               	andlw	-61
 11297  00810E  090C               	iorlw	12
 11298  008110  6F47               	movwf	71,b	;volatile
 11299                           
 11300                           ; BSR set to: 15
 11301                           ;system.c: 104: ALRMCFGbits.CHIME = 1;
 11302  008112  010F               	movlb	15	; () banked
 11303  008114  8D47               	bsf	71,6,b	;volatile
 11304                           
 11305                           ; BSR set to: 15
 11306                           ;system.c: 105: ALRMCFGbits.ALRMEN = 1;
 11307  008116  010F               	movlb	15	; () banked
 11308  008118  8F47               	bsf	71,7,b	;volatile
 11309                           
 11310                           ; BSR set to: 15
 11311                           ;system.c: 106: (RTCCFGbits.RTCWREN = 0);
 11312  00811A  010F               	movlb	15	; () banked
 11313  00811C  9B3F               	bcf	63,5,b	;volatile
 11314                           
 11315                           ; BSR set to: 15
 11316                           ;system.c: 109: IPR3bits.RTCCIP = 0;
 11317  00811E  90A5               	bcf	4005,0,c	;volatile
 11318                           
 11319                           ; BSR set to: 15
 11320                           ;system.c: 110: PIR3bits.RTCCIF = 0;
 11321  008120  90A4               	bcf	4004,0,c	;volatile
 11322                           
 11323                           ; BSR set to: 15
 11324                           ;system.c: 111: PIE3bits.RTCCIE = 1;
 11325  008122  80A3               	bsf	4003,0,c	;volatile
 11326                           
 11327                           ; BSR set to: 15
 11328                           ;system.c: 117: EECON2 = 0x55;
 11329  008124  0E55               	movlw	85
 11330  008126  6EA7               	movwf	4007,c	;volatile
 11331                           
 11332                           ; BSR set to: 15
 11333                           ;system.c: 118: EECON2 = 0xAA;
 11334  008128  0EAA               	movlw	170
 11335  00812A  6EA7               	movwf	4007,c	;volatile
 11336                           
 11337                           ; BSR set to: 15
 11338                           ;system.c: 119: PPSCONbits.IOLOCK = 0;
 11339  00812C  010E               	movlb	14	; () banked
 11340  00812E  91BF               	bcf	191,0,b	;volatile
 11341                           
 11342                           ; BSR set to: 14
 11343                           ;system.c: 122: RPINR1 = 13;
 11344  008130  0E0D               	movlw	13
 11345  008132  010E               	movlb	14	; () banked
 11346  008134  6FE1               	movwf	225,b	;volatile
 11347                           
 11348                           ; BSR set to: 14
 11349                           ;system.c: 123: RPINR21 = 12;
 11350  008136  0E0C               	movlw	12
 11351  008138  010E               	movlb	14	; () banked
 11352  00813A  6FFC               	movwf	252,b	;volatile
 11353                           
 11354                           ; BSR set to: 14
 11355                           ;system.c: 124: RPINR22 = 5;
 11356  00813C  0E05               	movlw	5
 11357  00813E  010E               	movlb	14	; () banked
 11358  008140  6FFD               	movwf	253,b	;volatile
 11359                           
 11360                           ; BSR set to: 14
 11361                           ;system.c: 127: RPOR4 = 10;
 11362  008142  0E0A               	movlw	10
 11363  008144  010E               	movlb	14	; () banked
 11364  008146  6FC4               	movwf	196,b	;volatile
 11365                           
 11366                           ; BSR set to: 14
 11367                           ;system.c: 128: RPOR5 = 11;
 11368  008148  0E0B               	movlw	11
 11369  00814A  010E               	movlb	14	; () banked
 11370  00814C  6FC5               	movwf	197,b	;volatile
 11371                           
 11372                           ; BSR set to: 14
 11373                           ;system.c: 132: RPOR11 = 14;
 11374  00814E  0E0E               	movlw	14
 11375  008150  010E               	movlb	14	; () banked
 11376  008152  6FCB               	movwf	203,b	;volatile
 11377                           
 11378                           ; BSR set to: 14
 11379                           ;system.c: 136: EECON2 = 0x55;
 11380  008154  0E55               	movlw	85
 11381  008156  6EA7               	movwf	4007,c	;volatile
 11382                           
 11383                           ; BSR set to: 14
 11384                           ;system.c: 137: EECON2 = 0xAA;
 11385  008158  0EAA               	movlw	170
 11386  00815A  6EA7               	movwf	4007,c	;volatile
 11387                           
 11388                           ; BSR set to: 14
 11389                           ;system.c: 138: PPSCONbits.IOLOCK = 1;
 11390  00815C  010E               	movlb	14	; () banked
 11391  00815E  81BF               	bsf	191,0,b	;volatile
 11392                           
 11393                           ; BSR set to: 14
 11394                           ;system.c: 147: ANCON0 = 0xFF;
 11395  008160  010F               	movlb	15	; () banked
 11396  008162  6948               	setf	72,b	;volatile
 11397                           
 11398                           ; BSR set to: 15
 11399                           ;system.c: 148: ANCON1 = 0x1F;
 11400  008164  0E1F               	movlw	31
 11401  008166  010F               	movlb	15	; () banked
 11402  008168  6F49               	movwf	73,b	;volatile
 11403                           
 11404                           ; BSR set to: 15
 11405                           ;system.c: 151: RTCEN = 0;
 11406  00816A  010F               	movlb	15	; () banked
 11407  00816C  9F3F               	bcf	63,7,b	;volatile
 11408                           
 11409                           ; BSR set to: 15
 11410                           ;system.c: 152: RTCOE = 0;
 11411  00816E  010F               	movlb	15	; () banked
 11412  008170  953F               	bcf	63,2,b	;volatile
 11413                           
 11414                           ; BSR set to: 15
 11415                           ;system.c: 158: RCONbits.IPEN = 1;
 11416  008172  8ED0               	bsf	4048,7,c	;volatile
 11417                           
 11418                           ; BSR set to: 15
 11419                           ;system.c: 164: LATCbits.LATC6 = 1;
 11420  008174  8C8B               	bsf	3979,6,c	;volatile
 11421                           
 11422                           ; BSR set to: 15
 11423                           ;system.c: 165: LATBbits.LATB3 = 1;
 11424  008176  868A               	bsf	3978,3,c	;volatile
 11425                           
 11426                           ; BSR set to: 15
 11427                           ;system.c: 167: TRISCbits.TRISC6 = 0;
 11428  008178  9C94               	bcf	3988,6,c	;volatile
 11429                           
 11430                           ; BSR set to: 15
 11431                           ;system.c: 168: TRISBbits.TRISB3 = 0;
 11432  00817A  9693               	bcf	3987,3,c	;volatile
 11433                           
 11434                           ; BSR set to: 15
 11435                           ;system.c: 171: TRISBbits.TRISB0 = 1;
 11436  00817C  8093               	bsf	3987,0,c	;volatile
 11437                           
 11438                           ; BSR set to: 15
 11439                           ;system.c: 172: TRISCbits.TRISC2 = 1;
 11440  00817E  8494               	bsf	3988,2,c	;volatile
 11441                           
 11442                           ; BSR set to: 15
 11443                           ;system.c: 175: INTCON2bits.INTEDG1 = 1;
 11444  008180  8AF1               	bsf	intcon2,5,c	;volatile
 11445                           
 11446                           ; BSR set to: 15
 11447                           ;system.c: 178: INTCON2bits.INTEDG0 = 1;
 11448  008182  8CF1               	bsf	intcon2,6,c	;volatile
 11449                           
 11450                           ; BSR set to: 15
 11451                           ;system.c: 180: INTCONbits.INT0IF = 0;
 11452  008184  92F2               	bcf	intcon,1,c	;volatile
 11453                           
 11454                           ; BSR set to: 15
 11455                           ;system.c: 181: INTCONbits.INT0IE = 1;
 11456  008186  88F2               	bsf	intcon,4,c	;volatile
 11457                           
 11458                           ; BSR set to: 15
 11459                           ;system.c: 183: INTCON3bits.INT1IF = 0;
 11460  008188  90F0               	bcf	intcon3,0,c	;volatile
 11461                           
 11462                           ; BSR set to: 15
 11463                           ;system.c: 184: INTCON3bits.INT1IP = 1;
 11464  00818A  8CF0               	bsf	intcon3,6,c	;volatile
 11465                           
 11466                           ; BSR set to: 15
 11467                           ;system.c: 185: INTCON3bits.INT1IE = 1;
 11468  00818C  86F0               	bsf	intcon3,3,c	;volatile
 11469                           
 11470                           ; BSR set to: 15
 11471                           ;system.c: 191: TRISCbits.TRISC1 = 1;
 11472  00818E  8294               	bsf	3988,1,c	;volatile
 11473                           
 11474                           ; BSR set to: 15
 11475                           ;system.c: 192: TRISBbits.TRISB1 = 0;
 11476  008190  9293               	bcf	3987,1,c	;volatile
 11477                           
 11478                           ; BSR set to: 15
 11479                           ;system.c: 193: TRISBbits.TRISB2 = 0;
 11480  008192  9493               	bcf	3987,2,c	;volatile
 11481                           
 11482                           ; BSR set to: 15
 11483                           ;system.c: 195: SSP2STAT = 0xC0;
 11484  008194  0EC0               	movlw	192
 11485  008196  6E73               	movwf	3955,c	;volatile
 11486                           
 11487                           ; BSR set to: 15
 11488                           ;system.c: 196: SSP2CON1 = 0x21;
 11489  008198  0E21               	movlw	33
 11490  00819A  6E72               	movwf	3954,c	;volatile
 11491                           
 11492                           ; BSR set to: 15
 11493                           ;system.c: 199: LATAbits.LATA5 = 0;
 11494  00819C  9A89               	bcf	3977,5,c	;volatile
 11495                           
 11496                           ; BSR set to: 15
 11497                           ;system.c: 200: TRISAbits.TRISA5 = 1;
 11498  00819E  8A92               	bsf	3986,5,c	;volatile
 11499                           
 11500                           ; BSR set to: 15
 11501                           ;system.c: 205: INTCONbits.GIEH = 1;
 11502  0081A0  8EF2               	bsf	intcon,7,c	;volatile
 11503                           
 11504                           ; BSR set to: 15
 11505                           ;system.c: 206: INTCONbits.GIEL = 1;
 11506  0081A2  8CF2               	bsf	intcon,6,c	;volatile
 11507                           
 11508                           ; BSR set to: 15
 11509                           ;system.c: 217: TRISCbits.TRISC0 = 1;
 11510  0081A4  8094               	bsf	3988,0,c	;volatile
 11511                           
 11512                           ; BSR set to: 15
 11513                           ;system.c: 220: CCPTMRS0 = 0x00;
 11514  0081A6  0E00               	movlw	0
 11515  0081A8  010F               	movlb	15	; () banked
 11516  0081AA  6F52               	movwf	82,b	;volatile
 11517                           
 11518                           ; BSR set to: 15
 11519                           ;system.c: 222: PR2 = 0xF9;
 11520  0081AC  0EF9               	movlw	249
 11521  0081AE  6ECB               	movwf	4043,c	;volatile
 11522                           
 11523                           ; BSR set to: 15
 11524                           ;system.c: 223: CCP1CONbits.DC1B = 0b00;
 11525  0081B0  0ECF               	movlw	-49
 11526  0081B2  16BA               	andwf	4026,f,c	;volatile
 11527                           
 11528                           ; BSR set to: 15
 11529                           ;system.c: 224: CCP1CONbits.CCP1M = 0b1100;
 11530  0081B4  50BA               	movf	4026,w,c	;volatile
 11531  0081B6  0BF0               	andlw	-16
 11532  0081B8  090C               	iorlw	12
 11533  0081BA  6EBA               	movwf	4026,c	;volatile
 11534                           
 11535                           ; BSR set to: 15
 11536                           ;system.c: 225: CCPR1L = 0x00;
 11537  0081BC  0E00               	movlw	0
 11538  0081BE  6EBB               	movwf	4027,c	;volatile
 11539                           
 11540                           ; BSR set to: 15
 11541                           ;system.c: 227: T2CONbits.T2CKPS = 0b10;
 11542  0081C0  50CA               	movf	4042,w,c	;volatile
 11543  0081C2  0BFC               	andlw	-4
 11544  0081C4  0902               	iorlw	2
 11545  0081C6  6ECA               	movwf	4042,c	;volatile
 11546                           
 11547                           ; BSR set to: 15
 11548                           ;system.c: 228: T2CONbits.TMR2ON = 0b1;
 11549  0081C8  84CA               	bsf	4042,2,c	;volatile
 11550                           
 11551                           ; BSR set to: 15
 11552                           ;system.c: 233: TRISCbits.TRISC0 = 0;
 11553  0081CA  9094               	bcf	3988,0,c	;volatile
 11554                           
 11555                           ; BSR set to: 15
 11556                           ;system.c: 238: T4CONbits.T4OUTPS = 0b1111;
 11557  0081CC  8676               	bsf	3958,3,c	;volatile
 11558  0081CE  8876               	bsf	3958,4,c	;volatile
 11559  0081D0  8A76               	bsf	3958,5,c	;volatile
 11560  0081D2  8C76               	bsf	3958,6,c	;volatile
 11561                           
 11562                           ; BSR set to: 15
 11563                           ;system.c: 239: T4CONbits.T4CKPS = 0b11;
 11564  0081D4  0E03               	movlw	3
 11565  0081D6  1276               	iorwf	3958,f,c	;volatile
 11566                           
 11567                           ; BSR set to: 15
 11568                           ;system.c: 240: PR4 = 234;
 11569  0081D8  0EEA               	movlw	234
 11570  0081DA  6E77               	movwf	3959,c	;volatile
 11571                           
 11572                           ; BSR set to: 15
 11573                           ;system.c: 241: IPR3bits.TMR4IP = 0;
 11574  0081DC  96A5               	bcf	4005,3,c	;volatile
 11575                           
 11576                           ; BSR set to: 15
 11577                           ;system.c: 242: PIR3bits.TMR4IF = 0;
 11578  0081DE  96A4               	bcf	4004,3,c	;volatile
 11579                           
 11580                           ; BSR set to: 15
 11581                           ;system.c: 243: PIE3bits.TMR4IE = 1;
 11582  0081E0  86A3               	bsf	4003,3,c	;volatile
 11583                           
 11584                           ; BSR set to: 15
 11585                           ;system.c: 244: T4CONbits.TMR4ON = 1;
 11586  0081E2  8476               	bsf	3958,2,c	;volatile
 11587                           
 11588                           ; BSR set to: 15
 11589  0081E4  0012               	return		;funcret
 11590  0081E6                     __end_of_SYSTEM_Initialize:
 11591                           	opt stack 0
 11592                           tblptru	equ	0xFF8
 11593                           tblptrh	equ	0xFF7
 11594                           tblptrl	equ	0xFF6
 11595                           tablat	equ	0xFF5
 11596                           prodh	equ	0xFF4
 11597                           prodl	equ	0xFF3
 11598                           intcon	equ	0xFF2
 11599                           intcon2	equ	0xFF1
 11600                           intcon3	equ	0xFF0
 11601                           indf0	equ	0xFEF
 11602                           postinc0	equ	0xFEE
 11603                           plusw0	equ	0xFEB
 11604                           fsr0h	equ	0xFEA
 11605                           fsr0l	equ	0xFE9
 11606                           wreg	equ	0xFE8
 11607                           postdec1	equ	0xFE5
 11608                           fsr1h	equ	0xFE2
 11609                           fsr1l	equ	0xFE1
 11610                           indf2	equ	0xFDF
 11611                           postinc2	equ	0xFDE
 11612                           postdec2	equ	0xFDD
 11613                           plusw2	equ	0xFDB
 11614                           fsr2h	equ	0xFDA
 11615                           fsr2l	equ	0xFD9
 11616                           status	equ	0xFD8
 11617                           
 11618 ;; *************** function _RtccWrOn *****************
 11619 ;; Defined at:
 11620 ;;		line 21 in file "/opt/microchip/xc8/v1.35/sources/pic18/plib/rtcc/RtccWrOn.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;		None
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;  data            2    0        unsigned int 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;		None               void
 11627 ;; Registers used:
 11628 ;;		wreg, status,2
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11638 ;;Total ram usage:        0 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; Hardware stack levels required when called:   16
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_SYSTEM_Initialize
 11645 ;;		_update_variable
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649                           	psect	text28
 11650  00AF48                     __ptext28:
 11651                           	opt stack 0
 11652  00AF48                     _RtccWrOn:
 11653                           	opt stack 13
 11654                           
 11655                           ; BSR set to: 15
 11656                           ;incstack = 0
 11657  00AF48  9CF2               	bcf	intcon,6,c	;volatile
 11658  00AF4A  0E55               	movlw	85
 11659  00AF4C  6EA7               	movwf	4007,c	;volatile
 11660  00AF4E  0EAA               	movlw	170
 11661  00AF50  6EA7               	movwf	4007,c	;volatile
 11662  00AF52  010F               	movlb	15	; () banked
 11663  00AF54  8B3F               	bsf	63,5,b	;volatile
 11664                           
 11665                           ; BSR set to: 15
 11666  00AF56  8CF2               	bsf	intcon,6,c	;volatile
 11667                           
 11668                           ; BSR set to: 15
 11669  00AF58  0012               	return		;funcret
 11670  00AF5A                     __end_of_RtccWrOn:
 11671                           	opt stack 0
 11672                           tblptru	equ	0xFF8
 11673                           tblptrh	equ	0xFF7
 11674                           tblptrl	equ	0xFF6
 11675                           tablat	equ	0xFF5
 11676                           prodh	equ	0xFF4
 11677                           prodl	equ	0xFF3
 11678                           intcon	equ	0xFF2
 11679                           intcon2	equ	0xFF1
 11680                           intcon3	equ	0xFF0
 11681                           indf0	equ	0xFEF
 11682                           postinc0	equ	0xFEE
 11683                           plusw0	equ	0xFEB
 11684                           fsr0h	equ	0xFEA
 11685                           fsr0l	equ	0xFE9
 11686                           wreg	equ	0xFE8
 11687                           postdec1	equ	0xFE5
 11688                           fsr1h	equ	0xFE2
 11689                           fsr1l	equ	0xFE1
 11690                           indf2	equ	0xFDF
 11691                           postinc2	equ	0xFDE
 11692                           postdec2	equ	0xFDD
 11693                           plusw2	equ	0xFDB
 11694                           fsr2h	equ	0xFDA
 11695                           fsr2l	equ	0xFD9
 11696                           status	equ	0xFD8
 11697                           
 11698 ;; *************** function _MiApp_UnicastAddress *****************
 11699 ;; Defined at:
 11700 ;;		line 4566 in file "src/miwi/miwi_mesh.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  DestAddress     2  125[BANK1 ] PTR unsigned char 
 11703 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), main@shortaddress
      +(2), 
 11704 ;;		 -> openSocketInfo.ShortAddress1(2), openSocketInfo(18), tempShortAddress(2), 
 11705 ;;  PermanentAdd    1  127[BANK1 ] unsigned char 
 11706 ;;  SecEn           1  128[BANK1 ] unsigned char 
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;  t2              4    4[BANK3 ] struct _MIWI_TICK
 11709 ;;  t1              4    0[BANK3 ] struct _MIWI_TICK
 11710 ;;  t2              4   12[BANK3 ] struct _MIWI_TICK
 11711 ;;  t1              4    8[BANK3 ] struct _MIWI_TICK
 11712 ;;  handle          1   18[BANK3 ] unsigned char 
 11713 ;;  i               1   17[BANK3 ] unsigned char 
 11714 ;;  MiWiFrameCon    1   16[BANK3 ] unsigned char 
 11715 ;; Return value:  Size  Location     Type
 11716 ;;                  1    wreg      unsigned char 
 11717 ;; Registers used:
 11718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11719 ;; Tracked objects:
 11720 ;;		On entry : 0/0
 11721 ;;		On exit  : 0/0
 11722 ;;		Unchanged: 0/0
 11723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11724 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11725 ;;      Locals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 11726 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11727 ;;      Totals:         0       0      12       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 11728 ;;Total ram usage:       31 bytes
 11729 ;; Hardware stack levels used:    1
 11730 ;; Hardware stack levels required when called:   27
 11731 ;; This function calls:
 11732 ;;		_MiApp_DiscardMessage
 11733 ;;		_MiApp_MessageAvailable
 11734 ;;		_MiMAC_SendPacket
 11735 ;;		_MiWi_TickGet
 11736 ;;		_RouteMessage
 11737 ;;		_SearchForLongAddress
 11738 ;; This function is called by:
 11739 ;;		_main
 11740 ;;		_OpenSocket
 11741 ;;		_do_NETWORK_REGISTER
 11742 ;;		_do_POWER_TEST
 11743 ;;		_do_PING
 11744 ;;		_do_UPDATE
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           	psect	text29
 11749  00629A                     __ptext29:
 11750                           	opt stack 0
 11751  00629A                     _MiApp_UnicastAddress:
 11752                           	opt stack 3
 11753                           
 11754                           ;miwi_mesh.c: 4568: uint8_t handle;
 11755                           ;miwi_mesh.c: 4569: uint8_t i;
 11756                           ;miwi_mesh.c: 4570: uint8_t MiWiFrameControl;
 11757                           ;miwi_mesh.c: 4572: if( MiWiAckRequired && TxBuffer[11])
 11758                           
 11759                           ; BSR set to: 15
 11760                           ;incstack = 0
 11761  00629A  0101               	movlb	1	; () banked
 11762  00629C  51C2               	movf	_MiWiAckRequired& (0+255),w,b
 11763  00629E  B4D8               	btfsc	status,2,c
 11764  0062A0  D00C               	goto	l18722
 11765                           
 11766                           ; BSR set to: 1
 11767  0062A2  0102               	movlb	2	; () banked
 11768  0062A4  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 11769  0062A6  B4D8               	btfsc	status,2,c
 11770  0062A8  D008               	goto	l18722
 11771                           
 11772                           ; BSR set to: 2
 11773                           ;miwi_mesh.c: 4573: {
 11774                           ;miwi_mesh.c: 4574: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 11775  0062AA  0101               	movlb	1	; () banked
 11776  0062AC  87B6               	bsf	_MiWiStateMachine& (0+255),3,b
 11777                           
 11778                           ;miwi_mesh.c: 4575: AcknowledgementSeq = MiWiSeqNum;
 11779  0062AE  C1C4  F1F8         	movff	_MiWiSeqNum,_AcknowledgementSeq
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;miwi_mesh.c: 4576: MiWiFrameControl = 0x06;
 11783  0062B2  0E06               	movlw	6
 11784  0062B4  0103               	movlb	3	; () banked
 11785  0062B6  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 11786                           
 11787                           ;miwi_mesh.c: 4577: }
 11788  0062B8  D005               	goto	l1014
 11789  0062BA                     l18722:
 11790                           
 11791                           ;miwi_mesh.c: 4578: else
 11792                           ;miwi_mesh.c: 4579: {
 11793                           ;miwi_mesh.c: 4580: MiWiFrameControl = 0x02;
 11794  0062BA  0E02               	movlw	2
 11795  0062BC  0103               	movlb	3	; () banked
 11796  0062BE  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 11797                           
 11798                           ; BSR set to: 3
 11799                           ;miwi_mesh.c: 4581: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 11800  0062C0  0101               	movlb	1	; () banked
 11801  0062C2  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 11802  0062C4                     l1014:
 11803                           
 11804                           ;miwi_mesh.c: 4582: }
 11805                           ;miwi_mesh.c: 4584: if( PermanentAddr )
 11806  0062C4  0101               	movlb	1	; () banked
 11807  0062C6  517F               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 11808  0062C8  0101               	movlb	1	; () banked
 11809  0062CA  B4D8               	btfsc	status,2,c
 11810  0062CC  D160               	goto	l18846
 11811                           
 11812                           ; BSR set to: 1
 11813                           ;miwi_mesh.c: 4585: {
 11814                           ;miwi_mesh.c: 4586: for(i = 0; i < 4; i++)
 11815  0062CE  0E00               	movlw	0
 11816  0062D0  0103               	movlb	3	; () banked
 11817  0062D2  6FD5               	movwf	MiApp_UnicastAddress@i& (0+255),b
 11818  0062D4                     l18728:
 11819                           
 11820                           ; BSR set to: 3
 11821  0062D4  0E03               	movlw	3
 11822  0062D6  0103               	movlb	3	; () banked
 11823  0062D8  65D5               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 11824  0062DA  D001               	goto	l18732
 11825  0062DC  D019               	goto	l18738
 11826  0062DE                     l18732:
 11827                           
 11828                           ; BSR set to: 3
 11829                           ;miwi_mesh.c: 4587: {
 11830                           ;miwi_mesh.c: 4588: tempLongAddress[i] = DestAddress[i];
 11831  0062DE  0103               	movlb	3	; () banked
 11832  0062E0  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 11833  0062E2  0D01               	mullw	1
 11834  0062E4  50F3               	movf	prodl,w,c
 11835  0062E6  0101               	movlb	1	; () banked
 11836  0062E8  257D               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 11837  0062EA  6ED9               	movwf	fsr2l,c
 11838  0062EC  50F4               	movf	prodh,w,c
 11839  0062EE  0101               	movlb	1	; () banked
 11840  0062F0  217E               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 11841  0062F2  6EDA               	movwf	fsr2h,c
 11842  0062F4  0103               	movlb	3	; () banked
 11843  0062F6  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 11844  0062F8  0D01               	mullw	1
 11845  0062FA  0EAA               	movlw	low _tempLongAddress
 11846  0062FC  24F3               	addwf	prodl,w,c
 11847  0062FE  6EE1               	movwf	fsr1l,c
 11848  006300  0E01               	movlw	high _tempLongAddress
 11849  006302  20F4               	addwfc	prodh,w,c
 11850  006304  6EE2               	movwf	fsr1h,c
 11851  006306  CFDF FFE7          	movff	indf2,indf1
 11852                           
 11853                           ; BSR set to: 3
 11854  00630A  0103               	movlb	3	; () banked
 11855  00630C  2BD5               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 11856  00630E  D7E2               	goto	l18728
 11857  006310                     l18738:
 11858                           
 11859                           ; BSR set to: 3
 11860                           ;miwi_mesh.c: 4589: }
 11861                           ;miwi_mesh.c: 4590: if( (handle = SearchForLongAddress()) == 0xFF )
 11862  006310  ECF7  F049         	call	_SearchForLongAddress	;wreg free
 11863  006314  0103               	movlb	3	; () banked
 11864  006316  6FD6               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 11865  006318  0103               	movlb	3	; () banked
 11866  00631A  29D6               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 11867  00631C  A4D8               	btfss	status,2,c
 11868  00631E  D03D               	goto	l18778
 11869  006320                     l1019:
 11870                           
 11871                           ; BSR set to: 3
 11872                           ;miwi_mesh.c: 4594: TxBuffer[0] = defaultHops;
 11873  006320  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 11874                           
 11875                           ; BSR set to: 3
 11876                           ;miwi_mesh.c: 4595: TxBuffer[1] = 0x02;
 11877  006324  0E02               	movlw	2
 11878  006326  0102               	movlb	2	; () banked
 11879  006328  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 11880                           
 11881                           ; BSR set to: 2
 11882                           ;miwi_mesh.c: 4596: TxBuffer[2] = 0xFF;
 11883  00632A  0102               	movlb	2	; () banked
 11884  00632C  69A8               	setf	(_TxBuffer+2)& (0+255),b
 11885                           
 11886                           ; BSR set to: 2
 11887                           ;miwi_mesh.c: 4597: TxBuffer[3] = 0xFF;
 11888  00632E  0102               	movlb	2	; () banked
 11889  006330  69A9               	setf	(_TxBuffer+3)& (0+255),b
 11890                           
 11891                           ; BSR set to: 2
 11892                           ;miwi_mesh.c: 4598: TxBuffer[4] = 0xFF;
 11893  006332  0102               	movlb	2	; () banked
 11894  006334  69AA               	setf	(_TxBuffer+4)& (0+255),b
 11895                           
 11896                           ; BSR set to: 2
 11897                           ;miwi_mesh.c: 4599: TxBuffer[5] = 0xFF;
 11898  006336  0102               	movlb	2	; () banked
 11899  006338  69AB               	setf	(_TxBuffer+5)& (0+255),b
 11900                           
 11901                           ; BSR set to: 2
 11902                           ;miwi_mesh.c: 4600: TxBuffer[6] = myPANID.v[0];
 11903  00633A  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 11904                           
 11905                           ; BSR set to: 2
 11906                           ;miwi_mesh.c: 4601: TxBuffer[7] = myPANID.v[1];
 11907  00633E  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 11908                           
 11909                           ; BSR set to: 2
 11910                           ;miwi_mesh.c: 4602: TxBuffer[8] = myShortAddress.v[0];
 11911  006342  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 11912                           
 11913                           ; BSR set to: 2
 11914                           ;miwi_mesh.c: 4603: TxBuffer[9] = myShortAddress.v[1];
 11915  006346  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 11916                           
 11917                           ; BSR set to: 2
 11918                           ;miwi_mesh.c: 4604: TxBuffer[10] = MiWiSeqNum++;
 11919  00634A  C1C4  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 11920                           
 11921                           ; BSR set to: 2
 11922  00634E  0101               	movlb	1	; () banked
 11923  006350  2BC4               	incf	_MiWiSeqNum& (0+255),f,b
 11924                           
 11925                           ; BSR set to: 1
 11926                           ;miwi_mesh.c: 4617: MTP.flags.Val = 0;
 11927  006352  0E00               	movlw	0
 11928  006354  0101               	movlb	1	; () banked
 11929  006356  6FB1               	movwf	_MTP& (0+255),b
 11930                           
 11931                           ; BSR set to: 1
 11932                           ;miwi_mesh.c: 4618: MTP.flags.bits.ackReq = 1;
 11933  006358  0101               	movlb	1	; () banked
 11934  00635A  8BB1               	bsf	_MTP& (0+255),5,b
 11935                           
 11936                           ; BSR set to: 1
 11937                           ;miwi_mesh.c: 4619: MTP.flags.bits.secEn = SecEn;
 11938  00635C  0101               	movlb	1	; () banked
 11939  00635E  B180               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 11940  006360  D003               	bra	u20555
 11941  006362  0101               	movlb	1	; () banked
 11942  006364  97B1               	bcf	_MTP& (0+255),3,b
 11943  006366  D002               	bra	u20556
 11944  006368                     u20555:
 11945  006368  0101               	movlb	1	; () banked
 11946  00636A  87B1               	bsf	_MTP& (0+255),3,b
 11947  00636C                     u20556:
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;miwi_mesh.c: 4620: MTP.DestAddress = DestAddress;
 11951  00636C  C17D  F1B2         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 11952  006370  C17E  F1B3         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 11953                           
 11954                           ; BSR set to: 1
 11955                           ;miwi_mesh.c: 4626: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 11956  006374  0101               	movlb	1	; () banked
 11957  006376  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 11958                           
 11959                           ; BSR set to: 1
 11960                           ;miwi_mesh.c: 4628: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 11961  006378  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 11962  00637C  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 11963  006380  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 11964  006384  0EA6               	movlw	low _TxBuffer
 11965  006386  0101               	movlb	1	; () banked
 11966  006388  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 11967  00638A  0E02               	movlw	high _TxBuffer
 11968  00638C  0101               	movlb	1	; () banked
 11969  00638E  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 11970  006390  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 11971  006394  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 11972  006398  0012               	return	
 11973  00639A                     l18778:
 11974                           
 11975                           ;miwi_mesh.c: 4630: else
 11976                           ;miwi_mesh.c: 4631: {
 11977                           ;miwi_mesh.c: 4632: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 11978  00639A  0103               	movlb	3	; () banked
 11979  00639C  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 11980  00639E  0D09               	mullw	9
 11981  0063A0  0E08               	movlw	8
 11982  0063A2  26F3               	addwf	prodl,f,c
 11983  0063A4  0E00               	movlw	0
 11984  0063A6  22F4               	addwfc	prodh,f,c
 11985  0063A8  0E00               	movlw	low _ConnectionTable
 11986  0063AA  24F3               	addwf	prodl,w,c
 11987  0063AC  6ED9               	movwf	fsr2l,c
 11988  0063AE  0E06               	movlw	high _ConnectionTable
 11989  0063B0  20F4               	addwfc	prodh,w,c
 11990  0063B2  6EDA               	movwf	fsr2h,c
 11991  0063B4  A6DF               	btfss	indf2,3,c
 11992  0063B6  D7B4               	goto	l1019
 11993                           
 11994                           ; BSR set to: 3
 11995                           ;miwi_mesh.c: 4635: }
 11996                           ;miwi_mesh.c: 4637: if( MiWiAckRequired )
 11997                           
 11998                           ; BSR set to: 3
 11999                           
 12000                           ; BSR set to: 3
 12001                           ;miwi_mesh.c: 4633: {
 12002                           ;miwi_mesh.c: 4634: goto DIRECT_LONG_ADDRESS;
 12003  0063B8  0101               	movlb	1	; () banked
 12004  0063BA  51C2               	movf	_MiWiAckRequired& (0+255),w,b
 12005  0063BC  B4D8               	btfsc	status,2,c
 12006  0063BE  D011               	goto	l18786
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;miwi_mesh.c: 4638: {
 12010                           ;miwi_mesh.c: 4639: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 12011  0063C0  0103               	movlb	3	; () banked
 12012  0063C2  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12013  0063C4  0D09               	mullw	9
 12014  0063C6  0E02               	movlw	2
 12015  0063C8  26F3               	addwf	prodl,f,c
 12016  0063CA  0E00               	movlw	0
 12017  0063CC  22F4               	addwfc	prodh,f,c
 12018  0063CE  0E00               	movlw	low _ConnectionTable
 12019  0063D0  24F3               	addwf	prodl,w,c
 12020  0063D2  6ED9               	movwf	fsr2l,c
 12021  0063D4  0E06               	movlw	high _ConnectionTable
 12022  0063D6  20F4               	addwfc	prodh,w,c
 12023  0063D8  6EDA               	movwf	fsr2h,c
 12024  0063DA  CFDE F1B4          	movff	postinc2,_AcknowledgementAddr
 12025  0063DE  CFDD F1B5          	movff	postdec2,_AcknowledgementAddr+1
 12026  0063E2                     l18786:
 12027                           
 12028                           ;miwi_mesh.c: 4640: }
 12029                           ;miwi_mesh.c: 4642: TxBuffer[0] = 4;
 12030  0063E2  0E04               	movlw	4
 12031  0063E4  0102               	movlb	2	; () banked
 12032  0063E6  6FA6               	movwf	_TxBuffer& (0+255),b
 12033                           
 12034                           ; BSR set to: 2
 12035                           ;miwi_mesh.c: 4643: TxBuffer[1] = MiWiFrameControl;
 12036  0063E8  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 12037                           
 12038                           ; BSR set to: 2
 12039                           ;miwi_mesh.c: 4644: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 12040  0063EC  0103               	movlb	3	; () banked
 12041  0063EE  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12042  0063F0  0D09               	mullw	9
 12043  0063F2  0E00               	movlw	low _ConnectionTable
 12044  0063F4  24F3               	addwf	prodl,w,c
 12045  0063F6  6ED9               	movwf	fsr2l,c
 12046  0063F8  0E06               	movlw	high _ConnectionTable
 12047  0063FA  20F4               	addwfc	prodh,w,c
 12048  0063FC  6EDA               	movwf	fsr2h,c
 12049  0063FE  50DF               	movf	indf2,w,c
 12050  006400  0102               	movlb	2	; () banked
 12051  006402  6FA8               	movwf	(_TxBuffer+2)& (0+255),b
 12052                           
 12053                           ; BSR set to: 2
 12054                           ;miwi_mesh.c: 4645: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 12055  006404  0103               	movlb	3	; () banked
 12056  006406  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12057  006408  0D09               	mullw	9
 12058  00640A  0E01               	movlw	1
 12059  00640C  26F3               	addwf	prodl,f,c
 12060  00640E  0E00               	movlw	0
 12061  006410  22F4               	addwfc	prodh,f,c
 12062  006412  0E00               	movlw	low _ConnectionTable
 12063  006414  24F3               	addwf	prodl,w,c
 12064  006416  6ED9               	movwf	fsr2l,c
 12065  006418  0E06               	movlw	high _ConnectionTable
 12066  00641A  20F4               	addwfc	prodh,w,c
 12067  00641C  6EDA               	movwf	fsr2h,c
 12068  00641E  50DF               	movf	indf2,w,c
 12069  006420  0102               	movlb	2	; () banked
 12070  006422  6FA9               	movwf	(_TxBuffer+3)& (0+255),b
 12071                           
 12072                           ; BSR set to: 2
 12073                           ;miwi_mesh.c: 4646: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 12074  006424  0103               	movlb	3	; () banked
 12075  006426  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12076  006428  0D09               	mullw	9
 12077  00642A  0E02               	movlw	2
 12078  00642C  26F3               	addwf	prodl,f,c
 12079  00642E  0E00               	movlw	0
 12080  006430  22F4               	addwfc	prodh,f,c
 12081  006432  0E00               	movlw	low _ConnectionTable
 12082  006434  24F3               	addwf	prodl,w,c
 12083  006436  6ED9               	movwf	fsr2l,c
 12084  006438  0E06               	movlw	high _ConnectionTable
 12085  00643A  20F4               	addwfc	prodh,w,c
 12086  00643C  6EDA               	movwf	fsr2h,c
 12087  00643E  50DF               	movf	indf2,w,c
 12088  006440  0102               	movlb	2	; () banked
 12089  006442  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 12090                           
 12091                           ; BSR set to: 2
 12092                           ;miwi_mesh.c: 4647: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 12093  006444  0103               	movlb	3	; () banked
 12094  006446  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12095  006448  0D09               	mullw	9
 12096  00644A  0E03               	movlw	3
 12097  00644C  26F3               	addwf	prodl,f,c
 12098  00644E  0E00               	movlw	0
 12099  006450  22F4               	addwfc	prodh,f,c
 12100  006452  0E00               	movlw	low _ConnectionTable
 12101  006454  24F3               	addwf	prodl,w,c
 12102  006456  6ED9               	movwf	fsr2l,c
 12103  006458  0E06               	movlw	high _ConnectionTable
 12104  00645A  20F4               	addwfc	prodh,w,c
 12105  00645C  6EDA               	movwf	fsr2h,c
 12106  00645E  50DF               	movf	indf2,w,c
 12107  006460  0102               	movlb	2	; () banked
 12108  006462  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 12109                           
 12110                           ; BSR set to: 2
 12111                           ;miwi_mesh.c: 4648: TxBuffer[6] = myPANID.v[0];
 12112  006464  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 12113                           
 12114                           ; BSR set to: 2
 12115                           ;miwi_mesh.c: 4649: TxBuffer[7] = myPANID.v[1];
 12116  006468  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 12117                           
 12118                           ; BSR set to: 2
 12119                           ;miwi_mesh.c: 4650: TxBuffer[8] = myShortAddress.v[0];
 12120  00646C  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 12121                           
 12122                           ; BSR set to: 2
 12123                           ;miwi_mesh.c: 4651: TxBuffer[9] = myShortAddress.v[1];
 12124  006470  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 12125                           
 12126                           ; BSR set to: 2
 12127                           ;miwi_mesh.c: 4652: TxBuffer[10] = MiWiSeqNum++;
 12128  006474  C1C4  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 12129                           
 12130                           ; BSR set to: 2
 12131  006478  0101               	movlb	1	; () banked
 12132  00647A  2BC4               	incf	_MiWiSeqNum& (0+255),f,b
 12133                           
 12134                           ; BSR set to: 1
 12135                           ;miwi_mesh.c: 4654: if( 0 == RouteMessage(ConnectionTable[handle].PANID, ConnectionTable
      +                          [handle].AltAddress, SecEn) )
 12136  00647C  0103               	movlb	3	; () banked
 12137  00647E  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12138  006480  0D09               	mullw	9
 12139  006482  0E00               	movlw	low _ConnectionTable
 12140  006484  24F3               	addwf	prodl,w,c
 12141  006486  6ED9               	movwf	fsr2l,c
 12142  006488  0E06               	movlw	high _ConnectionTable
 12143  00648A  20F4               	addwfc	prodh,w,c
 12144  00648C  6EDA               	movwf	fsr2h,c
 12145  00648E  CFDE F13D          	movff	postinc2,RouteMessage@PANID
 12146  006492  CFDD F13E          	movff	postdec2,RouteMessage@PANID+1
 12147  006496  0103               	movlb	3	; () banked
 12148  006498  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 12149  00649A  0D09               	mullw	9
 12150  00649C  0E02               	movlw	2
 12151  00649E  26F3               	addwf	prodl,f,c
 12152  0064A0  0E00               	movlw	0
 12153  0064A2  22F4               	addwfc	prodh,f,c
 12154  0064A4  0E00               	movlw	low _ConnectionTable
 12155  0064A6  24F3               	addwf	prodl,w,c
 12156  0064A8  6ED9               	movwf	fsr2l,c
 12157  0064AA  0E06               	movlw	high _ConnectionTable
 12158  0064AC  20F4               	addwfc	prodh,w,c
 12159  0064AE  6EDA               	movwf	fsr2h,c
 12160  0064B0  CFDE F13F          	movff	postinc2,RouteMessage@ShortAddress
 12161  0064B4  CFDD F140          	movff	postdec2,RouteMessage@ShortAddress+1
 12162  0064B8  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 12163  0064BC  EC08  F024         	call	_RouteMessage	;wreg free
 12164  0064C0  0900               	iorlw	0
 12165  0064C2  A4D8               	btfss	status,2,c
 12166  0064C4  D004               	goto	l1024
 12167                           
 12168                           ;miwi_mesh.c: 4655: {
 12169                           ;miwi_mesh.c: 4656: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 12170  0064C6  0101               	movlb	1	; () banked
 12171  0064C8  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 12172                           
 12173                           ; BSR set to: 1
 12174                           ;miwi_mesh.c: 4657: return 0;
 12175  0064CA  0E00               	movlw	0
 12176                           
 12177                           ; BSR set to: 1
 12178  0064CC  0012               	return	
 12179  0064CE                     l1024:
 12180                           
 12181                           ;miwi_mesh.c: 4659: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 12182  0064CE  0101               	movlb	1	; () banked
 12183  0064D0  A7B6               	btfss	_MiWiStateMachine& (0+255),3,b
 12184  0064D2  D05B               	goto	l18842
 12185                           
 12186                           ; BSR set to: 1
 12187                           ;miwi_mesh.c: 4660: {
 12188                           ;miwi_mesh.c: 4661: MIWI_TICK t1, t2;
 12189                           ;miwi_mesh.c: 4662: t1 = MiWi_TickGet();
 12190  0064D4  EC57  F052         	call	_MiWi_TickGet	;wreg free
 12191  0064D8  C100  F3C4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 12192  0064DC  C101  F3C5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 12193  0064E0  C102  F3C6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 12194  0064E4  C103  F3C7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 12195  0064E8                     l18822:
 12196                           
 12197                           ;miwi_mesh.c: 4664: {
 12198                           ;miwi_mesh.c: 4665: if( MiApp_MessageAvailable())
 12199  0064E8  ECAD  F057         	call	_MiApp_MessageAvailable	;wreg free
 12200  0064EC  0900               	iorlw	0
 12201  0064EE  A4D8               	btfss	status,2,c
 12202                           
 12203                           ;miwi_mesh.c: 4666: {
 12204                           ;miwi_mesh.c: 4667: MiApp_DiscardMessage();
 12205  0064F0  ECB6  F057         	call	_MiApp_DiscardMessage	;wreg free
 12206                           
 12207                           ;miwi_mesh.c: 4668: }
 12208                           ;miwi_mesh.c: 4670: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 12209  0064F4  0101               	movlb	1	; () banked
 12210  0064F6  B7B6               	btfsc	_MiWiStateMachine& (0+255),3,b
 12211  0064F8  D002               	goto	l18832
 12212                           
 12213                           ; BSR set to: 1
 12214                           ;miwi_mesh.c: 4671: {
 12215                           ;miwi_mesh.c: 4672: return 1;
 12216  0064FA  0E01               	movlw	1
 12217                           
 12218                           ; BSR set to: 1
 12219  0064FC  0012               	return	
 12220  0064FE                     l18832:
 12221                           
 12222                           ; BSR set to: 1
 12223                           ;miwi_mesh.c: 4673: }
 12224                           ;miwi_mesh.c: 4674: t2 = MiWi_TickGet();
 12225  0064FE  EC57  F052         	call	_MiWi_TickGet	;wreg free
 12226  006502  C100  F3C8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 12227  006506  C101  F3C9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 12228  00650A  C102  F3CA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 12229  00650E  C103  F3CB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 12230                           
 12231                           ;miwi_mesh.c: 4675: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 12232  006512  C3C4  F181         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 12233  006516  C3C5  F182         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 12234  00651A  C3C6  F183         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 12235  00651E  C3C7  F184         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 12236  006522  0101               	movlb	1	; () banked
 12237  006524  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 12238  006526  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 12239  006528  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 12240  00652A  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 12241  00652C  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 12242  00652E  0E00               	movlw	0
 12243  006530  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 12244  006532  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 12245  006534  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 12246  006536  0103               	movlb	3	; () banked
 12247  006538  51C8               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 12248  00653A  0101               	movlb	1	; () banked
 12249  00653C  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 12250  00653E  0101               	movlb	1	; () banked
 12251  006540  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 12252  006542  0103               	movlb	3	; () banked
 12253  006544  51C9               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 12254  006546  0101               	movlb	1	; () banked
 12255  006548  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 12256  00654A  0101               	movlb	1	; () banked
 12257  00654C  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 12258  00654E  0103               	movlb	3	; () banked
 12259  006550  51CA               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 12260  006552  0101               	movlb	1	; () banked
 12261  006554  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 12262  006556  0101               	movlb	1	; () banked
 12263  006558  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 12264  00655A  0103               	movlb	3	; () banked
 12265  00655C  51CB               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 12266  00655E  0101               	movlb	1	; () banked
 12267  006560  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 12268  006562  0101               	movlb	1	; () banked
 12269  006564  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 12270  006566  0101               	movlb	1	; () banked
 12271  006568  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 12272  00656A  E10B               	bnz	u20620
 12273  00656C  0E21               	movlw	33
 12274  00656E  0101               	movlb	1	; () banked
 12275  006570  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 12276  006572  0EA1               	movlw	161
 12277  006574  0101               	movlb	1	; () banked
 12278  006576  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 12279  006578  0E07               	movlw	7
 12280  00657A  0101               	movlb	1	; () banked
 12281  00657C  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 12282  00657E  A0D8               	btfss	status,0,c
 12283  006580  D7B3               	goto	l18822
 12284  006582                     u20620:
 12285                           
 12286                           ; BSR set to: 1
 12287                           ;miwi_mesh.c: 4676: {
 12288                           ;miwi_mesh.c: 4677: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 12289  006582  0101               	movlb	1	; () banked
 12290  006584  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 12291                           
 12292                           ; BSR set to: 1
 12293                           ;miwi_mesh.c: 4678: return 0;
 12294  006586  0E00               	movlw	0
 12295                           
 12296                           ; BSR set to: 1
 12297  006588  0012               	return	
 12298  00658A                     l18842:
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;miwi_mesh.c: 4679: }
 12302                           ;miwi_mesh.c: 4680: }
 12303                           ;miwi_mesh.c: 4681: }
 12304                           ;miwi_mesh.c: 4682: return 1;
 12305  00658A  0E01               	movlw	1
 12306                           
 12307                           ; BSR set to: 1
 12308  00658C  0012               	return	
 12309  00658E                     l18846:
 12310                           
 12311                           ;miwi_mesh.c: 4740: }
 12312                           ;miwi_mesh.c: 4741: }
 12313                           ;miwi_mesh.c: 4743: TxBuffer[0] = 4;
 12314  00658E  0E04               	movlw	4
 12315  006590  0102               	movlb	2	; () banked
 12316  006592  6FA6               	movwf	_TxBuffer& (0+255),b
 12317                           
 12318                           ; BSR set to: 2
 12319                           ;miwi_mesh.c: 4744: TxBuffer[1] = MiWiFrameControl;
 12320  006594  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 12321                           
 12322                           ; BSR set to: 2
 12323                           ;miwi_mesh.c: 4745: TxBuffer[2] = myPANID.v[0];
 12324  006598  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 12325                           
 12326                           ; BSR set to: 2
 12327                           ;miwi_mesh.c: 4746: TxBuffer[3] = myPANID.v[1];
 12328  00659C  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 12329                           
 12330                           ; BSR set to: 2
 12331                           ;miwi_mesh.c: 4747: TxBuffer[4] = DestAddress[0];
 12332  0065A0  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 12333  0065A4  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 12334  0065A8  50DF               	movf	indf2,w,c
 12335  0065AA  0102               	movlb	2	; () banked
 12336  0065AC  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 12337                           
 12338                           ; BSR set to: 2
 12339                           ;miwi_mesh.c: 4748: TxBuffer[5] = DestAddress[1];
 12340  0065AE  0101               	movlb	1	; () banked
 12341  0065B0  EE20 F001          	lfsr	2,1
 12342  0065B4  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 12343  0065B6  26D9               	addwf	fsr2l,f,c
 12344  0065B8  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 12345  0065BA  22DA               	addwfc	fsr2h,f,c
 12346  0065BC  50DF               	movf	indf2,w,c
 12347  0065BE  0102               	movlb	2	; () banked
 12348  0065C0  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 12349                           
 12350                           ; BSR set to: 2
 12351                           ;miwi_mesh.c: 4749: TxBuffer[6] = myPANID.v[0];
 12352  0065C2  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 12353                           
 12354                           ; BSR set to: 2
 12355                           ;miwi_mesh.c: 4750: TxBuffer[7] = myPANID.v[1];
 12356  0065C6  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 12357                           
 12358                           ; BSR set to: 2
 12359                           ;miwi_mesh.c: 4751: TxBuffer[8] = myShortAddress.v[0];
 12360  0065CA  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 12361                           
 12362                           ; BSR set to: 2
 12363                           ;miwi_mesh.c: 4752: TxBuffer[9] = myShortAddress.v[1];
 12364  0065CE  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 12365                           
 12366                           ; BSR set to: 2
 12367                           ;miwi_mesh.c: 4753: TxBuffer[10] = MiWiSeqNum++;
 12368  0065D2  C1C4  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 12369                           
 12370                           ; BSR set to: 2
 12371  0065D6  0101               	movlb	1	; () banked
 12372  0065D8  2BC4               	incf	_MiWiSeqNum& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 1
 12375                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[0] = DestAddress[0];
 12376  0065DA  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 12377  0065DE  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 12378  0065E2  50DF               	movf	indf2,w,c
 12379  0065E4  0101               	movlb	1	; () banked
 12380  0065E6  6FB4               	movwf	_AcknowledgementAddr& (0+255),b
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;miwi_mesh.c: 4756: AcknowledgementAddr.v[1] = DestAddress[1];
 12384  0065E8  0101               	movlb	1	; () banked
 12385  0065EA  EE20 F001          	lfsr	2,1
 12386  0065EE  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 12387  0065F0  26D9               	addwf	fsr2l,f,c
 12388  0065F2  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 12389  0065F4  22DA               	addwfc	fsr2h,f,c
 12390  0065F6  50DF               	movf	indf2,w,c
 12391  0065F8  0101               	movlb	1	; () banked
 12392  0065FA  6FB5               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 12393                           
 12394                           ; BSR set to: 1
 12395                           ;miwi_mesh.c: 4759: tempShortAddress.v[0] = DestAddress[0];
 12396  0065FC  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 12397  006600  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 12398  006604  50DF               	movf	indf2,w,c
 12399  006606  0101               	movlb	1	; () banked
 12400  006608  6FF4               	movwf	_tempShortAddress& (0+255),b
 12401                           
 12402                           ; BSR set to: 1
 12403                           ;miwi_mesh.c: 4760: tempShortAddress.v[1] = DestAddress[1];
 12404  00660A  0101               	movlb	1	; () banked
 12405  00660C  EE20 F001          	lfsr	2,1
 12406  006610  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 12407  006612  26D9               	addwf	fsr2l,f,c
 12408  006614  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 12409  006616  22DA               	addwfc	fsr2h,f,c
 12410  006618  50DF               	movf	indf2,w,c
 12411  00661A  0101               	movlb	1	; () banked
 12412  00661C  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 12413                           
 12414                           ; BSR set to: 1
 12415                           ;miwi_mesh.c: 4761: if( 0 == RouteMessage(myPANID, tempShortAddress, SecEn) )
 12416  00661E  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 12417  006622  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 12418  006626  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 12419  00662A  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 12420  00662E  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 12421  006632  EC08  F024         	call	_RouteMessage	;wreg free
 12422  006636  0900               	iorlw	0
 12423  006638  A4D8               	btfss	status,2,c
 12424  00663A  D004               	goto	l1033
 12425                           
 12426                           ;miwi_mesh.c: 4762: {
 12427                           ;miwi_mesh.c: 4763: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 12428  00663C  0101               	movlb	1	; () banked
 12429  00663E  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 12430                           
 12431                           ; BSR set to: 1
 12432                           ;miwi_mesh.c: 4764: return 0;
 12433  006640  0E00               	movlw	0
 12434                           
 12435                           ; BSR set to: 1
 12436  006642  0012               	return	
 12437  006644                     l1033:
 12438                           
 12439                           ;miwi_mesh.c: 4766: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 12440  006644  0101               	movlb	1	; () banked
 12441  006646  A7B6               	btfss	_MiWiStateMachine& (0+255),3,b
 12442  006648  D05B               	goto	l18910
 12443                           
 12444                           ; BSR set to: 1
 12445                           ;miwi_mesh.c: 4767: {
 12446                           ;miwi_mesh.c: 4768: MIWI_TICK t1, t2;
 12447                           ;miwi_mesh.c: 4769: t1 = MiWi_TickGet();
 12448  00664A  EC57  F052         	call	_MiWi_TickGet	;wreg free
 12449  00664E  C100  F3CC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2749
 12450  006652  C101  F3CD         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2749+1
 12451  006656  C102  F3CE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2749+2
 12452  00665A  C103  F3CF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2749+3
 12453  00665E                     l18890:
 12454                           
 12455                           ;miwi_mesh.c: 4771: {
 12456                           ;miwi_mesh.c: 4772: if( MiApp_MessageAvailable())
 12457  00665E  ECAD  F057         	call	_MiApp_MessageAvailable	;wreg free
 12458  006662  0900               	iorlw	0
 12459  006664  A4D8               	btfss	status,2,c
 12460                           
 12461                           ;miwi_mesh.c: 4773: {
 12462                           ;miwi_mesh.c: 4774: MiApp_DiscardMessage();
 12463  006666  ECB6  F057         	call	_MiApp_DiscardMessage	;wreg free
 12464                           
 12465                           ;miwi_mesh.c: 4775: }
 12466                           ;miwi_mesh.c: 4776: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 12467  00666A  0101               	movlb	1	; () banked
 12468  00666C  B7B6               	btfsc	_MiWiStateMachine& (0+255),3,b
 12469  00666E  D002               	goto	l18900
 12470                           
 12471                           ; BSR set to: 1
 12472                           ;miwi_mesh.c: 4777: {
 12473                           ;miwi_mesh.c: 4778: return 1;
 12474  006670  0E01               	movlw	1
 12475                           
 12476                           ; BSR set to: 1
 12477  006672  0012               	return	
 12478  006674                     l18900:
 12479                           
 12480                           ; BSR set to: 1
 12481                           ;miwi_mesh.c: 4779: }
 12482                           ;miwi_mesh.c: 4780: t2 = MiWi_TickGet();
 12483  006674  EC57  F052         	call	_MiWi_TickGet	;wreg free
 12484  006678  C100  F3D0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2760
 12485  00667C  C101  F3D1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2760+1
 12486  006680  C102  F3D2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2760+2
 12487  006684  C103  F3D3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2760+3
 12488                           
 12489                           ;miwi_mesh.c: 4781: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 12490  006688  C3CC  F181         	movff	MiApp_UnicastAddress@t1_2749,??_MiApp_UnicastAddress
 12491  00668C  C3CD  F182         	movff	MiApp_UnicastAddress@t1_2749+1,??_MiApp_UnicastAddress+1
 12492  006690  C3CE  F183         	movff	MiApp_UnicastAddress@t1_2749+2,??_MiApp_UnicastAddress+2
 12493  006694  C3CF  F184         	movff	MiApp_UnicastAddress@t1_2749+3,??_MiApp_UnicastAddress+3
 12494  006698  0101               	movlb	1	; () banked
 12495  00669A  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 12496  00669C  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 12497  00669E  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 12498  0066A0  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 12499  0066A2  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 12500  0066A4  0E00               	movlw	0
 12501  0066A6  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 12502  0066A8  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 12503  0066AA  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 12504  0066AC  0103               	movlb	3	; () banked
 12505  0066AE  51D0               	movf	MiApp_UnicastAddress@t2_2760& (0+255),w,b
 12506  0066B0  0101               	movlb	1	; () banked
 12507  0066B2  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 12508  0066B4  0101               	movlb	1	; () banked
 12509  0066B6  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 12510  0066B8  0103               	movlb	3	; () banked
 12511  0066BA  51D1               	movf	(MiApp_UnicastAddress@t2_2760+1)& (0+255),w,b
 12512  0066BC  0101               	movlb	1	; () banked
 12513  0066BE  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 12514  0066C0  0101               	movlb	1	; () banked
 12515  0066C2  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 12516  0066C4  0103               	movlb	3	; () banked
 12517  0066C6  51D2               	movf	(MiApp_UnicastAddress@t2_2760+2)& (0+255),w,b
 12518  0066C8  0101               	movlb	1	; () banked
 12519  0066CA  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 12520  0066CC  0101               	movlb	1	; () banked
 12521  0066CE  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 12522  0066D0  0103               	movlb	3	; () banked
 12523  0066D2  51D3               	movf	(MiApp_UnicastAddress@t2_2760+3)& (0+255),w,b
 12524  0066D4  0101               	movlb	1	; () banked
 12525  0066D6  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 12526  0066D8  0101               	movlb	1	; () banked
 12527  0066DA  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 12528  0066DC  0101               	movlb	1	; () banked
 12529  0066DE  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 12530  0066E0  E10B               	bnz	u20670
 12531  0066E2  0E21               	movlw	33
 12532  0066E4  0101               	movlb	1	; () banked
 12533  0066E6  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 12534  0066E8  0EA1               	movlw	161
 12535  0066EA  0101               	movlb	1	; () banked
 12536  0066EC  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 12537  0066EE  0E07               	movlw	7
 12538  0066F0  0101               	movlb	1	; () banked
 12539  0066F2  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 12540  0066F4  A0D8               	btfss	status,0,c
 12541  0066F6  D7B3               	goto	l18890
 12542  0066F8                     u20670:
 12543                           
 12544                           ; BSR set to: 1
 12545                           ;miwi_mesh.c: 4782: {
 12546                           ;miwi_mesh.c: 4783: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 12547  0066F8  0101               	movlb	1	; () banked
 12548  0066FA  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 12549                           
 12550                           ; BSR set to: 1
 12551                           ;miwi_mesh.c: 4784: return 0;
 12552  0066FC  0E00               	movlw	0
 12553                           
 12554                           ; BSR set to: 1
 12555  0066FE  0012               	return	
 12556  006700                     l18910:
 12557                           
 12558                           ; BSR set to: 1
 12559                           ;miwi_mesh.c: 4785: }
 12560                           ;miwi_mesh.c: 4786: }
 12561                           ;miwi_mesh.c: 4787: }
 12562                           ;miwi_mesh.c: 4788: return 1;
 12563  006700  0E01               	movlw	1
 12564  006702  0012               	return	
 12565  006704                     __end_of_MiApp_UnicastAddress:
 12566                           	opt stack 0
 12567                           tblptru	equ	0xFF8
 12568                           tblptrh	equ	0xFF7
 12569                           tblptrl	equ	0xFF6
 12570                           tablat	equ	0xFF5
 12571                           prodh	equ	0xFF4
 12572                           prodl	equ	0xFF3
 12573                           intcon	equ	0xFF2
 12574                           intcon2	equ	0xFF1
 12575                           intcon3	equ	0xFF0
 12576                           indf0	equ	0xFEF
 12577                           postinc0	equ	0xFEE
 12578                           plusw0	equ	0xFEB
 12579                           fsr0h	equ	0xFEA
 12580                           fsr0l	equ	0xFE9
 12581                           wreg	equ	0xFE8
 12582                           indf1	equ	0xFE7
 12583                           postdec1	equ	0xFE5
 12584                           fsr1h	equ	0xFE2
 12585                           fsr1l	equ	0xFE1
 12586                           indf2	equ	0xFDF
 12587                           postinc2	equ	0xFDE
 12588                           postdec2	equ	0xFDD
 12589                           plusw2	equ	0xFDB
 12590                           fsr2h	equ	0xFDA
 12591                           fsr2l	equ	0xFD9
 12592                           status	equ	0xFD8
 12593                           
 12594 ;; *************** function _MiApp_MessageAvailable *****************
 12595 ;; Defined at:
 12596 ;;		line 4237 in file "src/miwi/miwi_mesh.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;		None
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;		None
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  1    wreg      unsigned char 
 12603 ;; Registers used:
 12604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12605 ;; Tracked objects:
 12606 ;;		On entry : 0/0
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12614 ;;Total ram usage:        0 bytes
 12615 ;; Hardware stack levels used:    1
 12616 ;; Hardware stack levels required when called:   26
 12617 ;; This function calls:
 12618 ;;		_MiWiTasks
 12619 ;; This function is called by:
 12620 ;;		_MiApp_UnicastAddress
 12621 ;;		_main
 12622 ;;		_MiApp_SearchConnection
 12623 ;;		_MiApp_EstablishConnection
 12624 ;;		_MiApp_UnicastConnection
 12625 ;;		_do_NETWORK_REGISTER
 12626 ;;		_do_POWER_TEST
 12627 ;;		_do_PING
 12628 ;;		_do_UPDATE
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           	psect	text30
 12633  00AF5A                     __ptext30:
 12634                           	opt stack 0
 12635  00AF5A                     _MiApp_MessageAvailable:
 12636                           	opt stack 3
 12637                           
 12638                           ;miwi_mesh.c: 4239: MiWiTasks();
 12639                           
 12640                           ;incstack = 0
 12641  00AF5A  ECE4  F011         	call	_MiWiTasks	;wreg free
 12642                           
 12643                           ;miwi_mesh.c: 4240: return MiWiStateMachine.bits.RxHasUserData;
 12644  00AF5E  0101               	movlb	1	; () banked
 12645  00AF60  A5B6               	btfss	_MiWiStateMachine& (0+255),2,b
 12646  00AF62  D002               	goto	u19520
 12647  00AF64  0E01               	movlw	1
 12648  00AF66  0012               	return	
 12649  00AF68                     u19520:
 12650  00AF68  0E00               	movlw	0
 12651  00AF6A  0012               	return	
 12652  00AF6C                     __end_of_MiApp_MessageAvailable:
 12653                           	opt stack 0
 12654                           tblptru	equ	0xFF8
 12655                           tblptrh	equ	0xFF7
 12656                           tblptrl	equ	0xFF6
 12657                           tablat	equ	0xFF5
 12658                           prodh	equ	0xFF4
 12659                           prodl	equ	0xFF3
 12660                           intcon	equ	0xFF2
 12661                           intcon2	equ	0xFF1
 12662                           intcon3	equ	0xFF0
 12663                           indf0	equ	0xFEF
 12664                           postinc0	equ	0xFEE
 12665                           plusw0	equ	0xFEB
 12666                           fsr0h	equ	0xFEA
 12667                           fsr0l	equ	0xFE9
 12668                           wreg	equ	0xFE8
 12669                           indf1	equ	0xFE7
 12670                           postdec1	equ	0xFE5
 12671                           fsr1h	equ	0xFE2
 12672                           fsr1l	equ	0xFE1
 12673                           indf2	equ	0xFDF
 12674                           postinc2	equ	0xFDE
 12675                           postdec2	equ	0xFDD
 12676                           plusw2	equ	0xFDB
 12677                           fsr2h	equ	0xFDA
 12678                           fsr2l	equ	0xFD9
 12679                           status	equ	0xFD8
 12680                           
 12681 ;; *************** function _MiWiTasks *****************
 12682 ;; Defined at:
 12683 ;;		line 283 in file "src/miwi/miwi_mesh.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;		None
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;  j               2  105[BANK1 ] unsigned int 
 12688 ;;  j               1  113[BANK1 ] unsigned char 
 12689 ;;  j               1  123[BANK1 ] unsigned char 
 12690 ;;  t2              4   90[BANK1 ] struct _MIWI_TICK
 12691 ;;  t1              4   86[BANK1 ] struct _MIWI_TICK
 12692 ;;  jitter          1   98[BANK1 ] unsigned char 
 12693 ;;  CoordAddress    2   94[BANK1 ] struct .
 12694 ;;  j               1  114[BANK1 ] unsigned char 
 12695 ;;  entry           1   97[BANK1 ] unsigned char 
 12696 ;;  CapacityByte    1  112[BANK1 ] struct .
 12697 ;;  cIndex          1  107[BANK1 ] unsigned char 
 12698 ;;  handle          1  119[BANK1 ] unsigned char 
 12699 ;;  associateSta    1   99[BANK1 ] unsigned char 
 12700 ;;  entry           1  122[BANK1 ] unsigned char 
 12701 ;;  coordinatorN    1  104[BANK1 ] unsigned char 
 12702 ;;  mask            1   96[BANK1 ] unsigned char 
 12703 ;;  rxIndex         1  111[BANK1 ] unsigned char 
 12704 ;;  sourceShortA    2  120[BANK1 ] struct .
 12705 ;;  sourcePANID     2  117[BANK1 ] struct .
 12706 ;;  destShortAdd    2  115[BANK1 ] struct .
 12707 ;;  destPANID       2  109[BANK1 ] struct .
 12708 ;;  j               1  108[BANK1 ] unsigned char 
 12709 ;;  t1              4  100[BANK1 ] struct _MIWI_TICK
 12710 ;;  t2              4   82[BANK1 ] struct _MIWI_TICK
 12711 ;;  i               1  124[BANK1 ] unsigned char 
 12712 ;; Return value:  Size  Location     Type
 12713 ;;		None               void
 12714 ;; Registers used:
 12715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12716 ;; Tracked objects:
 12717 ;;		On entry : 0/0
 12718 ;;		On exit  : 0/0
 12719 ;;		Unchanged: 0/0
 12720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12722 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12723 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12724 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12725 ;;Total ram usage:       51 bytes
 12726 ;; Hardware stack levels used:    1
 12727 ;; Hardware stack levels required when called:   25
 12728 ;; This function calls:
 12729 ;;		_AddNodeToNetworkTable
 12730 ;;		_BroadcastJitter
 12731 ;;		_MiMAC_DiscardPacket
 12732 ;;		_MiMAC_ReceivedPacket
 12733 ;;		_MiMAC_SendPacket
 12734 ;;		_MiMAC_SetAltAddress
 12735 ;;		_MiWi_TickGet
 12736 ;;		_RouteMessage
 12737 ;;		_SearchForLongAddress
 12738 ;;		_SearchForShortAddress
 12739 ;;		_SendBeacon
 12740 ;;		_SendMACPacket
 12741 ;;		_UnicastShortAddress
 12742 ;;		_findNextNetworkEntry
 12743 ;; This function is called by:
 12744 ;;		_MiApp_MessageAvailable
 12745 ;;		_main
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           	psect	text31
 12750  0023C8                     __ptext31:
 12751                           	opt stack 0
 12752  0023C8                     _MiWiTasks:
 12753                           	opt stack 5
 12754                           
 12755                           ;miwi_mesh.c: 285: uint8_t i;
 12756                           ;miwi_mesh.c: 286: MIWI_TICK t1, t2;
 12757                           ;miwi_mesh.c: 288: if( MiMAC_ReceivedPacket() )
 12758                           
 12759                           ; BSR set to: 1
 12760                           ;incstack = 0
 12761  0023C8  ECF1  F02E         	call	_MiMAC_ReceivedPacket	;wreg free
 12762  0023CC  0900               	iorlw	0
 12763  0023CE  B4D8               	btfsc	status,2,c
 12764  0023D0  EF89  F01D         	goto	l17642
 12765                           
 12766                           ;miwi_mesh.c: 289: {
 12767                           ;miwi_mesh.c: 290: if( MiWiStateMachine.bits.RxHasUserData )
 12768  0023D4  0101               	movlb	1	; () banked
 12769  0023D6  B5B6               	btfsc	_MiWiStateMachine& (0+255),2,b
 12770  0023D8  0012               	return	
 12771                           
 12772                           ; BSR set to: 1
 12773                           ;miwi_mesh.c: 293: }
 12774                           ;miwi_mesh.c: 295: rxMessage.flags.Val = 0;
 12775                           
 12776                           ; BSR set to: 1
 12777                           
 12778                           ; BSR set to: 1
 12779                           ;miwi_mesh.c: 291: {
 12780                           ;miwi_mesh.c: 292: return;
 12781  0023DA  0E00               	movlw	0
 12782  0023DC  0101               	movlb	1	; () banked
 12783  0023DE  6F90               	movwf	_rxMessage& (0+255),b
 12784                           
 12785                           ; BSR set to: 1
 12786                           ;miwi_mesh.c: 296: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 12787  0023E0  0101               	movlb	1	; () banked
 12788  0023E2  A59A               	btfss	_MACRxPacket& (0+255),2,b
 12789  0023E4  D004               	goto	u18020
 12790  0023E6  0101               	movlb	1	; () banked
 12791  0023E8  6B4A               	clrf	??_MiWiTasks& (0+255),b
 12792  0023EA  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 12793  0023EC  D002               	goto	u18028
 12794  0023EE                     u18020:
 12795  0023EE  0101               	movlb	1	; () banked
 12796  0023F0  6B4A               	clrf	??_MiWiTasks& (0+255),b
 12797  0023F2                     u18028:
 12798  0023F2  0101               	movlb	1	; () banked
 12799  0023F4  5190               	movf	_rxMessage& (0+255),w,b
 12800  0023F6  0101               	movlb	1	; () banked
 12801  0023F8  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 12802  0023FA  0BFC               	andlw	-4
 12803  0023FC  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 12804  0023FE  0101               	movlb	1	; () banked
 12805  002400  6F90               	movwf	_rxMessage& (0+255),b
 12806                           
 12807                           ; BSR set to: 1
 12808                           ;miwi_mesh.c: 297: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 12809  002402  0101               	movlb	1	; () banked
 12810  002404  A79A               	btfss	_MACRxPacket& (0+255),3,b
 12811  002406  D003               	bra	u18035
 12812  002408  0101               	movlb	1	; () banked
 12813  00240A  8790               	bsf	_rxMessage& (0+255),3,b
 12814  00240C  D002               	bra	u18037
 12815  00240E                     u18035:
 12816  00240E  0101               	movlb	1	; () banked
 12817  002410  9790               	bcf	_rxMessage& (0+255),3,b
 12818  002412                     u18037:
 12819                           
 12820                           ; BSR set to: 1
 12821                           ;miwi_mesh.c: 298: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 12822  002412  0101               	movlb	1	; () banked
 12823  002414  519A               	movf	_MACRxPacket& (0+255),w,b
 12824  002416  0B03               	andlw	3
 12825  002418  06E8               	decf	wreg,f,c
 12826  00241A  A4D8               	btfss	status,2,c
 12827  00241C  D004               	goto	u18040
 12828  00241E  0101               	movlb	1	; () banked
 12829  002420  6B4A               	clrf	??_MiWiTasks& (0+255),b
 12830  002422  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 12831  002424  D002               	goto	u18058
 12832  002426                     u18040:
 12833  002426  0101               	movlb	1	; () banked
 12834  002428  6B4A               	clrf	??_MiWiTasks& (0+255),b
 12835  00242A                     u18058:
 12836  00242A  0101               	movlb	1	; () banked
 12837  00242C  3B4A               	swapf	??_MiWiTasks& (0+255),f,b
 12838  00242E  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 12839  002430  0101               	movlb	1	; () banked
 12840  002432  5190               	movf	_rxMessage& (0+255),w,b
 12841  002434  0101               	movlb	1	; () banked
 12842  002436  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 12843  002438  0BDF               	andlw	-33
 12844  00243A  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 12845  00243C  0101               	movlb	1	; () banked
 12846  00243E  6F90               	movwf	_rxMessage& (0+255),b
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;miwi_mesh.c: 299: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 12850  002440  0101               	movlb	1	; () banked
 12851  002442  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 12852  002444  D003               	bra	u18065
 12853  002446  0101               	movlb	1	; () banked
 12854  002448  8D90               	bsf	_rxMessage& (0+255),6,b
 12855  00244A  D002               	bra	u18067
 12856  00244C                     u18065:
 12857  00244C  0101               	movlb	1	; () banked
 12858  00244E  9D90               	bcf	_rxMessage& (0+255),6,b
 12859  002450                     u18067:
 12860                           
 12861                           ; BSR set to: 1
 12862                           ;miwi_mesh.c: 300: if( MACRxPacket.flags.bits.sourcePrsnt )
 12863  002450  0101               	movlb	1	; () banked
 12864  002452  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 12865  002454  D006               	goto	l16904
 12866                           
 12867                           ; BSR set to: 1
 12868                           ;miwi_mesh.c: 301: {
 12869                           ;miwi_mesh.c: 305: rxMessage.flags.bits.altSrcAddr = 1;
 12870  002456  0101               	movlb	1	; () banked
 12871  002458  8F90               	bsf	_rxMessage& (0+255),7,b
 12872                           
 12873                           ; BSR set to: 1
 12874                           ;miwi_mesh.c: 307: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 12875  00245A  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 12876  00245E  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 12877  002462                     l16904:
 12878                           
 12879                           ; BSR set to: 1
 12880                           ;miwi_mesh.c: 308: }
 12881                           ;miwi_mesh.c: 312: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 12882  002462  C1A1  F199         	movff	_MACRxPacket+7,_rxMessage+9
 12883                           
 12884                           ; BSR set to: 1
 12885                           ;miwi_mesh.c: 313: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 12886  002466  C1A0  F198         	movff	_MACRxPacket+6,_rxMessage+8
 12887                           
 12888                           ; BSR set to: 1
 12889                           ;miwi_mesh.c: 315: MiWiStateMachine.bits.RxHasUserData = 0;
 12890  00246A  0101               	movlb	1	; () banked
 12891  00246C  95B6               	bcf	_MiWiStateMachine& (0+255),2,b
 12892                           
 12893                           ;miwi_mesh.c: 318: switch(MACRxPacket.flags.bits.packetType)
 12894  00246E  EF77  F01D         	goto	l17638
 12895  002472                     l16910:
 12896                           
 12897                           ; BSR set to: 1
 12898                           ;miwi_mesh.c: 348: if( MACRxPacket.PayloadLen < 10 )
 12899  002472  0E0A               	movlw	10
 12900  002474  0101               	movlb	1	; () banked
 12901  002476  619F               	cpfslt	(_MACRxPacket+5)& (0+255),b
 12902  002478  D002               	goto	l16914
 12903  00247A  EF85  F01D         	goto	l641
 12904  00247E                     l16914:
 12905                           
 12906                           ; BSR set to: 1
 12907                           ;miwi_mesh.c: 351: }
 12908                           ;miwi_mesh.c: 354: destPANID.v[0] = MACRxPacket.Payload[2];
 12909  00247E  0101               	movlb	1	; () banked
 12910  002480  EE20 F002          	lfsr	2,2
 12911  002484  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12912  002486  26D9               	addwf	fsr2l,f,c
 12913  002488  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12914  00248A  22DA               	addwfc	fsr2h,f,c
 12915  00248C  50DF               	movf	indf2,w,c
 12916  00248E  0101               	movlb	1	; () banked
 12917  002490  6F6D               	movwf	MiWiTasks@destPANID& (0+255),b
 12918                           
 12919                           ;miwi_mesh.c: 355: destPANID.v[1] = MACRxPacket.Payload[3];
 12920  002492  0101               	movlb	1	; () banked
 12921  002494  EE20 F003          	lfsr	2,3
 12922  002498  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12923  00249A  26D9               	addwf	fsr2l,f,c
 12924  00249C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12925  00249E  22DA               	addwfc	fsr2h,f,c
 12926  0024A0  50DF               	movf	indf2,w,c
 12927  0024A2  0101               	movlb	1	; () banked
 12928  0024A4  6F6E               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 12929                           
 12930                           ;miwi_mesh.c: 356: destShortAddress.v[0] = MACRxPacket.Payload[4];
 12931  0024A6  0101               	movlb	1	; () banked
 12932  0024A8  EE20 F004          	lfsr	2,4
 12933  0024AC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12934  0024AE  26D9               	addwf	fsr2l,f,c
 12935  0024B0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12936  0024B2  22DA               	addwfc	fsr2h,f,c
 12937  0024B4  50DF               	movf	indf2,w,c
 12938  0024B6  0101               	movlb	1	; () banked
 12939  0024B8  6F73               	movwf	MiWiTasks@destShortAddress& (0+255),b
 12940                           
 12941                           ;miwi_mesh.c: 357: destShortAddress.v[1] = MACRxPacket.Payload[5];
 12942  0024BA  0101               	movlb	1	; () banked
 12943  0024BC  EE20 F005          	lfsr	2,5
 12944  0024C0  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12945  0024C2  26D9               	addwf	fsr2l,f,c
 12946  0024C4  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12947  0024C6  22DA               	addwfc	fsr2h,f,c
 12948  0024C8  50DF               	movf	indf2,w,c
 12949  0024CA  0101               	movlb	1	; () banked
 12950  0024CC  6F74               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 12951                           
 12952                           ;miwi_mesh.c: 358: sourcePANID.v[0] = MACRxPacket.Payload[6];
 12953  0024CE  0101               	movlb	1	; () banked
 12954  0024D0  EE20 F006          	lfsr	2,6
 12955  0024D4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12956  0024D6  26D9               	addwf	fsr2l,f,c
 12957  0024D8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12958  0024DA  22DA               	addwfc	fsr2h,f,c
 12959  0024DC  50DF               	movf	indf2,w,c
 12960  0024DE  0101               	movlb	1	; () banked
 12961  0024E0  6F75               	movwf	MiWiTasks@sourcePANID& (0+255),b
 12962                           
 12963                           ;miwi_mesh.c: 359: sourcePANID.v[1] = MACRxPacket.Payload[7];
 12964  0024E2  0101               	movlb	1	; () banked
 12965  0024E4  EE20 F007          	lfsr	2,7
 12966  0024E8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12967  0024EA  26D9               	addwf	fsr2l,f,c
 12968  0024EC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12969  0024EE  22DA               	addwfc	fsr2h,f,c
 12970  0024F0  50DF               	movf	indf2,w,c
 12971  0024F2  0101               	movlb	1	; () banked
 12972  0024F4  6F76               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 12973                           
 12974                           ;miwi_mesh.c: 360: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 12975  0024F6  0101               	movlb	1	; () banked
 12976  0024F8  EE20 F008          	lfsr	2,8
 12977  0024FC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12978  0024FE  26D9               	addwf	fsr2l,f,c
 12979  002500  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12980  002502  22DA               	addwfc	fsr2h,f,c
 12981  002504  50DF               	movf	indf2,w,c
 12982  002506  0101               	movlb	1	; () banked
 12983  002508  6F78               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 12984                           
 12985                           ;miwi_mesh.c: 361: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 12986  00250A  0101               	movlb	1	; () banked
 12987  00250C  EE20 F009          	lfsr	2,9
 12988  002510  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 12989  002512  26D9               	addwf	fsr2l,f,c
 12990  002514  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 12991  002516  22DA               	addwfc	fsr2h,f,c
 12992  002518  50DF               	movf	indf2,w,c
 12993  00251A  0101               	movlb	1	; () banked
 12994  00251C  6F79               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 12995                           
 12996                           ; BSR set to: 1
 12997                           ;miwi_mesh.c: 363: rxMessage.flags.Val = 0;
 12998  00251E  0E00               	movlw	0
 12999  002520  0101               	movlb	1	; () banked
 13000  002522  6F90               	movwf	_rxMessage& (0+255),b
 13001                           
 13002                           ; BSR set to: 1
 13003                           ;miwi_mesh.c: 364: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 13004  002524  0101               	movlb	1	; () banked
 13005  002526  A79A               	btfss	_MACRxPacket& (0+255),3,b
 13006  002528  D003               	bra	u18095
 13007  00252A  0101               	movlb	1	; () banked
 13008  00252C  8790               	bsf	_rxMessage& (0+255),3,b
 13009  00252E  D002               	bra	u18097
 13010  002530                     u18095:
 13011  002530  0101               	movlb	1	; () banked
 13012  002532  9790               	bcf	_rxMessage& (0+255),3,b
 13013  002534                     u18097:
 13014                           
 13015                           ; BSR set to: 1
 13016                           ;miwi_mesh.c: 366: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 13017  002534  0101               	movlb	1	; () banked
 13018  002536  5190               	movf	_rxMessage& (0+255),w,b
 13019  002538  0B03               	andlw	3
 13020  00253A  0900               	iorlw	0
 13021  00253C  A4D8               	btfss	status,2,c
 13022  00253E  D007               	goto	l16924
 13023                           
 13024                           ; BSR set to: 1
 13025  002540  0101               	movlb	1	; () banked
 13026  002542  2973               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 13027  002544  E103               	bnz	u18111
 13028  002546  0101               	movlb	1	; () banked
 13029  002548  2974               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 13030  00254A  A4D8               	btfss	status,2,c
 13031  00254C                     u18111:
 13032  00254C  D11C               	goto	l16998
 13033  00254E                     l16924:
 13034                           
 13035                           ; BSR set to: 1
 13036                           ;miwi_mesh.c: 367: {
 13037                           ;miwi_mesh.c: 369: if( sourceShortAddress.Val == myShortAddress.Val &&
 13038                           ;miwi_mesh.c: 370: sourcePANID.Val == myPANID.Val )
 13039  00254E  0101               	movlb	1	; () banked
 13040  002550  51F2               	movf	_myShortAddress& (0+255),w,b
 13041  002552  0101               	movlb	1	; () banked
 13042  002554  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 13043  002556  E112               	bnz	l16930
 13044  002558  0101               	movlb	1	; () banked
 13045  00255A  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 13046  00255C  0101               	movlb	1	; () banked
 13047  00255E  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 13048  002560  A4D8               	btfss	status,2,c
 13049  002562  D00C               	goto	l16930
 13050                           
 13051                           ; BSR set to: 1
 13052  002564  0101               	movlb	1	; () banked
 13053  002566  51F0               	movf	_myPANID& (0+255),w,b
 13054  002568  0101               	movlb	1	; () banked
 13055  00256A  1975               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 13056  00256C  E107               	bnz	l16930
 13057  00256E  0101               	movlb	1	; () banked
 13058  002570  51F1               	movf	(_myPANID+1)& (0+255),w,b
 13059  002572  0101               	movlb	1	; () banked
 13060  002574  1976               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 13061  002576  B4D8               	btfsc	status,2,c
 13062  002578  EF85  F01D         	goto	l641
 13063  00257C                     l16930:
 13064                           
 13065                           ; BSR set to: 1
 13066                           ;miwi_mesh.c: 373: }
 13067                           ;miwi_mesh.c: 377: if(MACRxPacket.Payload[0]>1)
 13068  00257C  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 13069  002580  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 13070  002584  0E01               	movlw	1
 13071  002586  64DF               	cpfsgt	indf2,c
 13072  002588  D041               	goto	l16950
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;miwi_mesh.c: 378: {
 13076                           ;miwi_mesh.c: 379: MACRxPacket.Payload[0]--;
 13077  00258A  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 13078  00258E  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 13079  002592  06DF               	decf	indf2,f,c
 13080                           
 13081                           ; BSR set to: 1
 13082                           ;miwi_mesh.c: 380: {TxData = 0;};
 13083  002594  0E00               	movlw	0
 13084  002596  0101               	movlb	1	; () banked
 13085  002598  6FC7               	movwf	_TxData& (0+255),b
 13086                           
 13087                           ; BSR set to: 1
 13088                           ;miwi_mesh.c: 381: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 13089  00259A  0E00               	movlw	0
 13090  00259C  0101               	movlb	1	; () banked
 13091  00259E  6F7C               	movwf	MiWiTasks@i& (0+255),b
 13092  0025A0  D01A               	goto	l16944
 13093  0025A2                     l16938:
 13094                           
 13095                           ; BSR set to: 1
 13096                           ;miwi_mesh.c: 382: {
 13097                           ;miwi_mesh.c: 383: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 13098  0025A2  0101               	movlb	1	; () banked
 13099  0025A4  517C               	movf	MiWiTasks@i& (0+255),w,b
 13100  0025A6  0D01               	mullw	1
 13101  0025A8  50F3               	movf	prodl,w,c
 13102  0025AA  0101               	movlb	1	; () banked
 13103  0025AC  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 13104  0025AE  6ED9               	movwf	fsr2l,c
 13105  0025B0  50F4               	movf	prodh,w,c
 13106  0025B2  0101               	movlb	1	; () banked
 13107  0025B4  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 13108  0025B6  6EDA               	movwf	fsr2h,c
 13109  0025B8  0101               	movlb	1	; () banked
 13110  0025BA  51C7               	movf	_TxData& (0+255),w,b
 13111  0025BC  0D01               	mullw	1
 13112  0025BE  0EA6               	movlw	low _TxBuffer
 13113  0025C0  24F3               	addwf	prodl,w,c
 13114  0025C2  6EE1               	movwf	fsr1l,c
 13115  0025C4  0E02               	movlw	high _TxBuffer
 13116  0025C6  20F4               	addwfc	prodh,w,c
 13117  0025C8  6EE2               	movwf	fsr1h,c
 13118  0025CA  CFDF FFE7          	movff	indf2,indf1
 13119                           
 13120                           ; BSR set to: 1
 13121  0025CE  0101               	movlb	1	; () banked
 13122  0025D0  2BC7               	incf	_TxData& (0+255),f,b
 13123                           
 13124                           ; BSR set to: 1
 13125  0025D2  0101               	movlb	1	; () banked
 13126  0025D4  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 13127  0025D6                     l16944:
 13128                           
 13129                           ; BSR set to: 1
 13130  0025D6  0101               	movlb	1	; () banked
 13131  0025D8  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 13132  0025DA  0101               	movlb	1	; () banked
 13133  0025DC  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 13134  0025DE  A0D8               	btfss	status,0,c
 13135  0025E0  D7E0               	goto	l16938
 13136                           
 13137                           ; BSR set to: 1
 13138                           ;miwi_mesh.c: 384: }
 13139                           ;miwi_mesh.c: 386: MTP.flags.Val = MACRxPacket.flags.Val;
 13140  0025E2  C19A  F1B1         	movff	_MACRxPacket,_MTP
 13141                           
 13142                           ; BSR set to: 1
 13143                           ;miwi_mesh.c: 395: BroadcastJitter(20);
 13144  0025E6  0E14               	movlw	20
 13145  0025E8  EC9B  F04C         	call	_BroadcastJitter
 13146                           
 13147                           ;miwi_mesh.c: 398: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 13148  0025EC  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 13149  0025F0  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 13150  0025F4  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 13151  0025F8  0EA6               	movlw	low _TxBuffer
 13152  0025FA  0101               	movlb	1	; () banked
 13153  0025FC  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 13154  0025FE  0E02               	movlw	high _TxBuffer
 13155  002600  0101               	movlb	1	; () banked
 13156  002602  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 13157  002604  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 13158  002608  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 13159  00260C                     l16950:
 13160                           
 13161                           ;miwi_mesh.c: 417: }
 13162                           ;miwi_mesh.c: 421: for(i = 0; i < 4; i++)
 13163  00260C  0E00               	movlw	0
 13164  00260E  0101               	movlb	1	; () banked
 13165  002610  6F7C               	movwf	MiWiTasks@i& (0+255),b
 13166  002612                     l16952:
 13167                           
 13168                           ; BSR set to: 1
 13169  002612  0E03               	movlw	3
 13170  002614  0101               	movlb	1	; () banked
 13171  002616  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 13172  002618  D001               	goto	l16956
 13173  00261A  D03D               	goto	l16968
 13174  00261C                     l16956:
 13175                           
 13176                           ; BSR set to: 1
 13177                           ;miwi_mesh.c: 422: {
 13178                           ;miwi_mesh.c: 423: if( BroadcastRecords[i].RxCounter &&
 13179                           ;miwi_mesh.c: 424: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 13180                           ;miwi_mesh.c: 425: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 13181  00261C  0101               	movlb	1	; () banked
 13182  00261E  517C               	movf	MiWiTasks@i& (0+255),w,b
 13183  002620  0D08               	mullw	8
 13184  002622  0E03               	movlw	3
 13185  002624  26F3               	addwf	prodl,f,c
 13186  002626  0E00               	movlw	0
 13187  002628  22F4               	addwfc	prodh,f,c
 13188  00262A  0E28               	movlw	low _BroadcastRecords
 13189  00262C  24F3               	addwf	prodl,w,c
 13190  00262E  6ED9               	movwf	fsr2l,c
 13191  002630  0E02               	movlw	high _BroadcastRecords
 13192  002632  20F4               	addwfc	prodh,w,c
 13193  002634  6EDA               	movwf	fsr2h,c
 13194  002636  50DF               	movf	indf2,w,c
 13195  002638  B4D8               	btfsc	status,2,c
 13196  00263A  D02A               	goto	l16964
 13197                           
 13198                           ; BSR set to: 1
 13199  00263C  0101               	movlb	1	; () banked
 13200  00263E  517C               	movf	MiWiTasks@i& (0+255),w,b
 13201  002640  0D08               	mullw	8
 13202  002642  0E28               	movlw	low _BroadcastRecords
 13203  002644  24F3               	addwf	prodl,w,c
 13204  002646  6ED9               	movwf	fsr2l,c
 13205  002648  0E02               	movlw	high _BroadcastRecords
 13206  00264A  20F4               	addwfc	prodh,w,c
 13207  00264C  6EDA               	movwf	fsr2h,c
 13208  00264E  0101               	movlb	1	; () banked
 13209  002650  5178               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 13210  002652  18DE               	xorwf	postinc2,w,c
 13211  002654  E11D               	bnz	l16964
 13212  002656  0101               	movlb	1	; () banked
 13213  002658  5179               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 13214  00265A  18DE               	xorwf	postinc2,w,c
 13215  00265C  A4D8               	btfss	status,2,c
 13216  00265E  D018               	goto	l16964
 13217                           
 13218                           ; BSR set to: 1
 13219  002660  0101               	movlb	1	; () banked
 13220  002662  EE20 F00A          	lfsr	2,10
 13221  002666  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13222  002668  26D9               	addwf	fsr2l,f,c
 13223  00266A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13224  00266C  22DA               	addwfc	fsr2h,f,c
 13225  00266E  0101               	movlb	1	; () banked
 13226  002670  517C               	movf	MiWiTasks@i& (0+255),w,b
 13227  002672  0D08               	mullw	8
 13228  002674  0E02               	movlw	2
 13229  002676  26F3               	addwf	prodl,f,c
 13230  002678  0E00               	movlw	0
 13231  00267A  22F4               	addwfc	prodh,f,c
 13232  00267C  0E28               	movlw	low _BroadcastRecords
 13233  00267E  24F3               	addwf	prodl,w,c
 13234  002680  6EE1               	movwf	fsr1l,c
 13235  002682  0E02               	movlw	high _BroadcastRecords
 13236  002684  20F4               	addwfc	prodh,w,c
 13237  002686  6EE2               	movwf	fsr1h,c
 13238  002688  50DE               	movf	postinc2,w,c
 13239  00268A  18E6               	xorwf	postinc1,w,c
 13240  00268C  B4D8               	btfsc	status,2,c
 13241  00268E  D003               	goto	l16968
 13242  002690                     l16964:
 13243                           
 13244                           ; BSR set to: 1
 13245  002690  0101               	movlb	1	; () banked
 13246  002692  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 13247  002694  D7BE               	goto	l16952
 13248  002696                     l16968:
 13249                           
 13250                           ; BSR set to: 1
 13251                           ;miwi_mesh.c: 428: }
 13252                           ;miwi_mesh.c: 429: }
 13253                           ;miwi_mesh.c: 432: if( i < 4 )
 13254  002696  0E04               	movlw	4
 13255  002698  0101               	movlb	1	; () banked
 13256  00269A  617C               	cpfslt	MiWiTasks@i& (0+255),b
 13257  00269C  D002               	goto	l16972
 13258  00269E  EF85  F01D         	goto	l641
 13259  0026A2                     l16972:
 13260                           
 13261                           ; BSR set to: 1
 13262                           ;miwi_mesh.c: 438: }
 13263                           ;miwi_mesh.c: 442: for(i = 0; i < 4; i++)
 13264  0026A2  0E00               	movlw	0
 13265  0026A4  0101               	movlb	1	; () banked
 13266  0026A6  6F7C               	movwf	MiWiTasks@i& (0+255),b
 13267  0026A8                     l16974:
 13268                           
 13269                           ; BSR set to: 1
 13270  0026A8  0E03               	movlw	3
 13271  0026AA  0101               	movlb	1	; () banked
 13272  0026AC  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 13273  0026AE  D001               	goto	l16978
 13274  0026B0  D013               	goto	l16986
 13275  0026B2                     l16978:
 13276                           
 13277                           ; BSR set to: 1
 13278                           ;miwi_mesh.c: 443: {
 13279                           ;miwi_mesh.c: 444: if( BroadcastRecords[i].RxCounter == 0 )
 13280  0026B2  0101               	movlb	1	; () banked
 13281  0026B4  517C               	movf	MiWiTasks@i& (0+255),w,b
 13282  0026B6  0D08               	mullw	8
 13283  0026B8  0E03               	movlw	3
 13284  0026BA  26F3               	addwf	prodl,f,c
 13285  0026BC  0E00               	movlw	0
 13286  0026BE  22F4               	addwfc	prodh,f,c
 13287  0026C0  0E28               	movlw	low _BroadcastRecords
 13288  0026C2  24F3               	addwf	prodl,w,c
 13289  0026C4  6ED9               	movwf	fsr2l,c
 13290  0026C6  0E02               	movlw	high _BroadcastRecords
 13291  0026C8  20F4               	addwfc	prodh,w,c
 13292  0026CA  6EDA               	movwf	fsr2h,c
 13293  0026CC  50DF               	movf	indf2,w,c
 13294  0026CE  B4D8               	btfsc	status,2,c
 13295  0026D0  D003               	goto	l16986
 13296                           
 13297                           ; BSR set to: 1
 13298                           
 13299                           ; BSR set to: 1
 13300                           
 13301                           ; BSR set to: 1
 13302                           ;miwi_mesh.c: 445: {
 13303                           ;miwi_mesh.c: 446: break;
 13304  0026D2  0101               	movlb	1	; () banked
 13305  0026D4  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 13306  0026D6  D7E8               	goto	l16974
 13307  0026D8                     l16986:
 13308                           
 13309                           ; BSR set to: 1
 13310                           ;miwi_mesh.c: 447: }
 13311                           ;miwi_mesh.c: 448: }
 13312                           ;miwi_mesh.c: 450: if( i < 4 )
 13313  0026D8  0E04               	movlw	4
 13314  0026DA  0101               	movlb	1	; () banked
 13315  0026DC  617C               	cpfslt	MiWiTasks@i& (0+255),b
 13316  0026DE  D04D               	goto	l16996
 13317                           
 13318                           ; BSR set to: 1
 13319                           ;miwi_mesh.c: 451: {
 13320                           ;miwi_mesh.c: 452: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 13321  0026E0  0101               	movlb	1	; () banked
 13322  0026E2  517C               	movf	MiWiTasks@i& (0+255),w,b
 13323  0026E4  0D08               	mullw	8
 13324  0026E6  0E28               	movlw	low _BroadcastRecords
 13325  0026E8  24F3               	addwf	prodl,w,c
 13326  0026EA  6ED9               	movwf	fsr2l,c
 13327  0026EC  0E02               	movlw	high _BroadcastRecords
 13328  0026EE  20F4               	addwfc	prodh,w,c
 13329  0026F0  6EDA               	movwf	fsr2h,c
 13330  0026F2  C178  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 13331  0026F6  C179  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 13332                           
 13333                           ; BSR set to: 1
 13334                           ;miwi_mesh.c: 453: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 13335  0026FA  0101               	movlb	1	; () banked
 13336  0026FC  EE20 F00A          	lfsr	2,10
 13337  002700  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13338  002702  26D9               	addwf	fsr2l,f,c
 13339  002704  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13340  002706  22DA               	addwfc	fsr2h,f,c
 13341  002708  0101               	movlb	1	; () banked
 13342  00270A  517C               	movf	MiWiTasks@i& (0+255),w,b
 13343  00270C  0D08               	mullw	8
 13344  00270E  0E02               	movlw	2
 13345  002710  26F3               	addwf	prodl,f,c
 13346  002712  0E00               	movlw	0
 13347  002714  22F4               	addwfc	prodh,f,c
 13348  002716  0E28               	movlw	low _BroadcastRecords
 13349  002718  24F3               	addwf	prodl,w,c
 13350  00271A  6EE1               	movwf	fsr1l,c
 13351  00271C  0E02               	movlw	high _BroadcastRecords
 13352  00271E  20F4               	addwfc	prodh,w,c
 13353  002720  6EE2               	movwf	fsr1h,c
 13354  002722  CFDF FFE7          	movff	indf2,indf1
 13355                           
 13356                           ; BSR set to: 1
 13357                           ;miwi_mesh.c: 454: BroadcastRecords[i].RxCounter = 2 + 1;
 13358  002726  0101               	movlb	1	; () banked
 13359  002728  517C               	movf	MiWiTasks@i& (0+255),w,b
 13360  00272A  0D08               	mullw	8
 13361  00272C  0E03               	movlw	3
 13362  00272E  26F3               	addwf	prodl,f,c
 13363  002730  0E00               	movlw	0
 13364  002732  22F4               	addwfc	prodh,f,c
 13365  002734  0E28               	movlw	low _BroadcastRecords
 13366  002736  24F3               	addwf	prodl,w,c
 13367  002738  6ED9               	movwf	fsr2l,c
 13368  00273A  0E02               	movlw	high _BroadcastRecords
 13369  00273C  20F4               	addwfc	prodh,w,c
 13370  00273E  6EDA               	movwf	fsr2h,c
 13371  002740  0E03               	movlw	3
 13372  002742  6EDF               	movwf	indf2,c
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;miwi_mesh.c: 456: BroadcastRecords[i].StartTick = MiWi_TickGet();
 13376  002744  EC57  F052         	call	_MiWi_TickGet	;wreg free
 13377  002748  0101               	movlb	1	; () banked
 13378  00274A  517C               	movf	MiWiTasks@i& (0+255),w,b
 13379  00274C  0D08               	mullw	8
 13380  00274E  0E04               	movlw	4
 13381  002750  26F3               	addwf	prodl,f,c
 13382  002752  0E00               	movlw	0
 13383  002754  22F4               	addwfc	prodh,f,c
 13384  002756  0E28               	movlw	low _BroadcastRecords
 13385  002758  24F3               	addwf	prodl,w,c
 13386  00275A  6ED9               	movwf	fsr2l,c
 13387  00275C  0E02               	movlw	high _BroadcastRecords
 13388  00275E  20F4               	addwfc	prodh,w,c
 13389  002760  6EDA               	movwf	fsr2h,c
 13390  002762  0101               	movlb	1	; () banked
 13391  002764  C100  FFDE         	movff	?_MiWi_TickGet,postinc2
 13392  002768  0101               	movlb	1	; () banked
 13393  00276A  C101  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 13394  00276E  0101               	movlb	1	; () banked
 13395  002770  C102  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 13396  002774  0101               	movlb	1	; () banked
 13397  002776  C103  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 13398  00277A                     l16996:
 13399                           
 13400                           ; BSR set to: 1
 13401                           ;miwi_mesh.c: 458: }
 13402                           ;miwi_mesh.c: 460: rxMessage.flags.bits.broadcast = 1;
 13403  00277A  0101               	movlb	1	; () banked
 13404  00277C  5190               	movf	_rxMessage& (0+255),w,b
 13405  00277E  0BFC               	andlw	-4
 13406  002780  0901               	iorlw	1
 13407  002782  6F90               	movwf	_rxMessage& (0+255),b
 13408                           
 13409                           ;miwi_mesh.c: 461: goto ThisPacketIsForMe;
 13410  002784  D092               	goto	l17052
 13411  002786                     l16998:
 13412                           
 13413                           ; BSR set to: 1
 13414                           ;miwi_mesh.c: 462: }
 13415                           ;miwi_mesh.c: 465: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 13416  002786  0101               	movlb	1	; () banked
 13417  002788  51F0               	movf	_myPANID& (0+255),w,b
 13418  00278A  0101               	movlb	1	; () banked
 13419  00278C  196D               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 13420  00278E  E105               	bnz	u18261
 13421  002790  0101               	movlb	1	; () banked
 13422  002792  51F1               	movf	(_myPANID+1)& (0+255),w,b
 13423  002794  0101               	movlb	1	; () banked
 13424  002796  196E               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 13425  002798  A4D8               	btfss	status,2,c
 13426  00279A                     u18261:
 13427  00279A  D30F               	goto	l17232
 13428                           
 13429                           ; BSR set to: 1
 13430  00279C  0101               	movlb	1	; () banked
 13431  00279E  51F2               	movf	_myShortAddress& (0+255),w,b
 13432  0027A0  0101               	movlb	1	; () banked
 13433  0027A2  1973               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 13434  0027A4  E105               	bnz	u18271
 13435  0027A6  0101               	movlb	1	; () banked
 13436  0027A8  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 13437  0027AA  0101               	movlb	1	; () banked
 13438  0027AC  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 13439  0027AE  A4D8               	btfss	status,2,c
 13440  0027B0                     u18271:
 13441  0027B0  D304               	goto	l17232
 13442                           
 13443                           ; BSR set to: 1
 13444                           ;miwi_mesh.c: 466: {
 13445                           ;miwi_mesh.c: 468: if(MACRxPacket.Payload[1] & 0x04)
 13446  0027B2  0101               	movlb	1	; () banked
 13447  0027B4  EE20 F001          	lfsr	2,1
 13448  0027B8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13449  0027BA  26D9               	addwf	fsr2l,f,c
 13450  0027BC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13451  0027BE  22DA               	addwfc	fsr2h,f,c
 13452  0027C0  0101               	movlb	1	; () banked
 13453  0027C2  A4DF               	btfss	indf2,2,c
 13454  0027C4  D072               	goto	l17052
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;miwi_mesh.c: 469: {
 13458                           ;miwi_mesh.c: 470: TxBuffer[0] = defaultHops;
 13459  0027C6  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 13460                           
 13461                           ; BSR set to: 1
 13462                           ;miwi_mesh.c: 471: TxBuffer[1] = 0x02;
 13463  0027CA  0E02               	movlw	2
 13464  0027CC  0102               	movlb	2	; () banked
 13465  0027CE  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 13466                           
 13467                           ; BSR set to: 2
 13468                           ;miwi_mesh.c: 472: TxBuffer[2] = sourcePANID.v[0];
 13469  0027D0  C175  F2A8         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 13470                           
 13471                           ; BSR set to: 2
 13472                           ;miwi_mesh.c: 473: TxBuffer[3] = sourcePANID.v[1];
 13473  0027D4  C176  F2A9         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 13474                           
 13475                           ; BSR set to: 2
 13476                           ;miwi_mesh.c: 474: TxBuffer[4] = sourceShortAddress.v[0];
 13477  0027D8  C178  F2AA         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 13478                           
 13479                           ; BSR set to: 2
 13480                           ;miwi_mesh.c: 475: TxBuffer[5] = sourceShortAddress.v[1];
 13481  0027DC  C179  F2AB         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 13482                           
 13483                           ; BSR set to: 2
 13484                           ;miwi_mesh.c: 476: TxBuffer[6] = myPANID.v[0];
 13485  0027E0  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 13486                           
 13487                           ; BSR set to: 2
 13488                           ;miwi_mesh.c: 477: TxBuffer[7] = myPANID.v[1];
 13489  0027E4  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 13490                           
 13491                           ; BSR set to: 2
 13492                           ;miwi_mesh.c: 478: TxBuffer[8] = myShortAddress.v[0];
 13493  0027E8  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 13494                           
 13495                           ; BSR set to: 2
 13496                           ;miwi_mesh.c: 479: TxBuffer[9] = myShortAddress.v[1];
 13497  0027EC  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 13498                           
 13499                           ; BSR set to: 2
 13500                           ;miwi_mesh.c: 480: TxBuffer[10] = MACRxPacket.Payload[11-1];
 13501  0027F0  0101               	movlb	1	; () banked
 13502  0027F2  EE20 F00A          	lfsr	2,10
 13503  0027F6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13504  0027F8  26D9               	addwf	fsr2l,f,c
 13505  0027FA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13506  0027FC  22DA               	addwfc	fsr2h,f,c
 13507  0027FE  50DF               	movf	indf2,w,c
 13508  002800  0102               	movlb	2	; () banked
 13509  002802  6FB0               	movwf	(_TxBuffer+10)& (0+255),b
 13510                           
 13511                           ; BSR set to: 2
 13512                           ;miwi_mesh.c: 481: TxBuffer[11] = 0x00;
 13513  002804  0E00               	movlw	0
 13514  002806  0102               	movlb	2	; () banked
 13515  002808  6FB1               	movwf	(_TxBuffer+11)& (0+255),b
 13516                           
 13517                           ; BSR set to: 2
 13518                           ;miwi_mesh.c: 482: TxBuffer[12] = 0x30;
 13519  00280A  0E30               	movlw	48
 13520  00280C  0102               	movlb	2	; () banked
 13521  00280E  6FB2               	movwf	(_TxBuffer+12)& (0+255),b
 13522                           
 13523                           ; BSR set to: 2
 13524                           ;miwi_mesh.c: 483: TxData = 13;
 13525  002810  0E0D               	movlw	13
 13526  002812  0101               	movlb	1	; () banked
 13527  002814  6FC7               	movwf	_TxData& (0+255),b
 13528                           
 13529                           ; BSR set to: 1
 13530                           ;miwi_mesh.c: 486: if( sourceShortAddress.v[1] != myShortAddress.v[1] )
 13531  002816  0101               	movlb	1	; () banked
 13532  002818  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 13533  00281A  0101               	movlb	1	; () banked
 13534  00281C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 13535  00281E  B4D8               	btfsc	status,2,c
 13536  002820  D00E               	goto	l17036
 13537                           
 13538                           ; BSR set to: 1
 13539                           ;miwi_mesh.c: 487: {
 13540                           ;miwi_mesh.c: 488: RouteMessage(sourcePANID, sourceShortAddress, 0);
 13541  002822  C175  F13D         	movff	MiWiTasks@sourcePANID,RouteMessage@PANID
 13542  002826  C176  F13E         	movff	MiWiTasks@sourcePANID+1,RouteMessage@PANID+1
 13543  00282A  C178  F13F         	movff	MiWiTasks@sourceShortAddress,RouteMessage@ShortAddress
 13544  00282E  C179  F140         	movff	MiWiTasks@sourceShortAddress+1,RouteMessage@ShortAddress+1
 13545  002832  0E00               	movlw	0
 13546  002834  0101               	movlb	1	; () banked
 13547  002836  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 13548  002838  EC08  F024         	call	_RouteMessage	;wreg free
 13549                           
 13550                           ;miwi_mesh.c: 489: }
 13551  00283C  D034               	goto	l17050
 13552  00283E                     l17036:
 13553                           
 13554                           ;miwi_mesh.c: 490: else
 13555                           ;miwi_mesh.c: 491: {
 13556                           ;miwi_mesh.c: 492: MTP.flags.Val = 0;
 13557  00283E  0E00               	movlw	0
 13558  002840  0101               	movlb	1	; () banked
 13559  002842  6FB1               	movwf	_MTP& (0+255),b
 13560                           
 13561                           ; BSR set to: 1
 13562                           ;miwi_mesh.c: 493: MTP.flags.bits.ackReq = 1;
 13563  002844  0101               	movlb	1	; () banked
 13564  002846  8BB1               	bsf	_MTP& (0+255),5,b
 13565                           
 13566                           ; BSR set to: 1
 13567                           ;miwi_mesh.c: 501: tempShortAddress.Val = sourceShortAddress.Val;
 13568  002848  C178  F1F4         	movff	MiWiTasks@sourceShortAddress,_tempShortAddress
 13569  00284C  C179  F1F5         	movff	MiWiTasks@sourceShortAddress+1,_tempShortAddress+1
 13570                           
 13571                           ; BSR set to: 1
 13572                           ;miwi_mesh.c: 502: tempPANID.Val = sourcePANID.Val;
 13573  002850  C175  F1BC         	movff	MiWiTasks@sourcePANID,_tempPANID
 13574  002854  C176  F1BD         	movff	MiWiTasks@sourcePANID+1,_tempPANID+1
 13575                           
 13576                           ; BSR set to: 1
 13577                           ;miwi_mesh.c: 503: if( (i = SearchForShortAddress()) != 0xFF )
 13578  002858  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 13579  00285C  0101               	movlb	1	; () banked
 13580  00285E  6F7C               	movwf	MiWiTasks@i& (0+255),b
 13581  002860  0101               	movlb	1	; () banked
 13582  002862  297C               	incf	MiWiTasks@i& (0+255),w,b
 13583  002864  B4D8               	btfsc	status,2,c
 13584  002866  D00F               	goto	l17048
 13585                           
 13586                           ; BSR set to: 1
 13587                           ;miwi_mesh.c: 504: {
 13588                           ;miwi_mesh.c: 505: MTP.DestAddress = ConnectionTable[i].Address;
 13589  002868  0101               	movlb	1	; () banked
 13590  00286A  517C               	movf	MiWiTasks@i& (0+255),w,b
 13591  00286C  0D09               	mullw	9
 13592  00286E  0E04               	movlw	4
 13593  002870  26F3               	addwf	prodl,f,c
 13594  002872  0E00               	movlw	0
 13595  002874  22F4               	addwfc	prodh,f,c
 13596  002876  0E00               	movlw	low _ConnectionTable
 13597  002878  24F3               	addwf	prodl,w,c
 13598  00287A  0101               	movlb	1	; () banked
 13599  00287C  6FB2               	movwf	(_MTP+1)& (0+255),b
 13600  00287E  0E06               	movlw	high _ConnectionTable
 13601  002880  20F4               	addwfc	prodh,w,c
 13602  002882  0101               	movlb	1	; () banked
 13603  002884  6FB3               	movwf	(_MTP+2)& (0+255),b
 13604  002886                     l17048:
 13605                           
 13606                           ; BSR set to: 1
 13607                           ;miwi_mesh.c: 506: }
 13608                           ;miwi_mesh.c: 509: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 13609  002886  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 13610  00288A  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 13611  00288E  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 13612  002892  0EA6               	movlw	low _TxBuffer
 13613  002894  0101               	movlb	1	; () banked
 13614  002896  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 13615  002898  0E02               	movlw	high _TxBuffer
 13616  00289A  0101               	movlb	1	; () banked
 13617  00289C  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 13618  00289E  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 13619  0028A2  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 13620  0028A6                     l17050:
 13621                           
 13622                           ;miwi_mesh.c: 510: }
 13623                           ;miwi_mesh.c: 527: rxMessage.flags.bits.ackReq = 1;
 13624  0028A6  0101               	movlb	1	; () banked
 13625  0028A8  8590               	bsf	_rxMessage& (0+255),2,b
 13626  0028AA                     l17052:
 13627                           
 13628                           ; BSR set to: 1
 13629                           ;miwi_mesh.c: 532: if(MACRxPacket.Payload[11] == 0x00)
 13630  0028AA  0101               	movlb	1	; () banked
 13631  0028AC  EE20 F00B          	lfsr	2,11
 13632  0028B0  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13633  0028B2  26D9               	addwf	fsr2l,f,c
 13634  0028B4  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13635  0028B6  22DA               	addwfc	fsr2h,f,c
 13636  0028B8  50DF               	movf	indf2,w,c
 13637  0028BA  A4D8               	btfss	status,2,c
 13638  0028BC  D238               	goto	l17210
 13639                           
 13640                           ; BSR set to: 1
 13641                           ;miwi_mesh.c: 533: {
 13642                           ;miwi_mesh.c: 534: if( MACRxPacket.Payload[11+1] != 0x30)
 13643  0028BE  0101               	movlb	1	; () banked
 13644  0028C0  EE20 F00C          	lfsr	2,12
 13645  0028C4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13646  0028C6  26D9               	addwf	fsr2l,f,c
 13647  0028C8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13648  0028CA  22DA               	addwfc	fsr2h,f,c
 13649  0028CC  0E30               	movlw	48
 13650  0028CE  18DE               	xorwf	postinc2,w,c
 13651  0028D0  A4D8               	btfss	status,2,c
 13652  0028D2  D200               	goto	l17202
 13653  0028D4  D20F               	goto	l17204
 13654  0028D6                     l667:
 13655                           
 13656                           ; BSR set to: 1
 13657                           ;miwi_mesh.c: 688: {
 13658                           ;miwi_mesh.c: 689: uint8_t j;
 13659                           ;miwi_mesh.c: 692: if(openSocketInfo.status.bits.requestIsOpen == 0)
 13660  0028D6  0101               	movlb	1	; () banked
 13661  0028D8  B3CD               	btfsc	_openSocketInfo& (0+255),1,b
 13662  0028DA  D04E               	goto	l17076
 13663                           
 13664                           ; BSR set to: 1
 13665                           ;miwi_mesh.c: 693: {
 13666                           ;miwi_mesh.c: 696: openSocketInfo.socketStart = MiWi_TickGet();
 13667  0028DC  EC57  F052         	call	_MiWi_TickGet	;wreg free
 13668  0028E0  C100  F1DB         	movff	?_MiWi_TickGet,_openSocketInfo+14
 13669  0028E4  C101  F1DC         	movff	?_MiWi_TickGet+1,_openSocketInfo+15
 13670  0028E8  C102  F1DD         	movff	?_MiWi_TickGet+2,_openSocketInfo+16
 13671  0028EC  C103  F1DE         	movff	?_MiWi_TickGet+3,_openSocketInfo+17
 13672                           
 13673                           ;miwi_mesh.c: 697: openSocketInfo.ShortAddress1.v[0] = MACRxPacket.Payload[11-3];
 13674  0028F0  0101               	movlb	1	; () banked
 13675  0028F2  EE20 F008          	lfsr	2,8
 13676  0028F6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13677  0028F8  26D9               	addwf	fsr2l,f,c
 13678  0028FA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13679  0028FC  22DA               	addwfc	fsr2h,f,c
 13680  0028FE  50DF               	movf	indf2,w,c
 13681  002900  0101               	movlb	1	; () banked
 13682  002902  6FCF               	movwf	(_openSocketInfo+2)& (0+255),b
 13683                           
 13684                           ; BSR set to: 1
 13685                           ;miwi_mesh.c: 698: openSocketInfo.ShortAddress1.v[1] = MACRxPacket.Payload[11-2];
 13686  002904  0101               	movlb	1	; () banked
 13687  002906  EE20 F009          	lfsr	2,9
 13688  00290A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13689  00290C  26D9               	addwf	fsr2l,f,c
 13690  00290E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13691  002910  22DA               	addwfc	fsr2h,f,c
 13692  002912  50DF               	movf	indf2,w,c
 13693  002914  0101               	movlb	1	; () banked
 13694  002916  6FD0               	movwf	(_openSocketInfo+3)& (0+255),b
 13695                           
 13696                           ; BSR set to: 1
 13697                           ;miwi_mesh.c: 701: for(j=0;j<4;j++)
 13698  002918  0E00               	movlw	0
 13699  00291A  0101               	movlb	1	; () banked
 13700  00291C  6F7B               	movwf	MiWiTasks@j& (0+255),b
 13701  00291E                     l17066:
 13702                           
 13703                           ; BSR set to: 1
 13704  00291E  0E03               	movlw	3
 13705  002920  0101               	movlb	1	; () banked
 13706  002922  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 13707  002924  D001               	goto	l17070
 13708  002926  D022               	goto	l670
 13709  002928                     l17070:
 13710                           
 13711                           ; BSR set to: 1
 13712                           ;miwi_mesh.c: 702: {
 13713                           ;miwi_mesh.c: 703: openSocketInfo.LongAddress1[j] = MACRxPacket.Payload[j+2+11];
 13714  002928  0101               	movlb	1	; () banked
 13715  00292A  517B               	movf	MiWiTasks@j& (0+255),w,b
 13716  00292C  0101               	movlb	1	; () banked
 13717  00292E  6F4A               	movwf	??_MiWiTasks& (0+255),b
 13718  002930  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 13719  002932  0E0D               	movlw	13
 13720  002934  0101               	movlb	1	; () banked
 13721  002936  274A               	addwf	??_MiWiTasks& (0+255),f,b
 13722  002938  0E00               	movlw	0
 13723  00293A  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 13724  00293C  0101               	movlb	1	; () banked
 13725  00293E  514A               	movf	??_MiWiTasks& (0+255),w,b
 13726  002940  0101               	movlb	1	; () banked
 13727  002942  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 13728  002944  6ED9               	movwf	fsr2l,c
 13729  002946  0101               	movlb	1	; () banked
 13730  002948  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 13731  00294A  0101               	movlb	1	; () banked
 13732  00294C  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 13733  00294E  6EDA               	movwf	fsr2h,c
 13734  002950  0101               	movlb	1	; () banked
 13735  002952  517B               	movf	MiWiTasks@j& (0+255),w,b
 13736  002954  0D01               	mullw	1
 13737  002956  0ED1               	movlw	low (_openSocketInfo+4)
 13738  002958  24F3               	addwf	prodl,w,c
 13739  00295A  6EE1               	movwf	fsr1l,c
 13740  00295C  0E01               	movlw	high (_openSocketInfo+4)
 13741  00295E  20F4               	addwfc	prodh,w,c
 13742  002960  6EE2               	movwf	fsr1h,c
 13743  002962  CFDF FFE7          	movff	indf2,indf1
 13744                           
 13745                           ; BSR set to: 1
 13746  002966  0101               	movlb	1	; () banked
 13747  002968  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 13748  00296A  D7D9               	goto	l17066
 13749  00296C                     l670:
 13750                           
 13751                           ; BSR set to: 1
 13752                           ;miwi_mesh.c: 704: }
 13753                           ;miwi_mesh.c: 706: openSocketInfo.status.bits.requestIsOpen = 1;
 13754  00296C  0101               	movlb	1	; () banked
 13755  00296E  83CD               	bsf	_openSocketInfo& (0+255),1,b
 13756                           
 13757                           ;miwi_mesh.c: 707: openSocketInfo.status.bits.matchFound = 0;
 13758  002970  0101               	movlb	1	; () banked
 13759  002972  91CD               	bcf	_openSocketInfo& (0+255),0,b
 13760                           
 13761                           ;miwi_mesh.c: 715: }
 13762  002974  EF85  F01D         	goto	l641
 13763  002978                     l17076:
 13764                           
 13765                           ; BSR set to: 1
 13766                           ;miwi_mesh.c: 716: else
 13767                           ;miwi_mesh.c: 717: {
 13768                           ;miwi_mesh.c: 720: if( (MACRxPacket.Payload[11-3] == openSocketInfo.ShortAddress1.v[0]) 
      +                          &&
 13769                           ;miwi_mesh.c: 721: (MACRxPacket.Payload[11-2] == openSocketInfo.ShortAddress1.v[1]))
 13770  002978  0101               	movlb	1	; () banked
 13771  00297A  EE20 F008          	lfsr	2,8
 13772  00297E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13773  002980  26D9               	addwf	fsr2l,f,c
 13774  002982  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13775  002984  22DA               	addwfc	fsr2h,f,c
 13776  002986  0101               	movlb	1	; () banked
 13777  002988  51CF               	movf	(_openSocketInfo+2)& (0+255),w,b
 13778  00298A  18DE               	xorwf	postinc2,w,c
 13779  00298C  A4D8               	btfss	status,2,c
 13780  00298E  D00D               	goto	l17082
 13781                           
 13782                           ; BSR set to: 1
 13783  002990  0101               	movlb	1	; () banked
 13784  002992  EE20 F009          	lfsr	2,9
 13785  002996  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13786  002998  26D9               	addwf	fsr2l,f,c
 13787  00299A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13788  00299C  22DA               	addwfc	fsr2h,f,c
 13789  00299E  0101               	movlb	1	; () banked
 13790  0029A0  51D0               	movf	(_openSocketInfo+3)& (0+255),w,b
 13791  0029A2  18DE               	xorwf	postinc2,w,c
 13792  0029A4  B4D8               	btfsc	status,2,c
 13793  0029A6  EF85  F01D         	goto	l641
 13794  0029AA                     l17082:
 13795                           
 13796                           ; BSR set to: 1
 13797                           ;miwi_mesh.c: 727: else if(openSocketInfo.ShortAddress1.Val == 0x0000)
 13798  0029AA  0101               	movlb	1	; () banked
 13799  0029AC  51CF               	movf	(_openSocketInfo+2)& (0+255),w,b
 13800  0029AE  0101               	movlb	1	; () banked
 13801  0029B0  11D0               	iorwf	(_openSocketInfo+3)& (0+255),w,b
 13802  0029B2  A4D8               	btfss	status,2,c
 13803  0029B4  D06F               	goto	l17118
 13804                           
 13805                           ; BSR set to: 1
 13806                           ;miwi_mesh.c: 728: {
 13807                           ;miwi_mesh.c: 731: for(j=0;j<4;j++)
 13808  0029B6  0E00               	movlw	0
 13809  0029B8  0101               	movlb	1	; () banked
 13810  0029BA  6F7B               	movwf	MiWiTasks@j& (0+255),b
 13811  0029BC                     l17086:
 13812                           
 13813                           ; BSR set to: 1
 13814  0029BC  0E03               	movlw	3
 13815  0029BE  0101               	movlb	1	; () banked
 13816  0029C0  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 13817  0029C2  D001               	goto	l17090
 13818  0029C4  D036               	goto	l17096
 13819  0029C6                     l17090:
 13820                           
 13821                           ; BSR set to: 1
 13822                           ;miwi_mesh.c: 732: {
 13823                           ;miwi_mesh.c: 733: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 13824  0029C6  0101               	movlb	1	; () banked
 13825  0029C8  517B               	movf	MiWiTasks@j& (0+255),w,b
 13826  0029CA  0101               	movlb	1	; () banked
 13827  0029CC  6F4A               	movwf	??_MiWiTasks& (0+255),b
 13828  0029CE  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 13829  0029D0  0E0D               	movlw	13
 13830  0029D2  0101               	movlb	1	; () banked
 13831  0029D4  274A               	addwf	??_MiWiTasks& (0+255),f,b
 13832  0029D6  0E00               	movlw	0
 13833  0029D8  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 13834  0029DA  0101               	movlb	1	; () banked
 13835  0029DC  514A               	movf	??_MiWiTasks& (0+255),w,b
 13836  0029DE  0101               	movlb	1	; () banked
 13837  0029E0  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 13838  0029E2  6ED9               	movwf	fsr2l,c
 13839  0029E4  0101               	movlb	1	; () banked
 13840  0029E6  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 13841  0029E8  0101               	movlb	1	; () banked
 13842  0029EA  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 13843  0029EC  6EDA               	movwf	fsr2h,c
 13844  0029EE  0101               	movlb	1	; () banked
 13845  0029F0  517B               	movf	MiWiTasks@j& (0+255),w,b
 13846  0029F2  0D01               	mullw	1
 13847  0029F4  0ED7               	movlw	low (_openSocketInfo+10)
 13848  0029F6  24F3               	addwf	prodl,w,c
 13849  0029F8  6EE1               	movwf	fsr1l,c
 13850  0029FA  0E01               	movlw	high (_openSocketInfo+10)
 13851  0029FC  20F4               	addwfc	prodh,w,c
 13852  0029FE  6EE2               	movwf	fsr1h,c
 13853  002A00  CFDF FFE7          	movff	indf2,indf1
 13854                           
 13855                           ;miwi_mesh.c: 734: tempLongAddress[j] = openSocketInfo.LongAddress2[j];
 13856  002A04  0101               	movlb	1	; () banked
 13857  002A06  517B               	movf	MiWiTasks@j& (0+255),w,b
 13858  002A08  0D01               	mullw	1
 13859  002A0A  0ED7               	movlw	low (_openSocketInfo+10)
 13860  002A0C  24F3               	addwf	prodl,w,c
 13861  002A0E  6ED9               	movwf	fsr2l,c
 13862  002A10  0E01               	movlw	high (_openSocketInfo+10)
 13863  002A12  20F4               	addwfc	prodh,w,c
 13864  002A14  6EDA               	movwf	fsr2h,c
 13865  002A16  0101               	movlb	1	; () banked
 13866  002A18  517B               	movf	MiWiTasks@j& (0+255),w,b
 13867  002A1A  0D01               	mullw	1
 13868  002A1C  0EAA               	movlw	low _tempLongAddress
 13869  002A1E  24F3               	addwf	prodl,w,c
 13870  002A20  6EE1               	movwf	fsr1l,c
 13871  002A22  0E01               	movlw	high _tempLongAddress
 13872  002A24  20F4               	addwfc	prodh,w,c
 13873  002A26  6EE2               	movwf	fsr1h,c
 13874  002A28  CFDF FFE7          	movff	indf2,indf1
 13875                           
 13876                           ; BSR set to: 1
 13877  002A2C  0101               	movlb	1	; () banked
 13878  002A2E  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 13879  002A30  D7C5               	goto	l17086
 13880  002A32                     l17096:
 13881                           
 13882                           ; BSR set to: 1
 13883                           ;miwi_mesh.c: 735: }
 13884                           ;miwi_mesh.c: 739: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 13885  002A32  0101               	movlb	1	; () banked
 13886  002A34  EE20 F008          	lfsr	2,8
 13887  002A38  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13888  002A3A  26D9               	addwf	fsr2l,f,c
 13889  002A3C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13890  002A3E  22DA               	addwfc	fsr2h,f,c
 13891  002A40  50DF               	movf	indf2,w,c
 13892  002A42  0101               	movlb	1	; () banked
 13893  002A44  6FD5               	movwf	(_openSocketInfo+8)& (0+255),b
 13894                           
 13895                           ;miwi_mesh.c: 740: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 13896  002A46  0101               	movlb	1	; () banked
 13897  002A48  EE20 F009          	lfsr	2,9
 13898  002A4C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 13899  002A4E  26D9               	addwf	fsr2l,f,c
 13900  002A50  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 13901  002A52  22DA               	addwfc	fsr2h,f,c
 13902  002A54  50DF               	movf	indf2,w,c
 13903  002A56  0101               	movlb	1	; () banked
 13904  002A58  6FD6               	movwf	(_openSocketInfo+9)& (0+255),b
 13905                           
 13906                           ; BSR set to: 1
 13907                           ;miwi_mesh.c: 742: tempShortAddress.v[0] = openSocketInfo.ShortAddress2.v[0];
 13908  002A5A  C1D5  F1F4         	movff	_openSocketInfo+8,_tempShortAddress
 13909                           
 13910                           ; BSR set to: 1
 13911                           ;miwi_mesh.c: 743: tempShortAddress.v[1] = openSocketInfo.ShortAddress2.v[1];
 13912  002A5E  C1D6  F1F5         	movff	_openSocketInfo+9,_tempShortAddress+1
 13913                           
 13914                           ; BSR set to: 1
 13915                           ;miwi_mesh.c: 744: tempPANID.Val = myPANID.Val;
 13916  002A62  C1F0  F1BC         	movff	_myPANID,_tempPANID
 13917  002A66  C1F1  F1BD         	movff	_myPANID+1,_tempPANID+1
 13918                           
 13919                           ; BSR set to: 1
 13920                           ;miwi_mesh.c: 747: openSocketInfo.socketHandle = SearchForShortAddress();
 13921  002A6A  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 13922  002A6E  0101               	movlb	1	; () banked
 13923  002A70  6FCE               	movwf	(_openSocketInfo+1)& (0+255),b
 13924                           
 13925                           ; BSR set to: 1
 13926                           ;miwi_mesh.c: 749: if(openSocketInfo.socketHandle == 0xFF)
 13927  002A72  0101               	movlb	1	; () banked
 13928  002A74  29CE               	incf	(_openSocketInfo+1)& (0+255),w,b
 13929  002A76  A4D8               	btfss	status,2,c
 13930  002A78  D0A0               	goto	l17152
 13931                           
 13932                           ; BSR set to: 1
 13933                           ;miwi_mesh.c: 750: {
 13934                           ;miwi_mesh.c: 753: tempNodeStatus.Val = 0x8D;
 13935  002A7A  0E8D               	movlw	141
 13936  002A7C  0100               	movlb	0	; () banked
 13937  002A7E  6FE1               	movwf	_tempNodeStatus& (0+255),b
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;miwi_mesh.c: 754: if(tempShortAddress.v[0] & 0x80)
 13941  002A80  0101               	movlb	1	; () banked
 13942  002A82  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 13943  002A84  D002               	goto	l17114
 13944                           
 13945                           ; BSR set to: 1
 13946                           ;miwi_mesh.c: 755: {
 13947                           ;miwi_mesh.c: 756: tempNodeStatus.bits.RXOnWhenIdle = 0;
 13948  002A86  0100               	movlb	0	; () banked
 13949  002A88  91E1               	bcf	_tempNodeStatus& (0+255),0,b
 13950  002A8A                     l17114:
 13951                           
 13952                           ;miwi_mesh.c: 757: }
 13953                           ;miwi_mesh.c: 759: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 13954  002A8A  ECC3  F042         	call	_AddNodeToNetworkTable	;wreg free
 13955  002A8E  0101               	movlb	1	; () banked
 13956  002A90  6FCE               	movwf	(_openSocketInfo+1)& (0+255),b
 13957                           
 13958                           ; BSR set to: 1
 13959  002A92  D093               	goto	l17152
 13960  002A94                     l17118:
 13961                           
 13962                           ; BSR set to: 1
 13963                           ;miwi_mesh.c: 778: else
 13964                           ;miwi_mesh.c: 779: {
 13965                           ;miwi_mesh.c: 780: ;
 13966                           ;miwi_mesh.c: 784: {TxData = 11;};
 13967  002A94  0E0B               	movlw	11
 13968  002A96  0101               	movlb	1	; () banked
 13969  002A98  6FC7               	movwf	_TxData& (0+255),b
 13970                           
 13971                           ; BSR set to: 1
 13972                           ;miwi_mesh.c: 785: TxBuffer[TxData++] = 0x00;
 13973  002A9A  0101               	movlb	1	; () banked
 13974  002A9C  51C7               	movf	_TxData& (0+255),w,b
 13975  002A9E  0D01               	mullw	1
 13976  002AA0  0EA6               	movlw	low _TxBuffer
 13977  002AA2  24F3               	addwf	prodl,w,c
 13978  002AA4  6ED9               	movwf	fsr2l,c
 13979  002AA6  0E02               	movlw	high _TxBuffer
 13980  002AA8  20F4               	addwfc	prodh,w,c
 13981  002AAA  6EDA               	movwf	fsr2h,c
 13982  002AAC  0E00               	movlw	0
 13983  002AAE  6EDF               	movwf	indf2,c
 13984                           
 13985                           ; BSR set to: 1
 13986  002AB0  0101               	movlb	1	; () banked
 13987  002AB2  2BC7               	incf	_TxData& (0+255),f,b
 13988                           
 13989                           ; BSR set to: 1
 13990                           ;miwi_mesh.c: 786: TxBuffer[TxData++] = 0x11;
 13991  002AB4  0101               	movlb	1	; () banked
 13992  002AB6  51C7               	movf	_TxData& (0+255),w,b
 13993  002AB8  0D01               	mullw	1
 13994  002ABA  0EA6               	movlw	low _TxBuffer
 13995  002ABC  24F3               	addwf	prodl,w,c
 13996  002ABE  6ED9               	movwf	fsr2l,c
 13997  002AC0  0E02               	movlw	high _TxBuffer
 13998  002AC2  20F4               	addwfc	prodh,w,c
 13999  002AC4  6EDA               	movwf	fsr2h,c
 14000  002AC6  0E11               	movlw	17
 14001  002AC8  6EDF               	movwf	indf2,c
 14002                           
 14003                           ; BSR set to: 1
 14004  002ACA  0101               	movlb	1	; () banked
 14005  002ACC  2BC7               	incf	_TxData& (0+255),f,b
 14006                           
 14007                           ;miwi_mesh.c: 789: for(j=0;j<4;j++)
 14008  002ACE  0E00               	movlw	0
 14009  002AD0  0101               	movlb	1	; () banked
 14010  002AD2  6F7B               	movwf	MiWiTasks@j& (0+255),b
 14011  002AD4                     l17128:
 14012                           
 14013                           ; BSR set to: 1
 14014  002AD4  0E03               	movlw	3
 14015  002AD6  0101               	movlb	1	; () banked
 14016  002AD8  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 14017  002ADA  D001               	goto	l17132
 14018  002ADC  D038               	goto	l17140
 14019  002ADE                     l17132:
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;miwi_mesh.c: 790: {
 14023                           ;miwi_mesh.c: 791: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 14024  002ADE  0101               	movlb	1	; () banked
 14025  002AE0  517B               	movf	MiWiTasks@j& (0+255),w,b
 14026  002AE2  0101               	movlb	1	; () banked
 14027  002AE4  6F4A               	movwf	??_MiWiTasks& (0+255),b
 14028  002AE6  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 14029  002AE8  0E0D               	movlw	13
 14030  002AEA  0101               	movlb	1	; () banked
 14031  002AEC  274A               	addwf	??_MiWiTasks& (0+255),f,b
 14032  002AEE  0E00               	movlw	0
 14033  002AF0  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 14034  002AF2  0101               	movlb	1	; () banked
 14035  002AF4  514A               	movf	??_MiWiTasks& (0+255),w,b
 14036  002AF6  0101               	movlb	1	; () banked
 14037  002AF8  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14038  002AFA  6ED9               	movwf	fsr2l,c
 14039  002AFC  0101               	movlb	1	; () banked
 14040  002AFE  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 14041  002B00  0101               	movlb	1	; () banked
 14042  002B02  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14043  002B04  6EDA               	movwf	fsr2h,c
 14044  002B06  0101               	movlb	1	; () banked
 14045  002B08  517B               	movf	MiWiTasks@j& (0+255),w,b
 14046  002B0A  0D01               	mullw	1
 14047  002B0C  0ED7               	movlw	low (_openSocketInfo+10)
 14048  002B0E  24F3               	addwf	prodl,w,c
 14049  002B10  6EE1               	movwf	fsr1l,c
 14050  002B12  0E01               	movlw	high (_openSocketInfo+10)
 14051  002B14  20F4               	addwfc	prodh,w,c
 14052  002B16  6EE2               	movwf	fsr1h,c
 14053  002B18  CFDF FFE7          	movff	indf2,indf1
 14054                           
 14055                           ;miwi_mesh.c: 792: TxBuffer[TxData++] = openSocketInfo.LongAddress2[j];
 14056  002B1C  0101               	movlb	1	; () banked
 14057  002B1E  517B               	movf	MiWiTasks@j& (0+255),w,b
 14058  002B20  0D01               	mullw	1
 14059  002B22  0ED7               	movlw	low (_openSocketInfo+10)
 14060  002B24  24F3               	addwf	prodl,w,c
 14061  002B26  6ED9               	movwf	fsr2l,c
 14062  002B28  0E01               	movlw	high (_openSocketInfo+10)
 14063  002B2A  20F4               	addwfc	prodh,w,c
 14064  002B2C  6EDA               	movwf	fsr2h,c
 14065  002B2E  0101               	movlb	1	; () banked
 14066  002B30  51C7               	movf	_TxData& (0+255),w,b
 14067  002B32  0D01               	mullw	1
 14068  002B34  0EA6               	movlw	low _TxBuffer
 14069  002B36  24F3               	addwf	prodl,w,c
 14070  002B38  6EE1               	movwf	fsr1l,c
 14071  002B3A  0E02               	movlw	high _TxBuffer
 14072  002B3C  20F4               	addwfc	prodh,w,c
 14073  002B3E  6EE2               	movwf	fsr1h,c
 14074  002B40  CFDF FFE7          	movff	indf2,indf1
 14075                           
 14076                           ; BSR set to: 1
 14077  002B44  0101               	movlb	1	; () banked
 14078  002B46  2BC7               	incf	_TxData& (0+255),f,b
 14079                           
 14080                           ; BSR set to: 1
 14081  002B48  0101               	movlb	1	; () banked
 14082  002B4A  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 14083  002B4C  D7C3               	goto	l17128
 14084  002B4E                     l17140:
 14085                           
 14086                           ; BSR set to: 1
 14087                           ;miwi_mesh.c: 793: }
 14088                           ;miwi_mesh.c: 795: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 14089  002B4E  0101               	movlb	1	; () banked
 14090  002B50  EE20 F008          	lfsr	2,8
 14091  002B54  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14092  002B56  26D9               	addwf	fsr2l,f,c
 14093  002B58  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14094  002B5A  22DA               	addwfc	fsr2h,f,c
 14095  002B5C  50DF               	movf	indf2,w,c
 14096  002B5E  0101               	movlb	1	; () banked
 14097  002B60  6FD5               	movwf	(_openSocketInfo+8)& (0+255),b
 14098                           
 14099                           ;miwi_mesh.c: 796: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 14100  002B62  0101               	movlb	1	; () banked
 14101  002B64  EE20 F009          	lfsr	2,9
 14102  002B68  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14103  002B6A  26D9               	addwf	fsr2l,f,c
 14104  002B6C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14105  002B6E  22DA               	addwfc	fsr2h,f,c
 14106  002B70  50DF               	movf	indf2,w,c
 14107  002B72  0101               	movlb	1	; () banked
 14108  002B74  6FD6               	movwf	(_openSocketInfo+9)& (0+255),b
 14109                           
 14110                           ; BSR set to: 1
 14111                           ;miwi_mesh.c: 805: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[0];
 14112  002B76  0101               	movlb	1	; () banked
 14113  002B78  51C7               	movf	_TxData& (0+255),w,b
 14114  002B7A  0D01               	mullw	1
 14115  002B7C  0EA6               	movlw	low _TxBuffer
 14116  002B7E  24F3               	addwf	prodl,w,c
 14117  002B80  6ED9               	movwf	fsr2l,c
 14118  002B82  0E02               	movlw	high _TxBuffer
 14119  002B84  20F4               	addwfc	prodh,w,c
 14120  002B86  6EDA               	movwf	fsr2h,c
 14121  002B88  C1D5  FFDF         	movff	_openSocketInfo+8,indf2
 14122                           
 14123                           ; BSR set to: 1
 14124  002B8C  0101               	movlb	1	; () banked
 14125  002B8E  2BC7               	incf	_TxData& (0+255),f,b
 14126                           
 14127                           ; BSR set to: 1
 14128                           ;miwi_mesh.c: 806: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[1];
 14129  002B90  0101               	movlb	1	; () banked
 14130  002B92  51C7               	movf	_TxData& (0+255),w,b
 14131  002B94  0D01               	mullw	1
 14132  002B96  0EA6               	movlw	low _TxBuffer
 14133  002B98  24F3               	addwf	prodl,w,c
 14134  002B9A  6ED9               	movwf	fsr2l,c
 14135  002B9C  0E02               	movlw	high _TxBuffer
 14136  002B9E  20F4               	addwfc	prodh,w,c
 14137  002BA0  6EDA               	movwf	fsr2h,c
 14138  002BA2  C1D6  FFDF         	movff	_openSocketInfo+9,indf2
 14139                           
 14140                           ; BSR set to: 1
 14141  002BA6  0101               	movlb	1	; () banked
 14142  002BA8  2BC7               	incf	_TxData& (0+255),f,b
 14143                           
 14144                           ; BSR set to: 1
 14145                           ;miwi_mesh.c: 816: UnicastShortAddress(openSocketInfo.ShortAddress1.v);
 14146  002BAA  0ECF               	movlw	low (_openSocketInfo+2)
 14147  002BAC  0101               	movlb	1	; () banked
 14148  002BAE  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 14149  002BB0  0E01               	movlw	high (_openSocketInfo+2)
 14150  002BB2  0101               	movlb	1	; () banked
 14151  002BB4  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 14152  002BB6  EC3D  F050         	call	_UnicastShortAddress	;wreg free
 14153  002BBA                     l17152:
 14154                           
 14155                           ;miwi_mesh.c: 817: openSocketInfo.status.bits.requestIsOpen = 1;
 14156  002BBA  0101               	movlb	1	; () banked
 14157  002BBC  83CD               	bsf	_openSocketInfo& (0+255),1,b
 14158                           
 14159                           ; BSR set to: 1
 14160                           ;miwi_mesh.c: 818: openSocketInfo.status.bits.matchFound = 1;
 14161  002BBE  0101               	movlb	1	; () banked
 14162  002BC0  81CD               	bsf	_openSocketInfo& (0+255),0,b
 14163                           
 14164                           ; BSR set to: 1
 14165                           ;miwi_mesh.c: 819: }
 14166                           ;miwi_mesh.c: 821: }
 14167                           ;miwi_mesh.c: 822: }
 14168                           ;miwi_mesh.c: 823: break;
 14169                           
 14170                           ; BSR set to: 1
 14171                           
 14172                           ; BSR set to: 1
 14173  002BC2  EF85  F01D         	goto	l641
 14174  002BC6                     l17156:
 14175                           
 14176                           ; BSR set to: 1
 14177                           ;miwi_mesh.c: 827: {
 14178                           ;miwi_mesh.c: 828: uint8_t j;
 14179                           ;miwi_mesh.c: 831: for(j=0;j<4;j++)
 14180  002BC6  0E00               	movlw	0
 14181  002BC8  0101               	movlb	1	; () banked
 14182  002BCA  6F71               	movwf	MiWiTasks@j_2488& (0+255),b
 14183  002BCC                     l17158:
 14184                           
 14185                           ; BSR set to: 1
 14186  002BCC  0E03               	movlw	3
 14187  002BCE  0101               	movlb	1	; () banked
 14188  002BD0  6571               	cpfsgt	MiWiTasks@j_2488& (0+255),b
 14189  002BD2  D001               	goto	l17162
 14190  002BD4  D022               	goto	l17168
 14191  002BD6                     l17162:
 14192                           
 14193                           ; BSR set to: 1
 14194                           ;miwi_mesh.c: 832: {
 14195                           ;miwi_mesh.c: 833: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 14196  002BD6  0101               	movlb	1	; () banked
 14197  002BD8  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 14198  002BDA  0101               	movlb	1	; () banked
 14199  002BDC  6F4A               	movwf	??_MiWiTasks& (0+255),b
 14200  002BDE  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 14201  002BE0  0E0D               	movlw	13
 14202  002BE2  0101               	movlb	1	; () banked
 14203  002BE4  274A               	addwf	??_MiWiTasks& (0+255),f,b
 14204  002BE6  0E00               	movlw	0
 14205  002BE8  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 14206  002BEA  0101               	movlb	1	; () banked
 14207  002BEC  514A               	movf	??_MiWiTasks& (0+255),w,b
 14208  002BEE  0101               	movlb	1	; () banked
 14209  002BF0  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14210  002BF2  6ED9               	movwf	fsr2l,c
 14211  002BF4  0101               	movlb	1	; () banked
 14212  002BF6  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 14213  002BF8  0101               	movlb	1	; () banked
 14214  002BFA  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14215  002BFC  6EDA               	movwf	fsr2h,c
 14216  002BFE  0101               	movlb	1	; () banked
 14217  002C00  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 14218  002C02  0D01               	mullw	1
 14219  002C04  0EAA               	movlw	low _tempLongAddress
 14220  002C06  24F3               	addwf	prodl,w,c
 14221  002C08  6EE1               	movwf	fsr1l,c
 14222  002C0A  0E01               	movlw	high _tempLongAddress
 14223  002C0C  20F4               	addwfc	prodh,w,c
 14224  002C0E  6EE2               	movwf	fsr1h,c
 14225  002C10  CFDF FFE7          	movff	indf2,indf1
 14226                           
 14227                           ; BSR set to: 1
 14228  002C14  0101               	movlb	1	; () banked
 14229  002C16  2B71               	incf	MiWiTasks@j_2488& (0+255),f,b
 14230  002C18  D7D9               	goto	l17158
 14231  002C1A                     l17168:
 14232                           
 14233                           ; BSR set to: 1
 14234                           ;miwi_mesh.c: 834: }
 14235                           ;miwi_mesh.c: 837: tempNodeStatus.Val = 0x8D;
 14236  002C1A  0E8D               	movlw	141
 14237  002C1C  0100               	movlb	0	; () banked
 14238  002C1E  6FE1               	movwf	_tempNodeStatus& (0+255),b
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;miwi_mesh.c: 839: if(MACRxPacket.Payload[13+4] & 0x80)
 14242  002C20  0101               	movlb	1	; () banked
 14243  002C22  EE20 F011          	lfsr	2,17
 14244  002C26  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14245  002C28  26D9               	addwf	fsr2l,f,c
 14246  002C2A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14247  002C2C  22DA               	addwfc	fsr2h,f,c
 14248  002C2E  0101               	movlb	1	; () banked
 14249  002C30  AEDF               	btfss	indf2,7,c
 14250  002C32  D002               	goto	l17174
 14251                           
 14252                           ; BSR set to: 1
 14253                           ;miwi_mesh.c: 840: {
 14254                           ;miwi_mesh.c: 841: tempNodeStatus.bits.RXOnWhenIdle = 0;
 14255  002C34  0100               	movlb	0	; () banked
 14256  002C36  91E1               	bcf	_tempNodeStatus& (0+255),0,b
 14257  002C38                     l17174:
 14258                           
 14259                           ;miwi_mesh.c: 842: }
 14260                           ;miwi_mesh.c: 845: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 14261  002C38  0101               	movlb	1	; () banked
 14262  002C3A  EE20 F011          	lfsr	2,17
 14263  002C3E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14264  002C40  26D9               	addwf	fsr2l,f,c
 14265  002C42  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14266  002C44  22DA               	addwfc	fsr2h,f,c
 14267  002C46  50DF               	movf	indf2,w,c
 14268  002C48  0101               	movlb	1	; () banked
 14269  002C4A  6FF4               	movwf	_tempShortAddress& (0+255),b
 14270                           
 14271                           ;miwi_mesh.c: 846: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 14272  002C4C  0101               	movlb	1	; () banked
 14273  002C4E  EE20 F012          	lfsr	2,18
 14274  002C52  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14275  002C54  26D9               	addwf	fsr2l,f,c
 14276  002C56  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14277  002C58  22DA               	addwfc	fsr2h,f,c
 14278  002C5A  50DF               	movf	indf2,w,c
 14279  002C5C  0101               	movlb	1	; () banked
 14280  002C5E  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 14281                           
 14282                           ; BSR set to: 1
 14283                           ;miwi_mesh.c: 849: tempPANID.Val = myPANID.Val;
 14284  002C60  C1F0  F1BC         	movff	_myPANID,_tempPANID
 14285  002C64  C1F1  F1BD         	movff	_myPANID+1,_tempPANID+1
 14286                           
 14287                           ; BSR set to: 1
 14288                           ;miwi_mesh.c: 852: openSocketInfo.socketHandle = SearchForShortAddress();
 14289  002C68  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 14290  002C6C  0101               	movlb	1	; () banked
 14291  002C6E  6FCE               	movwf	(_openSocketInfo+1)& (0+255),b
 14292                           
 14293                           ; BSR set to: 1
 14294                           ;miwi_mesh.c: 854: if(openSocketInfo.socketHandle != 0xFF)
 14295  002C70  0101               	movlb	1	; () banked
 14296  002C72  29CE               	incf	(_openSocketInfo+1)& (0+255),w,b
 14297  002C74  B4D8               	btfsc	status,2,c
 14298  002C76  D015               	goto	l17188
 14299                           
 14300                           ; BSR set to: 1
 14301                           ;miwi_mesh.c: 855: {
 14302                           ;miwi_mesh.c: 857: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 14303  002C78  0101               	movlb	1	; () banked
 14304  002C7A  51CE               	movf	(_openSocketInfo+1)& (0+255),w,b
 14305  002C7C  0D09               	mullw	9
 14306  002C7E  0E08               	movlw	8
 14307  002C80  26F3               	addwf	prodl,f,c
 14308  002C82  0E00               	movlw	0
 14309  002C84  22F4               	addwfc	prodh,f,c
 14310  002C86  0E00               	movlw	low _ConnectionTable
 14311  002C88  24F3               	addwf	prodl,w,c
 14312  002C8A  6ED9               	movwf	fsr2l,c
 14313  002C8C  0E06               	movlw	high _ConnectionTable
 14314  002C8E  20F4               	addwfc	prodh,w,c
 14315  002C90  6EDA               	movwf	fsr2h,c
 14316  002C92  50DF               	movf	indf2,w,c
 14317  002C94  0100               	movlb	0	; () banked
 14318  002C96  6FE1               	movwf	_tempNodeStatus& (0+255),b
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;miwi_mesh.c: 858: tempNodeStatus.bits.longAddressValid = 1;
 14322  002C98  0100               	movlb	0	; () banked
 14323  002C9A  85E1               	bsf	_tempNodeStatus& (0+255),2,b
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;miwi_mesh.c: 859: tempNodeStatus.bits.shortAddressValid = 1;
 14327  002C9C  0100               	movlb	0	; () banked
 14328  002C9E  87E1               	bsf	_tempNodeStatus& (0+255),3,b
 14329                           
 14330                           ;miwi_mesh.c: 860: }
 14331  002CA0  D008               	goto	l17194
 14332  002CA2                     l17188:
 14333                           
 14334                           ;miwi_mesh.c: 861: else
 14335                           ;miwi_mesh.c: 862: {
 14336                           ;miwi_mesh.c: 864: tempNodeStatus.Val = 0x8D;
 14337  002CA2  0E8D               	movlw	141
 14338  002CA4  0100               	movlb	0	; () banked
 14339  002CA6  6FE1               	movwf	_tempNodeStatus& (0+255),b
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;miwi_mesh.c: 865: if(tempShortAddress.v[0] & 0x80)
 14343  002CA8  0101               	movlb	1	; () banked
 14344  002CAA  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 14345  002CAC  D002               	goto	l17194
 14346                           
 14347                           ; BSR set to: 1
 14348                           ;miwi_mesh.c: 866: {
 14349                           ;miwi_mesh.c: 867: tempNodeStatus.bits.RXOnWhenIdle = 0;
 14350  002CAE  0100               	movlb	0	; () banked
 14351  002CB0  91E1               	bcf	_tempNodeStatus& (0+255),0,b
 14352  002CB2                     l17194:
 14353                           
 14354                           ;miwi_mesh.c: 868: }
 14355                           ;miwi_mesh.c: 869: }
 14356                           ;miwi_mesh.c: 871: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 14357  002CB2  ECC3  F042         	call	_AddNodeToNetworkTable	;wreg free
 14358  002CB6  0101               	movlb	1	; () banked
 14359  002CB8  6FCE               	movwf	(_openSocketInfo+1)& (0+255),b
 14360                           
 14361                           ; BSR set to: 1
 14362                           ;miwi_mesh.c: 872: if( openSocketInfo.socketHandle < 0xFF )
 14363  002CBA  0101               	movlb	1	; () banked
 14364  002CBC  29CE               	incf	(_openSocketInfo+1)& (0+255),w,b
 14365  002CBE  B4D8               	btfsc	status,2,c
 14366  002CC0  D003               	goto	l691
 14367                           
 14368                           ; BSR set to: 1
 14369                           ;miwi_mesh.c: 873: {
 14370                           ;miwi_mesh.c: 883: openSocketInfo.status.bits.matchFound = 1;
 14371  002CC2  0101               	movlb	1	; () banked
 14372  002CC4  81CD               	bsf	_openSocketInfo& (0+255),0,b
 14373                           
 14374                           ;miwi_mesh.c: 884: }
 14375  002CC6  D002               	goto	l692
 14376  002CC8                     l691:
 14377                           
 14378                           ; BSR set to: 1
 14379                           ;miwi_mesh.c: 885: else
 14380                           ;miwi_mesh.c: 886: {
 14381                           ;miwi_mesh.c: 887: openSocketInfo.status.bits.matchFound = 0;
 14382  002CC8  0101               	movlb	1	; () banked
 14383  002CCA  91CD               	bcf	_openSocketInfo& (0+255),0,b
 14384  002CCC                     l692:
 14385                           
 14386                           ; BSR set to: 1
 14387                           ;miwi_mesh.c: 888: }
 14388                           ;miwi_mesh.c: 891: openSocketInfo.status.bits.requestIsOpen = 0;
 14389  002CCC  0101               	movlb	1	; () banked
 14390  002CCE  93CD               	bcf	_openSocketInfo& (0+255),1,b
 14391                           
 14392                           ; BSR set to: 1
 14393                           ;miwi_mesh.c: 969: }
 14394                           
 14395                           ; BSR set to: 1
 14396                           ;miwi_mesh.c: 968: break;
 14397                           
 14398                           ;miwi_mesh.c: 965: default:
 14399                           
 14400                           ;miwi_mesh.c: 893: }
 14401                           ;miwi_mesh.c: 894: break;
 14402  002CD0  EF85  F01D         	goto	l641
 14403  002CD4                     l17202:
 14404                           
 14405                           ; BSR set to: 1
 14406  002CD4  0101               	movlb	1	; () banked
 14407  002CD6  EE20 F00C          	lfsr	2,12
 14408  002CDA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14409  002CDC  26D9               	addwf	fsr2l,f,c
 14410  002CDE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14411  002CE0  22DA               	addwfc	fsr2h,f,c
 14412  002CE2  50DF               	movf	indf2,w,c
 14413                           
 14414                           ; Switch size 1, requested type "space"
 14415                           ; Number of cases is 2, Range of values is 16 to 17
 14416                           ; switch strategies available:
 14417                           ; Name         Instructions Cycles
 14418                           ; simple_byte            7     4 (average)
 14419                           ;	Chosen strategy is simple_byte
 14420  002CE4  0A10               	xorlw	16	; case 16
 14421  002CE6  B4D8               	btfsc	status,2,c
 14422  002CE8  D5F6               	goto	l667
 14423  002CEA  0A01               	xorlw	1	; case 17
 14424  002CEC  B4D8               	btfsc	status,2,c
 14425  002CEE  D76B               	goto	l17156
 14426                           
 14427                           ; BSR set to: 1
 14428                           ;miwi_mesh.c: 970: }
 14429  002CF0  EF85  F01D         	goto	l641
 14430  002CF4                     l17204:
 14431                           
 14432                           ; BSR set to: 1
 14433                           ;miwi_mesh.c: 971: else
 14434                           ;miwi_mesh.c: 972: {
 14435                           ;miwi_mesh.c: 974: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 14436                           ;miwi_mesh.c: 975: sourceShortAddress.Val == AcknowledgementAddr.Val)
 14437  002CF4  0101               	movlb	1	; () banked
 14438  002CF6  EE20 F00A          	lfsr	2,10
 14439  002CFA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14440  002CFC  26D9               	addwf	fsr2l,f,c
 14441  002CFE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14442  002D00  22DA               	addwfc	fsr2h,f,c
 14443  002D02  0101               	movlb	1	; () banked
 14444  002D04  51F8               	movf	_AcknowledgementSeq& (0+255),w,b
 14445  002D06  18DE               	xorwf	postinc2,w,c
 14446  002D08  A4D8               	btfss	status,2,c
 14447  002D0A  EF85  F01D         	goto	l641
 14448                           
 14449                           ; BSR set to: 1
 14450  002D0E  0101               	movlb	1	; () banked
 14451  002D10  51B4               	movf	_AcknowledgementAddr& (0+255),w,b
 14452  002D12  0101               	movlb	1	; () banked
 14453  002D14  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 14454  002D16  E105               	bnz	u18521
 14455  002D18  0101               	movlb	1	; () banked
 14456  002D1A  51B5               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 14457  002D1C  0101               	movlb	1	; () banked
 14458  002D1E  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 14459  002D20  A4D8               	btfss	status,2,c
 14460  002D22                     u18521:
 14461  002D22  EF85  F01D         	goto	l641
 14462                           
 14463                           ; BSR set to: 1
 14464                           ;miwi_mesh.c: 976: {
 14465                           ;miwi_mesh.c: 977: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14466  002D26  0101               	movlb	1	; () banked
 14467  002D28  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 14468                           
 14469                           ; BSR set to: 1
 14470                           ;miwi_mesh.c: 981: }
 14471                           ;miwi_mesh.c: 982: }
 14472                           
 14473                           ; BSR set to: 1
 14474                           ;miwi_mesh.c: 978: }
 14475                           ;miwi_mesh.c: 980: break;
 14476  002D2A  EF85  F01D         	goto	l641
 14477  002D2E                     l17210:
 14478                           
 14479                           ; BSR set to: 1
 14480                           ;miwi_mesh.c: 983: else
 14481                           ;miwi_mesh.c: 984: {
 14482                           ;miwi_mesh.c: 989: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 14483  002D2E  0101               	movlb	1	; () banked
 14484  002D30  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 14485  002D32  0FF5               	addlw	245
 14486  002D34  0101               	movlb	1	; () banked
 14487  002D36  6F97               	movwf	(_rxMessage+7)& (0+255),b
 14488                           
 14489                           ;miwi_mesh.c: 990: rxMessage.Payload = &MACRxPacket.Payload[11];
 14490  002D38  0E0B               	movlw	11
 14491  002D3A  0101               	movlb	1	; () banked
 14492  002D3C  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14493  002D3E  0101               	movlb	1	; () banked
 14494  002D40  6F95               	movwf	(_rxMessage+5)& (0+255),b
 14495  002D42  0E00               	movlw	0
 14496  002D44  0101               	movlb	1	; () banked
 14497  002D46  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14498  002D48  0101               	movlb	1	; () banked
 14499  002D4A  6F96               	movwf	(_rxMessage+6)& (0+255),b
 14500                           
 14501                           ; BSR set to: 1
 14502                           ;miwi_mesh.c: 991: rxMessage.SourcePANID.Val = sourcePANID.Val;
 14503  002D4C  C175  F191         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 14504  002D50  C176  F192         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 14505                           
 14506                           ; BSR set to: 1
 14507                           ;miwi_mesh.c: 992: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 14508  002D54  0101               	movlb	1	; () banked
 14509  002D56  EE20 F008          	lfsr	2,8
 14510  002D5A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14511  002D5C  26D9               	addwf	fsr2l,f,c
 14512  002D5E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14513  002D60  22DA               	addwfc	fsr2h,f,c
 14514  002D62  28DE               	incf	postinc2,w,c
 14515  002D64  A4D8               	btfss	status,2,c
 14516  002D66  D012               	goto	l697
 14517                           
 14518                           ; BSR set to: 1
 14519  002D68  0101               	movlb	1	; () banked
 14520  002D6A  EE20 F009          	lfsr	2,9
 14521  002D6E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14522  002D70  26D9               	addwf	fsr2l,f,c
 14523  002D72  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14524  002D74  22DA               	addwfc	fsr2h,f,c
 14525  002D76  28DE               	incf	postinc2,w,c
 14526  002D78  A4D8               	btfss	status,2,c
 14527  002D7A  D008               	goto	l697
 14528                           
 14529                           ; BSR set to: 1
 14530                           ;miwi_mesh.c: 993: {
 14531                           ;miwi_mesh.c: 998: if( MACRxPacket.flags.bits.sourcePrsnt )
 14532  002D7C  0101               	movlb	1	; () banked
 14533  002D7E  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 14534  002D80  D005               	goto	l697
 14535                           
 14536                           ; BSR set to: 1
 14537                           ;miwi_mesh.c: 999: {
 14538                           ;miwi_mesh.c: 1000: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 14539  002D82  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 14540  002D86  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 14541                           
 14542                           ;miwi_mesh.c: 1001: }
 14543  002D8A  D00C               	goto	l17226
 14544  002D8C                     l697:
 14545                           
 14546                           ; BSR set to: 1
 14547                           ;miwi_mesh.c: 1010: else
 14548                           ;miwi_mesh.c: 1011: {
 14549                           ;miwi_mesh.c: 1012: rxMessage.flags.bits.altSrcAddr = 1;
 14550  002D8C  0101               	movlb	1	; () banked
 14551  002D8E  8F90               	bsf	_rxMessage& (0+255),7,b
 14552                           
 14553                           ; BSR set to: 1
 14554                           ;miwi_mesh.c: 1013: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 14555  002D90  0E08               	movlw	8
 14556  002D92  0101               	movlb	1	; () banked
 14557  002D94  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14558  002D96  0101               	movlb	1	; () banked
 14559  002D98  6F93               	movwf	(_rxMessage+3)& (0+255),b
 14560  002D9A  0E00               	movlw	0
 14561  002D9C  0101               	movlb	1	; () banked
 14562  002D9E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14563  002DA0  0101               	movlb	1	; () banked
 14564  002DA2  6F94               	movwf	(_rxMessage+4)& (0+255),b
 14565  002DA4                     l17226:
 14566                           
 14567                           ; BSR set to: 1
 14568                           ;miwi_mesh.c: 1014: }
 14569                           ;miwi_mesh.c: 1015: rxMessage.flags.bits.srcPrsnt = 1;
 14570  002DA4  0101               	movlb	1	; () banked
 14571  002DA6  8D90               	bsf	_rxMessage& (0+255),6,b
 14572                           
 14573                           ; BSR set to: 1
 14574                           ;miwi_mesh.c: 1017: if( rxMessage.PayloadSize > 0 )
 14575  002DA8  0101               	movlb	1	; () banked
 14576  002DAA  5197               	movf	(_rxMessage+7)& (0+255),w,b
 14577  002DAC  B4D8               	btfsc	status,2,c
 14578  002DAE  EF85  F01D         	goto	l641
 14579                           
 14580                           ; BSR set to: 1
 14581                           ;miwi_mesh.c: 1018: {
 14582                           ;miwi_mesh.c: 1019: MiWiStateMachine.bits.RxHasUserData = 1;
 14583  002DB2  0101               	movlb	1	; () banked
 14584  002DB4  85B6               	bsf	_MiWiStateMachine& (0+255),2,b
 14585                           
 14586                           ; BSR set to: 1
 14587                           ;miwi_mesh.c: 1020: }
 14588                           ;miwi_mesh.c: 1022: }
 14589                           ;miwi_mesh.c: 1023: }
 14590                           
 14591                           ; BSR set to: 1
 14592  002DB6  EF85  F01D         	goto	l641
 14593  002DBA                     l17232:
 14594                           
 14595                           ; BSR set to: 1
 14596                           ;miwi_mesh.c: 1024: else
 14597                           ;miwi_mesh.c: 1025: {
 14598                           ;miwi_mesh.c: 1030: if( MACRxPacket.Payload[0] > 0 )
 14599  002DBA  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 14600  002DBE  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 14601  002DC2  50DF               	movf	indf2,w,c
 14602  002DC4  B4D8               	btfsc	status,2,c
 14603  002DC6  EF85  F01D         	goto	l641
 14604                           
 14605                           ; BSR set to: 1
 14606                           ;miwi_mesh.c: 1031: {
 14607                           ;miwi_mesh.c: 1032: MACRxPacket.Payload[0]--;
 14608  002DCA  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 14609  002DCE  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 14610  002DD2  06DF               	decf	indf2,f,c
 14611                           
 14612                           ; BSR set to: 1
 14613                           ;miwi_mesh.c: 1033: {TxData = 0;};
 14614  002DD4  0E00               	movlw	0
 14615  002DD6  0101               	movlb	1	; () banked
 14616  002DD8  6FC7               	movwf	_TxData& (0+255),b
 14617                           
 14618                           ; BSR set to: 1
 14619                           ;miwi_mesh.c: 1034: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 14620  002DDA  0E00               	movlw	0
 14621  002DDC  0101               	movlb	1	; () banked
 14622  002DDE  6F7C               	movwf	MiWiTasks@i& (0+255),b
 14623  002DE0  D01A               	goto	l17246
 14624  002DE2                     l17240:
 14625                           
 14626                           ; BSR set to: 1
 14627                           ;miwi_mesh.c: 1035: {
 14628                           ;miwi_mesh.c: 1036: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 14629  002DE2  0101               	movlb	1	; () banked
 14630  002DE4  517C               	movf	MiWiTasks@i& (0+255),w,b
 14631  002DE6  0D01               	mullw	1
 14632  002DE8  50F3               	movf	prodl,w,c
 14633  002DEA  0101               	movlb	1	; () banked
 14634  002DEC  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14635  002DEE  6ED9               	movwf	fsr2l,c
 14636  002DF0  50F4               	movf	prodh,w,c
 14637  002DF2  0101               	movlb	1	; () banked
 14638  002DF4  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14639  002DF6  6EDA               	movwf	fsr2h,c
 14640  002DF8  0101               	movlb	1	; () banked
 14641  002DFA  51C7               	movf	_TxData& (0+255),w,b
 14642  002DFC  0D01               	mullw	1
 14643  002DFE  0EA6               	movlw	low _TxBuffer
 14644  002E00  24F3               	addwf	prodl,w,c
 14645  002E02  6EE1               	movwf	fsr1l,c
 14646  002E04  0E02               	movlw	high _TxBuffer
 14647  002E06  20F4               	addwfc	prodh,w,c
 14648  002E08  6EE2               	movwf	fsr1h,c
 14649  002E0A  CFDF FFE7          	movff	indf2,indf1
 14650                           
 14651                           ; BSR set to: 1
 14652  002E0E  0101               	movlb	1	; () banked
 14653  002E10  2BC7               	incf	_TxData& (0+255),f,b
 14654                           
 14655                           ; BSR set to: 1
 14656  002E12  0101               	movlb	1	; () banked
 14657  002E14  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 14658  002E16                     l17246:
 14659                           
 14660                           ; BSR set to: 1
 14661  002E16  0101               	movlb	1	; () banked
 14662  002E18  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 14663  002E1A  0101               	movlb	1	; () banked
 14664  002E1C  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 14665  002E1E  A0D8               	btfss	status,0,c
 14666  002E20  D7E0               	goto	l17240
 14667                           
 14668                           ; BSR set to: 1
 14669                           ;miwi_mesh.c: 1037: }
 14670                           ;miwi_mesh.c: 1039: if( (destShortAddress.v[1] == myShortAddress.v[1]) &&
 14671                           ;miwi_mesh.c: 1040: (TxBuffer[11] == 0x00) &&
 14672                           ;miwi_mesh.c: 1041: (TxBuffer[12] == 0x30) )
 14673                           
 14674                           ; BSR set to: 1
 14675  002E22  0101               	movlb	1	; () banked
 14676  002E24  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 14677  002E26  0101               	movlb	1	; () banked
 14678  002E28  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 14679  002E2A  A4D8               	btfss	status,2,c
 14680  002E2C  D03C               	goto	l17266
 14681                           
 14682                           ; BSR set to: 1
 14683  002E2E  0102               	movlb	2	; () banked
 14684  002E30  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 14685  002E32  A4D8               	btfss	status,2,c
 14686  002E34  D038               	goto	l17266
 14687                           
 14688                           ; BSR set to: 2
 14689  002E36  0E30               	movlw	48
 14690  002E38  0102               	movlb	2	; () banked
 14691  002E3A  19B2               	xorwf	(_TxBuffer+12)& (0+255),w,b
 14692  002E3C  A4D8               	btfss	status,2,c
 14693  002E3E  D033               	goto	l17266
 14694                           
 14695                           ; BSR set to: 2
 14696                           ;miwi_mesh.c: 1042: {
 14697                           ;miwi_mesh.c: 1043: MTP.flags.Val = 0;
 14698  002E40  0E00               	movlw	0
 14699  002E42  0101               	movlb	1	; () banked
 14700  002E44  6FB1               	movwf	_MTP& (0+255),b
 14701                           
 14702                           ; BSR set to: 1
 14703                           ;miwi_mesh.c: 1044: MTP.flags.bits.ackReq = 1;
 14704  002E46  0101               	movlb	1	; () banked
 14705  002E48  8BB1               	bsf	_MTP& (0+255),5,b
 14706                           
 14707                           ; BSR set to: 1
 14708                           ;miwi_mesh.c: 1053: tempShortAddress.Val = destShortAddress.Val;
 14709  002E4A  C173  F1F4         	movff	MiWiTasks@destShortAddress,_tempShortAddress
 14710  002E4E  C174  F1F5         	movff	MiWiTasks@destShortAddress+1,_tempShortAddress+1
 14711                           
 14712                           ; BSR set to: 1
 14713                           ;miwi_mesh.c: 1054: if( (i = SearchForShortAddress()) != 0xFF )
 14714  002E52  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 14715  002E56  0101               	movlb	1	; () banked
 14716  002E58  6F7C               	movwf	MiWiTasks@i& (0+255),b
 14717  002E5A  0101               	movlb	1	; () banked
 14718  002E5C  297C               	incf	MiWiTasks@i& (0+255),w,b
 14719  002E5E  B4D8               	btfsc	status,2,c
 14720  002E60  EF85  F01D         	goto	l641
 14721                           
 14722                           ; BSR set to: 1
 14723                           ;miwi_mesh.c: 1055: {
 14724                           ;miwi_mesh.c: 1056: MTP.DestAddress = ConnectionTable[i].Address;
 14725  002E64  0101               	movlb	1	; () banked
 14726  002E66  517C               	movf	MiWiTasks@i& (0+255),w,b
 14727  002E68  0D09               	mullw	9
 14728  002E6A  0E04               	movlw	4
 14729  002E6C  26F3               	addwf	prodl,f,c
 14730  002E6E  0E00               	movlw	0
 14731  002E70  22F4               	addwfc	prodh,f,c
 14732  002E72  0E00               	movlw	low _ConnectionTable
 14733  002E74  24F3               	addwf	prodl,w,c
 14734  002E76  0101               	movlb	1	; () banked
 14735  002E78  6FB2               	movwf	(_MTP+1)& (0+255),b
 14736  002E7A  0E06               	movlw	high _ConnectionTable
 14737  002E7C  20F4               	addwfc	prodh,w,c
 14738  002E7E  0101               	movlb	1	; () banked
 14739  002E80  6FB3               	movwf	(_MTP+2)& (0+255),b
 14740                           
 14741                           ; BSR set to: 1
 14742                           ;miwi_mesh.c: 1057: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 14743  002E82  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 14744  002E86  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14745  002E8A  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14746  002E8E  0EA6               	movlw	low _TxBuffer
 14747  002E90  0101               	movlb	1	; () banked
 14748  002E92  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14749  002E94  0E02               	movlw	high _TxBuffer
 14750  002E96  0101               	movlb	1	; () banked
 14751  002E98  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14752  002E9A  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14753  002E9E  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 14754                           
 14755                           ;miwi_mesh.c: 1058: }
 14756                           ;miwi_mesh.c: 1060: }
 14757  002EA2  EF85  F01D         	goto	l641
 14758  002EA6                     l17266:
 14759                           
 14760                           ;miwi_mesh.c: 1061: else
 14761                           ;miwi_mesh.c: 1062: {
 14762                           ;miwi_mesh.c: 1063: RouteMessage(destPANID, destShortAddress, MACRxPacket.flags.bits.sec
      +                          En);
 14763  002EA6  C16D  F13D         	movff	MiWiTasks@destPANID,RouteMessage@PANID
 14764  002EAA  C16E  F13E         	movff	MiWiTasks@destPANID+1,RouteMessage@PANID+1
 14765  002EAE  C173  F13F         	movff	MiWiTasks@destShortAddress,RouteMessage@ShortAddress
 14766  002EB2  C174  F140         	movff	MiWiTasks@destShortAddress+1,RouteMessage@ShortAddress+1
 14767  002EB6  0E00               	movlw	0
 14768  002EB8  B79A               	btfsc	_MACRxPacket& (0+255),3,b
 14769  002EBA  0E01               	movlw	1
 14770  002EBC  0101               	movlb	1	; () banked
 14771  002EBE  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 14772  002EC0  EC08  F024         	call	_RouteMessage	;wreg free
 14773                           
 14774                           ;miwi_mesh.c: 1064: }
 14775                           ;miwi_mesh.c: 1065: }
 14776                           ;miwi_mesh.c: 1067: }
 14777                           ;miwi_mesh.c: 1069: }
 14778                           ;miwi_mesh.c: 1070: break;
 14779  002EC4  EF85  F01D         	goto	l641
 14780  002EC8                     l17268:
 14781                           
 14782                           ;miwi_mesh.c: 1074: {
 14783                           ;miwi_mesh.c: 1075: uint8_t rxIndex;
 14784                           ;miwi_mesh.c: 1080: rxIndex = 4;
 14785  002EC8  0E04               	movlw	4
 14786  002ECA  0101               	movlb	1	; () banked
 14787  002ECC  6F6F               	movwf	MiWiTasks@rxIndex& (0+255),b
 14788                           
 14789                           ; BSR set to: 1
 14790                           ;miwi_mesh.c: 1084: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 14791  002ECE  0101               	movlb	1	; () banked
 14792  002ED0  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 14793  002ED2  0101               	movlb	1	; () banked
 14794  002ED4  6F4A               	movwf	??_MiWiTasks& (0+255),b
 14795  002ED6  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 14796  002ED8  0E04               	movlw	4
 14797  002EDA  0101               	movlb	1	; () banked
 14798  002EDC  274A               	addwf	??_MiWiTasks& (0+255),f,b
 14799  002EDE  0E00               	movlw	0
 14800  002EE0  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 14801  002EE2  0101               	movlb	1	; () banked
 14802  002EE4  514A               	movf	??_MiWiTasks& (0+255),w,b
 14803  002EE6  0101               	movlb	1	; () banked
 14804  002EE8  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14805  002EEA  6ED9               	movwf	fsr2l,c
 14806  002EEC  0101               	movlb	1	; () banked
 14807  002EEE  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 14808  002EF0  0101               	movlb	1	; () banked
 14809  002EF2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14810  002EF4  6EDA               	movwf	fsr2h,c
 14811  002EF6  0E4D               	movlw	77
 14812  002EF8  18DE               	xorwf	postinc2,w,c
 14813  002EFA  A4D8               	btfss	status,2,c
 14814  002EFC  EF85  F01D         	goto	l641
 14815                           
 14816                           ; BSR set to: 1
 14817                           ;miwi_mesh.c: 1091: }
 14818                           ;miwi_mesh.c: 1092: }
 14819                           ;miwi_mesh.c: 1095: {
 14820                           ;miwi_mesh.c: 1101: uint8_t coordinatorNumber = MACRxPacket.Payload[3];
 14821                           
 14822                           ; BSR set to: 1
 14823                           
 14824                           ; BSR set to: 1
 14825                           ;miwi_mesh.c: 1085: {
 14826                           ;miwi_mesh.c: 1089: {
 14827                           ;miwi_mesh.c: 1090: break;
 14828  002F00  0101               	movlb	1	; () banked
 14829  002F02  EE20 F003          	lfsr	2,3
 14830  002F06  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14831  002F08  26D9               	addwf	fsr2l,f,c
 14832  002F0A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14833  002F0C  22DA               	addwfc	fsr2h,f,c
 14834  002F0E  50DF               	movf	indf2,w,c
 14835  002F10  0101               	movlb	1	; () banked
 14836  002F12  6F68               	movwf	MiWiTasks@coordinatorNumber& (0+255),b
 14837                           
 14838                           ; BSR set to: 1
 14839                           ;miwi_mesh.c: 1103: uint8_t mask = 1<<(coordinatorNumber);
 14840  002F14  C168  F14A         	movff	MiWiTasks@coordinatorNumber,??_MiWiTasks
 14841  002F18  0E01               	movlw	1
 14842  002F1A  0101               	movlb	1	; () banked
 14843  002F1C  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 14844  002F1E  0101               	movlb	1	; () banked
 14845  002F20  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 14846  002F22  D003               	goto	u18644
 14847  002F24                     u18645:
 14848  002F24  0101               	movlb	1	; () banked
 14849  002F26  90D8               	bcf	status,0,c
 14850  002F28  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 14851  002F2A                     u18644:
 14852  002F2A  0101               	movlb	1	; () banked
 14853  002F2C  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 14854  002F2E  D7FA               	goto	u18645
 14855  002F30  0101               	movlb	1	; () banked
 14856  002F32  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 14857  002F34  0101               	movlb	1	; () banked
 14858  002F36  6F60               	movwf	MiWiTasks@mask& (0+255),b
 14859                           
 14860                           ; BSR set to: 1
 14861                           ;miwi_mesh.c: 1109: if(MACRxPacket.Payload[2] == 0x00)
 14862  002F38  0101               	movlb	1	; () banked
 14863  002F3A  EE20 F002          	lfsr	2,2
 14864  002F3E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14865  002F40  26D9               	addwf	fsr2l,f,c
 14866  002F42  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14867  002F44  22DA               	addwfc	fsr2h,f,c
 14868  002F46  50DF               	movf	indf2,w,c
 14869  002F48  A4D8               	btfss	status,2,c
 14870  002F4A  D004               	goto	l17282
 14871                           
 14872                           ; BSR set to: 1
 14873                           ;miwi_mesh.c: 1111: {
 14874                           ;miwi_mesh.c: 1113: knownCoordinators |= mask;
 14875  002F4C  0101               	movlb	1	; () banked
 14876  002F4E  5160               	movf	MiWiTasks@mask& (0+255),w,b
 14877  002F50  0101               	movlb	1	; () banked
 14878  002F52  13C8               	iorwf	_knownCoordinators& (0+255),f,b
 14879  002F54                     l17282:
 14880                           
 14881                           ; BSR set to: 1
 14882                           ;miwi_mesh.c: 1114: }
 14883                           ;miwi_mesh.c: 1116: RoutingTable[coordinatorNumber] = MACRxPacket.Payload[rxIndex+6];
 14884  002F54  0101               	movlb	1	; () banked
 14885  002F56  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 14886  002F58  0101               	movlb	1	; () banked
 14887  002F5A  6F4A               	movwf	??_MiWiTasks& (0+255),b
 14888  002F5C  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 14889  002F5E  0E06               	movlw	6
 14890  002F60  0101               	movlb	1	; () banked
 14891  002F62  274A               	addwf	??_MiWiTasks& (0+255),f,b
 14892  002F64  0E00               	movlw	0
 14893  002F66  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 14894  002F68  0101               	movlb	1	; () banked
 14895  002F6A  514A               	movf	??_MiWiTasks& (0+255),w,b
 14896  002F6C  0101               	movlb	1	; () banked
 14897  002F6E  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 14898  002F70  6ED9               	movwf	fsr2l,c
 14899  002F72  0101               	movlb	1	; () banked
 14900  002F74  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 14901  002F76  0101               	movlb	1	; () banked
 14902  002F78  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 14903  002F7A  6EDA               	movwf	fsr2h,c
 14904  002F7C  0101               	movlb	1	; () banked
 14905  002F7E  5168               	movf	MiWiTasks@coordinatorNumber& (0+255),w,b
 14906  002F80  0D01               	mullw	1
 14907  002F82  0EB4               	movlw	low _RoutingTable
 14908  002F84  24F3               	addwf	prodl,w,c
 14909  002F86  6EE1               	movwf	fsr1l,c
 14910  002F88  0E00               	movlw	high _RoutingTable
 14911  002F8A  20F4               	addwfc	prodh,w,c
 14912  002F8C  6EE2               	movwf	fsr1h,c
 14913  002F8E  CFDF FFE7          	movff	indf2,indf1
 14914                           
 14915                           ; BSR set to: 1
 14916                           ;miwi_mesh.c: 1120: }
 14917                           ;miwi_mesh.c: 1124: {
 14918                           ;miwi_mesh.c: 1125: uint8_t entry;
 14919                           ;miwi_mesh.c: 1127: tempPANID.v[0] = MACRxPacket.Payload[0];
 14920  002F92  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 14921  002F96  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 14922  002F9A  50DF               	movf	indf2,w,c
 14923  002F9C  0101               	movlb	1	; () banked
 14924  002F9E  6FBC               	movwf	_tempPANID& (0+255),b
 14925                           
 14926                           ; BSR set to: 1
 14927                           ;miwi_mesh.c: 1128: tempPANID.v[1] = MACRxPacket.Payload[1];
 14928  002FA0  0101               	movlb	1	; () banked
 14929  002FA2  EE20 F001          	lfsr	2,1
 14930  002FA6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14931  002FA8  26D9               	addwf	fsr2l,f,c
 14932  002FAA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14933  002FAC  22DA               	addwfc	fsr2h,f,c
 14934  002FAE  50DF               	movf	indf2,w,c
 14935  002FB0  0101               	movlb	1	; () banked
 14936  002FB2  6FBD               	movwf	(_tempPANID+1)& (0+255),b
 14937                           
 14938                           ; BSR set to: 1
 14939                           ;miwi_mesh.c: 1129: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 14940  002FB4  0101               	movlb	1	; () banked
 14941  002FB6  EE20 F002          	lfsr	2,2
 14942  002FBA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14943  002FBC  26D9               	addwf	fsr2l,f,c
 14944  002FBE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14945  002FC0  22DA               	addwfc	fsr2h,f,c
 14946  002FC2  50DF               	movf	indf2,w,c
 14947  002FC4  0101               	movlb	1	; () banked
 14948  002FC6  6FF4               	movwf	_tempShortAddress& (0+255),b
 14949                           
 14950                           ; BSR set to: 1
 14951                           ;miwi_mesh.c: 1130: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 14952  002FC8  0101               	movlb	1	; () banked
 14953  002FCA  EE20 F003          	lfsr	2,3
 14954  002FCE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 14955  002FD0  26D9               	addwf	fsr2l,f,c
 14956  002FD2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 14957  002FD4  22DA               	addwfc	fsr2h,f,c
 14958  002FD6  50DF               	movf	indf2,w,c
 14959  002FD8  0101               	movlb	1	; () banked
 14960  002FDA  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 14961                           
 14962                           ; BSR set to: 1
 14963                           ;miwi_mesh.c: 1132: entry = SearchForShortAddress();
 14964  002FDC  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 14965  002FE0  0101               	movlb	1	; () banked
 14966  002FE2  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 14967                           
 14968                           ; BSR set to: 1
 14969                           ;miwi_mesh.c: 1133: if(entry == 0xFF)
 14970  002FE4  0101               	movlb	1	; () banked
 14971  002FE6  297A               	incf	MiWiTasks@entry& (0+255),w,b
 14972  002FE8  A4D8               	btfss	status,2,c
 14973  002FEA  D005               	goto	l17298
 14974                           
 14975                           ; BSR set to: 1
 14976                           ;miwi_mesh.c: 1134: {
 14977                           ;miwi_mesh.c: 1137: entry = findNextNetworkEntry();
 14978  002FEC  ECDB  F055         	call	_findNextNetworkEntry	;wreg free
 14979  002FF0  0101               	movlb	1	; () banked
 14980  002FF2  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 14981                           
 14982                           ;miwi_mesh.c: 1138: }
 14983  002FF4  D03E               	goto	l17316
 14984  002FF6                     l17298:
 14985                           
 14986                           ; BSR set to: 1
 14987                           ;miwi_mesh.c: 1139: else
 14988                           ;miwi_mesh.c: 1140: {
 14989                           ;miwi_mesh.c: 1141: for(i = 0; i < 4; i++)
 14990  002FF6  0E00               	movlw	0
 14991  002FF8  0101               	movlb	1	; () banked
 14992  002FFA  6F7C               	movwf	MiWiTasks@i& (0+255),b
 14993  002FFC                     l17300:
 14994                           
 14995                           ; BSR set to: 1
 14996  002FFC  0E03               	movlw	3
 14997  002FFE  0101               	movlb	1	; () banked
 14998  003000  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 14999  003002  D001               	goto	l17304
 15000  003004  D030               	goto	l17312
 15001  003006                     l17304:
 15002                           
 15003                           ; BSR set to: 1
 15004                           ;miwi_mesh.c: 1142: {
 15005                           ;miwi_mesh.c: 1143: if( ConnectionTable[entry].Address[i] != MACRxPacket.SourceAddress[i
      +                          ] )
 15006  003006  0101               	movlb	1	; () banked
 15007  003008  517C               	movf	MiWiTasks@i& (0+255),w,b
 15008  00300A  0D01               	mullw	1
 15009  00300C  50F3               	movf	prodl,w,c
 15010  00300E  0101               	movlb	1	; () banked
 15011  003010  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 15012  003012  6ED9               	movwf	fsr2l,c
 15013  003014  50F4               	movf	prodh,w,c
 15014  003016  0101               	movlb	1	; () banked
 15015  003018  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 15016  00301A  6EDA               	movwf	fsr2h,c
 15017  00301C  0101               	movlb	1	; () banked
 15018  00301E  517C               	movf	MiWiTasks@i& (0+255),w,b
 15019  003020  0D01               	mullw	1
 15020  003022  0E04               	movlw	4
 15021  003024  26F3               	addwf	prodl,f,c
 15022  003026  0E00               	movlw	0
 15023  003028  22F4               	addwfc	prodh,f,c
 15024  00302A  0E00               	movlw	low _ConnectionTable
 15025  00302C  0101               	movlb	1	; () banked
 15026  00302E  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 15027  003030  0E06               	movlw	high _ConnectionTable
 15028  003032  0101               	movlb	1	; () banked
 15029  003034  6F4C               	movwf	(??_MiWiTasks+2)& (0+255),b
 15030  003036  50F3               	movf	prodl,w,c
 15031  003038  0101               	movlb	1	; () banked
 15032  00303A  274B               	addwf	(??_MiWiTasks+1)& (0+255),f,b
 15033  00303C  50F4               	movf	prodh,w,c
 15034  00303E  0101               	movlb	1	; () banked
 15035  003040  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 15036  003042  0101               	movlb	1	; () banked
 15037  003044  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15038  003046  0D09               	mullw	9
 15039  003048  50F3               	movf	prodl,w,c
 15040  00304A  0101               	movlb	1	; () banked
 15041  00304C  254B               	addwf	(??_MiWiTasks+1)& (0+255),w,b
 15042  00304E  6EE1               	movwf	fsr1l,c
 15043  003050  50F4               	movf	prodh,w,c
 15044  003052  0101               	movlb	1	; () banked
 15045  003054  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 15046  003056  6EE2               	movwf	fsr1h,c
 15047  003058  50DE               	movf	postinc2,w,c
 15048  00305A  18E6               	xorwf	postinc1,w,c
 15049  00305C  A4D8               	btfss	status,2,c
 15050  00305E  D003               	goto	l17312
 15051                           
 15052                           ; BSR set to: 1
 15053                           
 15054                           ; BSR set to: 1
 15055                           
 15056                           ; BSR set to: 1
 15057                           ;miwi_mesh.c: 1144: {
 15058                           ;miwi_mesh.c: 1145: break;
 15059  003060  0101               	movlb	1	; () banked
 15060  003062  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15061  003064  D7CB               	goto	l17300
 15062  003066                     l17312:
 15063                           
 15064                           ; BSR set to: 1
 15065                           ;miwi_mesh.c: 1146: }
 15066                           ;miwi_mesh.c: 1147: }
 15067                           ;miwi_mesh.c: 1148: if( i >= 4 )
 15068  003066  0E03               	movlw	3
 15069  003068  0101               	movlb	1	; () banked
 15070  00306A  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15071  00306C  D002               	goto	l17316
 15072                           
 15073                           ; BSR set to: 1
 15074                           ;miwi_mesh.c: 1149: {
 15075                           ;miwi_mesh.c: 1150: entry = 0xFF;
 15076  00306E  0101               	movlb	1	; () banked
 15077  003070  697A               	setf	MiWiTasks@entry& (0+255),b
 15078  003072                     l17316:
 15079                           
 15080                           ; BSR set to: 1
 15081                           ;miwi_mesh.c: 1151: }
 15082                           ;miwi_mesh.c: 1152: }
 15083                           ;miwi_mesh.c: 1154: if( entry < 0xFF )
 15084  003072  0101               	movlb	1	; () banked
 15085  003074  297A               	incf	MiWiTasks@entry& (0+255),w,b
 15086  003076  B4D8               	btfsc	status,2,c
 15087  003078  D0A9               	goto	l17334
 15088                           
 15089                           ; BSR set to: 1
 15090                           ;miwi_mesh.c: 1155: {
 15091                           ;miwi_mesh.c: 1156: ConnectionTable[entry].PANID.Val = tempPANID.Val;
 15092  00307A  0101               	movlb	1	; () banked
 15093  00307C  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15094  00307E  0D09               	mullw	9
 15095  003080  0E00               	movlw	low _ConnectionTable
 15096  003082  24F3               	addwf	prodl,w,c
 15097  003084  6ED9               	movwf	fsr2l,c
 15098  003086  0E06               	movlw	high _ConnectionTable
 15099  003088  20F4               	addwfc	prodh,w,c
 15100  00308A  6EDA               	movwf	fsr2h,c
 15101  00308C  C1BC  FFDE         	movff	_tempPANID,postinc2
 15102  003090  C1BD  FFDD         	movff	_tempPANID+1,postdec2
 15103                           
 15104                           ;miwi_mesh.c: 1157: ConnectionTable[entry].AltAddress.Val = tempShortAddress.Val;
 15105  003094  0101               	movlb	1	; () banked
 15106  003096  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15107  003098  0D09               	mullw	9
 15108  00309A  0E02               	movlw	2
 15109  00309C  26F3               	addwf	prodl,f,c
 15110  00309E  0E00               	movlw	0
 15111  0030A0  22F4               	addwfc	prodh,f,c
 15112  0030A2  0E00               	movlw	low _ConnectionTable
 15113  0030A4  24F3               	addwf	prodl,w,c
 15114  0030A6  6ED9               	movwf	fsr2l,c
 15115  0030A8  0E06               	movlw	high _ConnectionTable
 15116  0030AA  20F4               	addwfc	prodh,w,c
 15117  0030AC  6EDA               	movwf	fsr2h,c
 15118  0030AE  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 15119  0030B2  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 15120                           
 15121                           ; BSR set to: 1
 15122                           ;miwi_mesh.c: 1159: for(i = 0; i < 4; i++)
 15123  0030B6  0E00               	movlw	0
 15124  0030B8  0101               	movlb	1	; () banked
 15125  0030BA  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15126  0030BC                     l17322:
 15127                           
 15128                           ; BSR set to: 1
 15129  0030BC  0E03               	movlw	3
 15130  0030BE  0101               	movlb	1	; () banked
 15131  0030C0  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15132  0030C2  D001               	goto	l17326
 15133  0030C4  D02E               	goto	l17332
 15134  0030C6                     l17326:
 15135                           
 15136                           ; BSR set to: 1
 15137                           ;miwi_mesh.c: 1160: {
 15138                           ;miwi_mesh.c: 1161: ConnectionTable[entry].Address[i] = MACRxPacket.SourceAddress[i];
 15139  0030C6  0101               	movlb	1	; () banked
 15140  0030C8  517C               	movf	MiWiTasks@i& (0+255),w,b
 15141  0030CA  0D01               	mullw	1
 15142  0030CC  50F3               	movf	prodl,w,c
 15143  0030CE  0101               	movlb	1	; () banked
 15144  0030D0  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 15145  0030D2  6ED9               	movwf	fsr2l,c
 15146  0030D4  50F4               	movf	prodh,w,c
 15147  0030D6  0101               	movlb	1	; () banked
 15148  0030D8  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 15149  0030DA  6EDA               	movwf	fsr2h,c
 15150  0030DC  0101               	movlb	1	; () banked
 15151  0030DE  517C               	movf	MiWiTasks@i& (0+255),w,b
 15152  0030E0  0D01               	mullw	1
 15153  0030E2  0E04               	movlw	4
 15154  0030E4  26F3               	addwf	prodl,f,c
 15155  0030E6  0E00               	movlw	0
 15156  0030E8  22F4               	addwfc	prodh,f,c
 15157  0030EA  0E00               	movlw	low _ConnectionTable
 15158  0030EC  0101               	movlb	1	; () banked
 15159  0030EE  6F4A               	movwf	??_MiWiTasks& (0+255),b
 15160  0030F0  0E06               	movlw	high _ConnectionTable
 15161  0030F2  0101               	movlb	1	; () banked
 15162  0030F4  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 15163  0030F6  50F3               	movf	prodl,w,c
 15164  0030F8  0101               	movlb	1	; () banked
 15165  0030FA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 15166  0030FC  50F4               	movf	prodh,w,c
 15167  0030FE  0101               	movlb	1	; () banked
 15168  003100  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 15169  003102  0101               	movlb	1	; () banked
 15170  003104  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15171  003106  0D09               	mullw	9
 15172  003108  50F3               	movf	prodl,w,c
 15173  00310A  0101               	movlb	1	; () banked
 15174  00310C  254A               	addwf	??_MiWiTasks& (0+255),w,b
 15175  00310E  6EE1               	movwf	fsr1l,c
 15176  003110  50F4               	movf	prodh,w,c
 15177  003112  0101               	movlb	1	; () banked
 15178  003114  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 15179  003116  6EE2               	movwf	fsr1h,c
 15180  003118  CFDF FFE7          	movff	indf2,indf1
 15181                           
 15182                           ; BSR set to: 1
 15183  00311C  0101               	movlb	1	; () banked
 15184  00311E  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15185  003120  D7CD               	goto	l17322
 15186  003122                     l17332:
 15187                           
 15188                           ; BSR set to: 1
 15189                           ;miwi_mesh.c: 1162: }
 15190                           ;miwi_mesh.c: 1165: ConnectionTable[entry].status.Val = 0;
 15191  003122  0101               	movlb	1	; () banked
 15192  003124  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15193  003126  0D09               	mullw	9
 15194  003128  0E08               	movlw	8
 15195  00312A  26F3               	addwf	prodl,f,c
 15196  00312C  0E00               	movlw	0
 15197  00312E  22F4               	addwfc	prodh,f,c
 15198  003130  0E00               	movlw	low _ConnectionTable
 15199  003132  24F3               	addwf	prodl,w,c
 15200  003134  6ED9               	movwf	fsr2l,c
 15201  003136  0E06               	movlw	high _ConnectionTable
 15202  003138  20F4               	addwfc	prodh,w,c
 15203  00313A  6EDA               	movwf	fsr2h,c
 15204  00313C  0E00               	movlw	0
 15205  00313E  6EDF               	movwf	indf2,c
 15206                           
 15207                           ;miwi_mesh.c: 1166: ConnectionTable[entry].status.bits.directConnection = 1;
 15208  003140  0101               	movlb	1	; () banked
 15209  003142  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15210  003144  0D09               	mullw	9
 15211  003146  0E08               	movlw	8
 15212  003148  26F3               	addwf	prodl,f,c
 15213  00314A  0E00               	movlw	0
 15214  00314C  22F4               	addwfc	prodh,f,c
 15215  00314E  0E00               	movlw	low _ConnectionTable
 15216  003150  24F3               	addwf	prodl,w,c
 15217  003152  6ED9               	movwf	fsr2l,c
 15218  003154  0E06               	movlw	high _ConnectionTable
 15219  003156  20F4               	addwfc	prodh,w,c
 15220  003158  6EDA               	movwf	fsr2h,c
 15221  00315A  82DF               	bsf	indf2,1,c
 15222                           
 15223                           ;miwi_mesh.c: 1167: ConnectionTable[entry].status.bits.RXOnWhenIdle = 1;
 15224  00315C  0101               	movlb	1	; () banked
 15225  00315E  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15226  003160  0D09               	mullw	9
 15227  003162  0E08               	movlw	8
 15228  003164  26F3               	addwf	prodl,f,c
 15229  003166  0E00               	movlw	0
 15230  003168  22F4               	addwfc	prodh,f,c
 15231  00316A  0E00               	movlw	low _ConnectionTable
 15232  00316C  24F3               	addwf	prodl,w,c
 15233  00316E  6ED9               	movwf	fsr2l,c
 15234  003170  0E06               	movlw	high _ConnectionTable
 15235  003172  20F4               	addwfc	prodh,w,c
 15236  003174  6EDA               	movwf	fsr2h,c
 15237  003176  80DF               	bsf	indf2,0,c
 15238                           
 15239                           ;miwi_mesh.c: 1168: ConnectionTable[entry].status.bits.longAddressValid = 1;
 15240  003178  0101               	movlb	1	; () banked
 15241  00317A  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15242  00317C  0D09               	mullw	9
 15243  00317E  0E08               	movlw	8
 15244  003180  26F3               	addwf	prodl,f,c
 15245  003182  0E00               	movlw	0
 15246  003184  22F4               	addwfc	prodh,f,c
 15247  003186  0E00               	movlw	low _ConnectionTable
 15248  003188  24F3               	addwf	prodl,w,c
 15249  00318A  6ED9               	movwf	fsr2l,c
 15250  00318C  0E06               	movlw	high _ConnectionTable
 15251  00318E  20F4               	addwfc	prodh,w,c
 15252  003190  6EDA               	movwf	fsr2h,c
 15253  003192  84DF               	bsf	indf2,2,c
 15254                           
 15255                           ;miwi_mesh.c: 1169: ConnectionTable[entry].status.bits.shortAddressValid = 1;
 15256  003194  0101               	movlb	1	; () banked
 15257  003196  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15258  003198  0D09               	mullw	9
 15259  00319A  0E08               	movlw	8
 15260  00319C  26F3               	addwf	prodl,f,c
 15261  00319E  0E00               	movlw	0
 15262  0031A0  22F4               	addwfc	prodh,f,c
 15263  0031A2  0E00               	movlw	low _ConnectionTable
 15264  0031A4  24F3               	addwf	prodl,w,c
 15265  0031A6  6ED9               	movwf	fsr2l,c
 15266  0031A8  0E06               	movlw	high _ConnectionTable
 15267  0031AA  20F4               	addwfc	prodh,w,c
 15268  0031AC  6EDA               	movwf	fsr2h,c
 15269  0031AE  86DF               	bsf	indf2,3,c
 15270                           
 15271                           ;miwi_mesh.c: 1170: ConnectionTable[entry].status.bits.isValid = 1;
 15272  0031B0  0101               	movlb	1	; () banked
 15273  0031B2  517A               	movf	MiWiTasks@entry& (0+255),w,b
 15274  0031B4  0D09               	mullw	9
 15275  0031B6  0E08               	movlw	8
 15276  0031B8  26F3               	addwf	prodl,f,c
 15277  0031BA  0E00               	movlw	0
 15278  0031BC  22F4               	addwfc	prodh,f,c
 15279  0031BE  0E00               	movlw	low _ConnectionTable
 15280  0031C0  24F3               	addwf	prodl,w,c
 15281  0031C2  6ED9               	movwf	fsr2l,c
 15282  0031C4  0E06               	movlw	high _ConnectionTable
 15283  0031C6  20F4               	addwfc	prodh,w,c
 15284  0031C8  6EDA               	movwf	fsr2h,c
 15285  0031CA  8EDF               	bsf	indf2,7,c
 15286  0031CC                     l17334:
 15287                           
 15288                           ; BSR set to: 1
 15289                           ;miwi_mesh.c: 1175: }
 15290                           ;miwi_mesh.c: 1176: }
 15291                           ;miwi_mesh.c: 1187: if(MiWiStateMachine.bits.searchingForNetwork)
 15292  0031CC  0101               	movlb	1	; () banked
 15293  0031CE  A1B6               	btfss	_MiWiStateMachine& (0+255),0,b
 15294  0031D0  EF85  F01D         	goto	l641
 15295                           
 15296                           ; BSR set to: 1
 15297                           ;miwi_mesh.c: 1188: {
 15298                           ;miwi_mesh.c: 1194: tempPANID.v[0] = MACRxPacket.Payload[0];
 15299  0031D4  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15300  0031D8  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15301  0031DC  50DF               	movf	indf2,w,c
 15302  0031DE  0101               	movlb	1	; () banked
 15303  0031E0  6FBC               	movwf	_tempPANID& (0+255),b
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;miwi_mesh.c: 1195: tempPANID.v[1] = MACRxPacket.Payload[1];
 15307  0031E2  0101               	movlb	1	; () banked
 15308  0031E4  EE20 F001          	lfsr	2,1
 15309  0031E8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15310  0031EA  26D9               	addwf	fsr2l,f,c
 15311  0031EC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15312  0031EE  22DA               	addwfc	fsr2h,f,c
 15313  0031F0  50DF               	movf	indf2,w,c
 15314  0031F2  0101               	movlb	1	; () banked
 15315  0031F4  6FBD               	movwf	(_tempPANID+1)& (0+255),b
 15316                           
 15317                           ; BSR set to: 1
 15318                           ;miwi_mesh.c: 1196: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 15319  0031F6  0101               	movlb	1	; () banked
 15320  0031F8  EE20 F002          	lfsr	2,2
 15321  0031FC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15322  0031FE  26D9               	addwf	fsr2l,f,c
 15323  003200  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15324  003202  22DA               	addwfc	fsr2h,f,c
 15325  003204  50DF               	movf	indf2,w,c
 15326  003206  0101               	movlb	1	; () banked
 15327  003208  6FF4               	movwf	_tempShortAddress& (0+255),b
 15328                           
 15329                           ; BSR set to: 1
 15330                           ;miwi_mesh.c: 1197: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 15331  00320A  0101               	movlb	1	; () banked
 15332  00320C  EE20 F003          	lfsr	2,3
 15333  003210  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15334  003212  26D9               	addwf	fsr2l,f,c
 15335  003214  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15336  003216  22DA               	addwfc	fsr2h,f,c
 15337  003218  50DF               	movf	indf2,w,c
 15338  00321A  0101               	movlb	1	; () banked
 15339  00321C  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 15340                           
 15341                           ; BSR set to: 1
 15342                           ;miwi_mesh.c: 1201: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 15343  00321E  0101               	movlb	1	; () banked
 15344  003220  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 15345  003222  0D01               	mullw	1
 15346  003224  50F3               	movf	prodl,w,c
 15347  003226  0101               	movlb	1	; () banked
 15348  003228  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 15349  00322A  6ED9               	movwf	fsr2l,c
 15350  00322C  50F4               	movf	prodh,w,c
 15351  00322E  0101               	movlb	1	; () banked
 15352  003230  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 15353  003232  6EDA               	movwf	fsr2h,c
 15354  003234  28DE               	incf	postinc2,w,c
 15355  003236  A4D8               	btfss	status,2,c
 15356  003238  EF85  F01D         	goto	l641
 15357                           
 15358                           ; BSR set to: 1
 15359                           ;miwi_mesh.c: 1202: {
 15360                           ;miwi_mesh.c: 1203: MIWI_CAPACITY_INFO CapacityByte;
 15361                           ;miwi_mesh.c: 1204: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 15362  00323C  0101               	movlb	1	; () banked
 15363  00323E  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 15364  003240  0101               	movlb	1	; () banked
 15365  003242  6F4A               	movwf	??_MiWiTasks& (0+255),b
 15366  003244  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 15367  003246  0E01               	movlw	1
 15368  003248  0101               	movlb	1	; () banked
 15369  00324A  274A               	addwf	??_MiWiTasks& (0+255),f,b
 15370  00324C  0E00               	movlw	0
 15371  00324E  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 15372  003250  0101               	movlb	1	; () banked
 15373  003252  514A               	movf	??_MiWiTasks& (0+255),w,b
 15374  003254  0101               	movlb	1	; () banked
 15375  003256  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 15376  003258  6ED9               	movwf	fsr2l,c
 15377  00325A  0101               	movlb	1	; () banked
 15378  00325C  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 15379  00325E  0101               	movlb	1	; () banked
 15380  003260  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 15381  003262  6EDA               	movwf	fsr2h,c
 15382  003264  50DF               	movf	indf2,w,c
 15383  003266  0101               	movlb	1	; () banked
 15384  003268  6F70               	movwf	MiWiTasks@CapacityByte& (0+255),b
 15385                           
 15386                           ; BSR set to: 1
 15387                           ;miwi_mesh.c: 1205: if( (ActiveScanResultIndex < 4) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 15388  00326A  0E04               	movlw	4
 15389  00326C  0101               	movlb	1	; () banked
 15390  00326E  61BE               	cpfslt	_ActiveScanResultIndex& (0+255),b
 15391  003270  EF85  F01D         	goto	l641
 15392                           
 15393                           ; BSR set to: 1
 15394  003274  0101               	movlb	1	; () banked
 15395  003276  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 15396  003278  0B03               	andlw	3
 15397  00327A  0101               	movlb	1	; () banked
 15398  00327C  6F4A               	movwf	??_MiWiTasks& (0+255),b
 15399  00327E  0E02               	movlw	2
 15400  003280  0101               	movlb	1	; () banked
 15401  003282  614A               	cpfslt	??_MiWiTasks& (0+255),b
 15402  003284  EF85  F01D         	goto	l641
 15403                           
 15404                           ; BSR set to: 1
 15405                           ;miwi_mesh.c: 1206: {
 15406                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 15407  003288  0101               	movlb	1	; () banked
 15408  00328A  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15409  00328C  0D0A               	mullw	10
 15410  00328E  0E00               	movlw	low _ActiveScanResults
 15411  003290  24F3               	addwf	prodl,w,c
 15412  003292  6ED9               	movwf	fsr2l,c
 15413  003294  0E02               	movlw	high _ActiveScanResults
 15414  003296  20F4               	addwfc	prodh,w,c
 15415  003298  6EDA               	movwf	fsr2h,c
 15416  00329A  C1F6  FFDF         	movff	_currentChannel,indf2
 15417                           
 15418                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 15419  00329E  0101               	movlb	1	; () banked
 15420  0032A0  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15421  0032A2  0D0A               	mullw	10
 15422  0032A4  0E07               	movlw	7
 15423  0032A6  26F3               	addwf	prodl,f,c
 15424  0032A8  0E00               	movlw	0
 15425  0032AA  22F4               	addwfc	prodh,f,c
 15426  0032AC  0E00               	movlw	low _ActiveScanResults
 15427  0032AE  24F3               	addwf	prodl,w,c
 15428  0032B0  6ED9               	movwf	fsr2l,c
 15429  0032B2  0E02               	movlw	high _ActiveScanResults
 15430  0032B4  20F4               	addwfc	prodh,w,c
 15431  0032B6  6EDA               	movwf	fsr2h,c
 15432  0032B8  C198  FFDF         	movff	_rxMessage+8,indf2
 15433                           
 15434                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 15435  0032BC  0101               	movlb	1	; () banked
 15436  0032BE  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15437  0032C0  0D0A               	mullw	10
 15438  0032C2  0E08               	movlw	8
 15439  0032C4  26F3               	addwf	prodl,f,c
 15440  0032C6  0E00               	movlw	0
 15441  0032C8  22F4               	addwfc	prodh,f,c
 15442  0032CA  0E00               	movlw	low _ActiveScanResults
 15443  0032CC  24F3               	addwf	prodl,w,c
 15444  0032CE  6ED9               	movwf	fsr2l,c
 15445  0032D0  0E02               	movlw	high _ActiveScanResults
 15446  0032D2  20F4               	addwfc	prodh,w,c
 15447  0032D4  6EDA               	movwf	fsr2h,c
 15448  0032D6  C199  FFDF         	movff	_rxMessage+9,indf2
 15449                           
 15450                           ;miwi_mesh.c: 1211: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 15451  0032DA  0101               	movlb	1	; () banked
 15452  0032DC  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15453  0032DE  0D0A               	mullw	10
 15454  0032E0  0E05               	movlw	5
 15455  0032E2  26F3               	addwf	prodl,f,c
 15456  0032E4  0E00               	movlw	0
 15457  0032E6  22F4               	addwfc	prodh,f,c
 15458  0032E8  0E00               	movlw	low _ActiveScanResults
 15459  0032EA  24F3               	addwf	prodl,w,c
 15460  0032EC  6ED9               	movwf	fsr2l,c
 15461  0032EE  0E02               	movlw	high _ActiveScanResults
 15462  0032F0  20F4               	addwfc	prodh,w,c
 15463  0032F2  6EDA               	movwf	fsr2h,c
 15464  0032F4  C1BC  FFDE         	movff	_tempPANID,postinc2
 15465  0032F8  C1BD  FFDD         	movff	_tempPANID+1,postdec2
 15466                           
 15467                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 15468  0032FC  0101               	movlb	1	; () banked
 15469  0032FE  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15470  003300  0D0A               	mullw	10
 15471  003302  0E09               	movlw	9
 15472  003304  26F3               	addwf	prodl,f,c
 15473  003306  0E00               	movlw	0
 15474  003308  22F4               	addwfc	prodh,f,c
 15475  00330A  0E00               	movlw	low _ActiveScanResults
 15476  00330C  24F3               	addwf	prodl,w,c
 15477  00330E  6ED9               	movwf	fsr2l,c
 15478  003310  0E02               	movlw	high _ActiveScanResults
 15479  003312  20F4               	addwfc	prodh,w,c
 15480  003314  6EDA               	movwf	fsr2h,c
 15481  003316  0E00               	movlw	0
 15482  003318  6EDF               	movwf	indf2,c
 15483                           
 15484                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 15485  00331A  0101               	movlb	1	; () banked
 15486  00331C  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15487  00331E  0D0A               	mullw	10
 15488  003320  0E09               	movlw	9
 15489  003322  26F3               	addwf	prodl,f,c
 15490  003324  0E00               	movlw	0
 15491  003326  22F4               	addwfc	prodh,f,c
 15492  003328  0E00               	movlw	low _ActiveScanResults
 15493  00332A  24F3               	addwf	prodl,w,c
 15494  00332C  6ED9               	movwf	fsr2l,c
 15495  00332E  0E02               	movlw	high _ActiveScanResults
 15496  003330  20F4               	addwfc	prodh,w,c
 15497  003332  6EDA               	movwf	fsr2h,c
 15498  003334  0102               	movlb	2	; () banked
 15499  003336  8CDF               	bsf	indf2,6,c
 15500                           
 15501                           ;miwi_mesh.c: 1215: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 15502  003338  0101               	movlb	1	; () banked
 15503  00333A  3170               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 15504  00333C  0B03               	andlw	3
 15505  00333E  0101               	movlb	1	; () banked
 15506  003340  6F4A               	movwf	??_MiWiTasks& (0+255),b
 15507  003342  0101               	movlb	1	; () banked
 15508  003344  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15509  003346  0D0A               	mullw	10
 15510  003348  0E09               	movlw	9
 15511  00334A  26F3               	addwf	prodl,f,c
 15512  00334C  0E00               	movlw	0
 15513  00334E  22F4               	addwfc	prodh,f,c
 15514  003350  0E00               	movlw	low _ActiveScanResults
 15515  003352  24F3               	addwf	prodl,w,c
 15516  003354  6ED9               	movwf	fsr2l,c
 15517  003356  0E02               	movlw	high _ActiveScanResults
 15518  003358  20F4               	addwfc	prodh,w,c
 15519  00335A  6EDA               	movwf	fsr2h,c
 15520  00335C  0102               	movlb	2	; () banked
 15521  00335E  50DF               	movf	223,w,c
 15522  003360  0101               	movlb	1	; () banked
 15523  003362  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15524  003364  0BFC               	andlw	-4
 15525  003366  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15526  003368  0102               	movlb	2	; () banked
 15527  00336A  6EDF               	movwf	223,c
 15528                           
 15529                           ; BSR set to: 2
 15530                           ;miwi_mesh.c: 1216: if( CapacityByte.bits.Security )
 15531  00336C  0101               	movlb	1	; () banked
 15532  00336E  A770               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 15533  003370  D00F               	goto	l17358
 15534                           
 15535                           ; BSR set to: 1
 15536                           ;miwi_mesh.c: 1217: {
 15537                           ;miwi_mesh.c: 1218: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 15538  003372  0101               	movlb	1	; () banked
 15539  003374  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15540  003376  0D0A               	mullw	10
 15541  003378  0E09               	movlw	9
 15542  00337A  26F3               	addwf	prodl,f,c
 15543  00337C  0E00               	movlw	0
 15544  00337E  22F4               	addwfc	prodh,f,c
 15545  003380  0E00               	movlw	low _ActiveScanResults
 15546  003382  24F3               	addwf	prodl,w,c
 15547  003384  6ED9               	movwf	fsr2l,c
 15548  003386  0E02               	movlw	high _ActiveScanResults
 15549  003388  20F4               	addwfc	prodh,w,c
 15550  00338A  6EDA               	movwf	fsr2h,c
 15551  00338C  0102               	movlb	2	; () banked
 15552  00338E  86DF               	bsf	indf2,3,c
 15553  003390                     l17358:
 15554                           
 15555                           ;miwi_mesh.c: 1219: }
 15556                           ;miwi_mesh.c: 1220: if( CapacityByte.bits.ConnMode <= 0x01 )
 15557  003390  0101               	movlb	1	; () banked
 15558  003392  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 15559  003394  0B03               	andlw	3
 15560  003396  0101               	movlb	1	; () banked
 15561  003398  6F4A               	movwf	??_MiWiTasks& (0+255),b
 15562  00339A  0E02               	movlw	2
 15563  00339C  0101               	movlb	1	; () banked
 15564  00339E  614A               	cpfslt	??_MiWiTasks& (0+255),b
 15565  0033A0  D00F               	goto	l17362
 15566                           
 15567                           ; BSR set to: 1
 15568                           ;miwi_mesh.c: 1221: {
 15569                           ;miwi_mesh.c: 1222: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 15570  0033A2  0101               	movlb	1	; () banked
 15571  0033A4  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15572  0033A6  0D0A               	mullw	10
 15573  0033A8  0E09               	movlw	9
 15574  0033AA  26F3               	addwf	prodl,f,c
 15575  0033AC  0E00               	movlw	0
 15576  0033AE  22F4               	addwfc	prodh,f,c
 15577  0033B0  0E00               	movlw	low _ActiveScanResults
 15578  0033B2  24F3               	addwf	prodl,w,c
 15579  0033B4  6ED9               	movwf	fsr2l,c
 15580  0033B6  0E02               	movlw	high _ActiveScanResults
 15581  0033B8  20F4               	addwfc	prodh,w,c
 15582  0033BA  6EDA               	movwf	fsr2h,c
 15583  0033BC  0102               	movlb	2	; () banked
 15584  0033BE  8ADF               	bsf	indf2,5,c
 15585  0033C0                     l17362:
 15586                           
 15587                           ;miwi_mesh.c: 1223: }
 15588                           ;miwi_mesh.c: 1231: for(i = 0; i < 4; i++)
 15589  0033C0  0E00               	movlw	0
 15590  0033C2  0101               	movlb	1	; () banked
 15591  0033C4  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15592  0033C6                     l17364:
 15593                           
 15594                           ; BSR set to: 1
 15595  0033C6  0E03               	movlw	3
 15596  0033C8  0101               	movlb	1	; () banked
 15597  0033CA  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15598  0033CC  D001               	goto	l17368
 15599  0033CE  D02E               	goto	l17374
 15600  0033D0                     l17368:
 15601                           
 15602                           ; BSR set to: 1
 15603                           ;miwi_mesh.c: 1232: {
 15604                           ;miwi_mesh.c: 1233: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 15605  0033D0  0101               	movlb	1	; () banked
 15606  0033D2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15607  0033D4  0D01               	mullw	1
 15608  0033D6  50F3               	movf	prodl,w,c
 15609  0033D8  0101               	movlb	1	; () banked
 15610  0033DA  2593               	addwf	(_rxMessage+3)& (0+255),w,b
 15611  0033DC  6ED9               	movwf	fsr2l,c
 15612  0033DE  50F4               	movf	prodh,w,c
 15613  0033E0  0101               	movlb	1	; () banked
 15614  0033E2  2194               	addwfc	(_rxMessage+4)& (0+255),w,b
 15615  0033E4  6EDA               	movwf	fsr2h,c
 15616  0033E6  0101               	movlb	1	; () banked
 15617  0033E8  517C               	movf	MiWiTasks@i& (0+255),w,b
 15618  0033EA  0D01               	mullw	1
 15619  0033EC  0E01               	movlw	1
 15620  0033EE  26F3               	addwf	prodl,f,c
 15621  0033F0  0E00               	movlw	0
 15622  0033F2  22F4               	addwfc	prodh,f,c
 15623  0033F4  0E00               	movlw	low _ActiveScanResults
 15624  0033F6  0101               	movlb	1	; () banked
 15625  0033F8  6F4A               	movwf	??_MiWiTasks& (0+255),b
 15626  0033FA  0E02               	movlw	high _ActiveScanResults
 15627  0033FC  0101               	movlb	1	; () banked
 15628  0033FE  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 15629  003400  50F3               	movf	prodl,w,c
 15630  003402  0101               	movlb	1	; () banked
 15631  003404  274A               	addwf	??_MiWiTasks& (0+255),f,b
 15632  003406  50F4               	movf	prodh,w,c
 15633  003408  0101               	movlb	1	; () banked
 15634  00340A  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 15635  00340C  0101               	movlb	1	; () banked
 15636  00340E  51BE               	movf	_ActiveScanResultIndex& (0+255),w,b
 15637  003410  0D0A               	mullw	10
 15638  003412  50F3               	movf	prodl,w,c
 15639  003414  0101               	movlb	1	; () banked
 15640  003416  254A               	addwf	??_MiWiTasks& (0+255),w,b
 15641  003418  6EE1               	movwf	fsr1l,c
 15642  00341A  50F4               	movf	prodh,w,c
 15643  00341C  0101               	movlb	1	; () banked
 15644  00341E  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 15645  003420  6EE2               	movwf	fsr1h,c
 15646  003422  CFDF FFE7          	movff	indf2,indf1
 15647                           
 15648                           ; BSR set to: 1
 15649  003426  0101               	movlb	1	; () banked
 15650  003428  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15651  00342A  D7CD               	goto	l17364
 15652  00342C                     l17374:
 15653                           
 15654                           ; BSR set to: 1
 15655                           ;miwi_mesh.c: 1234: }
 15656                           ;miwi_mesh.c: 1242: ActiveScanResultIndex++;
 15657  00342C  0101               	movlb	1	; () banked
 15658  00342E  2BBE               	incf	_ActiveScanResultIndex& (0+255),f,b
 15659                           
 15660                           ; BSR set to: 1
 15661                           ;miwi_mesh.c: 1243: }
 15662                           ;miwi_mesh.c: 1244: }
 15663                           ;miwi_mesh.c: 1245: }
 15664                           ;miwi_mesh.c: 1246: }
 15665                           ;miwi_mesh.c: 1247: break;
 15666                           
 15667                           ; BSR set to: 1
 15668                           
 15669                           ; BSR set to: 1
 15670  003430  D36C               	goto	l641
 15671  003432                     l17376:
 15672                           
 15673                           ;miwi_mesh.c: 1258: {
 15674                           ;miwi_mesh.c: 1259: uint8_t handle;
 15675                           ;miwi_mesh.c: 1260: uint8_t associateStatus = 0x00;
 15676  003432  0E00               	movlw	0
 15677  003434  0101               	movlb	1	; () banked
 15678  003436  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 15679                           
 15680                           ; BSR set to: 1
 15681                           ;miwi_mesh.c: 1262: if( ConnMode > 0x01 )
 15682  003438  0E01               	movlw	1
 15683  00343A  0101               	movlb	1	; () banked
 15684  00343C  65C0               	cpfsgt	_ConnMode& (0+255),b
 15685  00343E  D001               	goto	l17382
 15686  003440  D364               	goto	l641
 15687  003442                     l17382:
 15688                           
 15689                           ; BSR set to: 1
 15690                           ;miwi_mesh.c: 1265: }
 15691                           ;miwi_mesh.c: 1268: for(i = 0; i < 4; i++)
 15692  003442  0E00               	movlw	0
 15693  003444  0101               	movlb	1	; () banked
 15694  003446  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15695  003448                     l17384:
 15696                           
 15697                           ; BSR set to: 1
 15698  003448  0E03               	movlw	3
 15699  00344A  0101               	movlb	1	; () banked
 15700  00344C  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15701  00344E  D001               	goto	l17388
 15702  003450  D019               	goto	l17394
 15703  003452                     l17388:
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;miwi_mesh.c: 1269: {
 15707                           ;miwi_mesh.c: 1270: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 15708  003452  0101               	movlb	1	; () banked
 15709  003454  517C               	movf	MiWiTasks@i& (0+255),w,b
 15710  003456  0D01               	mullw	1
 15711  003458  50F3               	movf	prodl,w,c
 15712  00345A  0101               	movlb	1	; () banked
 15713  00345C  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 15714  00345E  6ED9               	movwf	fsr2l,c
 15715  003460  50F4               	movf	prodh,w,c
 15716  003462  0101               	movlb	1	; () banked
 15717  003464  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 15718  003466  6EDA               	movwf	fsr2h,c
 15719  003468  0101               	movlb	1	; () banked
 15720  00346A  517C               	movf	MiWiTasks@i& (0+255),w,b
 15721  00346C  0D01               	mullw	1
 15722  00346E  0EAA               	movlw	low _tempLongAddress
 15723  003470  24F3               	addwf	prodl,w,c
 15724  003472  6EE1               	movwf	fsr1l,c
 15725  003474  0E01               	movlw	high _tempLongAddress
 15726  003476  20F4               	addwfc	prodh,w,c
 15727  003478  6EE2               	movwf	fsr1h,c
 15728  00347A  CFDF FFE7          	movff	indf2,indf1
 15729                           
 15730                           ; BSR set to: 1
 15731  00347E  0101               	movlb	1	; () banked
 15732  003480  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15733  003482  D7E2               	goto	l17384
 15734  003484                     l17394:
 15735                           
 15736                           ; BSR set to: 1
 15737                           ;miwi_mesh.c: 1271: }
 15738                           ;miwi_mesh.c: 1273: handle = SearchForLongAddress();
 15739  003484  ECF7  F049         	call	_SearchForLongAddress	;wreg free
 15740  003488  0101               	movlb	1	; () banked
 15741  00348A  6F77               	movwf	MiWiTasks@handle& (0+255),b
 15742                           
 15743                           ; BSR set to: 1
 15744                           ;miwi_mesh.c: 1274: if( handle == 0xFF )
 15745  00348C  0101               	movlb	1	; () banked
 15746  00348E  2977               	incf	MiWiTasks@handle& (0+255),w,b
 15747  003490  A4D8               	btfss	status,2,c
 15748  003492  D01C               	goto	l17412
 15749                           
 15750                           ; BSR set to: 1
 15751                           ;miwi_mesh.c: 1275: {
 15752                           ;miwi_mesh.c: 1276: if( ConnMode > 0x00 )
 15753  003494  0101               	movlb	1	; () banked
 15754  003496  51C0               	movf	_ConnMode& (0+255),w,b
 15755  003498  A4D8               	btfss	status,2,c
 15756  00349A  D337               	goto	l641
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;miwi_mesh.c: 1279: }
 15760                           ;miwi_mesh.c: 1280: tempNodeStatus.Val = 0xB7;
 15761                           
 15762                           ; BSR set to: 1
 15763                           
 15764                           ; BSR set to: 1
 15765                           ;miwi_mesh.c: 1277: {
 15766                           ;miwi_mesh.c: 1278: break;
 15767  00349C  0EB7               	movlw	183
 15768  00349E  0100               	movlb	0	; () banked
 15769  0034A0  6FE1               	movwf	_tempNodeStatus& (0+255),b
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;miwi_mesh.c: 1281: tempPANID.Val = myPANID.Val;
 15773  0034A2  C1F0  F1BC         	movff	_myPANID,_tempPANID
 15774  0034A6  C1F1  F1BD         	movff	_myPANID+1,_tempPANID+1
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;miwi_mesh.c: 1284: handle = AddNodeToNetworkTable();
 15778  0034AA  ECC3  F042         	call	_AddNodeToNetworkTable	;wreg free
 15779  0034AE  0101               	movlb	1	; () banked
 15780  0034B0  6F77               	movwf	MiWiTasks@handle& (0+255),b
 15781                           
 15782                           ; BSR set to: 1
 15783                           ;miwi_mesh.c: 1285: if( handle == 0xFF )
 15784  0034B2  0101               	movlb	1	; () banked
 15785  0034B4  2977               	incf	MiWiTasks@handle& (0+255),w,b
 15786  0034B6  A4D8               	btfss	status,2,c
 15787  0034B8  D02A               	goto	l17416
 15788                           
 15789                           ; BSR set to: 1
 15790                           ;miwi_mesh.c: 1286: {
 15791                           ;miwi_mesh.c: 1287: associateStatus = 0x01;
 15792  0034BA  0E01               	movlw	1
 15793  0034BC  0101               	movlb	1	; () banked
 15794  0034BE  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 15795                           
 15796                           ;miwi_mesh.c: 1288: tempShortAddress.Val = 0xFFFE;
 15797  0034C0  0EFF               	movlw	255
 15798  0034C2  0101               	movlb	1	; () banked
 15799  0034C4  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 15800  0034C6  0EFE               	movlw	254
 15801  0034C8  6FF4               	movwf	_tempShortAddress& (0+255),b
 15802                           
 15803                           ;miwi_mesh.c: 1289: goto START_ASSOCIATION_RESPONSE;
 15804  0034CA  D09E               	goto	l17468
 15805  0034CC                     l17412:
 15806                           
 15807                           ; BSR set to: 1
 15808                           ;miwi_mesh.c: 1295: else
 15809                           ;miwi_mesh.c: 1296: {
 15810                           ;miwi_mesh.c: 1297: if( ConnectionTable[handle].status.bits.shortAddressValid )
 15811  0034CC  0101               	movlb	1	; () banked
 15812  0034CE  5177               	movf	MiWiTasks@handle& (0+255),w,b
 15813  0034D0  0D09               	mullw	9
 15814  0034D2  0E08               	movlw	8
 15815  0034D4  26F3               	addwf	prodl,f,c
 15816  0034D6  0E00               	movlw	0
 15817  0034D8  22F4               	addwfc	prodh,f,c
 15818  0034DA  0E00               	movlw	low _ConnectionTable
 15819  0034DC  24F3               	addwf	prodl,w,c
 15820  0034DE  6ED9               	movwf	fsr2l,c
 15821  0034E0  0E06               	movlw	high _ConnectionTable
 15822  0034E2  20F4               	addwfc	prodh,w,c
 15823  0034E4  6EDA               	movwf	fsr2h,c
 15824  0034E6  A6DF               	btfss	indf2,3,c
 15825  0034E8  D012               	goto	l17416
 15826                           
 15827                           ; BSR set to: 1
 15828                           ;miwi_mesh.c: 1298: {
 15829                           ;miwi_mesh.c: 1299: tempShortAddress.Val = ConnectionTable[handle].AltAddress.Val;
 15830  0034EA  0101               	movlb	1	; () banked
 15831  0034EC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 15832  0034EE  0D09               	mullw	9
 15833  0034F0  0E02               	movlw	2
 15834  0034F2  26F3               	addwf	prodl,f,c
 15835  0034F4  0E00               	movlw	0
 15836  0034F6  22F4               	addwfc	prodh,f,c
 15837  0034F8  0E00               	movlw	low _ConnectionTable
 15838  0034FA  24F3               	addwf	prodl,w,c
 15839  0034FC  6ED9               	movwf	fsr2l,c
 15840  0034FE  0E06               	movlw	high _ConnectionTable
 15841  003500  20F4               	addwfc	prodh,w,c
 15842  003502  6EDA               	movwf	fsr2h,c
 15843  003504  CFDE F1F4          	movff	postinc2,_tempShortAddress
 15844  003508  CFDD F1F5          	movff	postdec2,_tempShortAddress+1
 15845                           
 15846                           ;miwi_mesh.c: 1300: goto START_ASSOCIATION_RESPONSE;
 15847  00350C  D07D               	goto	l17468
 15848  00350E                     l17416:
 15849                           
 15850                           ; BSR set to: 1
 15851                           ;miwi_mesh.c: 1301: }
 15852                           ;miwi_mesh.c: 1302: }
 15853                           ;miwi_mesh.c: 1305: if(handle != 0xFF)
 15854  00350E  0101               	movlb	1	; () banked
 15855  003510  2977               	incf	MiWiTasks@handle& (0+255),w,b
 15856  003512  B4D8               	btfsc	status,2,c
 15857  003514  D079               	goto	l17468
 15858                           
 15859                           ; BSR set to: 1
 15860                           ;miwi_mesh.c: 1306: {
 15861                           ;miwi_mesh.c: 1308: tempShortAddress.v[0] = handle + 1;
 15862  003516  0101               	movlb	1	; () banked
 15863  003518  2977               	incf	MiWiTasks@handle& (0+255),w,b
 15864  00351A  0101               	movlb	1	; () banked
 15865  00351C  6FF4               	movwf	_tempShortAddress& (0+255),b
 15866                           
 15867                           ; BSR set to: 1
 15868                           ;miwi_mesh.c: 1309: tempShortAddress.v[1] = myShortAddress.v[1];
 15869  00351E  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 15870                           
 15871                           ; BSR set to: 1
 15872                           ;miwi_mesh.c: 1310: tempPANID.Val = myPANID.Val;
 15873  003522  C1F0  F1BC         	movff	_myPANID,_tempPANID
 15874  003526  C1F1  F1BD         	movff	_myPANID+1,_tempPANID+1
 15875                           
 15876                           ;miwi_mesh.c: 1313: if(role == 0x02)
 15877  00352A  0E02               	movlw	2
 15878  00352C  0101               	movlb	1	; () banked
 15879  00352E  19CB               	xorwf	_role& (0+255),w,b
 15880  003530  A4D8               	btfss	status,2,c
 15881  003532  D047               	goto	l17452
 15882                           
 15883                           ; BSR set to: 1
 15884                           ;miwi_mesh.c: 1314: {
 15885                           ;miwi_mesh.c: 1315: if(MACRxPacket.Payload[1] & 0x40)
 15886  003534  0101               	movlb	1	; () banked
 15887  003536  EE20 F001          	lfsr	2,1
 15888  00353A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15889  00353C  26D9               	addwf	fsr2l,f,c
 15890  00353E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15891  003540  22DA               	addwfc	fsr2h,f,c
 15892  003542  0101               	movlb	1	; () banked
 15893  003544  ACDF               	btfss	indf2,6,c
 15894  003546  D03D               	goto	l17452
 15895                           
 15896                           ; BSR set to: 1
 15897                           ;miwi_mesh.c: 1316: {
 15898                           ;miwi_mesh.c: 1318: uint8_t j;
 15899                           ;miwi_mesh.c: 1319: API_UINT16_UNION CoordAddress;
 15900                           ;miwi_mesh.c: 1320: uint8_t entry;
 15901                           ;miwi_mesh.c: 1322: CoordAddress.Val = tempShortAddress.Val;
 15902  003548  C1F4  F15E         	movff	_tempShortAddress,MiWiTasks@CoordAddress
 15903  00354C  C1F5  F15F         	movff	_tempShortAddress+1,MiWiTasks@CoordAddress+1
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;miwi_mesh.c: 1323: tempShortAddress.v[0] = 0;
 15907  003550  0E00               	movlw	0
 15908  003552  0101               	movlb	1	; () banked
 15909  003554  6FF4               	movwf	_tempShortAddress& (0+255),b
 15910                           
 15911                           ;miwi_mesh.c: 1326: for(j=1;j<8;j++)
 15912  003556  0E01               	movlw	1
 15913  003558  0101               	movlb	1	; () banked
 15914  00355A  6F72               	movwf	MiWiTasks@j_2532& (0+255),b
 15915  00355C                     l17430:
 15916                           
 15917                           ; BSR set to: 1
 15918  00355C  0E07               	movlw	7
 15919  00355E  0101               	movlb	1	; () banked
 15920  003560  6572               	cpfsgt	MiWiTasks@j_2532& (0+255),b
 15921  003562  D001               	goto	l746
 15922  003564  D025               	goto	l17448
 15923  003566                     l746:
 15924                           
 15925                           ; BSR set to: 1
 15926                           ;miwi_mesh.c: 1327: {
 15927                           ;miwi_mesh.c: 1328: tempShortAddress.v[1] = j;
 15928  003566  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 15929                           
 15930                           ; BSR set to: 1
 15931                           ;miwi_mesh.c: 1329: entry = SearchForShortAddress();
 15932  00356A  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 15933  00356E  0101               	movlb	1	; () banked
 15934  003570  6F61               	movwf	MiWiTasks@entry_2536& (0+255),b
 15935                           
 15936                           ; BSR set to: 1
 15937                           ;miwi_mesh.c: 1331: if(entry == 0xFF)
 15938  003572  0101               	movlb	1	; () banked
 15939  003574  2961               	incf	MiWiTasks@entry_2536& (0+255),w,b
 15940  003576  A4D8               	btfss	status,2,c
 15941  003578  D018               	goto	l17444
 15942                           
 15943                           ; BSR set to: 1
 15944                           ;miwi_mesh.c: 1332: {
 15945                           ;miwi_mesh.c: 1333: tempShortAddress.v[0] = 0x00;
 15946  00357A  0E00               	movlw	0
 15947  00357C  0101               	movlb	1	; () banked
 15948  00357E  6FF4               	movwf	_tempShortAddress& (0+255),b
 15949                           
 15950                           ; BSR set to: 1
 15951                           ;miwi_mesh.c: 1334: tempShortAddress.v[1] = j;
 15952  003580  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 15953                           
 15954                           ; BSR set to: 1
 15955                           ;miwi_mesh.c: 1335: knownCoordinators |= (1<<j);
 15956  003584  C172  F14A         	movff	MiWiTasks@j_2532,??_MiWiTasks
 15957  003588  0E01               	movlw	1
 15958  00358A  0101               	movlb	1	; () banked
 15959  00358C  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 15960  00358E  0101               	movlb	1	; () banked
 15961  003590  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15962  003592  D003               	goto	u18944
 15963  003594                     u18945:
 15964  003594  0101               	movlb	1	; () banked
 15965  003596  90D8               	bcf	status,0,c
 15966  003598  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 15967  00359A                     u18944:
 15968  00359A  0101               	movlb	1	; () banked
 15969  00359C  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 15970  00359E  D7FA               	goto	u18945
 15971  0035A0  0101               	movlb	1	; () banked
 15972  0035A2  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 15973  0035A4  0101               	movlb	1	; () banked
 15974  0035A6  13C8               	iorwf	_knownCoordinators& (0+255),f,b
 15975                           
 15976                           ;miwi_mesh.c: 1339: break;
 15977  0035A8  D003               	goto	l17448
 15978  0035AA                     l17444:
 15979                           
 15980                           ; BSR set to: 1
 15981  0035AA  0101               	movlb	1	; () banked
 15982  0035AC  2B72               	incf	MiWiTasks@j_2532& (0+255),f,b
 15983  0035AE  D7D6               	goto	l17430
 15984  0035B0                     l17448:
 15985                           
 15986                           ; BSR set to: 1
 15987                           ;miwi_mesh.c: 1340: }
 15988                           ;miwi_mesh.c: 1341: }
 15989                           ;miwi_mesh.c: 1343: if(j==8)
 15990  0035B0  0E08               	movlw	8
 15991  0035B2  0101               	movlb	1	; () banked
 15992  0035B4  1972               	xorwf	MiWiTasks@j_2532& (0+255),w,b
 15993  0035B6  A4D8               	btfss	status,2,c
 15994  0035B8  D004               	goto	l17452
 15995                           
 15996                           ; BSR set to: 1
 15997                           ;miwi_mesh.c: 1344: {
 15998                           ;miwi_mesh.c: 1345: tempShortAddress.Val= CoordAddress.Val;
 15999  0035BA  C15E  F1F4         	movff	MiWiTasks@CoordAddress,_tempShortAddress
 16000  0035BE  C15F  F1F5         	movff	MiWiTasks@CoordAddress+1,_tempShortAddress+1
 16001  0035C2                     l17452:
 16002                           
 16003                           ; BSR set to: 1
 16004                           ;miwi_mesh.c: 1346: }
 16005                           ;miwi_mesh.c: 1348: }
 16006                           ;miwi_mesh.c: 1349: }
 16007                           ;miwi_mesh.c: 1352: tempNodeStatus.Val = 0xBF;
 16008  0035C2  0EBF               	movlw	191
 16009  0035C4  0100               	movlb	0	; () banked
 16010  0035C6  6FE1               	movwf	_tempNodeStatus& (0+255),b
 16011                           
 16012                           ; BSR set to: 0
 16013                           ;miwi_mesh.c: 1355: if((MACRxPacket.Payload[1] & 0x01) == 0)
 16014  0035C8  0101               	movlb	1	; () banked
 16015  0035CA  EE20 F001          	lfsr	2,1
 16016  0035CE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16017  0035D0  26D9               	addwf	fsr2l,f,c
 16018  0035D2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16019  0035D4  22DA               	addwfc	fsr2h,f,c
 16020  0035D6  0101               	movlb	1	; () banked
 16021  0035D8  B0DF               	btfsc	indf2,0,c
 16022  0035DA  D004               	goto	l17460
 16023                           
 16024                           ; BSR set to: 1
 16025                           ;miwi_mesh.c: 1356: {
 16026                           ;miwi_mesh.c: 1357: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16027  0035DC  0100               	movlb	0	; () banked
 16028  0035DE  91E1               	bcf	_tempNodeStatus& (0+255),0,b
 16029                           
 16030                           ; BSR set to: 0
 16031                           ;miwi_mesh.c: 1358: tempShortAddress.v[0] |= 0x80;
 16032  0035E0  0101               	movlb	1	; () banked
 16033  0035E2  8FF4               	bsf	_tempShortAddress& (0+255),7,b
 16034  0035E4                     l17460:
 16035                           
 16036                           ; BSR set to: 1
 16037                           ;miwi_mesh.c: 1359: }
 16038                           ;miwi_mesh.c: 1362: handle = AddNodeToNetworkTable();
 16039  0035E4  ECC3  F042         	call	_AddNodeToNetworkTable	;wreg free
 16040  0035E8  0101               	movlb	1	; () banked
 16041  0035EA  6F77               	movwf	MiWiTasks@handle& (0+255),b
 16042                           
 16043                           ; BSR set to: 1
 16044                           ;miwi_mesh.c: 1364: ConnectionTable[handle].status.bits.FinishJoin = 1;
 16045  0035EC  0101               	movlb	1	; () banked
 16046  0035EE  5177               	movf	MiWiTasks@handle& (0+255),w,b
 16047  0035F0  0D09               	mullw	9
 16048  0035F2  0E08               	movlw	8
 16049  0035F4  26F3               	addwf	prodl,f,c
 16050  0035F6  0E00               	movlw	0
 16051  0035F8  22F4               	addwfc	prodh,f,c
 16052  0035FA  0E00               	movlw	low _ConnectionTable
 16053  0035FC  24F3               	addwf	prodl,w,c
 16054  0035FE  6ED9               	movwf	fsr2l,c
 16055  003600  0E06               	movlw	high _ConnectionTable
 16056  003602  20F4               	addwfc	prodh,w,c
 16057  003604  6EDA               	movwf	fsr2h,c
 16058  003606  88DF               	bsf	indf2,4,c
 16059  003608                     l17468:
 16060                           
 16061                           ; BSR set to: 1
 16062                           ;miwi_mesh.c: 1387: TxBuffer[0] = 0x02;
 16063  003608  0E02               	movlw	2
 16064  00360A  0102               	movlb	2	; () banked
 16065  00360C  6FA6               	movwf	_TxBuffer& (0+255),b
 16066                           
 16067                           ; BSR set to: 2
 16068                           ;miwi_mesh.c: 1388: TxBuffer[1] = tempShortAddress.v[0];
 16069  00360E  C1F4  F2A7         	movff	_tempShortAddress,_TxBuffer+1
 16070                           
 16071                           ; BSR set to: 2
 16072                           ;miwi_mesh.c: 1389: TxBuffer[2] = tempShortAddress.v[1];
 16073  003612  C1F5  F2A8         	movff	_tempShortAddress+1,_TxBuffer+2
 16074                           
 16075                           ; BSR set to: 2
 16076                           ;miwi_mesh.c: 1390: TxBuffer[3] = associateStatus;
 16077  003616  C163  F2A9         	movff	MiWiTasks@associateStatus,_TxBuffer+3
 16078                           
 16079                           ; BSR set to: 2
 16080                           ;miwi_mesh.c: 1397: TxData = 4+0;
 16081  00361A  0E04               	movlw	4
 16082  00361C  0101               	movlb	1	; () banked
 16083  00361E  6FC7               	movwf	_TxData& (0+255),b
 16084                           
 16085                           ; BSR set to: 1
 16086                           ;miwi_mesh.c: 1400: IncomingFrameCounter[handle].Val = 0;
 16087  003620  0101               	movlb	1	; () banked
 16088  003622  5177               	movf	MiWiTasks@handle& (0+255),w,b
 16089  003624  0D04               	mullw	4
 16090  003626  0E00               	movlw	low _IncomingFrameCounter
 16091  003628  24F3               	addwf	prodl,w,c
 16092  00362A  6ED9               	movwf	fsr2l,c
 16093  00362C  0E05               	movlw	high _IncomingFrameCounter
 16094  00362E  20F4               	addwfc	prodh,w,c
 16095  003630  6EDA               	movwf	fsr2h,c
 16096  003632  6ADE               	clrf	postinc2,c
 16097  003634  6ADE               	clrf	postinc2,c
 16098  003636  6ADE               	clrf	postinc2,c
 16099  003638  6ADD               	clrf	postdec2,c
 16100                           
 16101                           ; BSR set to: 1
 16102                           ;miwi_mesh.c: 1406: SendMACPacket(ConnectionTable[handle].Address, 0x01);
 16103  00363A  0101               	movlb	1	; () banked
 16104  00363C  5177               	movf	MiWiTasks@handle& (0+255),w,b
 16105  00363E  0D09               	mullw	9
 16106  003640  0E04               	movlw	4
 16107  003642  26F3               	addwf	prodl,f,c
 16108  003644  0E00               	movlw	0
 16109  003646  22F4               	addwfc	prodh,f,c
 16110  003648  0E00               	movlw	low _ConnectionTable
 16111  00364A  24F3               	addwf	prodl,w,c
 16112  00364C  0101               	movlb	1	; () banked
 16113  00364E  6F39               	movwf	SendMACPacket@Address& (0+255),b
 16114  003650  0E06               	movlw	high _ConnectionTable
 16115  003652  20F4               	addwfc	prodh,w,c
 16116  003654  0101               	movlb	1	; () banked
 16117  003656  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 16118  003658  0E01               	movlw	1
 16119  00365A  0101               	movlb	1	; () banked
 16120  00365C  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 16121  00365E  ECA2  F051         	call	_SendMACPacket	;wreg free
 16122                           
 16123                           ;miwi_mesh.c: 1408: }
 16124                           ;miwi_mesh.c: 1409: break;
 16125  003662  D253               	goto	l641
 16126  003664                     l17482:
 16127                           
 16128                           ;miwi_mesh.c: 1413: {
 16129                           ;miwi_mesh.c: 1414: if(MACRxPacket.Payload[3] == 0x00)
 16130  003664  0101               	movlb	1	; () banked
 16131  003666  EE20 F003          	lfsr	2,3
 16132  00366A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16133  00366C  26D9               	addwf	fsr2l,f,c
 16134  00366E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16135  003670  22DA               	addwfc	fsr2h,f,c
 16136  003672  50DF               	movf	indf2,w,c
 16137  003674  A4D8               	btfss	status,2,c
 16138  003676  D0A4               	goto	l753
 16139                           
 16140                           ; BSR set to: 1
 16141                           ;miwi_mesh.c: 1415: {
 16142                           ;miwi_mesh.c: 1418: myShortAddress.v[0] = MACRxPacket.Payload[1];
 16143  003678  0101               	movlb	1	; () banked
 16144  00367A  EE20 F001          	lfsr	2,1
 16145  00367E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16146  003680  26D9               	addwf	fsr2l,f,c
 16147  003682  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16148  003684  22DA               	addwfc	fsr2h,f,c
 16149  003686  50DF               	movf	indf2,w,c
 16150  003688  0101               	movlb	1	; () banked
 16151  00368A  6FF2               	movwf	_myShortAddress& (0+255),b
 16152                           
 16153                           ;miwi_mesh.c: 1419: myShortAddress.v[1] = MACRxPacket.Payload[2];
 16154  00368C  0101               	movlb	1	; () banked
 16155  00368E  EE20 F002          	lfsr	2,2
 16156  003692  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16157  003694  26D9               	addwf	fsr2l,f,c
 16158  003696  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16159  003698  22DA               	addwfc	fsr2h,f,c
 16160  00369A  50DF               	movf	indf2,w,c
 16161  00369C  0101               	movlb	1	; () banked
 16162  00369E  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 16163                           
 16164                           ; BSR set to: 1
 16165                           ;miwi_mesh.c: 1422: if(myShortAddress.v[0] == 0x00)
 16166  0036A0  0101               	movlb	1	; () banked
 16167  0036A2  51F2               	movf	_myShortAddress& (0+255),w,b
 16168  0036A4  A4D8               	btfss	status,2,c
 16169  0036A6  D025               	goto	l17494
 16170                           
 16171                           ; BSR set to: 1
 16172                           ;miwi_mesh.c: 1423: {
 16173                           ;miwi_mesh.c: 1424: ;
 16174                           ;miwi_mesh.c: 1425: role = 0x01;
 16175  0036A8  0E01               	movlw	1
 16176  0036AA  0101               	movlb	1	; () banked
 16177  0036AC  6FCB               	movwf	_role& (0+255),b
 16178                           
 16179                           ; BSR set to: 1
 16180                           ;miwi_mesh.c: 1426: MiWiCapacityInfo.bits.Role = role;
 16181  0036AE  C1CB  F14A         	movff	_role,??_MiWiTasks
 16182  0036B2  0101               	movlb	1	; () banked
 16183  0036B4  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 16184  0036B6  0101               	movlb	1	; () banked
 16185  0036B8  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 16186  0036BA  0101               	movlb	1	; () banked
 16187  0036BC  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 16188  0036BE  0BF9               	andlw	-7
 16189  0036C0  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 16190  0036C2  0101               	movlb	1	; () banked
 16191  0036C4  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 16192                           
 16193                           ; BSR set to: 1
 16194                           ;miwi_mesh.c: 1427: knownCoordinators |= ((1<<(myShortAddress.v[1] & 0x07)) + 1);
 16195  0036C6  C1F3  F14A         	movff	_myShortAddress+1,??_MiWiTasks
 16196  0036CA  0E07               	movlw	7
 16197  0036CC  0101               	movlb	1	; () banked
 16198  0036CE  174A               	andwf	??_MiWiTasks& (0+255),f,b
 16199  0036D0  0E01               	movlw	1
 16200  0036D2  0101               	movlb	1	; () banked
 16201  0036D4  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 16202  0036D6  0101               	movlb	1	; () banked
 16203  0036D8  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 16204  0036DA  D003               	goto	u19004
 16205  0036DC                     u19005:
 16206  0036DC  0101               	movlb	1	; () banked
 16207  0036DE  90D8               	bcf	status,0,c
 16208  0036E0  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 16209  0036E2                     u19004:
 16210  0036E2  0101               	movlb	1	; () banked
 16211  0036E4  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 16212  0036E6  D7FA               	goto	u19005
 16213  0036E8  0101               	movlb	1	; () banked
 16214  0036EA  294B               	incf	(??_MiWiTasks+1)& (0+255),w,b
 16215  0036EC  0101               	movlb	1	; () banked
 16216  0036EE  13C8               	iorwf	_knownCoordinators& (0+255),f,b
 16217                           
 16218                           ;miwi_mesh.c: 1429: }
 16219  0036F0  D00F               	goto	l17498
 16220  0036F2                     l17494:
 16221                           
 16222                           ; BSR set to: 1
 16223                           ;miwi_mesh.c: 1430: else
 16224                           ;miwi_mesh.c: 1431: {
 16225                           ;miwi_mesh.c: 1432: ;
 16226                           ;miwi_mesh.c: 1433: role = 0x00;
 16227  0036F2  0E00               	movlw	0
 16228  0036F4  0101               	movlb	1	; () banked
 16229  0036F6  6FCB               	movwf	_role& (0+255),b
 16230                           
 16231                           ; BSR set to: 1
 16232                           ;miwi_mesh.c: 1434: MiWiCapacityInfo.bits.Role = role;
 16233  0036F8  C1CB  F14A         	movff	_role,??_MiWiTasks
 16234  0036FC  0101               	movlb	1	; () banked
 16235  0036FE  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 16236  003700  0101               	movlb	1	; () banked
 16237  003702  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 16238  003704  0101               	movlb	1	; () banked
 16239  003706  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 16240  003708  0BF9               	andlw	-7
 16241  00370A  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 16242  00370C  0101               	movlb	1	; () banked
 16243  00370E  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 16244  003710                     l17498:
 16245                           
 16246                           ; BSR set to: 1
 16247                           ;miwi_mesh.c: 1435: }
 16248                           ;miwi_mesh.c: 1442: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 16249  003710  0EF2               	movlw	low _myShortAddress
 16250  003712  0101               	movlb	1	; () banked
 16251  003714  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 16252  003716  0E01               	movlw	high _myShortAddress
 16253  003718  0101               	movlb	1	; () banked
 16254  00371A  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 16255  00371C  0EF0               	movlw	low _myPANID
 16256  00371E  0101               	movlb	1	; () banked
 16257  003720  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 16258  003722  0E01               	movlw	high _myPANID
 16259  003724  0101               	movlb	1	; () banked
 16260  003726  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 16261  003728  ECCB  F057         	call	_MiMAC_SetAltAddress	;wreg free
 16262                           
 16263                           ;miwi_mesh.c: 1445: MiWiStateMachine.bits.memberOfNetwork = 1;
 16264  00372C  0101               	movlb	1	; () banked
 16265  00372E  83B6               	bsf	_MiWiStateMachine& (0+255),1,b
 16266                           
 16267                           ; BSR set to: 1
 16268                           ;miwi_mesh.c: 1448: tempNodeStatus.Val = 0xBF;
 16269  003730  0EBF               	movlw	191
 16270  003732  0100               	movlb	0	; () banked
 16271  003734  6FE1               	movwf	_tempNodeStatus& (0+255),b
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;miwi_mesh.c: 1449: for(i = 0; i < 4; i++)
 16275  003736  0E00               	movlw	0
 16276  003738  0101               	movlb	1	; () banked
 16277  00373A  6F7C               	movwf	MiWiTasks@i& (0+255),b
 16278  00373C                     l17506:
 16279                           
 16280                           ; BSR set to: 1
 16281  00373C  0E03               	movlw	3
 16282  00373E  0101               	movlb	1	; () banked
 16283  003740  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 16284  003742  D001               	goto	l17510
 16285  003744  D019               	goto	l17516
 16286  003746                     l17510:
 16287                           
 16288                           ; BSR set to: 1
 16289                           ;miwi_mesh.c: 1450: {
 16290                           ;miwi_mesh.c: 1451: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 16291  003746  0101               	movlb	1	; () banked
 16292  003748  517C               	movf	MiWiTasks@i& (0+255),w,b
 16293  00374A  0D01               	mullw	1
 16294  00374C  50F3               	movf	prodl,w,c
 16295  00374E  0101               	movlb	1	; () banked
 16296  003750  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 16297  003752  6ED9               	movwf	fsr2l,c
 16298  003754  50F4               	movf	prodh,w,c
 16299  003756  0101               	movlb	1	; () banked
 16300  003758  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 16301  00375A  6EDA               	movwf	fsr2h,c
 16302  00375C  0101               	movlb	1	; () banked
 16303  00375E  517C               	movf	MiWiTasks@i& (0+255),w,b
 16304  003760  0D01               	mullw	1
 16305  003762  0EAA               	movlw	low _tempLongAddress
 16306  003764  24F3               	addwf	prodl,w,c
 16307  003766  6EE1               	movwf	fsr1l,c
 16308  003768  0E01               	movlw	high _tempLongAddress
 16309  00376A  20F4               	addwfc	prodh,w,c
 16310  00376C  6EE2               	movwf	fsr1h,c
 16311  00376E  CFDF FFE7          	movff	indf2,indf1
 16312                           
 16313                           ; BSR set to: 1
 16314  003772  0101               	movlb	1	; () banked
 16315  003774  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 16316  003776  D7E2               	goto	l17506
 16317  003778                     l17516:
 16318                           
 16319                           ; BSR set to: 1
 16320                           ;miwi_mesh.c: 1452: }
 16321                           ;miwi_mesh.c: 1454: if(myShortAddress.v[0] == 0x00)
 16322  003778  0101               	movlb	1	; () banked
 16323  00377A  51F2               	movf	_myShortAddress& (0+255),w,b
 16324  00377C  A4D8               	btfss	status,2,c
 16325  00377E  D005               	goto	l758
 16326                           
 16327                           ; BSR set to: 1
 16328                           ;miwi_mesh.c: 1455: {
 16329                           ;miwi_mesh.c: 1458: tempShortAddress.Val = 0x0000;
 16330  003780  0E00               	movlw	0
 16331  003782  0101               	movlb	1	; () banked
 16332  003784  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 16333  003786  0E00               	movlw	0
 16334  003788  D004               	goto	L11
 16335  00378A                     l758:
 16336                           
 16337                           ; BSR set to: 1
 16338                           ;miwi_mesh.c: 1460: else
 16339                           ;miwi_mesh.c: 1461: {
 16340                           ;miwi_mesh.c: 1462: tempShortAddress.v[1] = myShortAddress.v[1];
 16341  00378A  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 16342                           
 16343                           ; BSR set to: 1
 16344                           ;miwi_mesh.c: 1463: tempShortAddress.v[0] = 0x00;
 16345  00378E  0E00               	movlw	0
 16346  003790  0101               	movlb	1	; () banked
 16347  003792                     L11:
 16348  003792  6FF4               	movwf	_tempShortAddress& (0+255),b
 16349                           
 16350                           ; BSR set to: 1
 16351                           ;miwi_mesh.c: 1464: }
 16352                           ;miwi_mesh.c: 1466: tempPANID.Val = myPANID.Val;
 16353                           
 16354                           ; BSR set to: 1
 16355  003794  C1F0  F1BC         	movff	_myPANID,_tempPANID
 16356  003798  C1F1  F1BD         	movff	_myPANID+1,_tempPANID+1
 16357                           
 16358                           ; BSR set to: 1
 16359                           ;miwi_mesh.c: 1469: myParent = AddNodeToNetworkTable();
 16360  00379C  ECC3  F042         	call	_AddNodeToNetworkTable	;wreg free
 16361  0037A0  0101               	movlb	1	; () banked
 16362  0037A2  6FCA               	movwf	_myParent& (0+255),b
 16363                           
 16364                           ; BSR set to: 1
 16365                           ;miwi_mesh.c: 1471: IncomingFrameCounter[myParent].Val = 0;
 16366  0037A4  0101               	movlb	1	; () banked
 16367  0037A6  51CA               	movf	_myParent& (0+255),w,b
 16368  0037A8  0D04               	mullw	4
 16369  0037AA  0E00               	movlw	low _IncomingFrameCounter
 16370  0037AC  24F3               	addwf	prodl,w,c
 16371  0037AE  6ED9               	movwf	fsr2l,c
 16372  0037B0  0E05               	movlw	high _IncomingFrameCounter
 16373  0037B2  20F4               	addwfc	prodh,w,c
 16374  0037B4  6EDA               	movwf	fsr2h,c
 16375  0037B6  6ADE               	clrf	postinc2,c
 16376  0037B8  6ADE               	clrf	postinc2,c
 16377  0037BA  6ADE               	clrf	postinc2,c
 16378  0037BC  6ADD               	clrf	postdec2,c
 16379                           
 16380                           ;miwi_mesh.c: 1491: ;
 16381                           ;miwi_mesh.c: 1492: }
 16382  0037BE  D1A5               	goto	l641
 16383  0037C0                     l753:
 16384                           
 16385                           ; BSR set to: 1
 16386                           ;miwi_mesh.c: 1493: else
 16387                           ;miwi_mesh.c: 1494: {
 16388                           ;miwi_mesh.c: 1496: myParent = 0xFF;
 16389  0037C0  0101               	movlb	1	; () banked
 16390  0037C2  69CA               	setf	_myParent& (0+255),b
 16391                           
 16392                           ;miwi_mesh.c: 1497: myPANID.Val = 0xFFFF;
 16393  0037C4  0101               	movlb	1	; () banked
 16394  0037C6  69F0               	setf	_myPANID& (0+255),b
 16395  0037C8  69F1               	setf	(_myPANID+1)& (0+255),b
 16396                           
 16397                           ;miwi_mesh.c: 1498: tempShortAddress.Val = 0xFFFF;
 16398  0037CA  0101               	movlb	1	; () banked
 16399  0037CC  69F4               	setf	_tempShortAddress& (0+255),b
 16400  0037CE  69F5               	setf	(_tempShortAddress+1)& (0+255),b
 16401                           
 16402                           ; BSR set to: 1
 16403                           ;miwi_mesh.c: 1499: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 16404  0037D0  0EF4               	movlw	low _tempShortAddress
 16405  0037D2  0101               	movlb	1	; () banked
 16406  0037D4  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 16407  0037D6  0E01               	movlw	high _tempShortAddress
 16408  0037D8  0101               	movlb	1	; () banked
 16409  0037DA  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 16410  0037DC  0EF0               	movlw	low _myPANID
 16411  0037DE  0101               	movlb	1	; () banked
 16412  0037E0  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 16413  0037E2  0E01               	movlw	high _myPANID
 16414  0037E4  0101               	movlb	1	; () banked
 16415  0037E6  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 16416  0037E8  ECCB  F057         	call	_MiMAC_SetAltAddress	;wreg free
 16417                           
 16418                           ;miwi_mesh.c: 1505: }
 16419                           ;miwi_mesh.c: 1506: }
 16420                           ;miwi_mesh.c: 1507: break;
 16421  0037EC  D18E               	goto	l641
 16422  0037EE                     l17530:
 16423                           
 16424                           ;miwi_mesh.c: 1511: {
 16425                           ;miwi_mesh.c: 1512: uint8_t cIndex;
 16426                           ;miwi_mesh.c: 1527: {
 16427                           ;miwi_mesh.c: 1528: for(i = 0; i < 4; i++)
 16428  0037EE  0E00               	movlw	0
 16429  0037F0  0101               	movlb	1	; () banked
 16430  0037F2  6F7C               	movwf	MiWiTasks@i& (0+255),b
 16431  0037F4                     l17532:
 16432                           
 16433                           ; BSR set to: 1
 16434  0037F4  0E03               	movlw	3
 16435  0037F6  0101               	movlb	1	; () banked
 16436  0037F8  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 16437  0037FA  D001               	goto	l17536
 16438  0037FC  D019               	goto	l17542
 16439  0037FE                     l17536:
 16440                           
 16441                           ; BSR set to: 1
 16442                           ;miwi_mesh.c: 1529: {
 16443                           ;miwi_mesh.c: 1530: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 16444  0037FE  0101               	movlb	1	; () banked
 16445  003800  517C               	movf	MiWiTasks@i& (0+255),w,b
 16446  003802  0D01               	mullw	1
 16447  003804  50F3               	movf	prodl,w,c
 16448  003806  0101               	movlb	1	; () banked
 16449  003808  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 16450  00380A  6ED9               	movwf	fsr2l,c
 16451  00380C  50F4               	movf	prodh,w,c
 16452  00380E  0101               	movlb	1	; () banked
 16453  003810  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 16454  003812  6EDA               	movwf	fsr2h,c
 16455  003814  0101               	movlb	1	; () banked
 16456  003816  517C               	movf	MiWiTasks@i& (0+255),w,b
 16457  003818  0D01               	mullw	1
 16458  00381A  0EAA               	movlw	low _tempLongAddress
 16459  00381C  24F3               	addwf	prodl,w,c
 16460  00381E  6EE1               	movwf	fsr1l,c
 16461  003820  0E01               	movlw	high _tempLongAddress
 16462  003822  20F4               	addwfc	prodh,w,c
 16463  003824  6EE2               	movwf	fsr1h,c
 16464  003826  CFDF FFE7          	movff	indf2,indf1
 16465                           
 16466                           ; BSR set to: 1
 16467  00382A  0101               	movlb	1	; () banked
 16468  00382C  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 16469  00382E  D7E2               	goto	l17532
 16470  003830                     l17542:
 16471                           
 16472                           ; BSR set to: 1
 16473                           ;miwi_mesh.c: 1531: }
 16474                           ;miwi_mesh.c: 1532: if( (cIndex = SearchForLongAddress()) == 0xFF )
 16475  003830  ECF7  F049         	call	_SearchForLongAddress	;wreg free
 16476  003834  0101               	movlb	1	; () banked
 16477  003836  6F6B               	movwf	MiWiTasks@cIndex& (0+255),b
 16478  003838  0101               	movlb	1	; () banked
 16479  00383A  296B               	incf	MiWiTasks@cIndex& (0+255),w,b
 16480  00383C  B4D8               	btfsc	status,2,c
 16481  00383E  D165               	goto	l641
 16482                           
 16483                           ; BSR set to: 1
 16484                           ;miwi_mesh.c: 1535: }
 16485                           ;miwi_mesh.c: 1536: }
 16486                           ;miwi_mesh.c: 1539: if( ConnectionTable[cIndex].status.bits.isFamily )
 16487                           
 16488                           ; BSR set to: 1
 16489                           
 16490                           ; BSR set to: 1
 16491                           ;miwi_mesh.c: 1533: {
 16492                           ;miwi_mesh.c: 1534: break;
 16493  003840  0101               	movlb	1	; () banked
 16494  003842  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 16495  003844  0D09               	mullw	9
 16496  003846  0E08               	movlw	8
 16497  003848  26F3               	addwf	prodl,f,c
 16498  00384A  0E00               	movlw	0
 16499  00384C  22F4               	addwfc	prodh,f,c
 16500  00384E  0E00               	movlw	low _ConnectionTable
 16501  003850  24F3               	addwf	prodl,w,c
 16502  003852  6ED9               	movwf	fsr2l,c
 16503  003854  0E06               	movlw	high _ConnectionTable
 16504  003856  20F4               	addwfc	prodh,w,c
 16505  003858  6EDA               	movwf	fsr2h,c
 16506  00385A  AADF               	btfss	indf2,5,c
 16507  00385C  D156               	goto	l641
 16508                           
 16509                           ; BSR set to: 1
 16510                           ;miwi_mesh.c: 1540: {
 16511                           ;miwi_mesh.c: 1541: if( cIndex != myParent )
 16512  00385E  0101               	movlb	1	; () banked
 16513  003860  51CA               	movf	_myParent& (0+255),w,b
 16514  003862  0101               	movlb	1	; () banked
 16515  003864  196B               	xorwf	MiWiTasks@cIndex& (0+255),w,b
 16516  003866  B4D8               	btfsc	status,2,c
 16517  003868  D010               	goto	l17552
 16518                           
 16519                           ; BSR set to: 1
 16520                           ;miwi_mesh.c: 1542: {
 16521                           ;miwi_mesh.c: 1543: ConnectionTable[cIndex].status.Val = 0;
 16522  00386A  0101               	movlb	1	; () banked
 16523  00386C  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 16524  00386E  0D09               	mullw	9
 16525  003870  0E08               	movlw	8
 16526  003872  26F3               	addwf	prodl,f,c
 16527  003874  0E00               	movlw	0
 16528  003876  22F4               	addwfc	prodh,f,c
 16529  003878  0E00               	movlw	low _ConnectionTable
 16530  00387A  24F3               	addwf	prodl,w,c
 16531  00387C  6ED9               	movwf	fsr2l,c
 16532  00387E  0E06               	movlw	high _ConnectionTable
 16533  003880  20F4               	addwfc	prodh,w,c
 16534  003882  6EDA               	movwf	fsr2h,c
 16535  003884  0E00               	movlw	0
 16536  003886  6EDF               	movwf	indf2,c
 16537                           
 16538                           ;miwi_mesh.c: 1547: }
 16539  003888  D140               	goto	l641
 16540  00388A                     l17552:
 16541                           
 16542                           ; BSR set to: 1
 16543                           ;miwi_mesh.c: 1548: else
 16544                           ;miwi_mesh.c: 1549: {
 16545                           ;miwi_mesh.c: 1551: for(i = 0; i < 64; i++)
 16546  00388A  0E00               	movlw	0
 16547  00388C  0101               	movlb	1	; () banked
 16548  00388E  6F7C               	movwf	MiWiTasks@i& (0+255),b
 16549  003890                     l17554:
 16550                           
 16551                           ; BSR set to: 1
 16552  003890  0E3F               	movlw	63
 16553  003892  0101               	movlb	1	; () banked
 16554  003894  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 16555  003896  D001               	goto	l17558
 16556  003898  D081               	goto	l769
 16557  00389A                     l17558:
 16558                           
 16559                           ; BSR set to: 1
 16560                           ;miwi_mesh.c: 1552: {
 16561                           ;miwi_mesh.c: 1553: if( ConnectionTable[i].status.bits.isValid &&
 16562                           ;miwi_mesh.c: 1554: ConnectionTable[i].status.bits.isFamily && (i != myParent ))
 16563  00389A  0101               	movlb	1	; () banked
 16564  00389C  517C               	movf	MiWiTasks@i& (0+255),w,b
 16565  00389E  0D09               	mullw	9
 16566  0038A0  0E08               	movlw	8
 16567  0038A2  26F3               	addwf	prodl,f,c
 16568  0038A4  0E00               	movlw	0
 16569  0038A6  22F4               	addwfc	prodh,f,c
 16570  0038A8  0E00               	movlw	low _ConnectionTable
 16571  0038AA  24F3               	addwf	prodl,w,c
 16572  0038AC  6ED9               	movwf	fsr2l,c
 16573  0038AE  0E06               	movlw	high _ConnectionTable
 16574  0038B0  20F4               	addwfc	prodh,w,c
 16575  0038B2  6EDA               	movwf	fsr2h,c
 16576  0038B4  AEDF               	btfss	indf2,7,c
 16577  0038B6  D060               	goto	l17592
 16578                           
 16579                           ; BSR set to: 1
 16580  0038B8  0101               	movlb	1	; () banked
 16581  0038BA  517C               	movf	MiWiTasks@i& (0+255),w,b
 16582  0038BC  0D09               	mullw	9
 16583  0038BE  0E08               	movlw	8
 16584  0038C0  26F3               	addwf	prodl,f,c
 16585  0038C2  0E00               	movlw	0
 16586  0038C4  22F4               	addwfc	prodh,f,c
 16587  0038C6  0E00               	movlw	low _ConnectionTable
 16588  0038C8  24F3               	addwf	prodl,w,c
 16589  0038CA  6ED9               	movwf	fsr2l,c
 16590  0038CC  0E06               	movlw	high _ConnectionTable
 16591  0038CE  20F4               	addwfc	prodh,w,c
 16592  0038D0  6EDA               	movwf	fsr2h,c
 16593  0038D2  AADF               	btfss	indf2,5,c
 16594  0038D4  D051               	goto	l17592
 16595                           
 16596                           ; BSR set to: 1
 16597  0038D6  0101               	movlb	1	; () banked
 16598  0038D8  51CA               	movf	_myParent& (0+255),w,b
 16599  0038DA  0101               	movlb	1	; () banked
 16600  0038DC  197C               	xorwf	MiWiTasks@i& (0+255),w,b
 16601  0038DE  B4D8               	btfsc	status,2,c
 16602  0038E0  D04B               	goto	l17592
 16603                           
 16604                           ; BSR set to: 1
 16605                           ;miwi_mesh.c: 1555: {
 16606                           ;miwi_mesh.c: 1556: uint16_t j;
 16607                           ;miwi_mesh.c: 1558: {TxData = 0;};
 16608  0038E2  0E00               	movlw	0
 16609  0038E4  0101               	movlb	1	; () banked
 16610  0038E6  6FC7               	movwf	_TxData& (0+255),b
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;miwi_mesh.c: 1559: TxBuffer[TxData++] = 0x03;
 16614  0038E8  0101               	movlb	1	; () banked
 16615  0038EA  51C7               	movf	_TxData& (0+255),w,b
 16616  0038EC  0D01               	mullw	1
 16617  0038EE  0EA6               	movlw	low _TxBuffer
 16618  0038F0  24F3               	addwf	prodl,w,c
 16619  0038F2  6ED9               	movwf	fsr2l,c
 16620  0038F4  0E02               	movlw	high _TxBuffer
 16621  0038F6  20F4               	addwfc	prodh,w,c
 16622  0038F8  6EDA               	movwf	fsr2h,c
 16623  0038FA  0E03               	movlw	3
 16624  0038FC  6EDF               	movwf	indf2,c
 16625                           
 16626                           ; BSR set to: 1
 16627  0038FE  0101               	movlb	1	; () banked
 16628  003900  2BC7               	incf	_TxData& (0+255),f,b
 16629                           
 16630                           ; BSR set to: 1
 16631                           ;miwi_mesh.c: 1560: MTP.flags.Val = 0;
 16632  003902  0E00               	movlw	0
 16633  003904  0101               	movlb	1	; () banked
 16634  003906  6FB1               	movwf	_MTP& (0+255),b
 16635                           
 16636                           ; BSR set to: 1
 16637                           ;miwi_mesh.c: 1561: MTP.flags.bits.ackReq = 1;
 16638  003908  0101               	movlb	1	; () banked
 16639  00390A  8BB1               	bsf	_MTP& (0+255),5,b
 16640                           
 16641                           ; BSR set to: 1
 16642                           ;miwi_mesh.c: 1562: MTP.flags.bits.packetType = 0x01;
 16643  00390C  0101               	movlb	1	; () banked
 16644  00390E  51B1               	movf	_MTP& (0+255),w,b
 16645  003910  0BFC               	andlw	-4
 16646  003912  0901               	iorlw	1
 16647  003914  6FB1               	movwf	_MTP& (0+255),b
 16648                           
 16649                           ; BSR set to: 1
 16650                           ;miwi_mesh.c: 1569: MTP.flags.bits.sourcePrsnt = 1;
 16651  003916  0101               	movlb	1	; () banked
 16652  003918  8FB1               	bsf	_MTP& (0+255),7,b
 16653                           
 16654                           ; BSR set to: 1
 16655                           ;miwi_mesh.c: 1570: MTP.DestAddress = ConnectionTable[i].Address;
 16656  00391A  0101               	movlb	1	; () banked
 16657  00391C  517C               	movf	MiWiTasks@i& (0+255),w,b
 16658  00391E  0D09               	mullw	9
 16659  003920  0E04               	movlw	4
 16660  003922  26F3               	addwf	prodl,f,c
 16661  003924  0E00               	movlw	0
 16662  003926  22F4               	addwfc	prodh,f,c
 16663  003928  0E00               	movlw	low _ConnectionTable
 16664  00392A  24F3               	addwf	prodl,w,c
 16665  00392C  0101               	movlb	1	; () banked
 16666  00392E  6FB2               	movwf	(_MTP+1)& (0+255),b
 16667  003930  0E06               	movlw	high _ConnectionTable
 16668  003932  20F4               	addwfc	prodh,w,c
 16669  003934  0101               	movlb	1	; () banked
 16670  003936  6FB3               	movwf	(_MTP+2)& (0+255),b
 16671                           
 16672                           ; BSR set to: 1
 16673                           ;miwi_mesh.c: 1572: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 16674  003938  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 16675  00393C  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 16676  003940  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 16677  003944  0EA6               	movlw	low _TxBuffer
 16678  003946  0101               	movlb	1	; () banked
 16679  003948  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 16680  00394A  0E02               	movlw	high _TxBuffer
 16681  00394C  0101               	movlb	1	; () banked
 16682  00394E  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 16683  003950  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 16684  003954  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 16685                           
 16686                           ;miwi_mesh.c: 1573: for(j = 0; j < 0xFFF; j++) {}
 16687  003958  0E00               	movlw	0
 16688  00395A  0101               	movlb	1	; () banked
 16689  00395C  6F6A               	movwf	(MiWiTasks@j_2544+1)& (0+255),b
 16690  00395E  0E00               	movlw	0
 16691  003960  6F69               	movwf	MiWiTasks@j_2544& (0+255),b
 16692  003962                     l17584:
 16693                           
 16694                           ; BSR set to: 1
 16695  003962  0101               	movlb	1	; () banked
 16696  003964  2969               	incf	MiWiTasks@j_2544& (0+255),w,b
 16697  003966  0E0F               	movlw	15
 16698  003968  0101               	movlb	1	; () banked
 16699  00396A  596A               	subwfb	(MiWiTasks@j_2544+1)& (0+255),w,b
 16700  00396C  B0D8               	btfsc	status,0,c
 16701  00396E  D004               	goto	l17592
 16702                           
 16703                           ; BSR set to: 1
 16704                           
 16705                           ; BSR set to: 1
 16706                           
 16707                           ; BSR set to: 1
 16708  003970  0101               	movlb	1	; () banked
 16709  003972  4B69               	infsnz	MiWiTasks@j_2544& (0+255),f,b
 16710  003974  2B6A               	incf	(MiWiTasks@j_2544+1)& (0+255),f,b
 16711  003976  D7F5               	goto	l17584
 16712  003978                     l17592:
 16713                           
 16714                           ; BSR set to: 1
 16715                           ;miwi_mesh.c: 1574: }
 16716                           ;miwi_mesh.c: 1575: ConnectionTable[i].status.Val = 0;
 16717  003978  0101               	movlb	1	; () banked
 16718  00397A  517C               	movf	MiWiTasks@i& (0+255),w,b
 16719  00397C  0D09               	mullw	9
 16720  00397E  0E08               	movlw	8
 16721  003980  26F3               	addwf	prodl,f,c
 16722  003982  0E00               	movlw	0
 16723  003984  22F4               	addwfc	prodh,f,c
 16724  003986  0E00               	movlw	low _ConnectionTable
 16725  003988  24F3               	addwf	prodl,w,c
 16726  00398A  6ED9               	movwf	fsr2l,c
 16727  00398C  0E06               	movlw	high _ConnectionTable
 16728  00398E  20F4               	addwfc	prodh,w,c
 16729  003990  6EDA               	movwf	fsr2h,c
 16730  003992  0E00               	movlw	0
 16731  003994  6EDF               	movwf	indf2,c
 16732                           
 16733                           ; BSR set to: 1
 16734  003996  0101               	movlb	1	; () banked
 16735  003998  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 16736  00399A  D77A               	goto	l17554
 16737  00399C                     l769:
 16738                           
 16739                           ; BSR set to: 1
 16740                           ;miwi_mesh.c: 1576: }
 16741                           ;miwi_mesh.c: 1577: myParent = 0xFF;
 16742  00399C  0101               	movlb	1	; () banked
 16743  00399E  69CA               	setf	_myParent& (0+255),b
 16744                           
 16745                           ;miwi_mesh.c: 1578: myShortAddress.Val = 0xFFFF;
 16746  0039A0  0101               	movlb	1	; () banked
 16747  0039A2  69F2               	setf	_myShortAddress& (0+255),b
 16748  0039A4  69F3               	setf	(_myShortAddress+1)& (0+255),b
 16749                           
 16750                           ;miwi_mesh.c: 1579: myPANID.Val = 0xFFFF;
 16751  0039A6  0101               	movlb	1	; () banked
 16752  0039A8  69F0               	setf	_myPANID& (0+255),b
 16753  0039AA  69F1               	setf	(_myPANID+1)& (0+255),b
 16754                           
 16755                           ; BSR set to: 1
 16756                           ;miwi_mesh.c: 1580: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 16757  0039AC  0EF2               	movlw	low _myShortAddress
 16758  0039AE  0101               	movlb	1	; () banked
 16759  0039B0  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 16760  0039B2  0E01               	movlw	high _myShortAddress
 16761  0039B4  0101               	movlb	1	; () banked
 16762  0039B6  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 16763  0039B8  0EF0               	movlw	low _myPANID
 16764  0039BA  0101               	movlb	1	; () banked
 16765  0039BC  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 16766  0039BE  0E01               	movlw	high _myPANID
 16767  0039C0  0101               	movlb	1	; () banked
 16768  0039C2  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 16769  0039C4  ECCB  F057         	call	_MiMAC_SetAltAddress	;wreg free
 16770                           
 16771                           ;miwi_mesh.c: 1581: MiWiStateMachine.bits.memberOfNetwork = 0;
 16772  0039C8  0101               	movlb	1	; () banked
 16773  0039CA  93B6               	bcf	_MiWiStateMachine& (0+255),1,b
 16774                           
 16775                           ; BSR set to: 1
 16776                           ;miwi_mesh.c: 1588: }
 16777                           ;miwi_mesh.c: 1589: }
 16778                           ;miwi_mesh.c: 1610: }
 16779                           ;miwi_mesh.c: 1611: break;
 16780                           
 16781                           ; BSR set to: 1
 16782  0039CC  D09E               	goto	l641
 16783  0039CE                     l17602:
 16784                           
 16785                           ;miwi_mesh.c: 1665: {
 16786                           ;miwi_mesh.c: 1666: if( ConnMode > 0x02 )
 16787  0039CE  0E02               	movlw	2
 16788  0039D0  0101               	movlb	1	; () banked
 16789  0039D2  65C0               	cpfsgt	_ConnMode& (0+255),b
 16790  0039D4  D001               	goto	l774
 16791  0039D6  D099               	goto	l641
 16792  0039D8                     l774:
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;miwi_mesh.c: 1669: }
 16796                           ;miwi_mesh.c: 1672: if(MiWiStateMachine.bits.memberOfNetwork)
 16797  0039D8  0101               	movlb	1	; () banked
 16798  0039DA  A3B6               	btfss	_MiWiStateMachine& (0+255),1,b
 16799  0039DC  D096               	goto	l641
 16800                           
 16801                           ; BSR set to: 1
 16802                           ;miwi_mesh.c: 1673: {
 16803                           ;miwi_mesh.c: 1674: if( MACRxPacket.Payload[1] != currentChannel )
 16804  0039DE  0101               	movlb	1	; () banked
 16805  0039E0  EE20 F001          	lfsr	2,1
 16806  0039E4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16807  0039E6  26D9               	addwf	fsr2l,f,c
 16808  0039E8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16809  0039EA  22DA               	addwfc	fsr2h,f,c
 16810  0039EC  0101               	movlb	1	; () banked
 16811  0039EE  51F6               	movf	_currentChannel& (0+255),w,b
 16812  0039F0  18DE               	xorwf	postinc2,w,c
 16813  0039F2  A4D8               	btfss	status,2,c
 16814  0039F4  D08A               	goto	l641
 16815                           
 16816                           ; BSR set to: 1
 16817                           ;miwi_mesh.c: 1677: }
 16818                           ;miwi_mesh.c: 1681: if(role != 0x00)
 16819                           
 16820                           ; BSR set to: 1
 16821                           
 16822                           ; BSR set to: 1
 16823                           ;miwi_mesh.c: 1675: {
 16824                           ;miwi_mesh.c: 1676: break;
 16825  0039F6  0101               	movlb	1	; () banked
 16826  0039F8  51CB               	movf	_role& (0+255),w,b
 16827  0039FA  B4D8               	btfsc	status,2,c
 16828  0039FC  D086               	goto	l641
 16829                           
 16830                           ; BSR set to: 1
 16831                           ;miwi_mesh.c: 1682: {
 16832                           ;miwi_mesh.c: 1685: if (role == 0x01)
 16833  0039FE  0101               	movlb	1	; () banked
 16834  003A00  05CB               	decf	_role& (0+255),w,b
 16835  003A02  A4D8               	btfss	status,2,c
 16836  003A04  D05F               	goto	l17630
 16837                           
 16838                           ; BSR set to: 1
 16839                           ;miwi_mesh.c: 1687: {
 16840                           ;miwi_mesh.c: 1691: uint8_t jitter = 20;
 16841  003A06  0E14               	movlw	20
 16842  003A08  0101               	movlb	1	; () banked
 16843  003A0A  6F62               	movwf	MiWiTasks@jitter& (0+255),b
 16844                           
 16845                           ;miwi_mesh.c: 1692: MIWI_TICK t1, t2;
 16846                           ;miwi_mesh.c: 1693: while( jitter > 0 )
 16847  003A0C  D04D               	goto	l17626
 16848  003A0E                     l17616:
 16849                           
 16850                           ; BSR set to: 1
 16851                           ;miwi_mesh.c: 1694: {
 16852                           ;miwi_mesh.c: 1695: jitter--;
 16853  003A0E  0101               	movlb	1	; () banked
 16854  003A10  0762               	decf	MiWiTasks@jitter& (0+255),f,b
 16855                           
 16856                           ; BSR set to: 1
 16857                           ;miwi_mesh.c: 1696: t1 = MiWi_TickGet();
 16858  003A12  EC57  F052         	call	_MiWi_TickGet	;wreg free
 16859  003A16  C100  F156         	movff	?_MiWi_TickGet,MiWiTasks@t1_2546
 16860  003A1A  C101  F157         	movff	?_MiWi_TickGet+1,MiWiTasks@t1_2546+1
 16861  003A1E  C102  F158         	movff	?_MiWi_TickGet+2,MiWiTasks@t1_2546+2
 16862  003A22  C103  F159         	movff	?_MiWi_TickGet+3,MiWiTasks@t1_2546+3
 16863  003A26                     l17620:
 16864                           
 16865                           ;miwi_mesh.c: 1698: {
 16866                           ;miwi_mesh.c: 1699: t2 = MiWi_TickGet();
 16867  003A26  EC57  F052         	call	_MiWi_TickGet	;wreg free
 16868  003A2A  C100  F15A         	movff	?_MiWi_TickGet,MiWiTasks@t2_2557
 16869  003A2E  C101  F15B         	movff	?_MiWi_TickGet+1,MiWiTasks@t2_2557+1
 16870  003A32  C102  F15C         	movff	?_MiWi_TickGet+2,MiWiTasks@t2_2557+2
 16871  003A36  C103  F15D         	movff	?_MiWi_TickGet+3,MiWiTasks@t2_2557+3
 16872                           
 16873                           ;miwi_mesh.c: 1700: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 16874  003A3A  C156  F14A         	movff	MiWiTasks@t1_2546,??_MiWiTasks
 16875  003A3E  C157  F14B         	movff	MiWiTasks@t1_2546+1,??_MiWiTasks+1
 16876  003A42  C158  F14C         	movff	MiWiTasks@t1_2546+2,??_MiWiTasks+2
 16877  003A46  C159  F14D         	movff	MiWiTasks@t1_2546+3,??_MiWiTasks+3
 16878  003A4A  0101               	movlb	1	; () banked
 16879  003A4C  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 16880  003A4E  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 16881  003A50  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 16882  003A52  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 16883  003A54  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 16884  003A56  0E00               	movlw	0
 16885  003A58  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16886  003A5A  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 16887  003A5C  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 16888  003A5E  0101               	movlb	1	; () banked
 16889  003A60  515A               	movf	MiWiTasks@t2_2557& (0+255),w,b
 16890  003A62  0101               	movlb	1	; () banked
 16891  003A64  254A               	addwf	??_MiWiTasks& (0+255),w,b
 16892  003A66  0101               	movlb	1	; () banked
 16893  003A68  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 16894  003A6A  0101               	movlb	1	; () banked
 16895  003A6C  515B               	movf	(MiWiTasks@t2_2557+1)& (0+255),w,b
 16896  003A6E  0101               	movlb	1	; () banked
 16897  003A70  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 16898  003A72  0101               	movlb	1	; () banked
 16899  003A74  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 16900  003A76  0101               	movlb	1	; () banked
 16901  003A78  515C               	movf	(MiWiTasks@t2_2557+2)& (0+255),w,b
 16902  003A7A  0101               	movlb	1	; () banked
 16903  003A7C  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 16904  003A7E  0101               	movlb	1	; () banked
 16905  003A80  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 16906  003A82  0101               	movlb	1	; () banked
 16907  003A84  515D               	movf	(MiWiTasks@t2_2557+3)& (0+255),w,b
 16908  003A86  0101               	movlb	1	; () banked
 16909  003A88  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 16910  003A8A  0101               	movlb	1	; () banked
 16911  003A8C  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 16912  003A8E  0101               	movlb	1	; () banked
 16913  003A90  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 16914  003A92  0101               	movlb	1	; () banked
 16915  003A94  1150               	iorwf	(??_MiWiTasks+6)& (0+255),w,b
 16916  003A96  E108               	bnz	l17626
 16917  003A98  0EF5               	movlw	245
 16918  003A9A  0101               	movlb	1	; () banked
 16919  003A9C  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 16920  003A9E  0E01               	movlw	1
 16921  003AA0  0101               	movlb	1	; () banked
 16922  003AA2  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 16923  003AA4  A0D8               	btfss	status,0,c
 16924  003AA6  D7BF               	goto	l17620
 16925  003AA8                     l17626:
 16926                           
 16927                           ; BSR set to: 1
 16928  003AA8  0101               	movlb	1	; () banked
 16929  003AAA  5162               	movf	MiWiTasks@jitter& (0+255),w,b
 16930  003AAC  0101               	movlb	1	; () banked
 16931  003AAE  A4D8               	btfss	status,2,c
 16932  003AB0  D7AE               	goto	l17616
 16933                           
 16934                           ; BSR set to: 1
 16935                           ;miwi_mesh.c: 1703: }
 16936                           ;miwi_mesh.c: 1704: }
 16937                           ;miwi_mesh.c: 1705: }
 16938                           ;miwi_mesh.c: 1709: BroadcastJitter(20);
 16939                           
 16940                           ; BSR set to: 1
 16941  003AB2  0E14               	movlw	20
 16942  003AB4  EC9B  F04C         	call	_BroadcastJitter
 16943                           
 16944                           ;miwi_mesh.c: 1710: BroadcastJitter(20);
 16945  003AB8  0E14               	movlw	20
 16946  003ABA  EC9B  F04C         	call	_BroadcastJitter
 16947                           
 16948                           ;miwi_mesh.c: 1711: BroadcastJitter(20);
 16949  003ABE  0E14               	movlw	20
 16950  003AC0  EC9B  F04C         	call	_BroadcastJitter
 16951  003AC4                     l17630:
 16952                           
 16953                           ;miwi_mesh.c: 1712: }
 16954                           ;miwi_mesh.c: 1714: SendBeacon();
 16955  003AC4  ECF3  F040         	call	_SendBeacon	;wreg free
 16956                           
 16957                           ;miwi_mesh.c: 1764: }
 16958                           
 16959                           ;miwi_mesh.c: 1763: break;
 16960                           
 16961                           ;miwi_mesh.c: 1762: default:
 16962                           
 16963                           ;miwi_mesh.c: 1715: }
 16964                           ;miwi_mesh.c: 1716: }
 16965                           ;miwi_mesh.c: 1717: }
 16966                           ;miwi_mesh.c: 1718: break;
 16967  003AC8  D020               	goto	l641
 16968  003ACA                     l17634:
 16969  003ACA  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 16970  003ACE  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 16971  003AD2  50DF               	movf	indf2,w,c
 16972                           
 16973                           ; Switch size 1, requested type "space"
 16974                           ; Number of cases is 4, Range of values is 1 to 7
 16975                           ; switch strategies available:
 16976                           ; Name         Instructions Cycles
 16977                           ; simple_byte           13     7 (average)
 16978                           ;	Chosen strategy is simple_byte
 16979  003AD4  0A01               	xorlw	1	; case 1
 16980  003AD6  B4D8               	btfsc	status,2,c
 16981  003AD8  D4AC               	goto	l17376
 16982  003ADA  0A03               	xorlw	3	; case 2
 16983  003ADC  B4D8               	btfsc	status,2,c
 16984  003ADE  D5C2               	goto	l17482
 16985  003AE0  0A01               	xorlw	1	; case 3
 16986  003AE2  B4D8               	btfsc	status,2,c
 16987  003AE4  D684               	goto	l17530
 16988  003AE6  0A04               	xorlw	4	; case 7
 16989  003AE8  B4D8               	btfsc	status,2,c
 16990  003AEA  D771               	goto	l17602
 16991                           
 16992                           ;miwi_mesh.c: 1770: }
 16993                           
 16994                           ;miwi_mesh.c: 1768: break;
 16995                           
 16996                           ;miwi_mesh.c: 1767: default:
 16997                           
 16998                           ;miwi_mesh.c: 1765: break;
 16999  003AEC  D00E               	goto	l641
 17000  003AEE                     l17638:
 17001  003AEE  0101               	movlb	1	; () banked
 17002  003AF0  519A               	movf	_MACRxPacket& (0+255),w,b
 17003  003AF2  0B03               	andlw	3
 17004                           
 17005                           ; Switch size 1, requested type "space"
 17006                           ; Number of cases is 3, Range of values is 0 to 3
 17007                           ; switch strategies available:
 17008                           ; Name         Instructions Cycles
 17009                           ; simple_byte           10     6 (average)
 17010                           ;	Chosen strategy is simple_byte
 17011  003AF4  0A00               	xorlw	0	; case 0
 17012  003AF6  B4D8               	btfsc	status,2,c
 17013  003AF8  EF39  F012         	goto	l16910
 17014  003AFC  0A01               	xorlw	1	; case 1
 17015  003AFE  B4D8               	btfsc	status,2,c
 17016  003B00  D7E4               	goto	l17634
 17017  003B02  0A02               	xorlw	2	; case 3
 17018  003B04  B4D8               	btfsc	status,2,c
 17019  003B06  EF64  F017         	goto	l17268
 17020  003B0A                     l641:
 17021                           
 17022                           ;miwi_mesh.c: 1772: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 17023  003B0A  0101               	movlb	1	; () banked
 17024  003B0C  A5B6               	btfss	_MiWiStateMachine& (0+255),2,b
 17025                           
 17026                           ; BSR set to: 1
 17027                           ;miwi_mesh.c: 1773: {
 17028                           ;miwi_mesh.c: 1774: MiMAC_DiscardPacket();
 17029  003B0E  EC4B  F057         	call	_MiMAC_DiscardPacket	;wreg free
 17030  003B12                     l17642:
 17031                           
 17032                           ;miwi_mesh.c: 1775: }
 17033                           ;miwi_mesh.c: 1776: }
 17034                           ;miwi_mesh.c: 1778: t1 = MiWi_TickGet();
 17035  003B12  EC57  F052         	call	_MiWi_TickGet	;wreg free
 17036  003B16  C100  F164         	movff	?_MiWi_TickGet,MiWiTasks@t1
 17037  003B1A  C101  F165         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 17038  003B1E  C102  F166         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 17039  003B22  C103  F167         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 17040                           
 17041                           ;miwi_mesh.c: 1845: for(i = 0; i < 4; i++)
 17042  003B26  0E00               	movlw	0
 17043  003B28  0101               	movlb	1	; () banked
 17044  003B2A  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17045  003B2C                     l17646:
 17046                           
 17047                           ; BSR set to: 1
 17048  003B2C  0E03               	movlw	3
 17049  003B2E  0101               	movlb	1	; () banked
 17050  003B30  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17051  003B32  D001               	goto	l17650
 17052  003B34  D067               	goto	l790
 17053  003B36                     l17650:
 17054                           
 17055                           ; BSR set to: 1
 17056                           ;miwi_mesh.c: 1846: {
 17057                           ;miwi_mesh.c: 1847: if( BroadcastRecords[i].RxCounter > 0 )
 17058  003B36  0101               	movlb	1	; () banked
 17059  003B38  517C               	movf	MiWiTasks@i& (0+255),w,b
 17060  003B3A  0D08               	mullw	8
 17061  003B3C  0E03               	movlw	3
 17062  003B3E  26F3               	addwf	prodl,f,c
 17063  003B40  0E00               	movlw	0
 17064  003B42  22F4               	addwfc	prodh,f,c
 17065  003B44  0E28               	movlw	low _BroadcastRecords
 17066  003B46  24F3               	addwf	prodl,w,c
 17067  003B48  6ED9               	movwf	fsr2l,c
 17068  003B4A  0E02               	movlw	high _BroadcastRecords
 17069  003B4C  20F4               	addwfc	prodh,w,c
 17070  003B4E  6EDA               	movwf	fsr2h,c
 17071  003B50  50DF               	movf	indf2,w,c
 17072  003B52  B4D8               	btfsc	status,2,c
 17073  003B54  D054               	goto	l17656
 17074                           
 17075                           ; BSR set to: 1
 17076                           ;miwi_mesh.c: 1848: {
 17077                           ;miwi_mesh.c: 1849: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 17078  003B56  0101               	movlb	1	; () banked
 17079  003B58  517C               	movf	MiWiTasks@i& (0+255),w,b
 17080  003B5A  0D08               	mullw	8
 17081  003B5C  0E04               	movlw	4
 17082  003B5E  26F3               	addwf	prodl,f,c
 17083  003B60  0E00               	movlw	0
 17084  003B62  22F4               	addwfc	prodh,f,c
 17085  003B64  0E28               	movlw	low _BroadcastRecords
 17086  003B66  24F3               	addwf	prodl,w,c
 17087  003B68  6ED9               	movwf	fsr2l,c
 17088  003B6A  0E02               	movlw	high _BroadcastRecords
 17089  003B6C  20F4               	addwfc	prodh,w,c
 17090  003B6E  6EDA               	movwf	fsr2h,c
 17091  003B70  CFDE F14A          	movff	postinc2,??_MiWiTasks
 17092  003B74  CFDE F14B          	movff	postinc2,??_MiWiTasks+1
 17093  003B78  CFDE F14C          	movff	postinc2,??_MiWiTasks+2
 17094  003B7C  CFDE F14D          	movff	postinc2,??_MiWiTasks+3
 17095  003B80  0101               	movlb	1	; () banked
 17096  003B82  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 17097  003B84  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 17098  003B86  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 17099  003B88  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 17100  003B8A  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 17101  003B8C  0E00               	movlw	0
 17102  003B8E  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17103  003B90  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 17104  003B92  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 17105  003B94  0101               	movlb	1	; () banked
 17106  003B96  5164               	movf	MiWiTasks@t1& (0+255),w,b
 17107  003B98  0101               	movlb	1	; () banked
 17108  003B9A  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17109  003B9C  0101               	movlb	1	; () banked
 17110  003B9E  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 17111  003BA0  0101               	movlb	1	; () banked
 17112  003BA2  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 17113  003BA4  0101               	movlb	1	; () banked
 17114  003BA6  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17115  003BA8  0101               	movlb	1	; () banked
 17116  003BAA  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 17117  003BAC  0101               	movlb	1	; () banked
 17118  003BAE  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 17119  003BB0  0101               	movlb	1	; () banked
 17120  003BB2  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 17121  003BB4  0101               	movlb	1	; () banked
 17122  003BB6  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 17123  003BB8  0101               	movlb	1	; () banked
 17124  003BBA  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 17125  003BBC  0101               	movlb	1	; () banked
 17126  003BBE  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 17127  003BC0  0101               	movlb	1	; () banked
 17128  003BC2  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 17129  003BC4  0101               	movlb	1	; () banked
 17130  003BC6  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 17131  003BC8  E10B               	bnz	u19260
 17132  003BCA  0E21               	movlw	33
 17133  003BCC  0101               	movlb	1	; () banked
 17134  003BCE  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 17135  003BD0  0EA1               	movlw	161
 17136  003BD2  0101               	movlb	1	; () banked
 17137  003BD4  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 17138  003BD6  0E07               	movlw	7
 17139  003BD8  0101               	movlb	1	; () banked
 17140  003BDA  5950               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 17141  003BDC  A0D8               	btfss	status,0,c
 17142  003BDE  D00F               	goto	l17656
 17143  003BE0                     u19260:
 17144                           
 17145                           ; BSR set to: 1
 17146                           ;miwi_mesh.c: 1850: {
 17147                           ;miwi_mesh.c: 1851: BroadcastRecords[i].RxCounter = 0;
 17148  003BE0  0101               	movlb	1	; () banked
 17149  003BE2  517C               	movf	MiWiTasks@i& (0+255),w,b
 17150  003BE4  0D08               	mullw	8
 17151  003BE6  0E03               	movlw	3
 17152  003BE8  26F3               	addwf	prodl,f,c
 17153  003BEA  0E00               	movlw	0
 17154  003BEC  22F4               	addwfc	prodh,f,c
 17155  003BEE  0E28               	movlw	low _BroadcastRecords
 17156  003BF0  24F3               	addwf	prodl,w,c
 17157  003BF2  6ED9               	movwf	fsr2l,c
 17158  003BF4  0E02               	movlw	high _BroadcastRecords
 17159  003BF6  20F4               	addwfc	prodh,w,c
 17160  003BF8  6EDA               	movwf	fsr2h,c
 17161  003BFA  0E00               	movlw	0
 17162  003BFC  6EDF               	movwf	indf2,c
 17163  003BFE                     l17656:
 17164                           
 17165                           ; BSR set to: 1
 17166  003BFE  0101               	movlb	1	; () banked
 17167  003C00  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17168  003C02  D794               	goto	l17646
 17169  003C04                     l790:
 17170                           
 17171                           ; BSR set to: 1
 17172                           ;miwi_mesh.c: 1852: }
 17173                           ;miwi_mesh.c: 1853: }
 17174                           ;miwi_mesh.c: 1854: }
 17175                           ;miwi_mesh.c: 1858: if(openSocketInfo.status.bits.requestIsOpen)
 17176  003C04  0101               	movlb	1	; () banked
 17177  003C06  A3CD               	btfss	_openSocketInfo& (0+255),1,b
 17178  003C08  0012               	return	
 17179                           
 17180                           ; BSR set to: 1
 17181                           ;miwi_mesh.c: 1859: {
 17182                           ;miwi_mesh.c: 1860: if(openSocketInfo.status.bits.matchFound)
 17183  003C0A  0101               	movlb	1	; () banked
 17184  003C0C  A1CD               	btfss	_openSocketInfo& (0+255),0,b
 17185  003C0E  D063               	goto	l17694
 17186                           
 17187                           ; BSR set to: 1
 17188                           ;miwi_mesh.c: 1861: {
 17189                           ;miwi_mesh.c: 1863: uint8_t j;
 17190                           ;miwi_mesh.c: 1865: ;
 17191                           ;miwi_mesh.c: 1867: {TxData = 11;};
 17192  003C10  0E0B               	movlw	11
 17193  003C12  0101               	movlb	1	; () banked
 17194  003C14  6FC7               	movwf	_TxData& (0+255),b
 17195                           
 17196                           ; BSR set to: 1
 17197                           ;miwi_mesh.c: 1868: TxBuffer[TxData++] = 0x00;
 17198  003C16  0101               	movlb	1	; () banked
 17199  003C18  51C7               	movf	_TxData& (0+255),w,b
 17200  003C1A  0D01               	mullw	1
 17201  003C1C  0EA6               	movlw	low _TxBuffer
 17202  003C1E  24F3               	addwf	prodl,w,c
 17203  003C20  6ED9               	movwf	fsr2l,c
 17204  003C22  0E02               	movlw	high _TxBuffer
 17205  003C24  20F4               	addwfc	prodh,w,c
 17206  003C26  6EDA               	movwf	fsr2h,c
 17207  003C28  0E00               	movlw	0
 17208  003C2A  6EDF               	movwf	indf2,c
 17209                           
 17210                           ; BSR set to: 1
 17211  003C2C  0101               	movlb	1	; () banked
 17212  003C2E  2BC7               	incf	_TxData& (0+255),f,b
 17213                           
 17214                           ; BSR set to: 1
 17215                           ;miwi_mesh.c: 1869: TxBuffer[TxData++] = 0x11;
 17216  003C30  0101               	movlb	1	; () banked
 17217  003C32  51C7               	movf	_TxData& (0+255),w,b
 17218  003C34  0D01               	mullw	1
 17219  003C36  0EA6               	movlw	low _TxBuffer
 17220  003C38  24F3               	addwf	prodl,w,c
 17221  003C3A  6ED9               	movwf	fsr2l,c
 17222  003C3C  0E02               	movlw	high _TxBuffer
 17223  003C3E  20F4               	addwfc	prodh,w,c
 17224  003C40  6EDA               	movwf	fsr2h,c
 17225  003C42  0E11               	movlw	17
 17226  003C44  6EDF               	movwf	indf2,c
 17227                           
 17228                           ; BSR set to: 1
 17229  003C46  0101               	movlb	1	; () banked
 17230  003C48  2BC7               	incf	_TxData& (0+255),f,b
 17231                           
 17232                           ;miwi_mesh.c: 1873: for(j=0;j<4;j++)
 17233  003C4A  0E00               	movlw	0
 17234  003C4C  0101               	movlb	1	; () banked
 17235  003C4E  6F6C               	movwf	MiWiTasks@j_2569& (0+255),b
 17236  003C50                     l17672:
 17237                           
 17238                           ; BSR set to: 1
 17239  003C50  0E03               	movlw	3
 17240  003C52  0101               	movlb	1	; () banked
 17241  003C54  656C               	cpfsgt	MiWiTasks@j_2569& (0+255),b
 17242  003C56  D001               	goto	l17676
 17243  003C58  D019               	goto	l17684
 17244  003C5A                     l17676:
 17245                           
 17246                           ; BSR set to: 1
 17247                           ;miwi_mesh.c: 1874: {
 17248                           ;miwi_mesh.c: 1875: TxBuffer[TxData++] = openSocketInfo.LongAddress1[j];
 17249  003C5A  0101               	movlb	1	; () banked
 17250  003C5C  516C               	movf	MiWiTasks@j_2569& (0+255),w,b
 17251  003C5E  0D01               	mullw	1
 17252  003C60  0ED1               	movlw	low (_openSocketInfo+4)
 17253  003C62  24F3               	addwf	prodl,w,c
 17254  003C64  6ED9               	movwf	fsr2l,c
 17255  003C66  0E01               	movlw	high (_openSocketInfo+4)
 17256  003C68  20F4               	addwfc	prodh,w,c
 17257  003C6A  6EDA               	movwf	fsr2h,c
 17258  003C6C  0101               	movlb	1	; () banked
 17259  003C6E  51C7               	movf	_TxData& (0+255),w,b
 17260  003C70  0D01               	mullw	1
 17261  003C72  0EA6               	movlw	low _TxBuffer
 17262  003C74  24F3               	addwf	prodl,w,c
 17263  003C76  6EE1               	movwf	fsr1l,c
 17264  003C78  0E02               	movlw	high _TxBuffer
 17265  003C7A  20F4               	addwfc	prodh,w,c
 17266  003C7C  6EE2               	movwf	fsr1h,c
 17267  003C7E  CFDF FFE7          	movff	indf2,indf1
 17268                           
 17269                           ; BSR set to: 1
 17270  003C82  0101               	movlb	1	; () banked
 17271  003C84  2BC7               	incf	_TxData& (0+255),f,b
 17272                           
 17273                           ; BSR set to: 1
 17274  003C86  0101               	movlb	1	; () banked
 17275  003C88  2B6C               	incf	MiWiTasks@j_2569& (0+255),f,b
 17276  003C8A  D7E2               	goto	l17672
 17277  003C8C                     l17684:
 17278                           
 17279                           ; BSR set to: 1
 17280                           ;miwi_mesh.c: 1876: }
 17281                           ;miwi_mesh.c: 1878: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[0];
 17282  003C8C  0101               	movlb	1	; () banked
 17283  003C8E  51C7               	movf	_TxData& (0+255),w,b
 17284  003C90  0D01               	mullw	1
 17285  003C92  0EA6               	movlw	low _TxBuffer
 17286  003C94  24F3               	addwf	prodl,w,c
 17287  003C96  6ED9               	movwf	fsr2l,c
 17288  003C98  0E02               	movlw	high _TxBuffer
 17289  003C9A  20F4               	addwfc	prodh,w,c
 17290  003C9C  6EDA               	movwf	fsr2h,c
 17291  003C9E  C1CF  FFDF         	movff	_openSocketInfo+2,indf2
 17292                           
 17293                           ; BSR set to: 1
 17294  003CA2  0101               	movlb	1	; () banked
 17295  003CA4  2BC7               	incf	_TxData& (0+255),f,b
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;miwi_mesh.c: 1879: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[1];
 17299  003CA6  0101               	movlb	1	; () banked
 17300  003CA8  51C7               	movf	_TxData& (0+255),w,b
 17301  003CAA  0D01               	mullw	1
 17302  003CAC  0EA6               	movlw	low _TxBuffer
 17303  003CAE  24F3               	addwf	prodl,w,c
 17304  003CB0  6ED9               	movwf	fsr2l,c
 17305  003CB2  0E02               	movlw	high _TxBuffer
 17306  003CB4  20F4               	addwfc	prodh,w,c
 17307  003CB6  6EDA               	movwf	fsr2h,c
 17308  003CB8  C1D0  FFDF         	movff	_openSocketInfo+3,indf2
 17309  003CBC  0101               	movlb	1	; () banked
 17310  003CBE  2BC7               	incf	_TxData& (0+255),f,b
 17311                           
 17312                           ; BSR set to: 1
 17313                           ;miwi_mesh.c: 1889: UnicastShortAddress(openSocketInfo.ShortAddress2.v);
 17314  003CC0  0ED5               	movlw	low (_openSocketInfo+8)
 17315  003CC2  0101               	movlb	1	; () banked
 17316  003CC4  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 17317  003CC6  0E01               	movlw	high (_openSocketInfo+8)
 17318  003CC8  0101               	movlb	1	; () banked
 17319  003CCA  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 17320  003CCC  EC3D  F050         	call	_UnicastShortAddress	;wreg free
 17321                           
 17322                           ;miwi_mesh.c: 1890: openSocketInfo.status.bits.requestIsOpen = 0;
 17323  003CD0  0101               	movlb	1	; () banked
 17324  003CD2  93CD               	bcf	_openSocketInfo& (0+255),1,b
 17325                           
 17326                           ;miwi_mesh.c: 1894: }
 17327  003CD4  0012               	return	
 17328  003CD6                     l17694:
 17329                           
 17330                           ; BSR set to: 1
 17331                           ;miwi_mesh.c: 1895: else
 17332                           ;miwi_mesh.c: 1896: {
 17333                           ;miwi_mesh.c: 1897: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 17334  003CD6  C1DB  F14A         	movff	_openSocketInfo+14,??_MiWiTasks
 17335  003CDA  C1DC  F14B         	movff	_openSocketInfo+15,??_MiWiTasks+1
 17336  003CDE  C1DD  F14C         	movff	_openSocketInfo+16,??_MiWiTasks+2
 17337  003CE2  C1DE  F14D         	movff	_openSocketInfo+17,??_MiWiTasks+3
 17338  003CE6  0101               	movlb	1	; () banked
 17339  003CE8  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 17340  003CEA  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 17341  003CEC  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 17342  003CEE  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 17343  003CF0  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 17344  003CF2  0E00               	movlw	0
 17345  003CF4  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17346  003CF6  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 17347  003CF8  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 17348  003CFA  0101               	movlb	1	; () banked
 17349  003CFC  5164               	movf	MiWiTasks@t1& (0+255),w,b
 17350  003CFE  0101               	movlb	1	; () banked
 17351  003D00  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17352  003D02  0101               	movlb	1	; () banked
 17353  003D04  6F52               	movwf	MiWiTasks@t2& (0+255),b
 17354  003D06  0101               	movlb	1	; () banked
 17355  003D08  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 17356  003D0A  0101               	movlb	1	; () banked
 17357  003D0C  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17358  003D0E  0101               	movlb	1	; () banked
 17359  003D10  6F53               	movwf	(MiWiTasks@t2+1)& (0+255),b
 17360  003D12  0101               	movlb	1	; () banked
 17361  003D14  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 17362  003D16  0101               	movlb	1	; () banked
 17363  003D18  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 17364  003D1A  0101               	movlb	1	; () banked
 17365  003D1C  6F54               	movwf	(MiWiTasks@t2+2)& (0+255),b
 17366  003D1E  0101               	movlb	1	; () banked
 17367  003D20  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 17368  003D22  0101               	movlb	1	; () banked
 17369  003D24  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 17370  003D26  0101               	movlb	1	; () banked
 17371  003D28  6F55               	movwf	(MiWiTasks@t2+3)& (0+255),b
 17372                           
 17373                           ;miwi_mesh.c: 1899: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 17374  003D2A  0101               	movlb	1	; () banked
 17375  003D2C  5155               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 17376  003D2E  E10B               	bnz	u19320
 17377  003D30  0E61               	movlw	97
 17378  003D32  0101               	movlb	1	; () banked
 17379  003D34  5D52               	subwf	MiWiTasks@t2& (0+255),w,b
 17380  003D36  0EE3               	movlw	227
 17381  003D38  0101               	movlb	1	; () banked
 17382  003D3A  5953               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 17383  003D3C  0E16               	movlw	22
 17384  003D3E  0101               	movlb	1	; () banked
 17385  003D40  5954               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 17386  003D42  A0D8               	btfss	status,0,c
 17387  003D44  0012               	return	
 17388  003D46                     u19320:
 17389                           
 17390                           ; BSR set to: 1
 17391                           ;miwi_mesh.c: 1900: {
 17392                           ;miwi_mesh.c: 1902: openSocketInfo.status.bits.requestIsOpen = 0;
 17393  003D46  0101               	movlb	1	; () banked
 17394  003D48  93CD               	bcf	_openSocketInfo& (0+255),1,b
 17395                           
 17396                           ; BSR set to: 1
 17397                           
 17398                           ; BSR set to: 1
 17399  003D4A  0012               	return	
 17400  003D4C                     __end_of_MiWiTasks:
 17401                           	opt stack 0
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           intcon2	equ	0xFF1
 17410                           intcon3	equ	0xFF0
 17411                           indf0	equ	0xFEF
 17412                           postinc0	equ	0xFEE
 17413                           plusw0	equ	0xFEB
 17414                           fsr0h	equ	0xFEA
 17415                           fsr0l	equ	0xFE9
 17416                           wreg	equ	0xFE8
 17417                           indf1	equ	0xFE7
 17418                           postinc1	equ	0xFE6
 17419                           postdec1	equ	0xFE5
 17420                           fsr1h	equ	0xFE2
 17421                           fsr1l	equ	0xFE1
 17422                           indf2	equ	0xFDF
 17423                           postinc2	equ	0xFDE
 17424                           postdec2	equ	0xFDD
 17425                           plusw2	equ	0xFDB
 17426                           fsr2h	equ	0xFDA
 17427                           fsr2l	equ	0xFD9
 17428                           status	equ	0xFD8
 17429                           
 17430 ;; *************** function _UnicastShortAddress *****************
 17431 ;; Defined at:
 17432 ;;		line 4508 in file "src/miwi/miwi_mesh.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;  DestAddress     2   72[BANK1 ] PTR unsigned char 
 17435 ;;		 -> openSocketInfo.ShortAddress2(2), openSocketInfo.ShortAddress1(2), openSocketInfo(18), 
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      unsigned char 
 17440 ;; Registers used:
 17441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17447 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17450 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17451 ;;Total ram usage:        2 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:   24
 17454 ;; This function calls:
 17455 ;;		_RouteMessage
 17456 ;; This function is called by:
 17457 ;;		_MiWiTasks
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           	psect	text32
 17462  00A07A                     __ptext32:
 17463                           	opt stack 0
 17464  00A07A                     _UnicastShortAddress:
 17465                           	opt stack 5
 17466                           
 17467                           ;miwi_mesh.c: 4510: TxBuffer[0] = 4;
 17468                           
 17469                           ; BSR set to: 1
 17470                           ;incstack = 0
 17471  00A07A  0E04               	movlw	4
 17472  00A07C  0102               	movlb	2	; () banked
 17473  00A07E  6FA6               	movwf	_TxBuffer& (0+255),b
 17474                           
 17475                           ;miwi_mesh.c: 4511: TxBuffer[1] = 0x02;
 17476  00A080  0E02               	movlw	2
 17477  00A082  0102               	movlb	2	; () banked
 17478  00A084  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 17479                           
 17480                           ; BSR set to: 2
 17481                           ;miwi_mesh.c: 4512: TxBuffer[2] = myPANID.v[0];
 17482  00A086  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 17483                           
 17484                           ; BSR set to: 2
 17485                           ;miwi_mesh.c: 4513: TxBuffer[3] = myPANID.v[1];
 17486  00A08A  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 17487                           
 17488                           ; BSR set to: 2
 17489                           ;miwi_mesh.c: 4514: TxBuffer[4] = DestAddress[0];
 17490  00A08E  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 17491  00A092  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 17492  00A096  50DF               	movf	indf2,w,c
 17493  00A098  0102               	movlb	2	; () banked
 17494  00A09A  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 17495                           
 17496                           ; BSR set to: 2
 17497                           ;miwi_mesh.c: 4515: TxBuffer[5] = DestAddress[1];
 17498  00A09C  0101               	movlb	1	; () banked
 17499  00A09E  EE20 F001          	lfsr	2,1
 17500  00A0A2  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 17501  00A0A4  26D9               	addwf	fsr2l,f,c
 17502  00A0A6  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 17503  00A0A8  22DA               	addwfc	fsr2h,f,c
 17504  00A0AA  50DF               	movf	indf2,w,c
 17505  00A0AC  0102               	movlb	2	; () banked
 17506  00A0AE  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 17507                           
 17508                           ; BSR set to: 2
 17509                           ;miwi_mesh.c: 4516: TxBuffer[6] = myPANID.v[0];
 17510  00A0B0  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 17511                           
 17512                           ; BSR set to: 2
 17513                           ;miwi_mesh.c: 4517: TxBuffer[7] = myPANID.v[1];
 17514  00A0B4  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 17515                           
 17516                           ; BSR set to: 2
 17517                           ;miwi_mesh.c: 4518: TxBuffer[8] = myShortAddress.v[0];
 17518  00A0B8  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 17519                           
 17520                           ; BSR set to: 2
 17521                           ;miwi_mesh.c: 4519: TxBuffer[9] = myShortAddress.v[1];
 17522  00A0BC  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 17523                           
 17524                           ; BSR set to: 2
 17525                           ;miwi_mesh.c: 4520: TxBuffer[10] = MiWiSeqNum++;
 17526  00A0C0  C1C4  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 17527                           
 17528                           ; BSR set to: 2
 17529  00A0C4  0101               	movlb	1	; () banked
 17530  00A0C6  2BC4               	incf	_MiWiSeqNum& (0+255),f,b
 17531                           
 17532                           ; BSR set to: 1
 17533                           ;miwi_mesh.c: 4523: tempShortAddress.v[0] = DestAddress[0];
 17534  00A0C8  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 17535  00A0CC  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 17536  00A0D0  50DF               	movf	indf2,w,c
 17537  00A0D2  0101               	movlb	1	; () banked
 17538  00A0D4  6FF4               	movwf	_tempShortAddress& (0+255),b
 17539                           
 17540                           ; BSR set to: 1
 17541                           ;miwi_mesh.c: 4524: tempShortAddress.v[1] = DestAddress[1];
 17542  00A0D6  0101               	movlb	1	; () banked
 17543  00A0D8  EE20 F001          	lfsr	2,1
 17544  00A0DC  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 17545  00A0DE  26D9               	addwf	fsr2l,f,c
 17546  00A0E0  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 17547  00A0E2  22DA               	addwfc	fsr2h,f,c
 17548  00A0E4  50DF               	movf	indf2,w,c
 17549  00A0E6  0101               	movlb	1	; () banked
 17550  00A0E8  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17551                           
 17552                           ; BSR set to: 1
 17553                           ;miwi_mesh.c: 4525: if( 0 == RouteMessage(myPANID, tempShortAddress, 0) )
 17554  00A0EA  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 17555  00A0EE  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 17556  00A0F2  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 17557  00A0F6  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 17558  00A0FA  0E00               	movlw	0
 17559  00A0FC  0101               	movlb	1	; () banked
 17560  00A0FE  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 17561  00A100  EC08  F024         	call	_RouteMessage	;wreg free
 17562  00A104  0900               	iorlw	0
 17563  00A106  A4D8               	btfss	status,2,c
 17564  00A108  0012               	return	
 17565                           
 17566                           ;miwi_mesh.c: 4526: {
 17567                           ;miwi_mesh.c: 4527: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 17568  00A10A  0101               	movlb	1	; () banked
 17569  00A10C  97B6               	bcf	_MiWiStateMachine& (0+255),3,b
 17570                           
 17571                           ;miwi_mesh.c: 4528: return 0;
 17572                           ;	Return value of _UnicastShortAddress is never used
 17573  00A10E  0012               	return	
 17574  00A110                     __end_of_UnicastShortAddress:
 17575                           	opt stack 0
 17576                           tblptru	equ	0xFF8
 17577                           tblptrh	equ	0xFF7
 17578                           tblptrl	equ	0xFF6
 17579                           tablat	equ	0xFF5
 17580                           prodh	equ	0xFF4
 17581                           prodl	equ	0xFF3
 17582                           intcon	equ	0xFF2
 17583                           intcon2	equ	0xFF1
 17584                           intcon3	equ	0xFF0
 17585                           indf0	equ	0xFEF
 17586                           postinc0	equ	0xFEE
 17587                           plusw0	equ	0xFEB
 17588                           fsr0h	equ	0xFEA
 17589                           fsr0l	equ	0xFE9
 17590                           wreg	equ	0xFE8
 17591                           indf1	equ	0xFE7
 17592                           postinc1	equ	0xFE6
 17593                           postdec1	equ	0xFE5
 17594                           fsr1h	equ	0xFE2
 17595                           fsr1l	equ	0xFE1
 17596                           indf2	equ	0xFDF
 17597                           postinc2	equ	0xFDE
 17598                           postdec2	equ	0xFDD
 17599                           plusw2	equ	0xFDB
 17600                           fsr2h	equ	0xFDA
 17601                           fsr2l	equ	0xFD9
 17602                           status	equ	0xFD8
 17603                           
 17604 ;; *************** function _RouteMessage *****************
 17605 ;; Defined at:
 17606 ;;		line 1932 in file "src/miwi/miwi_mesh.c"
 17607 ;; Parameters:    Size  Location     Type
 17608 ;;  PANID           2   61[BANK1 ] struct .
 17609 ;;  ShortAddress    2   63[BANK1 ] struct .
 17610 ;;  SecEn           1   65[BANK1 ] unsigned char 
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;  j               1   69[BANK1 ] unsigned char 
 17613 ;;  i               1   71[BANK1 ] unsigned char 
 17614 ;;  parentNode      1   70[BANK1 ] unsigned char 
 17615 ;; Return value:  Size  Location     Type
 17616 ;;                  1    wreg      unsigned char 
 17617 ;; Registers used:
 17618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17619 ;; Tracked objects:
 17620 ;;		On entry : 0/0
 17621 ;;		On exit  : 0/0
 17622 ;;		Unchanged: 0/0
 17623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17624 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17628 ;;Total ram usage:       11 bytes
 17629 ;; Hardware stack levels used:    1
 17630 ;; Hardware stack levels required when called:   23
 17631 ;; This function calls:
 17632 ;;		_MiMAC_SendPacket
 17633 ;;		_SearchForShortAddress
 17634 ;;		_SendBeacon
 17635 ;;		_SendMACPacket
 17636 ;; This function is called by:
 17637 ;;		_MiWiTasks
 17638 ;;		_UnicastShortAddress
 17639 ;;		_MiApp_UnicastAddress
 17640 ;;		_MiApp_UnicastConnection
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           	psect	text33
 17645  004810                     __ptext33:
 17646                           	opt stack 0
 17647  004810                     _RouteMessage:
 17648                           	opt stack 5
 17649                           
 17650                           ;miwi_mesh.c: 1934: uint8_t parentNode = (ShortAddress.v[1] & 0x07);
 17651                           
 17652                           ;incstack = 0
 17653  004810  0101               	movlb	1	; () banked
 17654  004812  5140               	movf	(RouteMessage@ShortAddress+1)& (0+255),w,b
 17655  004814  0B07               	andlw	7
 17656  004816  0101               	movlb	1	; () banked
 17657  004818  6F46               	movwf	RouteMessage@parentNode& (0+255),b
 17658                           
 17659                           ;miwi_mesh.c: 1935: uint8_t i;
 17660                           ;miwi_mesh.c: 1937: if( parentNode == myShortAddress.v[1] )
 17661  00481A  0101               	movlb	1	; () banked
 17662  00481C  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 17663  00481E  0101               	movlb	1	; () banked
 17664  004820  19F3               	xorwf	(_myShortAddress+1)& (0+255),w,b
 17665  004822  A4D8               	btfss	status,2,c
 17666  004824  D042               	goto	l16246
 17667                           
 17668                           ; BSR set to: 1
 17669                           ;miwi_mesh.c: 1938: {
 17670                           ;miwi_mesh.c: 1940: if( ShortAddress.v[0] > 0x80 )
 17671  004826  0E80               	movlw	128
 17672  004828  0101               	movlb	1	; () banked
 17673  00482A  653F               	cpfsgt	RouteMessage@ShortAddress& (0+255),b
 17674  00482C  D002               	goto	l16226
 17675                           
 17676                           ; BSR set to: 1
 17677                           ;miwi_mesh.c: 1941: {
 17678                           ;miwi_mesh.c: 1956: return 0;
 17679  00482E  0E00               	movlw	0
 17680                           
 17681                           ; BSR set to: 1
 17682  004830  0012               	return	
 17683  004832                     l16226:
 17684                           
 17685                           ; BSR set to: 1
 17686                           ;miwi_mesh.c: 1959: else
 17687                           ;miwi_mesh.c: 1960: {
 17688                           ;miwi_mesh.c: 1961: MTP.flags.Val = 0;
 17689  004832  0E00               	movlw	0
 17690  004834  0101               	movlb	1	; () banked
 17691  004836  6FB1               	movwf	_MTP& (0+255),b
 17692                           
 17693                           ; BSR set to: 1
 17694                           ;miwi_mesh.c: 1962: MTP.flags.bits.ackReq = 1;
 17695  004838  0101               	movlb	1	; () banked
 17696  00483A  8BB1               	bsf	_MTP& (0+255),5,b
 17697                           
 17698                           ; BSR set to: 1
 17699                           ;miwi_mesh.c: 1963: MTP.flags.bits.secEn = SecEn;
 17700  00483C  0101               	movlb	1	; () banked
 17701  00483E  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 17702  004840  D003               	bra	u16995
 17703  004842  0101               	movlb	1	; () banked
 17704  004844  97B1               	bcf	_MTP& (0+255),3,b
 17705  004846  D002               	bra	u16996
 17706  004848                     u16995:
 17707  004848  0101               	movlb	1	; () banked
 17708  00484A  87B1               	bsf	_MTP& (0+255),3,b
 17709  00484C                     u16996:
 17710                           
 17711                           ; BSR set to: 1
 17712                           ;miwi_mesh.c: 1965: tempShortAddress.Val = ShortAddress.Val;
 17713  00484C  C13F  F1F4         	movff	RouteMessage@ShortAddress,_tempShortAddress
 17714  004850  C140  F1F5         	movff	RouteMessage@ShortAddress+1,_tempShortAddress+1
 17715                           
 17716                           ; BSR set to: 1
 17717                           ;miwi_mesh.c: 1973: if( (i = SearchForShortAddress()) != 0xFF )
 17718  004854  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 17719  004858  0101               	movlb	1	; () banked
 17720  00485A  6F47               	movwf	RouteMessage@i& (0+255),b
 17721  00485C  0101               	movlb	1	; () banked
 17722  00485E  2947               	incf	RouteMessage@i& (0+255),w,b
 17723  004860  B4D8               	btfsc	status,2,c
 17724  004862  D010               	goto	l16238
 17725                           
 17726                           ; BSR set to: 1
 17727                           ;miwi_mesh.c: 1974: {
 17728                           ;miwi_mesh.c: 1975: MTP.DestAddress = ConnectionTable[i].Address;
 17729  004864  0101               	movlb	1	; () banked
 17730  004866  5147               	movf	RouteMessage@i& (0+255),w,b
 17731  004868  0D09               	mullw	9
 17732  00486A  0E04               	movlw	4
 17733  00486C  26F3               	addwf	prodl,f,c
 17734  00486E  0E00               	movlw	0
 17735  004870  22F4               	addwfc	prodh,f,c
 17736  004872  0E00               	movlw	low _ConnectionTable
 17737  004874  24F3               	addwf	prodl,w,c
 17738  004876  0101               	movlb	1	; () banked
 17739  004878  6FB2               	movwf	(_MTP+1)& (0+255),b
 17740  00487A  0E06               	movlw	high _ConnectionTable
 17741  00487C  20F4               	addwfc	prodh,w,c
 17742  00487E  0101               	movlb	1	; () banked
 17743  004880  6FB3               	movwf	(_MTP+2)& (0+255),b
 17744                           
 17745                           ;miwi_mesh.c: 1976: }
 17746  004882  D002               	goto	l16242
 17747  004884                     l16238:
 17748                           
 17749                           ; BSR set to: 1
 17750                           ;miwi_mesh.c: 1977: else
 17751                           ;miwi_mesh.c: 1978: {
 17752                           ;miwi_mesh.c: 1981: return 0;
 17753  004884  0E00               	movlw	0
 17754                           
 17755                           ; BSR set to: 1
 17756  004886  0012               	return	
 17757  004888                     l16242:
 17758                           
 17759                           ; BSR set to: 1
 17760                           ;miwi_mesh.c: 1982: }
 17761                           ;miwi_mesh.c: 1984: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17762  004888  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 17763  00488C  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17764  004890  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17765  004894  0EA6               	movlw	low _TxBuffer
 17766  004896  0101               	movlb	1	; () banked
 17767  004898  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17768  00489A  0E02               	movlw	high _TxBuffer
 17769  00489C  0101               	movlb	1	; () banked
 17770  00489E  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17771  0048A0  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17772  0048A4  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 17773  0048A8  0012               	return	
 17774  0048AA                     l16246:
 17775                           
 17776                           ;miwi_mesh.c: 1985: }
 17777                           ;miwi_mesh.c: 1986: }
 17778                           ;miwi_mesh.c: 1988: if( (knownCoordinators & (1 << parentNode) ) > 0 )
 17779  0048AA  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 17780  0048AE  0E01               	movlw	1
 17781  0048B0  0101               	movlb	1	; () banked
 17782  0048B2  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 17783  0048B4  0101               	movlb	1	; () banked
 17784  0048B6  2B42               	incf	??_RouteMessage& (0+255),f,b
 17785  0048B8  D003               	goto	u17014
 17786  0048BA                     u17015:
 17787  0048BA  0101               	movlb	1	; () banked
 17788  0048BC  90D8               	bcf	status,0,c
 17789  0048BE  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 17790  0048C0                     u17014:
 17791  0048C0  0101               	movlb	1	; () banked
 17792  0048C2  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 17793  0048C4  D7FA               	goto	u17015
 17794  0048C6  0101               	movlb	1	; () banked
 17795  0048C8  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 17796  0048CA  0101               	movlb	1	; () banked
 17797  0048CC  15C8               	andwf	_knownCoordinators& (0+255),w,b
 17798  0048CE  0900               	iorlw	0
 17799  0048D0  B4D8               	btfsc	status,2,c
 17800  0048D2  D08D               	goto	l16292
 17801                           
 17802                           ; BSR set to: 1
 17803                           ;miwi_mesh.c: 1989: {
 17804                           ;miwi_mesh.c: 1990: if( RouterFailures[parentNode] >= 3 )
 17805  0048D4  0101               	movlb	1	; () banked
 17806  0048D6  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 17807  0048D8  0D01               	mullw	1
 17808  0048DA  0EAC               	movlw	low _RouterFailures
 17809  0048DC  24F3               	addwf	prodl,w,c
 17810  0048DE  6ED9               	movwf	fsr2l,c
 17811  0048E0  0E00               	movlw	high _RouterFailures
 17812  0048E2  20F4               	addwfc	prodh,w,c
 17813  0048E4  6EDA               	movwf	fsr2h,c
 17814  0048E6  0E02               	movlw	2
 17815  0048E8  64DF               	cpfsgt	indf2,c
 17816  0048EA  D02D               	goto	l16264
 17817                           
 17818                           ; BSR set to: 1
 17819                           ;miwi_mesh.c: 1991: {
 17820                           ;miwi_mesh.c: 1992: RouterFailures[parentNode] = 0;
 17821  0048EC  0101               	movlb	1	; () banked
 17822  0048EE  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 17823  0048F0  0D01               	mullw	1
 17824  0048F2  0EAC               	movlw	low _RouterFailures
 17825  0048F4  24F3               	addwf	prodl,w,c
 17826  0048F6  6ED9               	movwf	fsr2l,c
 17827  0048F8  0E00               	movlw	high _RouterFailures
 17828  0048FA  20F4               	addwfc	prodh,w,c
 17829  0048FC  6EDA               	movwf	fsr2h,c
 17830  0048FE  0E00               	movlw	0
 17831  004900  6EDF               	movwf	indf2,c
 17832                           
 17833                           ; BSR set to: 1
 17834                           ;miwi_mesh.c: 1993: knownCoordinators &= ((1<<parentNode) ^ 0xFF);
 17835  004902  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 17836  004906  0E01               	movlw	1
 17837  004908  0101               	movlb	1	; () banked
 17838  00490A  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 17839  00490C  0101               	movlb	1	; () banked
 17840  00490E  2B42               	incf	??_RouteMessage& (0+255),f,b
 17841  004910  D003               	goto	u17044
 17842  004912                     u17045:
 17843  004912  0101               	movlb	1	; () banked
 17844  004914  90D8               	bcf	status,0,c
 17845  004916  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 17846  004918                     u17044:
 17847  004918  0101               	movlb	1	; () banked
 17848  00491A  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 17849  00491C  D7FA               	goto	u17045
 17850  00491E  0101               	movlb	1	; () banked
 17851  004920  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 17852  004922  0AFF               	xorlw	255
 17853  004924  0101               	movlb	1	; () banked
 17854  004926  17C8               	andwf	_knownCoordinators& (0+255),f,b
 17855                           
 17856                           ; BSR set to: 1
 17857                           ;miwi_mesh.c: 1994: RoutingTable[parentNode] = 0;
 17858  004928  0101               	movlb	1	; () banked
 17859  00492A  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 17860  00492C  0D01               	mullw	1
 17861  00492E  0EB4               	movlw	low _RoutingTable
 17862  004930  24F3               	addwf	prodl,w,c
 17863  004932  6ED9               	movwf	fsr2l,c
 17864  004934  0E00               	movlw	high _RoutingTable
 17865  004936  20F4               	addwfc	prodh,w,c
 17866  004938  6EDA               	movwf	fsr2h,c
 17867  00493A  0E00               	movlw	0
 17868  00493C  6EDF               	movwf	indf2,c
 17869                           
 17870                           ; BSR set to: 1
 17871                           ;miwi_mesh.c: 1999: SendBeacon();
 17872  00493E  ECF3  F040         	call	_SendBeacon	;wreg free
 17873  004942                     l16258:
 17874                           
 17875                           ;miwi_mesh.c: 2000: return 0;
 17876  004942  0E00               	movlw	0
 17877  004944  0012               	return	
 17878  004946                     l16264:
 17879                           
 17880                           ;miwi_mesh.c: 2002: else
 17881                           ;miwi_mesh.c: 2003: {
 17882                           ;miwi_mesh.c: 2005: MTP.flags.Val = 0;
 17883  004946  0E00               	movlw	0
 17884  004948  0101               	movlb	1	; () banked
 17885  00494A  6FB1               	movwf	_MTP& (0+255),b
 17886                           
 17887                           ; BSR set to: 1
 17888                           ;miwi_mesh.c: 2006: MTP.flags.bits.ackReq = 1;
 17889  00494C  0101               	movlb	1	; () banked
 17890  00494E  8BB1               	bsf	_MTP& (0+255),5,b
 17891                           
 17892                           ; BSR set to: 1
 17893                           ;miwi_mesh.c: 2007: MTP.flags.bits.secEn = SecEn;
 17894  004950  0101               	movlb	1	; () banked
 17895  004952  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 17896  004954  D003               	bra	u17055
 17897  004956  0101               	movlb	1	; () banked
 17898  004958  97B1               	bcf	_MTP& (0+255),3,b
 17899  00495A  D002               	bra	u17056
 17900  00495C                     u17055:
 17901  00495C  0101               	movlb	1	; () banked
 17902  00495E  87B1               	bsf	_MTP& (0+255),3,b
 17903  004960                     u17056:
 17904                           
 17905                           ;miwi_mesh.c: 2008: tempShortAddress.v[0] = 0;
 17906  004960  0E00               	movlw	0
 17907  004962  0101               	movlb	1	; () banked
 17908  004964  6FF4               	movwf	_tempShortAddress& (0+255),b
 17909                           
 17910                           ; BSR set to: 1
 17911                           ;miwi_mesh.c: 2009: tempShortAddress.v[1] = parentNode;
 17912  004966  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 17913                           
 17914                           ; BSR set to: 1
 17915                           ;miwi_mesh.c: 2017: if( (i = SearchForShortAddress()) != 0xFF )
 17916  00496A  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 17917  00496E  0101               	movlb	1	; () banked
 17918  004970  6F47               	movwf	RouteMessage@i& (0+255),b
 17919  004972  0101               	movlb	1	; () banked
 17920  004974  2947               	incf	RouteMessage@i& (0+255),w,b
 17921  004976  B4D8               	btfsc	status,2,c
 17922  004978  D03A               	goto	l16292
 17923                           
 17924                           ; BSR set to: 1
 17925                           ;miwi_mesh.c: 2018: {
 17926                           ;miwi_mesh.c: 2019: MTP.DestAddress = ConnectionTable[i].Address;
 17927  00497A  0101               	movlb	1	; () banked
 17928  00497C  5147               	movf	RouteMessage@i& (0+255),w,b
 17929  00497E  0D09               	mullw	9
 17930  004980  0E04               	movlw	4
 17931  004982  26F3               	addwf	prodl,f,c
 17932  004984  0E00               	movlw	0
 17933  004986  22F4               	addwfc	prodh,f,c
 17934  004988  0E00               	movlw	low _ConnectionTable
 17935  00498A  24F3               	addwf	prodl,w,c
 17936  00498C  0101               	movlb	1	; () banked
 17937  00498E  6FB2               	movwf	(_MTP+1)& (0+255),b
 17938  004990  0E06               	movlw	high _ConnectionTable
 17939  004992  20F4               	addwfc	prodh,w,c
 17940  004994  0101               	movlb	1	; () banked
 17941  004996  6FB3               	movwf	(_MTP+2)& (0+255),b
 17942                           
 17943                           ; BSR set to: 1
 17944                           ;miwi_mesh.c: 2026: }
 17945                           ;miwi_mesh.c: 2028: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 17946                           
 17947                           ; BSR set to: 1
 17948                           
 17949                           ; BSR set to: 1
 17950                           ;miwi_mesh.c: 2021: else
 17951                           ;miwi_mesh.c: 2022: {
 17952                           ;miwi_mesh.c: 2025: goto ROUTE_THROUGH_NEIGHBOR;
 17953                           
 17954                           ;miwi_mesh.c: 2020: }
 17955  004998  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 17956  00499C  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17957  0049A0  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17958  0049A4  0EA6               	movlw	low _TxBuffer
 17959  0049A6  0101               	movlb	1	; () banked
 17960  0049A8  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17961  0049AA  0E02               	movlw	high _TxBuffer
 17962  0049AC  0101               	movlb	1	; () banked
 17963  0049AE  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17964  0049B0  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17965  0049B4  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 17966  0049B8  0900               	iorlw	0
 17967  0049BA  A4D8               	btfss	status,2,c
 17968  0049BC  D00B               	goto	l16286
 17969                           
 17970                           ;miwi_mesh.c: 2029: {
 17971                           ;miwi_mesh.c: 2030: RouterFailures[parentNode]++;
 17972  0049BE  0101               	movlb	1	; () banked
 17973  0049C0  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 17974  0049C2  0D01               	mullw	1
 17975  0049C4  0EAC               	movlw	low _RouterFailures
 17976  0049C6  24F3               	addwf	prodl,w,c
 17977  0049C8  6ED9               	movwf	fsr2l,c
 17978  0049CA  0E00               	movlw	high _RouterFailures
 17979  0049CC  20F4               	addwfc	prodh,w,c
 17980  0049CE  6EDA               	movwf	fsr2h,c
 17981  0049D0  2ADF               	incf	indf2,f,c
 17982  0049D2  D7B7               	goto	l16258
 17983  0049D4                     l16286:
 17984                           
 17985                           ;miwi_mesh.c: 2033: else
 17986                           ;miwi_mesh.c: 2034: {
 17987                           ;miwi_mesh.c: 2035: RouterFailures[parentNode] = 0;
 17988  0049D4  0101               	movlb	1	; () banked
 17989  0049D6  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 17990  0049D8  0D01               	mullw	1
 17991  0049DA  0EAC               	movlw	low _RouterFailures
 17992  0049DC  24F3               	addwf	prodl,w,c
 17993  0049DE  6ED9               	movwf	fsr2l,c
 17994  0049E0  0E00               	movlw	high _RouterFailures
 17995  0049E2  20F4               	addwfc	prodh,w,c
 17996  0049E4  6EDA               	movwf	fsr2h,c
 17997  0049E6  0E00               	movlw	0
 17998  0049E8  6EDF               	movwf	indf2,c
 17999                           
 18000                           ; BSR set to: 1
 18001                           ;miwi_mesh.c: 2036: return 1;
 18002  0049EA  0E01               	movlw	1
 18003                           
 18004                           ; BSR set to: 1
 18005  0049EC  0012               	return	
 18006  0049EE                     l16292:
 18007                           
 18008                           ;miwi_mesh.c: 2042: for(i = 0; i < 8; i++)
 18009  0049EE  0E00               	movlw	0
 18010  0049F0  0101               	movlb	1	; () banked
 18011  0049F2  6F47               	movwf	RouteMessage@i& (0+255),b
 18012  0049F4                     l16294:
 18013                           
 18014                           ; BSR set to: 1
 18015  0049F4  0E07               	movlw	7
 18016  0049F6  0101               	movlb	1	; () banked
 18017  0049F8  6547               	cpfsgt	RouteMessage@i& (0+255),b
 18018  0049FA  D001               	goto	l16298
 18019  0049FC  D0DF               	goto	l16360
 18020  0049FE                     l16298:
 18021                           
 18022                           ; BSR set to: 1
 18023                           ;miwi_mesh.c: 2043: {
 18024                           ;miwi_mesh.c: 2044: if( (RoutingTable[i] & (1 << parentNode) ) > 0 )
 18025  0049FE  0101               	movlb	1	; () banked
 18026  004A00  5147               	movf	RouteMessage@i& (0+255),w,b
 18027  004A02  0D01               	mullw	1
 18028  004A04  0EB4               	movlw	low _RoutingTable
 18029  004A06  24F3               	addwf	prodl,w,c
 18030  004A08  6ED9               	movwf	fsr2l,c
 18031  004A0A  0E00               	movlw	high _RoutingTable
 18032  004A0C  20F4               	addwfc	prodh,w,c
 18033  004A0E  6EDA               	movwf	fsr2h,c
 18034  004A10  50DF               	movf	indf2,w,c
 18035  004A12  0101               	movlb	1	; () banked
 18036  004A14  6F42               	movwf	??_RouteMessage& (0+255),b
 18037  004A16  C146  F143         	movff	RouteMessage@parentNode,??_RouteMessage+1
 18038  004A1A  0E01               	movlw	1
 18039  004A1C  0101               	movlb	1	; () banked
 18040  004A1E  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 18041  004A20  0101               	movlb	1	; () banked
 18042  004A22  2B43               	incf	(??_RouteMessage+1)& (0+255),f,b
 18043  004A24  D003               	goto	u17094
 18044  004A26                     u17095:
 18045  004A26  0101               	movlb	1	; () banked
 18046  004A28  90D8               	bcf	status,0,c
 18047  004A2A  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 18048  004A2C                     u17094:
 18049  004A2C  0101               	movlb	1	; () banked
 18050  004A2E  2F43               	decfsz	(??_RouteMessage+1)& (0+255),f,b
 18051  004A30  D7FA               	goto	u17095
 18052  004A32  0101               	movlb	1	; () banked
 18053  004A34  5144               	movf	(??_RouteMessage+2)& (0+255),w,b
 18054  004A36  0101               	movlb	1	; () banked
 18055  004A38  1542               	andwf	??_RouteMessage& (0+255),w,b
 18056  004A3A  0900               	iorlw	0
 18057  004A3C  B4D8               	btfsc	status,2,c
 18058  004A3E  D0BB               	goto	l16356
 18059                           
 18060                           ; BSR set to: 1
 18061                           ;miwi_mesh.c: 2045: {
 18062                           ;miwi_mesh.c: 2046: if( RouterFailures[i] >= 3 )
 18063  004A40  0101               	movlb	1	; () banked
 18064  004A42  5147               	movf	RouteMessage@i& (0+255),w,b
 18065  004A44  0D01               	mullw	1
 18066  004A46  0EAC               	movlw	low _RouterFailures
 18067  004A48  24F3               	addwf	prodl,w,c
 18068  004A4A  6ED9               	movwf	fsr2l,c
 18069  004A4C  0E00               	movlw	high _RouterFailures
 18070  004A4E  20F4               	addwfc	prodh,w,c
 18071  004A50  6EDA               	movwf	fsr2h,c
 18072  004A52  0E02               	movlw	2
 18073  004A54  64DF               	cpfsgt	indf2,c
 18074  004A56  D05A               	goto	l16330
 18075                           
 18076                           ; BSR set to: 1
 18077                           ;miwi_mesh.c: 2047: {
 18078                           ;miwi_mesh.c: 2048: RouterFailures[i] = 0;
 18079  004A58  0101               	movlb	1	; () banked
 18080  004A5A  5147               	movf	RouteMessage@i& (0+255),w,b
 18081  004A5C  0D01               	mullw	1
 18082  004A5E  0EAC               	movlw	low _RouterFailures
 18083  004A60  24F3               	addwf	prodl,w,c
 18084  004A62  6ED9               	movwf	fsr2l,c
 18085  004A64  0E00               	movlw	high _RouterFailures
 18086  004A66  20F4               	addwfc	prodh,w,c
 18087  004A68  6EDA               	movwf	fsr2h,c
 18088  004A6A  0E00               	movlw	0
 18089  004A6C  6EDF               	movwf	indf2,c
 18090                           
 18091                           ; BSR set to: 1
 18092                           ;miwi_mesh.c: 2049: knownCoordinators &= ((1<<i) ^ 0xFF);
 18093  004A6E  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 18094  004A72  0E01               	movlw	1
 18095  004A74  0101               	movlb	1	; () banked
 18096  004A76  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 18097  004A78  0101               	movlb	1	; () banked
 18098  004A7A  2B42               	incf	??_RouteMessage& (0+255),f,b
 18099  004A7C  D003               	goto	u17124
 18100  004A7E                     u17125:
 18101  004A7E  0101               	movlb	1	; () banked
 18102  004A80  90D8               	bcf	status,0,c
 18103  004A82  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 18104  004A84                     u17124:
 18105  004A84  0101               	movlb	1	; () banked
 18106  004A86  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 18107  004A88  D7FA               	goto	u17125
 18108  004A8A  0101               	movlb	1	; () banked
 18109  004A8C  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 18110  004A8E  0AFF               	xorlw	255
 18111  004A90  0101               	movlb	1	; () banked
 18112  004A92  17C8               	andwf	_knownCoordinators& (0+255),f,b
 18113                           
 18114                           ; BSR set to: 1
 18115                           ;miwi_mesh.c: 2050: RoutingTable[i] = 0;
 18116  004A94  0101               	movlb	1	; () banked
 18117  004A96  5147               	movf	RouteMessage@i& (0+255),w,b
 18118  004A98  0D01               	mullw	1
 18119  004A9A  0EB4               	movlw	low _RoutingTable
 18120  004A9C  24F3               	addwf	prodl,w,c
 18121  004A9E  6ED9               	movwf	fsr2l,c
 18122  004AA0  0E00               	movlw	high _RoutingTable
 18123  004AA2  20F4               	addwfc	prodh,w,c
 18124  004AA4  6EDA               	movwf	fsr2h,c
 18125  004AA6  0E00               	movlw	0
 18126  004AA8  6EDF               	movwf	indf2,c
 18127                           
 18128                           ; BSR set to: 1
 18129                           ;miwi_mesh.c: 2055: if( role != 0x00 )
 18130  004AAA  0101               	movlb	1	; () banked
 18131  004AAC  51CB               	movf	_role& (0+255),w,b
 18132  004AAE  B4D8               	btfsc	status,2,c
 18133  004AB0  D003               	goto	l16312
 18134                           
 18135                           ; BSR set to: 1
 18136                           ;miwi_mesh.c: 2056: {
 18137                           ;miwi_mesh.c: 2057: SendBeacon();
 18138  004AB2  ECF3  F040         	call	_SendBeacon	;wreg free
 18139                           
 18140                           ;miwi_mesh.c: 2058: }
 18141  004AB6  D028               	goto	l16324
 18142  004AB8                     l16312:
 18143                           
 18144                           ;miwi_mesh.c: 2059: else
 18145                           ;miwi_mesh.c: 2060: {
 18146                           ;miwi_mesh.c: 2062: {TxData = 0;};
 18147  004AB8  0E00               	movlw	0
 18148  004ABA  0101               	movlb	1	; () banked
 18149  004ABC  6FC7               	movwf	_TxData& (0+255),b
 18150                           
 18151                           ; BSR set to: 1
 18152                           ;miwi_mesh.c: 2063: TxBuffer[TxData++] = 0x07;
 18153  004ABE  0101               	movlb	1	; () banked
 18154  004AC0  51C7               	movf	_TxData& (0+255),w,b
 18155  004AC2  0D01               	mullw	1
 18156  004AC4  0EA6               	movlw	low _TxBuffer
 18157  004AC6  24F3               	addwf	prodl,w,c
 18158  004AC8  6ED9               	movwf	fsr2l,c
 18159  004ACA  0E02               	movlw	high _TxBuffer
 18160  004ACC  20F4               	addwfc	prodh,w,c
 18161  004ACE  6EDA               	movwf	fsr2h,c
 18162  004AD0  0E07               	movlw	7
 18163  004AD2  6EDF               	movwf	indf2,c
 18164                           
 18165                           ; BSR set to: 1
 18166  004AD4  0101               	movlb	1	; () banked
 18167  004AD6  2BC7               	incf	_TxData& (0+255),f,b
 18168                           
 18169                           ; BSR set to: 1
 18170                           ;miwi_mesh.c: 2064: TxBuffer[TxData++] = currentChannel;
 18171  004AD8  0101               	movlb	1	; () banked
 18172  004ADA  51C7               	movf	_TxData& (0+255),w,b
 18173  004ADC  0D01               	mullw	1
 18174  004ADE  0EA6               	movlw	low _TxBuffer
 18175  004AE0  24F3               	addwf	prodl,w,c
 18176  004AE2  6ED9               	movwf	fsr2l,c
 18177  004AE4  0E02               	movlw	high _TxBuffer
 18178  004AE6  20F4               	addwfc	prodh,w,c
 18179  004AE8  6EDA               	movwf	fsr2h,c
 18180  004AEA  C1F6  FFDF         	movff	_currentChannel,indf2
 18181                           
 18182                           ; BSR set to: 1
 18183  004AEE  0101               	movlb	1	; () banked
 18184  004AF0  2BC7               	incf	_TxData& (0+255),f,b
 18185                           
 18186                           ; BSR set to: 1
 18187                           ;miwi_mesh.c: 2069: SendMACPacket((0), 0x01);
 18188  004AF2  0E00               	movlw	0
 18189  004AF4  0101               	movlb	1	; () banked
 18190  004AF6  6F39               	movwf	SendMACPacket@Address& (0+255),b
 18191  004AF8  0E00               	movlw	0
 18192  004AFA  0101               	movlb	1	; () banked
 18193  004AFC  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 18194  004AFE  0E01               	movlw	1
 18195  004B00  0101               	movlb	1	; () banked
 18196  004B02  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 18197  004B04  ECA2  F051         	call	_SendMACPacket	;wreg free
 18198  004B08                     l16324:
 18199                           
 18200                           ;miwi_mesh.c: 2071: }
 18201                           ;miwi_mesh.c: 2072: return 0;
 18202  004B08  0E00               	movlw	0
 18203  004B0A  0012               	return	
 18204  004B0C                     l16330:
 18205                           
 18206                           ;miwi_mesh.c: 2074: else
 18207                           ;miwi_mesh.c: 2075: {
 18208                           ;miwi_mesh.c: 2077: MTP.flags.Val = 0;
 18209  004B0C  0E00               	movlw	0
 18210  004B0E  0101               	movlb	1	; () banked
 18211  004B10  6FB1               	movwf	_MTP& (0+255),b
 18212                           
 18213                           ; BSR set to: 1
 18214                           ;miwi_mesh.c: 2078: MTP.flags.bits.ackReq = 1;
 18215  004B12  0101               	movlb	1	; () banked
 18216  004B14  8BB1               	bsf	_MTP& (0+255),5,b
 18217                           
 18218                           ; BSR set to: 1
 18219                           ;miwi_mesh.c: 2079: MTP.flags.bits.secEn = SecEn;
 18220  004B16  0101               	movlb	1	; () banked
 18221  004B18  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 18222  004B1A  D003               	bra	u17145
 18223  004B1C  0101               	movlb	1	; () banked
 18224  004B1E  97B1               	bcf	_MTP& (0+255),3,b
 18225  004B20  D002               	bra	u17146
 18226  004B22                     u17145:
 18227  004B22  0101               	movlb	1	; () banked
 18228  004B24  87B1               	bsf	_MTP& (0+255),3,b
 18229  004B26                     u17146:
 18230                           
 18231                           ;miwi_mesh.c: 2080: tempShortAddress.v[0] = 0;
 18232  004B26  0E00               	movlw	0
 18233  004B28  0101               	movlb	1	; () banked
 18234  004B2A  6FF4               	movwf	_tempShortAddress& (0+255),b
 18235                           
 18236                           ; BSR set to: 1
 18237                           ;miwi_mesh.c: 2081: tempShortAddress.v[1] = i;
 18238  004B2C  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 18239                           
 18240                           ; BSR set to: 1
 18241                           ;miwi_mesh.c: 2089: if( (i = SearchForShortAddress()) != 0xFF )
 18242  004B30  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 18243  004B34  0101               	movlb	1	; () banked
 18244  004B36  6F47               	movwf	RouteMessage@i& (0+255),b
 18245  004B38  0101               	movlb	1	; () banked
 18246  004B3A  2947               	incf	RouteMessage@i& (0+255),w,b
 18247  004B3C  B4D8               	btfsc	status,2,c
 18248  004B3E  D03E               	goto	l16360
 18249                           
 18250                           ; BSR set to: 1
 18251                           ;miwi_mesh.c: 2090: {
 18252                           ;miwi_mesh.c: 2091: MTP.DestAddress = ConnectionTable[i].Address;
 18253  004B40  0101               	movlb	1	; () banked
 18254  004B42  5147               	movf	RouteMessage@i& (0+255),w,b
 18255  004B44  0D09               	mullw	9
 18256  004B46  0E04               	movlw	4
 18257  004B48  26F3               	addwf	prodl,f,c
 18258  004B4A  0E00               	movlw	0
 18259  004B4C  22F4               	addwfc	prodh,f,c
 18260  004B4E  0E00               	movlw	low _ConnectionTable
 18261  004B50  24F3               	addwf	prodl,w,c
 18262  004B52  0101               	movlb	1	; () banked
 18263  004B54  6FB2               	movwf	(_MTP+1)& (0+255),b
 18264  004B56  0E06               	movlw	high _ConnectionTable
 18265  004B58  20F4               	addwfc	prodh,w,c
 18266  004B5A  0101               	movlb	1	; () banked
 18267  004B5C  6FB3               	movwf	(_MTP+2)& (0+255),b
 18268                           
 18269                           ; BSR set to: 1
 18270                           ;miwi_mesh.c: 2098: }
 18271                           ;miwi_mesh.c: 2100: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 18272                           
 18273                           ; BSR set to: 1
 18274                           
 18275                           ; BSR set to: 1
 18276                           ;miwi_mesh.c: 2093: else
 18277                           ;miwi_mesh.c: 2094: {
 18278                           ;miwi_mesh.c: 2097: goto ROUTE_THROUGH_TREE;
 18279                           
 18280                           ;miwi_mesh.c: 2092: }
 18281  004B5E  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 18282  004B62  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 18283  004B66  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 18284  004B6A  0EA6               	movlw	low _TxBuffer
 18285  004B6C  0101               	movlb	1	; () banked
 18286  004B6E  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 18287  004B70  0E02               	movlw	high _TxBuffer
 18288  004B72  0101               	movlb	1	; () banked
 18289  004B74  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 18290  004B76  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 18291  004B7A  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 18292  004B7E  0900               	iorlw	0
 18293  004B80  A4D8               	btfss	status,2,c
 18294  004B82  D00C               	goto	l16350
 18295                           
 18296                           ;miwi_mesh.c: 2101: {
 18297                           ;miwi_mesh.c: 2102: RouterFailures[i]++;
 18298  004B84  0101               	movlb	1	; () banked
 18299  004B86  5147               	movf	RouteMessage@i& (0+255),w,b
 18300  004B88  0D01               	mullw	1
 18301  004B8A  0EAC               	movlw	low _RouterFailures
 18302  004B8C  24F3               	addwf	prodl,w,c
 18303  004B8E  6ED9               	movwf	fsr2l,c
 18304  004B90  0E00               	movlw	high _RouterFailures
 18305  004B92  20F4               	addwfc	prodh,w,c
 18306  004B94  6EDA               	movwf	fsr2h,c
 18307  004B96  2ADF               	incf	indf2,f,c
 18308                           
 18309                           ; BSR set to: 1
 18310                           ;miwi_mesh.c: 2103: return 0;
 18311  004B98  0E00               	movlw	0
 18312                           
 18313                           ; BSR set to: 1
 18314  004B9A  0012               	return	
 18315  004B9C                     l16350:
 18316                           
 18317                           ;miwi_mesh.c: 2104: }
 18318                           ;miwi_mesh.c: 2105: RouterFailures[i] = 0;
 18319  004B9C  0101               	movlb	1	; () banked
 18320  004B9E  5147               	movf	RouteMessage@i& (0+255),w,b
 18321  004BA0  0D01               	mullw	1
 18322  004BA2  0EAC               	movlw	low _RouterFailures
 18323  004BA4  24F3               	addwf	prodl,w,c
 18324  004BA6  6ED9               	movwf	fsr2l,c
 18325  004BA8  0E00               	movlw	high _RouterFailures
 18326  004BAA  20F4               	addwfc	prodh,w,c
 18327  004BAC  6EDA               	movwf	fsr2h,c
 18328  004BAE  0E00               	movlw	0
 18329  004BB0  6EDF               	movwf	indf2,c
 18330                           
 18331                           ; BSR set to: 1
 18332                           ;miwi_mesh.c: 2106: return 1;
 18333  004BB2  0E01               	movlw	1
 18334                           
 18335                           ; BSR set to: 1
 18336  004BB4  0012               	return	
 18337  004BB6                     l16356:
 18338  004BB6  0101               	movlb	1	; () banked
 18339  004BB8  2B47               	incf	RouteMessage@i& (0+255),f,b
 18340  004BBA  D71C               	goto	l16294
 18341  004BBC                     l16360:
 18342                           
 18343                           ; BSR set to: 1
 18344                           ;miwi_mesh.c: 2112: if( role != 0x02 )
 18345  004BBC  0E02               	movlw	2
 18346  004BBE  0101               	movlb	1	; () banked
 18347  004BC0  19CB               	xorwf	_role& (0+255),w,b
 18348  004BC2  B4D8               	btfsc	status,2,c
 18349  004BC4  D115               	goto	l16448
 18350                           
 18351                           ; BSR set to: 1
 18352                           ;miwi_mesh.c: 2113: {
 18353                           ;miwi_mesh.c: 2114: MTP.flags.Val = 0;
 18354  004BC6  0E00               	movlw	0
 18355  004BC8  0101               	movlb	1	; () banked
 18356  004BCA  6FB1               	movwf	_MTP& (0+255),b
 18357                           
 18358                           ; BSR set to: 1
 18359                           ;miwi_mesh.c: 2115: MTP.flags.bits.ackReq = 1;
 18360  004BCC  0101               	movlb	1	; () banked
 18361  004BCE  8BB1               	bsf	_MTP& (0+255),5,b
 18362                           
 18363                           ; BSR set to: 1
 18364                           ;miwi_mesh.c: 2116: MTP.flags.bits.secEn = SecEn;
 18365  004BD0  0101               	movlb	1	; () banked
 18366  004BD2  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 18367  004BD4  D003               	bra	u17195
 18368  004BD6  0101               	movlb	1	; () banked
 18369  004BD8  97B1               	bcf	_MTP& (0+255),3,b
 18370  004BDA  D002               	bra	u17196
 18371  004BDC                     u17195:
 18372  004BDC  0101               	movlb	1	; () banked
 18373  004BDE  87B1               	bsf	_MTP& (0+255),3,b
 18374  004BE0                     u17196:
 18375                           
 18376                           ; BSR set to: 1
 18377                           ;miwi_mesh.c: 2118: if( role == 0x01)
 18378  004BE0  0101               	movlb	1	; () banked
 18379  004BE2  05CB               	decf	_role& (0+255),w,b
 18380  004BE4  A4D8               	btfss	status,2,c
 18381  004BE6  D034               	goto	l16382
 18382                           
 18383                           ; BSR set to: 1
 18384                           ;miwi_mesh.c: 2119: {
 18385                           ;miwi_mesh.c: 2123: for(i = 0; i < 4; i++)
 18386  004BE8  0E00               	movlw	0
 18387  004BEA  0101               	movlb	1	; () banked
 18388  004BEC  6F47               	movwf	RouteMessage@i& (0+255),b
 18389  004BEE                     l16372:
 18390                           
 18391                           ; BSR set to: 1
 18392  004BEE  0E03               	movlw	3
 18393  004BF0  0101               	movlb	1	; () banked
 18394  004BF2  6547               	cpfsgt	RouteMessage@i& (0+255),b
 18395  004BF4  D001               	goto	l16376
 18396  004BF6  D0D1               	goto	l16432
 18397  004BF8                     l16376:
 18398                           
 18399                           ; BSR set to: 1
 18400                           ;miwi_mesh.c: 2124: {
 18401                           ;miwi_mesh.c: 2125: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 18402  004BF8  0101               	movlb	1	; () banked
 18403  004BFA  5147               	movf	RouteMessage@i& (0+255),w,b
 18404  004BFC  0D01               	mullw	1
 18405  004BFE  0E04               	movlw	4
 18406  004C00  26F3               	addwf	prodl,f,c
 18407  004C02  0E00               	movlw	0
 18408  004C04  22F4               	addwfc	prodh,f,c
 18409  004C06  0E00               	movlw	low _ConnectionTable
 18410  004C08  0101               	movlb	1	; () banked
 18411  004C0A  6F42               	movwf	??_RouteMessage& (0+255),b
 18412  004C0C  0E06               	movlw	high _ConnectionTable
 18413  004C0E  0101               	movlb	1	; () banked
 18414  004C10  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 18415  004C12  50F3               	movf	prodl,w,c
 18416  004C14  0101               	movlb	1	; () banked
 18417  004C16  2742               	addwf	??_RouteMessage& (0+255),f,b
 18418  004C18  50F4               	movf	prodh,w,c
 18419  004C1A  0101               	movlb	1	; () banked
 18420  004C1C  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 18421  004C1E  0101               	movlb	1	; () banked
 18422  004C20  51CA               	movf	_myParent& (0+255),w,b
 18423  004C22  0D09               	mullw	9
 18424  004C24  50F3               	movf	prodl,w,c
 18425  004C26  0101               	movlb	1	; () banked
 18426  004C28  2542               	addwf	??_RouteMessage& (0+255),w,b
 18427  004C2A  6ED9               	movwf	fsr2l,c
 18428  004C2C  50F4               	movf	prodh,w,c
 18429  004C2E  0101               	movlb	1	; () banked
 18430  004C30  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 18431  004C32  6EDA               	movwf	fsr2h,c
 18432  004C34  0101               	movlb	1	; () banked
 18433  004C36  5147               	movf	RouteMessage@i& (0+255),w,b
 18434  004C38  0D01               	mullw	1
 18435  004C3A  0EAA               	movlw	low _tempLongAddress
 18436  004C3C  24F3               	addwf	prodl,w,c
 18437  004C3E  6EE1               	movwf	fsr1l,c
 18438  004C40  0E01               	movlw	high _tempLongAddress
 18439  004C42  20F4               	addwfc	prodh,w,c
 18440  004C44  6EE2               	movwf	fsr1h,c
 18441  004C46  CFDF FFE7          	movff	indf2,indf1
 18442                           
 18443                           ; BSR set to: 1
 18444  004C4A  0101               	movlb	1	; () banked
 18445  004C4C  2B47               	incf	RouteMessage@i& (0+255),f,b
 18446  004C4E  D7CF               	goto	l16372
 18447  004C50                     l16382:
 18448                           
 18449                           ; BSR set to: 1
 18450                           ;miwi_mesh.c: 2129: else
 18451                           ;miwi_mesh.c: 2130: {
 18452                           ;miwi_mesh.c: 2131: for(i = 0; i < 8; i++)
 18453  004C50  0E00               	movlw	0
 18454  004C52  0101               	movlb	1	; () banked
 18455  004C54  6F47               	movwf	RouteMessage@i& (0+255),b
 18456  004C56                     l16384:
 18457                           
 18458                           ; BSR set to: 1
 18459  004C56  0E07               	movlw	7
 18460  004C58  0101               	movlb	1	; () banked
 18461  004C5A  6547               	cpfsgt	RouteMessage@i& (0+255),b
 18462  004C5C  D001               	goto	l16388
 18463  004C5E  D01F               	goto	l16398
 18464  004C60                     l16388:
 18465                           
 18466                           ; BSR set to: 1
 18467                           ;miwi_mesh.c: 2132: {
 18468                           ;miwi_mesh.c: 2133: if( knownCoordinators && (0x01 << i) )
 18469  004C60  0101               	movlb	1	; () banked
 18470  004C62  51C8               	movf	_knownCoordinators& (0+255),w,b
 18471  004C64  B4D8               	btfsc	status,2,c
 18472  004C66  D018               	goto	l16394
 18473                           
 18474                           ; BSR set to: 1
 18475  004C68  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 18476  004C6C  0E01               	movlw	1
 18477  004C6E  0101               	movlb	1	; () banked
 18478  004C70  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 18479  004C72  0E00               	movlw	0
 18480  004C74  0101               	movlb	1	; () banked
 18481  004C76  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 18482  004C78  0101               	movlb	1	; () banked
 18483  004C7A  2B42               	incf	??_RouteMessage& (0+255),f,b
 18484  004C7C  D004               	goto	u17254
 18485  004C7E                     u17255:
 18486  004C7E  90D8               	bcf	status,0,c
 18487  004C80  0101               	movlb	1	; () banked
 18488  004C82  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 18489  004C84  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 18490  004C86                     u17254:
 18491  004C86  0101               	movlb	1	; () banked
 18492  004C88  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 18493  004C8A  D7F9               	goto	u17255
 18494  004C8C  0101               	movlb	1	; () banked
 18495  004C8E  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 18496  004C90  0101               	movlb	1	; () banked
 18497  004C92  1144               	iorwf	(??_RouteMessage+2)& (0+255),w,b
 18498  004C94  A4D8               	btfss	status,2,c
 18499  004C96  D003               	goto	l16398
 18500  004C98                     l16394:
 18501                           
 18502                           ; BSR set to: 1
 18503  004C98  0101               	movlb	1	; () banked
 18504  004C9A  2B47               	incf	RouteMessage@i& (0+255),f,b
 18505  004C9C  D7DC               	goto	l16384
 18506  004C9E                     l16398:
 18507                           
 18508                           ; BSR set to: 1
 18509                           ;miwi_mesh.c: 2136: }
 18510                           ;miwi_mesh.c: 2137: }
 18511                           ;miwi_mesh.c: 2138: if( i < 8 )
 18512  004C9E  0E08               	movlw	8
 18513  004CA0  0101               	movlb	1	; () banked
 18514  004CA2  6147               	cpfslt	RouteMessage@i& (0+255),b
 18515  004CA4  D005               	goto	l16404
 18516                           
 18517                           ; BSR set to: 1
 18518                           ;miwi_mesh.c: 2139: {
 18519                           ;miwi_mesh.c: 2140: tempShortAddress.v[1] = i;
 18520  004CA6  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 18521                           
 18522                           ; BSR set to: 1
 18523                           ;miwi_mesh.c: 2141: tempShortAddress.v[0] = 0;
 18524  004CAA  0E00               	movlw	0
 18525  004CAC  0101               	movlb	1	; () banked
 18526  004CAE  D004               	goto	L12
 18527  004CB0                     l16404:
 18528                           
 18529                           ; BSR set to: 1
 18530                           ;miwi_mesh.c: 2143: else
 18531                           ;miwi_mesh.c: 2144: {
 18532                           ;miwi_mesh.c: 2146: tempShortAddress.Val = 0;
 18533  004CB0  0E00               	movlw	0
 18534  004CB2  0101               	movlb	1	; () banked
 18535  004CB4  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18536  004CB6  0E00               	movlw	0
 18537  004CB8                     L12:
 18538  004CB8  6FF4               	movwf	_tempShortAddress& (0+255),b
 18539                           
 18540                           ; BSR set to: 1
 18541                           ;miwi_mesh.c: 2147: }
 18542                           ;miwi_mesh.c: 2150: {
 18543                           ;miwi_mesh.c: 2151: uint8_t j;
 18544                           ;miwi_mesh.c: 2153: if( (j = SearchForShortAddress()) < 64 )
 18545                           
 18546                           ; BSR set to: 1
 18547  004CBA  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 18548  004CBE  0101               	movlb	1	; () banked
 18549  004CC0  6F45               	movwf	RouteMessage@j& (0+255),b
 18550  004CC2  0E40               	movlw	64
 18551  004CC4  0101               	movlb	1	; () banked
 18552  004CC6  6145               	cpfslt	RouteMessage@j& (0+255),b
 18553  004CC8  D034               	goto	l16420
 18554                           
 18555                           ; BSR set to: 1
 18556                           ;miwi_mesh.c: 2154: {
 18557                           ;miwi_mesh.c: 2155: for(i = 0; i < 4; i++)
 18558  004CCA  0E00               	movlw	0
 18559  004CCC  0101               	movlb	1	; () banked
 18560  004CCE  6F47               	movwf	RouteMessage@i& (0+255),b
 18561  004CD0                     l16410:
 18562                           
 18563                           ; BSR set to: 1
 18564  004CD0  0E03               	movlw	3
 18565  004CD2  0101               	movlb	1	; () banked
 18566  004CD4  6547               	cpfsgt	RouteMessage@i& (0+255),b
 18567  004CD6  D001               	goto	l16414
 18568  004CD8  D060               	goto	l16432
 18569  004CDA                     l16414:
 18570                           
 18571                           ; BSR set to: 1
 18572                           ;miwi_mesh.c: 2156: {
 18573                           ;miwi_mesh.c: 2157: tempLongAddress[i] = ConnectionTable[j].Address[i];
 18574  004CDA  0101               	movlb	1	; () banked
 18575  004CDC  5147               	movf	RouteMessage@i& (0+255),w,b
 18576  004CDE  0D01               	mullw	1
 18577  004CE0  0E04               	movlw	4
 18578  004CE2  26F3               	addwf	prodl,f,c
 18579  004CE4  0E00               	movlw	0
 18580  004CE6  22F4               	addwfc	prodh,f,c
 18581  004CE8  0E00               	movlw	low _ConnectionTable
 18582  004CEA  0101               	movlb	1	; () banked
 18583  004CEC  6F42               	movwf	??_RouteMessage& (0+255),b
 18584  004CEE  0E06               	movlw	high _ConnectionTable
 18585  004CF0  0101               	movlb	1	; () banked
 18586  004CF2  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 18587  004CF4  50F3               	movf	prodl,w,c
 18588  004CF6  0101               	movlb	1	; () banked
 18589  004CF8  2742               	addwf	??_RouteMessage& (0+255),f,b
 18590  004CFA  50F4               	movf	prodh,w,c
 18591  004CFC  0101               	movlb	1	; () banked
 18592  004CFE  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 18593  004D00  0101               	movlb	1	; () banked
 18594  004D02  5145               	movf	RouteMessage@j& (0+255),w,b
 18595  004D04  0D09               	mullw	9
 18596  004D06  50F3               	movf	prodl,w,c
 18597  004D08  0101               	movlb	1	; () banked
 18598  004D0A  2542               	addwf	??_RouteMessage& (0+255),w,b
 18599  004D0C  6ED9               	movwf	fsr2l,c
 18600  004D0E  50F4               	movf	prodh,w,c
 18601  004D10  0101               	movlb	1	; () banked
 18602  004D12  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 18603  004D14  6EDA               	movwf	fsr2h,c
 18604  004D16  0101               	movlb	1	; () banked
 18605  004D18  5147               	movf	RouteMessage@i& (0+255),w,b
 18606  004D1A  0D01               	mullw	1
 18607  004D1C  0EAA               	movlw	low _tempLongAddress
 18608  004D1E  24F3               	addwf	prodl,w,c
 18609  004D20  6EE1               	movwf	fsr1l,c
 18610  004D22  0E01               	movlw	high _tempLongAddress
 18611  004D24  20F4               	addwfc	prodh,w,c
 18612  004D26  6EE2               	movwf	fsr1h,c
 18613  004D28  CFDF FFE7          	movff	indf2,indf1
 18614                           
 18615                           ; BSR set to: 1
 18616  004D2C  0101               	movlb	1	; () banked
 18617  004D2E  2B47               	incf	RouteMessage@i& (0+255),f,b
 18618  004D30  D7CF               	goto	l16410
 18619  004D32                     l16420:
 18620                           
 18621                           ; BSR set to: 1
 18622                           ;miwi_mesh.c: 2160: else
 18623                           ;miwi_mesh.c: 2161: {
 18624                           ;miwi_mesh.c: 2162: for(i = 0; i < 4; i++)
 18625  004D32  0E00               	movlw	0
 18626  004D34  0101               	movlb	1	; () banked
 18627  004D36  6F47               	movwf	RouteMessage@i& (0+255),b
 18628  004D38                     l16422:
 18629                           
 18630                           ; BSR set to: 1
 18631  004D38  0E03               	movlw	3
 18632  004D3A  0101               	movlb	1	; () banked
 18633  004D3C  6547               	cpfsgt	RouteMessage@i& (0+255),b
 18634  004D3E  D001               	goto	l16426
 18635  004D40  D02C               	goto	l16432
 18636  004D42                     l16426:
 18637                           
 18638                           ; BSR set to: 1
 18639                           ;miwi_mesh.c: 2163: {
 18640                           ;miwi_mesh.c: 2164: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 18641  004D42  0101               	movlb	1	; () banked
 18642  004D44  5147               	movf	RouteMessage@i& (0+255),w,b
 18643  004D46  0D01               	mullw	1
 18644  004D48  0E04               	movlw	4
 18645  004D4A  26F3               	addwf	prodl,f,c
 18646  004D4C  0E00               	movlw	0
 18647  004D4E  22F4               	addwfc	prodh,f,c
 18648  004D50  0E00               	movlw	low _ConnectionTable
 18649  004D52  0101               	movlb	1	; () banked
 18650  004D54  6F42               	movwf	??_RouteMessage& (0+255),b
 18651  004D56  0E06               	movlw	high _ConnectionTable
 18652  004D58  0101               	movlb	1	; () banked
 18653  004D5A  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 18654  004D5C  50F3               	movf	prodl,w,c
 18655  004D5E  0101               	movlb	1	; () banked
 18656  004D60  2742               	addwf	??_RouteMessage& (0+255),f,b
 18657  004D62  50F4               	movf	prodh,w,c
 18658  004D64  0101               	movlb	1	; () banked
 18659  004D66  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 18660  004D68  0101               	movlb	1	; () banked
 18661  004D6A  51CA               	movf	_myParent& (0+255),w,b
 18662  004D6C  0D09               	mullw	9
 18663  004D6E  50F3               	movf	prodl,w,c
 18664  004D70  0101               	movlb	1	; () banked
 18665  004D72  2542               	addwf	??_RouteMessage& (0+255),w,b
 18666  004D74  6ED9               	movwf	fsr2l,c
 18667  004D76  50F4               	movf	prodh,w,c
 18668  004D78  0101               	movlb	1	; () banked
 18669  004D7A  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 18670  004D7C  6EDA               	movwf	fsr2h,c
 18671  004D7E  0101               	movlb	1	; () banked
 18672  004D80  5147               	movf	RouteMessage@i& (0+255),w,b
 18673  004D82  0D01               	mullw	1
 18674  004D84  0EAA               	movlw	low _tempLongAddress
 18675  004D86  24F3               	addwf	prodl,w,c
 18676  004D88  6EE1               	movwf	fsr1l,c
 18677  004D8A  0E01               	movlw	high _tempLongAddress
 18678  004D8C  20F4               	addwfc	prodh,w,c
 18679  004D8E  6EE2               	movwf	fsr1h,c
 18680  004D90  CFDF FFE7          	movff	indf2,indf1
 18681                           
 18682                           ; BSR set to: 1
 18683  004D94  0101               	movlb	1	; () banked
 18684  004D96  2B47               	incf	RouteMessage@i& (0+255),f,b
 18685  004D98  D7CF               	goto	l16422
 18686  004D9A                     l16432:
 18687                           
 18688                           ; BSR set to: 1
 18689                           ;miwi_mesh.c: 2165: }
 18690                           ;miwi_mesh.c: 2166: }
 18691                           ;miwi_mesh.c: 2167: }
 18692                           ;miwi_mesh.c: 2170: }
 18693                           ;miwi_mesh.c: 2178: MTP.DestAddress = ConnectionTable[myParent].Address;
 18694  004D9A  0101               	movlb	1	; () banked
 18695  004D9C  51CA               	movf	_myParent& (0+255),w,b
 18696  004D9E  0D09               	mullw	9
 18697  004DA0  0E04               	movlw	4
 18698  004DA2  26F3               	addwf	prodl,f,c
 18699  004DA4  0E00               	movlw	0
 18700  004DA6  22F4               	addwfc	prodh,f,c
 18701  004DA8  0E00               	movlw	low _ConnectionTable
 18702  004DAA  24F3               	addwf	prodl,w,c
 18703  004DAC  0101               	movlb	1	; () banked
 18704  004DAE  6FB2               	movwf	(_MTP+1)& (0+255),b
 18705  004DB0  0E06               	movlw	high _ConnectionTable
 18706  004DB2  20F4               	addwfc	prodh,w,c
 18707  004DB4  0101               	movlb	1	; () banked
 18708  004DB6  6FB3               	movwf	(_MTP+2)& (0+255),b
 18709                           
 18710                           ; BSR set to: 1
 18711                           ;miwi_mesh.c: 2181: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 18712  004DB8  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 18713  004DBC  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 18714  004DC0  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 18715  004DC4  0EA6               	movlw	low _TxBuffer
 18716  004DC6  0101               	movlb	1	; () banked
 18717  004DC8  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 18718  004DCA  0E02               	movlw	high _TxBuffer
 18719  004DCC  0101               	movlb	1	; () banked
 18720  004DCE  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 18721  004DD0  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 18722  004DD4  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 18723  004DD8  0900               	iorlw	0
 18724  004DDA  A4D8               	btfss	status,2,c
 18725  004DDC  D004               	goto	l16442
 18726                           
 18727                           ;miwi_mesh.c: 2182: {
 18728                           ;miwi_mesh.c: 2183: RouterFailures[0]++;
 18729  004DDE  0100               	movlb	0	; () banked
 18730  004DE0  2BAC               	incf	_RouterFailures& (0+255),f,b
 18731                           
 18732                           ; BSR set to: 0
 18733                           ;miwi_mesh.c: 2184: return 0;
 18734  004DE2  0E00               	movlw	0
 18735                           
 18736                           ; BSR set to: 0
 18737  004DE4  0012               	return	
 18738  004DE6                     l16442:
 18739                           
 18740                           ;miwi_mesh.c: 2185: }
 18741                           ;miwi_mesh.c: 2186: RouterFailures[0] = 0;
 18742  004DE6  0E00               	movlw	0
 18743  004DE8  0100               	movlb	0	; () banked
 18744  004DEA  6FAC               	movwf	_RouterFailures& (0+255),b
 18745                           
 18746                           ; BSR set to: 0
 18747                           ;miwi_mesh.c: 2187: return 1;
 18748  004DEC  0E01               	movlw	1
 18749                           
 18750                           ; BSR set to: 0
 18751  004DEE  0012               	return	
 18752  004DF0                     l16448:
 18753                           
 18754                           ;miwi_mesh.c: 2188: }
 18755                           ;miwi_mesh.c: 2192: MTP.flags.Val = 0;
 18756  004DF0  0E00               	movlw	0
 18757  004DF2  0101               	movlb	1	; () banked
 18758  004DF4  6FB1               	movwf	_MTP& (0+255),b
 18759                           
 18760                           ; BSR set to: 1
 18761                           ;miwi_mesh.c: 2193: MTP.flags.bits.ackReq = 1;
 18762  004DF6  0101               	movlb	1	; () banked
 18763  004DF8  8BB1               	bsf	_MTP& (0+255),5,b
 18764                           
 18765                           ; BSR set to: 1
 18766                           ;miwi_mesh.c: 2194: MTP.flags.bits.secEn = SecEn;
 18767  004DFA  0101               	movlb	1	; () banked
 18768  004DFC  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 18769  004DFE  D003               	bra	u17355
 18770  004E00  0101               	movlb	1	; () banked
 18771  004E02  97B1               	bcf	_MTP& (0+255),3,b
 18772  004E04  D002               	bra	u17356
 18773  004E06                     u17355:
 18774  004E06  0101               	movlb	1	; () banked
 18775  004E08  87B1               	bsf	_MTP& (0+255),3,b
 18776  004E0A                     u17356:
 18777                           
 18778                           ; BSR set to: 1
 18779                           ;miwi_mesh.c: 2196: tempShortAddress.v[1] = parentNode;
 18780  004E0A  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 18781                           
 18782                           ;miwi_mesh.c: 2197: tempShortAddress.v[0] = 0;
 18783  004E0E  0E00               	movlw	0
 18784  004E10  0101               	movlb	1	; () banked
 18785  004E12  6FF4               	movwf	_tempShortAddress& (0+255),b
 18786                           
 18787                           ; BSR set to: 1
 18788                           ;miwi_mesh.c: 2205: MTP.DestAddress = ConnectionTable[myParent].Address;
 18789  004E14  0101               	movlb	1	; () banked
 18790  004E16  51CA               	movf	_myParent& (0+255),w,b
 18791  004E18  0D09               	mullw	9
 18792  004E1A  0E04               	movlw	4
 18793  004E1C  26F3               	addwf	prodl,f,c
 18794  004E1E  0E00               	movlw	0
 18795  004E20  22F4               	addwfc	prodh,f,c
 18796  004E22  0E00               	movlw	low _ConnectionTable
 18797  004E24  24F3               	addwf	prodl,w,c
 18798  004E26  0101               	movlb	1	; () banked
 18799  004E28  6FB2               	movwf	(_MTP+1)& (0+255),b
 18800  004E2A  0E06               	movlw	high _ConnectionTable
 18801  004E2C  20F4               	addwfc	prodh,w,c
 18802  004E2E  0101               	movlb	1	; () banked
 18803  004E30  6FB3               	movwf	(_MTP+2)& (0+255),b
 18804                           
 18805                           ; BSR set to: 1
 18806                           ;miwi_mesh.c: 2208: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 18807  004E32  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 18808  004E36  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 18809  004E3A  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 18810  004E3E  0EA6               	movlw	low _TxBuffer
 18811  004E40  0101               	movlb	1	; () banked
 18812  004E42  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 18813  004E44  0E02               	movlw	high _TxBuffer
 18814  004E46  0101               	movlb	1	; () banked
 18815  004E48  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 18816  004E4A  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 18817  004E4E  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 18818  004E52  0900               	iorlw	0
 18819  004E54  A4D8               	btfss	status,2,c
 18820  004E56  D004               	goto	l16466
 18821                           
 18822                           ;miwi_mesh.c: 2209: {
 18823                           ;miwi_mesh.c: 2210: RouterFailures[0]++;
 18824  004E58  0100               	movlb	0	; () banked
 18825  004E5A  2BAC               	incf	_RouterFailures& (0+255),f,b
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;miwi_mesh.c: 2211: return 0;
 18829  004E5C  0E00               	movlw	0
 18830                           
 18831                           ; BSR set to: 0
 18832  004E5E  0012               	return	
 18833  004E60                     l16466:
 18834                           
 18835                           ;miwi_mesh.c: 2212: }
 18836                           ;miwi_mesh.c: 2213: RouterFailures[0] = 0;
 18837  004E60  0E00               	movlw	0
 18838  004E62  0100               	movlb	0	; () banked
 18839  004E64  6FAC               	movwf	_RouterFailures& (0+255),b
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;miwi_mesh.c: 2214: return 1;
 18843  004E66  0E01               	movlw	1
 18844  004E68  0012               	return	
 18845  004E6A                     __end_of_RouteMessage:
 18846                           	opt stack 0
 18847                           tblptru	equ	0xFF8
 18848                           tblptrh	equ	0xFF7
 18849                           tblptrl	equ	0xFF6
 18850                           tablat	equ	0xFF5
 18851                           prodh	equ	0xFF4
 18852                           prodl	equ	0xFF3
 18853                           intcon	equ	0xFF2
 18854                           intcon2	equ	0xFF1
 18855                           intcon3	equ	0xFF0
 18856                           indf0	equ	0xFEF
 18857                           postinc0	equ	0xFEE
 18858                           plusw0	equ	0xFEB
 18859                           fsr0h	equ	0xFEA
 18860                           fsr0l	equ	0xFE9
 18861                           wreg	equ	0xFE8
 18862                           indf1	equ	0xFE7
 18863                           postinc1	equ	0xFE6
 18864                           postdec1	equ	0xFE5
 18865                           fsr1h	equ	0xFE2
 18866                           fsr1l	equ	0xFE1
 18867                           indf2	equ	0xFDF
 18868                           postinc2	equ	0xFDE
 18869                           postdec2	equ	0xFDD
 18870                           plusw2	equ	0xFDB
 18871                           fsr2h	equ	0xFDA
 18872                           fsr2l	equ	0xFD9
 18873                           status	equ	0xFD8
 18874                           
 18875 ;; *************** function _SendBeacon *****************
 18876 ;; Defined at:
 18877 ;;		line 3277 in file "src/miwi/miwi_mesh.c"
 18878 ;; Parameters:    Size  Location     Type
 18879 ;;		None
 18880 ;; Auto vars:     Size  Location     Type
 18881 ;;  i               1    0        unsigned char 
 18882 ;; Return value:  Size  Location     Type
 18883 ;;		None               void
 18884 ;; Registers used:
 18885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18886 ;; Tracked objects:
 18887 ;;		On entry : 0/0
 18888 ;;		On exit  : 0/0
 18889 ;;		Unchanged: 0/0
 18890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18895 ;;Total ram usage:        0 bytes
 18896 ;; Hardware stack levels used:    1
 18897 ;; Hardware stack levels required when called:   22
 18898 ;; This function calls:
 18899 ;;		_SendMACPacket
 18900 ;; This function is called by:
 18901 ;;		_MiWiTasks
 18902 ;;		_RouteMessage
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           	psect	text34
 18907  0081E6                     __ptext34:
 18908                           	opt stack 0
 18909  0081E6                     _SendBeacon:
 18910                           	opt stack 5
 18911                           
 18912                           ;miwi_mesh.c: 3279: uint8_t i;
 18913                           ;miwi_mesh.c: 3281: {TxData = 0;};
 18914                           
 18915                           ;incstack = 0
 18916  0081E6  0E00               	movlw	0
 18917  0081E8  0101               	movlb	1	; () banked
 18918  0081EA  6FC7               	movwf	_TxData& (0+255),b
 18919                           
 18920                           ; BSR set to: 1
 18921                           ;miwi_mesh.c: 3283: TxBuffer[TxData++] = myPANID.v[0];
 18922  0081EC  0101               	movlb	1	; () banked
 18923  0081EE  51C7               	movf	_TxData& (0+255),w,b
 18924  0081F0  0D01               	mullw	1
 18925  0081F2  0EA6               	movlw	low _TxBuffer
 18926  0081F4  24F3               	addwf	prodl,w,c
 18927  0081F6  6ED9               	movwf	fsr2l,c
 18928  0081F8  0E02               	movlw	high _TxBuffer
 18929  0081FA  20F4               	addwfc	prodh,w,c
 18930  0081FC  6EDA               	movwf	fsr2h,c
 18931  0081FE  C1F0  FFDF         	movff	_myPANID,indf2
 18932                           
 18933                           ; BSR set to: 1
 18934  008202  0101               	movlb	1	; () banked
 18935  008204  2BC7               	incf	_TxData& (0+255),f,b
 18936                           
 18937                           ; BSR set to: 1
 18938                           ;miwi_mesh.c: 3284: TxBuffer[TxData++] = myPANID.v[1];
 18939  008206  0101               	movlb	1	; () banked
 18940  008208  51C7               	movf	_TxData& (0+255),w,b
 18941  00820A  0D01               	mullw	1
 18942  00820C  0EA6               	movlw	low _TxBuffer
 18943  00820E  24F3               	addwf	prodl,w,c
 18944  008210  6ED9               	movwf	fsr2l,c
 18945  008212  0E02               	movlw	high _TxBuffer
 18946  008214  20F4               	addwfc	prodh,w,c
 18947  008216  6EDA               	movwf	fsr2h,c
 18948  008218  C1F1  FFDF         	movff	_myPANID+1,indf2
 18949                           
 18950                           ; BSR set to: 1
 18951  00821C  0101               	movlb	1	; () banked
 18952  00821E  2BC7               	incf	_TxData& (0+255),f,b
 18953                           
 18954                           ; BSR set to: 1
 18955                           ;miwi_mesh.c: 3285: TxBuffer[TxData++] = myShortAddress.v[0];
 18956  008220  0101               	movlb	1	; () banked
 18957  008222  51C7               	movf	_TxData& (0+255),w,b
 18958  008224  0D01               	mullw	1
 18959  008226  0EA6               	movlw	low _TxBuffer
 18960  008228  24F3               	addwf	prodl,w,c
 18961  00822A  6ED9               	movwf	fsr2l,c
 18962  00822C  0E02               	movlw	high _TxBuffer
 18963  00822E  20F4               	addwfc	prodh,w,c
 18964  008230  6EDA               	movwf	fsr2h,c
 18965  008232  C1F2  FFDF         	movff	_myShortAddress,indf2
 18966                           
 18967                           ; BSR set to: 1
 18968  008236  0101               	movlb	1	; () banked
 18969  008238  2BC7               	incf	_TxData& (0+255),f,b
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;miwi_mesh.c: 3286: TxBuffer[TxData++] = myShortAddress.v[1];
 18973  00823A  0101               	movlb	1	; () banked
 18974  00823C  51C7               	movf	_TxData& (0+255),w,b
 18975  00823E  0D01               	mullw	1
 18976  008240  0EA6               	movlw	low _TxBuffer
 18977  008242  24F3               	addwf	prodl,w,c
 18978  008244  6ED9               	movwf	fsr2l,c
 18979  008246  0E02               	movlw	high _TxBuffer
 18980  008248  20F4               	addwfc	prodh,w,c
 18981  00824A  6EDA               	movwf	fsr2h,c
 18982  00824C  C1F3  FFDF         	movff	_myShortAddress+1,indf2
 18983                           
 18984                           ; BSR set to: 1
 18985  008250  0101               	movlb	1	; () banked
 18986  008252  2BC7               	incf	_TxData& (0+255),f,b
 18987                           
 18988                           ; BSR set to: 1
 18989                           ;miwi_mesh.c: 3288: TxBuffer[TxData++] = 0xFF;
 18990  008254  0101               	movlb	1	; () banked
 18991  008256  51C7               	movf	_TxData& (0+255),w,b
 18992  008258  0D01               	mullw	1
 18993  00825A  0EA6               	movlw	low _TxBuffer
 18994  00825C  24F3               	addwf	prodl,w,c
 18995  00825E  6ED9               	movwf	fsr2l,c
 18996  008260  0E02               	movlw	high _TxBuffer
 18997  008262  20F4               	addwfc	prodh,w,c
 18998  008264  6EDA               	movwf	fsr2h,c
 18999  008266  0EFF               	movlw	255
 19000  008268  6EDF               	movwf	indf2,c
 19001                           
 19002                           ; BSR set to: 1
 19003  00826A  0101               	movlb	1	; () banked
 19004  00826C  2BC7               	incf	_TxData& (0+255),f,b
 19005                           
 19006                           ; BSR set to: 1
 19007                           ;miwi_mesh.c: 3289: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 19008  00826E  0101               	movlb	1	; () banked
 19009  008270  51C7               	movf	_TxData& (0+255),w,b
 19010  008272  0D01               	mullw	1
 19011  008274  0EA6               	movlw	low _TxBuffer
 19012  008276  24F3               	addwf	prodl,w,c
 19013  008278  6ED9               	movwf	fsr2l,c
 19014  00827A  0E02               	movlw	high _TxBuffer
 19015  00827C  20F4               	addwfc	prodh,w,c
 19016  00827E  6EDA               	movwf	fsr2h,c
 19017  008280  C1C3  FFDF         	movff	_MiWiCapacityInfo,indf2
 19018                           
 19019                           ; BSR set to: 1
 19020  008284  0101               	movlb	1	; () banked
 19021  008286  2BC7               	incf	_TxData& (0+255),f,b
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;miwi_mesh.c: 3290: TxBuffer[TxData++] = 0x00;
 19025  008288  0101               	movlb	1	; () banked
 19026  00828A  51C7               	movf	_TxData& (0+255),w,b
 19027  00828C  0D01               	mullw	1
 19028  00828E  0EA6               	movlw	low _TxBuffer
 19029  008290  24F3               	addwf	prodl,w,c
 19030  008292  6ED9               	movwf	fsr2l,c
 19031  008294  0E02               	movlw	high _TxBuffer
 19032  008296  20F4               	addwfc	prodh,w,c
 19033  008298  6EDA               	movwf	fsr2h,c
 19034  00829A  0E00               	movlw	0
 19035  00829C  6EDF               	movwf	indf2,c
 19036                           
 19037                           ; BSR set to: 1
 19038  00829E  0101               	movlb	1	; () banked
 19039  0082A0  2BC7               	incf	_TxData& (0+255),f,b
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;miwi_mesh.c: 3291: TxBuffer[TxData++] = 0x00;
 19043  0082A2  0101               	movlb	1	; () banked
 19044  0082A4  51C7               	movf	_TxData& (0+255),w,b
 19045  0082A6  0D01               	mullw	1
 19046  0082A8  0EA6               	movlw	low _TxBuffer
 19047  0082AA  24F3               	addwf	prodl,w,c
 19048  0082AC  6ED9               	movwf	fsr2l,c
 19049  0082AE  0E02               	movlw	high _TxBuffer
 19050  0082B0  20F4               	addwfc	prodh,w,c
 19051  0082B2  6EDA               	movwf	fsr2h,c
 19052  0082B4  0E00               	movlw	0
 19053  0082B6  6EDF               	movwf	indf2,c
 19054                           
 19055                           ; BSR set to: 1
 19056  0082B8  0101               	movlb	1	; () banked
 19057  0082BA  2BC7               	incf	_TxData& (0+255),f,b
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;miwi_mesh.c: 3292: TxBuffer[TxData++] = 0x4D;
 19061  0082BC  0101               	movlb	1	; () banked
 19062  0082BE  51C7               	movf	_TxData& (0+255),w,b
 19063  0082C0  0D01               	mullw	1
 19064  0082C2  0EA6               	movlw	low _TxBuffer
 19065  0082C4  24F3               	addwf	prodl,w,c
 19066  0082C6  6ED9               	movwf	fsr2l,c
 19067  0082C8  0E02               	movlw	high _TxBuffer
 19068  0082CA  20F4               	addwfc	prodh,w,c
 19069  0082CC  6EDA               	movwf	fsr2h,c
 19070  0082CE  0E4D               	movlw	77
 19071  0082D0  6EDF               	movwf	indf2,c
 19072                           
 19073                           ; BSR set to: 1
 19074  0082D2  0101               	movlb	1	; () banked
 19075  0082D4  2BC7               	incf	_TxData& (0+255),f,b
 19076                           
 19077                           ; BSR set to: 1
 19078                           ;miwi_mesh.c: 3293: TxBuffer[TxData++] = 0x41;
 19079  0082D6  0101               	movlb	1	; () banked
 19080  0082D8  51C7               	movf	_TxData& (0+255),w,b
 19081  0082DA  0D01               	mullw	1
 19082  0082DC  0EA6               	movlw	low _TxBuffer
 19083  0082DE  24F3               	addwf	prodl,w,c
 19084  0082E0  6ED9               	movwf	fsr2l,c
 19085  0082E2  0E02               	movlw	high _TxBuffer
 19086  0082E4  20F4               	addwfc	prodh,w,c
 19087  0082E6  6EDA               	movwf	fsr2h,c
 19088  0082E8  0E41               	movlw	65
 19089  0082EA  6EDF               	movwf	indf2,c
 19090                           
 19091                           ; BSR set to: 1
 19092  0082EC  0101               	movlb	1	; () banked
 19093  0082EE  2BC7               	incf	_TxData& (0+255),f,b
 19094                           
 19095                           ; BSR set to: 1
 19096                           ;miwi_mesh.c: 3294: TxBuffer[TxData++] = knownCoordinators;
 19097  0082F0  0101               	movlb	1	; () banked
 19098  0082F2  51C7               	movf	_TxData& (0+255),w,b
 19099  0082F4  0D01               	mullw	1
 19100  0082F6  0EA6               	movlw	low _TxBuffer
 19101  0082F8  24F3               	addwf	prodl,w,c
 19102  0082FA  6ED9               	movwf	fsr2l,c
 19103  0082FC  0E02               	movlw	high _TxBuffer
 19104  0082FE  20F4               	addwfc	prodh,w,c
 19105  008300  6EDA               	movwf	fsr2h,c
 19106  008302  C1C8  FFDF         	movff	_knownCoordinators,indf2
 19107                           
 19108                           ; BSR set to: 1
 19109  008306  0101               	movlb	1	; () banked
 19110  008308  2BC7               	incf	_TxData& (0+255),f,b
 19111                           
 19112                           ; BSR set to: 1
 19113                           ;miwi_mesh.c: 3305: SendMACPacket((0), 0x03);
 19114  00830A  0E00               	movlw	0
 19115  00830C  0101               	movlb	1	; () banked
 19116  00830E  6F39               	movwf	SendMACPacket@Address& (0+255),b
 19117  008310  0E00               	movlw	0
 19118  008312  0101               	movlb	1	; () banked
 19119  008314  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 19120  008316  0E03               	movlw	3
 19121  008318  0101               	movlb	1	; () banked
 19122  00831A  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 19123  00831C  ECA2  F051         	call	_SendMACPacket	;wreg free
 19124  008320  0012               	return		;funcret
 19125  008322                     __end_of_SendBeacon:
 19126                           	opt stack 0
 19127                           tblptru	equ	0xFF8
 19128                           tblptrh	equ	0xFF7
 19129                           tblptrl	equ	0xFF6
 19130                           tablat	equ	0xFF5
 19131                           prodh	equ	0xFF4
 19132                           prodl	equ	0xFF3
 19133                           intcon	equ	0xFF2
 19134                           intcon2	equ	0xFF1
 19135                           intcon3	equ	0xFF0
 19136                           indf0	equ	0xFEF
 19137                           postinc0	equ	0xFEE
 19138                           plusw0	equ	0xFEB
 19139                           fsr0h	equ	0xFEA
 19140                           fsr0l	equ	0xFE9
 19141                           wreg	equ	0xFE8
 19142                           indf1	equ	0xFE7
 19143                           postinc1	equ	0xFE6
 19144                           postdec1	equ	0xFE5
 19145                           fsr1h	equ	0xFE2
 19146                           fsr1l	equ	0xFE1
 19147                           indf2	equ	0xFDF
 19148                           postinc2	equ	0xFDE
 19149                           postdec2	equ	0xFDD
 19150                           plusw2	equ	0xFDB
 19151                           fsr2h	equ	0xFDA
 19152                           fsr2l	equ	0xFD9
 19153                           status	equ	0xFD8
 19154                           
 19155 ;; *************** function _SendMACPacket *****************
 19156 ;; Defined at:
 19157 ;;		line 2252 in file "src/miwi/miwi_mesh.c"
 19158 ;; Parameters:    Size  Location     Type
 19159 ;;  Address         2   57[BANK1 ] PTR unsigned char 
 19160 ;;		 -> ConnectionTable(576), NULL(0), 
 19161 ;;  PacketType      1   59[BANK1 ] unsigned char 
 19162 ;; Auto vars:     Size  Location     Type
 19163 ;;		None
 19164 ;; Return value:  Size  Location     Type
 19165 ;;                  1    wreg      unsigned char 
 19166 ;; Registers used:
 19167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19168 ;; Tracked objects:
 19169 ;;		On entry : 0/0
 19170 ;;		On exit  : 0/0
 19171 ;;		Unchanged: 0/0
 19172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19173 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19175 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19176 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19177 ;;Total ram usage:        4 bytes
 19178 ;; Hardware stack levels used:    1
 19179 ;; Hardware stack levels required when called:   21
 19180 ;; This function calls:
 19181 ;;		_MiMAC_SendPacket
 19182 ;; This function is called by:
 19183 ;;		_MiWiTasks
 19184 ;;		_RouteMessage
 19185 ;;		_SendBeacon
 19186 ;;		_MiApp_SearchConnection
 19187 ;;		_MiApp_EstablishConnection
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           	psect	text35
 19192  00A344                     __ptext35:
 19193                           	opt stack 0
 19194  00A344                     _SendMACPacket:
 19195                           	opt stack 6
 19196                           
 19197                           ;miwi_mesh.c: 2255: MTP.flags.Val = 0;
 19198                           
 19199                           ;incstack = 0
 19200  00A344  0E00               	movlw	0
 19201  00A346  0101               	movlb	1	; () banked
 19202  00A348  6FB1               	movwf	_MTP& (0+255),b
 19203                           
 19204                           ; BSR set to: 1
 19205                           ;miwi_mesh.c: 2257: MTP.flags.bits.packetType = PacketType;
 19206  00A34A  0101               	movlb	1	; () banked
 19207  00A34C  51B1               	movf	_MTP& (0+255),w,b
 19208  00A34E  0101               	movlb	1	; () banked
 19209  00A350  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 19210  00A352  0BFC               	andlw	-4
 19211  00A354  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 19212  00A356  0101               	movlb	1	; () banked
 19213  00A358  6FB1               	movwf	_MTP& (0+255),b
 19214                           
 19215                           ; BSR set to: 1
 19216                           ;miwi_mesh.c: 2258: if( Address == (0) )
 19217  00A35A  0101               	movlb	1	; () banked
 19218  00A35C  5139               	movf	SendMACPacket@Address& (0+255),w,b
 19219  00A35E  0101               	movlb	1	; () banked
 19220  00A360  113A               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 19221  00A362  A4D8               	btfss	status,2,c
 19222  00A364  D002               	goto	l16076
 19223                           
 19224                           ; BSR set to: 1
 19225                           ;miwi_mesh.c: 2259: {
 19226                           ;miwi_mesh.c: 2260: MTP.flags.bits.broadcast = 1;
 19227  00A366  0101               	movlb	1	; () banked
 19228  00A368  85B1               	bsf	_MTP& (0+255),2,b
 19229  00A36A                     l16076:
 19230                           
 19231                           ; BSR set to: 1
 19232                           ;miwi_mesh.c: 2261: }
 19233                           ;miwi_mesh.c: 2262: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 19234  00A36A  0101               	movlb	1	; () banked
 19235  00A36C  B5B1               	btfsc	_MTP& (0+255),2,b
 19236  00A36E  D004               	goto	u16810
 19237  00A370  0101               	movlb	1	; () banked
 19238  00A372  6B3C               	clrf	??_SendMACPacket& (0+255),b
 19239  00A374  2B3C               	incf	??_SendMACPacket& (0+255),f,b
 19240  00A376  D002               	goto	u16828
 19241  00A378                     u16810:
 19242  00A378  0101               	movlb	1	; () banked
 19243  00A37A  6B3C               	clrf	??_SendMACPacket& (0+255),b
 19244  00A37C                     u16828:
 19245  00A37C  0101               	movlb	1	; () banked
 19246  00A37E  3B3C               	swapf	??_SendMACPacket& (0+255),f,b
 19247  00A380  473C               	rlncf	??_SendMACPacket& (0+255),f,b
 19248  00A382  0101               	movlb	1	; () banked
 19249  00A384  51B1               	movf	_MTP& (0+255),w,b
 19250  00A386  0101               	movlb	1	; () banked
 19251  00A388  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 19252  00A38A  0BDF               	andlw	-33
 19253  00A38C  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 19254  00A38E  0101               	movlb	1	; () banked
 19255  00A390  6FB1               	movwf	_MTP& (0+255),b
 19256                           
 19257                           ; BSR set to: 1
 19258                           ;miwi_mesh.c: 2263: MTP.flags.bits.sourcePrsnt = 1;
 19259  00A392  0101               	movlb	1	; () banked
 19260  00A394  8FB1               	bsf	_MTP& (0+255),7,b
 19261                           
 19262                           ;miwi_mesh.c: 2265: MTP.DestAddress = Address;
 19263  00A396  C139  F1B2         	movff	SendMACPacket@Address,_MTP+1
 19264  00A39A  C13A  F1B3         	movff	SendMACPacket@Address+1,_MTP+2
 19265                           
 19266                           ; BSR set to: 1
 19267                           ;miwi_mesh.c: 2288: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 19268                           ;	Return value of _SendMACPacket is never used
 19269  00A39E  C1B1  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 19270  00A3A2  C1B2  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 19271  00A3A6  C1B3  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 19272  00A3AA  0EA6               	movlw	low _TxBuffer
 19273  00A3AC  0101               	movlb	1	; () banked
 19274  00A3AE  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 19275  00A3B0  0E02               	movlw	high _TxBuffer
 19276  00A3B2  0101               	movlb	1	; () banked
 19277  00A3B4  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 19278  00A3B6  C1C7  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 19279  00A3BA  EC14  F036         	call	_MiMAC_SendPacket	;wreg free
 19280  00A3BE  0012               	return	
 19281  00A3C0                     __end_of_SendMACPacket:
 19282                           	opt stack 0
 19283                           tblptru	equ	0xFF8
 19284                           tblptrh	equ	0xFF7
 19285                           tblptrl	equ	0xFF6
 19286                           tablat	equ	0xFF5
 19287                           prodh	equ	0xFF4
 19288                           prodl	equ	0xFF3
 19289                           intcon	equ	0xFF2
 19290                           intcon2	equ	0xFF1
 19291                           intcon3	equ	0xFF0
 19292                           indf0	equ	0xFEF
 19293                           postinc0	equ	0xFEE
 19294                           plusw0	equ	0xFEB
 19295                           fsr0h	equ	0xFEA
 19296                           fsr0l	equ	0xFE9
 19297                           wreg	equ	0xFE8
 19298                           indf1	equ	0xFE7
 19299                           postinc1	equ	0xFE6
 19300                           postdec1	equ	0xFE5
 19301                           fsr1h	equ	0xFE2
 19302                           fsr1l	equ	0xFE1
 19303                           indf2	equ	0xFDF
 19304                           postinc2	equ	0xFDE
 19305                           postdec2	equ	0xFDD
 19306                           plusw2	equ	0xFDB
 19307                           fsr2h	equ	0xFDA
 19308                           fsr2l	equ	0xFD9
 19309                           status	equ	0xFD8
 19310                           
 19311 ;; *************** function _MiMAC_SendPacket *****************
 19312 ;; Defined at:
 19313 ;;		line 727 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;  transParam      3   47[BANK1 ] struct .
 19316 ;;  MACPayload      2   50[BANK1 ] PTR unsigned char 
 19317 ;;		 -> TxBuffer(43), 
 19318 ;;  MACPayloadLe    1   52[BANK1 ] unsigned char 
 19319 ;; Auto vars:     Size  Location     Type
 19320 ;;  headerLen       1   54[BANK1 ] unsigned char 
 19321 ;;  i               1   56[BANK1 ] unsigned char 
 19322 ;;  TxIndex         1   55[BANK1 ] unsigned char 
 19323 ;; Return value:  Size  Location     Type
 19324 ;;                  1    wreg      unsigned char 
 19325 ;; Registers used:
 19326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19327 ;; Tracked objects:
 19328 ;;		On entry : 0/0
 19329 ;;		On exit  : 0/0
 19330 ;;		Unchanged: 0/0
 19331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19332 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19333 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19334 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19335 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19336 ;;Total ram usage:       10 bytes
 19337 ;; Hardware stack levels used:    1
 19338 ;; Hardware stack levels required when called:   20
 19339 ;; This function calls:
 19340 ;;		_CCM_Enc
 19341 ;;		_TxPacket
 19342 ;; This function is called by:
 19343 ;;		_MiWiTasks
 19344 ;;		_RouteMessage
 19345 ;;		_SendMACPacket
 19346 ;;		_MiApp_UnicastAddress
 19347 ;;		_MiApp_BroadcastPacket
 19348 ;;		_MiApp_RemoveConnection
 19349 ;; This function uses a non-reentrant model
 19350 ;;
 19351                           
 19352                           	psect	text36
 19353  006C28                     __ptext36:
 19354                           	opt stack 0
 19355  006C28                     _MiMAC_SendPacket:
 19356                           	opt stack 6
 19357                           
 19358                           ;drv_mrf_miwi_89xa.c: 731: uint8_t i;
 19359                           ;drv_mrf_miwi_89xa.c: 732: uint8_t TxIndex;
 19360                           ;drv_mrf_miwi_89xa.c: 734: if( MACPayloadLen > 32 )
 19361                           
 19362                           ;incstack = 0
 19363  006C28  0E20               	movlw	32
 19364  006C2A  0101               	movlb	1	; () banked
 19365  006C2C  6534               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 19366  006C2E  D002               	goto	l15988
 19367                           
 19368                           ; BSR set to: 1
 19369                           ;drv_mrf_miwi_89xa.c: 735: {
 19370                           ;drv_mrf_miwi_89xa.c: 736: return 0;
 19371  006C30  0E00               	movlw	0
 19372                           
 19373                           ; BSR set to: 1
 19374  006C32  0012               	return	
 19375  006C34                     l15988:
 19376                           
 19377                           ; BSR set to: 1
 19378                           ;drv_mrf_miwi_89xa.c: 737: }
 19379                           ;drv_mrf_miwi_89xa.c: 742: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 19380  006C34  0101               	movlb	1	; () banked
 19381  006C36  B52F               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 19382  006C38  D004               	goto	u16680
 19383  006C3A  0101               	movlb	1	; () banked
 19384  006C3C  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 19385  006C3E  2B35               	incf	??_MiMAC_SendPacket& (0+255),f,b
 19386  006C40  D002               	goto	u16698
 19387  006C42                     u16680:
 19388  006C42  0101               	movlb	1	; () banked
 19389  006C44  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 19390  006C46                     u16698:
 19391  006C46  0101               	movlb	1	; () banked
 19392  006C48  3B35               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 19393  006C4A  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 19394  006C4C  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 19395  006C4E  0101               	movlb	1	; () banked
 19396  006C50  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 19397  006C52  0101               	movlb	1	; () banked
 19398  006C54  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 19399  006C56  0BBF               	andlw	-65
 19400  006C58  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 19401  006C5A  0101               	movlb	1	; () banked
 19402  006C5C  6F2F               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 19403                           
 19404                           ;drv_mrf_miwi_89xa.c: 749: if( transParam.flags.bits.packetType == 0x01 )
 19405  006C5E  0101               	movlb	1	; () banked
 19406  006C60  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 19407  006C62  0B03               	andlw	3
 19408  006C64  06E8               	decf	wreg,f,c
 19409  006C66  A4D8               	btfss	status,2,c
 19410  006C68  D002               	goto	l322
 19411                           
 19412                           ; BSR set to: 1
 19413                           ;drv_mrf_miwi_89xa.c: 750: {
 19414                           ;drv_mrf_miwi_89xa.c: 751: transParam.flags.bits.sourcePrsnt = 1;
 19415  006C6A  0101               	movlb	1	; () banked
 19416  006C6C  8F2F               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 19417  006C6E                     l322:
 19418                           
 19419                           ; BSR set to: 1
 19420                           ;drv_mrf_miwi_89xa.c: 752: }
 19421                           ;drv_mrf_miwi_89xa.c: 754: MACTxBuffer[0] = transParam.flags.Val;
 19422  006C6E  C12F  F266         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 19423                           
 19424                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[1] = MACSeq++;
 19425  006C72  C1C1  F267         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 19426                           
 19427                           ; BSR set to: 1
 19428  006C76  0101               	movlb	1	; () banked
 19429  006C78  2BC1               	incf	_MACSeq& (0+255),f,b
 19430                           
 19431                           ; BSR set to: 1
 19432                           ;drv_mrf_miwi_89xa.c: 758: TxIndex = 2;
 19433  006C7A  0E02               	movlw	2
 19434  006C7C  0101               	movlb	1	; () banked
 19435  006C7E  6F37               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 19436                           
 19437                           ; BSR set to: 1
 19438                           ;drv_mrf_miwi_89xa.c: 760: if( transParam.flags.bits.destPrsnt )
 19439  006C80  0101               	movlb	1	; () banked
 19440  006C82  AD2F               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 19441  006C84  D02B               	goto	l327
 19442                           
 19443                           ; BSR set to: 1
 19444                           ;drv_mrf_miwi_89xa.c: 761: {
 19445                           ;drv_mrf_miwi_89xa.c: 762: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 19446  006C86  0E00               	movlw	0
 19447  006C88  0101               	movlb	1	; () banked
 19448  006C8A  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 19449  006C8C  D01A               	goto	l16006
 19450  006C8E                     l16000:
 19451                           
 19452                           ; BSR set to: 1
 19453                           ;drv_mrf_miwi_89xa.c: 763: {
 19454                           ;drv_mrf_miwi_89xa.c: 764: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 19455  006C8E  0101               	movlb	1	; () banked
 19456  006C90  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19457  006C92  0D01               	mullw	1
 19458  006C94  50F3               	movf	prodl,w,c
 19459  006C96  0101               	movlb	1	; () banked
 19460  006C98  2530               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 19461  006C9A  6ED9               	movwf	fsr2l,c
 19462  006C9C  50F4               	movf	prodh,w,c
 19463  006C9E  0101               	movlb	1	; () banked
 19464  006CA0  2131               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 19465  006CA2  6EDA               	movwf	fsr2h,c
 19466  006CA4  0101               	movlb	1	; () banked
 19467  006CA6  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19468  006CA8  0D01               	mullw	1
 19469  006CAA  0E66               	movlw	low _MACTxBuffer
 19470  006CAC  24F3               	addwf	prodl,w,c
 19471  006CAE  6EE1               	movwf	fsr1l,c
 19472  006CB0  0E02               	movlw	high _MACTxBuffer
 19473  006CB2  20F4               	addwfc	prodh,w,c
 19474  006CB4  6EE2               	movwf	fsr1h,c
 19475  006CB6  CFDF FFE7          	movff	indf2,indf1
 19476                           
 19477                           ; BSR set to: 1
 19478  006CBA  0101               	movlb	1	; () banked
 19479  006CBC  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19480                           
 19481                           ; BSR set to: 1
 19482  006CBE  0101               	movlb	1	; () banked
 19483  006CC0  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19484  006CC2                     l16006:
 19485                           
 19486                           ; BSR set to: 1
 19487  006CC2  0101               	movlb	1	; () banked
 19488  006CC4  31AE               	rrcf	_MACInitParams& (0+255),w,b
 19489  006CC6  32E8               	rrcf	wreg,f,c
 19490  006CC8  32E8               	rrcf	wreg,f,c
 19491  006CCA  0B0F               	andlw	15
 19492  006CCC  0101               	movlb	1	; () banked
 19493  006CCE  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 19494  006CD0  0101               	movlb	1	; () banked
 19495  006CD2  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 19496  006CD4  0101               	movlb	1	; () banked
 19497  006CD6  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19498  006CD8  A0D8               	btfss	status,0,c
 19499  006CDA  D7D9               	goto	l16000
 19500  006CDC                     l327:
 19501                           
 19502                           ; BSR set to: 1
 19503                           ;drv_mrf_miwi_89xa.c: 770: }
 19504                           ;drv_mrf_miwi_89xa.c: 772: if( transParam.flags.bits.sourcePrsnt )
 19505  006CDC  0101               	movlb	1	; () banked
 19506  006CDE  AF2F               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 19507  006CE0  D02B               	goto	l328
 19508                           
 19509                           ; BSR set to: 1
 19510                           ;drv_mrf_miwi_89xa.c: 773: {
 19511                           ;drv_mrf_miwi_89xa.c: 774: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 19512  006CE2  0E00               	movlw	0
 19513  006CE4  0101               	movlb	1	; () banked
 19514  006CE6  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 19515  006CE8  D01A               	goto	l16016
 19516  006CEA                     l16010:
 19517                           
 19518                           ; BSR set to: 1
 19519                           ;drv_mrf_miwi_89xa.c: 775: {
 19520                           ;drv_mrf_miwi_89xa.c: 776: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 19521  006CEA  0101               	movlb	1	; () banked
 19522  006CEC  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19523  006CEE  0D01               	mullw	1
 19524  006CF0  50F3               	movf	prodl,w,c
 19525  006CF2  0101               	movlb	1	; () banked
 19526  006CF4  25AF               	addwf	(_MACInitParams+1)& (0+255),w,b
 19527  006CF6  6ED9               	movwf	fsr2l,c
 19528  006CF8  50F4               	movf	prodh,w,c
 19529  006CFA  0101               	movlb	1	; () banked
 19530  006CFC  21B0               	addwfc	(_MACInitParams+2)& (0+255),w,b
 19531  006CFE  6EDA               	movwf	fsr2h,c
 19532  006D00  0101               	movlb	1	; () banked
 19533  006D02  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19534  006D04  0D01               	mullw	1
 19535  006D06  0E66               	movlw	low _MACTxBuffer
 19536  006D08  24F3               	addwf	prodl,w,c
 19537  006D0A  6EE1               	movwf	fsr1l,c
 19538  006D0C  0E02               	movlw	high _MACTxBuffer
 19539  006D0E  20F4               	addwfc	prodh,w,c
 19540  006D10  6EE2               	movwf	fsr1h,c
 19541  006D12  CFDF FFE7          	movff	indf2,indf1
 19542                           
 19543                           ; BSR set to: 1
 19544  006D16  0101               	movlb	1	; () banked
 19545  006D18  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19546                           
 19547                           ; BSR set to: 1
 19548  006D1A  0101               	movlb	1	; () banked
 19549  006D1C  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19550  006D1E                     l16016:
 19551                           
 19552                           ; BSR set to: 1
 19553  006D1E  0101               	movlb	1	; () banked
 19554  006D20  31AE               	rrcf	_MACInitParams& (0+255),w,b
 19555  006D22  32E8               	rrcf	wreg,f,c
 19556  006D24  32E8               	rrcf	wreg,f,c
 19557  006D26  0B0F               	andlw	15
 19558  006D28  0101               	movlb	1	; () banked
 19559  006D2A  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 19560  006D2C  0101               	movlb	1	; () banked
 19561  006D2E  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 19562  006D30  0101               	movlb	1	; () banked
 19563  006D32  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19564  006D34  A0D8               	btfss	status,0,c
 19565  006D36  D7D9               	goto	l16010
 19566  006D38                     l328:
 19567                           
 19568                           ; BSR set to: 1
 19569                           ;drv_mrf_miwi_89xa.c: 777: }
 19570                           ;drv_mrf_miwi_89xa.c: 779: }
 19571                           ;drv_mrf_miwi_89xa.c: 782: if( transParam.flags.bits.secEn )
 19572  006D38  0101               	movlb	1	; () banked
 19573  006D3A  A72F               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 19574  006D3C  D071               	goto	l16054
 19575                           
 19576                           ; BSR set to: 1
 19577                           ;drv_mrf_miwi_89xa.c: 783: {
 19578                           ;drv_mrf_miwi_89xa.c: 785: for(i = 0; i < 4; i++)
 19579  006D3E  0E00               	movlw	0
 19580  006D40  0101               	movlb	1	; () banked
 19581  006D42  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 19582  006D44                     l16020:
 19583                           
 19584                           ; BSR set to: 1
 19585  006D44  0E03               	movlw	3
 19586  006D46  0101               	movlb	1	; () banked
 19587  006D48  6538               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 19588  006D4A  D001               	goto	l16024
 19589  006D4C  D019               	goto	l16032
 19590  006D4E                     l16024:
 19591                           
 19592                           ; BSR set to: 1
 19593                           ;drv_mrf_miwi_89xa.c: 786: {
 19594                           ;drv_mrf_miwi_89xa.c: 787: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 19595  006D4E  0101               	movlb	1	; () banked
 19596  006D50  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19597  006D52  0D01               	mullw	1
 19598  006D54  0EA2               	movlw	low _OutgoingFrameCounter
 19599  006D56  24F3               	addwf	prodl,w,c
 19600  006D58  6ED9               	movwf	fsr2l,c
 19601  006D5A  0E01               	movlw	high _OutgoingFrameCounter
 19602  006D5C  20F4               	addwfc	prodh,w,c
 19603  006D5E  6EDA               	movwf	fsr2h,c
 19604  006D60  0101               	movlb	1	; () banked
 19605  006D62  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19606  006D64  0D01               	mullw	1
 19607  006D66  0E66               	movlw	low _MACTxBuffer
 19608  006D68  24F3               	addwf	prodl,w,c
 19609  006D6A  6EE1               	movwf	fsr1l,c
 19610  006D6C  0E02               	movlw	high _MACTxBuffer
 19611  006D6E  20F4               	addwfc	prodh,w,c
 19612  006D70  6EE2               	movwf	fsr1h,c
 19613  006D72  CFDF FFE7          	movff	indf2,indf1
 19614                           
 19615                           ; BSR set to: 1
 19616  006D76  0101               	movlb	1	; () banked
 19617  006D78  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19618                           
 19619                           ; BSR set to: 1
 19620  006D7A  0101               	movlb	1	; () banked
 19621  006D7C  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19622  006D7E  D7E2               	goto	l16020
 19623  006D80                     l16032:
 19624                           
 19625                           ; BSR set to: 1
 19626                           ;drv_mrf_miwi_89xa.c: 788: }
 19627                           ;drv_mrf_miwi_89xa.c: 789: OutgoingFrameCounter.Val++;
 19628  006D80  0E01               	movlw	1
 19629  006D82  0101               	movlb	1	; () banked
 19630  006D84  27A2               	addwf	_OutgoingFrameCounter& (0+255),f,b
 19631  006D86  0E00               	movlw	0
 19632  006D88  23A3               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 19633  006D8A  23A4               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 19634  006D8C  23A5               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 19635                           
 19636                           ; BSR set to: 1
 19637                           ;drv_mrf_miwi_89xa.c: 796: MACTxBuffer[TxIndex++] = 0x00;
 19638  006D8E  0101               	movlb	1	; () banked
 19639  006D90  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19640  006D92  0D01               	mullw	1
 19641  006D94  0E66               	movlw	low _MACTxBuffer
 19642  006D96  24F3               	addwf	prodl,w,c
 19643  006D98  6ED9               	movwf	fsr2l,c
 19644  006D9A  0E02               	movlw	high _MACTxBuffer
 19645  006D9C  20F4               	addwfc	prodh,w,c
 19646  006D9E  6EDA               	movwf	fsr2h,c
 19647  006DA0  0E00               	movlw	0
 19648  006DA2  6EDF               	movwf	indf2,c
 19649                           
 19650                           ; BSR set to: 1
 19651  006DA4  0101               	movlb	1	; () banked
 19652  006DA6  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19653                           
 19654                           ; BSR set to: 1
 19655                           ;drv_mrf_miwi_89xa.c: 798: {
 19656                           ;drv_mrf_miwi_89xa.c: 799: uint8_t headerLen;
 19657                           ;drv_mrf_miwi_89xa.c: 801: headerLen = TxIndex;
 19658  006DA8  C137  F136         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 19659                           
 19660                           ; BSR set to: 1
 19661                           ;drv_mrf_miwi_89xa.c: 803: for(i = 0; i < MACPayloadLen; i++)
 19662  006DAC  0E00               	movlw	0
 19663  006DAE  0101               	movlb	1	; () banked
 19664  006DB0  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 19665  006DB2  D01A               	goto	l16048
 19666  006DB4                     l16042:
 19667                           
 19668                           ; BSR set to: 1
 19669                           ;drv_mrf_miwi_89xa.c: 804: {
 19670                           ;drv_mrf_miwi_89xa.c: 805: MACTxBuffer[TxIndex++] = MACPayload[i];
 19671  006DB4  0101               	movlb	1	; () banked
 19672  006DB6  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19673  006DB8  0D01               	mullw	1
 19674  006DBA  50F3               	movf	prodl,w,c
 19675  006DBC  0101               	movlb	1	; () banked
 19676  006DBE  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19677  006DC0  6ED9               	movwf	fsr2l,c
 19678  006DC2  50F4               	movf	prodh,w,c
 19679  006DC4  0101               	movlb	1	; () banked
 19680  006DC6  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19681  006DC8  6EDA               	movwf	fsr2h,c
 19682  006DCA  0101               	movlb	1	; () banked
 19683  006DCC  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19684  006DCE  0D01               	mullw	1
 19685  006DD0  0E66               	movlw	low _MACTxBuffer
 19686  006DD2  24F3               	addwf	prodl,w,c
 19687  006DD4  6EE1               	movwf	fsr1l,c
 19688  006DD6  0E02               	movlw	high _MACTxBuffer
 19689  006DD8  20F4               	addwfc	prodh,w,c
 19690  006DDA  6EE2               	movwf	fsr1h,c
 19691  006DDC  CFDF FFE7          	movff	indf2,indf1
 19692                           
 19693                           ; BSR set to: 1
 19694  006DE0  0101               	movlb	1	; () banked
 19695  006DE2  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19696                           
 19697                           ; BSR set to: 1
 19698  006DE4  0101               	movlb	1	; () banked
 19699  006DE6  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19700  006DE8                     l16048:
 19701                           
 19702                           ; BSR set to: 1
 19703  006DE8  0101               	movlb	1	; () banked
 19704  006DEA  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19705  006DEC  0101               	movlb	1	; () banked
 19706  006DEE  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19707  006DF0  A0D8               	btfss	status,0,c
 19708  006DF2  D7E0               	goto	l16042
 19709                           
 19710                           ; BSR set to: 1
 19711                           ;drv_mrf_miwi_89xa.c: 806: }
 19712                           ;drv_mrf_miwi_89xa.c: 826: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 19713                           
 19714                           ; BSR set to: 1
 19715  006DF4  0E66               	movlw	low _MACTxBuffer
 19716  006DF6  0101               	movlb	1	; () banked
 19717  006DF8  6F24               	movwf	CCM_Enc@text& (0+255),b
 19718  006DFA  0E02               	movlw	high _MACTxBuffer
 19719  006DFC  0101               	movlb	1	; () banked
 19720  006DFE  6F25               	movwf	(CCM_Enc@text+1)& (0+255),b
 19721  006E00  C136  F126         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 19722  006E04  C134  F127         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 19723  006E08  0EF1               	movlw	low _key
 19724  006E0A  0101               	movlb	1	; () banked
 19725  006E0C  6F28               	movwf	CCM_Enc@key& (0+255),b
 19726  006E0E  0E02               	movlw	high _key
 19727  006E10  0101               	movlb	1	; () banked
 19728  006E12  6F29               	movwf	(CCM_Enc@key+1)& (0+255),b
 19729  006E14  EC91  F041         	call	_CCM_Enc	;wreg free
 19730                           
 19731                           ;drv_mrf_miwi_89xa.c: 827: TxIndex += 2;
 19732  006E18  0E02               	movlw	2
 19733  006E1A  0101               	movlb	1	; () banked
 19734  006E1C  2737               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19735                           
 19736                           ;drv_mrf_miwi_89xa.c: 834: }
 19737                           ;drv_mrf_miwi_89xa.c: 835: }
 19738  006E1E  D024               	goto	l16064
 19739  006E20                     l16054:
 19740                           
 19741                           ; BSR set to: 1
 19742                           ;drv_mrf_miwi_89xa.c: 836: else
 19743                           ;drv_mrf_miwi_89xa.c: 840: for(i = 0; i < MACPayloadLen; i++)
 19744  006E20  0E00               	movlw	0
 19745  006E22  0101               	movlb	1	; () banked
 19746  006E24  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 19747  006E26  D01A               	goto	l16062
 19748  006E28                     l16056:
 19749                           
 19750                           ; BSR set to: 1
 19751                           ;drv_mrf_miwi_89xa.c: 841: {
 19752                           ;drv_mrf_miwi_89xa.c: 842: MACTxBuffer[TxIndex++] = MACPayload[i];
 19753  006E28  0101               	movlb	1	; () banked
 19754  006E2A  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 19755  006E2C  0D01               	mullw	1
 19756  006E2E  50F3               	movf	prodl,w,c
 19757  006E30  0101               	movlb	1	; () banked
 19758  006E32  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 19759  006E34  6ED9               	movwf	fsr2l,c
 19760  006E36  50F4               	movf	prodh,w,c
 19761  006E38  0101               	movlb	1	; () banked
 19762  006E3A  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 19763  006E3C  6EDA               	movwf	fsr2h,c
 19764  006E3E  0101               	movlb	1	; () banked
 19765  006E40  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19766  006E42  0D01               	mullw	1
 19767  006E44  0E66               	movlw	low _MACTxBuffer
 19768  006E46  24F3               	addwf	prodl,w,c
 19769  006E48  6EE1               	movwf	fsr1l,c
 19770  006E4A  0E02               	movlw	high _MACTxBuffer
 19771  006E4C  20F4               	addwfc	prodh,w,c
 19772  006E4E  6EE2               	movwf	fsr1h,c
 19773  006E50  CFDF FFE7          	movff	indf2,indf1
 19774                           
 19775                           ; BSR set to: 1
 19776  006E54  0101               	movlb	1	; () banked
 19777  006E56  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 19778                           
 19779                           ; BSR set to: 1
 19780  006E58  0101               	movlb	1	; () banked
 19781  006E5A  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 19782  006E5C                     l16062:
 19783                           
 19784                           ; BSR set to: 1
 19785  006E5C  0101               	movlb	1	; () banked
 19786  006E5E  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 19787  006E60  0101               	movlb	1	; () banked
 19788  006E62  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 19789  006E64  A0D8               	btfss	status,0,c
 19790  006E66  D7E0               	goto	l16056
 19791  006E68                     l16064:
 19792                           
 19793                           ; BSR set to: 1
 19794                           ;drv_mrf_miwi_89xa.c: 843: }
 19795                           ;drv_mrf_miwi_89xa.c: 845: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 19796  006E68  0E00               	movlw	0
 19797  006E6A  B3AE               	btfsc	_MACInitParams& (0+255),1,b
 19798  006E6C  0E01               	movlw	1
 19799  006E6E  0101               	movlb	1	; () banked
 19800  006E70  6F0A               	movwf	TxPacket@CCA& (0+255),b
 19801  006E72  0101               	movlb	1	; () banked
 19802  006E74  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 19803  006E76  EC1A  F03A         	call	_TxPacket
 19804  006E7A  0012               	return	
 19805  006E7C                     __end_of_MiMAC_SendPacket:
 19806                           	opt stack 0
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           intcon2	equ	0xFF1
 19815                           intcon3	equ	0xFF0
 19816                           indf0	equ	0xFEF
 19817                           postinc0	equ	0xFEE
 19818                           plusw0	equ	0xFEB
 19819                           fsr0h	equ	0xFEA
 19820                           fsr0l	equ	0xFE9
 19821                           wreg	equ	0xFE8
 19822                           indf1	equ	0xFE7
 19823                           postinc1	equ	0xFE6
 19824                           postdec1	equ	0xFE5
 19825                           fsr1h	equ	0xFE2
 19826                           fsr1l	equ	0xFE1
 19827                           indf2	equ	0xFDF
 19828                           postinc2	equ	0xFDE
 19829                           postdec2	equ	0xFDD
 19830                           plusw2	equ	0xFDB
 19831                           fsr2h	equ	0xFDA
 19832                           fsr2l	equ	0xFD9
 19833                           status	equ	0xFD8
 19834                           
 19835 ;; *************** function _TxPacket *****************
 19836 ;; Defined at:
 19837 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;  TxPacketLen     1    wreg     unsigned char 
 19840 ;;  CCA             1   10[BANK1 ] unsigned char 
 19841 ;; Auto vars:     Size  Location     Type
 19842 ;;  TxPacketLen     1   31[BANK1 ] unsigned char 
 19843 ;;  allowedTxFai    1   29[BANK1 ] unsigned char 
 19844 ;;  t2              4   23[BANK1 ] struct _MIWI_TICK
 19845 ;;  t1              4   19[BANK1 ] struct _MIWI_TICK
 19846 ;;  rssival         1   33[BANK1 ] unsigned char 
 19847 ;;  i               1   32[BANK1 ] unsigned char 
 19848 ;;  status          1   30[BANK1 ] unsigned char 
 19849 ;;  reTry           1   28[BANK1 ] unsigned char 
 19850 ;;  CCARetries      1   27[BANK1 ] unsigned char 
 19851 ;; Return value:  Size  Location     Type
 19852 ;;                  1    wreg      unsigned char 
 19853 ;; Registers used:
 19854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19855 ;; Tracked objects:
 19856 ;;		On entry : 0/0
 19857 ;;		On exit  : 0/0
 19858 ;;		Unchanged: 0/0
 19859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19860 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19861 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19862 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;Total ram usage:       24 bytes
 19865 ;; Hardware stack levels used:    1
 19866 ;; Hardware stack levels required when called:   19
 19867 ;; This function calls:
 19868 ;;		_MiWi_TickGet
 19869 ;;		_RegisterRead
 19870 ;;		_RegisterSet
 19871 ;;		_SetRFMode
 19872 ;;		_WriteFIFO
 19873 ;; This function is called by:
 19874 ;;		_MiMAC_SendPacket
 19875 ;; This function uses a non-reentrant model
 19876 ;;
 19877                           
 19878                           	psect	text37
 19879  007434                     __ptext37:
 19880                           	opt stack 0
 19881  007434                     _TxPacket:
 19882                           	opt stack 6
 19883                           
 19884                           ;incstack = 0
 19885                           ;TxPacket@TxPacketLen stored from wreg
 19886  007434  0101               	movlb	1	; () banked
 19887  007436  6F1F               	movwf	TxPacket@TxPacketLen& (0+255),b
 19888                           
 19889                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 19890                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 19891                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 19892                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 19893                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 19894                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 19895  007438  0E03               	movlw	3
 19896  00743A  0101               	movlb	1	; () banked
 19897  00743C  6F1C               	movwf	TxPacket@reTry& (0+255),b
 19898                           
 19899                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 19900  00743E  D0C3               	goto	l15944
 19901  007440                     l15876:
 19902                           
 19903                           ; BSR set to: 1
 19904                           ;drv_mrf_miwi_89xa.c: 305: {
 19905                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 19906                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 19907  007440  0E00               	movlw	0
 19908  007442  0101               	movlb	1	; () banked
 19909  007444  6F1D               	movwf	TxPacket@allowedTxFailure& (0+255),b
 19910  007446                     l262:
 19911                           
 19912                           ; BSR set to: 1
 19913                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 19914  007446  0E00               	movlw	0
 19915  007448  0100               	movlb	0	; () banked
 19916  00744A  6FE0               	movwf	_hasAck& (0+255),b	;volatile
 19917                           
 19918                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 19919  00744C  0E00               	movlw	0
 19920  00744E  0101               	movlb	1	; () banked
 19921  007450  6F1B               	movwf	TxPacket@CCARetries& (0+255),b
 19922                           
 19923                           ; BSR set to: 1
 19924                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 19925  007452  0101               	movlb	1	; () banked
 19926  007454  510A               	movf	TxPacket@CCA& (0+255),w,b
 19927  007456  0101               	movlb	1	; () banked
 19928  007458  B4D8               	btfsc	status,2,c
 19929  00745A  D019               	goto	l263
 19930  00745C                     l15880:
 19931                           
 19932                           ; BSR set to: 1
 19933                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 19934  00745C  0E28               	movlw	40
 19935  00745E  EC8D  F054         	call	_RegisterRead
 19936  007462  0101               	movlb	1	; () banked
 19937  007464  6F21               	movwf	TxPacket@rssival& (0+255),b
 19938                           
 19939                           ; BSR set to: 1
 19940                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 19941  007466  0101               	movlb	1	; () banked
 19942  007468  90D8               	bcf	status,0,c
 19943  00746A  3121               	rrcf	TxPacket@rssival& (0+255),w,b
 19944  00746C  0101               	movlb	1	; () banked
 19945  00746E  6F21               	movwf	TxPacket@rssival& (0+255),b
 19946                           
 19947                           ; BSR set to: 1
 19948                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 19949  007470  0E41               	movlw	65
 19950  007472  0101               	movlb	1	; () banked
 19951  007474  6521               	cpfsgt	TxPacket@rssival& (0+255),b
 19952  007476  D00B               	goto	l263
 19953                           
 19954                           ; BSR set to: 1
 19955                           ;drv_mrf_miwi_89xa.c: 326: {
 19956                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 19957  007478  0101               	movlb	1	; () banked
 19958  00747A  2B1B               	incf	TxPacket@CCARetries& (0+255),f,b
 19959  00747C  051B               	decf	TxPacket@CCARetries& (0+255),w,b
 19960  00747E  0101               	movlb	1	; () banked
 19961  007480  6F0B               	movwf	??_TxPacket& (0+255),b
 19962  007482  0E04               	movlw	4
 19963  007484  0101               	movlb	1	; () banked
 19964  007486  650B               	cpfsgt	??_TxPacket& (0+255),b
 19965  007488  D7E9               	goto	l15880
 19966                           
 19967                           ; BSR set to: 1
 19968                           ;drv_mrf_miwi_89xa.c: 328: {
 19969                           ;drv_mrf_miwi_89xa.c: 329: return 0;
 19970  00748A  0E00               	movlw	0
 19971                           
 19972                           ; BSR set to: 1
 19973  00748C  0012               	return	
 19974  00748E                     l263:
 19975                           
 19976                           ; BSR set to: 1
 19977                           ;drv_mrf_miwi_89xa.c: 333: }
 19978                           ;drv_mrf_miwi_89xa.c: 334: }
 19979                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 19980  00748E  98F2               	bcf	intcon,4,c	;volatile
 19981                           
 19982                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 19983  007490  96F0               	bcf	intcon3,3,c	;volatile
 19984                           
 19985                           ; BSR set to: 1
 19986                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 19987  007492  0E20               	movlw	32
 19988  007494  ECA5  F04F         	call	_SetRFMode
 19989                           
 19990                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 19991  007498  0E1A               	movlw	26
 19992  00749A  0101               	movlb	1	; () banked
 19993  00749C  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 19994  00749E  0EC9               	movlw	201
 19995  0074A0  6F02               	movwf	RegisterSet@setting& (0+255),b
 19996  0074A2  EC0E  F055         	call	_RegisterSet	;wreg free
 19997                           
 19998                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 19999  0074A6  0101               	movlb	1	; () banked
 20000  0074A8  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 20001  0074AA  EC99  F055         	call	_WriteFIFO
 20002                           
 20003                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 20004  0074AE  0E00               	movlw	0
 20005  0074B0  0101               	movlb	1	; () banked
 20006  0074B2  6F20               	movwf	TxPacket@i& (0+255),b
 20007  0074B4  D00E               	goto	l15904
 20008  0074B6                     l15900:
 20009                           
 20010                           ; BSR set to: 1
 20011                           ;drv_mrf_miwi_89xa.c: 346: {
 20012                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 20013  0074B6  0101               	movlb	1	; () banked
 20014  0074B8  5120               	movf	TxPacket@i& (0+255),w,b
 20015  0074BA  0D01               	mullw	1
 20016  0074BC  0E66               	movlw	low _MACTxBuffer
 20017  0074BE  24F3               	addwf	prodl,w,c
 20018  0074C0  6ED9               	movwf	fsr2l,c
 20019  0074C2  0E02               	movlw	high _MACTxBuffer
 20020  0074C4  20F4               	addwfc	prodh,w,c
 20021  0074C6  6EDA               	movwf	fsr2h,c
 20022  0074C8  50DF               	movf	indf2,w,c
 20023  0074CA  EC99  F055         	call	_WriteFIFO
 20024  0074CE  0101               	movlb	1	; () banked
 20025  0074D0  2B20               	incf	TxPacket@i& (0+255),f,b
 20026  0074D2                     l15904:
 20027                           
 20028                           ; BSR set to: 1
 20029  0074D2  0101               	movlb	1	; () banked
 20030  0074D4  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 20031  0074D6  0101               	movlb	1	; () banked
 20032  0074D8  5D20               	subwf	TxPacket@i& (0+255),w,b
 20033  0074DA  A0D8               	btfss	status,0,c
 20034  0074DC  D7EC               	goto	l15900
 20035                           
 20036                           ; BSR set to: 1
 20037                           ;drv_mrf_miwi_89xa.c: 348: }
 20038                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 20039                           
 20040                           ; BSR set to: 1
 20041  0074DE  0E80               	movlw	128
 20042  0074E0  ECA5  F04F         	call	_SetRFMode
 20043                           
 20044                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 20045  0074E4  88F2               	bsf	intcon,4,c	;volatile
 20046                           
 20047                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 20048  0074E6  86F0               	bsf	intcon3,3,c	;volatile
 20049  0074E8                     l15912:
 20050  0074E8  0100               	movlb	0	; () banked
 20051  0074EA  51DC               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 20052  0074EC  B4D8               	btfsc	status,2,c
 20053                           
 20054                           ; BSR set to: 0
 20055  0074EE  B0F0               	btfsc	intcon3,0,c	;volatile
 20056  0074F0  D001               	goto	l15916
 20057  0074F2  D7FA               	goto	l15912
 20058  0074F4                     l15916:
 20059                           
 20060                           ; BSR set to: 0
 20061                           ;drv_mrf_miwi_89xa.c: 357: };
 20062                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 20063  0074F4  0E00               	movlw	0
 20064  0074F6  0100               	movlb	0	; () banked
 20065  0074F8  6FDC               	movwf	_IRQ1_Received& (0+255),b	;volatile
 20066                           
 20067                           ; BSR set to: 0
 20068                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 20069  0074FA  0E20               	movlw	32
 20070  0074FC  ECA5  F04F         	call	_SetRFMode
 20071                           
 20072                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 20073  007500  0E60               	movlw	96
 20074  007502  ECA5  F04F         	call	_SetRFMode
 20075                           
 20076                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 20077  007506  0102               	movlb	2	; () banked
 20078  007508  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 20079  00750A  D05B               	goto	l15942
 20080                           
 20081                           ; BSR set to: 2
 20082                           ;drv_mrf_miwi_89xa.c: 367: {
 20083                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 20084  00750C  C267  F0DF         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 20085                           
 20086                           ; BSR set to: 2
 20087                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 20088  007510  EC57  F052         	call	_MiWi_TickGet	;wreg free
 20089  007514  C100  F113         	movff	?_MiWi_TickGet,TxPacket@t1
 20090  007518  C101  F114         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 20091  00751C  C102  F115         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 20092  007520  C103  F116         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 20093  007524                     l15928:
 20094                           
 20095                           ;drv_mrf_miwi_89xa.c: 371: {
 20096                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 20097  007524  0100               	movlb	0	; () banked
 20098  007526  51E0               	movf	_hasAck& (0+255),w,b	;volatile
 20099  007528  A4D8               	btfss	status,2,c
 20100  00752A  D04B               	goto	l15942
 20101                           
 20102                           ;drv_mrf_miwi_89xa.c: 376: }
 20103                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 20104                           
 20105                           ; BSR set to: 1
 20106                           
 20107                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;drv_mrf_miwi_89xa.c: 373: {
 20111                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 20112  00752C  EC57  F052         	call	_MiWi_TickGet	;wreg free
 20113  007530  C100  F117         	movff	?_MiWi_TickGet,TxPacket@t2
 20114  007534  C101  F118         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 20115  007538  C102  F119         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 20116  00753C  C103  F11A         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 20117                           
 20118                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 20119  007540  C113  F10B         	movff	TxPacket@t1,??_TxPacket
 20120  007544  C114  F10C         	movff	TxPacket@t1+1,??_TxPacket+1
 20121  007548  C115  F10D         	movff	TxPacket@t1+2,??_TxPacket+2
 20122  00754C  C116  F10E         	movff	TxPacket@t1+3,??_TxPacket+3
 20123  007550  0101               	movlb	1	; () banked
 20124  007552  1F0B               	comf	??_TxPacket& (0+255),f,b
 20125  007554  1F0C               	comf	(??_TxPacket+1)& (0+255),f,b
 20126  007556  1F0D               	comf	(??_TxPacket+2)& (0+255),f,b
 20127  007558  1F0E               	comf	(??_TxPacket+3)& (0+255),f,b
 20128  00755A  2B0B               	incf	??_TxPacket& (0+255),f,b
 20129  00755C  0E00               	movlw	0
 20130  00755E  230C               	addwfc	(??_TxPacket+1)& (0+255),f,b
 20131  007560  230D               	addwfc	(??_TxPacket+2)& (0+255),f,b
 20132  007562  230E               	addwfc	(??_TxPacket+3)& (0+255),f,b
 20133  007564  0101               	movlb	1	; () banked
 20134  007566  5117               	movf	TxPacket@t2& (0+255),w,b
 20135  007568  0101               	movlb	1	; () banked
 20136  00756A  250B               	addwf	??_TxPacket& (0+255),w,b
 20137  00756C  0101               	movlb	1	; () banked
 20138  00756E  6F0F               	movwf	(??_TxPacket+4)& (0+255),b
 20139  007570  0101               	movlb	1	; () banked
 20140  007572  5118               	movf	(TxPacket@t2+1)& (0+255),w,b
 20141  007574  0101               	movlb	1	; () banked
 20142  007576  210C               	addwfc	(??_TxPacket+1)& (0+255),w,b
 20143  007578  0101               	movlb	1	; () banked
 20144  00757A  6F10               	movwf	(??_TxPacket+5)& (0+255),b
 20145  00757C  0101               	movlb	1	; () banked
 20146  00757E  5119               	movf	(TxPacket@t2+2)& (0+255),w,b
 20147  007580  0101               	movlb	1	; () banked
 20148  007582  210D               	addwfc	(??_TxPacket+2)& (0+255),w,b
 20149  007584  0101               	movlb	1	; () banked
 20150  007586  6F11               	movwf	(??_TxPacket+6)& (0+255),b
 20151  007588  0101               	movlb	1	; () banked
 20152  00758A  511A               	movf	(TxPacket@t2+3)& (0+255),w,b
 20153  00758C  0101               	movlb	1	; () banked
 20154  00758E  210E               	addwfc	(??_TxPacket+3)& (0+255),w,b
 20155  007590  0101               	movlb	1	; () banked
 20156  007592  6F12               	movwf	(??_TxPacket+7)& (0+255),b
 20157  007594  0101               	movlb	1	; () banked
 20158  007596  5112               	movf	(??_TxPacket+7)& (0+255),w,b
 20159  007598  0101               	movlb	1	; () banked
 20160  00759A  1111               	iorwf	(??_TxPacket+6)& (0+255),w,b
 20161  00759C  E108               	bnz	l15938
 20162  00759E  0EA9               	movlw	169
 20163  0075A0  0101               	movlb	1	; () banked
 20164  0075A2  5D0F               	subwf	(??_TxPacket+4)& (0+255),w,b
 20165  0075A4  0E61               	movlw	97
 20166  0075A6  0101               	movlb	1	; () banked
 20167  0075A8  5910               	subwfb	(??_TxPacket+5)& (0+255),w,b
 20168  0075AA  A0D8               	btfss	status,0,c
 20169  0075AC  D7BB               	goto	l15928
 20170  0075AE                     l15938:
 20171                           
 20172                           ; BSR set to: 1
 20173                           ;drv_mrf_miwi_89xa.c: 381: }
 20174                           ;drv_mrf_miwi_89xa.c: 382: }
 20175                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 20176  0075AE  0101               	movlb	1	; () banked
 20177  0075B0  2B1D               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 20178  0075B2  051D               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 20179  0075B4  0101               	movlb	1	; () banked
 20180  0075B6  6F0B               	movwf	??_TxPacket& (0+255),b
 20181  0075B8  0E04               	movlw	4
 20182  0075BA  0101               	movlb	1	; () banked
 20183  0075BC  610B               	cpfslt	??_TxPacket& (0+255),b
 20184  0075BE  D003               	goto	l15944
 20185  0075C0  D742               	goto	l262
 20186  0075C2                     l15942:
 20187                           
 20188                           ;drv_mrf_miwi_89xa.c: 388: else
 20189                           ;drv_mrf_miwi_89xa.c: 390: {
 20190                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 20191  0075C2  0E01               	movlw	1
 20192  0075C4  D007               	goto	L13
 20193  0075C6                     l15944:
 20194                           
 20195                           ; BSR set to: 1
 20196  0075C6  0101               	movlb	1	; () banked
 20197  0075C8  071C               	decf	TxPacket@reTry& (0+255),f,b
 20198  0075CA  0101               	movlb	1	; () banked
 20199  0075CC  291C               	incf	TxPacket@reTry& (0+255),w,b
 20200  0075CE  A4D8               	btfss	status,2,c
 20201  0075D0  D737               	goto	l15876
 20202                           
 20203                           ; BSR set to: 1
 20204                           ;drv_mrf_miwi_89xa.c: 393: }
 20205                           ;drv_mrf_miwi_89xa.c: 394: }
 20206                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 20207                           
 20208                           ; BSR set to: 1
 20209  0075D2  0E00               	movlw	0
 20210  0075D4                     L13:
 20211  0075D4  0101               	movlb	1	; () banked
 20212  0075D6  6F1E               	movwf	TxPacket@status& (0+255),b
 20213                           
 20214                           ; BSR set to: 1
 20215                           ;drv_mrf_miwi_89xa.c: 398: return status;
 20216                           
 20217                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 20218  0075D8  0101               	movlb	1	; () banked
 20219  0075DA  511E               	movf	TxPacket@status& (0+255),w,b
 20220  0075DC  0012               	return	
 20221  0075DE                     __end_of_TxPacket:
 20222                           	opt stack 0
 20223                           tblptru	equ	0xFF8
 20224                           tblptrh	equ	0xFF7
 20225                           tblptrl	equ	0xFF6
 20226                           tablat	equ	0xFF5
 20227                           prodh	equ	0xFF4
 20228                           prodl	equ	0xFF3
 20229                           intcon	equ	0xFF2
 20230                           intcon2	equ	0xFF1
 20231                           intcon3	equ	0xFF0
 20232                           indf0	equ	0xFEF
 20233                           postinc0	equ	0xFEE
 20234                           plusw0	equ	0xFEB
 20235                           fsr0h	equ	0xFEA
 20236                           fsr0l	equ	0xFE9
 20237                           wreg	equ	0xFE8
 20238                           indf1	equ	0xFE7
 20239                           postinc1	equ	0xFE6
 20240                           postdec1	equ	0xFE5
 20241                           fsr1h	equ	0xFE2
 20242                           fsr1l	equ	0xFE1
 20243                           indf2	equ	0xFDF
 20244                           postinc2	equ	0xFDE
 20245                           postdec2	equ	0xFDD
 20246                           plusw2	equ	0xFDB
 20247                           fsr2h	equ	0xFDA
 20248                           fsr2l	equ	0xFD9
 20249                           status	equ	0xFD8
 20250                           
 20251 ;; *************** function _WriteFIFO *****************
 20252 ;; Defined at:
 20253 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20254 ;; Parameters:    Size  Location     Type
 20255 ;;  Data            1    wreg     unsigned char 
 20256 ;; Auto vars:     Size  Location     Type
 20257 ;;  Data            1    2[BANK1 ] unsigned char 
 20258 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 20259 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 20260 ;; Return value:  Size  Location     Type
 20261 ;;		None               void
 20262 ;; Registers used:
 20263 ;;		wreg, status,2, cstack
 20264 ;; Tracked objects:
 20265 ;;		On entry : 0/0
 20266 ;;		On exit  : 0/0
 20267 ;;		Unchanged: 0/0
 20268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20272 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20273 ;;Total ram usage:        3 bytes
 20274 ;; Hardware stack levels used:    1
 20275 ;; Hardware stack levels required when called:   17
 20276 ;; This function calls:
 20277 ;;		_SPIPut
 20278 ;; This function is called by:
 20279 ;;		_TxPacket
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text38
 20284  00AB32                     __ptext38:
 20285                           	opt stack 0
 20286  00AB32                     _WriteFIFO:
 20287                           	opt stack 7
 20288                           
 20289                           ; BSR set to: 1
 20290                           ;incstack = 0
 20291                           ;WriteFIFO@Data stored from wreg
 20292  00AB32  0101               	movlb	1	; () banked
 20293  00AB34  6F02               	movwf	WriteFIFO@Data& (0+255),b
 20294                           
 20295                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20296  00AB36  0E00               	movlw	0
 20297  00AB38  B6F0               	btfsc	intcon3,3,c	;volatile
 20298  00AB3A  0E01               	movlw	1
 20299  00AB3C  0101               	movlb	1	; () banked
 20300  00AB3E  6F03               	movwf	WriteFIFO@IRQ1select& (0+255),b
 20301                           
 20302                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 20303  00AB40  0E00               	movlw	0
 20304  00AB42  B8F2               	btfsc	intcon,4,c	;volatile
 20305  00AB44  0E01               	movlw	1
 20306  00AB46  0101               	movlb	1	; () banked
 20307  00AB48  6F04               	movwf	WriteFIFO@IRQ0select& (0+255),b
 20308                           
 20309                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 20310  00AB4A  98F2               	bcf	intcon,4,c	;volatile
 20311                           
 20312                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 20313  00AB4C  96F0               	bcf	intcon3,3,c	;volatile
 20314                           
 20315                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 20316  00AB4E  9C8B               	bcf	3979,6,c	;volatile
 20317                           
 20318                           ; BSR set to: 1
 20319                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 20320  00AB50  0101               	movlb	1	; () banked
 20321  00AB52  5102               	movf	WriteFIFO@Data& (0+255),w,b
 20322  00AB54  EC6F  F057         	call	_SPIPut
 20323                           
 20324                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 20325  00AB58  8C8B               	bsf	3979,6,c	;volatile
 20326                           
 20327                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 20328  00AB5A  0101               	movlb	1	; () banked
 20329  00AB5C  B103               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 20330  00AB5E  D002               	bra	u16375
 20331  00AB60  96F0               	bcf	intcon3,3,c	;volatile
 20332  00AB62  D001               	bra	u16376
 20333  00AB64                     u16375:
 20334  00AB64  86F0               	bsf	intcon3,3,c	;volatile
 20335  00AB66                     u16376:
 20336                           
 20337                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 20338  00AB66  0101               	movlb	1	; () banked
 20339  00AB68  B104               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 20340  00AB6A  D002               	bra	u16385
 20341  00AB6C  98F2               	bcf	intcon,4,c	;volatile
 20342  00AB6E  D001               	bra	u16386
 20343  00AB70                     u16385:
 20344  00AB70  88F2               	bsf	intcon,4,c	;volatile
 20345  00AB72                     u16386:
 20346  00AB72  0012               	return		;funcret
 20347  00AB74                     __end_of_WriteFIFO:
 20348                           	opt stack 0
 20349                           tblptru	equ	0xFF8
 20350                           tblptrh	equ	0xFF7
 20351                           tblptrl	equ	0xFF6
 20352                           tablat	equ	0xFF5
 20353                           prodh	equ	0xFF4
 20354                           prodl	equ	0xFF3
 20355                           intcon	equ	0xFF2
 20356                           intcon2	equ	0xFF1
 20357                           intcon3	equ	0xFF0
 20358                           indf0	equ	0xFEF
 20359                           postinc0	equ	0xFEE
 20360                           plusw0	equ	0xFEB
 20361                           fsr0h	equ	0xFEA
 20362                           fsr0l	equ	0xFE9
 20363                           wreg	equ	0xFE8
 20364                           indf1	equ	0xFE7
 20365                           postinc1	equ	0xFE6
 20366                           postdec1	equ	0xFE5
 20367                           fsr1h	equ	0xFE2
 20368                           fsr1l	equ	0xFE1
 20369                           indf2	equ	0xFDF
 20370                           postinc2	equ	0xFDE
 20371                           postdec2	equ	0xFDD
 20372                           plusw2	equ	0xFDB
 20373                           fsr2h	equ	0xFDA
 20374                           fsr2l	equ	0xFD9
 20375                           status	equ	0xFD8
 20376                           
 20377 ;; *************** function _CCM_Enc *****************
 20378 ;; Defined at:
 20379 ;;		line 239 in file "src/miwi/drv_mrf_miwi_security.c"
 20380 ;; Parameters:    Size  Location     Type
 20381 ;;  text            2   36[BANK1 ] PTR unsigned char 
 20382 ;;		 -> MACTxBuffer(64), 
 20383 ;;  headerLen       1   38[BANK1 ] unsigned char 
 20384 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 20385 ;;  key             2   40[BANK1 ] PTR unsigned char 
 20386 ;;		 -> key(8), 
 20387 ;; Auto vars:     Size  Location     Type
 20388 ;;  i               1   46[BANK1 ] unsigned char 
 20389 ;; Return value:  Size  Location     Type
 20390 ;;		None               void
 20391 ;; Registers used:
 20392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20393 ;; Tracked objects:
 20394 ;;		On entry : 0/0
 20395 ;;		On exit  : 0/0
 20396 ;;		Unchanged: 0/0
 20397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20398 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20399 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20400 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20401 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20402 ;;Total ram usage:       11 bytes
 20403 ;; Hardware stack levels used:    1
 20404 ;; Hardware stack levels required when called:   18
 20405 ;; This function calls:
 20406 ;;		_CBC_MAC
 20407 ;;		_CTR
 20408 ;; This function is called by:
 20409 ;;		_MiMAC_SendPacket
 20410 ;; This function uses a non-reentrant model
 20411 ;;
 20412                           
 20413                           	psect	text39
 20414  008322                     __ptext39:
 20415                           	opt stack 0
 20416  008322                     _CCM_Enc:
 20417                           	opt stack 7
 20418                           
 20419                           ;drv_mrf_miwi_security.c: 244: uint8_t i;
 20420                           ;drv_mrf_miwi_security.c: 251: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 20421                           
 20422                           ;incstack = 0
 20423  008322  C124  F117         	movff	CCM_Enc@text,CBC_MAC@text
 20424  008326  C125  F118         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 20425  00832A  0101               	movlb	1	; () banked
 20426  00832C  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 20427  00832E  0101               	movlb	1	; () banked
 20428  008330  2527               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 20429  008332  0101               	movlb	1	; () banked
 20430  008334  6F19               	movwf	CBC_MAC@len& (0+255),b
 20431  008336  C128  F11A         	movff	CCM_Enc@key,CBC_MAC@key
 20432  00833A  C129  F11B         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 20433  00833E  0EEC               	movlw	low _tmpBlock
 20434  008340  0101               	movlb	1	; () banked
 20435  008342  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 20436  008344  0E01               	movlw	high _tmpBlock
 20437  008346  0101               	movlb	1	; () banked
 20438  008348  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 20439  00834A  ECF7  F044         	call	_CBC_MAC	;wreg free
 20440                           
 20441                           ;drv_mrf_miwi_security.c: 253: for(i = 0; i < 4; i++)
 20442  00834E  0E00               	movlw	0
 20443  008350  0101               	movlb	1	; () banked
 20444  008352  6F2E               	movwf	CCM_Enc@i& (0+255),b
 20445  008354                     l15954:
 20446                           
 20447                           ; BSR set to: 1
 20448  008354  0E03               	movlw	3
 20449  008356  0101               	movlb	1	; () banked
 20450  008358  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 20451  00835A  D001               	goto	l15958
 20452  00835C  D028               	goto	l15964
 20453  00835E                     l15958:
 20454                           
 20455                           ; BSR set to: 1
 20456                           ;drv_mrf_miwi_security.c: 254: {
 20457                           ;drv_mrf_miwi_security.c: 255: text[headerLen + payloadLen + i] = tmpBlock[i];
 20458  00835E  0101               	movlb	1	; () banked
 20459  008360  512E               	movf	CCM_Enc@i& (0+255),w,b
 20460  008362  0D01               	mullw	1
 20461  008364  0EEC               	movlw	low _tmpBlock
 20462  008366  24F3               	addwf	prodl,w,c
 20463  008368  6ED9               	movwf	fsr2l,c
 20464  00836A  0E01               	movlw	high _tmpBlock
 20465  00836C  20F4               	addwfc	prodh,w,c
 20466  00836E  6EDA               	movwf	fsr2h,c
 20467  008370  0101               	movlb	1	; () banked
 20468  008372  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 20469  008374  C126  F12A         	movff	CCM_Enc@headerLen,??_CCM_Enc
 20470  008378  0101               	movlb	1	; () banked
 20471  00837A  6B2B               	clrf	(??_CCM_Enc+1)& (0+255),b
 20472  00837C  0101               	movlb	1	; () banked
 20473  00837E  272A               	addwf	??_CCM_Enc& (0+255),f,b
 20474  008380  0E00               	movlw	0
 20475  008382  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 20476  008384  0101               	movlb	1	; () banked
 20477  008386  512E               	movf	CCM_Enc@i& (0+255),w,b
 20478  008388  0101               	movlb	1	; () banked
 20479  00838A  272A               	addwf	??_CCM_Enc& (0+255),f,b
 20480  00838C  0E00               	movlw	0
 20481  00838E  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 20482  008390  0101               	movlb	1	; () banked
 20483  008392  512A               	movf	??_CCM_Enc& (0+255),w,b
 20484  008394  0101               	movlb	1	; () banked
 20485  008396  2524               	addwf	CCM_Enc@text& (0+255),w,b
 20486  008398  6EE1               	movwf	fsr1l,c
 20487  00839A  0101               	movlb	1	; () banked
 20488  00839C  512B               	movf	(??_CCM_Enc+1)& (0+255),w,b
 20489  00839E  0101               	movlb	1	; () banked
 20490  0083A0  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20491  0083A2  6EE2               	movwf	fsr1h,c
 20492  0083A4  CFDF FFE7          	movff	indf2,indf1
 20493                           
 20494                           ; BSR set to: 1
 20495  0083A8  0101               	movlb	1	; () banked
 20496  0083AA  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 20497  0083AC  D7D3               	goto	l15954
 20498  0083AE                     l15964:
 20499                           
 20500                           ; BSR set to: 1
 20501                           ;drv_mrf_miwi_security.c: 256: }
 20502                           ;drv_mrf_miwi_security.c: 258: for(i = 0; i < 4-1; i++)
 20503  0083AE  0E00               	movlw	0
 20504  0083B0  0101               	movlb	1	; () banked
 20505  0083B2  6F2E               	movwf	CCM_Enc@i& (0+255),b
 20506  0083B4                     l15966:
 20507                           
 20508                           ; BSR set to: 1
 20509  0083B4  0E02               	movlw	2
 20510  0083B6  0101               	movlb	1	; () banked
 20511  0083B8  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 20512  0083BA  D001               	goto	l15970
 20513  0083BC  D02D               	goto	l15980
 20514  0083BE                     l15970:
 20515                           
 20516                           ; BSR set to: 1
 20517                           ;drv_mrf_miwi_security.c: 259: {
 20518                           ;drv_mrf_miwi_security.c: 260: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 20519  0083BE  0101               	movlb	1	; () banked
 20520  0083C0  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 20521  0083C2  0101               	movlb	1	; () banked
 20522  0083C4  5D2E               	subwf	CCM_Enc@i& (0+255),w,b
 20523  0083C6  A0D8               	btfss	status,0,c
 20524  0083C8  D006               	goto	l15974
 20525                           
 20526                           ; BSR set to: 1
 20527  0083CA  0E00               	movlw	0
 20528  0083CC  0101               	movlb	1	; () banked
 20529  0083CE  6F2D               	movwf	(_CCM_Enc$1978+1)& (0+255),b
 20530  0083D0  0E00               	movlw	0
 20531  0083D2  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 20532  0083D4  D013               	goto	l486
 20533  0083D6                     l15974:
 20534                           
 20535                           ; BSR set to: 1
 20536  0083D6  0101               	movlb	1	; () banked
 20537  0083D8  512E               	movf	CCM_Enc@i& (0+255),w,b
 20538  0083DA  0D01               	mullw	1
 20539  0083DC  50F3               	movf	prodl,w,c
 20540  0083DE  0101               	movlb	1	; () banked
 20541  0083E0  2524               	addwf	CCM_Enc@text& (0+255),w,b
 20542  0083E2  6ED9               	movwf	fsr2l,c
 20543  0083E4  50F4               	movf	prodh,w,c
 20544  0083E6  0101               	movlb	1	; () banked
 20545  0083E8  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20546  0083EA  6EDA               	movwf	fsr2h,c
 20547  0083EC  50DF               	movf	indf2,w,c
 20548  0083EE  0101               	movlb	1	; () banked
 20549  0083F0  6F2A               	movwf	??_CCM_Enc& (0+255),b
 20550  0083F2  0101               	movlb	1	; () banked
 20551  0083F4  512A               	movf	??_CCM_Enc& (0+255),w,b
 20552  0083F6  0101               	movlb	1	; () banked
 20553  0083F8  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 20554  0083FA  6B2D               	clrf	(_CCM_Enc$1978+1)& (0+255),b
 20555  0083FC                     l486:
 20556                           
 20557                           ; BSR set to: 1
 20558  0083FC  0101               	movlb	1	; () banked
 20559  0083FE  512E               	movf	CCM_Enc@i& (0+255),w,b
 20560  008400  0D01               	mullw	1
 20561  008402  0EEC               	movlw	low _tmpBlock
 20562  008404  24F3               	addwf	prodl,w,c
 20563  008406  6ED9               	movwf	fsr2l,c
 20564  008408  0E01               	movlw	high _tmpBlock
 20565  00840A  20F4               	addwfc	prodh,w,c
 20566  00840C  6EDA               	movwf	fsr2h,c
 20567  00840E  C12C  FFDF         	movff	_CCM_Enc$1978,indf2
 20568                           
 20569                           ; BSR set to: 1
 20570  008412  0101               	movlb	1	; () banked
 20571  008414  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 20572  008416  D7CE               	goto	l15966
 20573  008418                     l15980:
 20574                           
 20575                           ; BSR set to: 1
 20576                           ;drv_mrf_miwi_security.c: 261: }
 20577                           ;drv_mrf_miwi_security.c: 263: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 20578  008418  0101               	movlb	1	; () banked
 20579  00841A  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 20580  00841C  0D01               	mullw	1
 20581  00841E  50F3               	movf	prodl,w,c
 20582  008420  0101               	movlb	1	; () banked
 20583  008422  2524               	addwf	CCM_Enc@text& (0+255),w,b
 20584  008424  0101               	movlb	1	; () banked
 20585  008426  6F17               	movwf	CTR@text& (0+255),b
 20586  008428  50F4               	movf	prodh,w,c
 20587  00842A  0101               	movlb	1	; () banked
 20588  00842C  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 20589  00842E  0101               	movlb	1	; () banked
 20590  008430  6F18               	movwf	(CTR@text+1)& (0+255),b
 20591  008432  0101               	movlb	1	; () banked
 20592  008434  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 20593  008436  0F04               	addlw	4
 20594  008438  0101               	movlb	1	; () banked
 20595  00843A  6F19               	movwf	CTR@len& (0+255),b
 20596  00843C  C128  F11A         	movff	CCM_Enc@key,CTR@key
 20597  008440  C129  F11B         	movff	CCM_Enc@key+1,CTR@key+1
 20598  008444  0EEC               	movlw	low _tmpBlock
 20599  008446  0101               	movlb	1	; () banked
 20600  008448  6F1C               	movwf	CTR@nounce& (0+255),b
 20601  00844A  0E01               	movlw	high _tmpBlock
 20602  00844C  0101               	movlb	1	; () banked
 20603  00844E  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 20604  008450  EC55  F043         	call	_CTR	;wreg free
 20605  008454  0012               	return		;funcret
 20606  008456                     __end_of_CCM_Enc:
 20607                           	opt stack 0
 20608                           tblptru	equ	0xFF8
 20609                           tblptrh	equ	0xFF7
 20610                           tblptrl	equ	0xFF6
 20611                           tablat	equ	0xFF5
 20612                           prodh	equ	0xFF4
 20613                           prodl	equ	0xFF3
 20614                           intcon	equ	0xFF2
 20615                           intcon2	equ	0xFF1
 20616                           intcon3	equ	0xFF0
 20617                           indf0	equ	0xFEF
 20618                           postinc0	equ	0xFEE
 20619                           plusw0	equ	0xFEB
 20620                           fsr0h	equ	0xFEA
 20621                           fsr0l	equ	0xFE9
 20622                           wreg	equ	0xFE8
 20623                           indf1	equ	0xFE7
 20624                           postinc1	equ	0xFE6
 20625                           postdec1	equ	0xFE5
 20626                           fsr1h	equ	0xFE2
 20627                           fsr1l	equ	0xFE1
 20628                           indf2	equ	0xFDF
 20629                           postinc2	equ	0xFDE
 20630                           postdec2	equ	0xFDD
 20631                           plusw2	equ	0xFDB
 20632                           fsr2h	equ	0xFDA
 20633                           fsr2l	equ	0xFD9
 20634                           status	equ	0xFD8
 20635                           
 20636 ;; *************** function _MiMAC_ReceivedPacket *****************
 20637 ;; Defined at:
 20638 ;;		line 850 in file "src/miwi/drv_mrf_miwi_89xa.c"
 20639 ;; Parameters:    Size  Location     Type
 20640 ;;		None
 20641 ;; Auto vars:     Size  Location     Type
 20642 ;;  FrameCounter    4   63[BANK1 ] struct .
 20643 ;;  k               1   67[BANK1 ] unsigned char 
 20644 ;;  PayloadIndex    1   69[BANK1 ] unsigned char 
 20645 ;;  j               1   68[BANK1 ] unsigned char 
 20646 ;;  currentTick     4   59[BANK1 ] struct _MIWI_TICK
 20647 ;;  i               1   70[BANK1 ] unsigned char 
 20648 ;; Return value:  Size  Location     Type
 20649 ;;                  1    wreg      unsigned char 
 20650 ;; Registers used:
 20651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20652 ;; Tracked objects:
 20653 ;;		On entry : 0/0
 20654 ;;		On exit  : 0/0
 20655 ;;		Unchanged: 0/0
 20656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20658 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20659 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20660 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20661 ;;Total ram usage:       20 bytes
 20662 ;; Hardware stack levels used:    1
 20663 ;; Hardware stack levels required when called:   19
 20664 ;; This function calls:
 20665 ;;		_CCM_Dec
 20666 ;;		_MiWi_TickGet
 20667 ;;		_isSameAddress
 20668 ;; This function is called by:
 20669 ;;		_MiWiTasks
 20670 ;; This function uses a non-reentrant model
 20671 ;;
 20672                           
 20673                           	psect	text40
 20674  005DE2                     __ptext40:
 20675                           	opt stack 0
 20676  005DE2                     _MiMAC_ReceivedPacket:
 20677                           	opt stack 10
 20678                           
 20679                           ;drv_mrf_miwi_89xa.c: 852: uint8_t i;
 20680                           ;drv_mrf_miwi_89xa.c: 853: MIWI_TICK currentTick;
 20681                           ;drv_mrf_miwi_89xa.c: 857: for(i = 0; i < 5; i++)
 20682                           
 20683                           ;incstack = 0
 20684  005DE2  0E00               	movlw	0
 20685  005DE4  0101               	movlb	1	; () banked
 20686  005DE6  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 20687  005DE8                     l16574:
 20688                           
 20689                           ; BSR set to: 1
 20690  005DE8  0E04               	movlw	4
 20691  005DEA  0101               	movlb	1	; () banked
 20692  005DEC  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 20693  005DEE  D001               	goto	l16578
 20694  005DF0  D084               	goto	l16592
 20695  005DF2                     l16578:
 20696                           
 20697                           ; BSR set to: 1
 20698                           ;drv_mrf_miwi_89xa.c: 858: {
 20699                           ;drv_mrf_miwi_89xa.c: 859: currentTick = MiWi_TickGet();
 20700  005DF2  EC57  F052         	call	_MiWi_TickGet	;wreg free
 20701  005DF6  C100  F13B         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 20702  005DFA  C101  F13C         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 20703  005DFE  C102  F13D         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 20704  005E02  C103  F13E         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 20705                           
 20706                           ;drv_mrf_miwi_89xa.c: 860: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 20707                           ;drv_mrf_miwi_89xa.c: 861: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 20708  005E06  0101               	movlb	1	; () banked
 20709  005E08  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20710  005E0A  0D06               	mullw	6
 20711  005E0C  0E48               	movlw	low _AckInfo
 20712  005E0E  24F3               	addwf	prodl,w,c
 20713  005E10  6ED9               	movwf	fsr2l,c
 20714  005E12  0E02               	movlw	high _AckInfo
 20715  005E14  20F4               	addwfc	prodh,w,c
 20716  005E16  6EDA               	movwf	fsr2h,c
 20717  005E18  50DF               	movf	indf2,w,c
 20718  005E1A  B4D8               	btfsc	status,2,c
 20719  005E1C  D06B               	goto	l16588
 20720                           
 20721                           ; BSR set to: 1
 20722  005E1E  0101               	movlb	1	; () banked
 20723  005E20  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20724  005E22  0D06               	mullw	6
 20725  005E24  0E02               	movlw	2
 20726  005E26  26F3               	addwf	prodl,f,c
 20727  005E28  0E00               	movlw	0
 20728  005E2A  22F4               	addwfc	prodh,f,c
 20729  005E2C  0E48               	movlw	low _AckInfo
 20730  005E2E  24F3               	addwf	prodl,w,c
 20731  005E30  6ED9               	movwf	fsr2l,c
 20732  005E32  0E02               	movlw	high _AckInfo
 20733  005E34  20F4               	addwfc	prodh,w,c
 20734  005E36  6EDA               	movwf	fsr2h,c
 20735  005E38  0101               	movlb	1	; () banked
 20736  005E3A  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 20737  005E3C  5CDE               	subwf	postinc2,w,c
 20738  005E3E  0101               	movlb	1	; () banked
 20739  005E40  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 20740  005E42  58DE               	subwfb	postinc2,w,c
 20741  005E44  0101               	movlb	1	; () banked
 20742  005E46  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 20743  005E48  58DE               	subwfb	postinc2,w,c
 20744  005E4A  0101               	movlb	1	; () banked
 20745  005E4C  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 20746  005E4E  58DE               	subwfb	postinc2,w,c
 20747  005E50  B0D8               	btfsc	status,0,c
 20748  005E52  D050               	goto	l16588
 20749                           
 20750                           ; BSR set to: 1
 20751  005E54  0101               	movlb	1	; () banked
 20752  005E56  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20753  005E58  0D06               	mullw	6
 20754  005E5A  0E02               	movlw	2
 20755  005E5C  26F3               	addwf	prodl,f,c
 20756  005E5E  0E00               	movlw	0
 20757  005E60  22F4               	addwfc	prodh,f,c
 20758  005E62  0E48               	movlw	low _AckInfo
 20759  005E64  24F3               	addwf	prodl,w,c
 20760  005E66  6ED9               	movwf	fsr2l,c
 20761  005E68  0E02               	movlw	high _AckInfo
 20762  005E6A  20F4               	addwfc	prodh,w,c
 20763  005E6C  6EDA               	movwf	fsr2h,c
 20764  005E6E  CFDE F133          	movff	postinc2,??_MiMAC_ReceivedPacket
 20765  005E72  CFDE F134          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 20766  005E76  CFDE F135          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 20767  005E7A  CFDE F136          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 20768  005E7E  0101               	movlb	1	; () banked
 20769  005E80  1F33               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20770  005E82  1F34               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20771  005E84  1F35               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 20772  005E86  1F36               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 20773  005E88  2B33               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20774  005E8A  0E00               	movlw	0
 20775  005E8C  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20776  005E8E  2335               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 20777  005E90  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 20778  005E92  0101               	movlb	1	; () banked
 20779  005E94  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 20780  005E96  0101               	movlb	1	; () banked
 20781  005E98  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 20782  005E9A  0101               	movlb	1	; () banked
 20783  005E9C  6F37               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 20784  005E9E  0101               	movlb	1	; () banked
 20785  005EA0  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 20786  005EA2  0101               	movlb	1	; () banked
 20787  005EA4  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 20788  005EA6  0101               	movlb	1	; () banked
 20789  005EA8  6F38               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 20790  005EAA  0101               	movlb	1	; () banked
 20791  005EAC  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 20792  005EAE  0101               	movlb	1	; () banked
 20793  005EB0  2135               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 20794  005EB2  0101               	movlb	1	; () banked
 20795  005EB4  6F39               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 20796  005EB6  0101               	movlb	1	; () banked
 20797  005EB8  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 20798  005EBA  0101               	movlb	1	; () banked
 20799  005EBC  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 20800  005EBE  0101               	movlb	1	; () banked
 20801  005EC0  6F3A               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 20802  005EC2  0101               	movlb	1	; () banked
 20803  005EC4  513A               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 20804  005EC6  E10B               	bnz	u17520
 20805  005EC8  0E21               	movlw	33
 20806  005ECA  0101               	movlb	1	; () banked
 20807  005ECC  5D37               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 20808  005ECE  0EA1               	movlw	161
 20809  005ED0  0101               	movlb	1	; () banked
 20810  005ED2  5938               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 20811  005ED4  0E07               	movlw	7
 20812  005ED6  0101               	movlb	1	; () banked
 20813  005ED8  5939               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 20814  005EDA  A0D8               	btfss	status,0,c
 20815  005EDC  D00B               	goto	l16588
 20816  005EDE                     u17520:
 20817                           
 20818                           ; BSR set to: 1
 20819                           ;drv_mrf_miwi_89xa.c: 862: {
 20820                           ;drv_mrf_miwi_89xa.c: 863: AckInfo[i].Valid = 0;
 20821  005EDE  0101               	movlb	1	; () banked
 20822  005EE0  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20823  005EE2  0D06               	mullw	6
 20824  005EE4  0E48               	movlw	low _AckInfo
 20825  005EE6  24F3               	addwf	prodl,w,c
 20826  005EE8  6ED9               	movwf	fsr2l,c
 20827  005EEA  0E02               	movlw	high _AckInfo
 20828  005EEC  20F4               	addwfc	prodh,w,c
 20829  005EEE  6EDA               	movwf	fsr2h,c
 20830  005EF0  0E00               	movlw	0
 20831  005EF2  6EDF               	movwf	indf2,c
 20832  005EF4                     l16588:
 20833                           
 20834                           ; BSR set to: 1
 20835  005EF4  0101               	movlb	1	; () banked
 20836  005EF6  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 20837  005EF8  D777               	goto	l16574
 20838  005EFA                     l16592:
 20839                           
 20840                           ; BSR set to: 1
 20841                           ;drv_mrf_miwi_89xa.c: 864: }
 20842                           ;drv_mrf_miwi_89xa.c: 865: }
 20843                           ;drv_mrf_miwi_89xa.c: 868: if( ReceivedBankIndex != 0xFF )
 20844  005EFA  0101               	movlb	1	; () banked
 20845  005EFC  29C6               	incf	_ReceivedBankIndex& (0+255),w,b
 20846  005EFE  B4D8               	btfsc	status,2,c
 20847  005F00  D002               	goto	l16598
 20848                           
 20849                           ; BSR set to: 1
 20850                           ;drv_mrf_miwi_89xa.c: 869: {
 20851                           ;drv_mrf_miwi_89xa.c: 870: return 0;
 20852  005F02  0E00               	movlw	0
 20853                           
 20854                           ; BSR set to: 1
 20855  005F04  0012               	return	
 20856  005F06                     l16598:
 20857                           
 20858                           ; BSR set to: 1
 20859                           ;drv_mrf_miwi_89xa.c: 871: }
 20860                           ;drv_mrf_miwi_89xa.c: 873: for(i = 0; i < 2; i++)
 20861  005F06  0E00               	movlw	0
 20862  005F08  0101               	movlb	1	; () banked
 20863  005F0A  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 20864  005F0C                     l16600:
 20865                           
 20866                           ; BSR set to: 1
 20867  005F0C  0E01               	movlw	1
 20868  005F0E  0101               	movlb	1	; () banked
 20869  005F10  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 20870  005F12  D001               	goto	l16604
 20871  005F14  D1C0               	goto	l16702
 20872  005F16                     l16604:
 20873                           
 20874                           ; BSR set to: 1
 20875                           ;drv_mrf_miwi_89xa.c: 874: {
 20876                           ;drv_mrf_miwi_89xa.c: 875: if( RxPacket[i].flags.bits.Valid )
 20877  005F16  0101               	movlb	1	; () banked
 20878  005F18  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20879  005F1A  0D42               	mullw	66
 20880  005F1C  0E00               	movlw	low _RxPacket
 20881  005F1E  24F3               	addwf	prodl,w,c
 20882  005F20  6ED9               	movwf	fsr2l,c
 20883  005F22  0E03               	movlw	high _RxPacket
 20884  005F24  20F4               	addwfc	prodh,w,c
 20885  005F26  6EDA               	movwf	fsr2h,c
 20886  005F28  0103               	movlb	3	; () banked
 20887  005F2A  A0DF               	btfss	indf2,0,c
 20888  005F2C  D1B1               	goto	l16698
 20889                           
 20890                           ; BSR set to: 3
 20891                           ;drv_mrf_miwi_89xa.c: 876: {
 20892                           ;drv_mrf_miwi_89xa.c: 877: uint8_t PayloadIndex;
 20893                           ;drv_mrf_miwi_89xa.c: 878: uint8_t j;
 20894                           ;drv_mrf_miwi_89xa.c: 880: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 20895  005F2E  0101               	movlb	1	; () banked
 20896  005F30  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20897  005F32  0D42               	mullw	66
 20898  005F34  0E01               	movlw	1
 20899  005F36  26F3               	addwf	prodl,f,c
 20900  005F38  0E00               	movlw	0
 20901  005F3A  22F4               	addwfc	prodh,f,c
 20902  005F3C  0E00               	movlw	low _RxPacket
 20903  005F3E  24F3               	addwf	prodl,w,c
 20904  005F40  6ED9               	movwf	fsr2l,c
 20905  005F42  0E03               	movlw	high _RxPacket
 20906  005F44  20F4               	addwfc	prodh,w,c
 20907  005F46  6EDA               	movwf	fsr2h,c
 20908  005F48  50DF               	movf	indf2,w,c
 20909  005F4A  0101               	movlb	1	; () banked
 20910  005F4C  6F9A               	movwf	_MACRxPacket& (0+255),b
 20911                           
 20912                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 20913  005F4E  0101               	movlb	1	; () banked
 20914  005F50  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20915  005F52  0D42               	mullw	66
 20916  005F54  0E41               	movlw	65
 20917  005F56  26F3               	addwf	prodl,f,c
 20918  005F58  0E00               	movlw	0
 20919  005F5A  22F4               	addwfc	prodh,f,c
 20920  005F5C  0E00               	movlw	low _RxPacket
 20921  005F5E  24F3               	addwf	prodl,w,c
 20922  005F60  6ED9               	movwf	fsr2l,c
 20923  005F62  0E03               	movlw	high _RxPacket
 20924  005F64  20F4               	addwfc	prodh,w,c
 20925  005F66  6EDA               	movwf	fsr2h,c
 20926  005F68  50DF               	movf	indf2,w,c
 20927  005F6A  0101               	movlb	1	; () banked
 20928  005F6C  6F9F               	movwf	(_MACRxPacket+5)& (0+255),b
 20929                           
 20930                           ; BSR set to: 1
 20931                           ;drv_mrf_miwi_89xa.c: 882: PayloadIndex = 2;
 20932  005F6E  0E02               	movlw	2
 20933  005F70  0101               	movlb	1	; () banked
 20934  005F72  6F45               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 20935                           
 20936                           ; BSR set to: 1
 20937                           ;drv_mrf_miwi_89xa.c: 884: if( MACRxPacket.flags.bits.destPrsnt )
 20938  005F74  0101               	movlb	1	; () banked
 20939  005F76  AD9A               	btfss	_MACRxPacket& (0+255),6,b
 20940  005F78  D007               	goto	l16614
 20941                           
 20942                           ; BSR set to: 1
 20943                           ;drv_mrf_miwi_89xa.c: 885: {
 20944                           ;drv_mrf_miwi_89xa.c: 886: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 20945  005F7A  0101               	movlb	1	; () banked
 20946  005F7C  31AE               	rrcf	_MACInitParams& (0+255),w,b
 20947  005F7E  32E8               	rrcf	wreg,f,c
 20948  005F80  32E8               	rrcf	wreg,f,c
 20949  005F82  0B0F               	andlw	15
 20950  005F84  0101               	movlb	1	; () banked
 20951  005F86  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 20952  005F88                     l16614:
 20953                           
 20954                           ; BSR set to: 1
 20955                           ;drv_mrf_miwi_89xa.c: 887: }
 20956                           ;drv_mrf_miwi_89xa.c: 889: if( MACRxPacket.flags.bits.sourcePrsnt )
 20957  005F88  0101               	movlb	1	; () banked
 20958  005F8A  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 20959  005F8C  D028               	goto	l16620
 20960                           
 20961                           ; BSR set to: 1
 20962                           ;drv_mrf_miwi_89xa.c: 890: {
 20963                           ;drv_mrf_miwi_89xa.c: 891: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 20964  005F8E  0101               	movlb	1	; () banked
 20965  005F90  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 20966  005F92  0D01               	mullw	1
 20967  005F94  0E01               	movlw	1
 20968  005F96  26F3               	addwf	prodl,f,c
 20969  005F98  0E00               	movlw	0
 20970  005F9A  22F4               	addwfc	prodh,f,c
 20971  005F9C  0E00               	movlw	low _RxPacket
 20972  005F9E  0101               	movlb	1	; () banked
 20973  005FA0  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 20974  005FA2  0E03               	movlw	high _RxPacket
 20975  005FA4  0101               	movlb	1	; () banked
 20976  005FA6  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 20977  005FA8  50F3               	movf	prodl,w,c
 20978  005FAA  0101               	movlb	1	; () banked
 20979  005FAC  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 20980  005FAE  50F4               	movf	prodh,w,c
 20981  005FB0  0101               	movlb	1	; () banked
 20982  005FB2  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 20983  005FB4  0101               	movlb	1	; () banked
 20984  005FB6  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 20985  005FB8  0D42               	mullw	66
 20986  005FBA  50F3               	movf	prodl,w,c
 20987  005FBC  0101               	movlb	1	; () banked
 20988  005FBE  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 20989  005FC0  0101               	movlb	1	; () banked
 20990  005FC2  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 20991  005FC4  50F4               	movf	prodh,w,c
 20992  005FC6  0101               	movlb	1	; () banked
 20993  005FC8  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 20994  005FCA  0101               	movlb	1	; () banked
 20995  005FCC  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 20996                           
 20997                           ; BSR set to: 1
 20998                           ;drv_mrf_miwi_89xa.c: 892: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 20999  005FCE  0101               	movlb	1	; () banked
 21000  005FD0  31AE               	rrcf	_MACInitParams& (0+255),w,b
 21001  005FD2  32E8               	rrcf	wreg,f,c
 21002  005FD4  32E8               	rrcf	wreg,f,c
 21003  005FD6  0B0F               	andlw	15
 21004  005FD8  0101               	movlb	1	; () banked
 21005  005FDA  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21006                           
 21007                           ;drv_mrf_miwi_89xa.c: 893: }
 21008  005FDC  D006               	goto	l16622
 21009  005FDE                     l16620:
 21010                           
 21011                           ; BSR set to: 1
 21012                           ;drv_mrf_miwi_89xa.c: 894: else
 21013                           ;drv_mrf_miwi_89xa.c: 895: {
 21014                           ;drv_mrf_miwi_89xa.c: 896: MACRxPacket.SourceAddress = (0);
 21015  005FDE  0E00               	movlw	0
 21016  005FE0  0101               	movlb	1	; () banked
 21017  005FE2  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 21018  005FE4  0E00               	movlw	0
 21019  005FE6  0101               	movlb	1	; () banked
 21020  005FE8  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 21021  005FEA                     l16622:
 21022                           
 21023                           ; BSR set to: 1
 21024                           ;drv_mrf_miwi_89xa.c: 897: }
 21025                           ;drv_mrf_miwi_89xa.c: 901: if( MACRxPacket.flags.bits.secEn )
 21026  005FEA  0101               	movlb	1	; () banked
 21027  005FEC  A79A               	btfss	_MACRxPacket& (0+255),3,b
 21028  005FEE  D126               	goto	l16686
 21029                           
 21030                           ; BSR set to: 1
 21031                           ;drv_mrf_miwi_89xa.c: 902: {
 21032                           ;drv_mrf_miwi_89xa.c: 904: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 21033  005FF0  0101               	movlb	1	; () banked
 21034  005FF2  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21035  005FF4  0D42               	mullw	66
 21036  005FF6  0101               	movlb	1	; () banked
 21037  005FF8  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21038  005FFA  0101               	movlb	1	; () banked
 21039  005FFC  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21040  005FFE  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21041  006000  0E05               	movlw	5
 21042  006002  0101               	movlb	1	; () banked
 21043  006004  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21044  006006  0E00               	movlw	0
 21045  006008  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21046  00600A  0E00               	movlw	low _RxPacket
 21047  00600C  0101               	movlb	1	; () banked
 21048  00600E  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21049  006010  0E03               	movlw	high _RxPacket
 21050  006012  0101               	movlb	1	; () banked
 21051  006014  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21052  006016  0101               	movlb	1	; () banked
 21053  006018  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21054  00601A  0101               	movlb	1	; () banked
 21055  00601C  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21056  00601E  0101               	movlb	1	; () banked
 21057  006020  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21058  006022  0101               	movlb	1	; () banked
 21059  006024  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21060  006026  50F3               	movf	prodl,w,c
 21061  006028  0101               	movlb	1	; () banked
 21062  00602A  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21063  00602C  6ED9               	movwf	fsr2l,c
 21064  00602E  50F4               	movf	prodh,w,c
 21065  006030  0101               	movlb	1	; () banked
 21066  006032  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21067  006034  6EDA               	movwf	fsr2h,c
 21068  006036  50DF               	movf	indf2,w,c
 21069  006038  B4D8               	btfsc	status,2,c
 21070  00603A  D00D               	goto	l356
 21071                           
 21072                           ; BSR set to: 1
 21073                           ;drv_mrf_miwi_89xa.c: 905: {
 21074                           ;drv_mrf_miwi_89xa.c: 906: RxPacket[i].flags.Val = 0;
 21075  00603C  0101               	movlb	1	; () banked
 21076  00603E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21077  006040  0D42               	mullw	66
 21078  006042  0E00               	movlw	low _RxPacket
 21079  006044  24F3               	addwf	prodl,w,c
 21080  006046  6ED9               	movwf	fsr2l,c
 21081  006048  0E03               	movlw	high _RxPacket
 21082  00604A  20F4               	addwfc	prodh,w,c
 21083  00604C  6EDA               	movwf	fsr2h,c
 21084  00604E  0E00               	movlw	0
 21085  006050  6EDF               	movwf	indf2,c
 21086                           
 21087                           ; BSR set to: 1
 21088                           ;drv_mrf_miwi_89xa.c: 907: return 0;
 21089  006052  0E00               	movlw	0
 21090                           
 21091                           ; BSR set to: 1
 21092  006054  0012               	return	
 21093  006056                     l356:
 21094                           
 21095                           ; BSR set to: 1
 21096                           ;drv_mrf_miwi_89xa.c: 908: }
 21097                           ;drv_mrf_miwi_89xa.c: 911: if( MACRxPacket.flags.bits.sourcePrsnt )
 21098  006056  0101               	movlb	1	; () banked
 21099  006058  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 21100  00605A  D0A9               	goto	l16674
 21101                           
 21102                           ; BSR set to: 1
 21103                           ;drv_mrf_miwi_89xa.c: 912: {
 21104                           ;drv_mrf_miwi_89xa.c: 913: for(j = 0; j < 64; j++)
 21105  00605C  0E00               	movlw	0
 21106  00605E  0101               	movlb	1	; () banked
 21107  006060  6F44               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 21108  006062                     l16634:
 21109                           
 21110                           ; BSR set to: 1
 21111  006062  0E3F               	movlw	63
 21112  006064  0101               	movlb	1	; () banked
 21113  006066  6544               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 21114  006068  D001               	goto	l16638
 21115  00606A  D02A               	goto	l16648
 21116  00606C                     l16638:
 21117                           
 21118                           ; BSR set to: 1
 21119                           ;drv_mrf_miwi_89xa.c: 914: {
 21120                           ;drv_mrf_miwi_89xa.c: 915: if( (ConnectionTable[j].status.bits.isValid) &&
 21121                           ;drv_mrf_miwi_89xa.c: 916: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 21122  00606C  0101               	movlb	1	; () banked
 21123  00606E  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21124  006070  0D09               	mullw	9
 21125  006072  0E08               	movlw	8
 21126  006074  26F3               	addwf	prodl,f,c
 21127  006076  0E00               	movlw	0
 21128  006078  22F4               	addwfc	prodh,f,c
 21129  00607A  0E00               	movlw	low _ConnectionTable
 21130  00607C  24F3               	addwf	prodl,w,c
 21131  00607E  6ED9               	movwf	fsr2l,c
 21132  006080  0E06               	movlw	high _ConnectionTable
 21133  006082  20F4               	addwfc	prodh,w,c
 21134  006084  6EDA               	movwf	fsr2h,c
 21135  006086  AEDF               	btfss	indf2,7,c
 21136  006088  D018               	goto	l16644
 21137                           
 21138                           ; BSR set to: 1
 21139  00608A  0101               	movlb	1	; () banked
 21140  00608C  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21141  00608E  0D09               	mullw	9
 21142  006090  0E04               	movlw	4
 21143  006092  26F3               	addwf	prodl,f,c
 21144  006094  0E00               	movlw	0
 21145  006096  22F4               	addwfc	prodh,f,c
 21146  006098  0E00               	movlw	low _ConnectionTable
 21147  00609A  24F3               	addwf	prodl,w,c
 21148  00609C  0101               	movlb	1	; () banked
 21149  00609E  6F00               	movwf	isSameAddress@Address1& (0+255),b
 21150  0060A0  0E06               	movlw	high _ConnectionTable
 21151  0060A2  20F4               	addwfc	prodh,w,c
 21152  0060A4  0101               	movlb	1	; () banked
 21153  0060A6  6F01               	movwf	(isSameAddress@Address1+1)& (0+255),b
 21154  0060A8  C19B  F102         	movff	_MACRxPacket+1,isSameAddress@Address2
 21155  0060AC  C19C  F103         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 21156  0060B0  ECE5  F054         	call	_isSameAddress	;wreg free
 21157  0060B4  0900               	iorlw	0
 21158  0060B6  A4D8               	btfss	status,2,c
 21159  0060B8  D003               	goto	l16648
 21160  0060BA                     l16644:
 21161  0060BA  0101               	movlb	1	; () banked
 21162  0060BC  2B44               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 21163  0060BE  D7D1               	goto	l16634
 21164  0060C0                     l16648:
 21165                           
 21166                           ;drv_mrf_miwi_89xa.c: 919: }
 21167                           ;drv_mrf_miwi_89xa.c: 920: }
 21168                           ;drv_mrf_miwi_89xa.c: 921: if( j < 64 )
 21169  0060C0  0E40               	movlw	64
 21170  0060C2  0101               	movlb	1	; () banked
 21171  0060C4  6144               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 21172  0060C6  D073               	goto	l16674
 21173                           
 21174                           ; BSR set to: 1
 21175                           ;drv_mrf_miwi_89xa.c: 922: {
 21176                           ;drv_mrf_miwi_89xa.c: 923: API_UINT32_UNION FrameCounter;
 21177                           ;drv_mrf_miwi_89xa.c: 924: uint8_t k;
 21178                           ;drv_mrf_miwi_89xa.c: 926: for(k = 0; k < 4; k++)
 21179  0060C8  0E00               	movlw	0
 21180  0060CA  0101               	movlb	1	; () banked
 21181  0060CC  6F43               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 21182  0060CE                     l16652:
 21183                           
 21184                           ; BSR set to: 1
 21185  0060CE  0E03               	movlw	3
 21186  0060D0  0101               	movlb	1	; () banked
 21187  0060D2  6543               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 21188  0060D4  D001               	goto	l16656
 21189  0060D6  D036               	goto	l16662
 21190  0060D8                     l16656:
 21191                           
 21192                           ; BSR set to: 1
 21193                           ;drv_mrf_miwi_89xa.c: 927: {
 21194                           ;drv_mrf_miwi_89xa.c: 928: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 21195  0060D8  0101               	movlb	1	; () banked
 21196  0060DA  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21197  0060DC  0D42               	mullw	66
 21198  0060DE  0101               	movlb	1	; () banked
 21199  0060E0  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21200  0060E2  C145  F133         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 21201  0060E6  0101               	movlb	1	; () banked
 21202  0060E8  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21203  0060EA  0101               	movlb	1	; () banked
 21204  0060EC  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21205  0060EE  0E00               	movlw	0
 21206  0060F0  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21207  0060F2  0E01               	movlw	1
 21208  0060F4  0101               	movlb	1	; () banked
 21209  0060F6  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21210  0060F8  0E00               	movlw	0
 21211  0060FA  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21212  0060FC  0E00               	movlw	low _RxPacket
 21213  0060FE  0101               	movlb	1	; () banked
 21214  006100  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 21215  006102  0E03               	movlw	high _RxPacket
 21216  006104  0101               	movlb	1	; () banked
 21217  006106  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 21218  006108  0101               	movlb	1	; () banked
 21219  00610A  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21220  00610C  0101               	movlb	1	; () banked
 21221  00610E  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 21222  006110  0101               	movlb	1	; () banked
 21223  006112  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21224  006114  0101               	movlb	1	; () banked
 21225  006116  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 21226  006118  50F3               	movf	prodl,w,c
 21227  00611A  0101               	movlb	1	; () banked
 21228  00611C  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21229  00611E  6ED9               	movwf	fsr2l,c
 21230  006120  50F4               	movf	prodh,w,c
 21231  006122  0101               	movlb	1	; () banked
 21232  006124  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21233  006126  6EDA               	movwf	fsr2h,c
 21234  006128  0101               	movlb	1	; () banked
 21235  00612A  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 21236  00612C  0D01               	mullw	1
 21237  00612E  0E3F               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 21238  006130  24F3               	addwf	prodl,w,c
 21239  006132  6EE1               	movwf	fsr1l,c
 21240  006134  0E01               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 21241  006136  20F4               	addwfc	prodh,w,c
 21242  006138  6EE2               	movwf	fsr1h,c
 21243  00613A  CFDF FFE7          	movff	indf2,indf1
 21244                           
 21245                           ; BSR set to: 1
 21246  00613E  0101               	movlb	1	; () banked
 21247  006140  2B43               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 21248  006142  D7C5               	goto	l16652
 21249  006144                     l16662:
 21250                           
 21251                           ; BSR set to: 1
 21252                           ;drv_mrf_miwi_89xa.c: 929: }
 21253                           ;drv_mrf_miwi_89xa.c: 931: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 21254  006144  0101               	movlb	1	; () banked
 21255  006146  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21256  006148  0D04               	mullw	4
 21257  00614A  0E00               	movlw	low _IncomingFrameCounter
 21258  00614C  24F3               	addwf	prodl,w,c
 21259  00614E  6ED9               	movwf	fsr2l,c
 21260  006150  0E05               	movlw	high _IncomingFrameCounter
 21261  006152  20F4               	addwfc	prodh,w,c
 21262  006154  6EDA               	movwf	fsr2h,c
 21263  006156  50DE               	movf	postinc2,w,c
 21264  006158  0101               	movlb	1	; () banked
 21265  00615A  5D3F               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 21266  00615C  50DE               	movf	postinc2,w,c
 21267  00615E  0101               	movlb	1	; () banked
 21268  006160  5940               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 21269  006162  50DE               	movf	postinc2,w,c
 21270  006164  0101               	movlb	1	; () banked
 21271  006166  5941               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 21272  006168  50DE               	movf	postinc2,w,c
 21273  00616A  0101               	movlb	1	; () banked
 21274  00616C  5942               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 21275  00616E  B0D8               	btfsc	status,0,c
 21276  006170  D00D               	goto	l16672
 21277                           
 21278                           ; BSR set to: 1
 21279                           ;drv_mrf_miwi_89xa.c: 932: {
 21280                           ;drv_mrf_miwi_89xa.c: 933: RxPacket[i].flags.Val = 0;
 21281  006172  0101               	movlb	1	; () banked
 21282  006174  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21283  006176  0D42               	mullw	66
 21284  006178  0E00               	movlw	low _RxPacket
 21285  00617A  24F3               	addwf	prodl,w,c
 21286  00617C  6ED9               	movwf	fsr2l,c
 21287  00617E  0E03               	movlw	high _RxPacket
 21288  006180  20F4               	addwfc	prodh,w,c
 21289  006182  6EDA               	movwf	fsr2h,c
 21290  006184  0E00               	movlw	0
 21291  006186  6EDF               	movwf	indf2,c
 21292                           
 21293                           ; BSR set to: 1
 21294                           ;drv_mrf_miwi_89xa.c: 934: return 0;
 21295  006188  0E00               	movlw	0
 21296                           
 21297                           ; BSR set to: 1
 21298  00618A  0012               	return	
 21299  00618C                     l16672:
 21300                           
 21301                           ; BSR set to: 1
 21302                           ;drv_mrf_miwi_89xa.c: 936: else
 21303                           ;drv_mrf_miwi_89xa.c: 937: {
 21304                           ;drv_mrf_miwi_89xa.c: 938: IncomingFrameCounter[j].Val = FrameCounter.Val;
 21305  00618C  0101               	movlb	1	; () banked
 21306  00618E  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21307  006190  0D04               	mullw	4
 21308  006192  0E00               	movlw	low _IncomingFrameCounter
 21309  006194  24F3               	addwf	prodl,w,c
 21310  006196  6ED9               	movwf	fsr2l,c
 21311  006198  0E05               	movlw	high _IncomingFrameCounter
 21312  00619A  20F4               	addwfc	prodh,w,c
 21313  00619C  6EDA               	movwf	fsr2h,c
 21314  00619E  C13F  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 21315  0061A2  C140  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 21316  0061A6  C141  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 21317  0061AA  C142  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 21318  0061AE                     l16674:
 21319                           
 21320                           ; BSR set to: 1
 21321                           ;drv_mrf_miwi_89xa.c: 939: }
 21322                           ;drv_mrf_miwi_89xa.c: 940: }
 21323                           ;drv_mrf_miwi_89xa.c: 941: }
 21324                           ;drv_mrf_miwi_89xa.c: 944: PayloadIndex += 5;
 21325  0061AE  0E05               	movlw	5
 21326  0061B0  0101               	movlb	1	; () banked
 21327  0061B2  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21328                           
 21329                           ; BSR set to: 1
 21330                           ;drv_mrf_miwi_89xa.c: 966: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 21331  0061B4  0101               	movlb	1	; () banked
 21332  0061B6  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21333  0061B8  0D42               	mullw	66
 21334  0061BA  0E01               	movlw	1
 21335  0061BC  26F3               	addwf	prodl,f,c
 21336  0061BE  0E00               	movlw	0
 21337  0061C0  22F4               	addwfc	prodh,f,c
 21338  0061C2  0E00               	movlw	low _RxPacket
 21339  0061C4  24F3               	addwf	prodl,w,c
 21340  0061C6  0101               	movlb	1	; () banked
 21341  0061C8  6F24               	movwf	CCM_Dec@text& (0+255),b
 21342  0061CA  0E03               	movlw	high _RxPacket
 21343  0061CC  20F4               	addwfc	prodh,w,c
 21344  0061CE  0101               	movlb	1	; () banked
 21345  0061D0  6F25               	movwf	(CCM_Dec@text+1)& (0+255),b
 21346  0061D2  C145  F126         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 21347  0061D6  0101               	movlb	1	; () banked
 21348  0061D8  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21349  0061DA  0D42               	mullw	66
 21350  0061DC  0E41               	movlw	65
 21351  0061DE  26F3               	addwf	prodl,f,c
 21352  0061E0  0E00               	movlw	0
 21353  0061E2  22F4               	addwfc	prodh,f,c
 21354  0061E4  0E00               	movlw	low _RxPacket
 21355  0061E6  24F3               	addwf	prodl,w,c
 21356  0061E8  6ED9               	movwf	fsr2l,c
 21357  0061EA  0E03               	movlw	high _RxPacket
 21358  0061EC  20F4               	addwfc	prodh,w,c
 21359  0061EE  6EDA               	movwf	fsr2h,c
 21360  0061F0  50DF               	movf	indf2,w,c
 21361  0061F2  0101               	movlb	1	; () banked
 21362  0061F4  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21363  0061F6  0101               	movlb	1	; () banked
 21364  0061F8  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21365  0061FA  0800               	sublw	0
 21366  0061FC  0101               	movlb	1	; () banked
 21367  0061FE  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21368  006200  0101               	movlb	1	; () banked
 21369  006202  6F27               	movwf	CCM_Dec@payloadLen& (0+255),b
 21370  006204  0EF1               	movlw	low _key
 21371  006206  0101               	movlb	1	; () banked
 21372  006208  6F28               	movwf	CCM_Dec@key& (0+255),b
 21373  00620A  0E02               	movlw	high _key
 21374  00620C  0101               	movlb	1	; () banked
 21375  00620E  6F29               	movwf	(CCM_Dec@key+1)& (0+255),b
 21376  006210  EC1C  F03D         	call	_CCM_Dec	;wreg free
 21377  006214  0900               	iorlw	0
 21378  006216  A4D8               	btfss	status,2,c
 21379  006218  D00D               	goto	l16684
 21380                           
 21381                           ;drv_mrf_miwi_89xa.c: 967: {
 21382                           ;drv_mrf_miwi_89xa.c: 968: RxPacket[i].flags.Val = 0;
 21383  00621A  0101               	movlb	1	; () banked
 21384  00621C  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21385  00621E  0D42               	mullw	66
 21386  006220  0E00               	movlw	low _RxPacket
 21387  006222  24F3               	addwf	prodl,w,c
 21388  006224  6ED9               	movwf	fsr2l,c
 21389  006226  0E03               	movlw	high _RxPacket
 21390  006228  20F4               	addwfc	prodh,w,c
 21391  00622A  6EDA               	movwf	fsr2h,c
 21392  00622C  0E00               	movlw	0
 21393  00622E  6EDF               	movwf	indf2,c
 21394                           
 21395                           ; BSR set to: 1
 21396                           ;drv_mrf_miwi_89xa.c: 969: return 0;
 21397  006230  0E00               	movlw	0
 21398                           
 21399                           ; BSR set to: 1
 21400  006232  0012               	return	
 21401  006234                     l16684:
 21402                           
 21403                           ;drv_mrf_miwi_89xa.c: 970: }
 21404                           ;drv_mrf_miwi_89xa.c: 987: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 21405  006234  0101               	movlb	1	; () banked
 21406  006236  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21407  006238  0F02               	addlw	2
 21408  00623A  D002               	goto	L14
 21409  00623C                     l16686:
 21410                           
 21411                           ; BSR set to: 1
 21412                           ;drv_mrf_miwi_89xa.c: 989: else
 21413                           ;drv_mrf_miwi_89xa.c: 990: {
 21414                           ;drv_mrf_miwi_89xa.c: 991: MACRxPacket.PayloadLen -= PayloadIndex;
 21415  00623C  0101               	movlb	1	; () banked
 21416  00623E  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21417  006240                     L14:
 21418  006240  0101               	movlb	1	; () banked
 21419  006242  5F9F               	subwf	(_MACRxPacket+5)& (0+255),f,b
 21420                           
 21421                           ; BSR set to: 1
 21422                           ;drv_mrf_miwi_89xa.c: 992: }
 21423                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 21424                           
 21425                           ; BSR set to: 1
 21426  006244  0101               	movlb	1	; () banked
 21427  006246  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21428  006248  0D01               	mullw	1
 21429  00624A  0E01               	movlw	1
 21430  00624C  26F3               	addwf	prodl,f,c
 21431  00624E  0E00               	movlw	0
 21432  006250  22F4               	addwfc	prodh,f,c
 21433  006252  0E00               	movlw	low _RxPacket
 21434  006254  0101               	movlb	1	; () banked
 21435  006256  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21436  006258  0E03               	movlw	high _RxPacket
 21437  00625A  0101               	movlb	1	; () banked
 21438  00625C  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21439  00625E  50F3               	movf	prodl,w,c
 21440  006260  0101               	movlb	1	; () banked
 21441  006262  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21442  006264  50F4               	movf	prodh,w,c
 21443  006266  0101               	movlb	1	; () banked
 21444  006268  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21445  00626A  0101               	movlb	1	; () banked
 21446  00626C  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21447  00626E  0D42               	mullw	66
 21448  006270  50F3               	movf	prodl,w,c
 21449  006272  0101               	movlb	1	; () banked
 21450  006274  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21451  006276  0101               	movlb	1	; () banked
 21452  006278  6F9D               	movwf	(_MACRxPacket+3)& (0+255),b
 21453  00627A  50F4               	movf	prodh,w,c
 21454  00627C  0101               	movlb	1	; () banked
 21455  00627E  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21456  006280  0101               	movlb	1	; () banked
 21457  006282  6F9E               	movwf	(_MACRxPacket+4)& (0+255),b
 21458                           
 21459                           ; BSR set to: 1
 21460                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.RSSIValue = RSSILock;
 21461  006284  C1C5  F1A0         	movff	_RSSILock,_MACRxPacket+6
 21462                           
 21463                           ; BSR set to: 1
 21464                           ;drv_mrf_miwi_89xa.c: 1005: ReceivedBankIndex = i;
 21465  006288  C146  F1C6         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 21466                           
 21467                           ; BSR set to: 1
 21468                           ;drv_mrf_miwi_89xa.c: 1006: return 1;
 21469  00628C  0E01               	movlw	1
 21470                           
 21471                           ; BSR set to: 1
 21472  00628E  0012               	return	
 21473  006290                     l16698:
 21474  006290  0101               	movlb	1	; () banked
 21475  006292  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21476  006294  D63B               	goto	l16600
 21477  006296                     l16702:
 21478                           
 21479                           ; BSR set to: 1
 21480                           ;drv_mrf_miwi_89xa.c: 1007: }
 21481                           ;drv_mrf_miwi_89xa.c: 1008: }
 21482                           ;drv_mrf_miwi_89xa.c: 1010: return 0;
 21483  006296  0E00               	movlw	0
 21484  006298  0012               	return	
 21485  00629A                     __end_of_MiMAC_ReceivedPacket:
 21486                           	opt stack 0
 21487                           tblptru	equ	0xFF8
 21488                           tblptrh	equ	0xFF7
 21489                           tblptrl	equ	0xFF6
 21490                           tablat	equ	0xFF5
 21491                           prodh	equ	0xFF4
 21492                           prodl	equ	0xFF3
 21493                           intcon	equ	0xFF2
 21494                           intcon2	equ	0xFF1
 21495                           intcon3	equ	0xFF0
 21496                           indf0	equ	0xFEF
 21497                           postinc0	equ	0xFEE
 21498                           plusw0	equ	0xFEB
 21499                           fsr0h	equ	0xFEA
 21500                           fsr0l	equ	0xFE9
 21501                           wreg	equ	0xFE8
 21502                           indf1	equ	0xFE7
 21503                           postinc1	equ	0xFE6
 21504                           postdec1	equ	0xFE5
 21505                           fsr1h	equ	0xFE2
 21506                           fsr1l	equ	0xFE1
 21507                           indf2	equ	0xFDF
 21508                           postinc2	equ	0xFDE
 21509                           postdec2	equ	0xFDD
 21510                           plusw2	equ	0xFDB
 21511                           fsr2h	equ	0xFDA
 21512                           fsr2l	equ	0xFD9
 21513                           status	equ	0xFD8
 21514                           
 21515 ;; *************** function _isSameAddress *****************
 21516 ;; Defined at:
 21517 ;;		line 3443 in file "src/miwi/miwi_mesh.c"
 21518 ;; Parameters:    Size  Location     Type
 21519 ;;  Address1        2    0[BANK1 ] PTR unsigned char 
 21520 ;;		 -> ConnectionTable(576), 
 21521 ;;  Address2        2    2[BANK1 ] PTR unsigned char 
 21522 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 21523 ;; Auto vars:     Size  Location     Type
 21524 ;;  i               1    6[BANK1 ] unsigned char 
 21525 ;; Return value:  Size  Location     Type
 21526 ;;                  1    wreg      unsigned char 
 21527 ;; Registers used:
 21528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21529 ;; Tracked objects:
 21530 ;;		On entry : 0/0
 21531 ;;		On exit  : 0/0
 21532 ;;		Unchanged: 0/0
 21533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21534 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21535 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21536 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21537 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21538 ;;Total ram usage:        7 bytes
 21539 ;; Hardware stack levels used:    1
 21540 ;; Hardware stack levels required when called:   16
 21541 ;; This function calls:
 21542 ;;		Nothing
 21543 ;; This function is called by:
 21544 ;;		_MiMAC_ReceivedPacket
 21545 ;; This function uses a non-reentrant model
 21546 ;;
 21547                           
 21548                           	psect	text41
 21549  00A9CA                     __ptext41:
 21550                           	opt stack 0
 21551  00A9CA                     _isSameAddress:
 21552                           	opt stack 12
 21553                           
 21554                           ;miwi_mesh.c: 3445: uint8_t i;
 21555                           ;miwi_mesh.c: 3447: for(i = 0; i < 4; i++)
 21556                           
 21557                           ; BSR set to: 1
 21558                           ;incstack = 0
 21559  00A9CA  0E00               	movlw	0
 21560  00A9CC  0101               	movlb	1	; () banked
 21561  00A9CE  6F06               	movwf	isSameAddress@i& (0+255),b
 21562  00A9D0                     l16158:
 21563                           
 21564                           ; BSR set to: 1
 21565  00A9D0  0E03               	movlw	3
 21566  00A9D2  0101               	movlb	1	; () banked
 21567  00A9D4  6506               	cpfsgt	isSameAddress@i& (0+255),b
 21568  00A9D6  D001               	goto	l16162
 21569  00A9D8  D01F               	goto	l16172
 21570  00A9DA                     l16162:
 21571                           
 21572                           ; BSR set to: 1
 21573                           ;miwi_mesh.c: 3448: {
 21574                           ;miwi_mesh.c: 3449: if( Address1[i] != Address2[i] )
 21575  00A9DA  0101               	movlb	1	; () banked
 21576  00A9DC  5106               	movf	isSameAddress@i& (0+255),w,b
 21577  00A9DE  0D01               	mullw	1
 21578  00A9E0  50F3               	movf	prodl,w,c
 21579  00A9E2  0101               	movlb	1	; () banked
 21580  00A9E4  2502               	addwf	isSameAddress@Address2& (0+255),w,b
 21581  00A9E6  6ED9               	movwf	fsr2l,c
 21582  00A9E8  50F4               	movf	prodh,w,c
 21583  00A9EA  0101               	movlb	1	; () banked
 21584  00A9EC  2103               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 21585  00A9EE  6EDA               	movwf	fsr2h,c
 21586  00A9F0  0101               	movlb	1	; () banked
 21587  00A9F2  5106               	movf	isSameAddress@i& (0+255),w,b
 21588  00A9F4  0D01               	mullw	1
 21589  00A9F6  50F3               	movf	prodl,w,c
 21590  00A9F8  0101               	movlb	1	; () banked
 21591  00A9FA  2500               	addwf	isSameAddress@Address1& (0+255),w,b
 21592  00A9FC  6EE1               	movwf	fsr1l,c
 21593  00A9FE  50F4               	movf	prodh,w,c
 21594  00AA00  0101               	movlb	1	; () banked
 21595  00AA02  2101               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 21596  00AA04  6EE2               	movwf	fsr1h,c
 21597  00AA06  50DE               	movf	postinc2,w,c
 21598  00AA08  18E6               	xorwf	postinc1,w,c
 21599  00AA0A  B4D8               	btfsc	status,2,c
 21600  00AA0C  D002               	goto	l16168
 21601                           
 21602                           ; BSR set to: 1
 21603                           ;miwi_mesh.c: 3450: {
 21604                           ;miwi_mesh.c: 3451: return 0;
 21605  00AA0E  0E00               	movlw	0
 21606                           
 21607                           ; BSR set to: 1
 21608  00AA10  0012               	return	
 21609  00AA12                     l16168:
 21610                           
 21611                           ; BSR set to: 1
 21612  00AA12  0101               	movlb	1	; () banked
 21613  00AA14  2B06               	incf	isSameAddress@i& (0+255),f,b
 21614  00AA16  D7DC               	goto	l16158
 21615  00AA18                     l16172:
 21616                           
 21617                           ; BSR set to: 1
 21618                           ;miwi_mesh.c: 3452: }
 21619                           ;miwi_mesh.c: 3453: }
 21620                           ;miwi_mesh.c: 3454: return 1;
 21621  00AA18  0E01               	movlw	1
 21622  00AA1A  0012               	return	
 21623  00AA1C                     __end_of_isSameAddress:
 21624                           	opt stack 0
 21625                           tblptru	equ	0xFF8
 21626                           tblptrh	equ	0xFF7
 21627                           tblptrl	equ	0xFF6
 21628                           tablat	equ	0xFF5
 21629                           prodh	equ	0xFF4
 21630                           prodl	equ	0xFF3
 21631                           intcon	equ	0xFF2
 21632                           intcon2	equ	0xFF1
 21633                           intcon3	equ	0xFF0
 21634                           indf0	equ	0xFEF
 21635                           postinc0	equ	0xFEE
 21636                           plusw0	equ	0xFEB
 21637                           fsr0h	equ	0xFEA
 21638                           fsr0l	equ	0xFE9
 21639                           wreg	equ	0xFE8
 21640                           indf1	equ	0xFE7
 21641                           postinc1	equ	0xFE6
 21642                           postdec1	equ	0xFE5
 21643                           fsr1h	equ	0xFE2
 21644                           fsr1l	equ	0xFE1
 21645                           indf2	equ	0xFDF
 21646                           postinc2	equ	0xFDE
 21647                           postdec2	equ	0xFDD
 21648                           plusw2	equ	0xFDB
 21649                           fsr2h	equ	0xFDA
 21650                           fsr2l	equ	0xFD9
 21651                           status	equ	0xFD8
 21652                           
 21653 ;; *************** function _CCM_Dec *****************
 21654 ;; Defined at:
 21655 ;;		line 298 in file "src/miwi/drv_mrf_miwi_security.c"
 21656 ;; Parameters:    Size  Location     Type
 21657 ;;  text            2   36[BANK1 ] PTR unsigned char 
 21658 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 21659 ;;  headerLen       1   38[BANK1 ] unsigned char 
 21660 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 21661 ;;  key             2   40[BANK1 ] PTR unsigned char 
 21662 ;;		 -> key(8), 
 21663 ;; Auto vars:     Size  Location     Type
 21664 ;;  i               1   50[BANK1 ] unsigned char 
 21665 ;; Return value:  Size  Location     Type
 21666 ;;                  1    wreg      unsigned char 
 21667 ;; Registers used:
 21668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21669 ;; Tracked objects:
 21670 ;;		On entry : 0/0
 21671 ;;		On exit  : 0/0
 21672 ;;		Unchanged: 0/0
 21673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21674 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21675 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21676 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21677 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21678 ;;Total ram usage:       15 bytes
 21679 ;; Hardware stack levels used:    1
 21680 ;; Hardware stack levels required when called:   18
 21681 ;; This function calls:
 21682 ;;		_CBC_MAC
 21683 ;;		_CTR
 21684 ;; This function is called by:
 21685 ;;		_MiMAC_ReceivedPacket
 21686 ;; This function uses a non-reentrant model
 21687 ;;
 21688                           
 21689                           	psect	text42
 21690  007A38                     __ptext42:
 21691                           	opt stack 0
 21692  007A38                     _CCM_Dec:
 21693                           	opt stack 10
 21694                           
 21695                           ;drv_mrf_miwi_security.c: 300: uint8_t i;
 21696                           ;drv_mrf_miwi_security.c: 307: for(i = 0; i < 4-1; i++)
 21697                           
 21698                           ; BSR set to: 1
 21699                           ;incstack = 0
 21700  007A38  0E00               	movlw	0
 21701  007A3A  0101               	movlb	1	; () banked
 21702  007A3C  6F32               	movwf	CCM_Dec@i& (0+255),b
 21703  007A3E                     l16178:
 21704                           
 21705                           ; BSR set to: 1
 21706  007A3E  0E02               	movlw	2
 21707  007A40  0101               	movlb	1	; () banked
 21708  007A42  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 21709  007A44  D001               	goto	l16182
 21710  007A46  D02D               	goto	l16192
 21711  007A48                     l16182:
 21712                           
 21713                           ; BSR set to: 1
 21714                           ;drv_mrf_miwi_security.c: 308: {
 21715                           ;drv_mrf_miwi_security.c: 309: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21716  007A48  0101               	movlb	1	; () banked
 21717  007A4A  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 21718  007A4C  0101               	movlb	1	; () banked
 21719  007A4E  5D32               	subwf	CCM_Dec@i& (0+255),w,b
 21720  007A50  A0D8               	btfss	status,0,c
 21721  007A52  D006               	goto	l16186
 21722                           
 21723                           ; BSR set to: 1
 21724  007A54  0E00               	movlw	0
 21725  007A56  0101               	movlb	1	; () banked
 21726  007A58  6F31               	movwf	(_CCM_Dec$1986+1)& (0+255),b
 21727  007A5A  0E00               	movlw	0
 21728  007A5C  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 21729  007A5E  D013               	goto	l495
 21730  007A60                     l16186:
 21731                           
 21732                           ; BSR set to: 1
 21733  007A60  0101               	movlb	1	; () banked
 21734  007A62  5132               	movf	CCM_Dec@i& (0+255),w,b
 21735  007A64  0D01               	mullw	1
 21736  007A66  50F3               	movf	prodl,w,c
 21737  007A68  0101               	movlb	1	; () banked
 21738  007A6A  2524               	addwf	CCM_Dec@text& (0+255),w,b
 21739  007A6C  6ED9               	movwf	fsr2l,c
 21740  007A6E  50F4               	movf	prodh,w,c
 21741  007A70  0101               	movlb	1	; () banked
 21742  007A72  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21743  007A74  6EDA               	movwf	fsr2h,c
 21744  007A76  50DF               	movf	indf2,w,c
 21745  007A78  0101               	movlb	1	; () banked
 21746  007A7A  6F2A               	movwf	??_CCM_Dec& (0+255),b
 21747  007A7C  0101               	movlb	1	; () banked
 21748  007A7E  512A               	movf	??_CCM_Dec& (0+255),w,b
 21749  007A80  0101               	movlb	1	; () banked
 21750  007A82  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 21751  007A84  6B31               	clrf	(_CCM_Dec$1986+1)& (0+255),b
 21752  007A86                     l495:
 21753                           
 21754                           ; BSR set to: 1
 21755  007A86  0101               	movlb	1	; () banked
 21756  007A88  5132               	movf	CCM_Dec@i& (0+255),w,b
 21757  007A8A  0D01               	mullw	1
 21758  007A8C  0EEC               	movlw	low _tmpBlock
 21759  007A8E  24F3               	addwf	prodl,w,c
 21760  007A90  6ED9               	movwf	fsr2l,c
 21761  007A92  0E01               	movlw	high _tmpBlock
 21762  007A94  20F4               	addwfc	prodh,w,c
 21763  007A96  6EDA               	movwf	fsr2h,c
 21764  007A98  C130  FFDF         	movff	_CCM_Dec$1986,indf2
 21765                           
 21766                           ; BSR set to: 1
 21767  007A9C  0101               	movlb	1	; () banked
 21768  007A9E  2B32               	incf	CCM_Dec@i& (0+255),f,b
 21769  007AA0  D7CE               	goto	l16178
 21770  007AA2                     l16192:
 21771                           
 21772                           ; BSR set to: 1
 21773                           ;drv_mrf_miwi_security.c: 310: }
 21774                           ;drv_mrf_miwi_security.c: 311: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 21775  007AA2  0101               	movlb	1	; () banked
 21776  007AA4  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 21777  007AA6  0D01               	mullw	1
 21778  007AA8  50F3               	movf	prodl,w,c
 21779  007AAA  0101               	movlb	1	; () banked
 21780  007AAC  2524               	addwf	CCM_Dec@text& (0+255),w,b
 21781  007AAE  0101               	movlb	1	; () banked
 21782  007AB0  6F17               	movwf	CTR@text& (0+255),b
 21783  007AB2  50F4               	movf	prodh,w,c
 21784  007AB4  0101               	movlb	1	; () banked
 21785  007AB6  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21786  007AB8  0101               	movlb	1	; () banked
 21787  007ABA  6F18               	movwf	(CTR@text+1)& (0+255),b
 21788  007ABC  C127  F119         	movff	CCM_Dec@payloadLen,CTR@len
 21789  007AC0  C128  F11A         	movff	CCM_Dec@key,CTR@key
 21790  007AC4  C129  F11B         	movff	CCM_Dec@key+1,CTR@key+1
 21791  007AC8  0EEC               	movlw	low _tmpBlock
 21792  007ACA  0101               	movlb	1	; () banked
 21793  007ACC  6F1C               	movwf	CTR@nounce& (0+255),b
 21794  007ACE  0E01               	movlw	high _tmpBlock
 21795  007AD0  0101               	movlb	1	; () banked
 21796  007AD2  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 21797  007AD4  EC55  F043         	call	_CTR	;wreg free
 21798                           
 21799                           ;drv_mrf_miwi_security.c: 313: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 21800  007AD8  C124  F117         	movff	CCM_Dec@text,CBC_MAC@text
 21801  007ADC  C125  F118         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 21802  007AE0  0101               	movlb	1	; () banked
 21803  007AE2  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 21804  007AE4  0101               	movlb	1	; () banked
 21805  007AE6  2527               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 21806  007AE8  0FFE               	addlw	254
 21807  007AEA  0101               	movlb	1	; () banked
 21808  007AEC  6F19               	movwf	CBC_MAC@len& (0+255),b
 21809  007AEE  C128  F11A         	movff	CCM_Dec@key,CBC_MAC@key
 21810  007AF2  C129  F11B         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 21811  007AF6  0EEC               	movlw	low _tmpBlock
 21812  007AF8  0101               	movlb	1	; () banked
 21813  007AFA  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 21814  007AFC  0E01               	movlw	high _tmpBlock
 21815  007AFE  0101               	movlb	1	; () banked
 21816  007B00  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 21817  007B02  ECF7  F044         	call	_CBC_MAC	;wreg free
 21818                           
 21819                           ;drv_mrf_miwi_security.c: 314: for(i = 0; i < 2; i++)
 21820  007B06  0E00               	movlw	0
 21821  007B08  0101               	movlb	1	; () banked
 21822  007B0A  6F32               	movwf	CCM_Dec@i& (0+255),b
 21823  007B0C                     l16198:
 21824                           
 21825                           ; BSR set to: 1
 21826  007B0C  0E01               	movlw	1
 21827  007B0E  0101               	movlb	1	; () banked
 21828  007B10  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 21829  007B12  D001               	goto	l16202
 21830  007B14  D03A               	goto	l16212
 21831  007B16                     l16202:
 21832                           
 21833                           ; BSR set to: 1
 21834                           ;drv_mrf_miwi_security.c: 315: {
 21835                           ;drv_mrf_miwi_security.c: 316: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 21836  007B16  0EFE               	movlw	254
 21837  007B18  0101               	movlb	1	; () banked
 21838  007B1A  6F2A               	movwf	??_CCM_Dec& (0+255),b
 21839  007B1C  0EFF               	movlw	255
 21840  007B1E  0101               	movlb	1	; () banked
 21841  007B20  6F2B               	movwf	(??_CCM_Dec+1)& (0+255),b
 21842  007B22  0101               	movlb	1	; () banked
 21843  007B24  5127               	movf	CCM_Dec@payloadLen& (0+255),w,b
 21844  007B26  C126  F12C         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 21845  007B2A  0101               	movlb	1	; () banked
 21846  007B2C  6B2D               	clrf	(??_CCM_Dec+3)& (0+255),b
 21847  007B2E  0101               	movlb	1	; () banked
 21848  007B30  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 21849  007B32  0E00               	movlw	0
 21850  007B34  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 21851  007B36  0101               	movlb	1	; () banked
 21852  007B38  5132               	movf	CCM_Dec@i& (0+255),w,b
 21853  007B3A  0101               	movlb	1	; () banked
 21854  007B3C  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 21855  007B3E  0E00               	movlw	0
 21856  007B40  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 21857  007B42  0101               	movlb	1	; () banked
 21858  007B44  512A               	movf	??_CCM_Dec& (0+255),w,b
 21859  007B46  0101               	movlb	1	; () banked
 21860  007B48  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 21861  007B4A  0101               	movlb	1	; () banked
 21862  007B4C  512B               	movf	(??_CCM_Dec+1)& (0+255),w,b
 21863  007B4E  0101               	movlb	1	; () banked
 21864  007B50  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 21865  007B52  0101               	movlb	1	; () banked
 21866  007B54  512C               	movf	(??_CCM_Dec+2)& (0+255),w,b
 21867  007B56  0101               	movlb	1	; () banked
 21868  007B58  2524               	addwf	CCM_Dec@text& (0+255),w,b
 21869  007B5A  6ED9               	movwf	fsr2l,c
 21870  007B5C  0101               	movlb	1	; () banked
 21871  007B5E  512D               	movf	(??_CCM_Dec+3)& (0+255),w,b
 21872  007B60  0101               	movlb	1	; () banked
 21873  007B62  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21874  007B64  6EDA               	movwf	fsr2h,c
 21875  007B66  0101               	movlb	1	; () banked
 21876  007B68  5132               	movf	CCM_Dec@i& (0+255),w,b
 21877  007B6A  0D01               	mullw	1
 21878  007B6C  0EEC               	movlw	low _tmpBlock
 21879  007B6E  24F3               	addwf	prodl,w,c
 21880  007B70  6EE1               	movwf	fsr1l,c
 21881  007B72  0E01               	movlw	high _tmpBlock
 21882  007B74  20F4               	addwfc	prodh,w,c
 21883  007B76  6EE2               	movwf	fsr1h,c
 21884  007B78  50DE               	movf	postinc2,w,c
 21885  007B7A  18E6               	xorwf	postinc1,w,c
 21886  007B7C  B4D8               	btfsc	status,2,c
 21887  007B7E  D002               	goto	l16208
 21888                           
 21889                           ; BSR set to: 1
 21890                           ;drv_mrf_miwi_security.c: 317: {
 21891                           ;drv_mrf_miwi_security.c: 321: return 0;
 21892  007B80  0E00               	movlw	0
 21893                           
 21894                           ; BSR set to: 1
 21895  007B82  0012               	return	
 21896  007B84                     l16208:
 21897                           
 21898                           ; BSR set to: 1
 21899  007B84  0101               	movlb	1	; () banked
 21900  007B86  2B32               	incf	CCM_Dec@i& (0+255),f,b
 21901  007B88  D7C1               	goto	l16198
 21902  007B8A                     l16212:
 21903                           
 21904                           ; BSR set to: 1
 21905                           ;drv_mrf_miwi_security.c: 322: }
 21906                           ;drv_mrf_miwi_security.c: 323: }
 21907                           ;drv_mrf_miwi_security.c: 327: return 1;
 21908  007B8A  0E01               	movlw	1
 21909  007B8C  0012               	return	
 21910  007B8E                     __end_of_CCM_Dec:
 21911                           	opt stack 0
 21912                           tblptru	equ	0xFF8
 21913                           tblptrh	equ	0xFF7
 21914                           tblptrl	equ	0xFF6
 21915                           tablat	equ	0xFF5
 21916                           prodh	equ	0xFF4
 21917                           prodl	equ	0xFF3
 21918                           intcon	equ	0xFF2
 21919                           intcon2	equ	0xFF1
 21920                           intcon3	equ	0xFF0
 21921                           indf0	equ	0xFEF
 21922                           postinc0	equ	0xFEE
 21923                           plusw0	equ	0xFEB
 21924                           fsr0h	equ	0xFEA
 21925                           fsr0l	equ	0xFE9
 21926                           wreg	equ	0xFE8
 21927                           indf1	equ	0xFE7
 21928                           postinc1	equ	0xFE6
 21929                           postdec1	equ	0xFE5
 21930                           fsr1h	equ	0xFE2
 21931                           fsr1l	equ	0xFE1
 21932                           indf2	equ	0xFDF
 21933                           postinc2	equ	0xFDE
 21934                           postdec2	equ	0xFDD
 21935                           plusw2	equ	0xFDB
 21936                           fsr2h	equ	0xFDA
 21937                           fsr2l	equ	0xFD9
 21938                           status	equ	0xFD8
 21939                           
 21940 ;; *************** function _CTR *****************
 21941 ;; Defined at:
 21942 ;;		line 117 in file "src/miwi/drv_mrf_miwi_security.c"
 21943 ;; Parameters:    Size  Location     Type
 21944 ;;  text            2   23[BANK1 ] PTR unsigned char 
 21945 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 21946 ;;  len             1   25[BANK1 ] unsigned char 
 21947 ;;  key             2   26[BANK1 ] PTR unsigned char 
 21948 ;;		 -> key(8), 
 21949 ;;  nounce          2   28[BANK1 ] PTR unsigned char 
 21950 ;;		 -> tmpBlock(4), 
 21951 ;; Auto vars:     Size  Location     Type
 21952 ;;  j               1   35[BANK1 ] unsigned char 
 21953 ;;  i               1   34[BANK1 ] unsigned char 
 21954 ;;  block           1   33[BANK1 ] unsigned char 
 21955 ;; Return value:  Size  Location     Type
 21956 ;;		None               void
 21957 ;; Registers used:
 21958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21959 ;; Tracked objects:
 21960 ;;		On entry : 0/0
 21961 ;;		On exit  : 0/0
 21962 ;;		Unchanged: 0/0
 21963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21964 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21965 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21966 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21967 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21968 ;;Total ram usage:       13 bytes
 21969 ;; Hardware stack levels used:    1
 21970 ;; Hardware stack levels required when called:   17
 21971 ;; This function calls:
 21972 ;;		___awdiv
 21973 ;;		_encode
 21974 ;; This function is called by:
 21975 ;;		_CCM_Enc
 21976 ;;		_CCM_Dec
 21977 ;; This function uses a non-reentrant model
 21978 ;;
 21979                           
 21980                           	psect	text43
 21981  0086AA                     __ptext43:
 21982                           	opt stack 0
 21983  0086AA                     _CTR:
 21984                           	opt stack 7
 21985                           
 21986                           ;drv_mrf_miwi_security.c: 119: uint8_t block = len/4+1;
 21987                           
 21988                           ; BSR set to: 1
 21989                           ;incstack = 0
 21990  0086AA  C119  F106         	movff	CTR@len,___awdiv@dividend
 21991  0086AE  0101               	movlb	1	; () banked
 21992  0086B0  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 21993  0086B2  0E00               	movlw	0
 21994  0086B4  0101               	movlb	1	; () banked
 21995  0086B6  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 21996  0086B8  0E04               	movlw	4
 21997  0086BA  6F08               	movwf	___awdiv@divisor& (0+255),b
 21998  0086BC  EC81  F04B         	call	___awdiv	;wreg free
 21999  0086C0  0101               	movlb	1	; () banked
 22000  0086C2  2906               	incf	?___awdiv& (0+255),w,b
 22001  0086C4  0101               	movlb	1	; () banked
 22002  0086C6  6F21               	movwf	CTR@block& (0+255),b
 22003                           
 22004                           ; BSR set to: 1
 22005                           ;drv_mrf_miwi_security.c: 120: uint8_t i, j;
 22006                           ;drv_mrf_miwi_security.c: 127: for(i = 0; i < block; i++)
 22007  0086C8  0E00               	movlw	0
 22008  0086CA  0101               	movlb	1	; () banked
 22009  0086CC  6F22               	movwf	CTR@i& (0+255),b
 22010  0086CE  D076               	goto	l15834
 22011  0086D0                     l15802:
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;drv_mrf_miwi_security.c: 128: {
 22015                           ;drv_mrf_miwi_security.c: 129: for(j = 0; j < 4-1; j++)
 22016  0086D0  0E00               	movlw	0
 22017  0086D2  0101               	movlb	1	; () banked
 22018  0086D4  6F23               	movwf	CTR@j& (0+255),b
 22019  0086D6                     l15804:
 22020                           
 22021                           ; BSR set to: 1
 22022  0086D6  0E02               	movlw	2
 22023  0086D8  0101               	movlb	1	; () banked
 22024  0086DA  6523               	cpfsgt	CTR@j& (0+255),b
 22025  0086DC  D001               	goto	l15808
 22026  0086DE  D019               	goto	l460
 22027  0086E0                     l15808:
 22028                           
 22029                           ; BSR set to: 1
 22030                           ;drv_mrf_miwi_security.c: 130: {
 22031                           ;drv_mrf_miwi_security.c: 131: tmpBlock[j] = nounce[j];
 22032  0086E0  0101               	movlb	1	; () banked
 22033  0086E2  5123               	movf	CTR@j& (0+255),w,b
 22034  0086E4  0D01               	mullw	1
 22035  0086E6  50F3               	movf	prodl,w,c
 22036  0086E8  0101               	movlb	1	; () banked
 22037  0086EA  251C               	addwf	CTR@nounce& (0+255),w,b
 22038  0086EC  6ED9               	movwf	fsr2l,c
 22039  0086EE  50F4               	movf	prodh,w,c
 22040  0086F0  0101               	movlb	1	; () banked
 22041  0086F2  211D               	addwfc	(CTR@nounce+1)& (0+255),w,b
 22042  0086F4  6EDA               	movwf	fsr2h,c
 22043  0086F6  0101               	movlb	1	; () banked
 22044  0086F8  5123               	movf	CTR@j& (0+255),w,b
 22045  0086FA  0D01               	mullw	1
 22046  0086FC  0EEC               	movlw	low _tmpBlock
 22047  0086FE  24F3               	addwf	prodl,w,c
 22048  008700  6EE1               	movwf	fsr1l,c
 22049  008702  0E01               	movlw	high _tmpBlock
 22050  008704  20F4               	addwfc	prodh,w,c
 22051  008706  6EE2               	movwf	fsr1h,c
 22052  008708  CFDF FFE7          	movff	indf2,indf1
 22053                           
 22054                           ; BSR set to: 1
 22055  00870C  0101               	movlb	1	; () banked
 22056  00870E  2B23               	incf	CTR@j& (0+255),f,b
 22057  008710  D7E2               	goto	l15804
 22058  008712                     l460:
 22059                           
 22060                           ; BSR set to: 1
 22061                           ;drv_mrf_miwi_security.c: 132: }
 22062                           ;drv_mrf_miwi_security.c: 133: tmpBlock[4-1] = i;
 22063  008712  C122  F1EF         	movff	CTR@i,_tmpBlock+3
 22064                           
 22065                           ; BSR set to: 1
 22066                           ;drv_mrf_miwi_security.c: 134: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 22067  008716  0EEC               	movlw	low _tmpBlock
 22068  008718  0101               	movlb	1	; () banked
 22069  00871A  6F00               	movwf	encode@text& (0+255),b
 22070  00871C  0E01               	movlw	high _tmpBlock
 22071  00871E  0101               	movlb	1	; () banked
 22072  008720  6F01               	movwf	(encode@text+1)& (0+255),b
 22073  008722  C11A  F102         	movff	CTR@key,encode@key
 22074  008726  C11B  F103         	movff	CTR@key+1,encode@key+1
 22075  00872A  EC3E  F037         	call	_encode	;wreg free
 22076                           
 22077                           ;drv_mrf_miwi_security.c: 135: for(j = 0; j < 4; j++)
 22078  00872E  0E00               	movlw	0
 22079  008730  0101               	movlb	1	; () banked
 22080  008732  6F23               	movwf	CTR@j& (0+255),b
 22081  008734                     l15818:
 22082                           
 22083                           ; BSR set to: 1
 22084  008734  0E03               	movlw	3
 22085  008736  0101               	movlb	1	; () banked
 22086  008738  6523               	cpfsgt	CTR@j& (0+255),b
 22087  00873A  D001               	goto	l15822
 22088  00873C  D03D               	goto	l15832
 22089  00873E                     l15822:
 22090                           
 22091                           ; BSR set to: 1
 22092                           ;drv_mrf_miwi_security.c: 136: {
 22093                           ;drv_mrf_miwi_security.c: 137: if( (i * 4 + j) >= len )
 22094  00873E  0101               	movlb	1	; () banked
 22095  008740  5119               	movf	CTR@len& (0+255),w,b
 22096  008742  0101               	movlb	1	; () banked
 22097  008744  6F1E               	movwf	??_CTR& (0+255),b
 22098  008746  6B1F               	clrf	(??_CTR+1)& (0+255),b
 22099  008748  0101               	movlb	1	; () banked
 22100  00874A  5122               	movf	CTR@i& (0+255),w,b
 22101  00874C  0D04               	mullw	4
 22102  00874E  0101               	movlb	1	; () banked
 22103  008750  5123               	movf	CTR@j& (0+255),w,b
 22104  008752  26F3               	addwf	prodl,f,c
 22105  008754  0E00               	movlw	0
 22106  008756  22F4               	addwfc	prodh,f,c
 22107  008758  0101               	movlb	1	; () banked
 22108  00875A  511E               	movf	??_CTR& (0+255),w,b
 22109  00875C  5CF3               	subwf	prodl,w,c
 22110  00875E  50F4               	movf	prodh,w,c
 22111  008760  0A80               	xorlw	128
 22112  008762  0101               	movlb	1	; () banked
 22113  008764  6F20               	movwf	(??_CTR+2)& (0+255),b
 22114  008766  0101               	movlb	1	; () banked
 22115  008768  511F               	movf	(??_CTR+1)& (0+255),w,b
 22116  00876A  0A80               	xorlw	128
 22117  00876C  0101               	movlb	1	; () banked
 22118  00876E  5920               	subwfb	(??_CTR+2)& (0+255),w,b
 22119  008770  B0D8               	btfsc	status,0,c
 22120  008772  D022               	goto	l15832
 22121                           
 22122                           ; BSR set to: 1
 22123                           ;drv_mrf_miwi_security.c: 140: }
 22124                           ;drv_mrf_miwi_security.c: 141: text[i * 4 + j] ^= tmpBlock[j];
 22125                           
 22126                           ; BSR set to: 1
 22127                           
 22128                           ; BSR set to: 1
 22129                           ;drv_mrf_miwi_security.c: 138: {
 22130                           ;drv_mrf_miwi_security.c: 139: break;
 22131  008774  0101               	movlb	1	; () banked
 22132  008776  5123               	movf	CTR@j& (0+255),w,b
 22133  008778  0D01               	mullw	1
 22134  00877A  0EEC               	movlw	low _tmpBlock
 22135  00877C  24F3               	addwf	prodl,w,c
 22136  00877E  6ED9               	movwf	fsr2l,c
 22137  008780  0E01               	movlw	high _tmpBlock
 22138  008782  20F4               	addwfc	prodh,w,c
 22139  008784  6EDA               	movwf	fsr2h,c
 22140  008786  50DF               	movf	indf2,w,c
 22141  008788  0101               	movlb	1	; () banked
 22142  00878A  6F1E               	movwf	??_CTR& (0+255),b
 22143  00878C  0101               	movlb	1	; () banked
 22144  00878E  5122               	movf	CTR@i& (0+255),w,b
 22145  008790  0D04               	mullw	4
 22146  008792  0101               	movlb	1	; () banked
 22147  008794  5123               	movf	CTR@j& (0+255),w,b
 22148  008796  26F3               	addwf	prodl,f,c
 22149  008798  0E00               	movlw	0
 22150  00879A  22F4               	addwfc	prodh,f,c
 22151  00879C  50F3               	movf	prodl,w,c
 22152  00879E  0101               	movlb	1	; () banked
 22153  0087A0  2517               	addwf	CTR@text& (0+255),w,b
 22154  0087A2  6ED9               	movwf	fsr2l,c
 22155  0087A4  50F4               	movf	prodh,w,c
 22156  0087A6  0101               	movlb	1	; () banked
 22157  0087A8  2118               	addwfc	(CTR@text+1)& (0+255),w,b
 22158  0087AA  6EDA               	movwf	fsr2h,c
 22159  0087AC  0101               	movlb	1	; () banked
 22160  0087AE  511E               	movf	??_CTR& (0+255),w,b
 22161  0087B0  1ADF               	xorwf	indf2,f,c
 22162                           
 22163                           ; BSR set to: 1
 22164  0087B2  0101               	movlb	1	; () banked
 22165  0087B4  2B23               	incf	CTR@j& (0+255),f,b
 22166  0087B6  D7BE               	goto	l15818
 22167  0087B8                     l15832:
 22168                           
 22169                           ; BSR set to: 1
 22170  0087B8  0101               	movlb	1	; () banked
 22171  0087BA  2B22               	incf	CTR@i& (0+255),f,b
 22172  0087BC                     l15834:
 22173                           
 22174                           ; BSR set to: 1
 22175  0087BC  0101               	movlb	1	; () banked
 22176  0087BE  5121               	movf	CTR@block& (0+255),w,b
 22177  0087C0  0101               	movlb	1	; () banked
 22178  0087C2  5D22               	subwf	CTR@i& (0+255),w,b
 22179  0087C4  B0D8               	btfsc	status,0,c
 22180  0087C6  0012               	return	
 22181  0087C8  D783               	goto	l15802
 22182  0087CA                     __end_of_CTR:
 22183                           	opt stack 0
 22184                           tblptru	equ	0xFF8
 22185                           tblptrh	equ	0xFF7
 22186                           tblptrl	equ	0xFF6
 22187                           tablat	equ	0xFF5
 22188                           prodh	equ	0xFF4
 22189                           prodl	equ	0xFF3
 22190                           intcon	equ	0xFF2
 22191                           intcon2	equ	0xFF1
 22192                           intcon3	equ	0xFF0
 22193                           indf0	equ	0xFEF
 22194                           postinc0	equ	0xFEE
 22195                           plusw0	equ	0xFEB
 22196                           fsr0h	equ	0xFEA
 22197                           fsr0l	equ	0xFE9
 22198                           wreg	equ	0xFE8
 22199                           indf1	equ	0xFE7
 22200                           postinc1	equ	0xFE6
 22201                           postdec1	equ	0xFE5
 22202                           fsr1h	equ	0xFE2
 22203                           fsr1l	equ	0xFE1
 22204                           indf2	equ	0xFDF
 22205                           postinc2	equ	0xFDE
 22206                           postdec2	equ	0xFDD
 22207                           plusw2	equ	0xFDB
 22208                           fsr2h	equ	0xFDA
 22209                           fsr2l	equ	0xFD9
 22210                           status	equ	0xFD8
 22211                           
 22212 ;; *************** function _CBC_MAC *****************
 22213 ;; Defined at:
 22214 ;;		line 174 in file "src/miwi/drv_mrf_miwi_security.c"
 22215 ;; Parameters:    Size  Location     Type
 22216 ;;  text            2   23[BANK1 ] PTR unsigned char 
 22217 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 22218 ;;  len             1   25[BANK1 ] unsigned char 
 22219 ;;  key             2   26[BANK1 ] PTR unsigned char 
 22220 ;;		 -> key(8), 
 22221 ;;  MIC             2   28[BANK1 ] PTR unsigned char 
 22222 ;;		 -> tmpBlock(4), 
 22223 ;; Auto vars:     Size  Location     Type
 22224 ;;  i               1   35[BANK1 ] unsigned char 
 22225 ;;  j               1   34[BANK1 ] unsigned char 
 22226 ;;  block           1   33[BANK1 ] unsigned char 
 22227 ;; Return value:  Size  Location     Type
 22228 ;;		None               void
 22229 ;; Registers used:
 22230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22231 ;; Tracked objects:
 22232 ;;		On entry : 0/0
 22233 ;;		On exit  : 0/0
 22234 ;;		Unchanged: 0/0
 22235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22236 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22237 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22238 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22239 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22240 ;;Total ram usage:       13 bytes
 22241 ;; Hardware stack levels used:    1
 22242 ;; Hardware stack levels required when called:   17
 22243 ;; This function calls:
 22244 ;;		___awdiv
 22245 ;;		_encode
 22246 ;; This function is called by:
 22247 ;;		_CCM_Enc
 22248 ;;		_CCM_Dec
 22249 ;; This function uses a non-reentrant model
 22250 ;;
 22251                           
 22252                           	psect	text44
 22253  0089EE                     __ptext44:
 22254                           	opt stack 0
 22255  0089EE                     _CBC_MAC:
 22256                           	opt stack 7
 22257                           
 22258                           ;drv_mrf_miwi_security.c: 179: uint8_t block = len / 4 + 1;
 22259                           
 22260                           ; BSR set to: 1
 22261                           ;incstack = 0
 22262  0089EE  C119  F106         	movff	CBC_MAC@len,___awdiv@dividend
 22263  0089F2  0101               	movlb	1	; () banked
 22264  0089F4  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 22265  0089F6  0E00               	movlw	0
 22266  0089F8  0101               	movlb	1	; () banked
 22267  0089FA  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 22268  0089FC  0E04               	movlw	4
 22269  0089FE  6F08               	movwf	___awdiv@divisor& (0+255),b
 22270  008A00  EC81  F04B         	call	___awdiv	;wreg free
 22271  008A04  0101               	movlb	1	; () banked
 22272  008A06  2906               	incf	?___awdiv& (0+255),w,b
 22273  008A08  0101               	movlb	1	; () banked
 22274  008A0A  6F21               	movwf	CBC_MAC@block& (0+255),b
 22275                           
 22276                           ; BSR set to: 1
 22277                           ;drv_mrf_miwi_security.c: 180: uint8_t i, j;
 22278                           ;drv_mrf_miwi_security.c: 187: for(i = 0; i < 4; i++)
 22279  008A0C  0E00               	movlw	0
 22280  008A0E  0101               	movlb	1	; () banked
 22281  008A10  6F23               	movwf	CBC_MAC@i& (0+255),b
 22282  008A12                     l15840:
 22283                           
 22284                           ; BSR set to: 1
 22285  008A12  0E03               	movlw	3
 22286  008A14  0101               	movlb	1	; () banked
 22287  008A16  6523               	cpfsgt	CBC_MAC@i& (0+255),b
 22288  008A18  D001               	goto	l15844
 22289  008A1A  D010               	goto	l15850
 22290  008A1C                     l15844:
 22291                           
 22292                           ; BSR set to: 1
 22293                           ;drv_mrf_miwi_security.c: 188: {
 22294                           ;drv_mrf_miwi_security.c: 189: MIC[i] = 0;
 22295  008A1C  0101               	movlb	1	; () banked
 22296  008A1E  5123               	movf	CBC_MAC@i& (0+255),w,b
 22297  008A20  0D01               	mullw	1
 22298  008A22  50F3               	movf	prodl,w,c
 22299  008A24  0101               	movlb	1	; () banked
 22300  008A26  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 22301  008A28  6ED9               	movwf	fsr2l,c
 22302  008A2A  50F4               	movf	prodh,w,c
 22303  008A2C  0101               	movlb	1	; () banked
 22304  008A2E  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 22305  008A30  6EDA               	movwf	fsr2h,c
 22306  008A32  0E00               	movlw	0
 22307  008A34  6EDF               	movwf	indf2,c
 22308                           
 22309                           ; BSR set to: 1
 22310  008A36  0101               	movlb	1	; () banked
 22311  008A38  2B23               	incf	CBC_MAC@i& (0+255),f,b
 22312  008A3A  D7EB               	goto	l15840
 22313  008A3C                     l15850:
 22314                           
 22315                           ; BSR set to: 1
 22316                           ;drv_mrf_miwi_security.c: 190: }
 22317                           ;drv_mrf_miwi_security.c: 192: for(i = 0; i < block; i++)
 22318  008A3C  0E00               	movlw	0
 22319  008A3E  0101               	movlb	1	; () banked
 22320  008A40  6F23               	movwf	CBC_MAC@i& (0+255),b
 22321  008A42  D053               	goto	l15872
 22322  008A44                     l15852:
 22323                           
 22324                           ; BSR set to: 1
 22325                           ;drv_mrf_miwi_security.c: 193: {
 22326                           ;drv_mrf_miwi_security.c: 194: for(j = 0; j < 4; j++)
 22327  008A44  0E00               	movlw	0
 22328  008A46  0101               	movlb	1	; () banked
 22329  008A48  6F22               	movwf	CBC_MAC@j& (0+255),b
 22330  008A4A                     l15854:
 22331                           
 22332                           ; BSR set to: 1
 22333  008A4A  0E03               	movlw	3
 22334  008A4C  0101               	movlb	1	; () banked
 22335  008A4E  6522               	cpfsgt	CBC_MAC@j& (0+255),b
 22336  008A50  D001               	goto	l15858
 22337  008A52  D03F               	goto	l15868
 22338  008A54                     l15858:
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;drv_mrf_miwi_security.c: 195: {
 22342                           ;drv_mrf_miwi_security.c: 196: if( (i * 4 + j) >= len )
 22343  008A54  0101               	movlb	1	; () banked
 22344  008A56  5119               	movf	CBC_MAC@len& (0+255),w,b
 22345  008A58  0101               	movlb	1	; () banked
 22346  008A5A  6F1E               	movwf	??_CBC_MAC& (0+255),b
 22347  008A5C  6B1F               	clrf	(??_CBC_MAC+1)& (0+255),b
 22348  008A5E  0101               	movlb	1	; () banked
 22349  008A60  5123               	movf	CBC_MAC@i& (0+255),w,b
 22350  008A62  0D04               	mullw	4
 22351  008A64  0101               	movlb	1	; () banked
 22352  008A66  5122               	movf	CBC_MAC@j& (0+255),w,b
 22353  008A68  26F3               	addwf	prodl,f,c
 22354  008A6A  0E00               	movlw	0
 22355  008A6C  22F4               	addwfc	prodh,f,c
 22356  008A6E  0101               	movlb	1	; () banked
 22357  008A70  511E               	movf	??_CBC_MAC& (0+255),w,b
 22358  008A72  5CF3               	subwf	prodl,w,c
 22359  008A74  50F4               	movf	prodh,w,c
 22360  008A76  0A80               	xorlw	128
 22361  008A78  0101               	movlb	1	; () banked
 22362  008A7A  6F20               	movwf	(??_CBC_MAC+2)& (0+255),b
 22363  008A7C  0101               	movlb	1	; () banked
 22364  008A7E  511F               	movf	(??_CBC_MAC+1)& (0+255),w,b
 22365  008A80  0A80               	xorlw	128
 22366  008A82  0101               	movlb	1	; () banked
 22367  008A84  5920               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 22368  008A86  B0D8               	btfsc	status,0,c
 22369  008A88  D024               	goto	l15868
 22370                           
 22371                           ; BSR set to: 1
 22372                           ;drv_mrf_miwi_security.c: 199: }
 22373                           ;drv_mrf_miwi_security.c: 200: MIC[j] ^= text[i * 4 + j];
 22374                           
 22375                           ; BSR set to: 1
 22376                           
 22377                           ; BSR set to: 1
 22378                           ;drv_mrf_miwi_security.c: 197: {
 22379                           ;drv_mrf_miwi_security.c: 198: break;
 22380  008A8A  0101               	movlb	1	; () banked
 22381  008A8C  5123               	movf	CBC_MAC@i& (0+255),w,b
 22382  008A8E  0D04               	mullw	4
 22383  008A90  0101               	movlb	1	; () banked
 22384  008A92  5122               	movf	CBC_MAC@j& (0+255),w,b
 22385  008A94  26F3               	addwf	prodl,f,c
 22386  008A96  0E00               	movlw	0
 22387  008A98  22F4               	addwfc	prodh,f,c
 22388  008A9A  50F3               	movf	prodl,w,c
 22389  008A9C  0101               	movlb	1	; () banked
 22390  008A9E  2517               	addwf	CBC_MAC@text& (0+255),w,b
 22391  008AA0  6ED9               	movwf	fsr2l,c
 22392  008AA2  50F4               	movf	prodh,w,c
 22393  008AA4  0101               	movlb	1	; () banked
 22394  008AA6  2118               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 22395  008AA8  6EDA               	movwf	fsr2h,c
 22396  008AAA  50DF               	movf	indf2,w,c
 22397  008AAC  0101               	movlb	1	; () banked
 22398  008AAE  6F1E               	movwf	??_CBC_MAC& (0+255),b
 22399  008AB0  0101               	movlb	1	; () banked
 22400  008AB2  5122               	movf	CBC_MAC@j& (0+255),w,b
 22401  008AB4  0D01               	mullw	1
 22402  008AB6  50F3               	movf	prodl,w,c
 22403  008AB8  0101               	movlb	1	; () banked
 22404  008ABA  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 22405  008ABC  6ED9               	movwf	fsr2l,c
 22406  008ABE  50F4               	movf	prodh,w,c
 22407  008AC0  0101               	movlb	1	; () banked
 22408  008AC2  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 22409  008AC4  6EDA               	movwf	fsr2h,c
 22410  008AC6  0101               	movlb	1	; () banked
 22411  008AC8  511E               	movf	??_CBC_MAC& (0+255),w,b
 22412  008ACA  1ADF               	xorwf	indf2,f,c
 22413                           
 22414                           ; BSR set to: 1
 22415  008ACC  0101               	movlb	1	; () banked
 22416  008ACE  2B22               	incf	CBC_MAC@j& (0+255),f,b
 22417  008AD0  D7BC               	goto	l15854
 22418  008AD2                     l15868:
 22419                           
 22420                           ; BSR set to: 1
 22421                           ;drv_mrf_miwi_security.c: 201: }
 22422                           ;drv_mrf_miwi_security.c: 202: encode((uint16_t *)MIC, (uint16_t *)key);
 22423  008AD2  C11C  F100         	movff	CBC_MAC@MIC,encode@text
 22424  008AD6  C11D  F101         	movff	CBC_MAC@MIC+1,encode@text+1
 22425  008ADA  C11A  F102         	movff	CBC_MAC@key,encode@key
 22426  008ADE  C11B  F103         	movff	CBC_MAC@key+1,encode@key+1
 22427  008AE2  EC3E  F037         	call	_encode	;wreg free
 22428  008AE6  0101               	movlb	1	; () banked
 22429  008AE8  2B23               	incf	CBC_MAC@i& (0+255),f,b
 22430  008AEA                     l15872:
 22431                           
 22432                           ; BSR set to: 1
 22433  008AEA  0101               	movlb	1	; () banked
 22434  008AEC  5121               	movf	CBC_MAC@block& (0+255),w,b
 22435  008AEE  0101               	movlb	1	; () banked
 22436  008AF0  5D23               	subwf	CBC_MAC@i& (0+255),w,b
 22437  008AF2  B0D8               	btfsc	status,0,c
 22438  008AF4  0012               	return	
 22439  008AF6  D7A6               	goto	l15852
 22440  008AF8                     __end_of_CBC_MAC:
 22441                           	opt stack 0
 22442                           tblptru	equ	0xFF8
 22443                           tblptrh	equ	0xFF7
 22444                           tblptrl	equ	0xFF6
 22445                           tablat	equ	0xFF5
 22446                           prodh	equ	0xFF4
 22447                           prodl	equ	0xFF3
 22448                           intcon	equ	0xFF2
 22449                           intcon2	equ	0xFF1
 22450                           intcon3	equ	0xFF0
 22451                           indf0	equ	0xFEF
 22452                           postinc0	equ	0xFEE
 22453                           plusw0	equ	0xFEB
 22454                           fsr0h	equ	0xFEA
 22455                           fsr0l	equ	0xFE9
 22456                           wreg	equ	0xFE8
 22457                           indf1	equ	0xFE7
 22458                           postinc1	equ	0xFE6
 22459                           postdec1	equ	0xFE5
 22460                           fsr1h	equ	0xFE2
 22461                           fsr1l	equ	0xFE1
 22462                           indf2	equ	0xFDF
 22463                           postinc2	equ	0xFDE
 22464                           postdec2	equ	0xFDD
 22465                           plusw2	equ	0xFDB
 22466                           fsr2h	equ	0xFDA
 22467                           fsr2l	equ	0xFD9
 22468                           status	equ	0xFD8
 22469                           
 22470 ;; *************** function _encode *****************
 22471 ;; Defined at:
 22472 ;;		line 76 in file "src/miwi/drv_mrf_miwi_security.c"
 22473 ;; Parameters:    Size  Location     Type
 22474 ;;  text            2    0[BANK1 ] PTR unsigned int 
 22475 ;;		 -> tmpBlock(4), 
 22476 ;;  key             2    2[BANK1 ] PTR unsigned int 
 22477 ;;		 -> key(8), 
 22478 ;; Auto vars:     Size  Location     Type
 22479 ;;  sum             2   21[BANK1 ] unsigned int 
 22480 ;;  part2           2   19[BANK1 ] unsigned int 
 22481 ;;  part1           2   17[BANK1 ] unsigned int 
 22482 ;;  delta           2   14[BANK1 ] unsigned int 
 22483 ;;  i               1   16[BANK1 ] unsigned char 
 22484 ;; Return value:  Size  Location     Type
 22485 ;;		None               void
 22486 ;; Registers used:
 22487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22488 ;; Tracked objects:
 22489 ;;		On entry : 0/0
 22490 ;;		On exit  : 0/0
 22491 ;;		Unchanged: 0/0
 22492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22493 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22494 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22495 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22496 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22497 ;;Total ram usage:       23 bytes
 22498 ;; Hardware stack levels used:    1
 22499 ;; Hardware stack levels required when called:   16
 22500 ;; This function calls:
 22501 ;;		Nothing
 22502 ;; This function is called by:
 22503 ;;		_CTR
 22504 ;;		_CBC_MAC
 22505 ;; This function uses a non-reentrant model
 22506 ;;
 22507                           
 22508                           	psect	text45
 22509  006E7C                     __ptext45:
 22510                           	opt stack 0
 22511  006E7C                     _encode:
 22512                           	opt stack 7
 22513                           
 22514                           ;drv_mrf_miwi_security.c: 78: uint16_t part1=text[0], part2=text[1];
 22515                           
 22516                           ; BSR set to: 1
 22517                           ;incstack = 0
 22518  006E7C  C100  FFD9         	movff	encode@text,fsr2l
 22519  006E80  C101  FFDA         	movff	encode@text+1,fsr2h
 22520  006E84  CFDE F111          	movff	postinc2,encode@part1
 22521  006E88  CFDD F112          	movff	postdec2,encode@part1+1
 22522  006E8C  0101               	movlb	1	; () banked
 22523  006E8E  EE20 F002          	lfsr	2,2
 22524  006E92  5100               	movf	encode@text& (0+255),w,b
 22525  006E94  26D9               	addwf	fsr2l,f,c
 22526  006E96  5101               	movf	(encode@text+1)& (0+255),w,b
 22527  006E98  22DA               	addwfc	fsr2h,f,c
 22528  006E9A  CFDE F113          	movff	postinc2,encode@part2
 22529  006E9E  CFDD F114          	movff	postdec2,encode@part2+1
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;drv_mrf_miwi_security.c: 79: uint16_t sum=0, delta=0x9E37;
 22533  006EA2  0E00               	movlw	0
 22534  006EA4  0101               	movlb	1	; () banked
 22535  006EA6  6F16               	movwf	(encode@sum+1)& (0+255),b
 22536  006EA8  0E00               	movlw	0
 22537  006EAA  6F15               	movwf	encode@sum& (0+255),b
 22538                           
 22539                           ; BSR set to: 1
 22540  006EAC  0E9E               	movlw	158
 22541  006EAE  0101               	movlb	1	; () banked
 22542  006EB0  6F0F               	movwf	(encode@delta+1)& (0+255),b
 22543  006EB2  0E37               	movlw	55
 22544  006EB4  6F0E               	movwf	encode@delta& (0+255),b
 22545                           
 22546                           ; BSR set to: 1
 22547                           ;drv_mrf_miwi_security.c: 80: uint8_t i;
 22548                           ;drv_mrf_miwi_security.c: 82: for(i=0; i<32; i++)
 22549  006EB6  0E00               	movlw	0
 22550  006EB8  0101               	movlb	1	; () banked
 22551  006EBA  6F10               	movwf	encode@i& (0+255),b
 22552  006EBC                     l15654:
 22553                           
 22554                           ; BSR set to: 1
 22555  006EBC  0E1F               	movlw	31
 22556  006EBE  0101               	movlb	1	; () banked
 22557  006EC0  6510               	cpfsgt	encode@i& (0+255),b
 22558  006EC2  D001               	goto	l15658
 22559  006EC4  D0D4               	goto	l15668
 22560  006EC6                     l15658:
 22561                           
 22562                           ; BSR set to: 1
 22563                           ;drv_mrf_miwi_security.c: 83: {
 22564                           ;drv_mrf_miwi_security.c: 84: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 22565  006EC6  0E03               	movlw	3
 22566  006EC8  0101               	movlb	1	; () banked
 22567  006ECA  1515               	andwf	encode@sum& (0+255),w,b
 22568  006ECC  0101               	movlb	1	; () banked
 22569  006ECE  6F04               	movwf	??_encode& (0+255),b
 22570  006ED0  0E00               	movlw	0
 22571  006ED2  0101               	movlb	1	; () banked
 22572  006ED4  1516               	andwf	(encode@sum+1)& (0+255),w,b
 22573  006ED6  0101               	movlb	1	; () banked
 22574  006ED8  6F05               	movwf	(??_encode+1)& (0+255),b
 22575  006EDA  90D8               	bcf	status,0,c
 22576  006EDC  0101               	movlb	1	; () banked
 22577  006EDE  3704               	rlcf	??_encode& (0+255),f,b
 22578  006EE0  3705               	rlcf	(??_encode+1)& (0+255),f,b
 22579  006EE2  0101               	movlb	1	; () banked
 22580  006EE4  5104               	movf	??_encode& (0+255),w,b
 22581  006EE6  0101               	movlb	1	; () banked
 22582  006EE8  2502               	addwf	encode@key& (0+255),w,b
 22583  006EEA  6ED9               	movwf	fsr2l,c
 22584  006EEC  0101               	movlb	1	; () banked
 22585  006EEE  5105               	movf	(??_encode+1)& (0+255),w,b
 22586  006EF0  0101               	movlb	1	; () banked
 22587  006EF2  2103               	addwfc	(encode@key+1)& (0+255),w,b
 22588  006EF4  6EDA               	movwf	fsr2h,c
 22589  006EF6  CFDE F106          	movff	postinc2,??_encode+2
 22590  006EFA  CFDD F107          	movff	postdec2,??_encode+3
 22591  006EFE  0101               	movlb	1	; () banked
 22592  006F00  5115               	movf	encode@sum& (0+255),w,b
 22593  006F02  0101               	movlb	1	; () banked
 22594  006F04  2706               	addwf	(??_encode+2)& (0+255),f,b
 22595  006F06  0101               	movlb	1	; () banked
 22596  006F08  5116               	movf	(encode@sum+1)& (0+255),w,b
 22597  006F0A  0101               	movlb	1	; () banked
 22598  006F0C  2307               	addwfc	(??_encode+3)& (0+255),f,b
 22599  006F0E  C113  F108         	movff	encode@part2,??_encode+4
 22600  006F12  C114  F109         	movff	encode@part2+1,??_encode+5
 22601  006F16  0E05               	movlw	5
 22602  006F18  0101               	movlb	1	; () banked
 22603  006F1A  6F0A               	movwf	(??_encode+6)& (0+255),b
 22604  006F1C                     u16215:
 22605  006F1C  0101               	movlb	1	; () banked
 22606  006F1E  90D8               	bcf	status,0,c
 22607  006F20  3309               	rrcf	(??_encode+5)& (0+255),f,b
 22608  006F22  3308               	rrcf	(??_encode+4)& (0+255),f,b
 22609  006F24  0101               	movlb	1	; () banked
 22610  006F26  2F0A               	decfsz	(??_encode+6)& (0+255),f,b
 22611  006F28  D7F9               	goto	u16215
 22612  006F2A  C113  F10B         	movff	encode@part2,??_encode+7
 22613  006F2E  C114  F10C         	movff	encode@part2+1,??_encode+8
 22614  006F32  0101               	movlb	1	; () banked
 22615  006F34  3B0B               	swapf	(??_encode+7)& (0+255),f,b
 22616  006F36  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 22617  006F38  0EF0               	movlw	240
 22618  006F3A  170C               	andwf	(??_encode+8)& (0+255),f,b
 22619  006F3C  510B               	movf	(??_encode+7)& (0+255),w,b
 22620  006F3E  0B0F               	andlw	15
 22621  006F40  130C               	iorwf	(??_encode+8)& (0+255),f,b
 22622  006F42  0EF0               	movlw	240
 22623  006F44  170B               	andwf	(??_encode+7)& (0+255),f,b
 22624  006F46  0101               	movlb	1	; () banked
 22625  006F48  5108               	movf	(??_encode+4)& (0+255),w,b
 22626  006F4A  0101               	movlb	1	; () banked
 22627  006F4C  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 22628  006F4E  0101               	movlb	1	; () banked
 22629  006F50  5109               	movf	(??_encode+5)& (0+255),w,b
 22630  006F52  0101               	movlb	1	; () banked
 22631  006F54  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 22632  006F56  0101               	movlb	1	; () banked
 22633  006F58  5113               	movf	encode@part2& (0+255),w,b
 22634  006F5A  0101               	movlb	1	; () banked
 22635  006F5C  270B               	addwf	(??_encode+7)& (0+255),f,b
 22636  006F5E  0101               	movlb	1	; () banked
 22637  006F60  5114               	movf	(encode@part2+1)& (0+255),w,b
 22638  006F62  0101               	movlb	1	; () banked
 22639  006F64  230C               	addwfc	(??_encode+8)& (0+255),f,b
 22640  006F66  0101               	movlb	1	; () banked
 22641  006F68  5106               	movf	(??_encode+2)& (0+255),w,b
 22642  006F6A  0101               	movlb	1	; () banked
 22643  006F6C  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 22644  006F6E  0101               	movlb	1	; () banked
 22645  006F70  5107               	movf	(??_encode+3)& (0+255),w,b
 22646  006F72  0101               	movlb	1	; () banked
 22647  006F74  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 22648  006F76  0101               	movlb	1	; () banked
 22649  006F78  510B               	movf	(??_encode+7)& (0+255),w,b
 22650  006F7A  0101               	movlb	1	; () banked
 22651  006F7C  2711               	addwf	encode@part1& (0+255),f,b
 22652  006F7E  0101               	movlb	1	; () banked
 22653  006F80  510C               	movf	(??_encode+8)& (0+255),w,b
 22654  006F82  0101               	movlb	1	; () banked
 22655  006F84  2312               	addwfc	(encode@part1+1)& (0+255),f,b
 22656                           
 22657                           ; BSR set to: 1
 22658                           ;drv_mrf_miwi_security.c: 85: sum += delta;
 22659  006F86  0101               	movlb	1	; () banked
 22660  006F88  510E               	movf	encode@delta& (0+255),w,b
 22661  006F8A  0101               	movlb	1	; () banked
 22662  006F8C  2715               	addwf	encode@sum& (0+255),f,b
 22663  006F8E  0101               	movlb	1	; () banked
 22664  006F90  510F               	movf	(encode@delta+1)& (0+255),w,b
 22665  006F92  0101               	movlb	1	; () banked
 22666  006F94  2316               	addwfc	(encode@sum+1)& (0+255),f,b
 22667                           
 22668                           ; BSR set to: 1
 22669                           ;drv_mrf_miwi_security.c: 86: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 22670  006F96  C115  F104         	movff	encode@sum,??_encode
 22671  006F9A  C116  F105         	movff	encode@sum+1,??_encode+1
 22672  006F9E  0E0B               	movlw	11
 22673  006FA0  0101               	movlb	1	; () banked
 22674  006FA2  6F06               	movwf	(??_encode+2)& (0+255),b
 22675  006FA4                     u16225:
 22676  006FA4  0101               	movlb	1	; () banked
 22677  006FA6  90D8               	bcf	status,0,c
 22678  006FA8  3305               	rrcf	(??_encode+1)& (0+255),f,b
 22679  006FAA  3304               	rrcf	??_encode& (0+255),f,b
 22680  006FAC  0101               	movlb	1	; () banked
 22681  006FAE  2F06               	decfsz	(??_encode+2)& (0+255),f,b
 22682  006FB0  D7F9               	goto	u16225
 22683  006FB2  0E03               	movlw	3
 22684  006FB4  0101               	movlb	1	; () banked
 22685  006FB6  1704               	andwf	??_encode& (0+255),f,b
 22686  006FB8  0E00               	movlw	0
 22687  006FBA  1705               	andwf	(??_encode+1)& (0+255),f,b
 22688  006FBC  90D8               	bcf	status,0,c
 22689  006FBE  0101               	movlb	1	; () banked
 22690  006FC0  3704               	rlcf	??_encode& (0+255),f,b
 22691  006FC2  3705               	rlcf	(??_encode+1)& (0+255),f,b
 22692  006FC4  0101               	movlb	1	; () banked
 22693  006FC6  5104               	movf	??_encode& (0+255),w,b
 22694  006FC8  0101               	movlb	1	; () banked
 22695  006FCA  2502               	addwf	encode@key& (0+255),w,b
 22696  006FCC  6ED9               	movwf	fsr2l,c
 22697  006FCE  0101               	movlb	1	; () banked
 22698  006FD0  5105               	movf	(??_encode+1)& (0+255),w,b
 22699  006FD2  0101               	movlb	1	; () banked
 22700  006FD4  2103               	addwfc	(encode@key+1)& (0+255),w,b
 22701  006FD6  6EDA               	movwf	fsr2h,c
 22702  006FD8  CFDE F107          	movff	postinc2,??_encode+3
 22703  006FDC  CFDD F108          	movff	postdec2,??_encode+4
 22704  006FE0  0101               	movlb	1	; () banked
 22705  006FE2  5115               	movf	encode@sum& (0+255),w,b
 22706  006FE4  0101               	movlb	1	; () banked
 22707  006FE6  2707               	addwf	(??_encode+3)& (0+255),f,b
 22708  006FE8  0101               	movlb	1	; () banked
 22709  006FEA  5116               	movf	(encode@sum+1)& (0+255),w,b
 22710  006FEC  0101               	movlb	1	; () banked
 22711  006FEE  2308               	addwfc	(??_encode+4)& (0+255),f,b
 22712  006FF0  C111  F109         	movff	encode@part1,??_encode+5
 22713  006FF4  C112  F10A         	movff	encode@part1+1,??_encode+6
 22714  006FF8  0E05               	movlw	5
 22715  006FFA  0101               	movlb	1	; () banked
 22716  006FFC  6F0B               	movwf	(??_encode+7)& (0+255),b
 22717  006FFE                     u16235:
 22718  006FFE  0101               	movlb	1	; () banked
 22719  007000  90D8               	bcf	status,0,c
 22720  007002  330A               	rrcf	(??_encode+6)& (0+255),f,b
 22721  007004  3309               	rrcf	(??_encode+5)& (0+255),f,b
 22722  007006  0101               	movlb	1	; () banked
 22723  007008  2F0B               	decfsz	(??_encode+7)& (0+255),f,b
 22724  00700A  D7F9               	goto	u16235
 22725  00700C  C111  F10C         	movff	encode@part1,??_encode+8
 22726  007010  C112  F10D         	movff	encode@part1+1,??_encode+9
 22727  007014  0101               	movlb	1	; () banked
 22728  007016  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 22729  007018  3B0D               	swapf	(??_encode+9)& (0+255),f,b
 22730  00701A  0EF0               	movlw	240
 22731  00701C  170D               	andwf	(??_encode+9)& (0+255),f,b
 22732  00701E  510C               	movf	(??_encode+8)& (0+255),w,b
 22733  007020  0B0F               	andlw	15
 22734  007022  130D               	iorwf	(??_encode+9)& (0+255),f,b
 22735  007024  0EF0               	movlw	240
 22736  007026  170C               	andwf	(??_encode+8)& (0+255),f,b
 22737  007028  0101               	movlb	1	; () banked
 22738  00702A  5109               	movf	(??_encode+5)& (0+255),w,b
 22739  00702C  0101               	movlb	1	; () banked
 22740  00702E  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 22741  007030  0101               	movlb	1	; () banked
 22742  007032  510A               	movf	(??_encode+6)& (0+255),w,b
 22743  007034  0101               	movlb	1	; () banked
 22744  007036  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 22745  007038  0101               	movlb	1	; () banked
 22746  00703A  5111               	movf	encode@part1& (0+255),w,b
 22747  00703C  0101               	movlb	1	; () banked
 22748  00703E  270C               	addwf	(??_encode+8)& (0+255),f,b
 22749  007040  0101               	movlb	1	; () banked
 22750  007042  5112               	movf	(encode@part1+1)& (0+255),w,b
 22751  007044  0101               	movlb	1	; () banked
 22752  007046  230D               	addwfc	(??_encode+9)& (0+255),f,b
 22753  007048  0101               	movlb	1	; () banked
 22754  00704A  5107               	movf	(??_encode+3)& (0+255),w,b
 22755  00704C  0101               	movlb	1	; () banked
 22756  00704E  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 22757  007050  0101               	movlb	1	; () banked
 22758  007052  5108               	movf	(??_encode+4)& (0+255),w,b
 22759  007054  0101               	movlb	1	; () banked
 22760  007056  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 22761  007058  0101               	movlb	1	; () banked
 22762  00705A  510C               	movf	(??_encode+8)& (0+255),w,b
 22763  00705C  0101               	movlb	1	; () banked
 22764  00705E  2713               	addwf	encode@part2& (0+255),f,b
 22765  007060  0101               	movlb	1	; () banked
 22766  007062  510D               	movf	(??_encode+9)& (0+255),w,b
 22767  007064  0101               	movlb	1	; () banked
 22768  007066  2314               	addwfc	(encode@part2+1)& (0+255),f,b
 22769                           
 22770                           ; BSR set to: 1
 22771  007068  0101               	movlb	1	; () banked
 22772  00706A  2B10               	incf	encode@i& (0+255),f,b
 22773  00706C  D727               	goto	l15654
 22774  00706E                     l15668:
 22775                           
 22776                           ; BSR set to: 1
 22777                           ;drv_mrf_miwi_security.c: 87: }
 22778                           ;drv_mrf_miwi_security.c: 88: text[0]=part1; text[1]=part2;
 22779  00706E  C100  FFD9         	movff	encode@text,fsr2l
 22780  007072  C101  FFDA         	movff	encode@text+1,fsr2h
 22781  007076  C111  FFDE         	movff	encode@part1,postinc2
 22782  00707A  C112  FFDD         	movff	encode@part1+1,postdec2
 22783                           
 22784                           ; BSR set to: 1
 22785  00707E  0101               	movlb	1	; () banked
 22786  007080  EE20 F002          	lfsr	2,2
 22787  007084  5100               	movf	encode@text& (0+255),w,b
 22788  007086  26D9               	addwf	fsr2l,f,c
 22789  007088  5101               	movf	(encode@text+1)& (0+255),w,b
 22790  00708A  22DA               	addwfc	fsr2h,f,c
 22791  00708C  C113  FFDE         	movff	encode@part2,postinc2
 22792  007090  C114  FFDD         	movff	encode@part2+1,postdec2
 22793                           
 22794                           ; BSR set to: 1
 22795  007094  0012               	return		;funcret
 22796  007096                     __end_of_encode:
 22797                           	opt stack 0
 22798                           tblptru	equ	0xFF8
 22799                           tblptrh	equ	0xFF7
 22800                           tblptrl	equ	0xFF6
 22801                           tablat	equ	0xFF5
 22802                           prodh	equ	0xFF4
 22803                           prodl	equ	0xFF3
 22804                           intcon	equ	0xFF2
 22805                           intcon2	equ	0xFF1
 22806                           intcon3	equ	0xFF0
 22807                           indf0	equ	0xFEF
 22808                           postinc0	equ	0xFEE
 22809                           plusw0	equ	0xFEB
 22810                           fsr0h	equ	0xFEA
 22811                           fsr0l	equ	0xFE9
 22812                           wreg	equ	0xFE8
 22813                           indf1	equ	0xFE7
 22814                           postinc1	equ	0xFE6
 22815                           postdec1	equ	0xFE5
 22816                           fsr1h	equ	0xFE2
 22817                           fsr1l	equ	0xFE1
 22818                           indf2	equ	0xFDF
 22819                           postinc2	equ	0xFDE
 22820                           postdec2	equ	0xFDD
 22821                           plusw2	equ	0xFDB
 22822                           fsr2h	equ	0xFDA
 22823                           fsr2l	equ	0xFD9
 22824                           status	equ	0xFD8
 22825                           
 22826 ;; *************** function _BroadcastJitter *****************
 22827 ;; Defined at:
 22828 ;;		line 247 in file "src/miwi/miwi_mesh.c"
 22829 ;; Parameters:    Size  Location     Type
 22830 ;;  range           1    wreg     unsigned char 
 22831 ;; Auto vars:     Size  Location     Type
 22832 ;;  range           1   26[BANK1 ] unsigned char 
 22833 ;;  t2              4   22[BANK1 ] struct _MIWI_TICK
 22834 ;;  t1              4   18[BANK1 ] struct _MIWI_TICK
 22835 ;;  jitter          1   27[BANK1 ] unsigned char 
 22836 ;; Return value:  Size  Location     Type
 22837 ;;		None               void
 22838 ;; Registers used:
 22839 ;;		wreg, status,2, status,0, cstack
 22840 ;; Tracked objects:
 22841 ;;		On entry : 0/0
 22842 ;;		On exit  : 0/0
 22843 ;;		Unchanged: 0/0
 22844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22846 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22847 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22848 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22849 ;;Total ram usage:       18 bytes
 22850 ;; Hardware stack levels used:    1
 22851 ;; Hardware stack levels required when called:   17
 22852 ;; This function calls:
 22853 ;;		_MiWi_TickGet
 22854 ;;		___lbmod
 22855 ;; This function is called by:
 22856 ;;		_MiWiTasks
 22857 ;; This function uses a non-reentrant model
 22858 ;;
 22859                           
 22860                           	psect	text46
 22861  009936                     __ptext46:
 22862                           	opt stack 0
 22863  009936                     _BroadcastJitter:
 22864                           	opt stack 12
 22865                           
 22866                           ; BSR set to: 1
 22867                           ;incstack = 0
 22868                           ;BroadcastJitter@range stored from wreg
 22869  009936  0101               	movlb	1	; () banked
 22870  009938  6F1A               	movwf	BroadcastJitter@range& (0+255),b
 22871                           
 22872                           ;miwi_mesh.c: 249: uint8_t jitter = TMR1L % range;
 22873  00993A  C11A  F100         	movff	BroadcastJitter@range,___lbmod@divisor	;volatile
 22874  00993E  50CE               	movf	4046,w,c	;volatile
 22875  009940  EC77  F055         	call	___lbmod
 22876  009944  0101               	movlb	1	; () banked
 22877  009946  6F1B               	movwf	BroadcastJitter@jitter& (0+255),b
 22878                           
 22879                           ;miwi_mesh.c: 250: MIWI_TICK t1, t2;
 22880                           ;miwi_mesh.c: 252: while( jitter > 0 )
 22881  009948  D04D               	goto	l16724
 22882  00994A                     l16714:
 22883                           
 22884                           ; BSR set to: 1
 22885                           ;miwi_mesh.c: 253: {
 22886                           ;miwi_mesh.c: 254: jitter--;
 22887  00994A  0101               	movlb	1	; () banked
 22888  00994C  071B               	decf	BroadcastJitter@jitter& (0+255),f,b
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;miwi_mesh.c: 255: t1 = MiWi_TickGet();
 22892  00994E  EC57  F052         	call	_MiWi_TickGet	;wreg free
 22893  009952  C100  F112         	movff	?_MiWi_TickGet,BroadcastJitter@t1
 22894  009956  C101  F113         	movff	?_MiWi_TickGet+1,BroadcastJitter@t1+1
 22895  00995A  C102  F114         	movff	?_MiWi_TickGet+2,BroadcastJitter@t1+2
 22896  00995E  C103  F115         	movff	?_MiWi_TickGet+3,BroadcastJitter@t1+3
 22897  009962                     l16718:
 22898                           
 22899                           ;miwi_mesh.c: 257: {
 22900                           ;miwi_mesh.c: 258: t2 = MiWi_TickGet();
 22901  009962  EC57  F052         	call	_MiWi_TickGet	;wreg free
 22902  009966  C100  F116         	movff	?_MiWi_TickGet,BroadcastJitter@t2
 22903  00996A  C101  F117         	movff	?_MiWi_TickGet+1,BroadcastJitter@t2+1
 22904  00996E  C102  F118         	movff	?_MiWi_TickGet+2,BroadcastJitter@t2+2
 22905  009972  C103  F119         	movff	?_MiWi_TickGet+3,BroadcastJitter@t2+3
 22906                           
 22907                           ;miwi_mesh.c: 259: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 22908  009976  C112  F10A         	movff	BroadcastJitter@t1,??_BroadcastJitter
 22909  00997A  C113  F10B         	movff	BroadcastJitter@t1+1,??_BroadcastJitter+1
 22910  00997E  C114  F10C         	movff	BroadcastJitter@t1+2,??_BroadcastJitter+2
 22911  009982  C115  F10D         	movff	BroadcastJitter@t1+3,??_BroadcastJitter+3
 22912  009986  0101               	movlb	1	; () banked
 22913  009988  1F0A               	comf	??_BroadcastJitter& (0+255),f,b
 22914  00998A  1F0B               	comf	(??_BroadcastJitter+1)& (0+255),f,b
 22915  00998C  1F0C               	comf	(??_BroadcastJitter+2)& (0+255),f,b
 22916  00998E  1F0D               	comf	(??_BroadcastJitter+3)& (0+255),f,b
 22917  009990  2B0A               	incf	??_BroadcastJitter& (0+255),f,b
 22918  009992  0E00               	movlw	0
 22919  009994  230B               	addwfc	(??_BroadcastJitter+1)& (0+255),f,b
 22920  009996  230C               	addwfc	(??_BroadcastJitter+2)& (0+255),f,b
 22921  009998  230D               	addwfc	(??_BroadcastJitter+3)& (0+255),f,b
 22922  00999A  0101               	movlb	1	; () banked
 22923  00999C  5116               	movf	BroadcastJitter@t2& (0+255),w,b
 22924  00999E  0101               	movlb	1	; () banked
 22925  0099A0  250A               	addwf	??_BroadcastJitter& (0+255),w,b
 22926  0099A2  0101               	movlb	1	; () banked
 22927  0099A4  6F0E               	movwf	(??_BroadcastJitter+4)& (0+255),b
 22928  0099A6  0101               	movlb	1	; () banked
 22929  0099A8  5117               	movf	(BroadcastJitter@t2+1)& (0+255),w,b
 22930  0099AA  0101               	movlb	1	; () banked
 22931  0099AC  210B               	addwfc	(??_BroadcastJitter+1)& (0+255),w,b
 22932  0099AE  0101               	movlb	1	; () banked
 22933  0099B0  6F0F               	movwf	(??_BroadcastJitter+5)& (0+255),b
 22934  0099B2  0101               	movlb	1	; () banked
 22935  0099B4  5118               	movf	(BroadcastJitter@t2+2)& (0+255),w,b
 22936  0099B6  0101               	movlb	1	; () banked
 22937  0099B8  210C               	addwfc	(??_BroadcastJitter+2)& (0+255),w,b
 22938  0099BA  0101               	movlb	1	; () banked
 22939  0099BC  6F10               	movwf	(??_BroadcastJitter+6)& (0+255),b
 22940  0099BE  0101               	movlb	1	; () banked
 22941  0099C0  5119               	movf	(BroadcastJitter@t2+3)& (0+255),w,b
 22942  0099C2  0101               	movlb	1	; () banked
 22943  0099C4  210D               	addwfc	(??_BroadcastJitter+3)& (0+255),w,b
 22944  0099C6  0101               	movlb	1	; () banked
 22945  0099C8  6F11               	movwf	(??_BroadcastJitter+7)& (0+255),b
 22946  0099CA  0101               	movlb	1	; () banked
 22947  0099CC  5111               	movf	(??_BroadcastJitter+7)& (0+255),w,b
 22948  0099CE  0101               	movlb	1	; () banked
 22949  0099D0  1110               	iorwf	(??_BroadcastJitter+6)& (0+255),w,b
 22950  0099D2  E108               	bnz	l16724
 22951  0099D4  0EF5               	movlw	245
 22952  0099D6  0101               	movlb	1	; () banked
 22953  0099D8  5D0E               	subwf	(??_BroadcastJitter+4)& (0+255),w,b
 22954  0099DA  0E01               	movlw	1
 22955  0099DC  0101               	movlb	1	; () banked
 22956  0099DE  590F               	subwfb	(??_BroadcastJitter+5)& (0+255),w,b
 22957  0099E0  A0D8               	btfss	status,0,c
 22958  0099E2  D7BF               	goto	l16718
 22959  0099E4                     l16724:
 22960                           
 22961                           ; BSR set to: 1
 22962  0099E4  0101               	movlb	1	; () banked
 22963  0099E6  511B               	movf	BroadcastJitter@jitter& (0+255),w,b
 22964  0099E8  0101               	movlb	1	; () banked
 22965  0099EA  B4D8               	btfsc	status,2,c
 22966  0099EC  0012               	return	
 22967  0099EE  D7AD               	goto	l16714
 22968  0099F0                     __end_of_BroadcastJitter:
 22969                           	opt stack 0
 22970                           tblptru	equ	0xFF8
 22971                           tblptrh	equ	0xFF7
 22972                           tblptrl	equ	0xFF6
 22973                           tablat	equ	0xFF5
 22974                           prodh	equ	0xFF4
 22975                           prodl	equ	0xFF3
 22976                           intcon	equ	0xFF2
 22977                           intcon2	equ	0xFF1
 22978                           intcon3	equ	0xFF0
 22979                           indf0	equ	0xFEF
 22980                           postinc0	equ	0xFEE
 22981                           plusw0	equ	0xFEB
 22982                           fsr0h	equ	0xFEA
 22983                           fsr0l	equ	0xFE9
 22984                           wreg	equ	0xFE8
 22985                           indf1	equ	0xFE7
 22986                           postinc1	equ	0xFE6
 22987                           postdec1	equ	0xFE5
 22988                           fsr1h	equ	0xFE2
 22989                           fsr1l	equ	0xFE1
 22990                           indf2	equ	0xFDF
 22991                           postinc2	equ	0xFDE
 22992                           postdec2	equ	0xFDD
 22993                           plusw2	equ	0xFDB
 22994                           fsr2h	equ	0xFDA
 22995                           fsr2l	equ	0xFD9
 22996                           status	equ	0xFD8
 22997                           
 22998 ;; *************** function ___lbmod *****************
 22999 ;; Defined at:
 23000 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/lbmod.c"
 23001 ;; Parameters:    Size  Location     Type
 23002 ;;  dividend        1    wreg     unsigned char 
 23003 ;;  divisor         1    0[BANK1 ] unsigned char 
 23004 ;; Auto vars:     Size  Location     Type
 23005 ;;  dividend        1    1[BANK1 ] unsigned char 
 23006 ;;  rem             1    3[BANK1 ] unsigned char 
 23007 ;;  counter         1    2[BANK1 ] unsigned char 
 23008 ;; Return value:  Size  Location     Type
 23009 ;;                  1    wreg      unsigned char 
 23010 ;; Registers used:
 23011 ;;		wreg, status,2, status,0
 23012 ;; Tracked objects:
 23013 ;;		On entry : 0/0
 23014 ;;		On exit  : 0/0
 23015 ;;		Unchanged: 0/0
 23016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23017 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23018 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23020 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23021 ;;Total ram usage:        4 bytes
 23022 ;; Hardware stack levels used:    1
 23023 ;; Hardware stack levels required when called:   16
 23024 ;; This function calls:
 23025 ;;		Nothing
 23026 ;; This function is called by:
 23027 ;;		_BroadcastJitter
 23028 ;; This function uses a non-reentrant model
 23029 ;;
 23030                           
 23031                           	psect	text47
 23032  00AAEE                     __ptext47:
 23033                           	opt stack 0
 23034  00AAEE                     ___lbmod:
 23035                           	opt stack 12
 23036                           
 23037                           ; BSR set to: 1
 23038                           ;incstack = 0
 23039                           ;___lbmod@dividend stored from wreg
 23040  00AAEE  0101               	movlb	1	; () banked
 23041  00AAF0  6F01               	movwf	___lbmod@dividend& (0+255),b
 23042  00AAF2  0E08               	movlw	8
 23043  00AAF4  0101               	movlb	1	; () banked
 23044  00AAF6  6F02               	movwf	___lbmod@counter& (0+255),b
 23045  00AAF8  0E00               	movlw	0
 23046  00AAFA  0101               	movlb	1	; () banked
 23047  00AAFC  6F03               	movwf	___lbmod@rem& (0+255),b
 23048  00AAFE                     l16530:
 23049                           
 23050                           ; BSR set to: 1
 23051  00AAFE  90D8               	bcf	status,0,c
 23052  00AB00  0101               	movlb	1	; () banked
 23053  00AB02  3501               	rlcf	___lbmod@dividend& (0+255),w,b
 23054  00AB04  0101               	movlb	1	; () banked
 23055  00AB06  3503               	rlcf	___lbmod@rem& (0+255),w,b
 23056  00AB08  0101               	movlb	1	; () banked
 23057  00AB0A  6F03               	movwf	___lbmod@rem& (0+255),b
 23058                           
 23059                           ; BSR set to: 1
 23060  00AB0C  0101               	movlb	1	; () banked
 23061  00AB0E  90D8               	bcf	status,0,c
 23062  00AB10  3701               	rlcf	___lbmod@dividend& (0+255),f,b
 23063                           
 23064                           ; BSR set to: 1
 23065  00AB12  0101               	movlb	1	; () banked
 23066  00AB14  5100               	movf	___lbmod@divisor& (0+255),w,b
 23067  00AB16  0101               	movlb	1	; () banked
 23068  00AB18  5D03               	subwf	___lbmod@rem& (0+255),w,b
 23069  00AB1A  A0D8               	btfss	status,0,c
 23070  00AB1C  D004               	goto	l16538
 23071                           
 23072                           ; BSR set to: 1
 23073  00AB1E  0101               	movlb	1	; () banked
 23074  00AB20  5100               	movf	___lbmod@divisor& (0+255),w,b
 23075  00AB22  0101               	movlb	1	; () banked
 23076  00AB24  5F03               	subwf	___lbmod@rem& (0+255),f,b
 23077  00AB26                     l16538:
 23078                           
 23079                           ; BSR set to: 1
 23080  00AB26  0101               	movlb	1	; () banked
 23081  00AB28  2F02               	decfsz	___lbmod@counter& (0+255),f,b
 23082  00AB2A  D7E9               	goto	l16530
 23083                           
 23084                           ; BSR set to: 1
 23085                           
 23086                           ; BSR set to: 1
 23087  00AB2C  0101               	movlb	1	; () banked
 23088  00AB2E  5103               	movf	___lbmod@rem& (0+255),w,b
 23089  00AB30  0012               	return	
 23090  00AB32                     __end_of___lbmod:
 23091                           	opt stack 0
 23092                           tblptru	equ	0xFF8
 23093                           tblptrh	equ	0xFF7
 23094                           tblptrl	equ	0xFF6
 23095                           tablat	equ	0xFF5
 23096                           prodh	equ	0xFF4
 23097                           prodl	equ	0xFF3
 23098                           intcon	equ	0xFF2
 23099                           intcon2	equ	0xFF1
 23100                           intcon3	equ	0xFF0
 23101                           indf0	equ	0xFEF
 23102                           postinc0	equ	0xFEE
 23103                           plusw0	equ	0xFEB
 23104                           fsr0h	equ	0xFEA
 23105                           fsr0l	equ	0xFE9
 23106                           wreg	equ	0xFE8
 23107                           indf1	equ	0xFE7
 23108                           postinc1	equ	0xFE6
 23109                           postdec1	equ	0xFE5
 23110                           fsr1h	equ	0xFE2
 23111                           fsr1l	equ	0xFE1
 23112                           indf2	equ	0xFDF
 23113                           postinc2	equ	0xFDE
 23114                           postdec2	equ	0xFDD
 23115                           plusw2	equ	0xFDB
 23116                           fsr2h	equ	0xFDA
 23117                           fsr2l	equ	0xFD9
 23118                           status	equ	0xFD8
 23119                           
 23120 ;; *************** function _AddNodeToNetworkTable *****************
 23121 ;; Defined at:
 23122 ;;		line 3373 in file "src/miwi/miwi_mesh.c"
 23123 ;; Parameters:    Size  Location     Type
 23124 ;;		None
 23125 ;; Auto vars:     Size  Location     Type
 23126 ;;  i               1    8[BANK1 ] unsigned char 
 23127 ;;  handle          1    9[BANK1 ] unsigned char 
 23128 ;; Return value:  Size  Location     Type
 23129 ;;                  1    wreg      unsigned char 
 23130 ;; Registers used:
 23131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23132 ;; Tracked objects:
 23133 ;;		On entry : 0/0
 23134 ;;		On exit  : 0/0
 23135 ;;		Unchanged: 0/0
 23136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23138 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23140 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23141 ;;Total ram usage:        4 bytes
 23142 ;; Hardware stack levels used:    1
 23143 ;; Hardware stack levels required when called:   17
 23144 ;; This function calls:
 23145 ;;		_SearchForLongAddress
 23146 ;;		_SearchForShortAddress
 23147 ;;		_findNextNetworkEntry
 23148 ;; This function is called by:
 23149 ;;		_MiWiTasks
 23150 ;;		_OpenSocket
 23151 ;; This function uses a non-reentrant model
 23152 ;;
 23153                           
 23154                           	psect	text48
 23155  008586                     __ptext48:
 23156                           	opt stack 0
 23157  008586                     _AddNodeToNetworkTable:
 23158                           	opt stack 12
 23159                           
 23160                           ;miwi_mesh.c: 3375: uint8_t handle = 0xFF;
 23161                           
 23162                           ; BSR set to: 1
 23163                           ;incstack = 0
 23164  008586  0101               	movlb	1	; () banked
 23165  008588  6909               	setf	AddNodeToNetworkTable@handle& (0+255),b
 23166                           
 23167                           ;miwi_mesh.c: 3377: if(tempNodeStatus.bits.longAddressValid)
 23168  00858A  0100               	movlb	0	; () banked
 23169  00858C  A5E1               	btfss	_tempNodeStatus& (0+255),2,b
 23170  00858E  D003               	goto	l899
 23171                           
 23172                           ; BSR set to: 0
 23173                           ;miwi_mesh.c: 3378: {
 23174                           ;miwi_mesh.c: 3379: handle = SearchForLongAddress();
 23175  008590  ECF7  F049         	call	_SearchForLongAddress	;wreg free
 23176  008594  D005               	goto	L15
 23177  008596                     l899:
 23178                           
 23179                           ; BSR set to: 0
 23180                           ;miwi_mesh.c: 3381: else
 23181                           ;miwi_mesh.c: 3382: {
 23182                           ;miwi_mesh.c: 3383: if(tempNodeStatus.bits.shortAddressValid)
 23183  008596  0100               	movlb	0	; () banked
 23184  008598  A7E1               	btfss	_tempNodeStatus& (0+255),3,b
 23185  00859A  D004               	goto	l16732
 23186                           
 23187                           ; BSR set to: 0
 23188                           ;miwi_mesh.c: 3384: {
 23189                           ;miwi_mesh.c: 3385: handle = SearchForShortAddress();
 23190  00859C  EC5E  F051         	call	_SearchForShortAddress	;wreg free
 23191  0085A0                     L15:
 23192  0085A0  0101               	movlb	1	; () banked
 23193  0085A2  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23194  0085A4                     l16732:
 23195                           
 23196                           ;miwi_mesh.c: 3386: }
 23197                           ;miwi_mesh.c: 3387: }
 23198                           ;miwi_mesh.c: 3389: if(handle==0xFF)
 23199  0085A4  0101               	movlb	1	; () banked
 23200  0085A6  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23201  0085A8  A4D8               	btfss	status,2,c
 23202  0085AA  D004               	goto	l16736
 23203                           
 23204                           ; BSR set to: 1
 23205                           ;miwi_mesh.c: 3390: {
 23206                           ;miwi_mesh.c: 3391: handle = findNextNetworkEntry();
 23207  0085AC  ECDB  F055         	call	_findNextNetworkEntry	;wreg free
 23208  0085B0  0101               	movlb	1	; () banked
 23209  0085B2  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 23210  0085B4                     l16736:
 23211                           
 23212                           ; BSR set to: 1
 23213                           ;miwi_mesh.c: 3392: }
 23214                           ;miwi_mesh.c: 3394: if(handle != 0xFF)
 23215  0085B4  0101               	movlb	1	; () banked
 23216  0085B6  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 23217  0085B8  B4D8               	btfsc	status,2,c
 23218  0085BA  D074               	goto	l16756
 23219                           
 23220                           ; BSR set to: 1
 23221                           ;miwi_mesh.c: 3395: {
 23222                           ;miwi_mesh.c: 3401: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 23223  0085BC  0101               	movlb	1	; () banked
 23224  0085BE  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23225  0085C0  0D09               	mullw	9
 23226  0085C2  0E08               	movlw	8
 23227  0085C4  26F3               	addwf	prodl,f,c
 23228  0085C6  0E00               	movlw	0
 23229  0085C8  22F4               	addwfc	prodh,f,c
 23230  0085CA  0E00               	movlw	low _ConnectionTable
 23231  0085CC  24F3               	addwf	prodl,w,c
 23232  0085CE  6ED9               	movwf	fsr2l,c
 23233  0085D0  0E06               	movlw	high _ConnectionTable
 23234  0085D2  20F4               	addwfc	prodh,w,c
 23235  0085D4  6EDA               	movwf	fsr2h,c
 23236  0085D6  C0E1  FFDF         	movff	_tempNodeStatus,indf2
 23237                           
 23238                           ; BSR set to: 1
 23239                           ;miwi_mesh.c: 3402: if(tempNodeStatus.bits.longAddressValid)
 23240  0085DA  0100               	movlb	0	; () banked
 23241  0085DC  A5E1               	btfss	_tempNodeStatus& (0+255),2,b
 23242  0085DE  D034               	goto	l904
 23243                           
 23244                           ; BSR set to: 0
 23245                           ;miwi_mesh.c: 3403: {
 23246                           ;miwi_mesh.c: 3404: uint8_t i;
 23247                           ;miwi_mesh.c: 3405: for(i = 0; i < 4; i++)
 23248  0085E0  0E00               	movlw	0
 23249  0085E2  0101               	movlb	1	; () banked
 23250  0085E4  6F08               	movwf	AddNodeToNetworkTable@i& (0+255),b
 23251  0085E6                     l16744:
 23252                           
 23253                           ; BSR set to: 1
 23254  0085E6  0E03               	movlw	3
 23255  0085E8  0101               	movlb	1	; () banked
 23256  0085EA  6508               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 23257  0085EC  D001               	goto	l16748
 23258  0085EE  D02C               	goto	l904
 23259  0085F0                     l16748:
 23260                           
 23261                           ; BSR set to: 1
 23262                           ;miwi_mesh.c: 3406: {
 23263                           ;miwi_mesh.c: 3407: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 23264  0085F0  0101               	movlb	1	; () banked
 23265  0085F2  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23266  0085F4  0D01               	mullw	1
 23267  0085F6  0EAA               	movlw	low _tempLongAddress
 23268  0085F8  24F3               	addwf	prodl,w,c
 23269  0085FA  6ED9               	movwf	fsr2l,c
 23270  0085FC  0E01               	movlw	high _tempLongAddress
 23271  0085FE  20F4               	addwfc	prodh,w,c
 23272  008600  6EDA               	movwf	fsr2h,c
 23273  008602  0101               	movlb	1	; () banked
 23274  008604  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 23275  008606  0D01               	mullw	1
 23276  008608  0E04               	movlw	4
 23277  00860A  26F3               	addwf	prodl,f,c
 23278  00860C  0E00               	movlw	0
 23279  00860E  22F4               	addwfc	prodh,f,c
 23280  008610  0E00               	movlw	low _ConnectionTable
 23281  008612  0101               	movlb	1	; () banked
 23282  008614  6F06               	movwf	??_AddNodeToNetworkTable& (0+255),b
 23283  008616  0E06               	movlw	high _ConnectionTable
 23284  008618  0101               	movlb	1	; () banked
 23285  00861A  6F07               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 23286  00861C  50F3               	movf	prodl,w,c
 23287  00861E  0101               	movlb	1	; () banked
 23288  008620  2706               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 23289  008622  50F4               	movf	prodh,w,c
 23290  008624  0101               	movlb	1	; () banked
 23291  008626  2307               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23292  008628  0101               	movlb	1	; () banked
 23293  00862A  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23294  00862C  0D09               	mullw	9
 23295  00862E  50F3               	movf	prodl,w,c
 23296  008630  0101               	movlb	1	; () banked
 23297  008632  2506               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23298  008634  6EE1               	movwf	fsr1l,c
 23299  008636  50F4               	movf	prodh,w,c
 23300  008638  0101               	movlb	1	; () banked
 23301  00863A  2107               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23302  00863C  6EE2               	movwf	fsr1h,c
 23303  00863E  CFDF FFE7          	movff	indf2,indf1
 23304                           
 23305                           ; BSR set to: 1
 23306  008642  0101               	movlb	1	; () banked
 23307  008644  2B08               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 23308  008646  D7CF               	goto	l16744
 23309  008648                     l904:
 23310                           
 23311                           ;miwi_mesh.c: 3408: }
 23312                           ;miwi_mesh.c: 3409: }
 23313                           ;miwi_mesh.c: 3411: if(tempNodeStatus.bits.shortAddressValid)
 23314  008648  0100               	movlb	0	; () banked
 23315  00864A  A7E1               	btfss	_tempNodeStatus& (0+255),3,b
 23316  00864C  D011               	goto	l907
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;miwi_mesh.c: 3412: {
 23320                           ;miwi_mesh.c: 3413: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 23321  00864E  0101               	movlb	1	; () banked
 23322  008650  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23323  008652  0D09               	mullw	9
 23324  008654  0E02               	movlw	2
 23325  008656  26F3               	addwf	prodl,f,c
 23326  008658  0E00               	movlw	0
 23327  00865A  22F4               	addwfc	prodh,f,c
 23328  00865C  0E00               	movlw	low _ConnectionTable
 23329  00865E  24F3               	addwf	prodl,w,c
 23330  008660  6ED9               	movwf	fsr2l,c
 23331  008662  0E06               	movlw	high _ConnectionTable
 23332  008664  20F4               	addwfc	prodh,w,c
 23333  008666  6EDA               	movwf	fsr2h,c
 23334  008668  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 23335  00866C  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 23336  008670                     l907:
 23337                           
 23338                           ;miwi_mesh.c: 3414: }
 23339                           ;miwi_mesh.c: 3416: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 23340  008670  0101               	movlb	1	; () banked
 23341  008672  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23342  008674  0D09               	mullw	9
 23343  008676  0E00               	movlw	low _ConnectionTable
 23344  008678  24F3               	addwf	prodl,w,c
 23345  00867A  6ED9               	movwf	fsr2l,c
 23346  00867C  0E06               	movlw	high _ConnectionTable
 23347  00867E  20F4               	addwfc	prodh,w,c
 23348  008680  6EDA               	movwf	fsr2h,c
 23349  008682  C1BC  FFDE         	movff	_tempPANID,postinc2
 23350  008686  C1BD  FFDD         	movff	_tempPANID+1,postdec2
 23351                           
 23352                           ;miwi_mesh.c: 3418: IncomingFrameCounter[handle].Val = 0;
 23353  00868A  0101               	movlb	1	; () banked
 23354  00868C  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23355  00868E  0D04               	mullw	4
 23356  008690  0E00               	movlw	low _IncomingFrameCounter
 23357  008692  24F3               	addwf	prodl,w,c
 23358  008694  6ED9               	movwf	fsr2l,c
 23359  008696  0E05               	movlw	high _IncomingFrameCounter
 23360  008698  20F4               	addwfc	prodh,w,c
 23361  00869A  6EDA               	movwf	fsr2h,c
 23362  00869C  6ADE               	clrf	postinc2,c
 23363  00869E  6ADE               	clrf	postinc2,c
 23364  0086A0  6ADE               	clrf	postinc2,c
 23365  0086A2  6ADD               	clrf	postdec2,c
 23366  0086A4                     l16756:
 23367                           
 23368                           ; BSR set to: 1
 23369                           ;miwi_mesh.c: 3420: }
 23370                           ;miwi_mesh.c: 3422: return handle;
 23371  0086A4  0101               	movlb	1	; () banked
 23372  0086A6  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 23373  0086A8  0012               	return	
 23374  0086AA                     __end_of_AddNodeToNetworkTable:
 23375                           	opt stack 0
 23376                           tblptru	equ	0xFF8
 23377                           tblptrh	equ	0xFF7
 23378                           tblptrl	equ	0xFF6
 23379                           tablat	equ	0xFF5
 23380                           prodh	equ	0xFF4
 23381                           prodl	equ	0xFF3
 23382                           intcon	equ	0xFF2
 23383                           intcon2	equ	0xFF1
 23384                           intcon3	equ	0xFF0
 23385                           indf0	equ	0xFEF
 23386                           postinc0	equ	0xFEE
 23387                           plusw0	equ	0xFEB
 23388                           fsr0h	equ	0xFEA
 23389                           fsr0l	equ	0xFE9
 23390                           wreg	equ	0xFE8
 23391                           indf1	equ	0xFE7
 23392                           postinc1	equ	0xFE6
 23393                           postdec1	equ	0xFE5
 23394                           fsr1h	equ	0xFE2
 23395                           fsr1l	equ	0xFE1
 23396                           indf2	equ	0xFDF
 23397                           postinc2	equ	0xFDE
 23398                           postdec2	equ	0xFDD
 23399                           plusw2	equ	0xFDB
 23400                           fsr2h	equ	0xFDA
 23401                           fsr2l	equ	0xFD9
 23402                           status	equ	0xFD8
 23403                           
 23404 ;; *************** function _findNextNetworkEntry *****************
 23405 ;; Defined at:
 23406 ;;		line 2584 in file "src/miwi/miwi_mesh.c"
 23407 ;; Parameters:    Size  Location     Type
 23408 ;;		None
 23409 ;; Auto vars:     Size  Location     Type
 23410 ;;  i               1    0[BANK1 ] unsigned char 
 23411 ;; Return value:  Size  Location     Type
 23412 ;;                  1    wreg      unsigned char 
 23413 ;; Registers used:
 23414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23415 ;; Tracked objects:
 23416 ;;		On entry : 0/0
 23417 ;;		On exit  : 0/0
 23418 ;;		Unchanged: 0/0
 23419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23421 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23423 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23424 ;;Total ram usage:        1 bytes
 23425 ;; Hardware stack levels used:    1
 23426 ;; Hardware stack levels required when called:   16
 23427 ;; This function calls:
 23428 ;;		Nothing
 23429 ;; This function is called by:
 23430 ;;		_MiWiTasks
 23431 ;;		_AddNodeToNetworkTable
 23432 ;;		_MiApp_EstablishConnection
 23433 ;; This function uses a non-reentrant model
 23434 ;;
 23435                           
 23436                           	psect	text49
 23437  00ABB6                     __ptext49:
 23438                           	opt stack 0
 23439  00ABB6                     _findNextNetworkEntry:
 23440                           	opt stack 13
 23441                           
 23442                           ;miwi_mesh.c: 2586: uint8_t i;
 23443                           ;miwi_mesh.c: 2588: for(i=0;i<64;i++)
 23444                           
 23445                           ; BSR set to: 1
 23446                           ;incstack = 0
 23447  00ABB6  0E00               	movlw	0
 23448  00ABB8  0101               	movlb	1	; () banked
 23449  00ABBA  6F00               	movwf	findNextNetworkEntry@i& (0+255),b
 23450  00ABBC                     l16474:
 23451                           
 23452                           ; BSR set to: 1
 23453  00ABBC  0E3F               	movlw	63
 23454  00ABBE  0101               	movlb	1	; () banked
 23455  00ABC0  6500               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 23456  00ABC2  D001               	goto	l16478
 23457  00ABC4  D015               	goto	l16488
 23458  00ABC6                     l16478:
 23459                           
 23460                           ; BSR set to: 1
 23461                           ;miwi_mesh.c: 2589: {
 23462                           ;miwi_mesh.c: 2590: if(ConnectionTable[i].status.bits.isValid == 0)
 23463  00ABC6  0101               	movlb	1	; () banked
 23464  00ABC8  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 23465  00ABCA  0D09               	mullw	9
 23466  00ABCC  0E08               	movlw	8
 23467  00ABCE  26F3               	addwf	prodl,f,c
 23468  00ABD0  0E00               	movlw	0
 23469  00ABD2  22F4               	addwfc	prodh,f,c
 23470  00ABD4  0E00               	movlw	low _ConnectionTable
 23471  00ABD6  24F3               	addwf	prodl,w,c
 23472  00ABD8  6ED9               	movwf	fsr2l,c
 23473  00ABDA  0E06               	movlw	high _ConnectionTable
 23474  00ABDC  20F4               	addwfc	prodh,w,c
 23475  00ABDE  6EDA               	movwf	fsr2h,c
 23476  00ABE0  BEDF               	btfsc	indf2,7,c
 23477  00ABE2  D003               	goto	l16484
 23478                           
 23479                           ; BSR set to: 1
 23480                           ;miwi_mesh.c: 2591: {
 23481                           ;miwi_mesh.c: 2592: return i;
 23482  00ABE4  0101               	movlb	1	; () banked
 23483  00ABE6  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 23484                           
 23485                           ; BSR set to: 1
 23486  00ABE8  0012               	return	
 23487  00ABEA                     l16484:
 23488                           
 23489                           ; BSR set to: 1
 23490  00ABEA  0101               	movlb	1	; () banked
 23491  00ABEC  2B00               	incf	findNextNetworkEntry@i& (0+255),f,b
 23492  00ABEE  D7E6               	goto	l16474
 23493  00ABF0                     l16488:
 23494                           
 23495                           ; BSR set to: 1
 23496                           ;miwi_mesh.c: 2593: }
 23497                           ;miwi_mesh.c: 2594: }
 23498                           ;miwi_mesh.c: 2595: return 0xFF;
 23499  00ABF0  0EFF               	movlw	255
 23500  00ABF2  0012               	return	
 23501  00ABF4                     __end_of_findNextNetworkEntry:
 23502                           	opt stack 0
 23503                           tblptru	equ	0xFF8
 23504                           tblptrh	equ	0xFF7
 23505                           tblptrl	equ	0xFF6
 23506                           tablat	equ	0xFF5
 23507                           prodh	equ	0xFF4
 23508                           prodl	equ	0xFF3
 23509                           intcon	equ	0xFF2
 23510                           intcon2	equ	0xFF1
 23511                           intcon3	equ	0xFF0
 23512                           indf0	equ	0xFEF
 23513                           postinc0	equ	0xFEE
 23514                           plusw0	equ	0xFEB
 23515                           fsr0h	equ	0xFEA
 23516                           fsr0l	equ	0xFE9
 23517                           wreg	equ	0xFE8
 23518                           indf1	equ	0xFE7
 23519                           postinc1	equ	0xFE6
 23520                           postdec1	equ	0xFE5
 23521                           fsr1h	equ	0xFE2
 23522                           fsr1l	equ	0xFE1
 23523                           indf2	equ	0xFDF
 23524                           postinc2	equ	0xFDE
 23525                           postdec2	equ	0xFDD
 23526                           plusw2	equ	0xFDB
 23527                           fsr2h	equ	0xFDA
 23528                           fsr2l	equ	0xFD9
 23529                           status	equ	0xFD8
 23530                           
 23531 ;; *************** function _SearchForShortAddress *****************
 23532 ;; Defined at:
 23533 ;;		line 3246 in file "src/miwi/miwi_mesh.c"
 23534 ;; Parameters:    Size  Location     Type
 23535 ;;		None
 23536 ;; Auto vars:     Size  Location     Type
 23537 ;;  i               1    2[BANK1 ] unsigned char 
 23538 ;; Return value:  Size  Location     Type
 23539 ;;                  1    wreg      unsigned char 
 23540 ;; Registers used:
 23541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23542 ;; Tracked objects:
 23543 ;;		On entry : 0/0
 23544 ;;		On exit  : 0/0
 23545 ;;		Unchanged: 0/0
 23546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23548 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23549 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23550 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23551 ;;Total ram usage:        3 bytes
 23552 ;; Hardware stack levels used:    1
 23553 ;; Hardware stack levels required when called:   16
 23554 ;; This function calls:
 23555 ;;		Nothing
 23556 ;; This function is called by:
 23557 ;;		_MiWiTasks
 23558 ;;		_RouteMessage
 23559 ;;		_AddNodeToNetworkTable
 23560 ;;		_OpenSocket
 23561 ;; This function uses a non-reentrant model
 23562 ;;
 23563                           
 23564                           	psect	text50
 23565  00A2BC                     __ptext50:
 23566                           	opt stack 0
 23567  00A2BC                     _SearchForShortAddress:
 23568                           	opt stack 11
 23569                           
 23570                           ;miwi_mesh.c: 3248: uint8_t i;
 23571                           ;miwi_mesh.c: 3250: for(i=0;i<64;i++)
 23572                           
 23573                           ; BSR set to: 1
 23574                           ;incstack = 0
 23575  00A2BC  0E00               	movlw	0
 23576  00A2BE  0101               	movlb	1	; () banked
 23577  00A2C0  6F02               	movwf	SearchForShortAddress@i& (0+255),b
 23578  00A2C2                     l16086:
 23579                           
 23580                           ; BSR set to: 1
 23581  00A2C2  0E3F               	movlw	63
 23582  00A2C4  0101               	movlb	1	; () banked
 23583  00A2C6  6502               	cpfsgt	SearchForShortAddress@i& (0+255),b
 23584  00A2C8  D001               	goto	l16090
 23585  00A2CA  D03A               	goto	l16104
 23586  00A2CC                     l16090:
 23587                           
 23588                           ; BSR set to: 1
 23589                           ;miwi_mesh.c: 3251: {
 23590                           ;miwi_mesh.c: 3252: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 23591  00A2CC  0101               	movlb	1	; () banked
 23592  00A2CE  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 23593  00A2D0  0D09               	mullw	9
 23594  00A2D2  0E08               	movlw	8
 23595  00A2D4  26F3               	addwf	prodl,f,c
 23596  00A2D6  0E00               	movlw	0
 23597  00A2D8  22F4               	addwfc	prodh,f,c
 23598  00A2DA  0E00               	movlw	low _ConnectionTable
 23599  00A2DC  24F3               	addwf	prodl,w,c
 23600  00A2DE  6ED9               	movwf	fsr2l,c
 23601  00A2E0  0E06               	movlw	high _ConnectionTable
 23602  00A2E2  20F4               	addwfc	prodh,w,c
 23603  00A2E4  6EDA               	movwf	fsr2h,c
 23604  00A2E6  AEDF               	btfss	indf2,7,c
 23605  00A2E8  D028               	goto	l16100
 23606                           
 23607                           ; BSR set to: 1
 23608  00A2EA  0101               	movlb	1	; () banked
 23609  00A2EC  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 23610  00A2EE  0D09               	mullw	9
 23611  00A2F0  0E08               	movlw	8
 23612  00A2F2  26F3               	addwf	prodl,f,c
 23613  00A2F4  0E00               	movlw	0
 23614  00A2F6  22F4               	addwfc	prodh,f,c
 23615  00A2F8  0E00               	movlw	low _ConnectionTable
 23616  00A2FA  24F3               	addwf	prodl,w,c
 23617  00A2FC  6ED9               	movwf	fsr2l,c
 23618  00A2FE  0E06               	movlw	high _ConnectionTable
 23619  00A300  20F4               	addwfc	prodh,w,c
 23620  00A302  6EDA               	movwf	fsr2h,c
 23621  00A304  A6DF               	btfss	indf2,3,c
 23622  00A306  D019               	goto	l16100
 23623                           
 23624                           ; BSR set to: 1
 23625                           ;miwi_mesh.c: 3253: {
 23626                           ;miwi_mesh.c: 3254: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 23627  00A308  0101               	movlb	1	; () banked
 23628  00A30A  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 23629  00A30C  0D09               	mullw	9
 23630  00A30E  0E02               	movlw	2
 23631  00A310  26F3               	addwf	prodl,f,c
 23632  00A312  0E00               	movlw	0
 23633  00A314  22F4               	addwfc	prodh,f,c
 23634  00A316  0E00               	movlw	low _ConnectionTable
 23635  00A318  24F3               	addwf	prodl,w,c
 23636  00A31A  6ED9               	movwf	fsr2l,c
 23637  00A31C  0E06               	movlw	high _ConnectionTable
 23638  00A31E  20F4               	addwfc	prodh,w,c
 23639  00A320  6EDA               	movwf	fsr2h,c
 23640  00A322  0101               	movlb	1	; () banked
 23641  00A324  51F4               	movf	_tempShortAddress& (0+255),w,b
 23642  00A326  18DE               	xorwf	postinc2,w,c
 23643  00A328  E108               	bnz	l16100
 23644  00A32A  0101               	movlb	1	; () banked
 23645  00A32C  51F5               	movf	(_tempShortAddress+1)& (0+255),w,b
 23646  00A32E  18DE               	xorwf	postinc2,w,c
 23647  00A330  A4D8               	btfss	status,2,c
 23648  00A332  D003               	goto	l16100
 23649                           
 23650                           ; BSR set to: 1
 23651                           ;miwi_mesh.c: 3255: {
 23652                           ;miwi_mesh.c: 3256: return i;
 23653  00A334  0101               	movlb	1	; () banked
 23654  00A336  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 23655                           
 23656                           ; BSR set to: 1
 23657  00A338  0012               	return	
 23658  00A33A                     l16100:
 23659                           
 23660                           ; BSR set to: 1
 23661  00A33A  0101               	movlb	1	; () banked
 23662  00A33C  2B02               	incf	SearchForShortAddress@i& (0+255),f,b
 23663  00A33E  D7C1               	goto	l16086
 23664  00A340                     l16104:
 23665                           
 23666                           ; BSR set to: 1
 23667                           ;miwi_mesh.c: 3257: }
 23668                           ;miwi_mesh.c: 3258: }
 23669                           ;miwi_mesh.c: 3259: }
 23670                           ;miwi_mesh.c: 3260: return 0xFF;
 23671  00A340  0EFF               	movlw	255
 23672  00A342  0012               	return	
 23673  00A344                     __end_of_SearchForShortAddress:
 23674                           	opt stack 0
 23675                           tblptru	equ	0xFF8
 23676                           tblptrh	equ	0xFF7
 23677                           tblptrl	equ	0xFF6
 23678                           tablat	equ	0xFF5
 23679                           prodh	equ	0xFF4
 23680                           prodl	equ	0xFF3
 23681                           intcon	equ	0xFF2
 23682                           intcon2	equ	0xFF1
 23683                           intcon3	equ	0xFF0
 23684                           indf0	equ	0xFEF
 23685                           postinc0	equ	0xFEE
 23686                           plusw0	equ	0xFEB
 23687                           fsr0h	equ	0xFEA
 23688                           fsr0l	equ	0xFE9
 23689                           wreg	equ	0xFE8
 23690                           indf1	equ	0xFE7
 23691                           postinc1	equ	0xFE6
 23692                           postdec1	equ	0xFE5
 23693                           fsr1h	equ	0xFE2
 23694                           fsr1l	equ	0xFE1
 23695                           indf2	equ	0xFDF
 23696                           postinc2	equ	0xFDE
 23697                           postdec2	equ	0xFDD
 23698                           plusw2	equ	0xFDB
 23699                           fsr2h	equ	0xFDA
 23700                           fsr2l	equ	0xFD9
 23701                           status	equ	0xFD8
 23702                           
 23703 ;; *************** function _SearchForLongAddress *****************
 23704 ;; Defined at:
 23705 ;;		line 3327 in file "src/miwi/miwi_mesh.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;		None
 23708 ;; Auto vars:     Size  Location     Type
 23709 ;;  i               1    5[BANK1 ] unsigned char 
 23710 ;;  j               1    4[BANK1 ] unsigned char 
 23711 ;; Return value:  Size  Location     Type
 23712 ;;                  1    wreg      unsigned char 
 23713 ;; Registers used:
 23714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23715 ;; Tracked objects:
 23716 ;;		On entry : 0/0
 23717 ;;		On exit  : 0/0
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23721 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23722 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23723 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23724 ;;Total ram usage:        6 bytes
 23725 ;; Hardware stack levels used:    1
 23726 ;; Hardware stack levels required when called:   16
 23727 ;; This function calls:
 23728 ;;		Nothing
 23729 ;; This function is called by:
 23730 ;;		_MiWiTasks
 23731 ;;		_AddNodeToNetworkTable
 23732 ;;		_MiApp_UnicastAddress
 23733 ;;		_MiApp_EstablishConnection
 23734 ;; This function uses a non-reentrant model
 23735 ;;
 23736                           
 23737                           	psect	text51
 23738  0093EE                     __ptext51:
 23739                           	opt stack 0
 23740  0093EE                     _SearchForLongAddress:
 23741                           	opt stack 13
 23742                           
 23743                           ;miwi_mesh.c: 3329: uint8_t i,j;
 23744                           ;miwi_mesh.c: 3331: for(i=0;i<64;i++)
 23745                           
 23746                           ; BSR set to: 1
 23747                           ;incstack = 0
 23748  0093EE  0E00               	movlw	0
 23749  0093F0  0101               	movlb	1	; () banked
 23750  0093F2  6F05               	movwf	SearchForLongAddress@i& (0+255),b
 23751  0093F4                     l16494:
 23752                           
 23753                           ; BSR set to: 1
 23754  0093F4  0E3F               	movlw	63
 23755  0093F6  0101               	movlb	1	; () banked
 23756  0093F8  6505               	cpfsgt	SearchForLongAddress@i& (0+255),b
 23757  0093FA  D001               	goto	l16498
 23758  0093FC  D05A               	goto	l16524
 23759  0093FE                     l16498:
 23760                           
 23761                           ; BSR set to: 1
 23762                           ;miwi_mesh.c: 3332: {
 23763                           ;miwi_mesh.c: 3333: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 23764  0093FE  0101               	movlb	1	; () banked
 23765  009400  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 23766  009402  0D09               	mullw	9
 23767  009404  0E08               	movlw	8
 23768  009406  26F3               	addwf	prodl,f,c
 23769  009408  0E00               	movlw	0
 23770  00940A  22F4               	addwfc	prodh,f,c
 23771  00940C  0E00               	movlw	low _ConnectionTable
 23772  00940E  24F3               	addwf	prodl,w,c
 23773  009410  6ED9               	movwf	fsr2l,c
 23774  009412  0E06               	movlw	high _ConnectionTable
 23775  009414  20F4               	addwfc	prodh,w,c
 23776  009416  6EDA               	movwf	fsr2h,c
 23777  009418  AEDF               	btfss	indf2,7,c
 23778  00941A  D048               	goto	l16520
 23779                           
 23780                           ; BSR set to: 1
 23781  00941C  0101               	movlb	1	; () banked
 23782  00941E  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 23783  009420  0D09               	mullw	9
 23784  009422  0E08               	movlw	8
 23785  009424  26F3               	addwf	prodl,f,c
 23786  009426  0E00               	movlw	0
 23787  009428  22F4               	addwfc	prodh,f,c
 23788  00942A  0E00               	movlw	low _ConnectionTable
 23789  00942C  24F3               	addwf	prodl,w,c
 23790  00942E  6ED9               	movwf	fsr2l,c
 23791  009430  0E06               	movlw	high _ConnectionTable
 23792  009432  20F4               	addwfc	prodh,w,c
 23793  009434  6EDA               	movwf	fsr2h,c
 23794  009436  A4DF               	btfss	indf2,2,c
 23795  009438  D039               	goto	l16520
 23796                           
 23797                           ; BSR set to: 1
 23798                           ;miwi_mesh.c: 3334: {
 23799                           ;miwi_mesh.c: 3335: for(j=0;j<4;j++)
 23800  00943A  0E00               	movlw	0
 23801  00943C  0101               	movlb	1	; () banked
 23802  00943E  6F04               	movwf	SearchForLongAddress@j& (0+255),b
 23803  009440                     l16504:
 23804                           
 23805                           ; BSR set to: 1
 23806  009440  0E03               	movlw	3
 23807  009442  0101               	movlb	1	; () banked
 23808  009444  6504               	cpfsgt	SearchForLongAddress@j& (0+255),b
 23809  009446  D001               	goto	l16508
 23810  009448  D02E               	goto	l16516
 23811  00944A                     l16508:
 23812                           
 23813                           ; BSR set to: 1
 23814                           ;miwi_mesh.c: 3336: {
 23815                           ;miwi_mesh.c: 3337: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 23816  00944A  0101               	movlb	1	; () banked
 23817  00944C  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 23818  00944E  0D01               	mullw	1
 23819  009450  0EAA               	movlw	low _tempLongAddress
 23820  009452  24F3               	addwf	prodl,w,c
 23821  009454  6ED9               	movwf	fsr2l,c
 23822  009456  0E01               	movlw	high _tempLongAddress
 23823  009458  20F4               	addwfc	prodh,w,c
 23824  00945A  6EDA               	movwf	fsr2h,c
 23825  00945C  0101               	movlb	1	; () banked
 23826  00945E  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 23827  009460  0D01               	mullw	1
 23828  009462  0E04               	movlw	4
 23829  009464  26F3               	addwf	prodl,f,c
 23830  009466  0E00               	movlw	0
 23831  009468  22F4               	addwfc	prodh,f,c
 23832  00946A  0E00               	movlw	low _ConnectionTable
 23833  00946C  0101               	movlb	1	; () banked
 23834  00946E  6F01               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 23835  009470  0E06               	movlw	high _ConnectionTable
 23836  009472  0101               	movlb	1	; () banked
 23837  009474  6F02               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 23838  009476  50F3               	movf	prodl,w,c
 23839  009478  0101               	movlb	1	; () banked
 23840  00947A  2701               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 23841  00947C  50F4               	movf	prodh,w,c
 23842  00947E  0101               	movlb	1	; () banked
 23843  009480  2302               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 23844  009482  0101               	movlb	1	; () banked
 23845  009484  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 23846  009486  0D09               	mullw	9
 23847  009488  50F3               	movf	prodl,w,c
 23848  00948A  0101               	movlb	1	; () banked
 23849  00948C  2501               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 23850  00948E  6EE1               	movwf	fsr1l,c
 23851  009490  50F4               	movf	prodh,w,c
 23852  009492  0101               	movlb	1	; () banked
 23853  009494  2102               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 23854  009496  6EE2               	movwf	fsr1h,c
 23855  009498  50DE               	movf	postinc2,w,c
 23856  00949A  18E6               	xorwf	postinc1,w,c
 23857  00949C  A4D8               	btfss	status,2,c
 23858  00949E  D006               	goto	l16520
 23859                           
 23860                           ; BSR set to: 1
 23861                           
 23862                           ; BSR set to: 1
 23863                           
 23864                           ; BSR set to: 1
 23865                           ;miwi_mesh.c: 3338: {
 23866                           ;miwi_mesh.c: 3339: goto EndOfSearchLoop;
 23867  0094A0  0101               	movlb	1	; () banked
 23868  0094A2  2B04               	incf	SearchForLongAddress@j& (0+255),f,b
 23869  0094A4  D7CD               	goto	l16504
 23870  0094A6                     l16516:
 23871                           
 23872                           ; BSR set to: 1
 23873                           ;miwi_mesh.c: 3340: }
 23874                           ;miwi_mesh.c: 3341: }
 23875                           ;miwi_mesh.c: 3342: return i;
 23876  0094A6  0101               	movlb	1	; () banked
 23877  0094A8  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 23878                           
 23879                           ; BSR set to: 1
 23880  0094AA  0012               	return	
 23881  0094AC                     l16520:
 23882                           
 23883                           ; BSR set to: 1
 23884                           ;miwi_mesh.c: 3345: ;
 23885  0094AC  0101               	movlb	1	; () banked
 23886  0094AE  2B05               	incf	SearchForLongAddress@i& (0+255),f,b
 23887  0094B0  D7A1               	goto	l16494
 23888  0094B2                     l16524:
 23889                           
 23890                           ; BSR set to: 1
 23891                           ;miwi_mesh.c: 3346: }
 23892                           ;miwi_mesh.c: 3347: return 0xFF;
 23893  0094B2  0EFF               	movlw	255
 23894  0094B4  0012               	return	
 23895  0094B6                     __end_of_SearchForLongAddress:
 23896                           	opt stack 0
 23897                           tblptru	equ	0xFF8
 23898                           tblptrh	equ	0xFF7
 23899                           tblptrl	equ	0xFF6
 23900                           tablat	equ	0xFF5
 23901                           prodh	equ	0xFF4
 23902                           prodl	equ	0xFF3
 23903                           intcon	equ	0xFF2
 23904                           intcon2	equ	0xFF1
 23905                           intcon3	equ	0xFF0
 23906                           indf0	equ	0xFEF
 23907                           postinc0	equ	0xFEE
 23908                           plusw0	equ	0xFEB
 23909                           fsr0h	equ	0xFEA
 23910                           fsr0l	equ	0xFE9
 23911                           wreg	equ	0xFE8
 23912                           indf1	equ	0xFE7
 23913                           postinc1	equ	0xFE6
 23914                           postdec1	equ	0xFE5
 23915                           fsr1h	equ	0xFE2
 23916                           fsr1l	equ	0xFE1
 23917                           indf2	equ	0xFDF
 23918                           postinc2	equ	0xFDE
 23919                           postdec2	equ	0xFDD
 23920                           plusw2	equ	0xFDB
 23921                           fsr2h	equ	0xFDA
 23922                           fsr2l	equ	0xFD9
 23923                           status	equ	0xFD8
 23924                           
 23925 ;; *************** function _MiApp_DiscardMessage *****************
 23926 ;; Defined at:
 23927 ;;		line 4243 in file "src/miwi/miwi_mesh.c"
 23928 ;; Parameters:    Size  Location     Type
 23929 ;;		None
 23930 ;; Auto vars:     Size  Location     Type
 23931 ;;		None
 23932 ;; Return value:  Size  Location     Type
 23933 ;;		None               void
 23934 ;; Registers used:
 23935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23936 ;; Tracked objects:
 23937 ;;		On entry : 0/0
 23938 ;;		On exit  : 0/0
 23939 ;;		Unchanged: 0/0
 23940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23945 ;;Total ram usage:        0 bytes
 23946 ;; Hardware stack levels used:    1
 23947 ;; Hardware stack levels required when called:   17
 23948 ;; This function calls:
 23949 ;;		_MiMAC_DiscardPacket
 23950 ;; This function is called by:
 23951 ;;		_MiApp_UnicastAddress
 23952 ;;		_main
 23953 ;;		_MiApp_SearchConnection
 23954 ;;		_MiApp_EstablishConnection
 23955 ;;		_MiApp_UnicastConnection
 23956 ;;		_do_NETWORK_REGISTER
 23957 ;;		_do_POWER_TEST
 23958 ;;		_do_PING
 23959 ;;		_do_UPDATE
 23960 ;; This function uses a non-reentrant model
 23961 ;;
 23962                           
 23963                           	psect	text52
 23964  00AF6C                     __ptext52:
 23965                           	opt stack 0
 23966  00AF6C                     _MiApp_DiscardMessage:
 23967                           	opt stack 12
 23968                           
 23969                           ;miwi_mesh.c: 4245: MiWiStateMachine.bits.RxHasUserData = 0;
 23970                           
 23971                           ; BSR set to: 1
 23972                           ;incstack = 0
 23973  00AF6C  0101               	movlb	1	; () banked
 23974  00AF6E  95B6               	bcf	_MiWiStateMachine& (0+255),2,b
 23975                           
 23976                           ; BSR set to: 1
 23977                           ;miwi_mesh.c: 4246: MiMAC_DiscardPacket();
 23978  00AF70  EC4B  F057         	call	_MiMAC_DiscardPacket	;wreg free
 23979  00AF74  0012               	return		;funcret
 23980  00AF76                     __end_of_MiApp_DiscardMessage:
 23981                           	opt stack 0
 23982                           tblptru	equ	0xFF8
 23983                           tblptrh	equ	0xFF7
 23984                           tblptrl	equ	0xFF6
 23985                           tablat	equ	0xFF5
 23986                           prodh	equ	0xFF4
 23987                           prodl	equ	0xFF3
 23988                           intcon	equ	0xFF2
 23989                           intcon2	equ	0xFF1
 23990                           intcon3	equ	0xFF0
 23991                           indf0	equ	0xFEF
 23992                           postinc0	equ	0xFEE
 23993                           plusw0	equ	0xFEB
 23994                           fsr0h	equ	0xFEA
 23995                           fsr0l	equ	0xFE9
 23996                           wreg	equ	0xFE8
 23997                           indf1	equ	0xFE7
 23998                           postinc1	equ	0xFE6
 23999                           postdec1	equ	0xFE5
 24000                           fsr1h	equ	0xFE2
 24001                           fsr1l	equ	0xFE1
 24002                           indf2	equ	0xFDF
 24003                           postinc2	equ	0xFDE
 24004                           postdec2	equ	0xFDD
 24005                           plusw2	equ	0xFDB
 24006                           fsr2h	equ	0xFDA
 24007                           fsr2l	equ	0xFD9
 24008                           status	equ	0xFD8
 24009                           
 24010 ;; *************** function _MiMAC_DiscardPacket *****************
 24011 ;; Defined at:
 24012 ;;		line 1048 in file "src/miwi/drv_mrf_miwi_89xa.c"
 24013 ;; Parameters:    Size  Location     Type
 24014 ;;		None
 24015 ;; Auto vars:     Size  Location     Type
 24016 ;;		None
 24017 ;; Return value:  Size  Location     Type
 24018 ;;		None               void
 24019 ;; Registers used:
 24020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24021 ;; Tracked objects:
 24022 ;;		On entry : 0/0
 24023 ;;		On exit  : 0/0
 24024 ;;		Unchanged: 0/0
 24025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24030 ;;Total ram usage:        0 bytes
 24031 ;; Hardware stack levels used:    1
 24032 ;; Hardware stack levels required when called:   16
 24033 ;; This function calls:
 24034 ;;		Nothing
 24035 ;; This function is called by:
 24036 ;;		_MiWiTasks
 24037 ;;		_MiApp_DiscardMessage
 24038 ;; This function uses a non-reentrant model
 24039 ;;
 24040                           
 24041                           	psect	text53
 24042  00AE96                     __ptext53:
 24043                           	opt stack 0
 24044  00AE96                     _MiMAC_DiscardPacket:
 24045                           	opt stack 13
 24046                           
 24047                           ;drv_mrf_miwi_89xa.c: 1050: if( ReceivedBankIndex < 2 )
 24048                           
 24049                           ;incstack = 0
 24050  00AE96  0E02               	movlw	2
 24051  00AE98  0101               	movlb	1	; () banked
 24052  00AE9A  61C6               	cpfslt	_ReceivedBankIndex& (0+255),b
 24053  00AE9C  0012               	return	
 24054                           
 24055                           ; BSR set to: 1
 24056                           ;drv_mrf_miwi_89xa.c: 1051: {
 24057                           ;drv_mrf_miwi_89xa.c: 1052: RxPacket[ReceivedBankIndex].flags.Val = 0;
 24058  00AE9E  0101               	movlb	1	; () banked
 24059  00AEA0  51C6               	movf	_ReceivedBankIndex& (0+255),w,b
 24060  00AEA2  0D42               	mullw	66
 24061  00AEA4  0E00               	movlw	low _RxPacket
 24062  00AEA6  24F3               	addwf	prodl,w,c
 24063  00AEA8  6ED9               	movwf	fsr2l,c
 24064  00AEAA  0E03               	movlw	high _RxPacket
 24065  00AEAC  20F4               	addwfc	prodh,w,c
 24066  00AEAE  6EDA               	movwf	fsr2h,c
 24067  00AEB0  0E00               	movlw	0
 24068  00AEB2  6EDF               	movwf	indf2,c
 24069                           
 24070                           ; BSR set to: 1
 24071                           ;drv_mrf_miwi_89xa.c: 1053: ReceivedBankIndex = 0xFF;
 24072  00AEB4  0101               	movlb	1	; () banked
 24073  00AEB6  69C6               	setf	_ReceivedBankIndex& (0+255),b
 24074  00AEB8  0012               	return	
 24075  00AEBA                     __end_of_MiMAC_DiscardPacket:
 24076                           	opt stack 0
 24077                           tblptru	equ	0xFF8
 24078                           tblptrh	equ	0xFF7
 24079                           tblptrl	equ	0xFF6
 24080                           tablat	equ	0xFF5
 24081                           prodh	equ	0xFF4
 24082                           prodl	equ	0xFF3
 24083                           intcon	equ	0xFF2
 24084                           intcon2	equ	0xFF1
 24085                           intcon3	equ	0xFF0
 24086                           indf0	equ	0xFEF
 24087                           postinc0	equ	0xFEE
 24088                           plusw0	equ	0xFEB
 24089                           fsr0h	equ	0xFEA
 24090                           fsr0l	equ	0xFE9
 24091                           wreg	equ	0xFE8
 24092                           indf1	equ	0xFE7
 24093                           postinc1	equ	0xFE6
 24094                           postdec1	equ	0xFE5
 24095                           fsr1h	equ	0xFE2
 24096                           fsr1l	equ	0xFE1
 24097                           indf2	equ	0xFDF
 24098                           postinc2	equ	0xFDE
 24099                           postdec2	equ	0xFDD
 24100                           plusw2	equ	0xFDB
 24101                           fsr2h	equ	0xFDA
 24102                           fsr2l	equ	0xFD9
 24103                           status	equ	0xFD8
 24104                           
 24105 ;; *************** function _MiApp_StartConnection *****************
 24106 ;; Defined at:
 24107 ;;		line 4853 in file "src/miwi/miwi_mesh.c"
 24108 ;; Parameters:    Size  Location     Type
 24109 ;;  Mode            1    wreg     unsigned char 
 24110 ;;  ScanDuration    1   65[BANK1 ] unsigned char 
 24111 ;;  ChannelMap      4   66[BANK1 ] unsigned long 
 24112 ;; Auto vars:     Size  Location     Type
 24113 ;;  Mode            1   71[BANK1 ] unsigned char 
 24114 ;;  RSSIValue       1   73[BANK1 ] unsigned char 
 24115 ;;  channel         1   72[BANK1 ] unsigned char 
 24116 ;; Return value:  Size  Location     Type
 24117 ;;                  1    wreg      unsigned char 
 24118 ;; Registers used:
 24119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24120 ;; Tracked objects:
 24121 ;;		On entry : 0/0
 24122 ;;		On exit  : 0/0
 24123 ;;		Unchanged: 0/0
 24124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24125 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24128 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24129 ;;Total ram usage:        9 bytes
 24130 ;; Hardware stack levels used:    1
 24131 ;; Hardware stack levels required when called:   22
 24132 ;; This function calls:
 24133 ;;		_MiApp_NoiseDetection
 24134 ;;		_MiApp_SetChannel
 24135 ;;		_MiMAC_SetAltAddress
 24136 ;; This function is called by:
 24137 ;;		_main
 24138 ;; This function uses a non-reentrant model
 24139 ;;
 24140                           
 24141                           	psect	text54
 24142  0088E2                     __ptext54:
 24143                           	opt stack 0
 24144  0088E2                     _MiApp_StartConnection:
 24145                           	opt stack 8
 24146                           
 24147                           ; BSR set to: 1
 24148                           ;incstack = 0
 24149                           ;MiApp_StartConnection@Mode stored from wreg
 24150  0088E2  0101               	movlb	1	; () banked
 24151  0088E4  6F47               	movwf	MiApp_StartConnection@Mode& (0+255),b
 24152                           
 24153                           ;miwi_mesh.c: 4855: switch(Mode)
 24154  0088E6  D079               	goto	l19096
 24155  0088E8                     l19056:
 24156                           
 24157                           ;miwi_mesh.c: 4859: myShortAddress.Val = 0;
 24158  0088E8  0E00               	movlw	0
 24159  0088EA  0101               	movlb	1	; () banked
 24160  0088EC  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 24161  0088EE  0E00               	movlw	0
 24162  0088F0  6FF2               	movwf	_myShortAddress& (0+255),b
 24163                           
 24164                           ; BSR set to: 1
 24165                           ;miwi_mesh.c: 4860: myParent = 0xFF;
 24166  0088F2  0101               	movlb	1	; () banked
 24167  0088F4  69CA               	setf	_myParent& (0+255),b
 24168                           
 24169                           ;miwi_mesh.c: 4865: myPANID.Val = 0x1337;
 24170  0088F6  0E13               	movlw	19
 24171  0088F8  0101               	movlb	1	; () banked
 24172  0088FA  6FF1               	movwf	(_myPANID+1)& (0+255),b
 24173  0088FC  0E37               	movlw	55
 24174  0088FE  6FF0               	movwf	_myPANID& (0+255),b
 24175                           
 24176                           ; BSR set to: 1
 24177                           ;miwi_mesh.c: 4867: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 24178  008900  0EF2               	movlw	low _myShortAddress
 24179  008902  0101               	movlb	1	; () banked
 24180  008904  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 24181  008906  0E01               	movlw	high _myShortAddress
 24182  008908  0101               	movlb	1	; () banked
 24183  00890A  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 24184  00890C  0EF0               	movlw	low _myPANID
 24185  00890E  0101               	movlb	1	; () banked
 24186  008910  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 24187  008912  0E01               	movlw	high _myPANID
 24188  008914  0101               	movlb	1	; () banked
 24189  008916  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 24190  008918  ECCB  F057         	call	_MiMAC_SetAltAddress	;wreg free
 24191                           
 24192                           ;miwi_mesh.c: 4868: MiWiStateMachine.bits.memberOfNetwork = 1;
 24193  00891C  0101               	movlb	1	; () banked
 24194  00891E  83B6               	bsf	_MiWiStateMachine& (0+255),1,b
 24195                           
 24196                           ; BSR set to: 1
 24197                           ;miwi_mesh.c: 4869: role = 0x02;
 24198  008920  0E02               	movlw	2
 24199  008922  0101               	movlb	1	; () banked
 24200  008924  6FCB               	movwf	_role& (0+255),b
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;miwi_mesh.c: 4870: MiWiCapacityInfo.bits.Role = role;
 24204  008926  C1CB  F146         	movff	_role,??_MiApp_StartConnection
 24205  00892A  0101               	movlb	1	; () banked
 24206  00892C  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 24207  00892E  0101               	movlb	1	; () banked
 24208  008930  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 24209  008932  0101               	movlb	1	; () banked
 24210  008934  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 24211  008936  0BF9               	andlw	-7
 24212  008938  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 24213  00893A  0101               	movlb	1	; () banked
 24214  00893C  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 24215                           
 24216                           ; BSR set to: 1
 24217                           ;miwi_mesh.c: 4871: knownCoordinators = 0x01;
 24218  00893E  0E01               	movlw	1
 24219  008940  0101               	movlb	1	; () banked
 24220  008942  6FC8               	movwf	_knownCoordinators& (0+255),b
 24221                           
 24222                           ; BSR set to: 1
 24223                           ;miwi_mesh.c: 4881: return 1;
 24224                           ;	Return value of _MiApp_StartConnection is never used
 24225  008944  0012               	return	
 24226  008946                     l19072:
 24227                           
 24228                           ; BSR set to: 1
 24229                           ;miwi_mesh.c: 4886: {
 24230                           ;miwi_mesh.c: 4887: uint8_t channel;
 24231                           ;miwi_mesh.c: 4888: uint8_t RSSIValue;
 24232                           ;miwi_mesh.c: 4890: channel = MiApp_NoiseDetection(ChannelMap, ScanDuration, 0x00, &RSSI
      +                          Value);
 24233  008946  C142  F11D         	movff	MiApp_StartConnection@ChannelMap,MiApp_NoiseDetection@ChannelMap
 24234  00894A  C143  F11E         	movff	MiApp_StartConnection@ChannelMap+1,MiApp_NoiseDetection@ChannelMap+1
 24235  00894E  C144  F11F         	movff	MiApp_StartConnection@ChannelMap+2,MiApp_NoiseDetection@ChannelMap+2
 24236  008952  C145  F120         	movff	MiApp_StartConnection@ChannelMap+3,MiApp_NoiseDetection@ChannelMap+3
 24237  008956  C141  F121         	movff	MiApp_StartConnection@ScanDuration,MiApp_NoiseDetection@ScanDuration
 24238  00895A  0E00               	movlw	0
 24239  00895C  0101               	movlb	1	; () banked
 24240  00895E  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
 24241  008960  0E49               	movlw	low MiApp_StartConnection@RSSIValue
 24242  008962  0101               	movlb	1	; () banked
 24243  008964  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
 24244  008966  0E01               	movlw	high MiApp_StartConnection@RSSIValue
 24245  008968  0101               	movlb	1	; () banked
 24246  00896A  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
 24247  00896C  EC4B  F038         	call	_MiApp_NoiseDetection	;wreg free
 24248  008970  0101               	movlb	1	; () banked
 24249  008972  6F48               	movwf	MiApp_StartConnection@channel& (0+255),b
 24250                           
 24251                           ; BSR set to: 1
 24252                           ;miwi_mesh.c: 4891: MiApp_SetChannel(channel);
 24253  008974  0101               	movlb	1	; () banked
 24254  008976  5148               	movf	MiApp_StartConnection@channel& (0+255),w,b
 24255  008978  EC5D  F057         	call	_MiApp_SetChannel
 24256                           
 24257                           ;miwi_mesh.c: 4892: ;
 24258                           ;miwi_mesh.c: 4893: ;
 24259                           ;miwi_mesh.c: 4894: ;
 24260                           ;miwi_mesh.c: 4895: MiWiStateMachine.bits.memberOfNetwork = 1;
 24261  00897C  0101               	movlb	1	; () banked
 24262  00897E  83B6               	bsf	_MiWiStateMachine& (0+255),1,b
 24263                           
 24264                           ; BSR set to: 1
 24265                           ;miwi_mesh.c: 4896: myShortAddress.Val = 0;
 24266  008980  0E00               	movlw	0
 24267  008982  0101               	movlb	1	; () banked
 24268  008984  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 24269  008986  0E00               	movlw	0
 24270  008988  6FF2               	movwf	_myShortAddress& (0+255),b
 24271                           
 24272                           ; BSR set to: 1
 24273                           ;miwi_mesh.c: 4897: myParent = 0xFF;
 24274  00898A  0101               	movlb	1	; () banked
 24275  00898C  69CA               	setf	_myParent& (0+255),b
 24276                           
 24277                           ; BSR set to: 1
 24278                           ;miwi_mesh.c: 4902: myPANID.Val = 0x1337;
 24279  00898E  0E13               	movlw	19
 24280  008990  0101               	movlb	1	; () banked
 24281  008992  6FF1               	movwf	(_myPANID+1)& (0+255),b
 24282  008994  0E37               	movlw	55
 24283  008996  6FF0               	movwf	_myPANID& (0+255),b
 24284                           
 24285                           ; BSR set to: 1
 24286                           ;miwi_mesh.c: 4904: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 24287  008998  0EF2               	movlw	low _myShortAddress
 24288  00899A  0101               	movlb	1	; () banked
 24289  00899C  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 24290  00899E  0E01               	movlw	high _myShortAddress
 24291  0089A0  0101               	movlb	1	; () banked
 24292  0089A2  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 24293  0089A4  0EF0               	movlw	low _myPANID
 24294  0089A6  0101               	movlb	1	; () banked
 24295  0089A8  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 24296  0089AA  0E01               	movlw	high _myPANID
 24297  0089AC  0101               	movlb	1	; () banked
 24298  0089AE  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 24299  0089B0  ECCB  F057         	call	_MiMAC_SetAltAddress	;wreg free
 24300                           
 24301                           ;miwi_mesh.c: 4905: role = 0x02;
 24302  0089B4  0E02               	movlw	2
 24303  0089B6  0101               	movlb	1	; () banked
 24304  0089B8  6FCB               	movwf	_role& (0+255),b
 24305                           
 24306                           ; BSR set to: 1
 24307                           ;miwi_mesh.c: 4906: MiWiCapacityInfo.bits.Role = role;
 24308  0089BA  C1CB  F146         	movff	_role,??_MiApp_StartConnection
 24309  0089BE  0101               	movlb	1	; () banked
 24310  0089C0  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 24311  0089C2  0101               	movlb	1	; () banked
 24312  0089C4  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 24313  0089C6  0101               	movlb	1	; () banked
 24314  0089C8  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 24315  0089CA  0BF9               	andlw	-7
 24316  0089CC  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 24317  0089CE  0101               	movlb	1	; () banked
 24318  0089D0  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 24319                           
 24320                           ; BSR set to: 1
 24321                           ;miwi_mesh.c: 4907: knownCoordinators = 0x01;
 24322  0089D2  0E01               	movlw	1
 24323  0089D4  0101               	movlb	1	; () banked
 24324  0089D6  6FC8               	movwf	_knownCoordinators& (0+255),b
 24325                           
 24326                           ; BSR set to: 1
 24327                           ;miwi_mesh.c: 4929: }
 24328                           
 24329                           ; BSR set to: 1
 24330                           ;miwi_mesh.c: 4928: break;
 24331                           
 24332                           ;miwi_mesh.c: 4927: default:
 24333                           
 24334                           ; BSR set to: 1
 24335                           ;miwi_mesh.c: 4925: return 0;
 24336                           ;	Return value of _MiApp_StartConnection is never used
 24337                           
 24338                           ;miwi_mesh.c: 4918: }
 24339                           ;miwi_mesh.c: 4923: case 0x02:
 24340                           
 24341                           ; BSR set to: 1
 24342                           ;miwi_mesh.c: 4917: return 1;
 24343                           ;	Return value of _MiApp_StartConnection is never used
 24344  0089D8  0012               	return	
 24345  0089DA                     l19096:
 24346  0089DA  0101               	movlb	1	; () banked
 24347  0089DC  5147               	movf	MiApp_StartConnection@Mode& (0+255),w,b
 24348                           
 24349                           ; Switch size 1, requested type "space"
 24350                           ; Number of cases is 3, Range of values is 0 to 2
 24351                           ; switch strategies available:
 24352                           ; Name         Instructions Cycles
 24353                           ; simple_byte           10     6 (average)
 24354                           ;	Chosen strategy is simple_byte
 24355  0089DE  0A00               	xorlw	0	; case 0
 24356  0089E0  B4D8               	btfsc	status,2,c
 24357  0089E2  D782               	goto	l19056
 24358  0089E4  0A01               	xorlw	1	; case 1
 24359  0089E6  B4D8               	btfsc	status,2,c
 24360  0089E8  D7AE               	goto	l19072
 24361  0089EA  0A03               	xorlw	3	; case 2
 24362  0089EC  0012               	return	
 24363  0089EE                     __end_of_MiApp_StartConnection:
 24364                           	opt stack 0
 24365                           tblptru	equ	0xFF8
 24366                           tblptrh	equ	0xFF7
 24367                           tblptrl	equ	0xFF6
 24368                           tablat	equ	0xFF5
 24369                           prodh	equ	0xFF4
 24370                           prodl	equ	0xFF3
 24371                           intcon	equ	0xFF2
 24372                           intcon2	equ	0xFF1
 24373                           intcon3	equ	0xFF0
 24374                           indf0	equ	0xFEF
 24375                           postinc0	equ	0xFEE
 24376                           plusw0	equ	0xFEB
 24377                           fsr0h	equ	0xFEA
 24378                           fsr0l	equ	0xFE9
 24379                           wreg	equ	0xFE8
 24380                           indf1	equ	0xFE7
 24381                           postinc1	equ	0xFE6
 24382                           postdec1	equ	0xFE5
 24383                           fsr1h	equ	0xFE2
 24384                           fsr1l	equ	0xFE1
 24385                           indf2	equ	0xFDF
 24386                           postinc2	equ	0xFDE
 24387                           postdec2	equ	0xFDD
 24388                           plusw2	equ	0xFDB
 24389                           fsr2h	equ	0xFDA
 24390                           fsr2l	equ	0xFD9
 24391                           status	equ	0xFD8
 24392                           
 24393 ;; *************** function _MiApp_NoiseDetection *****************
 24394 ;; Defined at:
 24395 ;;		line 4980 in file "src/miwi/miwi_mesh.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;  ChannelMap      4   29[BANK1 ] unsigned long 
 24398 ;;  ScanDuration    1   33[BANK1 ] unsigned char 
 24399 ;;  DetectionMod    1   34[BANK1 ] unsigned char 
 24400 ;;  RSSIValue       2   35[BANK1 ] PTR unsigned char 
 24401 ;;		 -> noise_level(1), MiApp_StartConnection@RSSIValue(1), 
 24402 ;; Auto vars:     Size  Location     Type
 24403 ;;  maxRSSI         1   64[BANK1 ] unsigned char 
 24404 ;;  RSSIcheck       1   61[BANK1 ] unsigned char 
 24405 ;;  k               1   60[BANK1 ] unsigned char 
 24406 ;;  j               1   59[BANK1 ] unsigned char 
 24407 ;;  t2              4   54[BANK1 ] struct _MIWI_TICK
 24408 ;;  t1              4   50[BANK1 ] struct _MIWI_TICK
 24409 ;;  channelMask     4   46[BANK1 ] unsigned long 
 24410 ;;  i               1   63[BANK1 ] unsigned char 
 24411 ;;  minRSSI         1   62[BANK1 ] unsigned char 
 24412 ;;  OptimalChann    1   58[BANK1 ] unsigned char 
 24413 ;; Return value:  Size  Location     Type
 24414 ;;                  1    wreg      unsigned char 
 24415 ;; Registers used:
 24416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24417 ;; Tracked objects:
 24418 ;;		On entry : 0/0
 24419 ;;		On exit  : 0/0
 24420 ;;		Unchanged: 0/0
 24421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24422 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24423 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24424 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24425 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24426 ;;Total ram usage:       36 bytes
 24427 ;; Hardware stack levels used:    1
 24428 ;; Hardware stack levels required when called:   21
 24429 ;; This function calls:
 24430 ;;		_MiApp_SetChannel
 24431 ;;		_MiMAC_ChannelAssessment
 24432 ;;		_MiWi_TickGet
 24433 ;;		___awdiv
 24434 ;; This function is called by:
 24435 ;;		_MiApp_StartConnection
 24436 ;;		_main
 24437 ;; This function uses a non-reentrant model
 24438 ;;
 24439                           
 24440                           	psect	text55
 24441  007096                     __ptext55:
 24442                           	opt stack 0
 24443  007096                     _MiApp_NoiseDetection:
 24444                           	opt stack 8
 24445                           
 24446                           ;miwi_mesh.c: 4982: uint8_t i;
 24447                           ;miwi_mesh.c: 4983: uint8_t OptimalChannel;
 24448                           ;miwi_mesh.c: 4984: uint8_t minRSSI = 0xFF;
 24449                           
 24450                           ; BSR set to: 1
 24451                           ;incstack = 0
 24452  007096  0101               	movlb	1	; () banked
 24453  007098  693E               	setf	MiApp_NoiseDetection@minRSSI& (0+255),b
 24454                           
 24455                           ; BSR set to: 1
 24456                           ;miwi_mesh.c: 4985: uint32_t channelMask = 0x00000001;
 24457  00709A  0E01               	movlw	1
 24458  00709C  0101               	movlb	1	; () banked
 24459  00709E  6F2E               	movwf	MiApp_NoiseDetection@channelMask& (0+255),b
 24460  0070A0  0E00               	movlw	0
 24461  0070A2  6F2F               	movwf	(MiApp_NoiseDetection@channelMask+1)& (0+255),b
 24462  0070A4  0E00               	movlw	0
 24463  0070A6  6F30               	movwf	(MiApp_NoiseDetection@channelMask+2)& (0+255),b
 24464  0070A8  0E00               	movlw	0
 24465  0070AA  6F31               	movwf	(MiApp_NoiseDetection@channelMask+3)& (0+255),b
 24466                           
 24467                           ;miwi_mesh.c: 4986: MIWI_TICK t1, t2;
 24468                           ;miwi_mesh.c: 4988: if( DetectionMode != 0x00 )
 24469  0070AC  0101               	movlb	1	; () banked
 24470  0070AE  5122               	movf	MiApp_NoiseDetection@DetectionMode& (0+255),w,b
 24471  0070B0  0101               	movlb	1	; () banked
 24472  0070B2  B4D8               	btfsc	status,2,c
 24473  0070B4  D002               	goto	l17898
 24474                           
 24475                           ; BSR set to: 1
 24476                           ;miwi_mesh.c: 4989: {
 24477                           ;miwi_mesh.c: 4990: return 0xFF;
 24478  0070B6  0EFF               	movlw	255
 24479                           
 24480                           ; BSR set to: 1
 24481  0070B8  0012               	return	
 24482  0070BA                     l17898:
 24483                           
 24484                           ; BSR set to: 1
 24485                           ;miwi_mesh.c: 4991: }
 24486                           ;miwi_mesh.c: 4993: ;
 24487                           ;miwi_mesh.c: 4994: i = 0;
 24488  0070BA  0E00               	movlw	0
 24489  0070BC  0101               	movlb	1	; () banked
 24490  0070BE  6F3F               	movwf	MiApp_NoiseDetection@i& (0+255),b
 24491                           
 24492                           ;miwi_mesh.c: 4995: while( i < 32 )
 24493  0070C0  D0DA               	goto	l17938
 24494  0070C2                     l17900:
 24495                           
 24496                           ; BSR set to: 1
 24497                           ;miwi_mesh.c: 4996: {
 24498                           ;miwi_mesh.c: 4997: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 24499  0070C2  C13F  F125         	movff	MiApp_NoiseDetection@i,??_MiApp_NoiseDetection
 24500  0070C6  C12E  F126         	movff	MiApp_NoiseDetection@channelMask,??_MiApp_NoiseDetection+1
 24501  0070CA  C12F  F127         	movff	MiApp_NoiseDetection@channelMask+1,??_MiApp_NoiseDetection+2
 24502  0070CE  C130  F128         	movff	MiApp_NoiseDetection@channelMask+2,??_MiApp_NoiseDetection+3
 24503  0070D2  C131  F129         	movff	MiApp_NoiseDetection@channelMask+3,??_MiApp_NoiseDetection+4
 24504  0070D6  0101               	movlb	1	; () banked
 24505  0070D8  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 24506  0070DA  D006               	goto	u19540
 24507  0070DC                     u19545:
 24508  0070DC  90D8               	bcf	status,0,c
 24509  0070DE  0101               	movlb	1	; () banked
 24510  0070E0  3726               	rlcf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 24511  0070E2  3727               	rlcf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 24512  0070E4  3728               	rlcf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 24513  0070E6  3729               	rlcf	(??_MiApp_NoiseDetection+4)& (0+255),f,b
 24514  0070E8                     u19540:
 24515  0070E8  0101               	movlb	1	; () banked
 24516  0070EA  2F25               	decfsz	??_MiApp_NoiseDetection& (0+255),f,b
 24517  0070EC  D7F7               	goto	u19545
 24518  0070EE  0101               	movlb	1	; () banked
 24519  0070F0  511D               	movf	MiApp_NoiseDetection@ChannelMap& (0+255),w,b
 24520  0070F2  0101               	movlb	1	; () banked
 24521  0070F4  1526               	andwf	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 24522  0070F6  0101               	movlb	1	; () banked
 24523  0070F8  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 24524  0070FA  0101               	movlb	1	; () banked
 24525  0070FC  511E               	movf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),w,b
 24526  0070FE  0101               	movlb	1	; () banked
 24527  007100  1527               	andwf	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 24528  007102  0101               	movlb	1	; () banked
 24529  007104  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 24530  007106  0101               	movlb	1	; () banked
 24531  007108  511F               	movf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),w,b
 24532  00710A  0101               	movlb	1	; () banked
 24533  00710C  1528               	andwf	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 24534  00710E  0101               	movlb	1	; () banked
 24535  007110  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 24536  007112  0101               	movlb	1	; () banked
 24537  007114  5120               	movf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),w,b
 24538  007116  0101               	movlb	1	; () banked
 24539  007118  1529               	andwf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 24540  00711A  0101               	movlb	1	; () banked
 24541  00711C  6F2D               	movwf	(??_MiApp_NoiseDetection+8)& (0+255),b
 24542  00711E  0101               	movlb	1	; () banked
 24543  007120  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 24544  007122  0101               	movlb	1	; () banked
 24545  007124  112B               	iorwf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 24546  007126  0101               	movlb	1	; () banked
 24547  007128  112C               	iorwf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 24548  00712A  0101               	movlb	1	; () banked
 24549  00712C  112D               	iorwf	(??_MiApp_NoiseDetection+8)& (0+255),w,b
 24550  00712E  B4D8               	btfsc	status,2,c
 24551  007130  D0A0               	goto	l17936
 24552                           
 24553                           ; BSR set to: 1
 24554                           ;miwi_mesh.c: 4998: {
 24555                           ;miwi_mesh.c: 4999: uint8_t RSSIcheck;
 24556                           ;miwi_mesh.c: 5000: uint8_t maxRSSI = 0;
 24557  007132  0E00               	movlw	0
 24558  007134  0101               	movlb	1	; () banked
 24559  007136  6F40               	movwf	MiApp_NoiseDetection@maxRSSI& (0+255),b
 24560                           
 24561                           ; BSR set to: 1
 24562                           ;miwi_mesh.c: 5001: uint8_t j, k;
 24563                           ;miwi_mesh.c: 5004: MiApp_SetChannel(i);
 24564  007138  0101               	movlb	1	; () banked
 24565  00713A  513F               	movf	MiApp_NoiseDetection@i& (0+255),w,b
 24566  00713C  EC5D  F057         	call	_MiApp_SetChannel
 24567                           
 24568                           ;miwi_mesh.c: 5006: t2 = MiWi_TickGet();
 24569  007140  EC57  F052         	call	_MiWi_TickGet	;wreg free
 24570  007144  C100  F136         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t2
 24571  007148  C101  F137         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t2+1
 24572  00714C  C102  F138         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t2+2
 24573  007150  C103  F139         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t2+3
 24574  007154                     l17908:
 24575                           
 24576                           ;miwi_mesh.c: 5009: {
 24577                           ;miwi_mesh.c: 5010: RSSIcheck = MiMAC_ChannelAssessment(0x01);
 24578  007154  0E01               	movlw	1
 24579  007156  EC2B  F042         	call	_MiMAC_ChannelAssessment
 24580  00715A  0101               	movlb	1	; () banked
 24581  00715C  6F3D               	movwf	MiApp_NoiseDetection@RSSIcheck& (0+255),b
 24582                           
 24583                           ; BSR set to: 1
 24584                           ;miwi_mesh.c: 5011: if( RSSIcheck > maxRSSI )
 24585  00715E  0101               	movlb	1	; () banked
 24586  007160  513D               	movf	MiApp_NoiseDetection@RSSIcheck& (0+255),w,b
 24587  007162  0101               	movlb	1	; () banked
 24588  007164  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 24589  007166  A0D8               	btfss	status,0,c
 24590                           
 24591                           ; BSR set to: 1
 24592                           ;miwi_mesh.c: 5012: {
 24593                           ;miwi_mesh.c: 5013: maxRSSI = RSSIcheck;
 24594  007168  C13D  F140         	movff	MiApp_NoiseDetection@RSSIcheck,MiApp_NoiseDetection@maxRSSI
 24595                           
 24596                           ; BSR set to: 1
 24597                           ;miwi_mesh.c: 5014: }
 24598                           ;miwi_mesh.c: 5018: t1 = MiWi_TickGet();
 24599                           
 24600                           ; BSR set to: 1
 24601  00716C  EC57  F052         	call	_MiWi_TickGet	;wreg free
 24602  007170  C100  F132         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t1
 24603  007174  C101  F133         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t1+1
 24604  007178  C102  F134         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t1+2
 24605  00717C  C103  F135         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t1+3
 24606                           
 24607                           ;miwi_mesh.c: 5019: if( (t1.Val - t2.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 24608  007180  C136  F125         	movff	MiApp_NoiseDetection@t2,??_MiApp_NoiseDetection
 24609  007184  C137  F126         	movff	MiApp_NoiseDetection@t2+1,??_MiApp_NoiseDetection+1
 24610  007188  C138  F127         	movff	MiApp_NoiseDetection@t2+2,??_MiApp_NoiseDetection+2
 24611  00718C  C139  F128         	movff	MiApp_NoiseDetection@t2+3,??_MiApp_NoiseDetection+3
 24612  007190  0101               	movlb	1	; () banked
 24613  007192  1F25               	comf	??_MiApp_NoiseDetection& (0+255),f,b
 24614  007194  1F26               	comf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 24615  007196  1F27               	comf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 24616  007198  1F28               	comf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 24617  00719A  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 24618  00719C  0E00               	movlw	0
 24619  00719E  2326               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 24620  0071A0  2327               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 24621  0071A2  2328               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 24622  0071A4  0101               	movlb	1	; () banked
 24623  0071A6  5132               	movf	MiApp_NoiseDetection@t1& (0+255),w,b
 24624  0071A8  0101               	movlb	1	; () banked
 24625  0071AA  2525               	addwf	??_MiApp_NoiseDetection& (0+255),w,b
 24626  0071AC  0101               	movlb	1	; () banked
 24627  0071AE  6F29               	movwf	(??_MiApp_NoiseDetection+4)& (0+255),b
 24628  0071B0  0101               	movlb	1	; () banked
 24629  0071B2  5133               	movf	(MiApp_NoiseDetection@t1+1)& (0+255),w,b
 24630  0071B4  0101               	movlb	1	; () banked
 24631  0071B6  2126               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 24632  0071B8  0101               	movlb	1	; () banked
 24633  0071BA  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 24634  0071BC  0101               	movlb	1	; () banked
 24635  0071BE  5134               	movf	(MiApp_NoiseDetection@t1+2)& (0+255),w,b
 24636  0071C0  0101               	movlb	1	; () banked
 24637  0071C2  2127               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 24638  0071C4  0101               	movlb	1	; () banked
 24639  0071C6  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 24640  0071C8  0101               	movlb	1	; () banked
 24641  0071CA  5135               	movf	(MiApp_NoiseDetection@t1+3)& (0+255),w,b
 24642  0071CC  0101               	movlb	1	; () banked
 24643  0071CE  2128               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 24644  0071D0  0101               	movlb	1	; () banked
 24645  0071D2  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 24646  0071D4  0101               	movlb	1	; () banked
 24647  0071D6  5121               	movf	MiApp_NoiseDetection@ScanDuration& (0+255),w,b
 24648  0071D8  0D04               	mullw	4
 24649  0071DA  0E35               	movlw	low _ScanTime
 24650  0071DC  24F3               	addwf	prodl,w,c
 24651  0071DE  6EF6               	movwf	tblptrl,c
 24652  0071E0  0E20               	movlw	high _ScanTime
 24653  0071E2  20F4               	addwfc	prodh,w,c
 24654  0071E4  6EF7               	movwf	tblptrh,c
 24655  0071E6                     	if	1	;There are 3 active tblptr bytes
 24656  0071E6  6AF8               	clrf	tblptru,c
 24657  0071E8  0E00               	movlw	low (__mediumconst shr (0+16))
 24658  0071EA  22F8               	addwfc	tblptru,f,c
 24659  0071EC                     	endif
 24660  0071EC  0101               	movlb	1	; () banked
 24661  0071EE  5129               	movf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 24662  0071F0  0009               	tblrd		*+
 24663  0071F2  5CF5               	subwf	tablat,w,c
 24664  0071F4  0101               	movlb	1	; () banked
 24665  0071F6  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 24666  0071F8  0009               	tblrd		*+
 24667  0071FA  58F5               	subwfb	tablat,w,c
 24668  0071FC  0101               	movlb	1	; () banked
 24669  0071FE  512B               	movf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 24670  007200  0009               	tblrd		*+
 24671  007202  58F5               	subwfb	tablat,w,c
 24672  007204  0101               	movlb	1	; () banked
 24673  007206  512C               	movf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 24674  007208  0009               	tblrd		*+
 24675  00720A  58F5               	subwfb	tablat,w,c
 24676  00720C  B0D8               	btfsc	status,0,c
 24677  00720E  D7A2               	goto	l17908
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;miwi_mesh.c: 5023: }
 24681                           ;miwi_mesh.c: 5024: }
 24682                           ;miwi_mesh.c: 5026: ;
 24683                           ;miwi_mesh.c: 5027: ;
 24684                           ;miwi_mesh.c: 5028: ;
 24685                           ;miwi_mesh.c: 5029: j = maxRSSI/5;
 24686                           
 24687                           ; BSR set to: 1
 24688                           
 24689                           ; BSR set to: 1
 24690                           
 24691                           ; BSR set to: 1
 24692                           
 24693                           ; BSR set to: 1
 24694                           ;miwi_mesh.c: 5020: {
 24695                           ;miwi_mesh.c: 5022: break;
 24696  007210  C140  F106         	movff	MiApp_NoiseDetection@maxRSSI,___awdiv@dividend
 24697  007214  0101               	movlb	1	; () banked
 24698  007216  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24699  007218  0E00               	movlw	0
 24700  00721A  0101               	movlb	1	; () banked
 24701  00721C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24702  00721E  0E05               	movlw	5
 24703  007220  6F08               	movwf	___awdiv@divisor& (0+255),b
 24704  007222  EC81  F04B         	call	___awdiv	;wreg free
 24705  007226  0101               	movlb	1	; () banked
 24706  007228  5106               	movf	?___awdiv& (0+255),w,b
 24707  00722A  0101               	movlb	1	; () banked
 24708  00722C  6F3B               	movwf	MiApp_NoiseDetection@j& (0+255),b
 24709                           
 24710                           ; BSR set to: 1
 24711                           ;miwi_mesh.c: 5030: for(k = 0; k < j; k++)
 24712  00722E  0E00               	movlw	0
 24713  007230  0101               	movlb	1	; () banked
 24714  007232  6F3C               	movwf	MiApp_NoiseDetection@k& (0+255),b
 24715  007234  D002               	goto	l17926
 24716  007236                     l17924:
 24717                           
 24718                           ; BSR set to: 1
 24719                           ;miwi_mesh.c: 5031: {
 24720                           ;miwi_mesh.c: 5032: ;
 24721  007236  0101               	movlb	1	; () banked
 24722  007238  2B3C               	incf	MiApp_NoiseDetection@k& (0+255),f,b
 24723  00723A                     l17926:
 24724                           
 24725                           ; BSR set to: 1
 24726  00723A  0101               	movlb	1	; () banked
 24727  00723C  513B               	movf	MiApp_NoiseDetection@j& (0+255),w,b
 24728  00723E  0101               	movlb	1	; () banked
 24729  007240  5D3C               	subwf	MiApp_NoiseDetection@k& (0+255),w,b
 24730  007242  A0D8               	btfss	status,0,c
 24731  007244  D7F8               	goto	l17924
 24732                           
 24733                           ; BSR set to: 1
 24734                           ;miwi_mesh.c: 5033: }
 24735                           ;miwi_mesh.c: 5034: ;
 24736                           ;miwi_mesh.c: 5035: ;
 24737                           ;miwi_mesh.c: 5037: if( maxRSSI < minRSSI )
 24738                           
 24739                           ; BSR set to: 1
 24740  007246  0101               	movlb	1	; () banked
 24741  007248  513E               	movf	MiApp_NoiseDetection@minRSSI& (0+255),w,b
 24742  00724A  0101               	movlb	1	; () banked
 24743  00724C  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 24744  00724E  B0D8               	btfsc	status,0,c
 24745  007250  D010               	goto	l17936
 24746                           
 24747                           ; BSR set to: 1
 24748                           ;miwi_mesh.c: 5038: {
 24749                           ;miwi_mesh.c: 5039: minRSSI = maxRSSI;
 24750  007252  C140  F13E         	movff	MiApp_NoiseDetection@maxRSSI,MiApp_NoiseDetection@minRSSI
 24751                           
 24752                           ;miwi_mesh.c: 5040: OptimalChannel = i;
 24753  007256  C13F  F13A         	movff	MiApp_NoiseDetection@i,MiApp_NoiseDetection@OptimalChannel
 24754                           
 24755                           ; BSR set to: 1
 24756                           ;miwi_mesh.c: 5041: if( RSSIValue )
 24757  00725A  0101               	movlb	1	; () banked
 24758  00725C  5123               	movf	MiApp_NoiseDetection@RSSIValue& (0+255),w,b
 24759  00725E  0101               	movlb	1	; () banked
 24760  007260  1124               	iorwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),w,b
 24761  007262  B4D8               	btfsc	status,2,c
 24762  007264  D006               	goto	l17936
 24763                           
 24764                           ; BSR set to: 1
 24765                           ;miwi_mesh.c: 5042: {
 24766                           ;miwi_mesh.c: 5043: *RSSIValue = minRSSI;
 24767  007266  C123  FFD9         	movff	MiApp_NoiseDetection@RSSIValue,fsr2l
 24768  00726A  C124  FFDA         	movff	MiApp_NoiseDetection@RSSIValue+1,fsr2h
 24769  00726E  C13E  FFDF         	movff	MiApp_NoiseDetection@minRSSI,indf2
 24770  007272                     l17936:
 24771                           
 24772                           ; BSR set to: 1
 24773                           ;miwi_mesh.c: 5044: }
 24774                           ;miwi_mesh.c: 5045: }
 24775                           ;miwi_mesh.c: 5046: }
 24776                           ;miwi_mesh.c: 5047: i++;
 24777  007272  0101               	movlb	1	; () banked
 24778  007274  2B3F               	incf	MiApp_NoiseDetection@i& (0+255),f,b
 24779  007276                     l17938:
 24780                           
 24781                           ; BSR set to: 1
 24782  007276  0E1F               	movlw	31
 24783  007278  0101               	movlb	1	; () banked
 24784  00727A  653F               	cpfsgt	MiApp_NoiseDetection@i& (0+255),b
 24785  00727C  D722               	goto	l17900
 24786                           
 24787                           ; BSR set to: 1
 24788                           ;miwi_mesh.c: 5048: }
 24789                           ;miwi_mesh.c: 5050: return OptimalChannel;
 24790                           
 24791                           ; BSR set to: 1
 24792  00727E  0101               	movlb	1	; () banked
 24793  007280  513A               	movf	MiApp_NoiseDetection@OptimalChannel& (0+255),w,b
 24794  007282  0012               	return	
 24795  007284                     __end_of_MiApp_NoiseDetection:
 24796                           	opt stack 0
 24797                           tblptru	equ	0xFF8
 24798                           tblptrh	equ	0xFF7
 24799                           tblptrl	equ	0xFF6
 24800                           tablat	equ	0xFF5
 24801                           prodh	equ	0xFF4
 24802                           prodl	equ	0xFF3
 24803                           intcon	equ	0xFF2
 24804                           intcon2	equ	0xFF1
 24805                           intcon3	equ	0xFF0
 24806                           indf0	equ	0xFEF
 24807                           postinc0	equ	0xFEE
 24808                           plusw0	equ	0xFEB
 24809                           fsr0h	equ	0xFEA
 24810                           fsr0l	equ	0xFE9
 24811                           wreg	equ	0xFE8
 24812                           indf1	equ	0xFE7
 24813                           postinc1	equ	0xFE6
 24814                           postdec1	equ	0xFE5
 24815                           fsr1h	equ	0xFE2
 24816                           fsr1l	equ	0xFE1
 24817                           indf2	equ	0xFDF
 24818                           postinc2	equ	0xFDE
 24819                           postdec2	equ	0xFDD
 24820                           plusw2	equ	0xFDB
 24821                           fsr2h	equ	0xFDA
 24822                           fsr2l	equ	0xFD9
 24823                           status	equ	0xFD8
 24824                           
 24825 ;; *************** function _MiWi_TickGet *****************
 24826 ;; Defined at:
 24827 ;;		line 105 in file "src/18F27J53/symbol.c"
 24828 ;; Parameters:    Size  Location     Type
 24829 ;;		None
 24830 ;; Auto vars:     Size  Location     Type
 24831 ;;  currentTime     4    6[BANK1 ] struct _MIWI_TICK
 24832 ;;  failureCount    1    5[BANK1 ] unsigned char 
 24833 ;; Return value:  Size  Location     Type
 24834 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 24835 ;; Registers used:
 24836 ;;		wreg, status,2, status,0
 24837 ;; Tracked objects:
 24838 ;;		On entry : 0/0
 24839 ;;		On exit  : 0/0
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24842 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;Total ram usage:       10 bytes
 24847 ;; Hardware stack levels used:    1
 24848 ;; Hardware stack levels required when called:   16
 24849 ;; This function calls:
 24850 ;;		Nothing
 24851 ;; This function is called by:
 24852 ;;		_TxPacket
 24853 ;;		_MiMAC_ReceivedPacket
 24854 ;;		_BroadcastJitter
 24855 ;;		_MiWiTasks
 24856 ;;		_MiApp_UnicastAddress
 24857 ;;		_MiApp_NoiseDetection
 24858 ;;		_OpenSocket
 24859 ;;		_MiApp_SearchConnection
 24860 ;;		_MiApp_EstablishConnection
 24861 ;;		_MiApp_UnicastConnection
 24862 ;; This function uses a non-reentrant model
 24863 ;;
 24864                           
 24865                           	psect	text56
 24866  00A4AE                     __ptext56:
 24867                           	opt stack 0
 24868  00A4AE                     _MiWi_TickGet:
 24869                           	opt stack 8
 24870                           
 24871                           ;symbol.c: 107: MIWI_TICK currentTime;
 24872                           ;symbol.c: 110: uint8_t failureCounter;
 24873                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 24874                           
 24875                           ; BSR set to: 1
 24876                           ;incstack = 0
 24877  00A4AE  909D               	bcf	3997,0,c	;volatile
 24878                           
 24879                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 24880  00A4B0  0E00               	movlw	0
 24881  00A4B2  0101               	movlb	1	; () banked
 24882  00A4B4  6F08               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 24883                           
 24884                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 24885  00A4B6  0E00               	movlw	0
 24886  00A4B8  0101               	movlb	1	; () banked
 24887  00A4BA  6F09               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 24888                           
 24889                           ;symbol.c: 119: failureCounter = 0;
 24890  00A4BC  0E00               	movlw	0
 24891  00A4BE  0101               	movlb	1	; () banked
 24892  00A4C0  6F05               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 24893  00A4C2                     l15720:
 24894                           
 24895                           ; BSR set to: 1
 24896                           ;symbol.c: 122: {
 24897                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 24898  00A4C2  CFCE F106          	movff	4046,MiWi_TickGet@currentTime	;volatile
 24899                           
 24900                           ; BSR set to: 1
 24901                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 24902  00A4C6  CFCF F107          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 24903                           
 24904                           ; BSR set to: 1
 24905                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 24906  00A4CA  0101               	movlb	1	; () banked
 24907  00A4CC  2906               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 24908  00A4CE  E10D               	bnz	l62
 24909  00A4D0  0101               	movlb	1	; () banked
 24910  00A4D2  2907               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 24911  00A4D4  A4D8               	btfss	status,2,c
 24912  00A4D6  D009               	goto	l62
 24913                           
 24914                           ; BSR set to: 1
 24915  00A4D8  0101               	movlb	1	; () banked
 24916  00A4DA  2B05               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 24917  00A4DC  0505               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 24918  00A4DE  0101               	movlb	1	; () banked
 24919  00A4E0  6F04               	movwf	??_MiWi_TickGet& (0+255),b
 24920  00A4E2  0E02               	movlw	2
 24921  00A4E4  0101               	movlb	1	; () banked
 24922  00A4E6  6504               	cpfsgt	??_MiWi_TickGet& (0+255),b
 24923  00A4E8  D7EC               	goto	l15720
 24924  00A4EA                     l62:
 24925                           
 24926                           ; BSR set to: 1
 24927                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 24928  00A4EA  A09E               	btfss	3998,0,c	;volatile
 24929  00A4EC  D008               	goto	l15734
 24930                           
 24931                           ; BSR set to: 1
 24932                           ;symbol.c: 130: {
 24933                           ;symbol.c: 132: {
 24934                           ;symbol.c: 135: currentTime.byte.b2++;
 24935  00A4EE  0101               	movlb	1	; () banked
 24936  00A4F0  2B08               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 24937                           
 24938                           ; BSR set to: 1
 24939                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 24940  00A4F2  0100               	movlb	0	; () banked
 24941  00A4F4  29E2               	incf	_timerExtension1& (0+255),w,b	;volatile
 24942  00A4F6  A4D8               	btfss	status,2,c
 24943  00A4F8  D002               	goto	l15734
 24944                           
 24945                           ; BSR set to: 0
 24946                           ;symbol.c: 137: {
 24947                           ;symbol.c: 138: currentTime.byte.b3++;
 24948  00A4FA  0101               	movlb	1	; () banked
 24949  00A4FC  2B09               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 24950  00A4FE                     l15734:
 24951                           
 24952                           ;symbol.c: 139: }
 24953                           ;symbol.c: 140: }
 24954                           ;symbol.c: 141: }
 24955                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 24956  00A4FE  0100               	movlb	0	; () banked
 24957  00A500  51E2               	movf	_timerExtension1& (0+255),w,b	;volatile
 24958  00A502  0101               	movlb	1	; () banked
 24959  00A504  2708               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 24960                           
 24961                           ; BSR set to: 1
 24962                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 24963  00A506  0100               	movlb	0	; () banked
 24964  00A508  51E3               	movf	_timerExtension2& (0+255),w,b	;volatile
 24965  00A50A  0101               	movlb	1	; () banked
 24966  00A50C  2709               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 24967                           
 24968                           ; BSR set to: 1
 24969                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 24970  00A50E  809D               	bsf	3997,0,c	;volatile
 24971                           
 24972                           ; BSR set to: 1
 24973                           ;symbol.c: 150: return currentTime;
 24974  00A510  C106  F100         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 24975  00A514  C107  F101         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 24976  00A518  C108  F102         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 24977  00A51C  C109  F103         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 24978  00A520  0012               	return	
 24979  00A522                     __end_of_MiWi_TickGet:
 24980                           	opt stack 0
 24981                           tblptru	equ	0xFF8
 24982                           tblptrh	equ	0xFF7
 24983                           tblptrl	equ	0xFF6
 24984                           tablat	equ	0xFF5
 24985                           prodh	equ	0xFF4
 24986                           prodl	equ	0xFF3
 24987                           intcon	equ	0xFF2
 24988                           intcon2	equ	0xFF1
 24989                           intcon3	equ	0xFF0
 24990                           indf0	equ	0xFEF
 24991                           postinc0	equ	0xFEE
 24992                           plusw0	equ	0xFEB
 24993                           fsr0h	equ	0xFEA
 24994                           fsr0l	equ	0xFE9
 24995                           wreg	equ	0xFE8
 24996                           indf1	equ	0xFE7
 24997                           postinc1	equ	0xFE6
 24998                           postdec1	equ	0xFE5
 24999                           fsr1h	equ	0xFE2
 25000                           fsr1l	equ	0xFE1
 25001                           indf2	equ	0xFDF
 25002                           postinc2	equ	0xFDE
 25003                           postdec2	equ	0xFDD
 25004                           plusw2	equ	0xFDB
 25005                           fsr2h	equ	0xFDA
 25006                           fsr2l	equ	0xFD9
 25007                           status	equ	0xFD8
 25008                           
 25009 ;; *************** function _MiMAC_ChannelAssessment *****************
 25010 ;; Defined at:
 25011 ;;		line 1092 in file "src/miwi/drv_mrf_miwi_89xa.c"
 25012 ;; Parameters:    Size  Location     Type
 25013 ;;  AssessmentMo    1    wreg     unsigned char 
 25014 ;; Auto vars:     Size  Location     Type
 25015 ;;  AssessmentMo    1   24[BANK1 ] unsigned char 
 25016 ;;  result          6   18[BANK1 ] unsigned char [6]
 25017 ;;  count           2   26[BANK1 ] unsigned int 
 25018 ;;  i               1   28[BANK1 ] unsigned char 
 25019 ;;  k               1   25[BANK1 ] unsigned char 
 25020 ;; Return value:  Size  Location     Type
 25021 ;;                  1    wreg      unsigned char 
 25022 ;; Registers used:
 25023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25030 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25031 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25032 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25033 ;;Total ram usage:       15 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:   19
 25036 ;; This function calls:
 25037 ;;		_RegisterRead
 25038 ;;		___awdiv
 25039 ;;		___lwdiv
 25040 ;; This function is called by:
 25041 ;;		_MiApp_NoiseDetection
 25042 ;; This function uses a non-reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text57
 25046  008456                     __ptext57:
 25047                           	opt stack 0
 25048  008456                     _MiMAC_ChannelAssessment:
 25049                           	opt stack 9
 25050                           
 25051                           ; BSR set to: 1
 25052                           ;incstack = 0
 25053                           ;MiMAC_ChannelAssessment@AssessmentMode stored from wreg
 25054  008456  0101               	movlb	1	; () banked
 25055  008458  6F18               	movwf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),b
 25056                           
 25057                           ;drv_mrf_miwi_89xa.c: 1094: uint8_t i;
 25058                           ;drv_mrf_miwi_89xa.c: 1095: uint8_t k;
 25059                           ;drv_mrf_miwi_89xa.c: 1096: uint16_t count=0;
 25060  00845A  0E00               	movlw	0
 25061  00845C  0101               	movlb	1	; () banked
 25062  00845E  6F1B               	movwf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 25063  008460  0E00               	movlw	0
 25064  008462  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 25065                           
 25066                           ; BSR set to: 1
 25067                           ;drv_mrf_miwi_89xa.c: 1097: uint8_t result[6] = {42, 78, 114, 150, 186 ,222};
 25068  008464  EE22  F0F9         	lfsr	2,MiMAC_ChannelAssessment@F10758
 25069  008468  EE11  F012         	lfsr	1,MiMAC_ChannelAssessment@result
 25070  00846C  0E05               	movlw	5
 25071  00846E                     u17911:
 25072  00846E  CFDB FFE3          	movff	plusw2,plusw1
 25073  008472  06E8               	decf	wreg,f,c
 25074  008474  E2FC               	bc	u17911
 25075                           
 25076                           ; BSR set to: 1
 25077                           ;drv_mrf_miwi_89xa.c: 1099: for(i = 0; i < 0xFF; i++)
 25078  008476  0E00               	movlw	0
 25079  008478  0101               	movlb	1	; () banked
 25080  00847A  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 25081  00847C                     l16842:
 25082                           
 25083                           ; BSR set to: 1
 25084  00847C  0101               	movlb	1	; () banked
 25085  00847E  291C               	incf	MiMAC_ChannelAssessment@i& (0+255),w,b
 25086  008480  B4D8               	btfsc	status,2,c
 25087  008482  D041               	goto	l16868
 25088                           
 25089                           ; BSR set to: 1
 25090                           ;drv_mrf_miwi_89xa.c: 1100: {
 25091                           ;drv_mrf_miwi_89xa.c: 1101: if( AssessmentMode == 0x00 )
 25092                           
 25093                           ; BSR set to: 1
 25094                           
 25095                           ; BSR set to: 1
 25096  008484  0101               	movlb	1	; () banked
 25097  008486  5118               	movf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 25098  008488  0101               	movlb	1	; () banked
 25099  00848A  A4D8               	btfss	status,2,c
 25100  00848C  D012               	goto	l16850
 25101                           
 25102                           ; BSR set to: 1
 25103                           ;drv_mrf_miwi_89xa.c: 1102: {
 25104                           ;drv_mrf_miwi_89xa.c: 1103: count += ((RegisterRead(0x2800>>8)/2));
 25105  00848E  0E28               	movlw	40
 25106  008490  EC8D  F054         	call	_RegisterRead
 25107  008494  0101               	movlb	1	; () banked
 25108  008496  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 25109  008498  0101               	movlb	1	; () banked
 25110  00849A  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 25111  00849C  0101               	movlb	1	; () banked
 25112  00849E  6F06               	movwf	___awdiv@dividend& (0+255),b
 25113  0084A0  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 25114  0084A2  0E00               	movlw	0
 25115  0084A4  0101               	movlb	1	; () banked
 25116  0084A6  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25117  0084A8  0E02               	movlw	2
 25118  0084AA  6F08               	movwf	___awdiv@divisor& (0+255),b
 25119  0084AC  EC81  F04B         	call	___awdiv	;wreg free
 25120  0084B0  D015               	goto	L16
 25121  0084B2                     l16850:
 25122                           
 25123                           ; BSR set to: 1
 25124                           ;drv_mrf_miwi_89xa.c: 1105: else if( AssessmentMode == 0x01 )
 25125  0084B2  0101               	movlb	1	; () banked
 25126  0084B4  0518               	decf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 25127  0084B6  A4D8               	btfss	status,2,c
 25128  0084B8  D019               	goto	l16854
 25129                           
 25130                           ; BSR set to: 1
 25131                           ;drv_mrf_miwi_89xa.c: 1106: {
 25132                           ;drv_mrf_miwi_89xa.c: 1107: count += ((RegisterRead(0x2800>>8)/2));
 25133  0084BA  0E28               	movlw	40
 25134  0084BC  EC8D  F054         	call	_RegisterRead
 25135  0084C0  0101               	movlb	1	; () banked
 25136  0084C2  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 25137  0084C4  0101               	movlb	1	; () banked
 25138  0084C6  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 25139  0084C8  0101               	movlb	1	; () banked
 25140  0084CA  6F06               	movwf	___awdiv@dividend& (0+255),b
 25141  0084CC  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 25142  0084CE  0E00               	movlw	0
 25143  0084D0  0101               	movlb	1	; () banked
 25144  0084D2  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 25145  0084D4  0E02               	movlw	2
 25146  0084D6  6F08               	movwf	___awdiv@divisor& (0+255),b
 25147  0084D8  EC81  F04B         	call	___awdiv	;wreg free
 25148  0084DC                     L16:
 25149  0084DC  0101               	movlb	1	; () banked
 25150  0084DE  5106               	movf	?___awdiv& (0+255),w,b
 25151  0084E0  0101               	movlb	1	; () banked
 25152  0084E2  271A               	addwf	MiMAC_ChannelAssessment@count& (0+255),f,b
 25153  0084E4  0101               	movlb	1	; () banked
 25154  0084E6  5107               	movf	(?___awdiv+1)& (0+255),w,b
 25155  0084E8  0101               	movlb	1	; () banked
 25156  0084EA  231B               	addwfc	(MiMAC_ChannelAssessment@count+1)& (0+255),f,b
 25157  0084EC                     l16854:
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;drv_mrf_miwi_89xa.c: 1109: }
 25161                           ;drv_mrf_miwi_89xa.c: 1110: for(k = 0; k < 0xFF; k++) {}
 25162  0084EC  0E00               	movlw	0
 25163  0084EE  0101               	movlb	1	; () banked
 25164  0084F0  6F19               	movwf	MiMAC_ChannelAssessment@k& (0+255),b
 25165  0084F2                     l16856:
 25166                           
 25167                           ; BSR set to: 1
 25168  0084F2  0101               	movlb	1	; () banked
 25169  0084F4  2919               	incf	MiMAC_ChannelAssessment@k& (0+255),w,b
 25170  0084F6  B4D8               	btfsc	status,2,c
 25171  0084F8  D003               	goto	l16864
 25172                           
 25173                           ; BSR set to: 1
 25174                           
 25175                           ; BSR set to: 1
 25176                           
 25177                           ; BSR set to: 1
 25178  0084FA  0101               	movlb	1	; () banked
 25179  0084FC  2B19               	incf	MiMAC_ChannelAssessment@k& (0+255),f,b
 25180  0084FE  D7F9               	goto	l16856
 25181  008500                     l16864:
 25182                           
 25183                           ; BSR set to: 1
 25184  008500  0101               	movlb	1	; () banked
 25185  008502  2B1C               	incf	MiMAC_ChannelAssessment@i& (0+255),f,b
 25186  008504  D7BB               	goto	l16842
 25187  008506                     l16868:
 25188                           
 25189                           ; BSR set to: 1
 25190                           ;drv_mrf_miwi_89xa.c: 1111: }
 25191                           ;drv_mrf_miwi_89xa.c: 1113: count = (count>>8);
 25192  008506  0101               	movlb	1	; () banked
 25193  008508  511B               	movf	(MiMAC_ChannelAssessment@count+1)& (0+255),w,b
 25194  00850A  0101               	movlb	1	; () banked
 25195  00850C  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 25196  00850E  6B1B               	clrf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 25197                           
 25198                           ; BSR set to: 1
 25199                           ;drv_mrf_miwi_89xa.c: 1114: i = (count/10);
 25200  008510  C11A  F100         	movff	MiMAC_ChannelAssessment@count,___lwdiv@dividend
 25201  008514  C11B  F101         	movff	MiMAC_ChannelAssessment@count+1,___lwdiv@dividend+1
 25202  008518  0E00               	movlw	0
 25203  00851A  0101               	movlb	1	; () banked
 25204  00851C  6F03               	movwf	(___lwdiv@divisor+1)& (0+255),b
 25205  00851E  0E0A               	movlw	10
 25206  008520  6F02               	movwf	___lwdiv@divisor& (0+255),b
 25207  008522  ECE0  F051         	call	___lwdiv	;wreg free
 25208  008526  0101               	movlb	1	; () banked
 25209  008528  5100               	movf	?___lwdiv& (0+255),w,b
 25210  00852A  0101               	movlb	1	; () banked
 25211  00852C  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 25212                           
 25213                           ; BSR set to: 1
 25214                           ;drv_mrf_miwi_89xa.c: 1115: if(i>6) i = 6;
 25215  00852E  0E06               	movlw	6
 25216  008530  0101               	movlb	1	; () banked
 25217  008532  651C               	cpfsgt	MiMAC_ChannelAssessment@i& (0+255),b
 25218  008534  D003               	goto	l383
 25219                           
 25220                           ; BSR set to: 1
 25221  008536  0E06               	movlw	6
 25222  008538  0101               	movlb	1	; () banked
 25223  00853A  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 25224  00853C                     l383:
 25225                           
 25226                           ; BSR set to: 1
 25227                           ;drv_mrf_miwi_89xa.c: 1116: if(i<1) i = 1;
 25228  00853C  0101               	movlb	1	; () banked
 25229  00853E  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 25230  008540  0101               	movlb	1	; () banked
 25231  008542  A4D8               	btfss	status,2,c
 25232  008544  D003               	goto	l16878
 25233                           
 25234                           ; BSR set to: 1
 25235  008546  0E01               	movlw	1
 25236  008548  0101               	movlb	1	; () banked
 25237  00854A  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 25238  00854C                     l16878:
 25239                           
 25240                           ; BSR set to: 1
 25241                           ;drv_mrf_miwi_89xa.c: 1117: return(result[i-1]);
 25242  00854C  0EFF               	movlw	255
 25243  00854E  0101               	movlb	1	; () banked
 25244  008550  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 25245  008552  0EFF               	movlw	255
 25246  008554  0101               	movlb	1	; () banked
 25247  008556  6F0F               	movwf	(??_MiMAC_ChannelAssessment+1)& (0+255),b
 25248  008558  0101               	movlb	1	; () banked
 25249  00855A  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 25250  00855C  0101               	movlb	1	; () banked
 25251  00855E  6F10               	movwf	(??_MiMAC_ChannelAssessment+2)& (0+255),b
 25252  008560  6B11               	clrf	(??_MiMAC_ChannelAssessment+3)& (0+255),b
 25253  008562  0101               	movlb	1	; () banked
 25254  008564  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 25255  008566  0101               	movlb	1	; () banked
 25256  008568  2710               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),f,b
 25257  00856A  0101               	movlb	1	; () banked
 25258  00856C  510F               	movf	(??_MiMAC_ChannelAssessment+1)& (0+255),w,b
 25259  00856E  0101               	movlb	1	; () banked
 25260  008570  2311               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),f,b
 25261  008572  0E12               	movlw	low MiMAC_ChannelAssessment@result
 25262  008574  0101               	movlb	1	; () banked
 25263  008576  2510               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),w,b
 25264  008578  6ED9               	movwf	fsr2l,c
 25265  00857A  0E01               	movlw	high MiMAC_ChannelAssessment@result
 25266  00857C  0101               	movlb	1	; () banked
 25267  00857E  2111               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),w,b
 25268  008580  6EDA               	movwf	fsr2h,c
 25269  008582  50DF               	movf	indf2,w,c
 25270  008584  0012               	return	
 25271  008586                     __end_of_MiMAC_ChannelAssessment:
 25272                           	opt stack 0
 25273                           tblptru	equ	0xFF8
 25274                           tblptrh	equ	0xFF7
 25275                           tblptrl	equ	0xFF6
 25276                           tablat	equ	0xFF5
 25277                           prodh	equ	0xFF4
 25278                           prodl	equ	0xFF3
 25279                           intcon	equ	0xFF2
 25280                           intcon2	equ	0xFF1
 25281                           intcon3	equ	0xFF0
 25282                           indf0	equ	0xFEF
 25283                           postinc0	equ	0xFEE
 25284                           plusw0	equ	0xFEB
 25285                           fsr0h	equ	0xFEA
 25286                           fsr0l	equ	0xFE9
 25287                           wreg	equ	0xFE8
 25288                           indf1	equ	0xFE7
 25289                           postinc1	equ	0xFE6
 25290                           postdec1	equ	0xFE5
 25291                           plusw1	equ	0xFE3
 25292                           fsr1h	equ	0xFE2
 25293                           fsr1l	equ	0xFE1
 25294                           indf2	equ	0xFDF
 25295                           postinc2	equ	0xFDE
 25296                           postdec2	equ	0xFDD
 25297                           plusw2	equ	0xFDB
 25298                           fsr2h	equ	0xFDA
 25299                           fsr2l	equ	0xFD9
 25300                           status	equ	0xFD8
 25301                           
 25302 ;; *************** function ___lwdiv *****************
 25303 ;; Defined at:
 25304 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lwdiv.c"
 25305 ;; Parameters:    Size  Location     Type
 25306 ;;  dividend        2    0[BANK1 ] unsigned int 
 25307 ;;  divisor         2    2[BANK1 ] unsigned int 
 25308 ;; Auto vars:     Size  Location     Type
 25309 ;;  quotient        2    5[BANK1 ] unsigned int 
 25310 ;;  counter         1    4[BANK1 ] unsigned char 
 25311 ;; Return value:  Size  Location     Type
 25312 ;;                  2    0[BANK1 ] unsigned int 
 25313 ;; Registers used:
 25314 ;;		wreg, status,2, status,0
 25315 ;; Tracked objects:
 25316 ;;		On entry : 0/0
 25317 ;;		On exit  : 0/0
 25318 ;;		Unchanged: 0/0
 25319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25320 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25321 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25323 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25324 ;;Total ram usage:        7 bytes
 25325 ;; Hardware stack levels used:    1
 25326 ;; Hardware stack levels required when called:   16
 25327 ;; This function calls:
 25328 ;;		Nothing
 25329 ;; This function is called by:
 25330 ;;		_MiMAC_ChannelAssessment
 25331 ;;		_sprintf
 25332 ;; This function uses a non-reentrant model
 25333 ;;
 25334                           
 25335                           	psect	text58
 25336  00A3C0                     __ptext58:
 25337                           	opt stack 0
 25338  00A3C0                     ___lwdiv:
 25339                           	opt stack 13
 25340                           
 25341                           ; BSR set to: 1
 25342                           ;incstack = 0
 25343  00A3C0  0E00               	movlw	0
 25344  00A3C2  0101               	movlb	1	; () banked
 25345  00A3C4  6F06               	movwf	(___lwdiv@quotient+1)& (0+255),b
 25346  00A3C6  0E00               	movlw	0
 25347  00A3C8  6F05               	movwf	___lwdiv@quotient& (0+255),b
 25348                           
 25349                           ; BSR set to: 1
 25350  00A3CA  0101               	movlb	1	; () banked
 25351  00A3CC  5102               	movf	___lwdiv@divisor& (0+255),w,b
 25352  00A3CE  0101               	movlb	1	; () banked
 25353  00A3D0  1103               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 25354  00A3D2  B4D8               	btfsc	status,2,c
 25355  00A3D4  D02C               	goto	l2583
 25356                           
 25357                           ; BSR set to: 1
 25358  00A3D6  0E01               	movlw	1
 25359  00A3D8  0101               	movlb	1	; () banked
 25360  00A3DA  6F04               	movwf	___lwdiv@counter& (0+255),b
 25361  00A3DC  D006               	goto	l16808
 25362  00A3DE                     l16806:
 25363                           
 25364                           ; BSR set to: 1
 25365  00A3DE  0101               	movlb	1	; () banked
 25366  00A3E0  90D8               	bcf	status,0,c
 25367  00A3E2  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
 25368  00A3E4  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 25369  00A3E6  0101               	movlb	1	; () banked
 25370  00A3E8  2B04               	incf	___lwdiv@counter& (0+255),f,b
 25371  00A3EA                     l16808:
 25372                           
 25373                           ; BSR set to: 1
 25374  00A3EA  0101               	movlb	1	; () banked
 25375  00A3EC  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 25376  00A3EE  D7F7               	goto	l16806
 25377  00A3F0                     l16810:
 25378                           
 25379                           ; BSR set to: 1
 25380  00A3F0  0101               	movlb	1	; () banked
 25381  00A3F2  90D8               	bcf	status,0,c
 25382  00A3F4  3705               	rlcf	___lwdiv@quotient& (0+255),f,b
 25383  00A3F6  3706               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 25384                           
 25385                           ; BSR set to: 1
 25386  00A3F8  0101               	movlb	1	; () banked
 25387  00A3FA  5102               	movf	___lwdiv@divisor& (0+255),w,b
 25388  00A3FC  0101               	movlb	1	; () banked
 25389  00A3FE  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
 25390  00A400  0101               	movlb	1	; () banked
 25391  00A402  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25392  00A404  0101               	movlb	1	; () banked
 25393  00A406  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 25394  00A408  A0D8               	btfss	status,0,c
 25395  00A40A  D00A               	goto	l16818
 25396                           
 25397                           ; BSR set to: 1
 25398  00A40C  0101               	movlb	1	; () banked
 25399  00A40E  5102               	movf	___lwdiv@divisor& (0+255),w,b
 25400  00A410  0101               	movlb	1	; () banked
 25401  00A412  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
 25402  00A414  0101               	movlb	1	; () banked
 25403  00A416  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 25404  00A418  0101               	movlb	1	; () banked
 25405  00A41A  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 25406                           
 25407                           ; BSR set to: 1
 25408  00A41C  0101               	movlb	1	; () banked
 25409  00A41E  8105               	bsf	___lwdiv@quotient& (0+255),0,b
 25410  00A420                     l16818:
 25411                           
 25412                           ; BSR set to: 1
 25413  00A420  0101               	movlb	1	; () banked
 25414  00A422  90D8               	bcf	status,0,c
 25415  00A424  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 25416  00A426  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
 25417                           
 25418                           ; BSR set to: 1
 25419  00A428  0101               	movlb	1	; () banked
 25420  00A42A  2F04               	decfsz	___lwdiv@counter& (0+255),f,b
 25421  00A42C  D7E1               	goto	l16810
 25422  00A42E                     l2583:
 25423                           
 25424                           ; BSR set to: 1
 25425  00A42E  C105  F100         	movff	___lwdiv@quotient,?___lwdiv
 25426  00A432  C106  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25427                           
 25428                           ; BSR set to: 1
 25429  00A436  0012               	return		;funcret
 25430  00A438                     __end_of___lwdiv:
 25431                           	opt stack 0
 25432                           tblptru	equ	0xFF8
 25433                           tblptrh	equ	0xFF7
 25434                           tblptrl	equ	0xFF6
 25435                           tablat	equ	0xFF5
 25436                           prodh	equ	0xFF4
 25437                           prodl	equ	0xFF3
 25438                           intcon	equ	0xFF2
 25439                           intcon2	equ	0xFF1
 25440                           intcon3	equ	0xFF0
 25441                           indf0	equ	0xFEF
 25442                           postinc0	equ	0xFEE
 25443                           plusw0	equ	0xFEB
 25444                           fsr0h	equ	0xFEA
 25445                           fsr0l	equ	0xFE9
 25446                           wreg	equ	0xFE8
 25447                           indf1	equ	0xFE7
 25448                           postinc1	equ	0xFE6
 25449                           postdec1	equ	0xFE5
 25450                           plusw1	equ	0xFE3
 25451                           fsr1h	equ	0xFE2
 25452                           fsr1l	equ	0xFE1
 25453                           indf2	equ	0xFDF
 25454                           postinc2	equ	0xFDE
 25455                           postdec2	equ	0xFDD
 25456                           plusw2	equ	0xFDB
 25457                           fsr2h	equ	0xFDA
 25458                           fsr2l	equ	0xFD9
 25459                           status	equ	0xFD8
 25460                           
 25461 ;; *************** function ___awdiv *****************
 25462 ;; Defined at:
 25463 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/awdiv.c"
 25464 ;; Parameters:    Size  Location     Type
 25465 ;;  dividend        2    6[BANK1 ] int 
 25466 ;;  divisor         2    8[BANK1 ] int 
 25467 ;; Auto vars:     Size  Location     Type
 25468 ;;  quotient        2   12[BANK1 ] int 
 25469 ;;  sign            1   11[BANK1 ] unsigned char 
 25470 ;;  counter         1   10[BANK1 ] unsigned char 
 25471 ;; Return value:  Size  Location     Type
 25472 ;;                  2    6[BANK1 ] int 
 25473 ;; Registers used:
 25474 ;;		wreg, status,2, status,0
 25475 ;; Tracked objects:
 25476 ;;		On entry : 0/0
 25477 ;;		On exit  : 0/0
 25478 ;;		Unchanged: 0/0
 25479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25480 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25483 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25484 ;;Total ram usage:        8 bytes
 25485 ;; Hardware stack levels used:    1
 25486 ;; Hardware stack levels required when called:   16
 25487 ;; This function calls:
 25488 ;;		Nothing
 25489 ;; This function is called by:
 25490 ;;		_MiMAC_ChannelAssessment
 25491 ;;		_CTR
 25492 ;;		_CBC_MAC
 25493 ;;		_MiApp_NoiseDetection
 25494 ;;		_send_complete_update
 25495 ;;		_send_periodic_update
 25496 ;; This function uses a non-reentrant model
 25497 ;;
 25498                           
 25499                           	psect	text59
 25500  009702                     __ptext59:
 25501                           	opt stack 0
 25502  009702                     ___awdiv:
 25503                           	opt stack 13
 25504                           
 25505                           ; BSR set to: 1
 25506                           ;incstack = 0
 25507  009702  0E00               	movlw	0
 25508  009704  0101               	movlb	1	; () banked
 25509  009706  6F0B               	movwf	___awdiv@sign& (0+255),b
 25510                           
 25511                           ; BSR set to: 1
 25512  009708  0101               	movlb	1	; () banked
 25513  00970A  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25514  00970C  D008               	goto	l15680
 25515                           
 25516                           ; BSR set to: 1
 25517  00970E  0101               	movlb	1	; () banked
 25518  009710  6D08               	negf	___awdiv@divisor& (0+255),b
 25519  009712  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 25520  009714  B0D8               	btfsc	status,0,c
 25521  009716  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 25522                           
 25523                           ; BSR set to: 1
 25524  009718  0E01               	movlw	1
 25525  00971A  0101               	movlb	1	; () banked
 25526  00971C  6F0B               	movwf	___awdiv@sign& (0+255),b
 25527  00971E                     l15680:
 25528                           
 25529                           ; BSR set to: 1
 25530  00971E  0101               	movlb	1	; () banked
 25531  009720  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 25532  009722  D008               	goto	l15686
 25533                           
 25534                           ; BSR set to: 1
 25535  009724  0101               	movlb	1	; () banked
 25536  009726  6D06               	negf	___awdiv@dividend& (0+255),b
 25537  009728  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 25538  00972A  B0D8               	btfsc	status,0,c
 25539  00972C  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 25540                           
 25541                           ; BSR set to: 1
 25542  00972E  0E01               	movlw	1
 25543  009730  0101               	movlb	1	; () banked
 25544  009732  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 25545  009734                     l15686:
 25546                           
 25547                           ; BSR set to: 1
 25548  009734  0E00               	movlw	0
 25549  009736  0101               	movlb	1	; () banked
 25550  009738  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 25551  00973A  0E00               	movlw	0
 25552  00973C  6F0C               	movwf	___awdiv@quotient& (0+255),b
 25553                           
 25554                           ; BSR set to: 1
 25555  00973E  0101               	movlb	1	; () banked
 25556  009740  5108               	movf	___awdiv@divisor& (0+255),w,b
 25557  009742  0101               	movlb	1	; () banked
 25558  009744  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 25559  009746  B4D8               	btfsc	status,2,c
 25560  009748  D02C               	goto	l15708
 25561                           
 25562                           ; BSR set to: 1
 25563  00974A  0E01               	movlw	1
 25564  00974C  0101               	movlb	1	; () banked
 25565  00974E  6F0A               	movwf	___awdiv@counter& (0+255),b
 25566  009750  D006               	goto	l15694
 25567  009752                     l15692:
 25568                           
 25569                           ; BSR set to: 1
 25570  009752  0101               	movlb	1	; () banked
 25571  009754  90D8               	bcf	status,0,c
 25572  009756  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 25573  009758  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 25574  00975A  0101               	movlb	1	; () banked
 25575  00975C  2B0A               	incf	___awdiv@counter& (0+255),f,b
 25576  00975E                     l15694:
 25577                           
 25578                           ; BSR set to: 1
 25579  00975E  0101               	movlb	1	; () banked
 25580  009760  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25581  009762  D7F7               	goto	l15692
 25582  009764                     l15696:
 25583                           
 25584                           ; BSR set to: 1
 25585  009764  0101               	movlb	1	; () banked
 25586  009766  90D8               	bcf	status,0,c
 25587  009768  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 25588  00976A  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 25589                           
 25590                           ; BSR set to: 1
 25591  00976C  0101               	movlb	1	; () banked
 25592  00976E  5108               	movf	___awdiv@divisor& (0+255),w,b
 25593  009770  0101               	movlb	1	; () banked
 25594  009772  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 25595  009774  0101               	movlb	1	; () banked
 25596  009776  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25597  009778  0101               	movlb	1	; () banked
 25598  00977A  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 25599  00977C  A0D8               	btfss	status,0,c
 25600  00977E  D00A               	goto	l15704
 25601                           
 25602                           ; BSR set to: 1
 25603  009780  0101               	movlb	1	; () banked
 25604  009782  5108               	movf	___awdiv@divisor& (0+255),w,b
 25605  009784  0101               	movlb	1	; () banked
 25606  009786  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 25607  009788  0101               	movlb	1	; () banked
 25608  00978A  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25609  00978C  0101               	movlb	1	; () banked
 25610  00978E  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 25611                           
 25612                           ; BSR set to: 1
 25613  009790  0101               	movlb	1	; () banked
 25614  009792  810C               	bsf	___awdiv@quotient& (0+255),0,b
 25615  009794                     l15704:
 25616                           
 25617                           ; BSR set to: 1
 25618  009794  0101               	movlb	1	; () banked
 25619  009796  90D8               	bcf	status,0,c
 25620  009798  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 25621  00979A  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 25622                           
 25623                           ; BSR set to: 1
 25624  00979C  0101               	movlb	1	; () banked
 25625  00979E  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 25626  0097A0  D7E1               	goto	l15696
 25627  0097A2                     l15708:
 25628                           
 25629                           ; BSR set to: 1
 25630  0097A2  0101               	movlb	1	; () banked
 25631  0097A4  510B               	movf	___awdiv@sign& (0+255),w,b
 25632  0097A6  0101               	movlb	1	; () banked
 25633  0097A8  B4D8               	btfsc	status,2,c
 25634  0097AA  D005               	goto	l15712
 25635                           
 25636                           ; BSR set to: 1
 25637  0097AC  0101               	movlb	1	; () banked
 25638  0097AE  6D0C               	negf	___awdiv@quotient& (0+255),b
 25639  0097B0  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 25640  0097B2  B0D8               	btfsc	status,0,c
 25641  0097B4  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 25642  0097B6                     l15712:
 25643                           
 25644                           ; BSR set to: 1
 25645  0097B6  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 25646  0097BA  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 25647  0097BE  0012               	return	
 25648  0097C0                     __end_of___awdiv:
 25649                           	opt stack 0
 25650                           tblptru	equ	0xFF8
 25651                           tblptrh	equ	0xFF7
 25652                           tblptrl	equ	0xFF6
 25653                           tablat	equ	0xFF5
 25654                           prodh	equ	0xFF4
 25655                           prodl	equ	0xFF3
 25656                           intcon	equ	0xFF2
 25657                           intcon2	equ	0xFF1
 25658                           intcon3	equ	0xFF0
 25659                           indf0	equ	0xFEF
 25660                           postinc0	equ	0xFEE
 25661                           plusw0	equ	0xFEB
 25662                           fsr0h	equ	0xFEA
 25663                           fsr0l	equ	0xFE9
 25664                           wreg	equ	0xFE8
 25665                           indf1	equ	0xFE7
 25666                           postinc1	equ	0xFE6
 25667                           postdec1	equ	0xFE5
 25668                           plusw1	equ	0xFE3
 25669                           fsr1h	equ	0xFE2
 25670                           fsr1l	equ	0xFE1
 25671                           indf2	equ	0xFDF
 25672                           postinc2	equ	0xFDE
 25673                           postdec2	equ	0xFDD
 25674                           plusw2	equ	0xFDB
 25675                           fsr2h	equ	0xFDA
 25676                           fsr2l	equ	0xFD9
 25677                           status	equ	0xFD8
 25678                           
 25679 ;; *************** function _RegisterRead *****************
 25680 ;; Defined at:
 25681 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 25682 ;; Parameters:    Size  Location     Type
 25683 ;;  address         1    wreg     unsigned char 
 25684 ;; Auto vars:     Size  Location     Type
 25685 ;;  address         1    5[BANK1 ] unsigned char 
 25686 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 25687 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 25688 ;;  value           1    2[BANK1 ] unsigned char 
 25689 ;; Return value:  Size  Location     Type
 25690 ;;                  1    wreg      unsigned char 
 25691 ;; Registers used:
 25692 ;;		wreg, status,2, status,0, cstack
 25693 ;; Tracked objects:
 25694 ;;		On entry : 0/0
 25695 ;;		On exit  : 0/0
 25696 ;;		Unchanged: 0/0
 25697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25699 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25701 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25702 ;;Total ram usage:        4 bytes
 25703 ;; Hardware stack levels used:    1
 25704 ;; Hardware stack levels required when called:   18
 25705 ;; This function calls:
 25706 ;;		_SPIGet
 25707 ;;		_SPIPut
 25708 ;; This function is called by:
 25709 ;;		_TxPacket
 25710 ;;		_MiMAC_ChannelAssessment
 25711 ;;		_getReceiverBW
 25712 ;; This function uses a non-reentrant model
 25713 ;;
 25714                           
 25715                           	psect	text60
 25716  00A91A                     __ptext60:
 25717                           	opt stack 0
 25718  00A91A                     _RegisterRead:
 25719                           	opt stack 6
 25720                           
 25721                           ; BSR set to: 1
 25722                           ;incstack = 0
 25723                           ;RegisterRead@address stored from wreg
 25724  00A91A  0101               	movlb	1	; () banked
 25725  00A91C  6F05               	movwf	RegisterRead@address& (0+255),b
 25726                           
 25727                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 25728                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 25729  00A91E  0E00               	movlw	0
 25730  00A920  B6F0               	btfsc	intcon3,3,c	;volatile
 25731  00A922  0E01               	movlw	1
 25732  00A924  0101               	movlb	1	; () banked
 25733  00A926  6F03               	movwf	RegisterRead@IRQ1select& (0+255),b
 25734                           
 25735                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 25736  00A928  0E00               	movlw	0
 25737  00A92A  B8F2               	btfsc	intcon,4,c	;volatile
 25738  00A92C  0E01               	movlw	1
 25739  00A92E  0101               	movlb	1	; () banked
 25740  00A930  6F04               	movwf	RegisterRead@IRQ0select& (0+255),b
 25741                           
 25742                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 25743  00A932  98F2               	bcf	intcon,4,c	;volatile
 25744                           
 25745                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 25746  00A934  96F0               	bcf	intcon3,3,c	;volatile
 25747                           
 25748                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 25749  00A936  968A               	bcf	3978,3,c	;volatile
 25750                           
 25751                           ; BSR set to: 1
 25752                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 25753  00A938  0101               	movlb	1	; () banked
 25754  00A93A  5105               	movf	RegisterRead@address& (0+255),w,b
 25755  00A93C  0940               	iorlw	64
 25756  00A93E  0101               	movlb	1	; () banked
 25757  00A940  6F05               	movwf	RegisterRead@address& (0+255),b
 25758                           
 25759                           ; BSR set to: 1
 25760                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 25761  00A942  0101               	movlb	1	; () banked
 25762  00A944  5105               	movf	RegisterRead@address& (0+255),w,b
 25763  00A946  EC6F  F057         	call	_SPIPut
 25764                           
 25765                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 25766  00A94A  ECBB  F057         	call	_SPIGet	;wreg free
 25767  00A94E  0101               	movlb	1	; () banked
 25768  00A950  6F02               	movwf	RegisterRead@value& (0+255),b
 25769                           
 25770                           ; BSR set to: 1
 25771                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 25772  00A952  868A               	bsf	3978,3,c	;volatile
 25773                           
 25774                           ; BSR set to: 1
 25775                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 25776  00A954  0101               	movlb	1	; () banked
 25777  00A956  B103               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 25778  00A958  D002               	bra	u16355
 25779  00A95A  96F0               	bcf	intcon3,3,c	;volatile
 25780  00A95C  D001               	bra	u16356
 25781  00A95E                     u16355:
 25782  00A95E  86F0               	bsf	intcon3,3,c	;volatile
 25783  00A960                     u16356:
 25784                           
 25785                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 25786  00A960  0101               	movlb	1	; () banked
 25787  00A962  B104               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 25788  00A964  D002               	bra	u16365
 25789  00A966  98F2               	bcf	intcon,4,c	;volatile
 25790  00A968  D001               	bra	u16366
 25791  00A96A                     u16365:
 25792  00A96A  88F2               	bsf	intcon,4,c	;volatile
 25793  00A96C                     u16366:
 25794                           
 25795                           ;drv_mrf_miwi_89xa.c: 222: return value;
 25796  00A96C  0101               	movlb	1	; () banked
 25797  00A96E  5102               	movf	RegisterRead@value& (0+255),w,b
 25798  00A970  0012               	return	
 25799  00A972                     __end_of_RegisterRead:
 25800                           	opt stack 0
 25801                           tblptru	equ	0xFF8
 25802                           tblptrh	equ	0xFF7
 25803                           tblptrl	equ	0xFF6
 25804                           tablat	equ	0xFF5
 25805                           prodh	equ	0xFF4
 25806                           prodl	equ	0xFF3
 25807                           intcon	equ	0xFF2
 25808                           intcon2	equ	0xFF1
 25809                           intcon3	equ	0xFF0
 25810                           indf0	equ	0xFEF
 25811                           postinc0	equ	0xFEE
 25812                           plusw0	equ	0xFEB
 25813                           fsr0h	equ	0xFEA
 25814                           fsr0l	equ	0xFE9
 25815                           wreg	equ	0xFE8
 25816                           indf1	equ	0xFE7
 25817                           postinc1	equ	0xFE6
 25818                           postdec1	equ	0xFE5
 25819                           plusw1	equ	0xFE3
 25820                           fsr1h	equ	0xFE2
 25821                           fsr1l	equ	0xFE1
 25822                           indf2	equ	0xFDF
 25823                           postinc2	equ	0xFDE
 25824                           postdec2	equ	0xFDD
 25825                           plusw2	equ	0xFDB
 25826                           fsr2h	equ	0xFDA
 25827                           fsr2l	equ	0xFD9
 25828                           status	equ	0xFD8
 25829                           
 25830 ;; *************** function _SPIGet *****************
 25831 ;; Defined at:
 25832 ;;		line 104 in file "src/18F27J53/spi.c"
 25833 ;; Parameters:    Size  Location     Type
 25834 ;;		None
 25835 ;; Auto vars:     Size  Location     Type
 25836 ;;		None
 25837 ;; Return value:  Size  Location     Type
 25838 ;;                  1    wreg      unsigned char 
 25839 ;; Registers used:
 25840 ;;		wreg, status,2, cstack
 25841 ;; Tracked objects:
 25842 ;;		On entry : 0/0
 25843 ;;		On exit  : 0/0
 25844 ;;		Unchanged: 0/0
 25845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25850 ;;Total ram usage:        0 bytes
 25851 ;; Hardware stack levels used:    1
 25852 ;; Hardware stack levels required when called:   17
 25853 ;; This function calls:
 25854 ;;		_SPIPut
 25855 ;; This function is called by:
 25856 ;;		_RegisterRead
 25857 ;; This function uses a non-reentrant model
 25858 ;;
 25859                           
 25860                           	psect	text61
 25861  00AF76                     __ptext61:
 25862                           	opt stack 0
 25863  00AF76                     _SPIGet:
 25864                           	opt stack 6
 25865                           
 25866                           ;spi.c: 128: SPIPut(0x00);
 25867                           
 25868                           ; BSR set to: 1
 25869                           ;incstack = 0
 25870  00AF76  0E00               	movlw	0
 25871  00AF78  EC6F  F057         	call	_SPIPut
 25872                           
 25873                           ;spi.c: 129: return SSP2BUF;
 25874  00AF7C  5075               	movf	3957,w,c	;volatile
 25875  00AF7E  0012               	return	
 25876  00AF80                     __end_of_SPIGet:
 25877                           	opt stack 0
 25878                           tblptru	equ	0xFF8
 25879                           tblptrh	equ	0xFF7
 25880                           tblptrl	equ	0xFF6
 25881                           tablat	equ	0xFF5
 25882                           prodh	equ	0xFF4
 25883                           prodl	equ	0xFF3
 25884                           intcon	equ	0xFF2
 25885                           intcon2	equ	0xFF1
 25886                           intcon3	equ	0xFF0
 25887                           indf0	equ	0xFEF
 25888                           postinc0	equ	0xFEE
 25889                           plusw0	equ	0xFEB
 25890                           fsr0h	equ	0xFEA
 25891                           fsr0l	equ	0xFE9
 25892                           wreg	equ	0xFE8
 25893                           indf1	equ	0xFE7
 25894                           postinc1	equ	0xFE6
 25895                           postdec1	equ	0xFE5
 25896                           plusw1	equ	0xFE3
 25897                           fsr1h	equ	0xFE2
 25898                           fsr1l	equ	0xFE1
 25899                           indf2	equ	0xFDF
 25900                           postinc2	equ	0xFDE
 25901                           postdec2	equ	0xFDD
 25902                           plusw2	equ	0xFDB
 25903                           fsr2h	equ	0xFDA
 25904                           fsr2l	equ	0xFD9
 25905                           status	equ	0xFD8
 25906                           
 25907 ;; *************** function _MiApp_ProtocolInit *****************
 25908 ;; Defined at:
 25909 ;;		line 3564 in file "src/miwi/miwi_mesh.c"
 25910 ;; Parameters:    Size  Location     Type
 25911 ;;  bNetworkFree    1    wreg     unsigned char 
 25912 ;; Auto vars:     Size  Location     Type
 25913 ;;  bNetworkFree    1   23[BANK1 ] unsigned char 
 25914 ;;  MIP             3   24[BANK1 ] struct .
 25915 ;;  i               1   27[BANK1 ] unsigned char 
 25916 ;; Return value:  Size  Location     Type
 25917 ;;                  1    wreg      unsigned char 
 25918 ;; Registers used:
 25919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25920 ;; Tracked objects:
 25921 ;;		On entry : 0/0
 25922 ;;		On exit  : 0/0
 25923 ;;		Unchanged: 0/0
 25924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25926 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25927 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25928 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25929 ;;Total ram usage:        6 bytes
 25930 ;; Hardware stack levels used:    1
 25931 ;; Hardware stack levels required when called:   21
 25932 ;; This function calls:
 25933 ;;		_InitSymbolTimer
 25934 ;;		_MiApp_SetChannel
 25935 ;;		_MiMAC_Init
 25936 ;;		_MiMAC_SetAltAddress
 25937 ;; This function is called by:
 25938 ;;		_main
 25939 ;; This function uses a non-reentrant model
 25940 ;;
 25941                           
 25942                           	psect	text62
 25943  0075DE                     __ptext62:
 25944                           	opt stack 0
 25945  0075DE                     _MiApp_ProtocolInit:
 25946                           	opt stack 9
 25947                           
 25948                           ;incstack = 0
 25949                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 25950  0075DE  0101               	movlb	1	; () banked
 25951  0075E0  6F17               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 25952                           
 25953                           ;miwi_mesh.c: 3566: MACINIT_PARAM MIP;
 25954                           ;miwi_mesh.c: 3567: uint8_t i;
 25955                           ;miwi_mesh.c: 3602: myShortAddress.Val = 0xFFFF;
 25956  0075E2  0101               	movlb	1	; () banked
 25957  0075E4  69F2               	setf	_myShortAddress& (0+255),b
 25958  0075E6  69F3               	setf	(_myShortAddress+1)& (0+255),b
 25959                           
 25960                           ; BSR set to: 1
 25961                           ;miwi_mesh.c: 3603: myPANID.Val = 0x1337;
 25962  0075E8  0E13               	movlw	19
 25963  0075EA  0101               	movlb	1	; () banked
 25964  0075EC  6FF1               	movwf	(_myPANID+1)& (0+255),b
 25965  0075EE  0E37               	movlw	55
 25966  0075F0  6FF0               	movwf	_myPANID& (0+255),b
 25967                           
 25968                           ;miwi_mesh.c: 3608: for(i = 0; i < 64; i++)
 25969  0075F2  0E00               	movlw	0
 25970  0075F4  0101               	movlb	1	; () banked
 25971  0075F6  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 25972  0075F8                     l18918:
 25973                           
 25974                           ; BSR set to: 1
 25975  0075F8  0E3F               	movlw	63
 25976  0075FA  0101               	movlb	1	; () banked
 25977  0075FC  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 25978  0075FE  D001               	goto	l18922
 25979  007600  D012               	goto	l18928
 25980  007602                     l18922:
 25981                           
 25982                           ; BSR set to: 1
 25983                           ;miwi_mesh.c: 3609: {
 25984                           ;miwi_mesh.c: 3610: ConnectionTable[i].status.Val = 0;
 25985  007602  0101               	movlb	1	; () banked
 25986  007604  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 25987  007606  0D09               	mullw	9
 25988  007608  0E08               	movlw	8
 25989  00760A  26F3               	addwf	prodl,f,c
 25990  00760C  0E00               	movlw	0
 25991  00760E  22F4               	addwfc	prodh,f,c
 25992  007610  0E00               	movlw	low _ConnectionTable
 25993  007612  24F3               	addwf	prodl,w,c
 25994  007614  6ED9               	movwf	fsr2l,c
 25995  007616  0E06               	movlw	high _ConnectionTable
 25996  007618  20F4               	addwfc	prodh,w,c
 25997  00761A  6EDA               	movwf	fsr2h,c
 25998  00761C  0E00               	movlw	0
 25999  00761E  6EDF               	movwf	indf2,c
 26000                           
 26001                           ; BSR set to: 1
 26002  007620  0101               	movlb	1	; () banked
 26003  007622  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 26004  007624  D7E9               	goto	l18918
 26005  007626                     l18928:
 26006                           
 26007                           ; BSR set to: 1
 26008                           ;miwi_mesh.c: 3611: }
 26009                           ;miwi_mesh.c: 3614: for(i=0;i<8;i++)
 26010  007626  0E00               	movlw	0
 26011  007628  0101               	movlb	1	; () banked
 26012  00762A  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 26013  00762C                     l18930:
 26014                           
 26015                           ; BSR set to: 1
 26016  00762C  0E07               	movlw	7
 26017  00762E  0101               	movlb	1	; () banked
 26018  007630  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 26019  007632  D001               	goto	l18934
 26020  007634  D019               	goto	l18940
 26021  007636                     l18934:
 26022                           
 26023                           ; BSR set to: 1
 26024                           ;miwi_mesh.c: 3615: {
 26025                           ;miwi_mesh.c: 3616: RoutingTable[i] = 0;
 26026  007636  0101               	movlb	1	; () banked
 26027  007638  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 26028  00763A  0D01               	mullw	1
 26029  00763C  0EB4               	movlw	low _RoutingTable
 26030  00763E  24F3               	addwf	prodl,w,c
 26031  007640  6ED9               	movwf	fsr2l,c
 26032  007642  0E00               	movlw	high _RoutingTable
 26033  007644  20F4               	addwfc	prodh,w,c
 26034  007646  6EDA               	movwf	fsr2h,c
 26035  007648  0E00               	movlw	0
 26036  00764A  6EDF               	movwf	indf2,c
 26037                           
 26038                           ;miwi_mesh.c: 3617: RouterFailures[i] = 0;
 26039  00764C  0101               	movlb	1	; () banked
 26040  00764E  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 26041  007650  0D01               	mullw	1
 26042  007652  0EAC               	movlw	low _RouterFailures
 26043  007654  24F3               	addwf	prodl,w,c
 26044  007656  6ED9               	movwf	fsr2l,c
 26045  007658  0E00               	movlw	high _RouterFailures
 26046  00765A  20F4               	addwfc	prodh,w,c
 26047  00765C  6EDA               	movwf	fsr2h,c
 26048  00765E  0E00               	movlw	0
 26049  007660  6EDF               	movwf	indf2,c
 26050                           
 26051                           ; BSR set to: 1
 26052  007662  0101               	movlb	1	; () banked
 26053  007664  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 26054  007666  D7E2               	goto	l18930
 26055  007668                     l18940:
 26056                           
 26057                           ; BSR set to: 1
 26058                           ;miwi_mesh.c: 3618: }
 26059                           ;miwi_mesh.c: 3619: knownCoordinators = 0;
 26060  007668  0E00               	movlw	0
 26061  00766A  0101               	movlb	1	; () banked
 26062  00766C  6FC8               	movwf	_knownCoordinators& (0+255),b
 26063                           
 26064                           ;miwi_mesh.c: 3620: role = 0x00;
 26065  00766E  0E00               	movlw	0
 26066  007670  0101               	movlb	1	; () banked
 26067  007672  6FCB               	movwf	_role& (0+255),b
 26068                           
 26069                           ;miwi_mesh.c: 3622: MiWiStateMachine.Val = 0;
 26070  007674  0E00               	movlw	0
 26071  007676  0101               	movlb	1	; () banked
 26072  007678  6FB7               	movwf	(_MiWiStateMachine+1)& (0+255),b
 26073  00767A  0E00               	movlw	0
 26074  00767C  6FB6               	movwf	_MiWiStateMachine& (0+255),b
 26075                           
 26076                           ;miwi_mesh.c: 3624: openSocketInfo.status.Val = 0;
 26077  00767E  0E00               	movlw	0
 26078  007680  0101               	movlb	1	; () banked
 26079  007682  6FCD               	movwf	_openSocketInfo& (0+255),b
 26080                           
 26081                           ;miwi_mesh.c: 3625: MiWiCapacityInfo.Val = 0;
 26082  007684  0E00               	movlw	0
 26083  007686  0101               	movlb	1	; () banked
 26084  007688  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 26085                           
 26086                           ; BSR set to: 1
 26087                           ;miwi_mesh.c: 3627: InitSymbolTimer();
 26088  00768A  EC98  F057         	call	_InitSymbolTimer	;wreg free
 26089                           
 26090                           ;miwi_mesh.c: 3629: TxData = 0;
 26091  00768E  0E00               	movlw	0
 26092  007690  0101               	movlb	1	; () banked
 26093  007692  6FC7               	movwf	_TxData& (0+255),b
 26094                           
 26095                           ; BSR set to: 1
 26096                           ;miwi_mesh.c: 3645: for(i = 0; i < 64; i++)
 26097  007694  0E00               	movlw	0
 26098  007696  0101               	movlb	1	; () banked
 26099  007698  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 26100  00769A                     l18948:
 26101                           
 26102                           ; BSR set to: 1
 26103  00769A  0E3F               	movlw	63
 26104  00769C  0101               	movlb	1	; () banked
 26105  00769E  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 26106  0076A0  D001               	goto	l18952
 26107  0076A2  D010               	goto	l18958
 26108  0076A4                     l18952:
 26109                           
 26110                           ; BSR set to: 1
 26111                           ;miwi_mesh.c: 3646: {
 26112                           ;miwi_mesh.c: 3647: IncomingFrameCounter[i].Val = 0;
 26113  0076A4  0101               	movlb	1	; () banked
 26114  0076A6  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 26115  0076A8  0D04               	mullw	4
 26116  0076AA  0E00               	movlw	low _IncomingFrameCounter
 26117  0076AC  24F3               	addwf	prodl,w,c
 26118  0076AE  6ED9               	movwf	fsr2l,c
 26119  0076B0  0E05               	movlw	high _IncomingFrameCounter
 26120  0076B2  20F4               	addwfc	prodh,w,c
 26121  0076B4  6EDA               	movwf	fsr2h,c
 26122  0076B6  6ADE               	clrf	postinc2,c
 26123  0076B8  6ADE               	clrf	postinc2,c
 26124  0076BA  6ADE               	clrf	postinc2,c
 26125  0076BC  6ADD               	clrf	postdec2,c
 26126                           
 26127                           ; BSR set to: 1
 26128  0076BE  0101               	movlb	1	; () banked
 26129  0076C0  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 26130  0076C2  D7EB               	goto	l18948
 26131  0076C4                     l18958:
 26132                           
 26133                           ; BSR set to: 1
 26134                           ;miwi_mesh.c: 3648: }
 26135                           ;miwi_mesh.c: 3709: MIP.actionFlags.Val = 0;
 26136  0076C4  0E00               	movlw	0
 26137  0076C6  0101               	movlb	1	; () banked
 26138  0076C8  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 26139                           
 26140                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.PAddrLength = 4;
 26141  0076CA  0101               	movlb	1	; () banked
 26142  0076CC  5118               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 26143  0076CE  0B87               	andlw	-121
 26144  0076D0  0920               	iorlw	32
 26145  0076D2  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.CCAEnable = 1;
 26149  0076D4  0101               	movlb	1	; () banked
 26150  0076D6  8318               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 26151                           
 26152                           ; BSR set to: 1
 26153                           ;miwi_mesh.c: 3712: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 26154  0076D8  0101               	movlb	1	; () banked
 26155  0076DA  B117               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 26156  0076DC  D003               	bra	u20745
 26157  0076DE  0101               	movlb	1	; () banked
 26158  0076E0  9518               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 26159  0076E2  D002               	bra	u20746
 26160  0076E4                     u20745:
 26161  0076E4  0101               	movlb	1	; () banked
 26162  0076E6  8518               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 26163  0076E8                     u20746:
 26164                           
 26165                           ; BSR set to: 1
 26166                           ;miwi_mesh.c: 3713: MIP.PAddress = myLongAddress;
 26167  0076E8  0EE8               	movlw	low _myLongAddress
 26168  0076EA  0101               	movlb	1	; () banked
 26169  0076EC  6F19               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 26170  0076EE  0E01               	movlw	high _myLongAddress
 26171  0076F0  0101               	movlb	1	; () banked
 26172  0076F2  6F1A               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 26173                           
 26174                           ; BSR set to: 1
 26175                           ;miwi_mesh.c: 3715: MiMAC_Init(MIP);
 26176  0076F4  C118  F112         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 26177  0076F8  C119  F113         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 26178  0076FC  C11A  F114         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 26179  007700  EC11  F03F         	call	_MiMAC_Init	;wreg free
 26180                           
 26181                           ;miwi_mesh.c: 3717: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26182  007704  0EF2               	movlw	low _myShortAddress
 26183  007706  0101               	movlb	1	; () banked
 26184  007708  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26185  00770A  0E01               	movlw	high _myShortAddress
 26186  00770C  0101               	movlb	1	; () banked
 26187  00770E  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26188  007710  0EF0               	movlw	low _myPANID
 26189  007712  0101               	movlb	1	; () banked
 26190  007714  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26191  007716  0E01               	movlw	high _myPANID
 26192  007718  0101               	movlb	1	; () banked
 26193  00771A  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26194  00771C  ECCB  F057         	call	_MiMAC_SetAltAddress	;wreg free
 26195                           
 26196                           ;miwi_mesh.c: 3718: MiApp_SetChannel(currentChannel);
 26197  007720  0101               	movlb	1	; () banked
 26198  007722  51F6               	movf	_currentChannel& (0+255),w,b
 26199  007724  EC5D  F057         	call	_MiApp_SetChannel
 26200                           
 26201                           ;miwi_mesh.c: 3723: MiWiCapacityInfo.bits.Sleep = 1;
 26202  007728  0101               	movlb	1	; () banked
 26203  00772A  81C3               	bsf	_MiWiCapacityInfo& (0+255),0,b
 26204                           
 26205                           ; BSR set to: 1
 26206                           ;miwi_mesh.c: 3726: MiWiCapacityInfo.bits.Security = 1;
 26207  00772C  0101               	movlb	1	; () banked
 26208  00772E  87C3               	bsf	_MiWiCapacityInfo& (0+255),3,b
 26209                           
 26210                           ; BSR set to: 1
 26211                           ;miwi_mesh.c: 3728: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 26212  007730  C1C0  F116         	movff	_ConnMode,??_MiApp_ProtocolInit
 26213  007734  0101               	movlb	1	; () banked
 26214  007736  3B16               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 26215  007738  0101               	movlb	1	; () banked
 26216  00773A  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 26217  00773C  0101               	movlb	1	; () banked
 26218  00773E  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 26219  007740  0BCF               	andlw	-49
 26220  007742  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 26221  007744  0101               	movlb	1	; () banked
 26222  007746  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 26223                           
 26224                           ; BSR set to: 1
 26225                           ;miwi_mesh.c: 3730: MiWiCapacityInfo.bits.CoordCap = 1;
 26226  007748  0101               	movlb	1	; () banked
 26227  00774A  8DC3               	bsf	_MiWiCapacityInfo& (0+255),6,b
 26228                           
 26229                           ; BSR set to: 1
 26230                           ;miwi_mesh.c: 3731: MiWiCapacityInfo.bits.Role = role;
 26231  00774C  C1CB  F116         	movff	_role,??_MiApp_ProtocolInit
 26232  007750  0101               	movlb	1	; () banked
 26233  007752  4716               	rlncf	??_MiApp_ProtocolInit& (0+255),f,b
 26234  007754  0101               	movlb	1	; () banked
 26235  007756  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 26236  007758  0101               	movlb	1	; () banked
 26237  00775A  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 26238  00775C  0BF9               	andlw	-7
 26239  00775E  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 26240  007760  0101               	movlb	1	; () banked
 26241  007762  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 26242                           
 26243                           ; BSR set to: 1
 26244                           ;miwi_mesh.c: 3743: MiWiSeqNum = TMR1L;
 26245  007764  CFCE F1C4          	movff	4046,_MiWiSeqNum	;volatile
 26246                           
 26247                           ; BSR set to: 1
 26248                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IF = 0;
 26249  007768  90F0               	bcf	intcon3,0,c	;volatile
 26250                           
 26251                           ; BSR set to: 1
 26252                           ;miwi_mesh.c: 3746: INTCON3bits.INT1IE = 1;
 26253  00776A  86F0               	bsf	intcon3,3,c	;volatile
 26254  00776C  0012               	return	
 26255  00776E                     __end_of_MiApp_ProtocolInit:
 26256                           	opt stack 0
 26257                           tblptru	equ	0xFF8
 26258                           tblptrh	equ	0xFF7
 26259                           tblptrl	equ	0xFF6
 26260                           tablat	equ	0xFF5
 26261                           prodh	equ	0xFF4
 26262                           prodl	equ	0xFF3
 26263                           intcon	equ	0xFF2
 26264                           intcon2	equ	0xFF1
 26265                           intcon3	equ	0xFF0
 26266                           indf0	equ	0xFEF
 26267                           postinc0	equ	0xFEE
 26268                           plusw0	equ	0xFEB
 26269                           fsr0h	equ	0xFEA
 26270                           fsr0l	equ	0xFE9
 26271                           wreg	equ	0xFE8
 26272                           indf1	equ	0xFE7
 26273                           postinc1	equ	0xFE6
 26274                           postdec1	equ	0xFE5
 26275                           plusw1	equ	0xFE3
 26276                           fsr1h	equ	0xFE2
 26277                           fsr1l	equ	0xFE1
 26278                           indf2	equ	0xFDF
 26279                           postinc2	equ	0xFDE
 26280                           postdec2	equ	0xFDD
 26281                           plusw2	equ	0xFDB
 26282                           fsr2h	equ	0xFDA
 26283                           fsr2l	equ	0xFD9
 26284                           status	equ	0xFD8
 26285                           
 26286 ;; *************** function _MiMAC_SetAltAddress *****************
 26287 ;; Defined at:
 26288 ;;		line 438 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26289 ;; Parameters:    Size  Location     Type
 26290 ;;  Address         2    0[BANK1 ] PTR unsigned char 
 26291 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 26292 ;;  PANID           2    2[BANK1 ] PTR unsigned char 
 26293 ;;		 -> myPANID(2), 
 26294 ;; Auto vars:     Size  Location     Type
 26295 ;;		None
 26296 ;; Return value:  Size  Location     Type
 26297 ;;                  1    wreg      unsigned char 
 26298 ;; Registers used:
 26299 ;;		None
 26300 ;; Tracked objects:
 26301 ;;		On entry : 0/0
 26302 ;;		On exit  : 0/0
 26303 ;;		Unchanged: 0/0
 26304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26305 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26308 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26309 ;;Total ram usage:        4 bytes
 26310 ;; Hardware stack levels used:    1
 26311 ;; Hardware stack levels required when called:   16
 26312 ;; This function calls:
 26313 ;;		Nothing
 26314 ;; This function is called by:
 26315 ;;		_MiWiTasks
 26316 ;;		_MiApp_ProtocolInit
 26317 ;;		_MiApp_StartConnection
 26318 ;;		_MiApp_EstablishConnection
 26319 ;;		_MiApp_RemoveConnection
 26320 ;; This function uses a non-reentrant model
 26321 ;;
 26322                           
 26323                           	psect	text63
 26324  00AF96                     __ptext63:
 26325                           	opt stack 0
 26326  00AF96                     _MiMAC_SetAltAddress:
 26327                           	opt stack 13
 26328                           
 26329                           ;drv_mrf_miwi_89xa.c: 440: return 0;
 26330                           ;	Return value of _MiMAC_SetAltAddress is never used
 26331                           
 26332                           ; BSR set to: 1
 26333                           ;incstack = 0
 26334  00AF96  0012               	return		;funcret
 26335  00AF98                     __end_of_MiMAC_SetAltAddress:
 26336                           	opt stack 0
 26337                           tblptru	equ	0xFF8
 26338                           tblptrh	equ	0xFF7
 26339                           tblptrl	equ	0xFF6
 26340                           tablat	equ	0xFF5
 26341                           prodh	equ	0xFF4
 26342                           prodl	equ	0xFF3
 26343                           intcon	equ	0xFF2
 26344                           intcon2	equ	0xFF1
 26345                           intcon3	equ	0xFF0
 26346                           indf0	equ	0xFEF
 26347                           postinc0	equ	0xFEE
 26348                           plusw0	equ	0xFEB
 26349                           fsr0h	equ	0xFEA
 26350                           fsr0l	equ	0xFE9
 26351                           wreg	equ	0xFE8
 26352                           indf1	equ	0xFE7
 26353                           postinc1	equ	0xFE6
 26354                           postdec1	equ	0xFE5
 26355                           plusw1	equ	0xFE3
 26356                           fsr1h	equ	0xFE2
 26357                           fsr1l	equ	0xFE1
 26358                           indf2	equ	0xFDF
 26359                           postinc2	equ	0xFDE
 26360                           postdec2	equ	0xFDD
 26361                           plusw2	equ	0xFDB
 26362                           fsr2h	equ	0xFDA
 26363                           fsr2l	equ	0xFD9
 26364                           status	equ	0xFD8
 26365                           
 26366 ;; *************** function _MiMAC_Init *****************
 26367 ;; Defined at:
 26368 ;;		line 578 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26369 ;; Parameters:    Size  Location     Type
 26370 ;;  initValue       3   18[BANK1 ] struct .
 26371 ;; Auto vars:     Size  Location     Type
 26372 ;;  i               1   21[BANK1 ] unsigned char 
 26373 ;; Return value:  Size  Location     Type
 26374 ;;                  1    wreg      unsigned char 
 26375 ;; Registers used:
 26376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26377 ;; Tracked objects:
 26378 ;;		On entry : 0/0
 26379 ;;		On exit  : 0/0
 26380 ;;		Unchanged: 0/0
 26381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26382 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26383 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26385 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26386 ;;Total ram usage:        4 bytes
 26387 ;; Hardware stack levels used:    1
 26388 ;; Hardware stack levels required when called:   19
 26389 ;; This function calls:
 26390 ;;		_DELAY_ms
 26391 ;;		_RegisterSet
 26392 ;;		_SetRFMode
 26393 ;; This function is called by:
 26394 ;;		_MiApp_ProtocolInit
 26395 ;; This function uses a non-reentrant model
 26396 ;;
 26397                           
 26398                           	psect	text64
 26399  007E22                     __ptext64:
 26400                           	opt stack 0
 26401  007E22                     _MiMAC_Init:
 26402                           	opt stack 10
 26403                           
 26404                           ;drv_mrf_miwi_89xa.c: 580: uint8_t i;
 26405                           ;drv_mrf_miwi_89xa.c: 582: MACInitParams = initValue;
 26406                           
 26407                           ;incstack = 0
 26408  007E22  C112  F1AE         	movff	MiMAC_Init@initValue,_MACInitParams
 26409  007E26  C113  F1AF         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 26410  007E2A  C114  F1B0         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 26411                           
 26412                           ;drv_mrf_miwi_89xa.c: 584: DELAY_ms(20);
 26413  007E2E  0E00               	movlw	0
 26414  007E30  0101               	movlb	1	; () banked
 26415  007E32  6F0D               	movwf	(DELAY_ms@ms+1)& (0+255),b
 26416  007E34  0E14               	movlw	20
 26417  007E36  6F0C               	movwf	DELAY_ms@ms& (0+255),b
 26418  007E38  EC67  F04E         	call	_DELAY_ms	;wreg free
 26419                           
 26420                           ;drv_mrf_miwi_89xa.c: 585: LATBbits.LATB3 = 1;
 26421  007E3C  868A               	bsf	3978,3,c	;volatile
 26422                           
 26423                           ;drv_mrf_miwi_89xa.c: 586: LATCbits.LATC6 = 1;
 26424  007E3E  8C8B               	bsf	3979,6,c	;volatile
 26425                           
 26426                           ;drv_mrf_miwi_89xa.c: 589: MACSeq = TMR1L;
 26427  007E40  CFCE F1C1          	movff	4046,_MACSeq	;volatile
 26428                           
 26429                           ;drv_mrf_miwi_89xa.c: 590: ReceivedBankIndex = 0xFF;
 26430  007E44  0101               	movlb	1	; () banked
 26431  007E46  69C6               	setf	_ReceivedBankIndex& (0+255),b
 26432                           
 26433                           ; BSR set to: 1
 26434                           ;drv_mrf_miwi_89xa.c: 592: for(i = 0; i < 2; i++)
 26435  007E48  0E00               	movlw	0
 26436  007E4A  0101               	movlb	1	; () banked
 26437  007E4C  6F15               	movwf	MiMAC_Init@i& (0+255),b
 26438  007E4E                     l17816:
 26439                           
 26440                           ; BSR set to: 1
 26441  007E4E  0E01               	movlw	1
 26442  007E50  0101               	movlb	1	; () banked
 26443  007E52  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 26444  007E54  D001               	goto	l17820
 26445  007E56  D00E               	goto	l17826
 26446  007E58                     l17820:
 26447                           
 26448                           ; BSR set to: 1
 26449                           ;drv_mrf_miwi_89xa.c: 593: {
 26450                           ;drv_mrf_miwi_89xa.c: 594: RxPacket[i].flags.Val = 0;
 26451  007E58  0101               	movlb	1	; () banked
 26452  007E5A  5115               	movf	MiMAC_Init@i& (0+255),w,b
 26453  007E5C  0D42               	mullw	66
 26454  007E5E  0E00               	movlw	low _RxPacket
 26455  007E60  24F3               	addwf	prodl,w,c
 26456  007E62  6ED9               	movwf	fsr2l,c
 26457  007E64  0E03               	movlw	high _RxPacket
 26458  007E66  20F4               	addwfc	prodh,w,c
 26459  007E68  6EDA               	movwf	fsr2h,c
 26460  007E6A  0E00               	movlw	0
 26461  007E6C  6EDF               	movwf	indf2,c
 26462                           
 26463                           ; BSR set to: 1
 26464  007E6E  0101               	movlb	1	; () banked
 26465  007E70  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 26466  007E72  D7ED               	goto	l17816
 26467  007E74                     l17826:
 26468                           
 26469                           ; BSR set to: 1
 26470                           ;drv_mrf_miwi_89xa.c: 595: }
 26471                           ;drv_mrf_miwi_89xa.c: 598: for(i = 0; i < 5; i++)
 26472  007E74  0E00               	movlw	0
 26473  007E76  0101               	movlb	1	; () banked
 26474  007E78  6F15               	movwf	MiMAC_Init@i& (0+255),b
 26475  007E7A                     l17828:
 26476                           
 26477                           ; BSR set to: 1
 26478  007E7A  0E04               	movlw	4
 26479  007E7C  0101               	movlb	1	; () banked
 26480  007E7E  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 26481  007E80  D001               	goto	l17832
 26482  007E82  D00E               	goto	l17838
 26483  007E84                     l17832:
 26484                           
 26485                           ; BSR set to: 1
 26486                           ;drv_mrf_miwi_89xa.c: 599: {
 26487                           ;drv_mrf_miwi_89xa.c: 600: AckInfo[i].Valid = FALSE;
 26488  007E84  0101               	movlb	1	; () banked
 26489  007E86  5115               	movf	MiMAC_Init@i& (0+255),w,b
 26490  007E88  0D06               	mullw	6
 26491  007E8A  0E48               	movlw	low _AckInfo
 26492  007E8C  24F3               	addwf	prodl,w,c
 26493  007E8E  6ED9               	movwf	fsr2l,c
 26494  007E90  0E02               	movlw	high _AckInfo
 26495  007E92  20F4               	addwfc	prodh,w,c
 26496  007E94  6EDA               	movwf	fsr2h,c
 26497  007E96  0E00               	movlw	0
 26498  007E98  6EDF               	movwf	indf2,c
 26499                           
 26500                           ; BSR set to: 1
 26501  007E9A  0101               	movlb	1	; () banked
 26502  007E9C  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 26503  007E9E  D7ED               	goto	l17828
 26504  007EA0                     l17838:
 26505                           
 26506                           ; BSR set to: 1
 26507                           ;drv_mrf_miwi_89xa.c: 601: }
 26508                           ;drv_mrf_miwi_89xa.c: 619: OutgoingFrameCounter.Val = 1;
 26509  007EA0  0E01               	movlw	1
 26510  007EA2  0101               	movlb	1	; () banked
 26511  007EA4  6FA2               	movwf	_OutgoingFrameCounter& (0+255),b
 26512  007EA6  0E00               	movlw	0
 26513  007EA8  6FA3               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 26514  007EAA  0E00               	movlw	0
 26515  007EAC  6FA4               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 26516  007EAE  0E00               	movlw	0
 26517  007EB0  6FA5               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 26518                           
 26519                           ;drv_mrf_miwi_89xa.c: 621: for(i = 0; i < 8; i++)
 26520  007EB2  0E00               	movlw	0
 26521  007EB4  0101               	movlb	1	; () banked
 26522  007EB6  6F15               	movwf	MiMAC_Init@i& (0+255),b
 26523  007EB8                     l17840:
 26524                           
 26525                           ; BSR set to: 1
 26526  007EB8  0E07               	movlw	7
 26527  007EBA  0101               	movlb	1	; () banked
 26528  007EBC  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 26529  007EBE  D001               	goto	l17844
 26530  007EC0  D017               	goto	l17850
 26531  007EC2                     l17844:
 26532                           
 26533                           ; BSR set to: 1
 26534                           ;drv_mrf_miwi_89xa.c: 622: {
 26535                           ;drv_mrf_miwi_89xa.c: 623: key[i] = mySecurityKey[i];
 26536  007EC2  0101               	movlb	1	; () banked
 26537  007EC4  5115               	movf	MiMAC_Init@i& (0+255),w,b
 26538  007EC6  0D01               	mullw	1
 26539  007EC8  0EBC               	movlw	low _mySecurityKey
 26540  007ECA  24F3               	addwf	prodl,w,c
 26541  007ECC  6ED9               	movwf	fsr2l,c
 26542  007ECE  0E00               	movlw	high _mySecurityKey
 26543  007ED0  20F4               	addwfc	prodh,w,c
 26544  007ED2  6EDA               	movwf	fsr2h,c
 26545  007ED4  0101               	movlb	1	; () banked
 26546  007ED6  5115               	movf	MiMAC_Init@i& (0+255),w,b
 26547  007ED8  0D01               	mullw	1
 26548  007EDA  0EF1               	movlw	low _key
 26549  007EDC  24F3               	addwf	prodl,w,c
 26550  007EDE  6EE1               	movwf	fsr1l,c
 26551  007EE0  0E02               	movlw	high _key
 26552  007EE2  20F4               	addwfc	prodh,w,c
 26553  007EE4  6EE2               	movwf	fsr1h,c
 26554  007EE6  CFDF FFE7          	movff	indf2,indf1
 26555                           
 26556                           ; BSR set to: 1
 26557  007EEA  0101               	movlb	1	; () banked
 26558  007EEC  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 26559  007EEE  D7E4               	goto	l17840
 26560  007EF0                     l17850:
 26561                           
 26562                           ; BSR set to: 1
 26563                           ;drv_mrf_miwi_89xa.c: 624: }
 26564                           ;drv_mrf_miwi_89xa.c: 628: for (i = 0 ; i <= 31; i++)
 26565  007EF0  0E00               	movlw	0
 26566  007EF2  0101               	movlb	1	; () banked
 26567  007EF4  6F15               	movwf	MiMAC_Init@i& (0+255),b
 26568  007EF6                     l17852:
 26569                           
 26570                           ; BSR set to: 1
 26571  007EF6  0E1F               	movlw	31
 26572  007EF8  0101               	movlb	1	; () banked
 26573  007EFA  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 26574  007EFC  D001               	goto	l17856
 26575  007EFE  D017               	goto	l17862
 26576  007F00                     l17856:
 26577                           
 26578                           ; BSR set to: 1
 26579                           ;drv_mrf_miwi_89xa.c: 629: {
 26580                           ;drv_mrf_miwi_89xa.c: 630: RegisterSet(InitConfigRegs[i]);
 26581  007F00  0101               	movlb	1	; () banked
 26582  007F02  5115               	movf	MiMAC_Init@i& (0+255),w,b
 26583  007F04  0D02               	mullw	2
 26584  007F06  0EF5               	movlw	low _InitConfigRegs
 26585  007F08  24F3               	addwf	prodl,w,c
 26586  007F0A  6EF6               	movwf	tblptrl,c
 26587  007F0C  0E1F               	movlw	high _InitConfigRegs
 26588  007F0E  20F4               	addwfc	prodh,w,c
 26589  007F10  6EF7               	movwf	tblptrh,c
 26590  007F12                     	if	1	;There are 3 active tblptr bytes
 26591  007F12  6AF8               	clrf	tblptru,c
 26592  007F14  0E00               	movlw	low (__mediumconst shr (0+16))
 26593  007F16  22F8               	addwfc	tblptru,f,c
 26594  007F18                     	endif
 26595  007F18  0009               	tblrd		*+
 26596  007F1A  CFF5 F102          	movff	tablat,RegisterSet@setting
 26597  007F1E  000A               	tblrd		*-
 26598  007F20  CFF5 F103          	movff	tablat,RegisterSet@setting+1
 26599  007F24  EC0E  F055         	call	_RegisterSet	;wreg free
 26600  007F28  0101               	movlb	1	; () banked
 26601  007F2A  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 26602  007F2C  D7E4               	goto	l17852
 26603  007F2E                     l17862:
 26604                           
 26605                           ; BSR set to: 1
 26606                           ;drv_mrf_miwi_89xa.c: 631: }
 26607                           ;drv_mrf_miwi_89xa.c: 632: SetRFMode(0x20);
 26608  007F2E  0E20               	movlw	32
 26609  007F30  ECA5  F04F         	call	_SetRFMode
 26610                           
 26611                           ;drv_mrf_miwi_89xa.c: 634: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 26612  007F34  0E00               	movlw	0
 26613  007F36  0101               	movlb	1	; () banked
 26614  007F38  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 26615  007F3A  0E56               	movlw	86
 26616  007F3C  6F02               	movwf	RegisterSet@setting& (0+255),b
 26617  007F3E  EC0E  F055         	call	_RegisterSet	;wreg free
 26618                           
 26619                           ;drv_mrf_miwi_89xa.c: 635: SetRFMode(0x40);
 26620  007F42  0E40               	movlw	64
 26621  007F44  ECA5  F04F         	call	_SetRFMode
 26622                           
 26623                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 26624  007F48  0E1C               	movlw	28
 26625  007F4A  0101               	movlb	1	; () banked
 26626  007F4C  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 26627  007F4E  0E0F               	movlw	15
 26628  007F50  6F02               	movwf	RegisterSet@setting& (0+255),b
 26629  007F52  EC0E  F055         	call	_RegisterSet	;wreg free
 26630                           
 26631                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x60);
 26632  007F56  0E60               	movlw	96
 26633  007F58  ECA5  F04F         	call	_SetRFMode
 26634                           
 26635                           ;drv_mrf_miwi_89xa.c: 643: INTCONbits.INT0IF = 0;
 26636  007F5C  92F2               	bcf	intcon,1,c	;volatile
 26637                           
 26638                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IE = 1;
 26639  007F5E  88F2               	bsf	intcon,4,c	;volatile
 26640                           
 26641                           ;drv_mrf_miwi_89xa.c: 646: INTCON3bits.INT1IF = 0;
 26642  007F60  90F0               	bcf	intcon3,0,c	;volatile
 26643                           
 26644                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IE = 1;
 26645  007F62  86F0               	bsf	intcon3,3,c	;volatile
 26646  007F64  0012               	return	
 26647  007F66                     __end_of_MiMAC_Init:
 26648                           	opt stack 0
 26649                           tblptru	equ	0xFF8
 26650                           tblptrh	equ	0xFF7
 26651                           tblptrl	equ	0xFF6
 26652                           tablat	equ	0xFF5
 26653                           prodh	equ	0xFF4
 26654                           prodl	equ	0xFF3
 26655                           intcon	equ	0xFF2
 26656                           intcon2	equ	0xFF1
 26657                           intcon3	equ	0xFF0
 26658                           indf0	equ	0xFEF
 26659                           postinc0	equ	0xFEE
 26660                           plusw0	equ	0xFEB
 26661                           fsr0h	equ	0xFEA
 26662                           fsr0l	equ	0xFE9
 26663                           wreg	equ	0xFE8
 26664                           indf1	equ	0xFE7
 26665                           postinc1	equ	0xFE6
 26666                           postdec1	equ	0xFE5
 26667                           plusw1	equ	0xFE3
 26668                           fsr1h	equ	0xFE2
 26669                           fsr1l	equ	0xFE1
 26670                           indf2	equ	0xFDF
 26671                           postinc2	equ	0xFDE
 26672                           postdec2	equ	0xFDD
 26673                           plusw2	equ	0xFDB
 26674                           fsr2h	equ	0xFDA
 26675                           fsr2l	equ	0xFD9
 26676                           status	equ	0xFD8
 26677                           
 26678 ;; *************** function _DELAY_ms *****************
 26679 ;; Defined at:
 26680 ;;		line 108 in file "src/18F27J53/delay.c"
 26681 ;; Parameters:    Size  Location     Type
 26682 ;;  ms              2   12[BANK1 ] unsigned int 
 26683 ;; Auto vars:     Size  Location     Type
 26684 ;;  cyclesRequir    4   14[BANK1 ] long 
 26685 ;; Return value:  Size  Location     Type
 26686 ;;		None               void
 26687 ;; Registers used:
 26688 ;;		wreg, status,2, status,0, cstack
 26689 ;; Tracked objects:
 26690 ;;		On entry : 0/0
 26691 ;;		On exit  : 0/0
 26692 ;;		Unchanged: 0/0
 26693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26694 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26695 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26697 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26698 ;;Total ram usage:        6 bytes
 26699 ;; Hardware stack levels used:    1
 26700 ;; Hardware stack levels required when called:   17
 26701 ;; This function calls:
 26702 ;;		___lmul
 26703 ;; This function is called by:
 26704 ;;		_MiMAC_Init
 26705 ;;		_MiMAC_PowerState
 26706 ;; This function uses a non-reentrant model
 26707 ;;
 26708                           
 26709                           	psect	text65
 26710  009CCE                     __ptext65:
 26711                           	opt stack 0
 26712  009CCE                     _DELAY_ms:
 26713                           	opt stack 11
 26714                           
 26715                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 26716                           
 26717                           ;incstack = 0
 26718  009CCE  0E00               	movlw	0
 26719  009CD0  0101               	movlb	1	; () banked
 26720  009CD2  6F0E               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 26721  009CD4  0E00               	movlw	0
 26722  009CD6  6F0F               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 26723  009CD8  0E00               	movlw	0
 26724  009CDA  6F10               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 26725  009CDC  0E00               	movlw	0
 26726  009CDE  6F11               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 26727                           
 26728                           ; BSR set to: 1
 26729                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 26730  009CE0  C10C  F100         	movff	DELAY_ms@ms,___lmul@multiplier
 26731  009CE4  C10D  F101         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 26732  009CE8  0101               	movlb	1	; () banked
 26733  009CEA  6B02               	clrf	(___lmul@multiplier+2)& (0+255),b
 26734  009CEC  6B03               	clrf	(___lmul@multiplier+3)& (0+255),b
 26735  009CEE  0EA0               	movlw	160
 26736  009CF0  0101               	movlb	1	; () banked
 26737  009CF2  6F04               	movwf	___lmul@multiplicand& (0+255),b
 26738  009CF4  0E0F               	movlw	15
 26739  009CF6  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26740  009CF8  0E00               	movlw	0
 26741  009CFA  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26742  009CFC  0E00               	movlw	0
 26743  009CFE  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26744  009D00  EC1C  F052         	call	___lmul	;wreg free
 26745  009D04  C100  F10E         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 26746  009D08  C101  F10F         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 26747  009D0C  C102  F110         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 26748  009D10  C103  F111         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 26749                           
 26750                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 26751  009D14  0E56               	movlw	86
 26752  009D16  0101               	movlb	1	; () banked
 26753  009D18  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 26754  009D1A  0EFF               	movlw	255
 26755  009D1C  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 26756  009D1E  0EFF               	movlw	255
 26757  009D20  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 26758  009D22  0EFF               	movlw	255
 26759  009D24  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 26760                           
 26761                           ; BSR set to: 1
 26762                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 26763  009D26  0101               	movlb	1	; () banked
 26764  009D28  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 26765  009D2A  0012               	return	
 26766  009D2C  0101               	movlb	1	; () banked
 26767  009D2E  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 26768  009D30  0101               	movlb	1	; () banked
 26769  009D32  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 26770  009D34  0101               	movlb	1	; () banked
 26771  009D36  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 26772  009D38  E110               	bnz	l18
 26773  009D3A  0EC4               	movlw	196
 26774  009D3C  0101               	movlb	1	; () banked
 26775  009D3E  5D0E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 26776  009D40  A0D8               	btfss	status,0,c
 26777  009D42  0012               	return	
 26778  009D44  D00A               	goto	l18
 26779  009D46                     l19:
 26780                           
 26781                           ; BSR set to: 1
 26782                           ;delay.c: 126: {
 26783                           ;delay.c: 127: __nop();
 26784  009D46  F000               	nop	
 26785                           
 26786                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 26787  009D48  0ED9               	movlw	217
 26788  009D4A  0101               	movlb	1	; () banked
 26789  009D4C  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 26790  009D4E  0EFF               	movlw	255
 26791  009D50  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 26792  009D52  0EFF               	movlw	255
 26793  009D54  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 26794  009D56  0EFF               	movlw	255
 26795  009D58  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 26796  009D5A                     l18:
 26797                           
 26798                           ; BSR set to: 1
 26799  009D5A  0101               	movlb	1	; () banked
 26800  009D5C  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 26801  009D5E  0012               	return	
 26802  009D60  0101               	movlb	1	; () banked
 26803  009D62  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 26804  009D64  0101               	movlb	1	; () banked
 26805  009D66  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 26806  009D68  0101               	movlb	1	; () banked
 26807  009D6A  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 26808  009D6C  E1EC               	bnz	l19
 26809  009D6E  0101               	movlb	1	; () banked
 26810  009D70  050E               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 26811  009D72  A0D8               	btfss	status,0,c
 26812  009D74  0012               	return	
 26813  009D76  D7E7               	goto	l19
 26814  009D78                     __end_of_DELAY_ms:
 26815                           	opt stack 0
 26816                           tblptru	equ	0xFF8
 26817                           tblptrh	equ	0xFF7
 26818                           tblptrl	equ	0xFF6
 26819                           tablat	equ	0xFF5
 26820                           prodh	equ	0xFF4
 26821                           prodl	equ	0xFF3
 26822                           intcon	equ	0xFF2
 26823                           intcon2	equ	0xFF1
 26824                           intcon3	equ	0xFF0
 26825                           indf0	equ	0xFEF
 26826                           postinc0	equ	0xFEE
 26827                           plusw0	equ	0xFEB
 26828                           fsr0h	equ	0xFEA
 26829                           fsr0l	equ	0xFE9
 26830                           wreg	equ	0xFE8
 26831                           indf1	equ	0xFE7
 26832                           postinc1	equ	0xFE6
 26833                           postdec1	equ	0xFE5
 26834                           plusw1	equ	0xFE3
 26835                           fsr1h	equ	0xFE2
 26836                           fsr1l	equ	0xFE1
 26837                           indf2	equ	0xFDF
 26838                           postinc2	equ	0xFDE
 26839                           postdec2	equ	0xFDD
 26840                           plusw2	equ	0xFDB
 26841                           fsr2h	equ	0xFDA
 26842                           fsr2l	equ	0xFD9
 26843                           status	equ	0xFD8
 26844                           
 26845 ;; *************** function ___lmul *****************
 26846 ;; Defined at:
 26847 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul32.c"
 26848 ;; Parameters:    Size  Location     Type
 26849 ;;  multiplier      4    0[BANK1 ] unsigned long 
 26850 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 26851 ;; Auto vars:     Size  Location     Type
 26852 ;;  product         4    8[BANK1 ] unsigned long 
 26853 ;; Return value:  Size  Location     Type
 26854 ;;                  4    0[BANK1 ] unsigned long 
 26855 ;; Registers used:
 26856 ;;		wreg, status,2, status,0
 26857 ;; Tracked objects:
 26858 ;;		On entry : 0/0
 26859 ;;		On exit  : 0/0
 26860 ;;		Unchanged: 0/0
 26861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26862 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26863 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26865 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26866 ;;Total ram usage:       12 bytes
 26867 ;; Hardware stack levels used:    1
 26868 ;; Hardware stack levels required when called:   16
 26869 ;; This function calls:
 26870 ;;		Nothing
 26871 ;; This function is called by:
 26872 ;;		_DELAY_ms
 26873 ;;		_DELAY_10us
 26874 ;; This function uses a non-reentrant model
 26875 ;;
 26876                           
 26877                           	psect	text66
 26878  00A438                     __ptext66:
 26879                           	opt stack 0
 26880  00A438                     ___lmul:
 26881                           	opt stack 11
 26882                           
 26883                           ; BSR set to: 1
 26884                           ;incstack = 0
 26885  00A438  0E00               	movlw	0
 26886  00A43A  0101               	movlb	1	; () banked
 26887  00A43C  6F08               	movwf	___lmul@product& (0+255),b
 26888  00A43E  0E00               	movlw	0
 26889  00A440  6F09               	movwf	(___lmul@product+1)& (0+255),b
 26890  00A442  0E00               	movlw	0
 26891  00A444  6F0A               	movwf	(___lmul@product+2)& (0+255),b
 26892  00A446  0E00               	movlw	0
 26893  00A448  6F0B               	movwf	(___lmul@product+3)& (0+255),b
 26894  00A44A                     l16792:
 26895                           
 26896                           ; BSR set to: 1
 26897  00A44A  0101               	movlb	1	; () banked
 26898  00A44C  A100               	btfss	___lmul@multiplier& (0+255),0,b
 26899  00A44E  D010               	goto	l16796
 26900                           
 26901                           ; BSR set to: 1
 26902  00A450  0101               	movlb	1	; () banked
 26903  00A452  5104               	movf	___lmul@multiplicand& (0+255),w,b
 26904  00A454  0101               	movlb	1	; () banked
 26905  00A456  2708               	addwf	___lmul@product& (0+255),f,b
 26906  00A458  0101               	movlb	1	; () banked
 26907  00A45A  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 26908  00A45C  0101               	movlb	1	; () banked
 26909  00A45E  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
 26910  00A460  0101               	movlb	1	; () banked
 26911  00A462  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 26912  00A464  0101               	movlb	1	; () banked
 26913  00A466  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
 26914  00A468  0101               	movlb	1	; () banked
 26915  00A46A  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 26916  00A46C  0101               	movlb	1	; () banked
 26917  00A46E  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
 26918  00A470                     l16796:
 26919                           
 26920                           ; BSR set to: 1
 26921  00A470  0101               	movlb	1	; () banked
 26922  00A472  90D8               	bcf	status,0,c
 26923  00A474  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
 26924  00A476  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 26925  00A478  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 26926  00A47A  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 26927                           
 26928                           ; BSR set to: 1
 26929  00A47C  0101               	movlb	1	; () banked
 26930  00A47E  90D8               	bcf	status,0,c
 26931  00A480  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 26932  00A482  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 26933  00A484  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 26934  00A486  3300               	rrcf	___lmul@multiplier& (0+255),f,b
 26935  00A488  0101               	movlb	1	; () banked
 26936  00A48A  5100               	movf	___lmul@multiplier& (0+255),w,b
 26937  00A48C  0101               	movlb	1	; () banked
 26938  00A48E  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 26939  00A490  0101               	movlb	1	; () banked
 26940  00A492  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 26941  00A494  0101               	movlb	1	; () banked
 26942  00A496  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 26943  00A498  A4D8               	btfss	status,2,c
 26944  00A49A  D7D7               	goto	l16792
 26945                           
 26946                           ; BSR set to: 1
 26947  00A49C  C108  F100         	movff	___lmul@product,?___lmul
 26948  00A4A0  C109  F101         	movff	___lmul@product+1,?___lmul+1
 26949  00A4A4  C10A  F102         	movff	___lmul@product+2,?___lmul+2
 26950  00A4A8  C10B  F103         	movff	___lmul@product+3,?___lmul+3
 26951                           
 26952                           ; BSR set to: 1
 26953  00A4AC  0012               	return		;funcret
 26954  00A4AE                     __end_of___lmul:
 26955                           	opt stack 0
 26956                           tblptru	equ	0xFF8
 26957                           tblptrh	equ	0xFF7
 26958                           tblptrl	equ	0xFF6
 26959                           tablat	equ	0xFF5
 26960                           prodh	equ	0xFF4
 26961                           prodl	equ	0xFF3
 26962                           intcon	equ	0xFF2
 26963                           intcon2	equ	0xFF1
 26964                           intcon3	equ	0xFF0
 26965                           indf0	equ	0xFEF
 26966                           postinc0	equ	0xFEE
 26967                           plusw0	equ	0xFEB
 26968                           fsr0h	equ	0xFEA
 26969                           fsr0l	equ	0xFE9
 26970                           wreg	equ	0xFE8
 26971                           indf1	equ	0xFE7
 26972                           postinc1	equ	0xFE6
 26973                           postdec1	equ	0xFE5
 26974                           plusw1	equ	0xFE3
 26975                           fsr1h	equ	0xFE2
 26976                           fsr1l	equ	0xFE1
 26977                           indf2	equ	0xFDF
 26978                           postinc2	equ	0xFDE
 26979                           postdec2	equ	0xFDD
 26980                           plusw2	equ	0xFDB
 26981                           fsr2h	equ	0xFDA
 26982                           fsr2l	equ	0xFD9
 26983                           status	equ	0xFD8
 26984                           
 26985 ;; *************** function _MiApp_SetChannel *****************
 26986 ;; Defined at:
 26987 ;;		line 3868 in file "src/miwi/miwi_mesh.c"
 26988 ;; Parameters:    Size  Location     Type
 26989 ;;  channel         1    wreg     unsigned char 
 26990 ;; Auto vars:     Size  Location     Type
 26991 ;;  channel         1   10[BANK1 ] unsigned char 
 26992 ;; Return value:  Size  Location     Type
 26993 ;;                  1    wreg      unsigned char 
 26994 ;; Registers used:
 26995 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26996 ;; Tracked objects:
 26997 ;;		On entry : 0/0
 26998 ;;		On exit  : 0/0
 26999 ;;		Unchanged: 0/0
 27000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27002 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27004 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27005 ;;Total ram usage:        1 bytes
 27006 ;; Hardware stack levels used:    1
 27007 ;; Hardware stack levels required when called:   20
 27008 ;; This function calls:
 27009 ;;		_MiMAC_SetChannel
 27010 ;; This function is called by:
 27011 ;;		_MiApp_ProtocolInit
 27012 ;;		_MiApp_StartConnection
 27013 ;;		_MiApp_NoiseDetection
 27014 ;;		_main
 27015 ;;		_MiApp_SearchConnection
 27016 ;;		_MiApp_EstablishConnection
 27017 ;; This function uses a non-reentrant model
 27018 ;;
 27019                           
 27020                           	psect	text67
 27021  00AEBA                     __ptext67:
 27022                           	opt stack 0
 27023  00AEBA                     _MiApp_SetChannel:
 27024                           	opt stack 9
 27025                           
 27026                           ; BSR set to: 1
 27027                           ;incstack = 0
 27028                           ;MiApp_SetChannel@channel stored from wreg
 27029  00AEBA  0101               	movlb	1	; () banked
 27030  00AEBC  6F0A               	movwf	MiApp_SetChannel@channel& (0+255),b
 27031                           
 27032                           ;miwi_mesh.c: 3870: if( MiMAC_SetChannel(channel, 0) )
 27033  00AEBE  0E00               	movlw	0
 27034  00AEC0  0101               	movlb	1	; () banked
 27035  00AEC2  6F07               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 27036  00AEC4  0101               	movlb	1	; () banked
 27037  00AEC6  510A               	movf	MiApp_SetChannel@channel& (0+255),w,b
 27038  00AEC8  ECF8  F04C         	call	_MiMAC_SetChannel
 27039  00AECC  0900               	iorlw	0
 27040  00AECE  B4D8               	btfsc	status,2,c
 27041  00AED0  D004               	goto	l17706
 27042                           
 27043                           ;miwi_mesh.c: 3871: {
 27044                           ;miwi_mesh.c: 3872: currentChannel = channel;
 27045  00AED2  C10A  F1F6         	movff	MiApp_SetChannel@channel,_currentChannel
 27046                           
 27047                           ;miwi_mesh.c: 3876: return 1;
 27048  00AED6  0E01               	movlw	1
 27049  00AED8  0012               	return	
 27050  00AEDA                     l17706:
 27051                           
 27052                           ;miwi_mesh.c: 3877: }
 27053                           ;miwi_mesh.c: 3878: return 0;
 27054  00AEDA  0E00               	movlw	0
 27055  00AEDC  0012               	return	
 27056  00AEDE                     __end_of_MiApp_SetChannel:
 27057                           	opt stack 0
 27058                           tblptru	equ	0xFF8
 27059                           tblptrh	equ	0xFF7
 27060                           tblptrl	equ	0xFF6
 27061                           tablat	equ	0xFF5
 27062                           prodh	equ	0xFF4
 27063                           prodl	equ	0xFF3
 27064                           intcon	equ	0xFF2
 27065                           intcon2	equ	0xFF1
 27066                           intcon3	equ	0xFF0
 27067                           indf0	equ	0xFEF
 27068                           postinc0	equ	0xFEE
 27069                           plusw0	equ	0xFEB
 27070                           fsr0h	equ	0xFEA
 27071                           fsr0l	equ	0xFE9
 27072                           wreg	equ	0xFE8
 27073                           indf1	equ	0xFE7
 27074                           postinc1	equ	0xFE6
 27075                           postdec1	equ	0xFE5
 27076                           plusw1	equ	0xFE3
 27077                           fsr1h	equ	0xFE2
 27078                           fsr1l	equ	0xFE1
 27079                           indf2	equ	0xFDF
 27080                           postinc2	equ	0xFDE
 27081                           postdec2	equ	0xFDD
 27082                           plusw2	equ	0xFDB
 27083                           fsr2h	equ	0xFDA
 27084                           fsr2l	equ	0xFD9
 27085                           status	equ	0xFD8
 27086                           
 27087 ;; *************** function _MiMAC_SetChannel *****************
 27088 ;; Defined at:
 27089 ;;		line 483 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;  channel         1    wreg     unsigned char 
 27092 ;;  offsetFreq      1    7[BANK1 ] unsigned char 
 27093 ;; Auto vars:     Size  Location     Type
 27094 ;;  channel         1    9[BANK1 ] unsigned char 
 27095 ;; Return value:  Size  Location     Type
 27096 ;;                  1    wreg      unsigned char 
 27097 ;; Registers used:
 27098 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27099 ;; Tracked objects:
 27100 ;;		On entry : 0/0
 27101 ;;		On exit  : 0/0
 27102 ;;		Unchanged: 0/0
 27103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27104 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27105 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27106 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27107 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27108 ;;Total ram usage:        3 bytes
 27109 ;; Hardware stack levels used:    1
 27110 ;; Hardware stack levels required when called:   19
 27111 ;; This function calls:
 27112 ;;		_RegisterSet
 27113 ;;		_SetRFMode
 27114 ;; This function is called by:
 27115 ;;		_MiApp_SetChannel
 27116 ;; This function uses a non-reentrant model
 27117 ;;
 27118                           
 27119                           	psect	text68
 27120  0099F0                     __ptext68:
 27121                           	opt stack 0
 27122  0099F0                     _MiMAC_SetChannel:
 27123                           	opt stack 9
 27124                           
 27125                           ;incstack = 0
 27126                           ;MiMAC_SetChannel@channel stored from wreg
 27127  0099F0  0101               	movlb	1	; () banked
 27128  0099F2  6F09               	movwf	MiMAC_SetChannel@channel& (0+255),b
 27129                           
 27130                           ;drv_mrf_miwi_89xa.c: 485: if( channel >= 32 )
 27131  0099F4  0E1F               	movlw	31
 27132  0099F6  0101               	movlb	1	; () banked
 27133  0099F8  6509               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 27134  0099FA  D002               	goto	l16552
 27135                           
 27136                           ; BSR set to: 1
 27137                           ;drv_mrf_miwi_89xa.c: 486: {
 27138                           ;drv_mrf_miwi_89xa.c: 487: return 0;
 27139  0099FC  0E00               	movlw	0
 27140                           
 27141                           ; BSR set to: 1
 27142  0099FE  0012               	return	
 27143  009A00                     l16552:
 27144                           
 27145                           ; BSR set to: 1
 27146                           ;drv_mrf_miwi_89xa.c: 488: }
 27147                           ;drv_mrf_miwi_89xa.c: 491: RegisterSet(0x0C00 | 100);
 27148  009A00  0E0C               	movlw	12
 27149  009A02  0101               	movlb	1	; () banked
 27150  009A04  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27151  009A06  0E64               	movlw	100
 27152  009A08  6F02               	movwf	RegisterSet@setting& (0+255),b
 27153  009A0A  EC0E  F055         	call	_RegisterSet	;wreg free
 27154                           
 27155                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0E00 | PVALUE[channel]);
 27156  009A0E  0101               	movlb	1	; () banked
 27157  009A10  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 27158  009A12  0D01               	mullw	1
 27159  009A14  0E71               	movlw	low _PVALUE
 27160  009A16  24F3               	addwf	prodl,w,c
 27161  009A18  6EF6               	movwf	tblptrl,c
 27162  009A1A  0E20               	movlw	high _PVALUE
 27163  009A1C  20F4               	addwfc	prodh,w,c
 27164  009A1E  6EF7               	movwf	tblptrh,c
 27165  009A20                     	if	1	;There are 3 active tblptr bytes
 27166  009A20  6AF8               	clrf	tblptru,c
 27167  009A22  0E00               	movlw	low (__mediumconst shr (0+16))
 27168  009A24  22F8               	addwfc	tblptru,f,c
 27169  009A26                     	endif
 27170  009A26  0008               	tblrd		*
 27171  009A28  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 27172  009A2C  0E00               	movlw	0
 27173  009A2E  0101               	movlb	1	; () banked
 27174  009A30  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 27175  009A32  0101               	movlb	1	; () banked
 27176  009A34  6F02               	movwf	RegisterSet@setting& (0+255),b
 27177  009A36  0E0E               	movlw	14
 27178  009A38  0101               	movlb	1	; () banked
 27179  009A3A  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27180  009A3C  EC0E  F055         	call	_RegisterSet	;wreg free
 27181                           
 27182                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x1000 | SVALUE[channel]);
 27183  009A40  0101               	movlb	1	; () banked
 27184  009A42  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 27185  009A44  0D01               	mullw	1
 27186  009A46  0E91               	movlw	low _SVALUE
 27187  009A48  24F3               	addwf	prodl,w,c
 27188  009A4A  6EF6               	movwf	tblptrl,c
 27189  009A4C  0E20               	movlw	high _SVALUE
 27190  009A4E  20F4               	addwfc	prodh,w,c
 27191  009A50  6EF7               	movwf	tblptrh,c
 27192  009A52                     	if	1	;There are 3 active tblptr bytes
 27193  009A52  6AF8               	clrf	tblptru,c
 27194  009A54  0E00               	movlw	low (__mediumconst shr (0+16))
 27195  009A56  22F8               	addwfc	tblptru,f,c
 27196  009A58                     	endif
 27197  009A58  0008               	tblrd		*
 27198  009A5A  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 27199  009A5E  0E00               	movlw	0
 27200  009A60  0101               	movlb	1	; () banked
 27201  009A62  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 27202  009A64  0101               	movlb	1	; () banked
 27203  009A66  6F02               	movwf	RegisterSet@setting& (0+255),b
 27204  009A68  0E10               	movlw	16
 27205  009A6A  0101               	movlb	1	; () banked
 27206  009A6C  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27207  009A6E  EC0E  F055         	call	_RegisterSet	;wreg free
 27208                           
 27209                           ;drv_mrf_miwi_89xa.c: 494: SetRFMode(0x20);
 27210  009A72  0E20               	movlw	32
 27211  009A74  ECA5  F04F         	call	_SetRFMode
 27212                           
 27213                           ;drv_mrf_miwi_89xa.c: 495: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 27214  009A78  0E00               	movlw	0
 27215  009A7A  0101               	movlb	1	; () banked
 27216  009A7C  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27217  009A7E  0E56               	movlw	86
 27218  009A80  6F02               	movwf	RegisterSet@setting& (0+255),b
 27219  009A82  EC0E  F055         	call	_RegisterSet	;wreg free
 27220                           
 27221                           ;drv_mrf_miwi_89xa.c: 496: SetRFMode(0x40);
 27222  009A86  0E40               	movlw	64
 27223  009A88  ECA5  F04F         	call	_SetRFMode
 27224                           
 27225                           ;drv_mrf_miwi_89xa.c: 497: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 27226  009A8C  0E1C               	movlw	28
 27227  009A8E  0101               	movlb	1	; () banked
 27228  009A90  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27229  009A92  0E0F               	movlw	15
 27230  009A94  6F02               	movwf	RegisterSet@setting& (0+255),b
 27231  009A96  EC0E  F055         	call	_RegisterSet	;wreg free
 27232                           
 27233                           ;drv_mrf_miwi_89xa.c: 498: SetRFMode(0x20);
 27234  009A9A  0E20               	movlw	32
 27235  009A9C  ECA5  F04F         	call	_SetRFMode
 27236                           
 27237                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x60);
 27238  009AA0  0E60               	movlw	96
 27239  009AA2  ECA5  F04F         	call	_SetRFMode
 27240                           
 27241                           ;drv_mrf_miwi_89xa.c: 501: return 1;
 27242  009AA6  0E01               	movlw	1
 27243  009AA8  0012               	return	
 27244  009AAA                     __end_of_MiMAC_SetChannel:
 27245                           	opt stack 0
 27246                           tblptru	equ	0xFF8
 27247                           tblptrh	equ	0xFF7
 27248                           tblptrl	equ	0xFF6
 27249                           tablat	equ	0xFF5
 27250                           prodh	equ	0xFF4
 27251                           prodl	equ	0xFF3
 27252                           intcon	equ	0xFF2
 27253                           intcon2	equ	0xFF1
 27254                           intcon3	equ	0xFF0
 27255                           indf0	equ	0xFEF
 27256                           postinc0	equ	0xFEE
 27257                           plusw0	equ	0xFEB
 27258                           fsr0h	equ	0xFEA
 27259                           fsr0l	equ	0xFE9
 27260                           wreg	equ	0xFE8
 27261                           indf1	equ	0xFE7
 27262                           postinc1	equ	0xFE6
 27263                           postdec1	equ	0xFE5
 27264                           plusw1	equ	0xFE3
 27265                           fsr1h	equ	0xFE2
 27266                           fsr1l	equ	0xFE1
 27267                           indf2	equ	0xFDF
 27268                           postinc2	equ	0xFDE
 27269                           postdec2	equ	0xFDD
 27270                           plusw2	equ	0xFDB
 27271                           fsr2h	equ	0xFDA
 27272                           fsr2l	equ	0xFD9
 27273                           status	equ	0xFD8
 27274                           
 27275 ;; *************** function _SetRFMode *****************
 27276 ;; Defined at:
 27277 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27278 ;; Parameters:    Size  Location     Type
 27279 ;;  mode            1    wreg     unsigned char 
 27280 ;; Auto vars:     Size  Location     Type
 27281 ;;  mode            1    6[BANK1 ] unsigned char 
 27282 ;; Return value:  Size  Location     Type
 27283 ;;		None               void
 27284 ;; Registers used:
 27285 ;;		wreg, status,2, status,0, cstack
 27286 ;; Tracked objects:
 27287 ;;		On entry : 0/0
 27288 ;;		On exit  : 0/0
 27289 ;;		Unchanged: 0/0
 27290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27292 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27294 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27295 ;;Total ram usage:        1 bytes
 27296 ;; Hardware stack levels used:    1
 27297 ;; Hardware stack levels required when called:   18
 27298 ;; This function calls:
 27299 ;;		_RegisterSet
 27300 ;; This function is called by:
 27301 ;;		_TxPacket
 27302 ;;		_MiMAC_SetChannel
 27303 ;;		_MiMAC_Init
 27304 ;;		_MiMAC_PowerState
 27305 ;; This function uses a non-reentrant model
 27306 ;;
 27307                           
 27308                           	psect	text69
 27309  009F4A                     __ptext69:
 27310                           	opt stack 0
 27311  009F4A                     _SetRFMode:
 27312                           	opt stack 6
 27313                           
 27314                           ;incstack = 0
 27315                           ;SetRFMode@mode stored from wreg
 27316  009F4A  0101               	movlb	1	; () banked
 27317  009F4C  6F06               	movwf	SetRFMode@mode& (0+255),b
 27318                           
 27319                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 27320  009F4E  D037               	goto	l15796
 27321  009F50                     l15774:
 27322                           
 27323                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 27324  009F50  0E00               	movlw	0
 27325  009F52  0101               	movlb	1	; () banked
 27326  009F54  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27327  009F56  0E96               	movlw	150
 27328  009F58  6F02               	movwf	RegisterSet@setting& (0+255),b
 27329  009F5A  EC0E  F055         	call	_RegisterSet	;wreg free
 27330                           
 27331                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 27332  009F5E  0E80               	movlw	128
 27333  009F60  0100               	movlb	0	; () banked
 27334  009F62  6FDD               	movwf	_RF_Mode& (0+255),b
 27335                           
 27336                           ;drv_mrf_miwi_89xa.c: 672: break;
 27337  009F64  0012               	return	
 27338  009F66                     l15778:
 27339                           
 27340                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 27341  009F66  0E00               	movlw	0
 27342  009F68  0101               	movlb	1	; () banked
 27343  009F6A  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27344  009F6C  0E76               	movlw	118
 27345  009F6E  6F02               	movwf	RegisterSet@setting& (0+255),b
 27346  009F70  EC0E  F055         	call	_RegisterSet	;wreg free
 27347                           
 27348                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 27349  009F74  0E60               	movlw	96
 27350  009F76  0100               	movlb	0	; () banked
 27351  009F78  6FDD               	movwf	_RF_Mode& (0+255),b
 27352                           
 27353                           ;drv_mrf_miwi_89xa.c: 676: break;
 27354  009F7A  0012               	return	
 27355  009F7C                     l15782:
 27356                           
 27357                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 27358  009F7C  0E00               	movlw	0
 27359  009F7E  0101               	movlb	1	; () banked
 27360  009F80  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27361  009F82  0E56               	movlw	86
 27362  009F84  6F02               	movwf	RegisterSet@setting& (0+255),b
 27363  009F86  EC0E  F055         	call	_RegisterSet	;wreg free
 27364                           
 27365                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 27366  009F8A  0E40               	movlw	64
 27367  009F8C  0100               	movlb	0	; () banked
 27368  009F8E  6FDD               	movwf	_RF_Mode& (0+255),b
 27369                           
 27370                           ;drv_mrf_miwi_89xa.c: 680: break;
 27371  009F90  0012               	return	
 27372  009F92                     l15786:
 27373                           
 27374                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 27375  009F92  0E00               	movlw	0
 27376  009F94  0101               	movlb	1	; () banked
 27377  009F96  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27378  009F98  0E36               	movlw	54
 27379  009F9A  6F02               	movwf	RegisterSet@setting& (0+255),b
 27380  009F9C  EC0E  F055         	call	_RegisterSet	;wreg free
 27381                           
 27382                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 27383  009FA0  0E20               	movlw	32
 27384  009FA2  0100               	movlb	0	; () banked
 27385  009FA4  6FDD               	movwf	_RF_Mode& (0+255),b
 27386                           
 27387                           ;drv_mrf_miwi_89xa.c: 684: break;
 27388  009FA6  0012               	return	
 27389  009FA8                     l15790:
 27390                           
 27391                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 27392  009FA8  0E00               	movlw	0
 27393  009FAA  0101               	movlb	1	; () banked
 27394  009FAC  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 27395  009FAE  0E16               	movlw	22
 27396  009FB0  6F02               	movwf	RegisterSet@setting& (0+255),b
 27397  009FB2  EC0E  F055         	call	_RegisterSet	;wreg free
 27398                           
 27399                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 27400  009FB6  0E00               	movlw	0
 27401  009FB8  0100               	movlb	0	; () banked
 27402  009FBA  6FDD               	movwf	_RF_Mode& (0+255),b
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;drv_mrf_miwi_89xa.c: 689: }
 27406                           
 27407                           ;drv_mrf_miwi_89xa.c: 688: break;
 27408  009FBC  0012               	return	
 27409  009FBE                     l15796:
 27410  009FBE  0101               	movlb	1	; () banked
 27411  009FC0  5106               	movf	SetRFMode@mode& (0+255),w,b
 27412                           
 27413                           ; Switch size 1, requested type "space"
 27414                           ; Number of cases is 5, Range of values is 0 to 128
 27415                           ; switch strategies available:
 27416                           ; Name         Instructions Cycles
 27417                           ; simple_byte           16     9 (average)
 27418                           ;	Chosen strategy is simple_byte
 27419  009FC2  0A00               	xorlw	0	; case 0
 27420  009FC4  B4D8               	btfsc	status,2,c
 27421  009FC6  D7F0               	goto	l15790
 27422  009FC8  0A20               	xorlw	32	; case 32
 27423  009FCA  B4D8               	btfsc	status,2,c
 27424  009FCC  D7E2               	goto	l15786
 27425  009FCE  0A60               	xorlw	96	; case 64
 27426  009FD0  B4D8               	btfsc	status,2,c
 27427  009FD2  D7D4               	goto	l15782
 27428  009FD4  0A20               	xorlw	32	; case 96
 27429  009FD6  B4D8               	btfsc	status,2,c
 27430  009FD8  D7C6               	goto	l15778
 27431  009FDA  0AE0               	xorlw	224	; case 128
 27432  009FDC  A4D8               	btfss	status,2,c
 27433  009FDE  0012               	return	
 27434  009FE0  D7B7               	goto	l15774
 27435  009FE2                     __end_of_SetRFMode:
 27436                           	opt stack 0
 27437                           tblptru	equ	0xFF8
 27438                           tblptrh	equ	0xFF7
 27439                           tblptrl	equ	0xFF6
 27440                           tablat	equ	0xFF5
 27441                           prodh	equ	0xFF4
 27442                           prodl	equ	0xFF3
 27443                           intcon	equ	0xFF2
 27444                           intcon2	equ	0xFF1
 27445                           intcon3	equ	0xFF0
 27446                           indf0	equ	0xFEF
 27447                           postinc0	equ	0xFEE
 27448                           plusw0	equ	0xFEB
 27449                           fsr0h	equ	0xFEA
 27450                           fsr0l	equ	0xFE9
 27451                           wreg	equ	0xFE8
 27452                           indf1	equ	0xFE7
 27453                           postinc1	equ	0xFE6
 27454                           postdec1	equ	0xFE5
 27455                           plusw1	equ	0xFE3
 27456                           fsr1h	equ	0xFE2
 27457                           fsr1l	equ	0xFE1
 27458                           indf2	equ	0xFDF
 27459                           postinc2	equ	0xFDE
 27460                           postdec2	equ	0xFDD
 27461                           plusw2	equ	0xFDB
 27462                           fsr2h	equ	0xFDA
 27463                           fsr2l	equ	0xFD9
 27464                           status	equ	0xFD8
 27465                           
 27466 ;; *************** function _RegisterSet *****************
 27467 ;; Defined at:
 27468 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27469 ;; Parameters:    Size  Location     Type
 27470 ;;  setting         2    2[BANK1 ] unsigned int 
 27471 ;; Auto vars:     Size  Location     Type
 27472 ;;  IRQ0select      1    5[BANK1 ] unsigned char 
 27473 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 27474 ;; Return value:  Size  Location     Type
 27475 ;;		None               void
 27476 ;; Registers used:
 27477 ;;		wreg, status,2, cstack
 27478 ;; Tracked objects:
 27479 ;;		On entry : 0/0
 27480 ;;		On exit  : 0/0
 27481 ;;		Unchanged: 0/0
 27482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27483 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27484 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27486 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27487 ;;Total ram usage:        4 bytes
 27488 ;; Hardware stack levels used:    1
 27489 ;; Hardware stack levels required when called:   17
 27490 ;; This function calls:
 27491 ;;		_SPIPut
 27492 ;; This function is called by:
 27493 ;;		_TxPacket
 27494 ;;		_MiMAC_SetChannel
 27495 ;;		_MiMAC_SetPower
 27496 ;;		_MiMAC_Init
 27497 ;;		_SetRFMode
 27498 ;; This function uses a non-reentrant model
 27499 ;;
 27500                           
 27501                           	psect	text70
 27502  00AA1C                     __ptext70:
 27503                           	opt stack 0
 27504  00AA1C                     _RegisterSet:
 27505                           	opt stack 11
 27506                           
 27507                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 27508                           
 27509                           ;incstack = 0
 27510  00AA1C  0E00               	movlw	0
 27511  00AA1E  B6F0               	btfsc	intcon3,3,c	;volatile
 27512  00AA20  0E01               	movlw	1
 27513  00AA22  0101               	movlb	1	; () banked
 27514  00AA24  6F04               	movwf	RegisterSet@IRQ1select& (0+255),b
 27515                           
 27516                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 27517  00AA26  0E00               	movlw	0
 27518  00AA28  B8F2               	btfsc	intcon,4,c	;volatile
 27519  00AA2A  0E01               	movlw	1
 27520  00AA2C  0101               	movlb	1	; () banked
 27521  00AA2E  6F05               	movwf	RegisterSet@IRQ0select& (0+255),b
 27522                           
 27523                           ; BSR set to: 1
 27524                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 27525  00AA30  98F2               	bcf	intcon,4,c	;volatile
 27526                           
 27527                           ; BSR set to: 1
 27528                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 27529  00AA32  96F0               	bcf	intcon3,3,c	;volatile
 27530                           
 27531                           ; BSR set to: 1
 27532                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 27533  00AA34  968A               	bcf	3978,3,c	;volatile
 27534                           
 27535                           ; BSR set to: 1
 27536                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 27537  00AA36  0101               	movlb	1	; () banked
 27538  00AA38  5103               	movf	(RegisterSet@setting+1)& (0+255),w,b
 27539  00AA3A  EC6F  F057         	call	_SPIPut
 27540                           
 27541                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 27542  00AA3E  0101               	movlb	1	; () banked
 27543  00AA40  5102               	movf	RegisterSet@setting& (0+255),w,b
 27544  00AA42  EC6F  F057         	call	_SPIPut
 27545                           
 27546                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 27547  00AA46  868A               	bsf	3978,3,c	;volatile
 27548                           
 27549                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 27550  00AA48  0101               	movlb	1	; () banked
 27551  00AA4A  B104               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 27552  00AA4C  D002               	bra	u16185
 27553  00AA4E  96F0               	bcf	intcon3,3,c	;volatile
 27554  00AA50  D001               	bra	u16186
 27555  00AA52                     u16185:
 27556  00AA52  86F0               	bsf	intcon3,3,c	;volatile
 27557  00AA54                     u16186:
 27558                           
 27559                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 27560  00AA54  0101               	movlb	1	; () banked
 27561  00AA56  B105               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 27562  00AA58  D002               	bra	u16195
 27563  00AA5A  98F2               	bcf	intcon,4,c	;volatile
 27564  00AA5C  D001               	bra	u16196
 27565  00AA5E                     u16195:
 27566  00AA5E  88F2               	bsf	intcon,4,c	;volatile
 27567  00AA60                     u16196:
 27568  00AA60  0012               	return		;funcret
 27569  00AA62                     __end_of_RegisterSet:
 27570                           	opt stack 0
 27571                           tblptru	equ	0xFF8
 27572                           tblptrh	equ	0xFF7
 27573                           tblptrl	equ	0xFF6
 27574                           tablat	equ	0xFF5
 27575                           prodh	equ	0xFF4
 27576                           prodl	equ	0xFF3
 27577                           intcon	equ	0xFF2
 27578                           intcon2	equ	0xFF1
 27579                           intcon3	equ	0xFF0
 27580                           indf0	equ	0xFEF
 27581                           postinc0	equ	0xFEE
 27582                           plusw0	equ	0xFEB
 27583                           fsr0h	equ	0xFEA
 27584                           fsr0l	equ	0xFE9
 27585                           wreg	equ	0xFE8
 27586                           indf1	equ	0xFE7
 27587                           postinc1	equ	0xFE6
 27588                           postdec1	equ	0xFE5
 27589                           plusw1	equ	0xFE3
 27590                           fsr1h	equ	0xFE2
 27591                           fsr1l	equ	0xFE1
 27592                           indf2	equ	0xFDF
 27593                           postinc2	equ	0xFDE
 27594                           postdec2	equ	0xFDD
 27595                           plusw2	equ	0xFDB
 27596                           fsr2h	equ	0xFDA
 27597                           fsr2l	equ	0xFD9
 27598                           status	equ	0xFD8
 27599                           
 27600 ;; *************** function _SPIPut *****************
 27601 ;; Defined at:
 27602 ;;		line 45 in file "src/18F27J53/spi.c"
 27603 ;; Parameters:    Size  Location     Type
 27604 ;;  v               1    wreg     unsigned char 
 27605 ;; Auto vars:     Size  Location     Type
 27606 ;;  v               1    1[BANK1 ] unsigned char 
 27607 ;;  i               1    0[BANK1 ] unsigned char 
 27608 ;; Return value:  Size  Location     Type
 27609 ;;		None               void
 27610 ;; Registers used:
 27611 ;;		wreg
 27612 ;; Tracked objects:
 27613 ;;		On entry : 0/0
 27614 ;;		On exit  : 0/0
 27615 ;;		Unchanged: 0/0
 27616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27618 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27620 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27621 ;;Total ram usage:        2 bytes
 27622 ;; Hardware stack levels used:    1
 27623 ;; Hardware stack levels required when called:   16
 27624 ;; This function calls:
 27625 ;;		Nothing
 27626 ;; This function is called by:
 27627 ;;		_SPIGet
 27628 ;;		_RegisterSet
 27629 ;;		_RegisterRead
 27630 ;;		_WriteFIFO
 27631 ;; This function uses a non-reentrant model
 27632 ;;
 27633                           
 27634                           	psect	text71
 27635  00AEDE                     __ptext71:
 27636                           	opt stack 0
 27637  00AEDE                     _SPIPut:
 27638                           	opt stack 11
 27639                           
 27640                           ;incstack = 0
 27641                           ;SPIPut@v stored from wreg
 27642  00AEDE  0101               	movlb	1	; () banked
 27643  00AEE0  6F01               	movwf	SPIPut@v& (0+255),b
 27644                           
 27645                           ;spi.c: 66: {
 27646                           ;spi.c: 68: uint8_t i;
 27647                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 27648  00AEE2  9EA4               	bcf	4004,7,c	;volatile
 27649                           
 27650                           ;spi.c: 72: i = SSP2BUF;
 27651  00AEE4  CF75 F100          	movff	3957,SPIPut@i	;volatile
 27652  00AEE8                     l29:
 27653                           
 27654                           ;spi.c: 75: {
 27655                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 27656  00AEE8  9E72               	bcf	3954,7,c	;volatile
 27657                           
 27658                           ;spi.c: 77: SSP2BUF = v;
 27659  00AEEA  C101  FF75         	movff	SPIPut@v,3957	;volatile
 27660                           
 27661                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 27662  00AEEE  BE72               	btfsc	3954,7,c	;volatile
 27663  00AEF0  D7FB               	goto	l29
 27664  00AEF2                     l31:
 27665  00AEF2  AEA4               	btfss	4004,7,c	;volatile
 27666  00AEF4  D7FE               	goto	l31
 27667                           
 27668                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 27669  00AEF6  9EA4               	bcf	4004,7,c	;volatile
 27670  00AEF8  0012               	return		;funcret
 27671  00AEFA                     __end_of_SPIPut:
 27672                           	opt stack 0
 27673                           tblptru	equ	0xFF8
 27674                           tblptrh	equ	0xFF7
 27675                           tblptrl	equ	0xFF6
 27676                           tablat	equ	0xFF5
 27677                           prodh	equ	0xFF4
 27678                           prodl	equ	0xFF3
 27679                           intcon	equ	0xFF2
 27680                           intcon2	equ	0xFF1
 27681                           intcon3	equ	0xFF0
 27682                           indf0	equ	0xFEF
 27683                           postinc0	equ	0xFEE
 27684                           plusw0	equ	0xFEB
 27685                           fsr0h	equ	0xFEA
 27686                           fsr0l	equ	0xFE9
 27687                           wreg	equ	0xFE8
 27688                           indf1	equ	0xFE7
 27689                           postinc1	equ	0xFE6
 27690                           postdec1	equ	0xFE5
 27691                           plusw1	equ	0xFE3
 27692                           fsr1h	equ	0xFE2
 27693                           fsr1l	equ	0xFE1
 27694                           indf2	equ	0xFDF
 27695                           postinc2	equ	0xFDE
 27696                           postdec2	equ	0xFDD
 27697                           plusw2	equ	0xFDB
 27698                           fsr2h	equ	0xFDA
 27699                           fsr2l	equ	0xFD9
 27700                           status	equ	0xFD8
 27701                           
 27702 ;; *************** function _InitSymbolTimer *****************
 27703 ;; Defined at:
 27704 ;;		line 59 in file "src/18F27J53/symbol.c"
 27705 ;; Parameters:    Size  Location     Type
 27706 ;;		None
 27707 ;; Auto vars:     Size  Location     Type
 27708 ;;		None
 27709 ;; Return value:  Size  Location     Type
 27710 ;;		None               void
 27711 ;; Registers used:
 27712 ;;		wreg, status,2
 27713 ;; Tracked objects:
 27714 ;;		On entry : 0/0
 27715 ;;		On exit  : 0/0
 27716 ;;		Unchanged: 0/0
 27717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27722 ;;Total ram usage:        0 bytes
 27723 ;; Hardware stack levels used:    1
 27724 ;; Hardware stack levels required when called:   16
 27725 ;; This function calls:
 27726 ;;		Nothing
 27727 ;; This function is called by:
 27728 ;;		_MiApp_ProtocolInit
 27729 ;; This function uses a non-reentrant model
 27730 ;;
 27731                           
 27732                           	psect	text72
 27733  00AF30                     __ptext72:
 27734                           	opt stack 0
 27735  00AF30                     _InitSymbolTimer:
 27736                           	opt stack 13
 27737                           
 27738                           ;symbol.c: 62: T1CON = 0b00110000;
 27739                           
 27740                           ;incstack = 0
 27741  00AF30  0E30               	movlw	48
 27742  00AF32  6ECD               	movwf	4045,c	;volatile
 27743                           
 27744                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 27745  00AF34  909E               	bcf	3998,0,c	;volatile
 27746                           
 27747                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 27748  00AF36  809D               	bsf	3997,0,c	;volatile
 27749                           
 27750                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 27751  00AF38  80CD               	bsf	4045,0,c	;volatile
 27752                           
 27753                           ;symbol.c: 75: timerExtension1 = 0;
 27754  00AF3A  0E00               	movlw	0
 27755  00AF3C  0100               	movlb	0	; () banked
 27756  00AF3E  6FE2               	movwf	_timerExtension1& (0+255),b	;volatile
 27757                           
 27758                           ;symbol.c: 76: timerExtension2 = 0;
 27759  00AF40  0E00               	movlw	0
 27760  00AF42  0100               	movlb	0	; () banked
 27761  00AF44  6FE3               	movwf	_timerExtension2& (0+255),b	;volatile
 27762                           
 27763                           ; BSR set to: 0
 27764  00AF46  0012               	return		;funcret
 27765  00AF48                     __end_of_InitSymbolTimer:
 27766                           	opt stack 0
 27767                           tblptru	equ	0xFF8
 27768                           tblptrh	equ	0xFF7
 27769                           tblptrl	equ	0xFF6
 27770                           tablat	equ	0xFF5
 27771                           prodh	equ	0xFF4
 27772                           prodl	equ	0xFF3
 27773                           intcon	equ	0xFF2
 27774                           intcon2	equ	0xFF1
 27775                           intcon3	equ	0xFF0
 27776                           indf0	equ	0xFEF
 27777                           postinc0	equ	0xFEE
 27778                           plusw0	equ	0xFEB
 27779                           fsr0h	equ	0xFEA
 27780                           fsr0l	equ	0xFE9
 27781                           wreg	equ	0xFE8
 27782                           indf1	equ	0xFE7
 27783                           postinc1	equ	0xFE6
 27784                           postdec1	equ	0xFE5
 27785                           plusw1	equ	0xFE3
 27786                           fsr1h	equ	0xFE2
 27787                           fsr1l	equ	0xFE1
 27788                           indf2	equ	0xFDF
 27789                           postinc2	equ	0xFDE
 27790                           postdec2	equ	0xFDD
 27791                           plusw2	equ	0xFDB
 27792                           fsr2h	equ	0xFDA
 27793                           fsr2l	equ	0xFD9
 27794                           status	equ	0xFD8
 27795                           
 27796 ;; *************** function _MiApp_ConnectionMode *****************
 27797 ;; Defined at:
 27798 ;;		line 3922 in file "src/miwi/miwi_mesh.c"
 27799 ;; Parameters:    Size  Location     Type
 27800 ;;  Mode            1    wreg     unsigned char 
 27801 ;; Auto vars:     Size  Location     Type
 27802 ;;  Mode            1    1[BANK1 ] unsigned char 
 27803 ;; Return value:  Size  Location     Type
 27804 ;;		None               void
 27805 ;; Registers used:
 27806 ;;		wreg, status,2, status,0
 27807 ;; Tracked objects:
 27808 ;;		On entry : 0/0
 27809 ;;		On exit  : 0/0
 27810 ;;		Unchanged: 0/0
 27811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27813 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27814 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27815 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27816 ;;Total ram usage:        2 bytes
 27817 ;; Hardware stack levels used:    1
 27818 ;; Hardware stack levels required when called:   16
 27819 ;; This function calls:
 27820 ;;		Nothing
 27821 ;; This function is called by:
 27822 ;;		_main
 27823 ;; This function uses a non-reentrant model
 27824 ;;
 27825                           
 27826                           	psect	text73
 27827  00ADEA                     __ptext73:
 27828                           	opt stack 0
 27829  00ADEA                     _MiApp_ConnectionMode:
 27830                           	opt stack 14
 27831                           
 27832                           ; BSR set to: 0
 27833                           ;incstack = 0
 27834                           ;MiApp_ConnectionMode@Mode stored from wreg
 27835  00ADEA  0101               	movlb	1	; () banked
 27836  00ADEC  6F01               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 27837                           
 27838                           ;miwi_mesh.c: 3924: if( Mode > 3 )
 27839  00ADEE  0E03               	movlw	3
 27840  00ADF0  0101               	movlb	1	; () banked
 27841  00ADF2  6501               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 27842  00ADF4  D001               	goto	l940
 27843  00ADF6  0012               	return	
 27844  00ADF8                     l940:
 27845                           
 27846                           ; BSR set to: 1
 27847                           ;miwi_mesh.c: 3927: }
 27848                           ;miwi_mesh.c: 3928: ConnMode = Mode;
 27849  00ADF8  C101  F1C0         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 27850                           
 27851                           ; BSR set to: 1
 27852                           ;miwi_mesh.c: 3929: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 27853  00ADFC  C1C0  F100         	movff	_ConnMode,??_MiApp_ConnectionMode
 27854  00AE00  0101               	movlb	1	; () banked
 27855  00AE02  3B00               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 27856  00AE04  0101               	movlb	1	; () banked
 27857  00AE06  51C3               	movf	_MiWiCapacityInfo& (0+255),w,b
 27858  00AE08  0101               	movlb	1	; () banked
 27859  00AE0A  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 27860  00AE0C  0BCF               	andlw	-49
 27861  00AE0E  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 27862  00AE10  0101               	movlb	1	; () banked
 27863  00AE12  6FC3               	movwf	_MiWiCapacityInfo& (0+255),b
 27864                           
 27865                           ; BSR set to: 1
 27866  00AE14  0012               	return		;funcret
 27867  00AE16                     __end_of_MiApp_ConnectionMode:
 27868                           	opt stack 0
 27869                           tblptru	equ	0xFF8
 27870                           tblptrh	equ	0xFF7
 27871                           tblptrl	equ	0xFF6
 27872                           tablat	equ	0xFF5
 27873                           prodh	equ	0xFF4
 27874                           prodl	equ	0xFF3
 27875                           intcon	equ	0xFF2
 27876                           intcon2	equ	0xFF1
 27877                           intcon3	equ	0xFF0
 27878                           indf0	equ	0xFEF
 27879                           postinc0	equ	0xFEE
 27880                           plusw0	equ	0xFEB
 27881                           fsr0h	equ	0xFEA
 27882                           fsr0l	equ	0xFE9
 27883                           wreg	equ	0xFE8
 27884                           indf1	equ	0xFE7
 27885                           postinc1	equ	0xFE6
 27886                           postdec1	equ	0xFE5
 27887                           plusw1	equ	0xFE3
 27888                           fsr1h	equ	0xFE2
 27889                           fsr1l	equ	0xFE1
 27890                           indf2	equ	0xFDF
 27891                           postinc2	equ	0xFDE
 27892                           postdec2	equ	0xFDD
 27893                           plusw2	equ	0xFDB
 27894                           fsr2h	equ	0xFDA
 27895                           fsr2l	equ	0xFD9
 27896                           status	equ	0xFD8
 27897                           
 27898 ;; *************** function _SYS_InterruptLow *****************
 27899 ;; Defined at:
 27900 ;;		line 829 in file "src/main.c"
 27901 ;; Parameters:    Size  Location     Type
 27902 ;;		None
 27903 ;; Auto vars:     Size  Location     Type
 27904 ;;		None
 27905 ;; Return value:  Size  Location     Type
 27906 ;;		None               void
 27907 ;; Registers used:
 27908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27909 ;; Tracked objects:
 27910 ;;		On entry : 0/0
 27911 ;;		On exit  : 0/0
 27912 ;;		Unchanged: 0/0
 27913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27916 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27917 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27918 ;;Total ram usage:       19 bytes
 27919 ;; Hardware stack levels used:    1
 27920 ;; Hardware stack levels required when called:   15
 27921 ;; This function calls:
 27922 ;;		_USBDeviceTasks
 27923 ;;		i1_update_LED
 27924 ;; This function is called by:
 27925 ;;		Interrupt level 1
 27926 ;; This function uses a non-reentrant model
 27927 ;;
 27928                           
 27929                           	psect	intcodelo
 27930  000018                     __pintcodelo:
 27931                           	opt stack 0
 27932  000018                     _SYS_InterruptLow:
 27933                           	opt stack 3
 27934                           
 27935                           ; BSR set to: 1
 27936                           ;incstack = 0
 27937  000018  805C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 27938  00001A  CFD8 F021          	movff	status,??_SYS_InterruptLow+2
 27939  00001E  CFE8 F022          	movff	wreg,??_SYS_InterruptLow+3
 27940  000022  CFE0 F023          	movff	bsr,??_SYS_InterruptLow+4
 27941  000026  CFFA F024          	movff	pclath,??_SYS_InterruptLow+5
 27942  00002A  CFFB F025          	movff	pclatu,??_SYS_InterruptLow+6
 27943  00002E  CFE9 F026          	movff	fsr0l,??_SYS_InterruptLow+7
 27944  000032  CFEA F027          	movff	fsr0h,??_SYS_InterruptLow+8
 27945  000036  CFE1 F028          	movff	fsr1l,??_SYS_InterruptLow+9
 27946  00003A  CFE2 F029          	movff	fsr1h,??_SYS_InterruptLow+10
 27947  00003E  CFD9 F02A          	movff	fsr2l,??_SYS_InterruptLow+11
 27948  000042  CFDA F02B          	movff	fsr2h,??_SYS_InterruptLow+12
 27949  000046  CFF3 F02C          	movff	prodl,??_SYS_InterruptLow+13
 27950  00004A  CFF4 F02D          	movff	prodh,??_SYS_InterruptLow+14
 27951  00004E  CFF6 F02E          	movff	tblptrl,??_SYS_InterruptLow+15
 27952  000052  CFF7 F02F          	movff	tblptrh,??_SYS_InterruptLow+16
 27953  000056  CFF8 F030          	movff	tblptru,??_SYS_InterruptLow+17
 27954  00005A  CFF5 F031          	movff	tablat,??_SYS_InterruptLow+18
 27955                           
 27956                           ;main.c: 831: USBDeviceTasks();
 27957  00005E  EC6E  F03E         	call	_USBDeviceTasks	;wreg free
 27958                           
 27959                           ;main.c: 832: if (PIR3bits.TMR4IF)
 27960  000062  A6A4               	btfss	4004,3,c	;volatile
 27961  000064  D073               	goto	i1l1868
 27962                           
 27963                           ;main.c: 833: {
 27964                           ;main.c: 834: PIR3bits.TMR4IF = 0;
 27965  000066  96A4               	bcf	4004,3,c	;volatile
 27966                           
 27967                           ;main.c: 835: if ((status_led == LED_SLOW_PULSE)||(status_led == LED_FAST_PULSE))
 27968  000068  0E02               	movlw	2
 27969  00006A  1853               	xorwf	_status_led,w,c	;volatile
 27970  00006C  B4D8               	btfsc	status,2,c
 27971  00006E  D003               	goto	i1l15290
 27972  000070  0453               	decf	_status_led,w,c	;volatile
 27973  000072  A4D8               	btfss	status,2,c
 27974  000074  D04B               	goto	i1l15306
 27975  000076                     i1l15290:
 27976                           
 27977                           ;main.c: 836: {
 27978                           ;main.c: 837: if (LED_increasing == 1)
 27979  000076  0443               	decf	_LED_increasing,w,c	;volatile
 27980  000078  A4D8               	btfss	status,2,c
 27981  00007A  D012               	goto	i1l15296
 27982                           
 27983                           ;main.c: 838: {
 27984                           ;main.c: 839: LED_brightness = LED_brightness + 2;
 27985  00007C  0E02               	movlw	2
 27986  00007E  2459               	addwf	_LED_brightness,w,c	;volatile
 27987  000080  6E59               	movwf	_LED_brightness,c	;volatile
 27988  000082  0E00               	movlw	0
 27989  000084  205A               	addwfc	_LED_brightness+1,w,c	;volatile
 27990  000086  6E5A               	movwf	_LED_brightness+1,c	;volatile
 27991                           
 27992                           ;main.c: 840: if (LED_brightness >= 235)
 27993  000088  505A               	movf	_LED_brightness+1,w,c	;volatile
 27994  00008A  E104               	bnz	i1u1577_20
 27995  00008C  0EEB               	movlw	235
 27996  00008E  5C59               	subwf	_LED_brightness,w,c	;volatile
 27997  000090  A0D8               	btfss	status,0,c
 27998  000092  D018               	goto	i1l15300
 27999  000094                     i1u1577_20:
 28000                           
 28001                           ;main.c: 841: {
 28002                           ;main.c: 842: LED_brightness = 235;
 28003  000094  0E00               	movlw	0
 28004  000096  6E5A               	movwf	_LED_brightness+1,c	;volatile
 28005  000098  0EEB               	movlw	235
 28006  00009A  6E59               	movwf	_LED_brightness,c	;volatile
 28007                           
 28008                           ;main.c: 843: LED_increasing = 0;
 28009  00009C  0E00               	movlw	0
 28010  00009E  D011               	goto	L17
 28011  0000A0                     i1l15296:
 28012                           
 28013                           ;main.c: 846: else
 28014                           ;main.c: 847: {
 28015                           ;main.c: 848: LED_brightness = LED_brightness - 2;
 28016  0000A0  0EFE               	movlw	254
 28017  0000A2  2459               	addwf	_LED_brightness,w,c	;volatile
 28018  0000A4  6E59               	movwf	_LED_brightness,c	;volatile
 28019  0000A6  0EFF               	movlw	255
 28020  0000A8  205A               	addwfc	_LED_brightness+1,w,c	;volatile
 28021  0000AA  6E5A               	movwf	_LED_brightness+1,c	;volatile
 28022                           
 28023                           ;main.c: 849: if (LED_brightness <= 10)
 28024  0000AC  505A               	movf	_LED_brightness+1,w,c	;volatile
 28025  0000AE  E10A               	bnz	i1l15300
 28026  0000B0  0E0B               	movlw	11
 28027  0000B2  5C59               	subwf	_LED_brightness,w,c	;volatile
 28028  0000B4  B0D8               	btfsc	status,0,c
 28029  0000B6  D006               	goto	i1l15300
 28030                           
 28031                           ;main.c: 850: {
 28032                           ;main.c: 851: LED_brightness = 10;
 28033  0000B8  0E00               	movlw	0
 28034  0000BA  6E5A               	movwf	_LED_brightness+1,c	;volatile
 28035  0000BC  0E0A               	movlw	10
 28036  0000BE  6E59               	movwf	_LED_brightness,c	;volatile
 28037                           
 28038                           ;main.c: 852: LED_increasing = 1;
 28039  0000C0  0E01               	movlw	1
 28040  0000C2                     L17:
 28041  0000C2  6E43               	movwf	_LED_increasing,c	;volatile
 28042  0000C4                     i1l15300:
 28043                           
 28044                           ;main.c: 853: }
 28045                           ;main.c: 854: }
 28046                           ;main.c: 856: CCP1CONbits.DC1B0 = LED_brightness & 1;
 28047  0000C4  C059  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 28048  0000C8  0E01               	movlw	1
 28049  0000CA  161F               	andwf	??_SYS_InterruptLow,f,c
 28050  0000CC  3A1F               	swapf	??_SYS_InterruptLow,f,c
 28051  0000CE  50BA               	movf	4026,w,c	;volatile
 28052  0000D0  181F               	xorwf	??_SYS_InterruptLow,w,c
 28053  0000D2  0BEF               	andlw	-17
 28054  0000D4  181F               	xorwf	??_SYS_InterruptLow,w,c
 28055  0000D6  6EBA               	movwf	4026,c	;volatile
 28056                           
 28057                           ;main.c: 857: CCP1CONbits.DC1B1 = (LED_brightness >> 1) & 1;
 28058  0000D8  90D8               	bcf	status,0,c
 28059  0000DA  305A               	rrcf	_LED_brightness+1,w,c	;volatile
 28060  0000DC  6E20               	movwf	(??_SYS_InterruptLow+1)& (0+255),c
 28061  0000DE  3059               	rrcf	_LED_brightness,w,c	;volatile
 28062  0000E0  6E1F               	movwf	??_SYS_InterruptLow& (0+255),c
 28063  0000E2  0E01               	movlw	1
 28064  0000E4  161F               	andwf	??_SYS_InterruptLow,f,c
 28065  0000E6  3A1F               	swapf	??_SYS_InterruptLow,f,c
 28066  0000E8  461F               	rlncf	??_SYS_InterruptLow,f,c
 28067  0000EA  50BA               	movf	4026,w,c	;volatile
 28068  0000EC  181F               	xorwf	??_SYS_InterruptLow,w,c
 28069  0000EE  0BDF               	andlw	-33
 28070  0000F0  181F               	xorwf	??_SYS_InterruptLow,w,c
 28071  0000F2  6EBA               	movwf	4026,c	;volatile
 28072                           
 28073                           ;main.c: 858: CCPR1L = (LED_brightness >> 2);
 28074  0000F4  C059  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 28075  0000F8  C05A  F020         	movff	_LED_brightness+1,??_SYS_InterruptLow+1	;volatile
 28076  0000FC  90D8               	bcf	status,0,c
 28077  0000FE  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 28078  000100  321F               	rrcf	??_SYS_InterruptLow,f,c
 28079  000102  90D8               	bcf	status,0,c
 28080  000104  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 28081  000106  321F               	rrcf	??_SYS_InterruptLow,f,c
 28082  000108  501F               	movf	??_SYS_InterruptLow,w,c
 28083  00010A  6EBB               	movwf	4027,c	;volatile
 28084  00010C                     i1l15306:
 28085                           
 28086                           ;main.c: 859: }
 28087                           ;main.c: 860: if (status_led == LED_FULL)
 28088  00010C  0E03               	movlw	3
 28089  00010E  1853               	xorwf	_status_led,w,c	;volatile
 28090  000110  A4D8               	btfss	status,2,c
 28091  000112  D044               	goto	i1l1890
 28092                           
 28093                           ;main.c: 861: {
 28094                           ;main.c: 862: repeat_full = repeat_full - 1;
 28095  000114  0451               	decf	_repeat_full,w,c	;volatile
 28096  000116  6E51               	movwf	_repeat_full,c	;volatile
 28097                           
 28098                           ;main.c: 863: if (repeat_full == 0)
 28099  000118  5051               	movf	_repeat_full,w,c	;volatile
 28100  00011A  A4D8               	btfss	status,2,c
 28101  00011C  D03F               	goto	i1l1890
 28102                           
 28103                           ;main.c: 864: {
 28104                           ;main.c: 865: if (myAppState == STATE_INIT)
 28105  00011E  5050               	movf	_myAppState,w,c
 28106  000120  B4D8               	btfsc	status,2,c
 28107  000122  D003               	goto	i1l15318
 28108                           
 28109                           ;main.c: 867: else if (myAppState == STATE_USB_READY)
 28110                           
 28111                           ;main.c: 866: status_led = LED_FAST_PULSE;
 28112  000124  0450               	decf	_myAppState,w,c
 28113  000126  A4D8               	btfss	status,2,c
 28114  000128  D002               	goto	i1l15320
 28115  00012A                     i1l15318:
 28116                           
 28117                           ;main.c: 868: status_led = LED_FAST_PULSE;
 28118  00012A  0E01               	movlw	1
 28119  00012C  D00B               	goto	L19
 28120  00012E                     i1l15320:
 28121                           
 28122                           ;main.c: 869: else if (myAppState == STATE_READY)
 28123  00012E  0E02               	movlw	2
 28124  000130  1850               	xorwf	_myAppState,w,c
 28125  000132  A4D8               	btfss	status,2,c
 28126  000134  D002               	goto	i1l15324
 28127                           
 28128                           ;main.c: 870: status_led = LED_SLOW_PULSE;
 28129  000136  0E02               	movlw	2
 28130  000138  D005               	goto	L19
 28131  00013A                     i1l15324:
 28132                           
 28133                           ;main.c: 871: else if (myAppState == STATE_PROBLEM)
 28134  00013A  0E03               	movlw	3
 28135  00013C  1850               	xorwf	_myAppState,w,c
 28136  00013E  A4D8               	btfss	status,2,c
 28137  000140  D002               	goto	i1l15328
 28138                           
 28139                           ;main.c: 872: status_led = LED_OFF;
 28140  000142  0E00               	movlw	0
 28141  000144                     L19:
 28142  000144  6E53               	movwf	_status_led,c	;volatile
 28143  000146                     i1l15328:
 28144                           
 28145                           ;main.c: 873: update_LED();
 28146  000146  ECFF  F053         	call	i1_update_LED	;wreg free
 28147                           
 28148                           ;main.c: 874: }
 28149                           ;main.c: 875: }
 28150                           ;main.c: 876: }
 28151  00014A  D028               	goto	i1l1890
 28152  00014C                     i1l1868:
 28153                           
 28154                           ;main.c: 877: else if(PIR3bits.RTCCIF)
 28155  00014C  A0A4               	btfss	4004,0,c	;volatile
 28156  00014E  D026               	goto	i1l1890
 28157                           
 28158                           ;main.c: 878: {
 28159                           ;main.c: 879: m_uptime_seconds = m_uptime_seconds + 64;
 28160  000150  0E40               	movlw	64
 28161  000152  0100               	movlb	0	; () banked
 28162  000154  25CA               	addwf	_m_uptime_seconds& (0+255),w,b	;volatile
 28163  000156  0100               	movlb	0	; () banked
 28164  000158  6FCA               	movwf	_m_uptime_seconds& (0+255),b	;volatile
 28165  00015A  0E00               	movlw	0
 28166  00015C  0100               	movlb	0	; () banked
 28167  00015E  21CB               	addwfc	(_m_uptime_seconds+1)& (0+255),w,b	;volatile
 28168  000160  0100               	movlb	0	; () banked
 28169  000162  6FCB               	movwf	(_m_uptime_seconds+1)& (0+255),b	;volatile
 28170  000164  0E00               	movlw	0
 28171  000166  0100               	movlb	0	; () banked
 28172  000168  21CC               	addwfc	(_m_uptime_seconds+2)& (0+255),w,b	;volatile
 28173  00016A  0100               	movlb	0	; () banked
 28174  00016C  6FCC               	movwf	(_m_uptime_seconds+2)& (0+255),b	;volatile
 28175  00016E  0E00               	movlw	0
 28176  000170  0100               	movlb	0	; () banked
 28177  000172  21CD               	addwfc	(_m_uptime_seconds+3)& (0+255),w,b	;volatile
 28178  000174  0100               	movlb	0	; () banked
 28179  000176  6FCD               	movwf	(_m_uptime_seconds+3)& (0+255),b	;volatile
 28180                           
 28181                           ;main.c: 880: timer_count = timer_count - 1;
 28182  000178  045B               	decf	_timer_count,w,c	;volatile
 28183  00017A  6E5B               	movwf	_timer_count,c	;volatile
 28184                           
 28185                           ; BSR set to: 0
 28186                           ;main.c: 881: if (timer_count == 0)
 28187  00017C  505B               	movf	_timer_count,w,c	;volatile
 28188  00017E  A4D8               	btfss	status,2,c
 28189  000180  D00C               	goto	i1l1887
 28190                           
 28191                           ; BSR set to: 0
 28192                           ;main.c: 882: {
 28193                           ;main.c: 883: timer_flag = 1;
 28194  000182  0E01               	movlw	1
 28195  000184  0101               	movlb	1	; () banked
 28196  000186  6FCC               	movwf	_timer_flag& (0+255),b	;volatile
 28197                           
 28198                           ;main.c: 884: if (m_update_frequency == 0)
 28199  000188  0100               	movlb	0	; () banked
 28200  00018A  51E4               	movf	_m_update_frequency& (0+255),w,b	;volatile
 28201  00018C  A4D8               	btfss	status,2,c
 28202  00018E  D003               	goto	i1l1888
 28203                           
 28204                           ; BSR set to: 0
 28205                           ;main.c: 885: timer_count = 1;
 28206  000190  0E01               	movlw	1
 28207  000192  6E5B               	movwf	_timer_count,c	;volatile
 28208  000194  D002               	goto	i1l1887
 28209  000196                     i1l1888:
 28210                           
 28211                           ; BSR set to: 0
 28212                           ;main.c: 886: else
 28213                           ;main.c: 887: timer_count = m_update_frequency;
 28214  000196  C0E4  F05B         	movff	_m_update_frequency,_timer_count	;volatile
 28215  00019A                     i1l1887:
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;main.c: 888: }
 28219                           ;main.c: 889: PIR3bits.RTCCIF = 0;
 28220  00019A  90A4               	bcf	4004,0,c	;volatile
 28221  00019C                     i1l1890:
 28222  00019C  C031  FFF5         	movff	??_SYS_InterruptLow+18,tablat
 28223  0001A0  C030  FFF8         	movff	??_SYS_InterruptLow+17,tblptru
 28224  0001A4  C02F  FFF7         	movff	??_SYS_InterruptLow+16,tblptrh
 28225  0001A8  C02E  FFF6         	movff	??_SYS_InterruptLow+15,tblptrl
 28226  0001AC  C02D  FFF4         	movff	??_SYS_InterruptLow+14,prodh
 28227  0001B0  C02C  FFF3         	movff	??_SYS_InterruptLow+13,prodl
 28228  0001B4  C02B  FFDA         	movff	??_SYS_InterruptLow+12,fsr2h
 28229  0001B8  C02A  FFD9         	movff	??_SYS_InterruptLow+11,fsr2l
 28230  0001BC  C029  FFE2         	movff	??_SYS_InterruptLow+10,fsr1h
 28231  0001C0  C028  FFE1         	movff	??_SYS_InterruptLow+9,fsr1l
 28232  0001C4  C027  FFEA         	movff	??_SYS_InterruptLow+8,fsr0h
 28233  0001C8  C026  FFE9         	movff	??_SYS_InterruptLow+7,fsr0l
 28234  0001CC  C025  FFFB         	movff	??_SYS_InterruptLow+6,pclatu
 28235  0001D0  C024  FFFA         	movff	??_SYS_InterruptLow+5,pclath
 28236  0001D4  C023  FFE0         	movff	??_SYS_InterruptLow+4,bsr
 28237  0001D8  C022  FFE8         	movff	??_SYS_InterruptLow+3,wreg
 28238  0001DC  C021  FFD8         	movff	??_SYS_InterruptLow+2,status
 28239  0001E0  905C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 28240  0001E2  0010               	retfie	
 28241  0001E4                     __end_of_SYS_InterruptLow:
 28242                           	opt stack 0
 28243                           pclatu	equ	0xFFB
 28244                           pclath	equ	0xFFA
 28245                           tblptru	equ	0xFF8
 28246                           tblptrh	equ	0xFF7
 28247                           tblptrl	equ	0xFF6
 28248                           tablat	equ	0xFF5
 28249                           prodh	equ	0xFF4
 28250                           prodl	equ	0xFF3
 28251                           intcon	equ	0xFF2
 28252                           intcon2	equ	0xFF1
 28253                           intcon3	equ	0xFF0
 28254                           indf0	equ	0xFEF
 28255                           postinc0	equ	0xFEE
 28256                           plusw0	equ	0xFEB
 28257                           fsr0h	equ	0xFEA
 28258                           fsr0l	equ	0xFE9
 28259                           wreg	equ	0xFE8
 28260                           indf1	equ	0xFE7
 28261                           postinc1	equ	0xFE6
 28262                           postdec1	equ	0xFE5
 28263                           plusw1	equ	0xFE3
 28264                           fsr1h	equ	0xFE2
 28265                           fsr1l	equ	0xFE1
 28266                           bsr	equ	0xFE0
 28267                           indf2	equ	0xFDF
 28268                           postinc2	equ	0xFDE
 28269                           postdec2	equ	0xFDD
 28270                           plusw2	equ	0xFDB
 28271                           fsr2h	equ	0xFDA
 28272                           fsr2l	equ	0xFD9
 28273                           status	equ	0xFD8
 28274                           
 28275 ;; *************** function _USBDeviceTasks *****************
 28276 ;; Defined at:
 28277 ;;		line 489 in file "src/usb/usb_device.c"
 28278 ;; Parameters:    Size  Location     Type
 28279 ;;		None
 28280 ;; Auto vars:     Size  Location     Type
 28281 ;;  i               1   29[COMRAM] unsigned char 
 28282 ;; Return value:  Size  Location     Type
 28283 ;;		None               void
 28284 ;; Registers used:
 28285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28286 ;; Tracked objects:
 28287 ;;		On entry : 0/0
 28288 ;;		On exit  : 0/0
 28289 ;;		Unchanged: 0/0
 28290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28295 ;;Total ram usage:        1 bytes
 28296 ;; Hardware stack levels used:    1
 28297 ;; Hardware stack levels required when called:   14
 28298 ;; This function calls:
 28299 ;;		_USBCtrlEPAllowStatusStage
 28300 ;;		_USBCtrlEPService
 28301 ;;		_USBStallHandler
 28302 ;;		_USBSuspend
 28303 ;;		_USBWakeFromSuspend
 28304 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28305 ;;		i1_USBDeviceInit
 28306 ;; This function is called by:
 28307 ;;		_SYS_InterruptLow
 28308 ;; This function uses a non-reentrant model
 28309 ;;
 28310                           
 28311                           	psect	text75
 28312  007CDC                     __ptext75:
 28313                           	opt stack 0
 28314  007CDC                     _USBDeviceTasks:
 28315                           	opt stack 3
 28316                           
 28317                           ;usb_device.c: 491: uint8_t i;
 28318                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 28319                           
 28320                           ;incstack = 0
 28321  007CDC  0449               	decf	_USBDeviceState,w,c	;volatile
 28322  007CDE  B4D8               	btfsc	status,2,c
 28323                           
 28324                           ;usb_device.c: 603: {
 28325                           ;usb_device.c: 613: if(!UCONbits.SE0)
 28326  007CE0  BA65               	btfsc	3941,5,c	;volatile
 28327  007CE2  D008               	goto	i1l13756
 28328                           
 28329                           ;usb_device.c: 614: {
 28330                           ;usb_device.c: 615: {UIR = 0;};
 28331  007CE4  0E00               	movlw	0
 28332  007CE6  6E62               	movwf	3938,c	;volatile
 28333                           
 28334                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 28335  007CE8  010F               	movlb	15	; () banked
 28336  007CEA  8136               	bsf	54,0,b	;volatile
 28337                           
 28338                           ; BSR set to: 15
 28339                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 28340  007CEC  010F               	movlb	15	; () banked
 28341  007CEE  8936               	bsf	54,4,b	;volatile
 28342                           
 28343                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 28344  007CF0  0E02               	movlw	2
 28345  007CF2  6E49               	movwf	_USBDeviceState,c	;volatile
 28346  007CF4                     i1l13756:
 28347                           
 28348                           ;usb_device.c: 622: }
 28349                           ;usb_device.c: 623: }
 28350                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 28351  007CF4  A462               	btfss	3938,2,c	;volatile
 28352  007CF6  D006               	goto	i1l13764
 28353  007CF8  010F               	movlb	15	; () banked
 28354  007CFA  A536               	btfss	54,2,b	;volatile
 28355  007CFC  D003               	goto	i1l13764
 28356                           
 28357                           ; BSR set to: 15
 28358                           ;usb_device.c: 640: {
 28359                           ;usb_device.c: 641: (UIR &= 0xFB);
 28360  007CFE  9462               	bcf	3938,2,c	;volatile
 28361                           
 28362                           ; BSR set to: 15
 28363                           ;usb_device.c: 645: USBWakeFromSuspend();
 28364  007D00  ECDD  F056         	call	_USBWakeFromSuspend	;wreg free
 28365  007D04                     i1l13764:
 28366                           
 28367                           ;usb_device.c: 647: }
 28368                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 28369  007D04  A265               	btfss	3941,1,c	;volatile
 28370  007D06  D002               	goto	i1l1234
 28371                           
 28372                           ;usb_device.c: 653: {
 28373                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 28374  007D08  98A1               	bcf	4001,4,c	;volatile
 28375                           
 28376                           ;usb_device.c: 655: return;
 28377  007D0A  0012               	return	
 28378  007D0C                     i1l1234:
 28379                           
 28380                           ;usb_device.c: 656: }
 28381                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 28382  007D0C  A062               	btfss	3938,0,c	;volatile
 28383  007D0E  D009               	goto	i1l13778
 28384  007D10  010F               	movlb	15	; () banked
 28385  007D12  A136               	btfss	54,0,b	;volatile
 28386  007D14  D006               	goto	i1l13778
 28387                           
 28388                           ; BSR set to: 15
 28389                           ;usb_device.c: 669: {
 28390                           ;usb_device.c: 670: USBDeviceInit();
 28391  007D16  ECB3  F03F         	call	i1_USBDeviceInit	;wreg free
 28392                           
 28393                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 28394  007D1A  88A0               	bsf	4000,4,c	;volatile
 28395                           
 28396                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 28397  007D1C  0E04               	movlw	4
 28398  007D1E  6E49               	movwf	_USBDeviceState,c	;volatile
 28399                           
 28400                           ;usb_device.c: 686: (UIR &= 0xFE);
 28401  007D20  9062               	bcf	3938,0,c	;volatile
 28402  007D22                     i1l13778:
 28403                           
 28404                           ;usb_device.c: 687: }
 28405                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 28406  007D22  A862               	btfss	3938,4,c	;volatile
 28407  007D24  D006               	goto	i1l13786
 28408  007D26  010F               	movlb	15	; () banked
 28409  007D28  A936               	btfss	54,4,b	;volatile
 28410  007D2A  D003               	goto	i1l13786
 28411                           
 28412                           ; BSR set to: 15
 28413                           ;usb_device.c: 693: {
 28414                           ;usb_device.c: 698: USBSuspend();
 28415  007D2C  EC36  F057         	call	_USBSuspend	;wreg free
 28416                           
 28417                           ;usb_device.c: 701: (UIR &= 0xEF);
 28418  007D30  9862               	bcf	3938,4,c	;volatile
 28419  007D32                     i1l13786:
 28420                           
 28421                           ;usb_device.c: 702: }
 28422                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 28423  007D32  AC62               	btfss	3938,6,c	;volatile
 28424  007D34  D019               	goto	i1l13802
 28425                           
 28426                           ;usb_device.c: 705: {
 28427                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 28428  007D36  010F               	movlb	15	; () banked
 28429  007D38  AD36               	btfss	54,6,b	;volatile
 28430  007D3A  D00E               	goto	i1l13792
 28431                           
 28432                           ; BSR set to: 15
 28433                           ;usb_device.c: 707: {
 28434                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 28435  007D3C  0E00               	movlw	0
 28436  007D3E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28437  007D40  0E73               	movlw	115
 28438  007D42  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28439  007D44  0E00               	movlw	0
 28440  007D46  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28441  007D48  0E00               	movlw	0
 28442  007D4A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28443  007D4C  0E00               	movlw	0
 28444  007D4E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28445  007D50  0E01               	movlw	1
 28446  007D52  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28447  007D54  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28448  007D58                     i1l13792:
 28449                           
 28450                           ;usb_device.c: 709: }
 28451                           ;usb_device.c: 710: (UIR &= 0xBF);
 28452  007D58  9C62               	bcf	3938,6,c	;volatile
 28453                           
 28454                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 28455  007D5A  504C               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 28456  007D5C  A4D8               	btfss	status,2,c
 28457                           
 28458                           ;usb_device.c: 736: {
 28459                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 28460  007D5E  064C               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 28461                           
 28462                           ;usb_device.c: 738: }
 28463                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 28464  007D60  504C               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 28465  007D62  B4D8               	btfsc	status,2,c
 28466                           
 28467                           ;usb_device.c: 745: {
 28468                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 28469  007D64  ECBD  F04A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28470  007D68                     i1l13802:
 28471                           
 28472                           ;usb_device.c: 747: }
 28473                           ;usb_device.c: 749: }
 28474                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 28475  007D68  AA62               	btfss	3938,5,c	;volatile
 28476  007D6A  D004               	goto	i1l13808
 28477  007D6C  010F               	movlb	15	; () banked
 28478  007D6E  BB36               	btfsc	54,5,b	;volatile
 28479                           
 28480                           ; BSR set to: 15
 28481                           ;usb_device.c: 752: {
 28482                           ;usb_device.c: 753: USBStallHandler();
 28483  007D70  EC31  F055         	call	_USBStallHandler	;wreg free
 28484  007D74                     i1l13808:
 28485                           
 28486                           ;usb_device.c: 754: }
 28487                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 28488  007D74  A262               	btfss	3938,1,c	;volatile
 28489  007D76  D012               	goto	i1l13816
 28490  007D78  010F               	movlb	15	; () banked
 28491  007D7A  A336               	btfss	54,1,b	;volatile
 28492  007D7C  D00F               	goto	i1l13816
 28493                           
 28494                           ; BSR set to: 15
 28495                           ;usb_device.c: 757: {
 28496                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 28497  007D7E  0E7F               	movlw	127
 28498  007D80  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28499  007D82  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28500  007D84  0E00               	movlw	0
 28501  007D86  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28502  007D88  0E00               	movlw	0
 28503  007D8A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28504  007D8C  0E00               	movlw	0
 28505  007D8E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28506  007D90  0E01               	movlw	1
 28507  007D92  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28508  007D94  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28509                           
 28510                           ;usb_device.c: 759: {UEIR = 0;};
 28511  007D98  0E00               	movlw	0
 28512  007D9A  6E63               	movwf	3939,c	;volatile
 28513  007D9C                     i1l13816:
 28514                           
 28515                           ;usb_device.c: 767: }
 28516                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 28517  007D9C  0E04               	movlw	4
 28518  007D9E  6049               	cpfslt	_USBDeviceState,c	;volatile
 28519  007DA0  D002               	goto	i1l1244
 28520                           
 28521                           ;usb_device.c: 775: {
 28522                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 28523  007DA2  98A1               	bcf	4001,4,c	;volatile
 28524                           
 28525                           ;usb_device.c: 777: return;
 28526  007DA4  0012               	return	
 28527  007DA6                     i1l1244:
 28528                           
 28529                           ;usb_device.c: 778: }
 28530                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 28531  007DA6  010F               	movlb	15	; () banked
 28532  007DA8  A736               	btfss	54,3,b	;volatile
 28533  007DAA  D039               	goto	i1l1245
 28534                           
 28535                           ; BSR set to: 15
 28536                           ;usb_device.c: 784: {
 28537                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 28538  007DAC  0E00               	movlw	0
 28539  007DAE  6E1E               	movwf	USBDeviceTasks@i,c
 28540  007DB0                     i1l13822:
 28541                           
 28542                           ; BSR set to: 15
 28543  007DB0  0E03               	movlw	3
 28544  007DB2  641E               	cpfsgt	USBDeviceTasks@i,c
 28545  007DB4  D001               	goto	i1l1246
 28546  007DB6  D033               	goto	i1l1245
 28547  007DB8                     i1l1246:
 28548                           
 28549                           ;usb_device.c: 786: {
 28550                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 28551  007DB8  A662               	btfss	3938,3,c	;volatile
 28552  007DBA  D031               	goto	i1l1245
 28553                           
 28554                           ;usb_device.c: 788: {
 28555                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 28556  007DBC  CF64 F056          	movff	3940,_USTATcopy	;volatile
 28557                           
 28558                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 28559  007DC0  3056               	rrcf	_USTATcopy,w,c	;volatile
 28560  007DC2  32E8               	rrcf	wreg,f,c
 28561  007DC4  32E8               	rrcf	wreg,f,c
 28562  007DC6  0B0F               	andlw	15
 28563  007DC8  6E4E               	movwf	_endpoint_number,c	;volatile
 28564                           
 28565                           ;usb_device.c: 793: (UIR &= 0xF7);
 28566  007DCA  9662               	bcf	3938,3,c	;volatile
 28567                           
 28568                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 28569  007DCC  B456               	btfsc	_USTATcopy,2,c	;volatile
 28570  007DCE  D007               	goto	i1l13836
 28571                           
 28572                           ;usb_device.c: 799: {
 28573                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 28574  007DD0  504E               	movf	_endpoint_number,w,c	;volatile
 28575  007DD2  0D01               	mullw	1
 28576  007DD4  0EDA               	movlw	low _ep_data_out
 28577  007DD6  24F3               	addwf	prodl,w,c
 28578  007DD8  6ED9               	movwf	fsr2l,c
 28579  007DDA  0E00               	movlw	high _ep_data_out
 28580  007DDC  D006               	goto	L20
 28581  007DDE                     i1l13836:
 28582                           
 28583                           ;usb_device.c: 802: else
 28584                           ;usb_device.c: 803: {
 28585                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 28586  007DDE  504E               	movf	_endpoint_number,w,c	;volatile
 28587  007DE0  0D01               	mullw	1
 28588  007DE2  0ED8               	movlw	low _ep_data_in
 28589  007DE4  24F3               	addwf	prodl,w,c
 28590  007DE6  6ED9               	movwf	fsr2l,c
 28591  007DE8  0E00               	movlw	high _ep_data_in
 28592  007DEA                     L20:
 28593  007DEA  20F4               	addwfc	prodh,w,c
 28594  007DEC  6EDA               	movwf	fsr2h,c
 28595  007DEE  0100               	movlb	0	; () banked
 28596  007DF0  70DF               	btg	indf2,0,c
 28597                           
 28598                           ; BSR set to: 0
 28599                           ;usb_device.c: 805: }
 28600                           ;usb_device.c: 810: if(endpoint_number == 0)
 28601                           
 28602                           ; BSR set to: 0
 28603  007DF2  504E               	movf	_endpoint_number,w,c	;volatile
 28604  007DF4  A4D8               	btfss	status,2,c
 28605  007DF6  D003               	goto	i1l13842
 28606                           
 28607                           ; BSR set to: 0
 28608                           ;usb_device.c: 811: {
 28609                           ;usb_device.c: 812: USBCtrlEPService();
 28610  007DF8  EC90  F049         	call	_USBCtrlEPService	;wreg free
 28611                           
 28612                           ;usb_device.c: 813: }
 28613  007DFC  D00E               	goto	i1l13844
 28614  007DFE                     i1l13842:
 28615                           
 28616                           ;usb_device.c: 814: else
 28617                           ;usb_device.c: 815: {
 28618                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 28619  007DFE  0E00               	movlw	0
 28620  007E00  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28621  007E02  0E72               	movlw	114
 28622  007E04  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28623  007E06  0E56               	movlw	low _USTATcopy
 28624  007E08  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28625  007E0A  0E00               	movlw	high _USTATcopy
 28626  007E0C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28627  007E0E  0E00               	movlw	0
 28628  007E10  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28629  007E12  0E00               	movlw	0
 28630  007E14  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28631  007E16  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28632  007E1A                     i1l13844:
 28633  007E1A  2A1E               	incf	USBDeviceTasks@i,f,c
 28634  007E1C  D7C9               	goto	i1l13822
 28635  007E1E                     i1l1245:
 28636                           
 28637                           ;usb_device.c: 822: }
 28638                           ;usb_device.c: 823: }
 28639                           ;usb_device.c: 824: }
 28640                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 28641  007E1E  98A1               	bcf	4001,4,c	;volatile
 28642  007E20  0012               	return		;funcret
 28643  007E22                     __end_of_USBDeviceTasks:
 28644                           	opt stack 0
 28645                           pclatu	equ	0xFFB
 28646                           pclath	equ	0xFFA
 28647                           tblptru	equ	0xFF8
 28648                           tblptrh	equ	0xFF7
 28649                           tblptrl	equ	0xFF6
 28650                           tablat	equ	0xFF5
 28651                           prodh	equ	0xFF4
 28652                           prodl	equ	0xFF3
 28653                           intcon	equ	0xFF2
 28654                           intcon2	equ	0xFF1
 28655                           intcon3	equ	0xFF0
 28656                           indf0	equ	0xFEF
 28657                           postinc0	equ	0xFEE
 28658                           plusw0	equ	0xFEB
 28659                           fsr0h	equ	0xFEA
 28660                           fsr0l	equ	0xFE9
 28661                           wreg	equ	0xFE8
 28662                           indf1	equ	0xFE7
 28663                           postinc1	equ	0xFE6
 28664                           postdec1	equ	0xFE5
 28665                           plusw1	equ	0xFE3
 28666                           fsr1h	equ	0xFE2
 28667                           fsr1l	equ	0xFE1
 28668                           bsr	equ	0xFE0
 28669                           indf2	equ	0xFDF
 28670                           postinc2	equ	0xFDE
 28671                           postdec2	equ	0xFDD
 28672                           plusw2	equ	0xFDB
 28673                           fsr2h	equ	0xFDA
 28674                           fsr2l	equ	0xFD9
 28675                           status	equ	0xFD8
 28676                           
 28677 ;; *************** function i1_USBDeviceInit *****************
 28678 ;; Defined at:
 28679 ;;		line 298 in file "src/usb/usb_device.c"
 28680 ;; Parameters:    Size  Location     Type
 28681 ;;		None
 28682 ;; Auto vars:     Size  Location     Type
 28683 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 28684 ;; Return value:  Size  Location     Type
 28685 ;;		None               void
 28686 ;; Registers used:
 28687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28688 ;; Tracked objects:
 28689 ;;		On entry : 0/0
 28690 ;;		On exit  : 0/0
 28691 ;;		Unchanged: 0/0
 28692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28697 ;;Total ram usage:        1 bytes
 28698 ;; Hardware stack levels used:    1
 28699 ;; Hardware stack levels required when called:    7
 28700 ;; This function calls:
 28701 ;;		i1_memset
 28702 ;; This function is called by:
 28703 ;;		_USBDeviceTasks
 28704 ;; This function uses a non-reentrant model
 28705 ;;
 28706                           
 28707                           	psect	text76
 28708  007F66                     __ptext76:
 28709                           	opt stack 0
 28710  007F66                     i1_USBDeviceInit:
 28711                           	opt stack 9
 28712                           
 28713                           ;usb_device.c: 300: uint8_t i;
 28714                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 28715                           
 28716                           ;incstack = 0
 28717  007F66  98A0               	bcf	4000,4,c	;volatile
 28718                           
 28719                           ;usb_device.c: 305: {UEIR = 0;};
 28720  007F68  0E00               	movlw	0
 28721  007F6A  6E63               	movwf	3939,c	;volatile
 28722                           
 28723                           ;usb_device.c: 308: {UIR = 0;};
 28724  007F6C  0E00               	movlw	0
 28725  007F6E  6E62               	movwf	3938,c	;volatile
 28726                           
 28727                           ;usb_device.c: 311: UEP0 = 0;
 28728  007F70  0E00               	movlw	0
 28729  007F72  010F               	movlb	15	; () banked
 28730  007F74  6F26               	movwf	38,b	;volatile
 28731                           
 28732                           ; BSR set to: 15
 28733                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 28734  007F76  0E27               	movlw	39
 28735  007F78  6E01               	movwf	i1memset@p1,c
 28736  007F7A  0E0F               	movlw	15
 28737  007F7C  6E02               	movwf	i1memset@p1+1,c
 28738  007F7E  0E00               	movlw	0
 28739  007F80  6E04               	movwf	i1memset@c+1,c
 28740  007F82  0E00               	movlw	0
 28741  007F84  6E03               	movwf	i1memset@c,c
 28742  007F86  0E00               	movlw	0
 28743  007F88  6E06               	movwf	i1memset@n+1,c
 28744  007F8A  0E01               	movlw	1
 28745  007F8C  6E05               	movwf	i1memset@n,c
 28746  007F8E  EC0B  F057         	call	i1_memset	;wreg free
 28747                           
 28748                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 28749  007F92  0E16               	movlw	22
 28750  007F94  010F               	movlb	15	; () banked
 28751  007F96  6F39               	movwf	57,b	;volatile
 28752                           
 28753                           ; BSR set to: 15
 28754  007F98  0E9F               	movlw	159
 28755  007F9A  010F               	movlb	15	; () banked
 28756  007F9C  6F37               	movwf	55,b	;volatile
 28757                           
 28758                           ; BSR set to: 15
 28759  007F9E  0E7B               	movlw	123
 28760  007FA0  010F               	movlb	15	; () banked
 28761  007FA2  6F36               	movwf	54,b	;volatile
 28762                           
 28763                           ; BSR set to: 15
 28764                           ;usb_device.c: 318: ;
 28765                           ;usb_device.c: 321: ;
 28766                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 28767  007FA4  0E00               	movlw	0
 28768  007FA6  6E09               	movwf	i1USBDeviceInit@i,c
 28769  007FA8                     i1l12676:
 28770                           
 28771                           ; BSR set to: 15
 28772  007FA8  0E07               	movlw	7
 28773  007FAA  6409               	cpfsgt	i1USBDeviceInit@i,c
 28774  007FAC  D001               	goto	i1l12680
 28775  007FAE  D00E               	goto	i1l1222
 28776  007FB0                     i1l12680:
 28777                           
 28778                           ;usb_device.c: 325: {
 28779                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 28780  007FB0  5009               	movf	i1USBDeviceInit@i,w,c
 28781  007FB2  0D04               	mullw	4
 28782  007FB4  0E00               	movlw	0
 28783  007FB6  24F3               	addwf	prodl,w,c
 28784  007FB8  6ED9               	movwf	fsr2l,c
 28785  007FBA  0E0D               	movlw	13
 28786  007FBC  20F4               	addwfc	prodh,w,c
 28787  007FBE  6EDA               	movwf	fsr2h,c
 28788  007FC0  6ADE               	clrf	postinc2,c
 28789  007FC2  6ADE               	clrf	postinc2,c
 28790  007FC4  6ADE               	clrf	postinc2,c
 28791  007FC6  6ADD               	clrf	postdec2,c
 28792  007FC8  2A09               	incf	i1USBDeviceInit@i,f,c
 28793  007FCA  D7EE               	goto	i1l12676
 28794  007FCC                     i1l1222:
 28795                           
 28796                           ;usb_device.c: 327: }
 28797                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 28798  007FCC  8C65               	bsf	3941,6,c	;volatile
 28799                           
 28800                           ;usb_device.c: 333: UADDR = 0x00;
 28801  007FCE  0E00               	movlw	0
 28802  007FD0  010F               	movlb	15	; () banked
 28803  007FD2  6F38               	movwf	56,b	;volatile
 28804                           
 28805                           ; BSR set to: 15
 28806                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 28807  007FD4  9865               	bcf	3941,4,c	;volatile
 28808                           
 28809                           ; BSR set to: 15
 28810                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 28811  007FD6  9C65               	bcf	3941,6,c	;volatile
 28812                           
 28813                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 28814  007FD8  D00C               	goto	i1l12700
 28815  007FDA                     i1l12692:
 28816                           
 28817                           ;usb_device.c: 343: {
 28818                           ;usb_device.c: 344: (UIR &= 0xF7);
 28819  007FDA  9662               	bcf	3938,3,c	;volatile
 28820                           
 28821                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 28822  007FDC  0E00               	movlw	0
 28823  007FDE  0100               	movlb	0	; () banked
 28824  007FE0  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28825                           
 28826                           ; BSR set to: 0
 28827                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 28828  007FE2  0E00               	movlw	0
 28829  007FE4  0100               	movlb	0	; () banked
 28830  007FE6  6FA6               	movwf	(_outPipes+3)& (0+255),b	;volatile
 28831                           
 28832                           ; BSR set to: 0
 28833                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 28834  007FE8  0E00               	movlw	0
 28835  007FEA  0100               	movlb	0	; () banked
 28836  007FEC  6FA8               	movwf	(_outPipes+5)& (0+255),b	;volatile
 28837  007FEE  0E00               	movlw	0
 28838  007FF0  6FA7               	movwf	(_outPipes+4)& (0+255),b	;volatile
 28839  007FF2                     i1l12700:
 28840  007FF2  B662               	btfsc	3938,3,c	;volatile
 28841  007FF4  D7F2               	goto	i1l12692
 28842                           
 28843                           ;usb_device.c: 349: }
 28844                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 28845  007FF6  0E01               	movlw	1
 28846  007FF8  6E4A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28847                           
 28848                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 28849  007FFA  0E01               	movlw	1
 28850  007FFC  6E4B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28851                           
 28852                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 28853  007FFE  0E00               	movlw	0
 28854  008000  6E46               	movwf	_USBDeferINDataStagePackets,c	;volatile
 28855                           
 28856                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 28857  008002  0E00               	movlw	0
 28858  008004  6E47               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 28859                           
 28860                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 28861  008006  0E00               	movlw	0
 28862  008008  6E45               	movwf	_USBBusIsSuspended,c	;volatile
 28863                           
 28864                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 28865  00800A  0E00               	movlw	0
 28866  00800C  6E09               	movwf	i1USBDeviceInit@i,c
 28867  00800E                     i1l12704:
 28868  00800E  0E01               	movlw	1
 28869  008010  6409               	cpfsgt	i1USBDeviceInit@i,c
 28870  008012  D001               	goto	i1l12708
 28871  008014  D02E               	goto	i1l12714
 28872  008016                     i1l12708:
 28873                           
 28874                           ;usb_device.c: 363: {
 28875                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 28876  008016  5009               	movf	i1USBDeviceInit@i,w,c
 28877  008018  0D02               	mullw	2
 28878  00801A  0ECE               	movlw	low _pBDTEntryIn
 28879  00801C  24F3               	addwf	prodl,w,c
 28880  00801E  6ED9               	movwf	fsr2l,c
 28881  008020  0E00               	movlw	high _pBDTEntryIn
 28882  008022  20F4               	addwfc	prodh,w,c
 28883  008024  6EDA               	movwf	fsr2h,c
 28884  008026  0E00               	movlw	0
 28885  008028  6EDE               	movwf	postinc2,c
 28886  00802A  0E00               	movlw	0
 28887  00802C  6EDD               	movwf	postdec2,c
 28888                           
 28889                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 28890  00802E  5009               	movf	i1USBDeviceInit@i,w,c
 28891  008030  0D02               	mullw	2
 28892  008032  0ED2               	movlw	low _pBDTEntryOut
 28893  008034  24F3               	addwf	prodl,w,c
 28894  008036  6ED9               	movwf	fsr2l,c
 28895  008038  0E00               	movlw	high _pBDTEntryOut
 28896  00803A  20F4               	addwfc	prodh,w,c
 28897  00803C  6EDA               	movwf	fsr2h,c
 28898  00803E  0E00               	movlw	0
 28899  008040  6EDE               	movwf	postinc2,c
 28900  008042  0E00               	movlw	0
 28901  008044  6EDD               	movwf	postdec2,c
 28902                           
 28903                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 28904  008046  5009               	movf	i1USBDeviceInit@i,w,c
 28905  008048  0D01               	mullw	1
 28906  00804A  0ED8               	movlw	low _ep_data_in
 28907  00804C  24F3               	addwf	prodl,w,c
 28908  00804E  6ED9               	movwf	fsr2l,c
 28909  008050  0E00               	movlw	high _ep_data_in
 28910  008052  20F4               	addwfc	prodh,w,c
 28911  008054  6EDA               	movwf	fsr2h,c
 28912  008056  0E00               	movlw	0
 28913  008058  6EDF               	movwf	indf2,c
 28914                           
 28915                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 28916  00805A  5009               	movf	i1USBDeviceInit@i,w,c
 28917  00805C  0D01               	mullw	1
 28918  00805E  0EDA               	movlw	low _ep_data_out
 28919  008060  24F3               	addwf	prodl,w,c
 28920  008062  6ED9               	movwf	fsr2l,c
 28921  008064  0E00               	movlw	high _ep_data_out
 28922  008066  20F4               	addwfc	prodh,w,c
 28923  008068  6EDA               	movwf	fsr2h,c
 28924  00806A  0E00               	movlw	0
 28925  00806C  6EDF               	movwf	indf2,c
 28926  00806E  2A09               	incf	i1USBDeviceInit@i,f,c
 28927  008070  D7CE               	goto	i1l12704
 28928  008072                     i1l12714:
 28929                           
 28930                           ;usb_device.c: 368: }
 28931                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28932  008072  0E08               	movlw	8
 28933  008074  0100               	movlb	0	; () banked
 28934  008076  6FCE               	movwf	_pBDTEntryIn& (0+255),b
 28935  008078  0E0D               	movlw	13
 28936  00807A  0100               	movlb	0	; () banked
 28937  00807C  6FCF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 28938                           
 28939                           ; BSR set to: 0
 28940                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 28941  00807E  0E16               	movlw	22
 28942  008080  010F               	movlb	15	; () banked
 28943  008082  6F26               	movwf	38,b	;volatile
 28944                           
 28945                           ; BSR set to: 15
 28946                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 28947  008084  0E0D               	movlw	13
 28948  008086  010D               	movlb	13	; () banked
 28949  008088  6F03               	movwf	3,b	;volatile
 28950  00808A  0E20               	movlw	32
 28951  00808C  6F02               	movwf	2,b	;volatile
 28952                           
 28953                           ; BSR set to: 13
 28954                           ;usb_device.c: 376: BDT[0].CNT = 8;
 28955  00808E  0E08               	movlw	8
 28956  008090  010D               	movlb	13	; () banked
 28957  008092  6F01               	movwf	1,b	;volatile
 28958                           
 28959                           ; BSR set to: 13
 28960                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 28961  008094  0E04               	movlw	4
 28962  008096  010D               	movlb	13	; () banked
 28963  008098  6F00               	movwf	0,b	;volatile
 28964                           
 28965                           ; BSR set to: 13
 28966                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 28967  00809A  010D               	movlb	13	; () banked
 28968  00809C  8F00               	bsf	0,7,b	;volatile
 28969                           
 28970                           ; BSR set to: 13
 28971                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 28972  00809E  0E00               	movlw	0
 28973  0080A0  6E54               	movwf	_USBActiveConfiguration,c	;volatile
 28974                           
 28975                           ; BSR set to: 13
 28976                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 28977  0080A2  0E00               	movlw	0
 28978  0080A4  6E49               	movwf	_USBDeviceState,c	;volatile
 28979                           
 28980                           ; BSR set to: 13
 28981  0080A6  0012               	return		;funcret
 28982  0080A8                     __end_ofi1_USBDeviceInit:
 28983                           	opt stack 0
 28984                           pclatu	equ	0xFFB
 28985                           pclath	equ	0xFFA
 28986                           tblptru	equ	0xFF8
 28987                           tblptrh	equ	0xFF7
 28988                           tblptrl	equ	0xFF6
 28989                           tablat	equ	0xFF5
 28990                           prodh	equ	0xFF4
 28991                           prodl	equ	0xFF3
 28992                           intcon	equ	0xFF2
 28993                           intcon2	equ	0xFF1
 28994                           intcon3	equ	0xFF0
 28995                           indf0	equ	0xFEF
 28996                           postinc0	equ	0xFEE
 28997                           plusw0	equ	0xFEB
 28998                           fsr0h	equ	0xFEA
 28999                           fsr0l	equ	0xFE9
 29000                           wreg	equ	0xFE8
 29001                           indf1	equ	0xFE7
 29002                           postinc1	equ	0xFE6
 29003                           postdec1	equ	0xFE5
 29004                           plusw1	equ	0xFE3
 29005                           fsr1h	equ	0xFE2
 29006                           fsr1l	equ	0xFE1
 29007                           bsr	equ	0xFE0
 29008                           indf2	equ	0xFDF
 29009                           postinc2	equ	0xFDE
 29010                           postdec2	equ	0xFDD
 29011                           plusw2	equ	0xFDB
 29012                           fsr2h	equ	0xFDA
 29013                           fsr2l	equ	0xFD9
 29014                           status	equ	0xFD8
 29015                           
 29016 ;; *************** function _USBWakeFromSuspend *****************
 29017 ;; Defined at:
 29018 ;;		line 2302 in file "src/usb/usb_device.c"
 29019 ;; Parameters:    Size  Location     Type
 29020 ;;		None
 29021 ;; Auto vars:     Size  Location     Type
 29022 ;;		None
 29023 ;; Return value:  Size  Location     Type
 29024 ;;		None               void
 29025 ;; Registers used:
 29026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29027 ;; Tracked objects:
 29028 ;;		On entry : 0/0
 29029 ;;		On exit  : 0/0
 29030 ;;		Unchanged: 0/0
 29031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29036 ;;Total ram usage:        0 bytes
 29037 ;; Hardware stack levels used:    1
 29038 ;; Hardware stack levels required when called:   10
 29039 ;; This function calls:
 29040 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29041 ;; This function is called by:
 29042 ;;		_USBDeviceTasks
 29043 ;; This function uses a non-reentrant model
 29044 ;;
 29045                           
 29046                           	psect	text77
 29047  00ADBA                     __ptext77:
 29048                           	opt stack 0
 29049  00ADBA                     _USBWakeFromSuspend:
 29050                           	opt stack 6
 29051                           
 29052                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 29053                           
 29054                           ; BSR set to: 13
 29055                           ;incstack = 0
 29056  00ADBA  0E00               	movlw	0
 29057  00ADBC  6E45               	movwf	_USBBusIsSuspended,c	;volatile
 29058                           
 29059                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 29060  00ADBE  0E00               	movlw	0
 29061  00ADC0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29062  00ADC2  0E74               	movlw	116
 29063  00ADC4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29064  00ADC6  0E00               	movlw	0
 29065  00ADC8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29066  00ADCA  0E00               	movlw	0
 29067  00ADCC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29068  00ADCE  0E00               	movlw	0
 29069  00ADD0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29070  00ADD2  0E00               	movlw	0
 29071  00ADD4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29072  00ADD6  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29073                           
 29074                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 29075  00ADDA  9265               	bcf	3941,1,c	;volatile
 29076                           
 29077                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 29078  00ADDC  010F               	movlb	15	; () banked
 29079  00ADDE  9536               	bcf	54,2,b	;volatile
 29080                           
 29081                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 29082  00ADE0  D001               	goto	i1l12382
 29083  00ADE2                     i1l12380:
 29084                           
 29085                           ;usb_device.c: 2342: {
 29086                           ;usb_device.c: 2343: (UIR &= 0xFB);
 29087  00ADE2  9462               	bcf	3938,2,c	;volatile
 29088  00ADE4                     i1l12382:
 29089  00ADE4  A462               	btfss	3938,2,c	;volatile
 29090  00ADE6  0012               	return	
 29091  00ADE8  D7FC               	goto	i1l12380
 29092  00ADEA                     __end_of_USBWakeFromSuspend:
 29093                           	opt stack 0
 29094                           pclatu	equ	0xFFB
 29095                           pclath	equ	0xFFA
 29096                           tblptru	equ	0xFF8
 29097                           tblptrh	equ	0xFF7
 29098                           tblptrl	equ	0xFF6
 29099                           tablat	equ	0xFF5
 29100                           prodh	equ	0xFF4
 29101                           prodl	equ	0xFF3
 29102                           intcon	equ	0xFF2
 29103                           intcon2	equ	0xFF1
 29104                           intcon3	equ	0xFF0
 29105                           indf0	equ	0xFEF
 29106                           postinc0	equ	0xFEE
 29107                           plusw0	equ	0xFEB
 29108                           fsr0h	equ	0xFEA
 29109                           fsr0l	equ	0xFE9
 29110                           wreg	equ	0xFE8
 29111                           indf1	equ	0xFE7
 29112                           postinc1	equ	0xFE6
 29113                           postdec1	equ	0xFE5
 29114                           plusw1	equ	0xFE3
 29115                           fsr1h	equ	0xFE2
 29116                           fsr1l	equ	0xFE1
 29117                           bsr	equ	0xFE0
 29118                           indf2	equ	0xFDF
 29119                           postinc2	equ	0xFDE
 29120                           postdec2	equ	0xFDD
 29121                           plusw2	equ	0xFDB
 29122                           fsr2h	equ	0xFDA
 29123                           fsr2l	equ	0xFD9
 29124                           status	equ	0xFD8
 29125                           
 29126 ;; *************** function _USBSuspend *****************
 29127 ;; Defined at:
 29128 ;;		line 2245 in file "src/usb/usb_device.c"
 29129 ;; Parameters:    Size  Location     Type
 29130 ;;		None
 29131 ;; Auto vars:     Size  Location     Type
 29132 ;;		None
 29133 ;; Return value:  Size  Location     Type
 29134 ;;		None               void
 29135 ;; Registers used:
 29136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29137 ;; Tracked objects:
 29138 ;;		On entry : 0/0
 29139 ;;		On exit  : 0/0
 29140 ;;		Unchanged: 0/0
 29141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29146 ;;Total ram usage:        0 bytes
 29147 ;; Hardware stack levels used:    1
 29148 ;; Hardware stack levels required when called:   10
 29149 ;; This function calls:
 29150 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29151 ;; This function is called by:
 29152 ;;		_USBDeviceTasks
 29153 ;; This function uses a non-reentrant model
 29154 ;;
 29155                           
 29156                           	psect	text78
 29157  00AE6C                     __ptext78:
 29158                           	opt stack 0
 29159  00AE6C                     _USBSuspend:
 29160                           	opt stack 6
 29161                           
 29162                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 29163                           
 29164                           ;incstack = 0
 29165  00AE6C  010F               	movlb	15	; () banked
 29166  00AE6E  8536               	bsf	54,2,b	;volatile
 29167                           
 29168                           ; BSR set to: 15
 29169                           ;usb_device.c: 2271: (UIR &= 0xEF);
 29170  00AE70  9862               	bcf	3938,4,c	;volatile
 29171                           
 29172                           ; BSR set to: 15
 29173                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 29174  00AE72  8265               	bsf	3941,1,c	;volatile
 29175                           
 29176                           ; BSR set to: 15
 29177                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 29178  00AE74  0E01               	movlw	1
 29179  00AE76  6E45               	movwf	_USBBusIsSuspended,c	;volatile
 29180                           
 29181                           ; BSR set to: 15
 29182                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 29183  00AE78  0E00               	movlw	0
 29184  00AE7A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29185  00AE7C  0E75               	movlw	117
 29186  00AE7E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29187  00AE80  0E00               	movlw	0
 29188  00AE82  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29189  00AE84  0E00               	movlw	0
 29190  00AE86  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29191  00AE88  0E00               	movlw	0
 29192  00AE8A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29193  00AE8C  0E00               	movlw	0
 29194  00AE8E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29195  00AE90  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29196  00AE94  0012               	return		;funcret
 29197  00AE96                     __end_of_USBSuspend:
 29198                           	opt stack 0
 29199                           pclatu	equ	0xFFB
 29200                           pclath	equ	0xFFA
 29201                           tblptru	equ	0xFF8
 29202                           tblptrh	equ	0xFF7
 29203                           tblptrl	equ	0xFF6
 29204                           tablat	equ	0xFF5
 29205                           prodh	equ	0xFF4
 29206                           prodl	equ	0xFF3
 29207                           intcon	equ	0xFF2
 29208                           intcon2	equ	0xFF1
 29209                           intcon3	equ	0xFF0
 29210                           indf0	equ	0xFEF
 29211                           postinc0	equ	0xFEE
 29212                           plusw0	equ	0xFEB
 29213                           fsr0h	equ	0xFEA
 29214                           fsr0l	equ	0xFE9
 29215                           wreg	equ	0xFE8
 29216                           indf1	equ	0xFE7
 29217                           postinc1	equ	0xFE6
 29218                           postdec1	equ	0xFE5
 29219                           plusw1	equ	0xFE3
 29220                           fsr1h	equ	0xFE2
 29221                           fsr1l	equ	0xFE1
 29222                           bsr	equ	0xFE0
 29223                           indf2	equ	0xFDF
 29224                           postinc2	equ	0xFDE
 29225                           postdec2	equ	0xFDD
 29226                           plusw2	equ	0xFDB
 29227                           fsr2h	equ	0xFDA
 29228                           fsr2l	equ	0xFD9
 29229                           status	equ	0xFD8
 29230                           
 29231 ;; *************** function _USBStallHandler *****************
 29232 ;; Defined at:
 29233 ;;		line 2202 in file "src/usb/usb_device.c"
 29234 ;; Parameters:    Size  Location     Type
 29235 ;;		None
 29236 ;; Auto vars:     Size  Location     Type
 29237 ;;		None
 29238 ;; Return value:  Size  Location     Type
 29239 ;;		None               void
 29240 ;; Registers used:
 29241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29242 ;; Tracked objects:
 29243 ;;		On entry : 0/0
 29244 ;;		On exit  : 0/0
 29245 ;;		Unchanged: 0/0
 29246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29251 ;;Total ram usage:        1 bytes
 29252 ;; Hardware stack levels used:    1
 29253 ;; Hardware stack levels required when called:    6
 29254 ;; This function calls:
 29255 ;;		Nothing
 29256 ;; This function is called by:
 29257 ;;		_USBDeviceTasks
 29258 ;; This function uses a non-reentrant model
 29259 ;;
 29260                           
 29261                           	psect	text79
 29262  00AA62                     __ptext79:
 29263                           	opt stack 0
 29264  00AA62                     _USBStallHandler:
 29265                           	opt stack 10
 29266                           
 29267                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 29268                           
 29269                           ;incstack = 0
 29270  00AA62  010F               	movlb	15	; () banked
 29271  00AA64  A126               	btfss	38,0,b	;volatile
 29272  00AA66  D01E               	goto	i1l1384
 29273                           
 29274                           ; BSR set to: 15
 29275                           ;usb_device.c: 2215: {
 29276                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 29277  00AA68  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29278  00AA6C  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29279  00AA70  0E80               	movlw	128
 29280  00AA72  18DE               	xorwf	postinc2,w,c
 29281  00AA74  A4D8               	btfss	status,2,c
 29282  00AA76  D014               	goto	i1l12404
 29283                           
 29284                           ; BSR set to: 15
 29285  00AA78  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 29286  00AA7C  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29287  00AA80  0E84               	movlw	132
 29288  00AA82  18DE               	xorwf	postinc2,w,c
 29289  00AA84  A4D8               	btfss	status,2,c
 29290  00AA86  D00C               	goto	i1l12404
 29291                           
 29292                           ; BSR set to: 15
 29293                           ;usb_device.c: 2218: {
 29294                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29295  00AA88  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29296  00AA8C  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29297  00AA90  0E0C               	movlw	12
 29298  00AA92  6EDF               	movwf	indf2,c
 29299                           
 29300                           ; BSR set to: 15
 29301                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29302  00AA94  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29303  00AA98  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29304  00AA9C  0E00               	movlw	0
 29305  00AA9E  8EDB               	bsf	plusw2,7,c
 29306  00AAA0                     i1l12404:
 29307                           
 29308                           ; BSR set to: 15
 29309                           ;usb_device.c: 2222: }
 29310                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 29311  00AAA0  010F               	movlb	15	; () banked
 29312  00AAA2  9126               	bcf	38,0,b	;volatile
 29313  00AAA4                     i1l1384:
 29314                           
 29315                           ; BSR set to: 15
 29316                           ;usb_device.c: 2224: }
 29317                           ;usb_device.c: 2226: (UIR &= 0xDF);
 29318  00AAA4  9A62               	bcf	3938,5,c	;volatile
 29319                           
 29320                           ; BSR set to: 15
 29321  00AAA6  0012               	return		;funcret
 29322  00AAA8                     __end_of_USBStallHandler:
 29323                           	opt stack 0
 29324                           pclatu	equ	0xFFB
 29325                           pclath	equ	0xFFA
 29326                           tblptru	equ	0xFF8
 29327                           tblptrh	equ	0xFF7
 29328                           tblptrl	equ	0xFF6
 29329                           tablat	equ	0xFF5
 29330                           prodh	equ	0xFF4
 29331                           prodl	equ	0xFF3
 29332                           intcon	equ	0xFF2
 29333                           intcon2	equ	0xFF1
 29334                           intcon3	equ	0xFF0
 29335                           indf0	equ	0xFEF
 29336                           postinc0	equ	0xFEE
 29337                           plusw0	equ	0xFEB
 29338                           fsr0h	equ	0xFEA
 29339                           fsr0l	equ	0xFE9
 29340                           wreg	equ	0xFE8
 29341                           indf1	equ	0xFE7
 29342                           postinc1	equ	0xFE6
 29343                           postdec1	equ	0xFE5
 29344                           plusw1	equ	0xFE3
 29345                           fsr1h	equ	0xFE2
 29346                           fsr1l	equ	0xFE1
 29347                           bsr	equ	0xFE0
 29348                           indf2	equ	0xFDF
 29349                           postinc2	equ	0xFDE
 29350                           postdec2	equ	0xFDD
 29351                           plusw2	equ	0xFDB
 29352                           fsr2h	equ	0xFDA
 29353                           fsr2l	equ	0xFD9
 29354                           status	equ	0xFD8
 29355                           
 29356 ;; *************** function _USBCtrlEPService *****************
 29357 ;; Defined at:
 29358 ;;		line 2369 in file "src/usb/usb_device.c"
 29359 ;; Parameters:    Size  Location     Type
 29360 ;;		None
 29361 ;; Auto vars:     Size  Location     Type
 29362 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 29363 ;; Return value:  Size  Location     Type
 29364 ;;		None               void
 29365 ;; Registers used:
 29366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29367 ;; Tracked objects:
 29368 ;;		On entry : 0/0
 29369 ;;		On exit  : 0/0
 29370 ;;		Unchanged: 0/0
 29371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29376 ;;Total ram usage:        3 bytes
 29377 ;; Hardware stack levels used:    1
 29378 ;; Hardware stack levels required when called:   13
 29379 ;; This function calls:
 29380 ;;		_USBCtrlTrfInHandler
 29381 ;;		_USBCtrlTrfOutHandler
 29382 ;;		_USBCtrlTrfSetupHandler
 29383 ;; This function is called by:
 29384 ;;		_USBDeviceTasks
 29385 ;; This function uses a non-reentrant model
 29386 ;;
 29387                           
 29388                           	psect	text80
 29389  009320                     __ptext80:
 29390                           	opt stack 0
 29391  009320                     _USBCtrlEPService:
 29392                           	opt stack 3
 29393                           
 29394                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 29395                           
 29396                           ; BSR set to: 15
 29397                           ;incstack = 0
 29398  009320  0E2D               	movlw	45
 29399  009322  6E4C               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 29400                           
 29401                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 29402  009324  C056  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 29403  009328  0EFD               	movlw	253
 29404  00932A  161B               	andwf	??_USBCtrlEPService,f,c
 29405  00932C  A4D8               	btfss	status,2,c
 29406  00932E  D057               	goto	i1l12438
 29407                           
 29408                           ;usb_device.c: 2380: {
 29409                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 29410  009330  C056  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 29411  009334  90D8               	bcf	status,0,c
 29412  009336  321B               	rrcf	??_USBCtrlEPService,f,c
 29413  009338  0E3F               	movlw	63
 29414  00933A  161B               	andwf	??_USBCtrlEPService,f,c
 29415  00933C  501B               	movf	??_USBCtrlEPService,w,c
 29416  00933E  0D04               	mullw	4
 29417  009340  0E00               	movlw	0
 29418  009342  24F3               	addwf	prodl,w,c
 29419  009344  6E36               	movwf	_pBDTEntryEP0OutCurrent,c
 29420  009346  0E0D               	movlw	13
 29421  009348  20F4               	addwfc	prodh,w,c
 29422  00934A  6E37               	movwf	_pBDTEntryEP0OutCurrent+1,c
 29423                           
 29424                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 29425  00934C  C036  F038         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 29426  009350  C037  F039         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 29427                           
 29428                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 29429  009354  0E04               	movlw	4
 29430  009356  1A38               	xorwf	_pBDTEntryEP0OutNext,f,c
 29431                           
 29432                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 29433  009358  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29434  00935C  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29435  009360  30DF               	rrcf	indf2,w,c
 29436  009362  32E8               	rrcf	wreg,f,c
 29437  009364  0B0F               	andlw	15
 29438  009366  0A0D               	xorlw	13
 29439  009368  A4D8               	btfss	status,2,c
 29440  00936A  D036               	goto	i1l12436
 29441                           
 29442                           ;usb_device.c: 2397: {
 29443                           ;usb_device.c: 2398: unsigned char setup_cnt;
 29444                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 29445  00936C  0E00               	movlw	0
 29446  00936E  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 29447  009370                     i1l12420:
 29448  009370  0E07               	movlw	7
 29449  009372  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 29450  009374  D001               	goto	i1l12424
 29451  009376  D023               	goto	i1l12432
 29452  009378                     i1l12424:
 29453                           
 29454                           ;usb_device.c: 2405: {
 29455                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 29456  009378  EE20 F002          	lfsr	2,2
 29457  00937C  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 29458  00937E  26D9               	addwf	fsr2l,f,c
 29459  009380  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29460  009382  22DA               	addwfc	fsr2h,f,c
 29461  009384  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 29462  009388  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 29463  00938C  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 29464  009390  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 29465  009394  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 29466  009396  0D01               	mullw	1
 29467  009398  0E20               	movlw	32
 29468  00939A  24F3               	addwf	prodl,w,c
 29469  00939C  6EE1               	movwf	fsr1l,c
 29470  00939E  0E0D               	movlw	13
 29471  0093A0  20F4               	addwfc	prodh,w,c
 29472  0093A2  6EE2               	movwf	fsr1h,c
 29473  0093A4  CFDF FFE7          	movff	indf2,indf1
 29474                           
 29475                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 29476  0093A8  EE20 F002          	lfsr	2,2
 29477  0093AC  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 29478  0093AE  26D9               	addwf	fsr2l,f,c
 29479  0093B0  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29480  0093B2  22DA               	addwfc	fsr2h,f,c
 29481  0093B4  2ADE               	incf	postinc2,f,c
 29482  0093B6  0E00               	movlw	0
 29483  0093B8  22DD               	addwfc	postdec2,f,c
 29484  0093BA  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 29485  0093BC  D7D9               	goto	i1l12420
 29486  0093BE                     i1l12432:
 29487                           
 29488                           ;usb_device.c: 2408: }
 29489                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29490  0093BE  EE20 F002          	lfsr	2,2
 29491  0093C2  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 29492  0093C4  26D9               	addwf	fsr2l,f,c
 29493  0093C6  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29494  0093C8  22DA               	addwfc	fsr2h,f,c
 29495  0093CA  0E20               	movlw	32
 29496  0093CC  6EDE               	movwf	postinc2,c
 29497  0093CE  0E0D               	movlw	13
 29498  0093D0  6EDD               	movwf	postdec2,c
 29499                           
 29500                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 29501  0093D2  ECD2  F050         	call	_USBCtrlTrfSetupHandler	;wreg free
 29502                           
 29503                           ;usb_device.c: 2413: }
 29504  0093D6  0012               	return	
 29505  0093D8                     i1l12436:
 29506                           
 29507                           ;usb_device.c: 2414: else
 29508                           ;usb_device.c: 2415: {
 29509                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 29510  0093D8  EC5F  F054         	call	_USBCtrlTrfOutHandler	;wreg free
 29511                           
 29512                           ;usb_device.c: 2418: }
 29513                           ;usb_device.c: 2419: }
 29514  0093DC  0012               	return	
 29515  0093DE                     i1l12438:
 29516                           
 29517                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 29518  0093DE  5056               	movf	_USTATcopy,w,c	;volatile
 29519  0093E0  0BFD               	andlw	253
 29520  0093E2  0A04               	xorlw	4
 29521  0093E4  A4D8               	btfss	status,2,c
 29522  0093E6  0012               	return	
 29523                           
 29524                           ;usb_device.c: 2421: {
 29525                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 29526  0093E8  EC1F  F04B         	call	_USBCtrlTrfInHandler	;wreg free
 29527  0093EC  0012               	return	
 29528  0093EE                     __end_of_USBCtrlEPService:
 29529                           	opt stack 0
 29530                           pclatu	equ	0xFFB
 29531                           pclath	equ	0xFFA
 29532                           tblptru	equ	0xFF8
 29533                           tblptrh	equ	0xFF7
 29534                           tblptrl	equ	0xFF6
 29535                           tablat	equ	0xFF5
 29536                           prodh	equ	0xFF4
 29537                           prodl	equ	0xFF3
 29538                           intcon	equ	0xFF2
 29539                           intcon2	equ	0xFF1
 29540                           intcon3	equ	0xFF0
 29541                           indf0	equ	0xFEF
 29542                           postinc0	equ	0xFEE
 29543                           plusw0	equ	0xFEB
 29544                           fsr0h	equ	0xFEA
 29545                           fsr0l	equ	0xFE9
 29546                           wreg	equ	0xFE8
 29547                           indf1	equ	0xFE7
 29548                           postinc1	equ	0xFE6
 29549                           postdec1	equ	0xFE5
 29550                           plusw1	equ	0xFE3
 29551                           fsr1h	equ	0xFE2
 29552                           fsr1l	equ	0xFE1
 29553                           bsr	equ	0xFE0
 29554                           indf2	equ	0xFDF
 29555                           postinc2	equ	0xFDE
 29556                           postdec2	equ	0xFDD
 29557                           plusw2	equ	0xFDB
 29558                           fsr2h	equ	0xFDA
 29559                           fsr2l	equ	0xFD9
 29560                           status	equ	0xFD8
 29561                           
 29562 ;; *************** function _USBCtrlTrfSetupHandler *****************
 29563 ;; Defined at:
 29564 ;;		line 2469 in file "src/usb/usb_device.c"
 29565 ;; Parameters:    Size  Location     Type
 29566 ;;		None
 29567 ;; Auto vars:     Size  Location     Type
 29568 ;;		None
 29569 ;; Return value:  Size  Location     Type
 29570 ;;		None               void
 29571 ;; Registers used:
 29572 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29573 ;; Tracked objects:
 29574 ;;		On entry : 0/0
 29575 ;;		On exit  : 0/0
 29576 ;;		Unchanged: 0/0
 29577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29582 ;;Total ram usage:        0 bytes
 29583 ;; Hardware stack levels used:    1
 29584 ;; Hardware stack levels required when called:   12
 29585 ;; This function calls:
 29586 ;;		_USBCheckStdRequest
 29587 ;;		_USBCtrlEPServiceComplete
 29588 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29589 ;; This function is called by:
 29590 ;;		_USBCtrlEPService
 29591 ;; This function uses a non-reentrant model
 29592 ;;
 29593                           
 29594                           	psect	text81
 29595  00A1A4                     __ptext81:
 29596                           	opt stack 0
 29597  00A1A4                     _USBCtrlTrfSetupHandler:
 29598                           	opt stack 3
 29599                           
 29600                           ;usb_device.c: 2474: shortPacketStatus = 0;
 29601                           
 29602                           ;incstack = 0
 29603  00A1A4  0E00               	movlw	0
 29604  00A1A6  6E52               	movwf	_shortPacketStatus,c	;volatile
 29605                           
 29606                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 29607  00A1A8  0E00               	movlw	0
 29608  00A1AA  6E48               	movwf	_USBDeferStatusStagePacket,c	;volatile
 29609                           
 29610                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 29611  00A1AC  0E00               	movlw	0
 29612  00A1AE  6E46               	movwf	_USBDeferINDataStagePackets,c	;volatile
 29613                           
 29614                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 29615  00A1B0  0E00               	movlw	0
 29616  00A1B2  6E47               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 29617                           
 29618                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 29619  00A1B4  0E00               	movlw	0
 29620  00A1B6  6E42               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29621                           
 29622                           ;usb_device.c: 2479: controlTransferState = 0;
 29623  00A1B8  0E00               	movlw	0
 29624  00A1BA  6E4D               	movwf	_controlTransferState,c	;volatile
 29625                           
 29626                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 29627  00A1BC  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 29628  00A1C0  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29629  00A1C4  0E7F               	movlw	127
 29630  00A1C6  16DF               	andwf	indf2,f,c
 29631                           
 29632                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29633  00A1C8  0E04               	movlw	4
 29634  00A1CA  0100               	movlb	0	; () banked
 29635  00A1CC  1BCE               	xorwf	_pBDTEntryIn& (0+255),f,b
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 29639  00A1CE  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 29640  00A1D2  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29641  00A1D6  0E7F               	movlw	127
 29642  00A1D8  16DF               	andwf	indf2,f,c
 29643                           
 29644                           ; BSR set to: 0
 29645                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29646  00A1DA  0E04               	movlw	4
 29647  00A1DC  0100               	movlb	0	; () banked
 29648  00A1DE  1BCE               	xorwf	_pBDTEntryIn& (0+255),f,b
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 29652  00A1E0  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29653  00A1E4  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29654  00A1E8  0E7F               	movlw	127
 29655  00A1EA  16DF               	andwf	indf2,f,c
 29656                           
 29657                           ; BSR set to: 0
 29658                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 29659  00A1EC  0E00               	movlw	0
 29660  00A1EE  0100               	movlb	0	; () banked
 29661  00A1F0  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29662                           
 29663                           ; BSR set to: 0
 29664                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 29665  00A1F2  0E00               	movlw	0
 29666  00A1F4  0100               	movlb	0	; () banked
 29667  00A1F6  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29668  00A1F8  0E00               	movlw	0
 29669  00A1FA  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29670                           
 29671                           ; BSR set to: 0
 29672                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 29673  00A1FC  0E00               	movlw	0
 29674  00A1FE  0100               	movlb	0	; () banked
 29675  00A200  6FA6               	movwf	(_outPipes+3)& (0+255),b	;volatile
 29676                           
 29677                           ; BSR set to: 0
 29678                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 29679  00A202  0E00               	movlw	0
 29680  00A204  0100               	movlb	0	; () banked
 29681  00A206  6FA8               	movwf	(_outPipes+5)& (0+255),b	;volatile
 29682  00A208  0E00               	movlw	0
 29683  00A20A  6FA7               	movwf	(_outPipes+4)& (0+255),b	;volatile
 29684                           
 29685                           ; BSR set to: 0
 29686                           ;usb_device.c: 2503: USBCheckStdRequest();
 29687  00A20C  ECEF  F046         	call	_USBCheckStdRequest	;wreg free
 29688                           
 29689                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 29690  00A210  0E00               	movlw	0
 29691  00A212  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29692  00A214  0E03               	movlw	3
 29693  00A216  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29694  00A218  0E00               	movlw	0
 29695  00A21A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29696  00A21C  0E00               	movlw	0
 29697  00A21E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29698  00A220  0E00               	movlw	0
 29699  00A222  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29700  00A224  0E00               	movlw	0
 29701  00A226  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29702  00A228  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29703                           
 29704                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 29705  00A22C  EC75  F046         	call	_USBCtrlEPServiceComplete	;wreg free
 29706  00A230  0012               	return		;funcret
 29707  00A232                     __end_of_USBCtrlTrfSetupHandler:
 29708                           	opt stack 0
 29709                           pclatu	equ	0xFFB
 29710                           pclath	equ	0xFFA
 29711                           tblptru	equ	0xFF8
 29712                           tblptrh	equ	0xFF7
 29713                           tblptrl	equ	0xFF6
 29714                           tablat	equ	0xFF5
 29715                           prodh	equ	0xFF4
 29716                           prodl	equ	0xFF3
 29717                           intcon	equ	0xFF2
 29718                           intcon2	equ	0xFF1
 29719                           intcon3	equ	0xFF0
 29720                           indf0	equ	0xFEF
 29721                           postinc0	equ	0xFEE
 29722                           plusw0	equ	0xFEB
 29723                           fsr0h	equ	0xFEA
 29724                           fsr0l	equ	0xFE9
 29725                           wreg	equ	0xFE8
 29726                           indf1	equ	0xFE7
 29727                           postinc1	equ	0xFE6
 29728                           postdec1	equ	0xFE5
 29729                           plusw1	equ	0xFE3
 29730                           fsr1h	equ	0xFE2
 29731                           fsr1l	equ	0xFE1
 29732                           bsr	equ	0xFE0
 29733                           indf2	equ	0xFDF
 29734                           postinc2	equ	0xFDE
 29735                           postdec2	equ	0xFDD
 29736                           plusw2	equ	0xFDB
 29737                           fsr2h	equ	0xFDA
 29738                           fsr2l	equ	0xFD9
 29739                           status	equ	0xFD8
 29740                           
 29741 ;; *************** function _USBCtrlEPServiceComplete *****************
 29742 ;; Defined at:
 29743 ;;		line 1616 in file "src/usb/usb_device.c"
 29744 ;; Parameters:    Size  Location     Type
 29745 ;;		None
 29746 ;; Auto vars:     Size  Location     Type
 29747 ;;		None
 29748 ;; Return value:  Size  Location     Type
 29749 ;;		None               void
 29750 ;; Registers used:
 29751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29752 ;; Tracked objects:
 29753 ;;		On entry : 0/0
 29754 ;;		On exit  : 0/0
 29755 ;;		Unchanged: 0/0
 29756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29761 ;;Total ram usage:        0 bytes
 29762 ;; Hardware stack levels used:    1
 29763 ;; Hardware stack levels required when called:    8
 29764 ;; This function calls:
 29765 ;;		_USBCtrlEPAllowDataStage
 29766 ;;		_USBCtrlEPAllowStatusStage
 29767 ;; This function is called by:
 29768 ;;		_USBCtrlTrfSetupHandler
 29769 ;; This function uses a non-reentrant model
 29770 ;;
 29771                           
 29772                           	psect	text82
 29773  008CEA                     __ptext82:
 29774                           	opt stack 0
 29775  008CEA                     _USBCtrlEPServiceComplete:
 29776                           	opt stack 6
 29777                           
 29778                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 29779                           
 29780                           ;incstack = 0
 29781  008CEA  9865               	bcf	3941,4,c	;volatile
 29782                           
 29783                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 29784  008CEC  0100               	movlb	0	; () banked
 29785  008CEE  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 29786  008CF0  D039               	goto	i1l1308
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;usb_device.c: 1629: {
 29790                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 29791  008CF2  0100               	movlb	0	; () banked
 29792  008CF4  AFA6               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29793  008CF6  D00B               	goto	i1l10932
 29794                           
 29795                           ; BSR set to: 0
 29796                           ;usb_device.c: 1631: {
 29797                           ;usb_device.c: 1632: controlTransferState = 2;
 29798  008CF8  0E02               	movlw	2
 29799  008CFA  6E4D               	movwf	_controlTransferState,c	;volatile
 29800                           
 29801                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 29802  008CFC  5047               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 29803  008CFE  B4D8               	btfsc	status,2,c
 29804                           
 29805                           ; BSR set to: 0
 29806                           ;usb_device.c: 1644: {
 29807                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 29808  008D00  ECBC  F04E         	call	_USBCtrlEPAllowDataStage	;wreg free
 29809                           
 29810                           ;usb_device.c: 1646: }
 29811                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 29812  008D04  0E00               	movlw	0
 29813  008D06  6E4B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29814                           
 29815                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 29816  008D08  0E00               	movlw	0
 29817  008D0A  6E4A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29818                           
 29819                           ;usb_device.c: 1652: }
 29820  008D0C  0012               	return	
 29821  008D0E                     i1l10932:
 29822                           
 29823                           ;usb_device.c: 1653: else
 29824                           ;usb_device.c: 1654: {
 29825                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 29826  008D0E  EE20 F001          	lfsr	2,1
 29827  008D12  5038               	movf	_pBDTEntryEP0OutNext,w,c
 29828  008D14  26D9               	addwf	fsr2l,f,c
 29829  008D16  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 29830  008D18  22DA               	addwfc	fsr2h,f,c
 29831  008D1A  0E08               	movlw	8
 29832  008D1C  6EDF               	movwf	indf2,c
 29833                           
 29834                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29835  008D1E  EE20 F002          	lfsr	2,2
 29836  008D22  5038               	movf	_pBDTEntryEP0OutNext,w,c
 29837  008D24  26D9               	addwf	fsr2l,f,c
 29838  008D26  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 29839  008D28  22DA               	addwfc	fsr2h,f,c
 29840  008D2A  0E20               	movlw	32
 29841  008D2C  6EDE               	movwf	postinc2,c
 29842  008D2E  0E0D               	movlw	13
 29843  008D30  6EDD               	movwf	postdec2,c
 29844                           
 29845                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29846  008D32  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29847  008D36  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29848  008D3A  0E0C               	movlw	12
 29849  008D3C  6EDF               	movwf	indf2,c
 29850                           
 29851                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29852  008D3E  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29853  008D42  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29854  008D46  0E00               	movlw	0
 29855  008D48  8EDB               	bsf	plusw2,7,c
 29856                           
 29857                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 29858  008D4A  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 29859  008D4E  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29860  008D52  0E04               	movlw	4
 29861  008D54  6EDF               	movwf	indf2,c
 29862                           
 29863                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29864  008D56  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 29865  008D5A  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29866  008D5E  0E00               	movlw	0
 29867  008D60  8EDB               	bsf	plusw2,7,c
 29868                           
 29869                           ;usb_device.c: 1665: }
 29870                           ;usb_device.c: 1666: }
 29871  008D62  0012               	return	
 29872  008D64                     i1l1308:
 29873                           
 29874                           ; BSR set to: 0
 29875                           ;usb_device.c: 1667: else
 29876                           ;usb_device.c: 1668: {
 29877                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 29878  008D64  010D               	movlb	13	; () banked
 29879  008D66  AF20               	btfss	32,7,b	;volatile
 29880  008D68  D010               	goto	i1l10952
 29881                           
 29882                           ; BSR set to: 13
 29883                           ;usb_device.c: 1670: {
 29884                           ;usb_device.c: 1671: controlTransferState = 1;
 29885  008D6A  0E01               	movlw	1
 29886  008D6C  6E4D               	movwf	_controlTransferState,c	;volatile
 29887                           
 29888                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 29889  008D6E  5046               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 29890  008D70  B4D8               	btfsc	status,2,c
 29891                           
 29892                           ; BSR set to: 13
 29893                           ;usb_device.c: 1686: {
 29894                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 29895  008D72  ECBC  F04E         	call	_USBCtrlEPAllowDataStage	;wreg free
 29896                           
 29897                           ;usb_device.c: 1688: }
 29898                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 29899  008D76  0E00               	movlw	0
 29900  008D78  6E4B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29901                           
 29902                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 29903  008D7A  0E00               	movlw	0
 29904  008D7C  6E4A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29905                           
 29906                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 29907  008D7E  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29908  008D80  A4D8               	btfss	status,2,c
 29909  008D82  0012               	return	
 29910                           
 29911                           ;usb_device.c: 1713: {
 29912                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 29913  008D84  ECBD  F04A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29914                           
 29915                           ;usb_device.c: 1715: }
 29916                           ;usb_device.c: 1716: }
 29917  008D88  0012               	return	
 29918  008D8A                     i1l10952:
 29919                           
 29920                           ;usb_device.c: 1717: else
 29921                           ;usb_device.c: 1718: {
 29922                           ;usb_device.c: 1729: controlTransferState = 2;
 29923  008D8A  0E02               	movlw	2
 29924  008D8C  6E4D               	movwf	_controlTransferState,c	;volatile
 29925                           
 29926                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 29927  008D8E  EE20 F001          	lfsr	2,1
 29928  008D92  5038               	movf	_pBDTEntryEP0OutNext,w,c
 29929  008D94  26D9               	addwf	fsr2l,f,c
 29930  008D96  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 29931  008D98  22DA               	addwfc	fsr2h,f,c
 29932  008D9A  0E08               	movlw	8
 29933  008D9C  6EDF               	movwf	indf2,c
 29934                           
 29935                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29936  008D9E  EE20 F002          	lfsr	2,2
 29937  008DA2  5038               	movf	_pBDTEntryEP0OutNext,w,c
 29938  008DA4  26D9               	addwf	fsr2l,f,c
 29939  008DA6  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 29940  008DA8  22DA               	addwfc	fsr2h,f,c
 29941  008DAA  0E20               	movlw	32
 29942  008DAC  6EDE               	movwf	postinc2,c
 29943  008DAE  0E0D               	movlw	13
 29944  008DB0  6EDD               	movwf	postdec2,c
 29945                           
 29946                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29947  008DB2  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29948  008DB6  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29949  008DBA  0E04               	movlw	4
 29950  008DBC  6EDF               	movwf	indf2,c
 29951                           
 29952                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29953  008DBE  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29954  008DC2  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29955  008DC6  0E00               	movlw	0
 29956  008DC8  8EDB               	bsf	plusw2,7,c
 29957                           
 29958                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 29959  008DCA  0E00               	movlw	0
 29960  008DCC  6E4B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29961                           
 29962                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 29963  008DCE  0E00               	movlw	0
 29964  008DD0  6E4A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29965                           
 29966                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 29967  008DD2  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29968  008DD4  A4D8               	btfss	status,2,c
 29969  008DD6  0012               	return	
 29970                           
 29971                           ;usb_device.c: 1741: {
 29972                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 29973  008DD8  ECBD  F04A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29974  008DDC  0012               	return	
 29975  008DDE                     __end_of_USBCtrlEPServiceComplete:
 29976                           	opt stack 0
 29977                           pclatu	equ	0xFFB
 29978                           pclath	equ	0xFFA
 29979                           tblptru	equ	0xFF8
 29980                           tblptrh	equ	0xFF7
 29981                           tblptrl	equ	0xFF6
 29982                           tablat	equ	0xFF5
 29983                           prodh	equ	0xFF4
 29984                           prodl	equ	0xFF3
 29985                           intcon	equ	0xFF2
 29986                           intcon2	equ	0xFF1
 29987                           intcon3	equ	0xFF0
 29988                           indf0	equ	0xFEF
 29989                           postinc0	equ	0xFEE
 29990                           plusw0	equ	0xFEB
 29991                           fsr0h	equ	0xFEA
 29992                           fsr0l	equ	0xFE9
 29993                           wreg	equ	0xFE8
 29994                           indf1	equ	0xFE7
 29995                           postinc1	equ	0xFE6
 29996                           postdec1	equ	0xFE5
 29997                           plusw1	equ	0xFE3
 29998                           fsr1h	equ	0xFE2
 29999                           fsr1l	equ	0xFE1
 30000                           bsr	equ	0xFE0
 30001                           indf2	equ	0xFDF
 30002                           postinc2	equ	0xFDE
 30003                           postdec2	equ	0xFDD
 30004                           plusw2	equ	0xFDB
 30005                           fsr2h	equ	0xFDA
 30006                           fsr2l	equ	0xFD9
 30007                           status	equ	0xFD8
 30008                           
 30009 ;; *************** function _USBCtrlEPAllowDataStage *****************
 30010 ;; Defined at:
 30011 ;;		line 1488 in file "src/usb/usb_device.c"
 30012 ;; Parameters:    Size  Location     Type
 30013 ;;		None
 30014 ;; Auto vars:     Size  Location     Type
 30015 ;;		None
 30016 ;; Return value:  Size  Location     Type
 30017 ;;		None               void
 30018 ;; Registers used:
 30019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30020 ;; Tracked objects:
 30021 ;;		On entry : 0/0
 30022 ;;		On exit  : 0/0
 30023 ;;		Unchanged: 0/0
 30024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30029 ;;Total ram usage:        0 bytes
 30030 ;; Hardware stack levels used:    1
 30031 ;; Hardware stack levels required when called:    7
 30032 ;; This function calls:
 30033 ;;		_USBCtrlTrfTxService
 30034 ;; This function is called by:
 30035 ;;		_USBCtrlEPServiceComplete
 30036 ;; This function uses a non-reentrant model
 30037 ;;
 30038                           
 30039                           	psect	text83
 30040  009D78                     __ptext83:
 30041                           	opt stack 0
 30042  009D78                     _USBCtrlEPAllowDataStage:
 30043                           	opt stack 6
 30044                           
 30045                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 30046                           
 30047                           ;incstack = 0
 30048  009D78  0E00               	movlw	0
 30049  009D7A  6E46               	movwf	_USBDeferINDataStagePackets,c	;volatile
 30050                           
 30051                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 30052  009D7C  0E00               	movlw	0
 30053  009D7E  6E47               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 30054                           
 30055                           ;usb_device.c: 1493: if(controlTransferState == 2)
 30056  009D80  0E02               	movlw	2
 30057  009D82  184D               	xorwf	_controlTransferState,w,c	;volatile
 30058  009D84  A4D8               	btfss	status,2,c
 30059  009D86  D01F               	goto	i1l10458
 30060                           
 30061                           ;usb_device.c: 1494: {
 30062                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 30063  009D88  EE20 F001          	lfsr	2,1
 30064  009D8C  5038               	movf	_pBDTEntryEP0OutNext,w,c
 30065  009D8E  26D9               	addwf	fsr2l,f,c
 30066  009D90  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 30067  009D92  22DA               	addwfc	fsr2h,f,c
 30068  009D94  0E08               	movlw	8
 30069  009D96  6EDF               	movwf	indf2,c
 30070                           
 30071                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 30072  009D98  EE20 F002          	lfsr	2,2
 30073  009D9C  5038               	movf	_pBDTEntryEP0OutNext,w,c
 30074  009D9E  26D9               	addwf	fsr2l,f,c
 30075  009DA0  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 30076  009DA2  22DA               	addwfc	fsr2h,f,c
 30077  009DA4  0E28               	movlw	40
 30078  009DA6  6EDE               	movwf	postinc2,c
 30079  009DA8  0E0D               	movlw	13
 30080  009DAA  6EDD               	movwf	postdec2,c
 30081                           
 30082                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 30083  009DAC  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30084  009DB0  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30085  009DB4  0E48               	movlw	72
 30086  009DB6  6EDF               	movwf	indf2,c
 30087                           
 30088                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30089  009DB8  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30090  009DBC  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30091  009DC0  0E00               	movlw	0
 30092  009DC2  8EDB               	bsf	plusw2,7,c
 30093                           
 30094                           ;usb_device.c: 1500: }
 30095  009DC4  0012               	return	
 30096  009DC6                     i1l10458:
 30097                           
 30098                           ;usb_device.c: 1501: else
 30099                           ;usb_device.c: 1502: {
 30100                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 30101  009DC6  0100               	movlb	0	; () banked
 30102  009DC8  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 30103  009DCA  010D               	movlb	13	; () banked
 30104  009DCC  5D26               	subwf	38,w,b	;volatile
 30105  009DCE  0100               	movlb	0	; () banked
 30106  009DD0  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30107  009DD2  010D               	movlb	13	; () banked
 30108  009DD4  5927               	subwfb	39,w,b	;volatile
 30109  009DD6  B0D8               	btfsc	status,0,c
 30110  009DD8  D004               	goto	i1l10462
 30111                           
 30112                           ; BSR set to: 13
 30113                           ;usb_device.c: 1506: {
 30114                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 30115  009DDA  CD26 F0C8          	movff	3366,_inPipes+4	;volatile
 30116  009DDE  CD27 F0C9          	movff	3367,_inPipes+5	;volatile
 30117  009DE2                     i1l10462:
 30118                           
 30119                           ; BSR set to: 13
 30120                           ;usb_device.c: 1508: }
 30121                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 30122  009DE2  EC24  F049         	call	_USBCtrlTrfTxService	;wreg free
 30123                           
 30124                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 30125  009DE6  0100               	movlb	0	; () banked
 30126  009DE8  EE20 F002          	lfsr	2,2
 30127  009DEC  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 30128  009DEE  26D9               	addwf	fsr2l,f,c
 30129  009DF0  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30130  009DF2  22DA               	addwfc	fsr2h,f,c
 30131  009DF4  0E28               	movlw	40
 30132  009DF6  6EDE               	movwf	postinc2,c
 30133  009DF8  0E0D               	movlw	13
 30134  009DFA  6EDD               	movwf	postdec2,c
 30135                           
 30136                           ; BSR set to: 0
 30137                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30138  009DFC  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 30139  009E00  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30140  009E04  0E48               	movlw	72
 30141  009E06  6EDF               	movwf	indf2,c
 30142                           
 30143                           ; BSR set to: 0
 30144                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30145  009E08  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 30146  009E0C  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30147  009E10  0E00               	movlw	0
 30148  009E12  8EDB               	bsf	plusw2,7,c
 30149  009E14  0012               	return	
 30150  009E16                     __end_of_USBCtrlEPAllowDataStage:
 30151                           	opt stack 0
 30152                           pclatu	equ	0xFFB
 30153                           pclath	equ	0xFFA
 30154                           tblptru	equ	0xFF8
 30155                           tblptrh	equ	0xFF7
 30156                           tblptrl	equ	0xFF6
 30157                           tablat	equ	0xFF5
 30158                           prodh	equ	0xFF4
 30159                           prodl	equ	0xFF3
 30160                           intcon	equ	0xFF2
 30161                           intcon2	equ	0xFF1
 30162                           intcon3	equ	0xFF0
 30163                           indf0	equ	0xFEF
 30164                           postinc0	equ	0xFEE
 30165                           plusw0	equ	0xFEB
 30166                           fsr0h	equ	0xFEA
 30167                           fsr0l	equ	0xFE9
 30168                           wreg	equ	0xFE8
 30169                           indf1	equ	0xFE7
 30170                           postinc1	equ	0xFE6
 30171                           postdec1	equ	0xFE5
 30172                           plusw1	equ	0xFE3
 30173                           fsr1h	equ	0xFE2
 30174                           fsr1l	equ	0xFE1
 30175                           bsr	equ	0xFE0
 30176                           indf2	equ	0xFDF
 30177                           postinc2	equ	0xFDE
 30178                           postdec2	equ	0xFDD
 30179                           plusw2	equ	0xFDB
 30180                           fsr2h	equ	0xFDA
 30181                           fsr2l	equ	0xFD9
 30182                           status	equ	0xFD8
 30183                           
 30184 ;; *************** function _USBCheckStdRequest *****************
 30185 ;; Defined at:
 30186 ;;		line 2689 in file "src/usb/usb_device.c"
 30187 ;; Parameters:    Size  Location     Type
 30188 ;;		None
 30189 ;; Auto vars:     Size  Location     Type
 30190 ;;		None
 30191 ;; Return value:  Size  Location     Type
 30192 ;;		None               void
 30193 ;; Registers used:
 30194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30195 ;; Tracked objects:
 30196 ;;		On entry : 0/0
 30197 ;;		On exit  : 0/0
 30198 ;;		Unchanged: 0/0
 30199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30204 ;;Total ram usage:        0 bytes
 30205 ;; Hardware stack levels used:    1
 30206 ;; Hardware stack levels required when called:   11
 30207 ;; This function calls:
 30208 ;;		_USBStdFeatureReqHandler
 30209 ;;		_USBStdGetDscHandler
 30210 ;;		_USBStdGetStatusHandler
 30211 ;;		_USBStdSetCfgHandler
 30212 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30213 ;; This function is called by:
 30214 ;;		_USBCtrlTrfSetupHandler
 30215 ;; This function uses a non-reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text84
 30219  008DDE                     __ptext84:
 30220                           	opt stack 0
 30221  008DDE                     _USBCheckStdRequest:
 30222                           	opt stack 3
 30223                           
 30224                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 30225                           
 30226                           ;incstack = 0
 30227  008DDE  010D               	movlb	13	; () banked
 30228  008DE0  3920               	swapf	32,w,b	;volatile
 30229  008DE2  32E8               	rrcf	wreg,f,c
 30230  008DE4  0B03               	andlw	3
 30231  008DE6  0900               	iorlw	0
 30232  008DE8  A4D8               	btfss	status,2,c
 30233  008DEA  0012               	return	
 30234  008DEC  D04F               	goto	i1l11050
 30235  008DEE                     i1l1435:
 30236                           
 30237                           ; BSR set to: 13
 30238                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 30239  008DEE  0100               	movlb	0	; () banked
 30240  008DF0  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30241                           
 30242                           ; BSR set to: 0
 30243                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 30244  008DF2  0E08               	movlw	8
 30245  008DF4  6E49               	movwf	_USBDeviceState,c	;volatile
 30246                           
 30247                           ;usb_device.c: 2699: break;
 30248  008DF6  0012               	return	
 30249  008DF8                     i1l11020:
 30250                           
 30251                           ;usb_device.c: 2701: USBStdGetDscHandler();
 30252  008DF8  ECC7  F03D         	call	_USBStdGetDscHandler	;wreg free
 30253                           
 30254                           ;usb_device.c: 2702: break;
 30255  008DFC  0012               	return	
 30256  008DFE                     i1l11022:
 30257                           
 30258                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 30259  008DFE  ECD9  F047         	call	_USBStdSetCfgHandler	;wreg free
 30260                           
 30261                           ;usb_device.c: 2705: break;
 30262  008E02  0012               	return	
 30263  008E04                     i1l11024:
 30264                           
 30265                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 30266  008E04  0E54               	movlw	low _USBActiveConfiguration
 30267  008E06  0100               	movlb	0	; () banked
 30268  008E08  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 30269  008E0A  0E00               	movlw	high _USBActiveConfiguration
 30270  008E0C  0100               	movlb	0	; () banked
 30271  008E0E  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 30272                           
 30273                           ; BSR set to: 0
 30274                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30275  008E10  0100               	movlb	0	; () banked
 30276  008E12  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 30277                           
 30278                           ; BSR set to: 0
 30279                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 30280  008E14  0E01               	movlw	1
 30281  008E16  0100               	movlb	0	; () banked
 30282  008E18  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 30283                           
 30284                           ; BSR set to: 0
 30285                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 30286  008E1A  0100               	movlb	0	; () banked
 30287  008E1C  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30288                           
 30289                           ;usb_device.c: 2711: break;
 30290  008E1E  0012               	return	
 30291  008E20                     i1l11032:
 30292                           
 30293                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 30294  008E20  EC55  F04D         	call	_USBStdGetStatusHandler	;wreg free
 30295                           
 30296                           ;usb_device.c: 2714: break;
 30297  008E24  0012               	return	
 30298  008E26                     i1l11034:
 30299                           
 30300                           ;usb_device.c: 2716: case 3:
 30301                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 30302  008E26  ECD2  F034         	call	_USBStdFeatureReqHandler	;wreg free
 30303                           
 30304                           ;usb_device.c: 2718: break;
 30305  008E2A  0012               	return	
 30306  008E2C                     i1l11036:
 30307                           
 30308                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 30309  008E2C  010D               	movlb	13	; () banked
 30310  008E2E  5124               	movf	36,w,b	;volatile
 30311  008E30  0D01               	mullw	1
 30312  008E32  0E55               	movlw	low _USBAlternateInterface
 30313  008E34  24F3               	addwf	prodl,w,c
 30314  008E36  0100               	movlb	0	; () banked
 30315  008E38  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 30316  008E3A  0E00               	movlw	high _USBAlternateInterface
 30317  008E3C  20F4               	addwfc	prodh,w,c
 30318  008E3E  0100               	movlb	0	; () banked
 30319  008E40  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 30320                           
 30321                           ; BSR set to: 0
 30322                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30323  008E42  0100               	movlb	0	; () banked
 30324  008E44  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 30325                           
 30326                           ; BSR set to: 0
 30327                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 30328  008E46  0E01               	movlw	1
 30329  008E48  0100               	movlb	0	; () banked
 30330  008E4A  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 30331                           
 30332                           ; BSR set to: 0
 30333                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 30334  008E4C  0100               	movlb	0	; () banked
 30335  008E4E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30336                           
 30337                           ;usb_device.c: 2724: break;
 30338  008E50  0012               	return	
 30339  008E52                     i1l1444:
 30340                           
 30341                           ; BSR set to: 13
 30342                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 30343  008E52  0100               	movlb	0	; () banked
 30344  008E54  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30345                           
 30346                           ; BSR set to: 0
 30347                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 30348  008E56  010D               	movlb	13	; () banked
 30349  008E58  5124               	movf	36,w,b	;volatile
 30350  008E5A  0D01               	mullw	1
 30351  008E5C  0E55               	movlw	low _USBAlternateInterface
 30352  008E5E  24F3               	addwf	prodl,w,c
 30353  008E60  6ED9               	movwf	fsr2l,c
 30354  008E62  0E00               	movlw	high _USBAlternateInterface
 30355  008E64  20F4               	addwfc	prodh,w,c
 30356  008E66  6EDA               	movwf	fsr2h,c
 30357  008E68  CD22 FFDF          	movff	3362,indf2	;volatile
 30358                           
 30359                           ;usb_device.c: 2728: break;
 30360  008E6C  0012               	return	
 30361  008E6E                     i1l11046:
 30362                           
 30363                           ; BSR set to: 13
 30364                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 30365  008E6E  0E00               	movlw	0
 30366  008E70  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 30367  008E72  0E02               	movlw	2
 30368  008E74  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 30369  008E76  0E00               	movlw	0
 30370  008E78  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 30371  008E7A  0E00               	movlw	0
 30372  008E7C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 30373  008E7E  0E00               	movlw	0
 30374  008E80  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 30375  008E82  0E00               	movlw	0
 30376  008E84  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 30377  008E86  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30378                           
 30379                           ;usb_device.c: 2735: }
 30380                           
 30381                           ;usb_device.c: 2734: break;
 30382                           
 30383                           ;usb_device.c: 2733: default:
 30384                           
 30385                           ;usb_device.c: 2732: case 12:
 30386                           
 30387                           ;usb_device.c: 2731: break;
 30388  008E8A  0012               	return	
 30389  008E8C                     i1l11050:
 30390  008E8C  010D               	movlb	13	; () banked
 30391  008E8E  5121               	movf	33,w,b	;volatile
 30392                           
 30393                           ; Switch size 1, requested type "space"
 30394                           ; Number of cases is 11, Range of values is 0 to 12
 30395                           ; switch strategies available:
 30396                           ; Name         Instructions Cycles
 30397                           ; simple_byte           34    18 (average)
 30398                           ;	Chosen strategy is simple_byte
 30399  008E90  0A00               	xorlw	0	; case 0
 30400  008E92  B4D8               	btfsc	status,2,c
 30401  008E94  D7C5               	goto	i1l11032
 30402  008E96  0A01               	xorlw	1	; case 1
 30403  008E98  B4D8               	btfsc	status,2,c
 30404  008E9A  D7C5               	goto	i1l11034
 30405  008E9C  0A02               	xorlw	2	; case 3
 30406  008E9E  B4D8               	btfsc	status,2,c
 30407  008EA0  D7C2               	goto	i1l11034
 30408  008EA2  0A06               	xorlw	6	; case 5
 30409  008EA4  B4D8               	btfsc	status,2,c
 30410  008EA6  D7A3               	goto	i1l1435
 30411  008EA8  0A03               	xorlw	3	; case 6
 30412  008EAA  B4D8               	btfsc	status,2,c
 30413  008EAC  D7A5               	goto	i1l11020
 30414  008EAE  0A01               	xorlw	1	; case 7
 30415  008EB0  B4D8               	btfsc	status,2,c
 30416  008EB2  D7DD               	goto	i1l11046
 30417  008EB4  0A0F               	xorlw	15	; case 8
 30418  008EB6  B4D8               	btfsc	status,2,c
 30419  008EB8  D7A5               	goto	i1l11024
 30420  008EBA  0A01               	xorlw	1	; case 9
 30421  008EBC  B4D8               	btfsc	status,2,c
 30422  008EBE  D79F               	goto	i1l11022
 30423  008EC0  0A03               	xorlw	3	; case 10
 30424  008EC2  B4D8               	btfsc	status,2,c
 30425  008EC4  D7B3               	goto	i1l11036
 30426  008EC6  0A01               	xorlw	1	; case 11
 30427  008EC8  B4D8               	btfsc	status,2,c
 30428  008ECA  D7C3               	goto	i1l1444
 30429  008ECC  0A07               	xorlw	7	; case 12
 30430  008ECE  0012               	return	
 30431  008ED0                     __end_of_USBCheckStdRequest:
 30432                           	opt stack 0
 30433                           pclatu	equ	0xFFB
 30434                           pclath	equ	0xFFA
 30435                           tblptru	equ	0xFF8
 30436                           tblptrh	equ	0xFF7
 30437                           tblptrl	equ	0xFF6
 30438                           tablat	equ	0xFF5
 30439                           prodh	equ	0xFF4
 30440                           prodl	equ	0xFF3
 30441                           intcon	equ	0xFF2
 30442                           intcon2	equ	0xFF1
 30443                           intcon3	equ	0xFF0
 30444                           indf0	equ	0xFEF
 30445                           postinc0	equ	0xFEE
 30446                           plusw0	equ	0xFEB
 30447                           fsr0h	equ	0xFEA
 30448                           fsr0l	equ	0xFE9
 30449                           wreg	equ	0xFE8
 30450                           indf1	equ	0xFE7
 30451                           postinc1	equ	0xFE6
 30452                           postdec1	equ	0xFE5
 30453                           plusw1	equ	0xFE3
 30454                           fsr1h	equ	0xFE2
 30455                           fsr1l	equ	0xFE1
 30456                           bsr	equ	0xFE0
 30457                           indf2	equ	0xFDF
 30458                           postinc2	equ	0xFDE
 30459                           postdec2	equ	0xFDD
 30460                           plusw2	equ	0xFDB
 30461                           fsr2h	equ	0xFDA
 30462                           fsr2l	equ	0xFD9
 30463                           status	equ	0xFD8
 30464                           
 30465 ;; *************** function _USBStdSetCfgHandler *****************
 30466 ;; Defined at:
 30467 ;;		line 1968 in file "src/usb/usb_device.c"
 30468 ;; Parameters:    Size  Location     Type
 30469 ;;		None
 30470 ;; Auto vars:     Size  Location     Type
 30471 ;;  i               1   20[COMRAM] unsigned char 
 30472 ;; Return value:  Size  Location     Type
 30473 ;;		None               void
 30474 ;; Registers used:
 30475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30476 ;; Tracked objects:
 30477 ;;		On entry : 0/0
 30478 ;;		On exit  : 0/0
 30479 ;;		Unchanged: 0/0
 30480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30485 ;;Total ram usage:        1 bytes
 30486 ;; Hardware stack levels used:    1
 30487 ;; Hardware stack levels required when called:   10
 30488 ;; This function calls:
 30489 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30490 ;;		i1_memset
 30491 ;; This function is called by:
 30492 ;;		_USBCheckStdRequest
 30493 ;; This function uses a non-reentrant model
 30494 ;;
 30495                           
 30496                           	psect	text85
 30497  008FB2                     __ptext85:
 30498                           	opt stack 0
 30499  008FB2                     _USBStdSetCfgHandler:
 30500                           	opt stack 3
 30501                           
 30502                           ;usb_device.c: 1970: uint8_t i;
 30503                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 30504                           
 30505                           ;incstack = 0
 30506  008FB2  0100               	movlb	0	; () banked
 30507  008FB4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30508                           
 30509                           ; BSR set to: 0
 30510                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(1));;
 30511  008FB6  0E27               	movlw	39
 30512  008FB8  6E01               	movwf	i1memset@p1,c
 30513  008FBA  0E0F               	movlw	15
 30514  008FBC  6E02               	movwf	i1memset@p1+1,c
 30515  008FBE  0E00               	movlw	0
 30516  008FC0  6E04               	movwf	i1memset@c+1,c
 30517  008FC2  0E00               	movlw	0
 30518  008FC4  6E03               	movwf	i1memset@c,c
 30519  008FC6  0E00               	movlw	0
 30520  008FC8  6E06               	movwf	i1memset@n+1,c
 30521  008FCA  0E01               	movlw	1
 30522  008FCC  6E05               	movwf	i1memset@n,c
 30523  008FCE  EC0B  F057         	call	i1_memset	;wreg free
 30524                           
 30525                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 30526  008FD2  0E00               	movlw	0
 30527  008FD4  6E01               	movwf	i1memset@p1,c
 30528  008FD6  0E0D               	movlw	13
 30529  008FD8  6E02               	movwf	i1memset@p1+1,c
 30530  008FDA  0E00               	movlw	0
 30531  008FDC  6E04               	movwf	i1memset@c+1,c
 30532  008FDE  0E00               	movlw	0
 30533  008FE0  6E03               	movwf	i1memset@c,c
 30534  008FE2  0E00               	movlw	0
 30535  008FE4  6E06               	movwf	i1memset@n+1,c
 30536  008FE6  0E20               	movlw	32
 30537  008FE8  6E05               	movwf	i1memset@n,c
 30538  008FEA  EC0B  F057         	call	i1_memset	;wreg free
 30539                           
 30540                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 30541  008FEE  8C65               	bsf	3941,6,c	;volatile
 30542                           
 30543                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
 30544  008FF0  0E00               	movlw	0
 30545  008FF2  6E15               	movwf	USBStdSetCfgHandler@i,c
 30546  008FF4                     i1l10478:
 30547  008FF4  0E01               	movlw	1
 30548  008FF6  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 30549  008FF8  D001               	goto	i1l10482
 30550  008FFA  D016               	goto	i1l10488
 30551  008FFC                     i1l10482:
 30552                           
 30553                           ;usb_device.c: 1988: {
 30554                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 30555  008FFC  5015               	movf	USBStdSetCfgHandler@i,w,c
 30556  008FFE  0D01               	mullw	1
 30557  009000  0ED8               	movlw	low _ep_data_in
 30558  009002  24F3               	addwf	prodl,w,c
 30559  009004  6ED9               	movwf	fsr2l,c
 30560  009006  0E00               	movlw	high _ep_data_in
 30561  009008  20F4               	addwfc	prodh,w,c
 30562  00900A  6EDA               	movwf	fsr2h,c
 30563  00900C  0E00               	movlw	0
 30564  00900E  6EDF               	movwf	indf2,c
 30565                           
 30566                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 30567  009010  5015               	movf	USBStdSetCfgHandler@i,w,c
 30568  009012  0D01               	mullw	1
 30569  009014  0EDA               	movlw	low _ep_data_out
 30570  009016  24F3               	addwf	prodl,w,c
 30571  009018  6ED9               	movwf	fsr2l,c
 30572  00901A  0E00               	movlw	high _ep_data_out
 30573  00901C  20F4               	addwfc	prodh,w,c
 30574  00901E  6EDA               	movwf	fsr2h,c
 30575  009020  0E00               	movlw	0
 30576  009022  6EDF               	movwf	indf2,c
 30577  009024  2A15               	incf	USBStdSetCfgHandler@i,f,c
 30578  009026  D7E6               	goto	i1l10478
 30579  009028                     i1l10488:
 30580                           
 30581                           ;usb_device.c: 1991: }
 30582                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
 30583  009028  0E55               	movlw	low _USBAlternateInterface
 30584  00902A  6E01               	movwf	i1memset@p1,c
 30585  00902C  0E00               	movlw	high _USBAlternateInterface
 30586  00902E  6E02               	movwf	i1memset@p1+1,c
 30587  009030  0E00               	movlw	0
 30588  009032  6E04               	movwf	i1memset@c+1,c
 30589  009034  0E00               	movlw	0
 30590  009036  6E03               	movwf	i1memset@c,c
 30591  009038  0E00               	movlw	0
 30592  00903A  6E06               	movwf	i1memset@n+1,c
 30593  00903C  0E01               	movlw	1
 30594  00903E  6E05               	movwf	i1memset@n,c
 30595  009040  EC0B  F057         	call	i1_memset	;wreg free
 30596                           
 30597                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 30598  009044  9C65               	bcf	3941,6,c	;volatile
 30599                           
 30600                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 30601  009046  0E08               	movlw	8
 30602  009048  0100               	movlb	0	; () banked
 30603  00904A  6FCE               	movwf	_pBDTEntryIn& (0+255),b
 30604  00904C  0E0D               	movlw	13
 30605  00904E  0100               	movlb	0	; () banked
 30606  009050  6FCF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 30607                           
 30608                           ; BSR set to: 0
 30609                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 30610  009052  0E00               	movlw	0
 30611  009054  6E36               	movwf	_pBDTEntryEP0OutCurrent,c
 30612  009056  0E0D               	movlw	13
 30613  009058  6E37               	movwf	_pBDTEntryEP0OutCurrent+1,c
 30614                           
 30615                           ; BSR set to: 0
 30616                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 30617  00905A  C036  F038         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 30618  00905E  C037  F039         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 30619                           
 30620                           ; BSR set to: 0
 30621                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 30622  009062  CD22 F054          	movff	3362,_USBActiveConfiguration	;volatile
 30623                           
 30624                           ; BSR set to: 0
 30625                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 30626  009066  5054               	movf	_USBActiveConfiguration,w,c	;volatile
 30627  009068  A4D8               	btfss	status,2,c
 30628  00906A  D003               	goto	i1l10504
 30629                           
 30630                           ; BSR set to: 0
 30631                           ;usb_device.c: 2010: {
 30632                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 30633  00906C  0E10               	movlw	16
 30634  00906E  6E49               	movwf	_USBDeviceState,c	;volatile
 30635                           
 30636                           ;usb_device.c: 2013: }
 30637  009070  0012               	return	
 30638  009072                     i1l10504:
 30639                           
 30640                           ; BSR set to: 0
 30641                           ;usb_device.c: 2014: else
 30642                           ;usb_device.c: 2015: {
 30643                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 30644  009072  0E00               	movlw	0
 30645  009074  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 30646  009076  0E01               	movlw	1
 30647  009078  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 30648  00907A  0E54               	movlw	low _USBActiveConfiguration
 30649  00907C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 30650  00907E  0E00               	movlw	high _USBActiveConfiguration
 30651  009080  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 30652  009082  0E00               	movlw	0
 30653  009084  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 30654  009086  0E01               	movlw	1
 30655  009088  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 30656  00908A  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30657                           
 30658                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 30659  00908E  0E20               	movlw	32
 30660  009090  6E49               	movwf	_USBDeviceState,c	;volatile
 30661  009092  0012               	return	
 30662  009094                     __end_of_USBStdSetCfgHandler:
 30663                           	opt stack 0
 30664                           pclatu	equ	0xFFB
 30665                           pclath	equ	0xFFA
 30666                           tblptru	equ	0xFF8
 30667                           tblptrh	equ	0xFF7
 30668                           tblptrl	equ	0xFF6
 30669                           tablat	equ	0xFF5
 30670                           prodh	equ	0xFF4
 30671                           prodl	equ	0xFF3
 30672                           intcon	equ	0xFF2
 30673                           intcon2	equ	0xFF1
 30674                           intcon3	equ	0xFF0
 30675                           indf0	equ	0xFEF
 30676                           postinc0	equ	0xFEE
 30677                           plusw0	equ	0xFEB
 30678                           fsr0h	equ	0xFEA
 30679                           fsr0l	equ	0xFE9
 30680                           wreg	equ	0xFE8
 30681                           indf1	equ	0xFE7
 30682                           postinc1	equ	0xFE6
 30683                           postdec1	equ	0xFE5
 30684                           plusw1	equ	0xFE3
 30685                           fsr1h	equ	0xFE2
 30686                           fsr1l	equ	0xFE1
 30687                           bsr	equ	0xFE0
 30688                           indf2	equ	0xFDF
 30689                           postinc2	equ	0xFDE
 30690                           postdec2	equ	0xFDD
 30691                           plusw2	equ	0xFDB
 30692                           fsr2h	equ	0xFDA
 30693                           fsr2l	equ	0xFD9
 30694                           status	equ	0xFD8
 30695                           
 30696 ;; *************** function i1_memset *****************
 30697 ;; Defined at:
 30698 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/memset.c"
 30699 ;; Parameters:    Size  Location     Type
 30700 ;;  p1              2    0[COMRAM] PTR void 
 30701 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 30702 ;;  c               2    2[COMRAM] int 
 30703 ;;  n               2    4[COMRAM] unsigned int 
 30704 ;; Auto vars:     Size  Location     Type
 30705 ;;  memset          2    6[COMRAM] PTR unsigned char 
 30706 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 30707 ;; Return value:  Size  Location     Type
 30708 ;;                  2    0[COMRAM] PTR void 
 30709 ;; Registers used:
 30710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30711 ;; Tracked objects:
 30712 ;;		On entry : 0/0
 30713 ;;		On exit  : 0/0
 30714 ;;		Unchanged: 0/0
 30715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30716 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30719 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30720 ;;Total ram usage:        8 bytes
 30721 ;; Hardware stack levels used:    1
 30722 ;; Hardware stack levels required when called:    6
 30723 ;; This function calls:
 30724 ;;		Nothing
 30725 ;; This function is called by:
 30726 ;;		_USBStdSetCfgHandler
 30727 ;;		i1_USBDeviceInit
 30728 ;; This function uses a non-reentrant model
 30729 ;;
 30730                           
 30731                           	psect	text86
 30732  00AE16                     __ptext86:
 30733                           	opt stack 0
 30734  00AE16                     i1_memset:
 30735                           	opt stack 9
 30736                           
 30737                           ;incstack = 0
 30738  00AE16  C001  F007         	movff	i1memset@p1,i1memset@p
 30739  00AE1A  C002  F008         	movff	i1memset@p1+1,i1memset@p+1
 30740  00AE1E  D008               	goto	i1l10040
 30741  00AE20                     i1l10036:
 30742  00AE20  C007  FFD9         	movff	i1memset@p,fsr2l
 30743  00AE24  C008  FFDA         	movff	i1memset@p+1,fsr2h
 30744  00AE28  C003  FFDF         	movff	i1memset@c,indf2
 30745  00AE2C  4A07               	infsnz	i1memset@p,f,c
 30746  00AE2E  2A08               	incf	i1memset@p+1,f,c
 30747  00AE30                     i1l10040:
 30748  00AE30  0605               	decf	i1memset@n,f,c
 30749  00AE32  A0D8               	btfss	status,0,c
 30750  00AE34  0606               	decf	i1memset@n+1,f,c
 30751  00AE36  2805               	incf	i1memset@n,w,c
 30752  00AE38  E1F3               	bnz	i1l10036
 30753  00AE3A  2806               	incf	i1memset@n+1,w,c
 30754  00AE3C  B4D8               	btfsc	status,2,c
 30755  00AE3E  0012               	return	
 30756  00AE40  D7EF               	goto	i1l10036
 30757  00AE42                     __end_ofi1_memset:
 30758                           	opt stack 0
 30759                           pclatu	equ	0xFFB
 30760                           pclath	equ	0xFFA
 30761                           tblptru	equ	0xFF8
 30762                           tblptrh	equ	0xFF7
 30763                           tblptrl	equ	0xFF6
 30764                           tablat	equ	0xFF5
 30765                           prodh	equ	0xFF4
 30766                           prodl	equ	0xFF3
 30767                           intcon	equ	0xFF2
 30768                           intcon2	equ	0xFF1
 30769                           intcon3	equ	0xFF0
 30770                           indf0	equ	0xFEF
 30771                           postinc0	equ	0xFEE
 30772                           plusw0	equ	0xFEB
 30773                           fsr0h	equ	0xFEA
 30774                           fsr0l	equ	0xFE9
 30775                           wreg	equ	0xFE8
 30776                           indf1	equ	0xFE7
 30777                           postinc1	equ	0xFE6
 30778                           postdec1	equ	0xFE5
 30779                           plusw1	equ	0xFE3
 30780                           fsr1h	equ	0xFE2
 30781                           fsr1l	equ	0xFE1
 30782                           bsr	equ	0xFE0
 30783                           indf2	equ	0xFDF
 30784                           postinc2	equ	0xFDE
 30785                           postdec2	equ	0xFDD
 30786                           plusw2	equ	0xFDB
 30787                           fsr2h	equ	0xFDA
 30788                           fsr2l	equ	0xFD9
 30789                           status	equ	0xFD8
 30790                           
 30791 ;; *************** function _USBStdGetStatusHandler *****************
 30792 ;; Defined at:
 30793 ;;		line 2129 in file "src/usb/usb_device.c"
 30794 ;; Parameters:    Size  Location     Type
 30795 ;;		None
 30796 ;; Auto vars:     Size  Location     Type
 30797 ;;  p               2    1[COMRAM] PTR struct __BDT
 30798 ;;		 -> BDT(32), NULL(0), 
 30799 ;; Return value:  Size  Location     Type
 30800 ;;		None               void
 30801 ;; Registers used:
 30802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30803 ;; Tracked objects:
 30804 ;;		On entry : 0/0
 30805 ;;		On exit  : 0/0
 30806 ;;		Unchanged: 0/0
 30807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30811 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30812 ;;Total ram usage:        3 bytes
 30813 ;; Hardware stack levels used:    1
 30814 ;; Hardware stack levels required when called:    6
 30815 ;; This function calls:
 30816 ;;		Nothing
 30817 ;; This function is called by:
 30818 ;;		_USBCheckStdRequest
 30819 ;; This function uses a non-reentrant model
 30820 ;;
 30821                           
 30822                           	psect	text87
 30823  009AAA                     __ptext87:
 30824                           	opt stack 0
 30825  009AAA                     _USBStdGetStatusHandler:
 30826                           	opt stack 7
 30827                           
 30828                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 30829                           
 30830                           ;incstack = 0
 30831  009AAA  0E00               	movlw	0
 30832  009AAC  010D               	movlb	13	; () banked
 30833  009AAE  6F28               	movwf	40,b	;volatile
 30834                           
 30835                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 30836  009AB0  0E00               	movlw	0
 30837  009AB2  010D               	movlb	13	; () banked
 30838  009AB4  6F29               	movwf	41,b	;volatile
 30839                           
 30840                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 30841  009AB6  D03B               	goto	i1l10560
 30842  009AB8                     i1l1371:
 30843                           
 30844                           ; BSR set to: 13
 30845                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 30846  009AB8  0100               	movlb	0	; () banked
 30847  009ABA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30848                           
 30849                           ;usb_device.c: 2145: }
 30850                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 30851                           
 30852                           ; BSR set to: 13
 30853                           
 30854                           ; BSR set to: 0
 30855                           ;usb_device.c: 2143: {
 30856                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 30857                           
 30858                           ;usb_device.c: 2142: if(0 == 1)
 30859  009ABC  0444               	decf	_RemoteWakeup,w,c	;volatile
 30860  009ABE  A4D8               	btfss	status,2,c
 30861  009AC0  D042               	goto	i1l1374
 30862                           
 30863                           ;usb_device.c: 2148: {
 30864                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 30865  009AC2  010D               	movlb	13	; () banked
 30866  009AC4  8328               	bsf	40,1,b	;volatile
 30867                           
 30868                           ; BSR set to: 13
 30869                           ;usb_device.c: 2150: }
 30870                           ;usb_device.c: 2151: break;
 30871  009AC6  D03F               	goto	i1l1374
 30872  009AC8                     i1l1375:
 30873                           
 30874                           ; BSR set to: 13
 30875                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 30876  009AC8  0100               	movlb	0	; () banked
 30877  009ACA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30878                           
 30879                           ;usb_device.c: 2154: break;
 30880  009ACC  D03C               	goto	i1l1374
 30881  009ACE                     i1l1376:
 30882                           
 30883                           ; BSR set to: 13
 30884                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 30885  009ACE  0100               	movlb	0	; () banked
 30886  009AD0  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30887                           
 30888                           ;usb_device.c: 2160: {
 30889                           ;usb_device.c: 2161: BDT_ENTRY *p;
 30890                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 30891  009AD2  010D               	movlb	13	; () banked
 30892  009AD4  BF24               	btfsc	36,7,b	;volatile
 30893  009AD6  D00B               	goto	i1l10550
 30894                           
 30895                           ; BSR set to: 13
 30896                           ;usb_device.c: 2164: {
 30897                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 30898  009AD8  010D               	movlb	13	; () banked
 30899  009ADA  5124               	movf	36,w,b	;volatile
 30900  009ADC  0B0F               	andlw	15
 30901  009ADE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 30902  009AE0  5001               	movf	??_USBStdGetStatusHandler,w,c
 30903  009AE2  0D02               	mullw	2
 30904  009AE4  0ED2               	movlw	low _pBDTEntryOut
 30905  009AE6  24F3               	addwf	prodl,w,c
 30906  009AE8  6ED9               	movwf	fsr2l,c
 30907  009AEA  0E00               	movlw	high _pBDTEntryOut
 30908  009AEC  D00A               	goto	L21
 30909  009AEE                     i1l10550:
 30910                           
 30911                           ; BSR set to: 13
 30912                           ;usb_device.c: 2167: else
 30913                           ;usb_device.c: 2168: {
 30914                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 30915  009AEE  010D               	movlb	13	; () banked
 30916  009AF0  5124               	movf	36,w,b	;volatile
 30917  009AF2  0B0F               	andlw	15
 30918  009AF4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 30919  009AF6  5001               	movf	??_USBStdGetStatusHandler,w,c
 30920  009AF8  0D02               	mullw	2
 30921  009AFA  0ECE               	movlw	low _pBDTEntryIn
 30922  009AFC  24F3               	addwf	prodl,w,c
 30923  009AFE  6ED9               	movwf	fsr2l,c
 30924  009B00  0E00               	movlw	high _pBDTEntryIn
 30925  009B02                     L21:
 30926  009B02  20F4               	addwfc	prodh,w,c
 30927  009B04  6EDA               	movwf	fsr2h,c
 30928  009B06  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 30929  009B0A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 30930                           
 30931                           ; BSR set to: 13
 30932                           ;usb_device.c: 2170: }
 30933                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 30934                           
 30935                           ; BSR set to: 13
 30936  009B0E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 30937  009B12  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 30938  009B16  AEDF               	btfss	indf2,7,c
 30939  009B18  D016               	goto	i1l1374
 30940                           
 30941                           ; BSR set to: 13
 30942  009B1A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 30943  009B1E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 30944  009B22  A4DF               	btfss	indf2,2,c
 30945  009B24  D010               	goto	i1l1374
 30946                           
 30947                           ; BSR set to: 13
 30948                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 30949  009B26  0E01               	movlw	1
 30950  009B28  010D               	movlb	13	; () banked
 30951  009B2A  6F28               	movwf	40,b	;volatile
 30952                           
 30953                           ; BSR set to: 13
 30954                           ;usb_device.c: 2175: }
 30955                           ;usb_device.c: 2176: }
 30956                           
 30957                           ; BSR set to: 13
 30958                           ;usb_device.c: 2174: break;
 30959  009B2C  D00C               	goto	i1l1374
 30960  009B2E                     i1l10560:
 30961                           
 30962                           ; BSR set to: 13
 30963  009B2E  010D               	movlb	13	; () banked
 30964  009B30  5120               	movf	32,w,b	;volatile
 30965  009B32  0B1F               	andlw	31
 30966                           
 30967                           ; Switch size 1, requested type "space"
 30968                           ; Number of cases is 3, Range of values is 0 to 2
 30969                           ; switch strategies available:
 30970                           ; Name         Instructions Cycles
 30971                           ; simple_byte           10     6 (average)
 30972                           ;	Chosen strategy is simple_byte
 30973  009B34  0A00               	xorlw	0	; case 0
 30974  009B36  B4D8               	btfsc	status,2,c
 30975  009B38  D7BF               	goto	i1l1371
 30976  009B3A  0A01               	xorlw	1	; case 1
 30977  009B3C  B4D8               	btfsc	status,2,c
 30978  009B3E  D7C4               	goto	i1l1375
 30979  009B40  0A03               	xorlw	3	; case 2
 30980  009B42  B4D8               	btfsc	status,2,c
 30981  009B44  D7C4               	goto	i1l1376
 30982  009B46                     i1l1374:
 30983                           
 30984                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 30985  009B46  0100               	movlb	0	; () banked
 30986  009B48  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 30987  009B4A  0012               	return	
 30988                           
 30989                           ; BSR set to: 0
 30990                           ;usb_device.c: 2179: {
 30991                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 30992  009B4C  0E28               	movlw	40
 30993  009B4E  0100               	movlb	0	; () banked
 30994  009B50  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 30995  009B52  0E0D               	movlw	13
 30996  009B54  0100               	movlb	0	; () banked
 30997  009B56  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 31001  009B58  0100               	movlb	0	; () banked
 31002  009B5A  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 31003                           
 31004                           ; BSR set to: 0
 31005                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 31006  009B5C  0E02               	movlw	2
 31007  009B5E  0100               	movlb	0	; () banked
 31008  009B60  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 31009  009B62  0012               	return	
 31010  009B64                     __end_of_USBStdGetStatusHandler:
 31011                           	opt stack 0
 31012                           pclatu	equ	0xFFB
 31013                           pclath	equ	0xFFA
 31014                           tblptru	equ	0xFF8
 31015                           tblptrh	equ	0xFF7
 31016                           tblptrl	equ	0xFF6
 31017                           tablat	equ	0xFF5
 31018                           prodh	equ	0xFF4
 31019                           prodl	equ	0xFF3
 31020                           intcon	equ	0xFF2
 31021                           intcon2	equ	0xFF1
 31022                           intcon3	equ	0xFF0
 31023                           indf0	equ	0xFEF
 31024                           postinc0	equ	0xFEE
 31025                           plusw0	equ	0xFEB
 31026                           fsr0h	equ	0xFEA
 31027                           fsr0l	equ	0xFE9
 31028                           wreg	equ	0xFE8
 31029                           indf1	equ	0xFE7
 31030                           postinc1	equ	0xFE6
 31031                           postdec1	equ	0xFE5
 31032                           plusw1	equ	0xFE3
 31033                           fsr1h	equ	0xFE2
 31034                           fsr1l	equ	0xFE1
 31035                           bsr	equ	0xFE0
 31036                           indf2	equ	0xFDF
 31037                           postinc2	equ	0xFDE
 31038                           postdec2	equ	0xFDD
 31039                           plusw2	equ	0xFDB
 31040                           fsr2h	equ	0xFDA
 31041                           fsr2l	equ	0xFD9
 31042                           status	equ	0xFD8
 31043                           
 31044 ;; *************** function _USBStdGetDscHandler *****************
 31045 ;; Defined at:
 31046 ;;		line 2043 in file "src/usb/usb_device.c"
 31047 ;; Parameters:    Size  Location     Type
 31048 ;;		None
 31049 ;; Auto vars:     Size  Location     Type
 31050 ;;		None
 31051 ;; Return value:  Size  Location     Type
 31052 ;;		None               void
 31053 ;; Registers used:
 31054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 31055 ;; Tracked objects:
 31056 ;;		On entry : 0/0
 31057 ;;		On exit  : 0/0
 31058 ;;		Unchanged: 0/0
 31059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31064 ;;Total ram usage:        2 bytes
 31065 ;; Hardware stack levels used:    1
 31066 ;; Hardware stack levels required when called:    6
 31067 ;; This function calls:
 31068 ;;		Nothing
 31069 ;; This function is called by:
 31070 ;;		_USBCheckStdRequest
 31071 ;; This function uses a non-reentrant model
 31072 ;;
 31073                           
 31074                           	psect	text88
 31075  007B8E                     __ptext88:
 31076                           	opt stack 0
 31077  007B8E                     _USBStdGetDscHandler:
 31078                           	opt stack 7
 31079                           
 31080                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 31081                           
 31082                           ; BSR set to: 0
 31083                           ;incstack = 0
 31084  007B8E  0E80               	movlw	128
 31085  007B90  010D               	movlb	13	; () banked
 31086  007B92  1920               	xorwf	32,w,b	;volatile
 31087  007B94  A4D8               	btfss	status,2,c
 31088  007B96  0012               	return	
 31089                           
 31090                           ; BSR set to: 13
 31091                           ;usb_device.c: 2046: {
 31092                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 31093  007B98  0EC0               	movlw	192
 31094  007B9A  0100               	movlb	0	; () banked
 31095  007B9C  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31096                           
 31097                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 31098  007B9E  D092               	goto	i1l10538
 31099  007BA0                     i1l10512:
 31100                           
 31101                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 31102  007BA0  0E77               	movlw	low _device_dsc
 31103  007BA2  0100               	movlb	0	; () banked
 31104  007BA4  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 31105  007BA6  0E21               	movlw	high _device_dsc
 31106  007BA8  0100               	movlb	0	; () banked
 31107  007BAA  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 31108                           
 31109                           ; BSR set to: 0
 31110                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 31111  007BAC  0E00               	movlw	0
 31112  007BAE  0100               	movlb	0	; () banked
 31113  007BB0  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 31114  007BB2  0E12               	movlw	18
 31115  007BB4  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 31116                           
 31117                           ;usb_device.c: 2058: break;
 31118  007BB6  0012               	return	
 31119  007BB8                     i1l10516:
 31120                           
 31121                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 31122  007BB8  010D               	movlb	13	; () banked
 31123  007BBA  5122               	movf	34,w,b	;volatile
 31124  007BBC  A4D8               	btfss	status,2,c
 31125  007BBE  D049               	goto	i1l10524
 31126                           
 31127                           ; BSR set to: 13
 31128                           ;usb_device.c: 2064: {
 31129                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 31130  007BC0  010D               	movlb	13	; () banked
 31131  007BC2  5122               	movf	34,w,b	;volatile
 31132  007BC4  0D02               	mullw	2
 31133  007BC6  0ECD               	movlw	low _USB_CD_Ptr
 31134  007BC8  24F3               	addwf	prodl,w,c
 31135  007BCA  6EF6               	movwf	tblptrl,c
 31136  007BCC  0E20               	movlw	high _USB_CD_Ptr
 31137  007BCE  20F4               	addwfc	prodh,w,c
 31138  007BD0  6EF7               	movwf	tblptrh,c
 31139  007BD2                     	if	1	;There are 3 active tblptr bytes
 31140  007BD2  6AF8               	clrf	tblptru,c
 31141  007BD4  0E00               	movlw	low (__mediumconst shr (0+16))
 31142  007BD6  22F8               	addwfc	tblptru,f,c
 31143  007BD8                     	endif
 31144  007BD8  0009               	tblrd		*+
 31145  007BDA  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 31146  007BDE  000A               	tblrd		*-
 31147  007BE0  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 31148                           
 31149                           ; BSR set to: 13
 31150                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 31151  007BE4  0E02               	movlw	2
 31152  007BE6  0100               	movlb	0	; () banked
 31153  007BE8  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 31154  007BEA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 31155  007BEC  0E00               	movlw	0
 31156  007BEE  0100               	movlb	0	; () banked
 31157  007BF0  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 31158  007BF2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 31159  007BF4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 31160  007BF8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 31161  007BFC  0E00               	movlw	low (__mediumconst shr (0+16))
 31162  007BFE  6EF8               	movwf	tblptru,c
 31163  007C00  0E0E               	movlw	(high __ramtop+-1)
 31164  007C02  64F7               	cpfsgt	tblptrh,c
 31165  007C04  D003               	bra	i1u977_27
 31166  007C06  0008               	tblrd		*
 31167  007C08  50F5               	movf	tablat,w,c
 31168  007C0A  D005               	bra	i1u977_20
 31169  007C0C                     i1u977_27:
 31170  007C0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 31171  007C10  CFF7 FFEA          	movff	tblptrh,fsr0h
 31172  007C14  50EF               	movf	indf0,w,c
 31173  007C16                     i1u977_20:
 31174  007C16  0100               	movlb	0	; () banked
 31175  007C18  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 31176                           
 31177                           ; BSR set to: 0
 31178                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 31179  007C1A  0E03               	movlw	3
 31180  007C1C  0100               	movlb	0	; () banked
 31181  007C1E  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 31182  007C20  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 31183  007C22  0E00               	movlw	0
 31184  007C24  0100               	movlb	0	; () banked
 31185  007C26  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 31186  007C28  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 31187  007C2A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 31188  007C2E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 31189  007C32  0E00               	movlw	low (__mediumconst shr (0+16))
 31190  007C34  6EF8               	movwf	tblptru,c
 31191  007C36  0E0E               	movlw	(high __ramtop+-1)
 31192  007C38  64F7               	cpfsgt	tblptrh,c
 31193  007C3A  D003               	bra	i1u978_27
 31194  007C3C  0008               	tblrd		*
 31195  007C3E  50F5               	movf	tablat,w,c
 31196  007C40  D005               	bra	i1u978_20
 31197  007C42                     i1u978_27:
 31198  007C42  CFF6 FFE9          	movff	tblptrl,fsr0l
 31199  007C46  CFF7 FFEA          	movff	tblptrh,fsr0h
 31200  007C4A  50EF               	movf	indf0,w,c
 31201  007C4C                     i1u978_20:
 31202  007C4C  0100               	movlb	0	; () banked
 31203  007C4E  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 31204                           
 31205                           ;usb_device.c: 2076: }
 31206  007C50  0012               	return	
 31207  007C52                     i1l10524:
 31208                           
 31209                           ;usb_device.c: 2077: else
 31210                           ;usb_device.c: 2078: {
 31211                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 31212  007C52  0E00               	movlw	0
 31213  007C54  0100               	movlb	0	; () banked
 31214  007C56  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31215                           
 31216                           ; BSR set to: 0
 31217                           ;usb_device.c: 2080: }
 31218                           ;usb_device.c: 2081: break;
 31219  007C58  0012               	return	
 31220  007C5A                     i1l10526:
 31221                           
 31222                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 31223  007C5A  0E03               	movlw	3
 31224  007C5C  010D               	movlb	13	; () banked
 31225  007C5E  6122               	cpfslt	34,b	;volatile
 31226  007C60  D029               	goto	i1l10532
 31227                           
 31228                           ; BSR set to: 13
 31229                           ;usb_device.c: 2087: {
 31230                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 31231  007C62  010D               	movlb	13	; () banked
 31232  007C64  5122               	movf	34,w,b	;volatile
 31233  007C66  0D02               	mullw	2
 31234  007C68  0EC3               	movlw	low _USB_SD_Ptr
 31235  007C6A  24F3               	addwf	prodl,w,c
 31236  007C6C  6EF6               	movwf	tblptrl,c
 31237  007C6E  0E20               	movlw	high _USB_SD_Ptr
 31238  007C70  20F4               	addwfc	prodh,w,c
 31239  007C72  6EF7               	movwf	tblptrh,c
 31240  007C74                     	if	1	;There are 3 active tblptr bytes
 31241  007C74  6AF8               	clrf	tblptru,c
 31242  007C76  0E00               	movlw	low (__mediumconst shr (0+16))
 31243  007C78  22F8               	addwfc	tblptru,f,c
 31244  007C7A                     	endif
 31245  007C7A  0009               	tblrd		*+
 31246  007C7C  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 31247  007C80  000A               	tblrd		*-
 31248  007C82  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 31249                           
 31250                           ; BSR set to: 13
 31251                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 31252  007C86  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 31253  007C8A  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 31254  007C8E  0E00               	movlw	low (__mediumconst shr (0+16))
 31255  007C90  6EF8               	movwf	tblptru,c
 31256  007C92  0E0E               	movlw	(high __ramtop+-1)
 31257  007C94  64F7               	cpfsgt	tblptrh,c
 31258  007C96  D003               	bra	i1u980_27
 31259  007C98  0008               	tblrd		*
 31260  007C9A  50F5               	movf	tablat,w,c
 31261  007C9C  D005               	bra	i1u980_20
 31262  007C9E                     i1u980_27:
 31263  007C9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 31264  007CA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 31265  007CA6  50EF               	movf	indf0,w,c
 31266  007CA8                     i1u980_20:
 31267  007CA8  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 31268  007CAA  5001               	movf	??_USBStdGetDscHandler,w,c
 31269  007CAC  0100               	movlb	0	; () banked
 31270  007CAE  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 31271  007CB0  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 31272                           
 31273                           ;usb_device.c: 2092: }
 31274  007CB2  0012               	return	
 31275  007CB4                     i1l10532:
 31276                           
 31277                           ;usb_device.c: 2102: else
 31278                           ;usb_device.c: 2103: {
 31279                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 31280  007CB4  0E00               	movlw	0
 31281  007CB6  0100               	movlb	0	; () banked
 31282  007CB8  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31283                           
 31284                           ; BSR set to: 0
 31285                           ;usb_device.c: 2105: }
 31286                           ;usb_device.c: 2106: break;
 31287  007CBA  0012               	return	
 31288  007CBC                     i1l10534:
 31289                           
 31290                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 31291  007CBC  0E00               	movlw	0
 31292  007CBE  0100               	movlb	0	; () banked
 31293  007CC0  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31294                           
 31295                           ; BSR set to: 0
 31296                           ;usb_device.c: 2110: }
 31297                           
 31298                           ;usb_device.c: 2109: break;
 31299  007CC2  0012               	return	
 31300  007CC4                     i1l10538:
 31301                           
 31302                           ; BSR set to: 0
 31303  007CC4  010D               	movlb	13	; () banked
 31304  007CC6  5123               	movf	35,w,b	;volatile
 31305                           
 31306                           ; Switch size 1, requested type "space"
 31307                           ; Number of cases is 3, Range of values is 1 to 3
 31308                           ; switch strategies available:
 31309                           ; Name         Instructions Cycles
 31310                           ; simple_byte           10     6 (average)
 31311                           ;	Chosen strategy is simple_byte
 31312  007CC8  0A01               	xorlw	1	; case 1
 31313  007CCA  B4D8               	btfsc	status,2,c
 31314  007CCC  D769               	goto	i1l10512
 31315  007CCE  0A03               	xorlw	3	; case 2
 31316  007CD0  B4D8               	btfsc	status,2,c
 31317  007CD2  D772               	goto	i1l10516
 31318  007CD4  0A01               	xorlw	1	; case 3
 31319  007CD6  B4D8               	btfsc	status,2,c
 31320  007CD8  D7C0               	goto	i1l10526
 31321  007CDA  D7F0               	goto	i1l10534
 31322  007CDC                     __end_of_USBStdGetDscHandler:
 31323                           	opt stack 0
 31324                           pclatu	equ	0xFFB
 31325                           pclath	equ	0xFFA
 31326                           tblptru	equ	0xFF8
 31327                           tblptrh	equ	0xFF7
 31328                           tblptrl	equ	0xFF6
 31329                           tablat	equ	0xFF5
 31330                           prodh	equ	0xFF4
 31331                           prodl	equ	0xFF3
 31332                           intcon	equ	0xFF2
 31333                           intcon2	equ	0xFF1
 31334                           intcon3	equ	0xFF0
 31335                           indf0	equ	0xFEF
 31336                           postinc0	equ	0xFEE
 31337                           plusw0	equ	0xFEB
 31338                           fsr0h	equ	0xFEA
 31339                           fsr0l	equ	0xFE9
 31340                           wreg	equ	0xFE8
 31341                           indf1	equ	0xFE7
 31342                           postinc1	equ	0xFE6
 31343                           postdec1	equ	0xFE5
 31344                           plusw1	equ	0xFE3
 31345                           fsr1h	equ	0xFE2
 31346                           fsr1l	equ	0xFE1
 31347                           bsr	equ	0xFE0
 31348                           indf2	equ	0xFDF
 31349                           postinc2	equ	0xFDE
 31350                           postdec2	equ	0xFDD
 31351                           plusw2	equ	0xFDB
 31352                           fsr2h	equ	0xFDA
 31353                           fsr2l	equ	0xFD9
 31354                           status	equ	0xFD8
 31355                           
 31356 ;; *************** function _USBStdFeatureReqHandler *****************
 31357 ;; Defined at:
 31358 ;;		line 2757 in file "src/usb/usb_device.c"
 31359 ;; Parameters:    Size  Location     Type
 31360 ;;		None
 31361 ;; Auto vars:     Size  Location     Type
 31362 ;;  p               2   24[COMRAM] PTR struct __BDT
 31363 ;;		 -> BDT(32), NULL(0), 
 31364 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 31365 ;;		 -> UEP0(1), 
 31366 ;;  current_ep_d    1   23[COMRAM] struct .
 31367 ;; Return value:  Size  Location     Type
 31368 ;;		None               void
 31369 ;; Registers used:
 31370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31371 ;; Tracked objects:
 31372 ;;		On entry : 0/0
 31373 ;;		On exit  : 0/0
 31374 ;;		Unchanged: 0/0
 31375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31377 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31380 ;;Total ram usage:        6 bytes
 31381 ;; Hardware stack levels used:    1
 31382 ;; Hardware stack levels required when called:   10
 31383 ;; This function calls:
 31384 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31385 ;; This function is called by:
 31386 ;;		_USBCheckStdRequest
 31387 ;; This function uses a non-reentrant model
 31388 ;;
 31389                           
 31390                           	psect	text89
 31391  0069A4                     __ptext89:
 31392                           	opt stack 0
 31393  0069A4                     _USBStdFeatureReqHandler:
 31394                           	opt stack 3
 31395                           
 31396                           ;usb_device.c: 2759: BDT_ENTRY *p;
 31397                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 31398                           ;usb_device.c: 2764: unsigned char* pUEP;
 31399                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 31400                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 31401                           
 31402                           ;incstack = 0
 31403  0069A4  010D               	movlb	13	; () banked
 31404  0069A6  0522               	decf	34,w,b	;volatile
 31405  0069A8  A4D8               	btfss	status,2,c
 31406  0069AA  D011               	goto	i1l1450
 31407                           
 31408                           ; BSR set to: 13
 31409  0069AC  010D               	movlb	13	; () banked
 31410  0069AE  5120               	movf	32,w,b	;volatile
 31411  0069B0  0B1F               	andlw	31
 31412  0069B2  0900               	iorlw	0
 31413  0069B4  A4D8               	btfss	status,2,c
 31414  0069B6  D00B               	goto	i1l1450
 31415                           
 31416                           ; BSR set to: 13
 31417                           ;usb_device.c: 2804: {
 31418                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 31419  0069B8  0100               	movlb	0	; () banked
 31420  0069BA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 31421                           
 31422                           ; BSR set to: 0
 31423                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 31424  0069BC  0E03               	movlw	3
 31425  0069BE  010D               	movlb	13	; () banked
 31426  0069C0  1921               	xorwf	33,w,b	;volatile
 31427  0069C2  A4D8               	btfss	status,2,c
 31428  0069C4  D002               	goto	i1l10578
 31429                           
 31430                           ; BSR set to: 13
 31431                           ;usb_device.c: 2807: RemoteWakeup = 1;
 31432  0069C6  0E01               	movlw	1
 31433  0069C8  D001               	goto	L22
 31434  0069CA                     i1l10578:
 31435                           
 31436                           ; BSR set to: 13
 31437                           ;usb_device.c: 2808: else
 31438                           ;usb_device.c: 2809: RemoteWakeup = 0;
 31439  0069CA  0E00               	movlw	0
 31440  0069CC                     L22:
 31441  0069CC  6E44               	movwf	_RemoteWakeup,c	;volatile
 31442  0069CE                     i1l1450:
 31443                           
 31444                           ; BSR set to: 13
 31445                           ;usb_device.c: 2810: }
 31446                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 31447                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 31448                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 31449                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 31450  0069CE  010D               	movlb	13	; () banked
 31451  0069D0  5122               	movf	34,w,b	;volatile
 31452  0069D2  A4D8               	btfss	status,2,c
 31453  0069D4  0012               	return	
 31454                           
 31455                           ; BSR set to: 13
 31456  0069D6  010D               	movlb	13	; () banked
 31457  0069D8  5120               	movf	32,w,b	;volatile
 31458  0069DA  0B1F               	andlw	31
 31459  0069DC  0A02               	xorlw	2
 31460  0069DE  A4D8               	btfss	status,2,c
 31461  0069E0  0012               	return	
 31462                           
 31463                           ; BSR set to: 13
 31464  0069E2  010D               	movlb	13	; () banked
 31465  0069E4  5124               	movf	36,w,b	;volatile
 31466  0069E6  0B0F               	andlw	15
 31467  0069E8  0900               	iorlw	0
 31468  0069EA  B4D8               	btfsc	status,2,c
 31469  0069EC  0012               	return	
 31470                           
 31471                           ; BSR set to: 13
 31472  0069EE  010D               	movlb	13	; () banked
 31473  0069F0  5124               	movf	36,w,b	;volatile
 31474  0069F2  0B0F               	andlw	15
 31475  0069F4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31476  0069F6  0E02               	movlw	2
 31477  0069F8  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 31478  0069FA  0012               	return	
 31479                           
 31480                           ; BSR set to: 13
 31481  0069FC  0E20               	movlw	32
 31482  0069FE  1849               	xorwf	_USBDeviceState,w,c	;volatile
 31483  006A00  A4D8               	btfss	status,2,c
 31484  006A02  0012               	return	
 31485                           
 31486                           ; BSR set to: 13
 31487                           ;usb_device.c: 2817: {
 31488                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 31489  006A04  0100               	movlb	0	; () banked
 31490  006A06  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 31491                           
 31492                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 31493  006A08  010D               	movlb	13	; () banked
 31494  006A0A  BF24               	btfsc	36,7,b	;volatile
 31495  006A0C  D01B               	goto	i1l10592
 31496                           
 31497                           ; BSR set to: 13
 31498                           ;usb_device.c: 2824: {
 31499                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 31500  006A0E  010D               	movlb	13	; () banked
 31501  006A10  5124               	movf	36,w,b	;volatile
 31502  006A12  0B0F               	andlw	15
 31503  006A14  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31504  006A16  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31505  006A18  0D02               	mullw	2
 31506  006A1A  0ED2               	movlw	low _pBDTEntryOut
 31507  006A1C  24F3               	addwf	prodl,w,c
 31508  006A1E  6ED9               	movwf	fsr2l,c
 31509  006A20  0E00               	movlw	high _pBDTEntryOut
 31510  006A22  20F4               	addwfc	prodh,w,c
 31511  006A24  6EDA               	movwf	fsr2h,c
 31512  006A26  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 31513  006A2A  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 31514                           
 31515                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 31516  006A2E  010D               	movlb	13	; () banked
 31517  006A30  5124               	movf	36,w,b	;volatile
 31518  006A32  0B0F               	andlw	15
 31519  006A34  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31520  006A36  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31521  006A38  0D01               	mullw	1
 31522  006A3A  0EDA               	movlw	low _ep_data_out
 31523  006A3C  24F3               	addwf	prodl,w,c
 31524  006A3E  6ED9               	movwf	fsr2l,c
 31525  006A40  0E00               	movlw	high _ep_data_out
 31526  006A42  D01A               	goto	L23
 31527  006A44                     i1l10592:
 31528                           
 31529                           ; BSR set to: 13
 31530                           ;usb_device.c: 2828: else
 31531                           ;usb_device.c: 2829: {
 31532                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 31533  006A44  010D               	movlb	13	; () banked
 31534  006A46  5124               	movf	36,w,b	;volatile
 31535  006A48  0B0F               	andlw	15
 31536  006A4A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31537  006A4C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31538  006A4E  0D02               	mullw	2
 31539  006A50  0ECE               	movlw	low _pBDTEntryIn
 31540  006A52  24F3               	addwf	prodl,w,c
 31541  006A54  6ED9               	movwf	fsr2l,c
 31542  006A56  0E00               	movlw	high _pBDTEntryIn
 31543  006A58  20F4               	addwfc	prodh,w,c
 31544  006A5A  6EDA               	movwf	fsr2h,c
 31545  006A5C  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 31546  006A60  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 31547                           
 31548                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 31549  006A64  010D               	movlb	13	; () banked
 31550  006A66  5124               	movf	36,w,b	;volatile
 31551  006A68  0B0F               	andlw	15
 31552  006A6A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31553  006A6C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31554  006A6E  0D01               	mullw	1
 31555  006A70  0ED8               	movlw	low _ep_data_in
 31556  006A72  24F3               	addwf	prodl,w,c
 31557  006A74  6ED9               	movwf	fsr2l,c
 31558  006A76  0E00               	movlw	high _ep_data_in
 31559  006A78                     L23:
 31560  006A78  20F4               	addwfc	prodh,w,c
 31561  006A7A  6EDA               	movwf	fsr2h,c
 31562  006A7C  50DF               	movf	indf2,w,c
 31563  006A7E  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 31564                           
 31565                           ; BSR set to: 13
 31566                           ;usb_device.c: 2832: }
 31567                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 31568                           
 31569                           ; BSR set to: 13
 31570  006A80  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 31571  006A82  D002               	goto	i1l10598
 31572                           
 31573                           ; BSR set to: 13
 31574                           ;usb_device.c: 2839: {
 31575                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 31576  006A84  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 31577                           
 31578                           ;usb_device.c: 2841: }
 31579  006A86  D001               	goto	i1l10600
 31580  006A88                     i1l10598:
 31581                           
 31582                           ; BSR set to: 13
 31583                           ;usb_device.c: 2842: else
 31584                           ;usb_device.c: 2843: {
 31585                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 31586  006A88  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 31587  006A8A                     i1l10600:
 31588                           
 31589                           ; BSR set to: 13
 31590                           ;usb_device.c: 2845: }
 31591                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 31592  006A8A  010D               	movlb	13	; () banked
 31593  006A8C  BF24               	btfsc	36,7,b	;volatile
 31594  006A8E  D00B               	goto	i1l10604
 31595                           
 31596                           ; BSR set to: 13
 31597                           ;usb_device.c: 2851: {
 31598                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 31599  006A90  010D               	movlb	13	; () banked
 31600  006A92  5124               	movf	36,w,b	;volatile
 31601  006A94  0B0F               	andlw	15
 31602  006A96  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31603  006A98  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31604  006A9A  0D02               	mullw	2
 31605  006A9C  0ED2               	movlw	low _pBDTEntryOut
 31606  006A9E  24F3               	addwf	prodl,w,c
 31607  006AA0  6ED9               	movwf	fsr2l,c
 31608  006AA2  0E00               	movlw	high _pBDTEntryOut
 31609  006AA4  D00A               	goto	L24
 31610  006AA6                     i1l10604:
 31611                           
 31612                           ; BSR set to: 13
 31613                           ;usb_device.c: 2854: else
 31614                           ;usb_device.c: 2855: {
 31615                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 31616  006AA6  010D               	movlb	13	; () banked
 31617  006AA8  5124               	movf	36,w,b	;volatile
 31618  006AAA  0B0F               	andlw	15
 31619  006AAC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31620  006AAE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31621  006AB0  0D02               	mullw	2
 31622  006AB2  0ECE               	movlw	low _pBDTEntryIn
 31623  006AB4  24F3               	addwf	prodl,w,c
 31624  006AB6  6ED9               	movwf	fsr2l,c
 31625  006AB8  0E00               	movlw	high _pBDTEntryIn
 31626  006ABA                     L24:
 31627  006ABA  20F4               	addwfc	prodh,w,c
 31628  006ABC  6EDA               	movwf	fsr2h,c
 31629  006ABE  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 31630  006AC2  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 31631                           
 31632                           ; BSR set to: 13
 31633                           ;usb_device.c: 2857: }
 31634                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 31635                           
 31636                           ; BSR set to: 13
 31637  006AC6  0E03               	movlw	3
 31638  006AC8  010D               	movlb	13	; () banked
 31639  006ACA  1921               	xorwf	33,w,b	;volatile
 31640  006ACC  A4D8               	btfss	status,2,c
 31641  006ACE  D02F               	goto	i1l10620
 31642                           
 31643                           ; BSR set to: 13
 31644                           ;usb_device.c: 2861: {
 31645                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 31646  006AD0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31647  006AD4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31648  006AD8  AEDF               	btfss	indf2,7,c
 31649  006ADA  D01C               	goto	i1l10616
 31650                           
 31651                           ; BSR set to: 13
 31652                           ;usb_device.c: 2863: {
 31653                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 31654  006ADC  010D               	movlb	13	; () banked
 31655  006ADE  BF24               	btfsc	36,7,b	;volatile
 31656  006AE0  D00B               	goto	i1l10614
 31657                           
 31658                           ; BSR set to: 13
 31659                           ;usb_device.c: 2867: {
 31660                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 31661  006AE2  010D               	movlb	13	; () banked
 31662  006AE4  5124               	movf	36,w,b	;volatile
 31663  006AE6  0B0F               	andlw	15
 31664  006AE8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31665  006AEA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31666  006AEC  0D01               	mullw	1
 31667  006AEE  0EDA               	movlw	low _ep_data_out
 31668  006AF0  24F3               	addwf	prodl,w,c
 31669  006AF2  6ED9               	movwf	fsr2l,c
 31670  006AF4  0E00               	movlw	high _ep_data_out
 31671  006AF6  D00A               	goto	L25
 31672  006AF8                     i1l10614:
 31673                           
 31674                           ;usb_device.c: 2870: else
 31675                           ;usb_device.c: 2871: {
 31676                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 31677  006AF8  010D               	movlb	13	; () banked
 31678  006AFA  5124               	movf	36,w,b	;volatile
 31679  006AFC  0B0F               	andlw	15
 31680  006AFE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31681  006B00  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31682  006B02  0D01               	mullw	1
 31683  006B04  0ED8               	movlw	low _ep_data_in
 31684  006B06  24F3               	addwf	prodl,w,c
 31685  006B08  6ED9               	movwf	fsr2l,c
 31686  006B0A  0E00               	movlw	high _ep_data_in
 31687  006B0C                     L25:
 31688  006B0C  20F4               	addwfc	prodh,w,c
 31689  006B0E  6EDA               	movwf	fsr2h,c
 31690  006B10  0100               	movlb	0	; () banked
 31691  006B12  82DF               	bsf	indf2,1,c
 31692  006B14                     i1l10616:
 31693                           
 31694                           ;usb_device.c: 2873: }
 31695                           ;usb_device.c: 2874: }
 31696                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 31697  006B14  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31698  006B18  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31699  006B1C  0E00               	movlw	0
 31700  006B1E  84DB               	bsf	plusw2,2,c
 31701                           
 31702                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 31703  006B20  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31704  006B24  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31705  006B28  0E00               	movlw	0
 31706  006B2A  8EDB               	bsf	plusw2,7,c
 31707                           
 31708                           ;usb_device.c: 2879: }
 31709  006B2C  0012               	return	
 31710  006B2E                     i1l10620:
 31711                           
 31712                           ;usb_device.c: 2880: else
 31713                           ;usb_device.c: 2881: {
 31714                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 31715  006B2E  0E04               	movlw	4
 31716  006B30  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 31717                           
 31718                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 31719  006B32  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31720  006B36  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31721  006B3A  AEDF               	btfss	indf2,7,c
 31722  006B3C  D01B               	goto	i1l10630
 31723                           
 31724                           ;usb_device.c: 2888: {
 31725                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 31726  006B3E  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31727  006B42  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31728  006B46  0E7F               	movlw	127
 31729  006B48  16DF               	andwf	indf2,f,c
 31730                           
 31731                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 31732  006B4A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31733  006B4E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31734  006B52  0E00               	movlw	0
 31735  006B54  8CDB               	bsf	plusw2,6,c
 31736                           
 31737                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 31738  006B56  0E00               	movlw	0
 31739  006B58  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31740  006B5A  0E05               	movlw	5
 31741  006B5C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31742  006B5E  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 31743  006B62  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 31744  006B66  0E00               	movlw	0
 31745  006B68  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31746  006B6A  0E02               	movlw	2
 31747  006B6C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31748  006B6E  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31749                           
 31750                           ;usb_device.c: 2894: }
 31751  006B72  D006               	goto	i1l10632
 31752  006B74                     i1l10630:
 31753                           
 31754                           ;usb_device.c: 2895: else
 31755                           ;usb_device.c: 2896: {
 31756                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 31757  006B74  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31758  006B78  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31759  006B7C  0E00               	movlw	0
 31760  006B7E  8CDB               	bsf	plusw2,6,c
 31761  006B80                     i1l10632:
 31762                           
 31763                           ;usb_device.c: 2899: }
 31764                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 31765  006B80  0E04               	movlw	4
 31766  006B82  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 31767                           
 31768                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 31769  006B84  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 31770  006B86  D006               	goto	i1l1469
 31771  006B88  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31772  006B8C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31773  006B90  AEDF               	btfss	indf2,7,c
 31774  006B92  D031               	goto	i1l10646
 31775  006B94                     i1l1469:
 31776                           
 31777                           ;usb_device.c: 2910: {
 31778                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 31779  006B94  010D               	movlb	13	; () banked
 31780  006B96  BF24               	btfsc	36,7,b	;volatile
 31781  006B98  D00B               	goto	i1l10640
 31782                           
 31783                           ; BSR set to: 13
 31784                           ;usb_device.c: 2912: {
 31785                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 31786  006B9A  010D               	movlb	13	; () banked
 31787  006B9C  5124               	movf	36,w,b	;volatile
 31788  006B9E  0B0F               	andlw	15
 31789  006BA0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31790  006BA2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31791  006BA4  0D01               	mullw	1
 31792  006BA6  0EDA               	movlw	low _ep_data_out
 31793  006BA8  24F3               	addwf	prodl,w,c
 31794  006BAA  6ED9               	movwf	fsr2l,c
 31795  006BAC  0E00               	movlw	high _ep_data_out
 31796  006BAE  D00A               	goto	L26
 31797  006BB0                     i1l10640:
 31798                           
 31799                           ;usb_device.c: 2915: else
 31800                           ;usb_device.c: 2916: {
 31801                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 31802  006BB0  010D               	movlb	13	; () banked
 31803  006BB2  5124               	movf	36,w,b	;volatile
 31804  006BB4  0B0F               	andlw	15
 31805  006BB6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31806  006BB8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31807  006BBA  0D01               	mullw	1
 31808  006BBC  0ED8               	movlw	low _ep_data_in
 31809  006BBE  24F3               	addwf	prodl,w,c
 31810  006BC0  6ED9               	movwf	fsr2l,c
 31811  006BC2  0E00               	movlw	high _ep_data_in
 31812  006BC4                     L26:
 31813  006BC4  20F4               	addwfc	prodh,w,c
 31814  006BC6  6EDA               	movwf	fsr2h,c
 31815  006BC8  0100               	movlb	0	; () banked
 31816  006BCA  92DF               	bcf	indf2,1,c
 31817                           
 31818                           ; BSR set to: 0
 31819                           ;usb_device.c: 2918: }
 31820                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 31821                           
 31822                           ; BSR set to: 0
 31823  006BCC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31824  006BD0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31825  006BD4  0E3B               	movlw	59
 31826  006BD6  16DF               	andwf	indf2,f,c
 31827                           
 31828                           ; BSR set to: 0
 31829                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 31830  006BD8  0E00               	movlw	0
 31831  006BDA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31832  006BDC  0E05               	movlw	5
 31833  006BDE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31834  006BE0  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 31835  006BE4  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 31836  006BE8  0E00               	movlw	0
 31837  006BEA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31838  006BEC  0E02               	movlw	2
 31839  006BEE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31840  006BF0  ECCB  F052         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31841                           
 31842                           ;usb_device.c: 2924: }
 31843  006BF4  D006               	goto	i1l10648
 31844  006BF6                     i1l10646:
 31845                           
 31846                           ;usb_device.c: 2925: else
 31847                           ;usb_device.c: 2926: {
 31848                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 31849  006BF6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31850  006BFA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31851  006BFE  0E3B               	movlw	59
 31852  006C00  16DF               	andwf	indf2,f,c
 31853  006C02                     i1l10648:
 31854                           
 31855                           ;usb_device.c: 2929: }
 31856                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 31857  006C02  010D               	movlb	13	; () banked
 31858  006C04  5124               	movf	36,w,b	;volatile
 31859  006C06  0B0F               	andlw	15
 31860  006C08  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31861  006C0A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 31862  006C0C  0D01               	mullw	1
 31863  006C0E  0E26               	movlw	38
 31864  006C10  24F3               	addwf	prodl,w,c
 31865  006C12  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 31866  006C14  0E0F               	movlw	15
 31867  006C16  20F4               	addwfc	prodh,w,c
 31868  006C18  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 31869                           
 31870                           ; BSR set to: 13
 31871                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 31872  006C1A  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 31873  006C1E  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 31874  006C22  0EFE               	movlw	254
 31875  006C24  16DF               	andwf	indf2,f,c
 31876                           
 31877                           ; BSR set to: 13
 31878  006C26  0012               	return	
 31879  006C28                     __end_of_USBStdFeatureReqHandler:
 31880                           	opt stack 0
 31881                           pclatu	equ	0xFFB
 31882                           pclath	equ	0xFFA
 31883                           tblptru	equ	0xFF8
 31884                           tblptrh	equ	0xFF7
 31885                           tblptrl	equ	0xFF6
 31886                           tablat	equ	0xFF5
 31887                           prodh	equ	0xFF4
 31888                           prodl	equ	0xFF3
 31889                           intcon	equ	0xFF2
 31890                           intcon2	equ	0xFF1
 31891                           intcon3	equ	0xFF0
 31892                           indf0	equ	0xFEF
 31893                           postinc0	equ	0xFEE
 31894                           plusw0	equ	0xFEB
 31895                           fsr0h	equ	0xFEA
 31896                           fsr0l	equ	0xFE9
 31897                           wreg	equ	0xFE8
 31898                           indf1	equ	0xFE7
 31899                           postinc1	equ	0xFE6
 31900                           postdec1	equ	0xFE5
 31901                           plusw1	equ	0xFE3
 31902                           fsr1h	equ	0xFE2
 31903                           fsr1l	equ	0xFE1
 31904                           bsr	equ	0xFE0
 31905                           indf2	equ	0xFDF
 31906                           postinc2	equ	0xFDE
 31907                           postdec2	equ	0xFDD
 31908                           plusw2	equ	0xFDB
 31909                           fsr2h	equ	0xFDA
 31910                           fsr2l	equ	0xFD9
 31911                           status	equ	0xFD8
 31912                           
 31913 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 31914 ;; Defined at:
 31915 ;;		line 895 in file "src/main.c"
 31916 ;; Parameters:    Size  Location     Type
 31917 ;;  event           2   12[COMRAM] enum E10031
 31918 ;;  pdata           2   14[COMRAM] PTR void 
 31919 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
 31920 ;;  size            2   16[COMRAM] unsigned int 
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;		None
 31923 ;; Return value:  Size  Location     Type
 31924 ;;                  1    wreg      unsigned char 
 31925 ;; Registers used:
 31926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31927 ;; Tracked objects:
 31928 ;;		On entry : 0/0
 31929 ;;		On exit  : 0/0
 31930 ;;		Unchanged: 0/0
 31931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31932 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;Total ram usage:        8 bytes
 31937 ;; Hardware stack levels used:    1
 31938 ;; Hardware stack levels required when called:    9
 31939 ;; This function calls:
 31940 ;;		_APP_DeviceCustomHIDInitialize
 31941 ;;		_APP_LEDUpdateUSBStatus
 31942 ;;		_USBCheckHIDRequest
 31943 ;; This function is called by:
 31944 ;;		_USBDeviceTasks
 31945 ;;		_USBStdSetCfgHandler
 31946 ;;		_USBSuspend
 31947 ;;		_USBWakeFromSuspend
 31948 ;;		_USBCtrlTrfSetupHandler
 31949 ;;		_USBCheckStdRequest
 31950 ;;		_USBStdFeatureReqHandler
 31951 ;; This function uses a non-reentrant model
 31952 ;;
 31953                           
 31954                           	psect	text90
 31955  00A596                     __ptext90:
 31956                           	opt stack 0
 31957  00A596                     _USER_USB_CALLBACK_EVENT_HANDLER:
 31958                           	opt stack 7
 31959                           
 31960                           ;main.c: 897: switch((int)event)
 31961                           
 31962                           ;incstack = 0
 31963  00A596  D00F               	goto	i1l9980
 31964  00A598                     i1l9968:
 31965                           
 31966                           ;main.c: 905: APP_LEDUpdateUSBStatus();
 31967  00A598  ECFA  F055         	call	_APP_LEDUpdateUSBStatus	;wreg free
 31968                           
 31969                           ;main.c: 906: break;
 31970  00A59C  0012               	return	
 31971  00A59E                     i1l9970:
 31972                           
 31973                           ;main.c: 910: APP_LEDUpdateUSBStatus();
 31974  00A59E  ECFA  F055         	call	_APP_LEDUpdateUSBStatus	;wreg free
 31975                           
 31976                           ;main.c: 911: break;
 31977  00A5A2  0012               	return	
 31978  00A5A4                     i1l9972:
 31979                           
 31980                           ;main.c: 915: APP_LEDUpdateUSBStatus();
 31981  00A5A4  ECFA  F055         	call	_APP_LEDUpdateUSBStatus	;wreg free
 31982                           
 31983                           ;main.c: 916: break;
 31984  00A5A8  0012               	return	
 31985  00A5AA                     i1l9974:
 31986                           
 31987                           ;main.c: 921: APP_DeviceCustomHIDInitialize();
 31988  00A5AA  ECA8  F056         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 31989                           
 31990                           ;main.c: 925: break;
 31991                           
 31992                           ;main.c: 924: case EVENT_SET_DESCRIPTOR:
 31993                           
 31994                           ;main.c: 922: break;
 31995  00A5AE  0012               	return	
 31996  00A5B0                     i1l9976:
 31997                           
 31998                           ;main.c: 930: USBCheckHIDRequest();
 31999  00A5B0  EC7C  F045         	call	_USBCheckHIDRequest	;wreg free
 32000                           
 32001                           ;main.c: 941: }
 32002                           
 32003                           ;main.c: 940: break;
 32004                           
 32005                           ;main.c: 939: default:
 32006                           
 32007                           ;main.c: 937: break;
 32008                           
 32009                           ;main.c: 936: case EVENT_TRANSFER_TERMINATED:
 32010                           
 32011                           ;main.c: 934: break;
 32012                           
 32013                           ;main.c: 933: case EVENT_BUS_ERROR:
 32014                           
 32015                           ;main.c: 931: break;
 32016  00A5B4  0012               	return	
 32017  00A5B6                     i1l9980:
 32018  00A5B6  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 32019  00A5BA  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 32020                           
 32021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 32022                           ; Switch size 1, requested type "space"
 32023                           ; Number of cases is 2, Range of values is 0 to 127
 32024                           ; switch strategies available:
 32025                           ; Name         Instructions Cycles
 32026                           ; simple_byte            7     4 (average)
 32027                           ;	Chosen strategy is simple_byte
 32028  00A5BE  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 32029  00A5C0  0A00               	xorlw	0	; case 0
 32030  00A5C2  B4D8               	btfsc	status,2,c
 32031  00A5C4  D004               	goto	i1l20848
 32032  00A5C6  0A7F               	xorlw	127	; case 127
 32033  00A5C8  A4D8               	btfss	status,2,c
 32034  00A5CA  0012               	return	
 32035  00A5CC  D01A               	goto	i1l20850
 32036  00A5CE                     i1l20848:
 32037                           
 32038                           ; Switch size 1, requested type "space"
 32039                           ; Number of cases is 8, Range of values is 1 to 117
 32040                           ; switch strategies available:
 32041                           ; Name         Instructions Cycles
 32042                           ; simple_byte           25    13 (average)
 32043                           ;	Chosen strategy is simple_byte
 32044  00A5CE  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 32045  00A5D0  0A01               	xorlw	1	; case 1
 32046  00A5D2  B4D8               	btfsc	status,2,c
 32047  00A5D4  D7EA               	goto	i1l9974
 32048  00A5D6  0A03               	xorlw	3	; case 2
 32049  00A5D8  B4D8               	btfsc	status,2,c
 32050  00A5DA  0012               	return	
 32051  00A5DC  0A01               	xorlw	1	; case 3
 32052  00A5DE  B4D8               	btfsc	status,2,c
 32053  00A5E0  D7E7               	goto	i1l9976
 32054  00A5E2  0A06               	xorlw	6	; case 5
 32055  00A5E4  B4D8               	btfsc	status,2,c
 32056  00A5E6  0012               	return	
 32057  00A5E8  0A77               	xorlw	119	; case 114
 32058  00A5EA  B4D8               	btfsc	status,2,c
 32059  00A5EC  0012               	return	
 32060  00A5EE  0A01               	xorlw	1	; case 115
 32061  00A5F0  B4D8               	btfsc	status,2,c
 32062  00A5F2  D7D2               	goto	i1l9968
 32063  00A5F4  0A07               	xorlw	7	; case 116
 32064  00A5F6  B4D8               	btfsc	status,2,c
 32065  00A5F8  D7D5               	goto	i1l9972
 32066  00A5FA  0A01               	xorlw	1	; case 117
 32067  00A5FC  A4D8               	btfss	status,2,c
 32068  00A5FE  0012               	return	
 32069  00A600  D7CE               	goto	i1l9970
 32070  00A602                     i1l20850:
 32071                           
 32072                           ; Switch size 1, requested type "space"
 32073                           ; Number of cases is 1, Range of values is 255 to 255
 32074                           ; switch strategies available:
 32075                           ; Name         Instructions Cycles
 32076                           ; simple_byte            4     3 (average)
 32077                           ;	Chosen strategy is simple_byte
 32078  00A602  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 32079  00A604  0AFF               	xorlw	255	; case 255
 32080  00A606  0012               	return	
 32081  00A608                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 32082                           	opt stack 0
 32083                           pclatu	equ	0xFFB
 32084                           pclath	equ	0xFFA
 32085                           tblptru	equ	0xFF8
 32086                           tblptrh	equ	0xFF7
 32087                           tblptrl	equ	0xFF6
 32088                           tablat	equ	0xFF5
 32089                           prodh	equ	0xFF4
 32090                           prodl	equ	0xFF3
 32091                           intcon	equ	0xFF2
 32092                           intcon2	equ	0xFF1
 32093                           intcon3	equ	0xFF0
 32094                           indf0	equ	0xFEF
 32095                           postinc0	equ	0xFEE
 32096                           plusw0	equ	0xFEB
 32097                           fsr0h	equ	0xFEA
 32098                           fsr0l	equ	0xFE9
 32099                           wreg	equ	0xFE8
 32100                           indf1	equ	0xFE7
 32101                           postinc1	equ	0xFE6
 32102                           postdec1	equ	0xFE5
 32103                           plusw1	equ	0xFE3
 32104                           fsr1h	equ	0xFE2
 32105                           fsr1l	equ	0xFE1
 32106                           bsr	equ	0xFE0
 32107                           indf2	equ	0xFDF
 32108                           postinc2	equ	0xFDE
 32109                           postdec2	equ	0xFDD
 32110                           plusw2	equ	0xFDB
 32111                           fsr2h	equ	0xFDA
 32112                           fsr2l	equ	0xFD9
 32113                           status	equ	0xFD8
 32114                           
 32115 ;; *************** function _USBCheckHIDRequest *****************
 32116 ;; Defined at:
 32117 ;;		line 157 in file "src/usb/usb_device_hid.c"
 32118 ;; Parameters:    Size  Location     Type
 32119 ;;		None
 32120 ;; Auto vars:     Size  Location     Type
 32121 ;;		None
 32122 ;; Return value:  Size  Location     Type
 32123 ;;		None               void
 32124 ;; Registers used:
 32125 ;;		wreg, status,2, status,0
 32126 ;; Tracked objects:
 32127 ;;		On entry : 0/0
 32128 ;;		On exit  : 0/0
 32129 ;;		Unchanged: 0/0
 32130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32135 ;;Total ram usage:        0 bytes
 32136 ;; Hardware stack levels used:    1
 32137 ;; Hardware stack levels required when called:    6
 32138 ;; This function calls:
 32139 ;;		Nothing
 32140 ;; This function is called by:
 32141 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32142 ;; This function uses a non-reentrant model
 32143 ;;
 32144                           
 32145                           	psect	text91
 32146  008AF8                     __ptext91:
 32147                           	opt stack 0
 32148  008AF8                     _USBCheckHIDRequest:
 32149                           	opt stack 9
 32150                           
 32151                           ;usb_device_hid.c: 159: if(SetupPkt.Recipient != (0x01)) return;
 32152                           
 32153                           ;incstack = 0
 32154  008AF8  010D               	movlb	13	; () banked
 32155  008AFA  5120               	movf	32,w,b	;volatile
 32156  008AFC  0B1F               	andlw	31
 32157  008AFE  06E8               	decf	wreg,f,c
 32158  008B00  A4D8               	btfss	status,2,c
 32159  008B02  0012               	return	
 32160                           
 32161                           ; BSR set to: 13
 32162                           ;usb_device_hid.c: 160: if(SetupPkt.bIntfID != 0x00) return;
 32163                           
 32164                           ; BSR set to: 13
 32165                           
 32166                           ; BSR set to: 13
 32167  008B04  010D               	movlb	13	; () banked
 32168  008B06  5124               	movf	36,w,b	;volatile
 32169  008B08  A4D8               	btfss	status,2,c
 32170  008B0A  0012               	return	
 32171                           
 32172                           ; BSR set to: 13
 32173                           ;usb_device_hid.c: 167: if(SetupPkt.bRequest == 6)
 32174                           
 32175                           ; BSR set to: 13
 32176                           
 32177                           ; BSR set to: 13
 32178  008B0C  0E06               	movlw	6
 32179  008B0E  010D               	movlb	13	; () banked
 32180  008B10  1921               	xorwf	33,w,b	;volatile
 32181  008B12  B4D8               	btfsc	status,2,c
 32182  008B14  D01F               	goto	i1l9832
 32183  008B16  D027               	goto	i1l9834
 32184  008B18                     i1l9816:
 32185                           
 32186                           ; BSR set to: 13
 32187                           ;usb_device_hid.c: 172: if(USBActiveConfiguration == 1)
 32188  008B18  0454               	decf	_USBActiveConfiguration,w,c	;volatile
 32189  008B1A  A4D8               	btfss	status,2,c
 32190  008B1C  D024               	goto	i1l9834
 32191                           
 32192                           ; BSR set to: 13
 32193                           ;usb_device_hid.c: 173: {
 32194                           ;usb_device_hid.c: 174: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 32195  008B1E  0E43               	movlw	low (_configDescriptor1+18)
 32196  008B20  0100               	movlb	0	; () banked
 32197  008B22  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 32198  008B24  0E21               	movlw	high (_configDescriptor1+18)
 32199  008B26  0100               	movlb	0	; () banked
 32200  008B28  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 32201                           
 32202                           ; BSR set to: 0
 32203  008B2A  0E00               	movlw	0
 32204  008B2C  0100               	movlb	0	; () banked
 32205  008B2E  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32206  008B30  0E09               	movlw	9
 32207  008B32  D00E               	goto	L27
 32208  008B34                     i1l9822:
 32209                           
 32210                           ; BSR set to: 0
 32211  008B34  0EC0               	movlw	192
 32212  008B36  0100               	movlb	0	; () banked
 32213  008B38  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32214                           
 32215                           ; BSR set to: 0
 32216                           ;usb_device_hid.c: 178: }
 32217                           ;usb_device_hid.c: 179: break;
 32218  008B3A  D015               	goto	i1l9834
 32219  008B3C                     i1l9824:
 32220                           
 32221                           ;usb_device_hid.c: 182: {
 32222                           ;usb_device_hid.c: 183: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 32223  008B3C  0E5A               	movlw	low _hid_rpt01
 32224  008B3E  0100               	movlb	0	; () banked
 32225  008B40  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 32226  008B42  0E21               	movlw	high _hid_rpt01
 32227  008B44  0100               	movlb	0	; () banked
 32228  008B46  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 32229                           
 32230                           ; BSR set to: 0
 32231  008B48  0E00               	movlw	0
 32232  008B4A  0100               	movlb	0	; () banked
 32233  008B4C  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32234  008B4E  0E1D               	movlw	29
 32235  008B50                     L27:
 32236  008B50  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 32237  008B52  D7F0               	goto	i1l9822
 32238  008B54                     i1l9832:
 32239  008B54  010D               	movlb	13	; () banked
 32240  008B56  5123               	movf	35,w,b	;volatile
 32241                           
 32242                           ; Switch size 1, requested type "space"
 32243                           ; Number of cases is 3, Range of values is 33 to 35
 32244                           ; switch strategies available:
 32245                           ; Name         Instructions Cycles
 32246                           ; simple_byte           10     6 (average)
 32247                           ;	Chosen strategy is simple_byte
 32248  008B58  0A21               	xorlw	33	; case 33
 32249  008B5A  B4D8               	btfsc	status,2,c
 32250  008B5C  D7DD               	goto	i1l9816
 32251  008B5E  0A03               	xorlw	3	; case 34
 32252  008B60  B4D8               	btfsc	status,2,c
 32253  008B62  D7EC               	goto	i1l9824
 32254  008B64  0A01               	xorlw	1	; case 35
 32255  008B66                     i1l9834:
 32256                           
 32257                           ;usb_device_hid.c: 203: }
 32258                           ;usb_device_hid.c: 205: if(SetupPkt.RequestType != (0x20>>5))
 32259  008B66  010D               	movlb	13	; () banked
 32260  008B68  3920               	swapf	32,w,b	;volatile
 32261  008B6A  32E8               	rrcf	wreg,f,c
 32262  008B6C  0B03               	andlw	3
 32263  008B6E  06E8               	decf	wreg,f,c
 32264  008B70  A4D8               	btfss	status,2,c
 32265  008B72  0012               	return	
 32266  008B74  D02A               	goto	i1l9860
 32267  008B76                     i1l9838:
 32268                           
 32269                           ; BSR set to: 13
 32270                           ;usb_device_hid.c: 223: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 32271  008B76  0E58               	movlw	low _idle_rate
 32272  008B78  0100               	movlb	0	; () banked
 32273  008B7A  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 32274  008B7C  0E00               	movlw	high _idle_rate
 32275  008B7E  0100               	movlb	0	; () banked
 32276  008B80  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 32277                           
 32278                           ; BSR set to: 0
 32279  008B82  0E00               	movlw	0
 32280  008B84  0100               	movlb	0	; () banked
 32281  008B86  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32282  008B88  0E01               	movlw	1
 32283  008B8A  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 32284                           
 32285                           ; BSR set to: 0
 32286  008B8C  0EC1               	movlw	193
 32287  008B8E  0100               	movlb	0	; () banked
 32288  008B90  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32289                           
 32290                           ;usb_device_hid.c: 227: break;
 32291  008B92  0012               	return	
 32292  008B94                     i1l9844:
 32293                           
 32294                           ;usb_device_hid.c: 229: inPipes[0].info.Val = 0x00 | 0x80;
 32295  008B94  0E80               	movlw	128
 32296  008B96  0100               	movlb	0	; () banked
 32297  008B98  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32298                           
 32299                           ; BSR set to: 0
 32300                           ;usb_device_hid.c: 230: idle_rate = ((USB_SETUP_SET_IDLE_RATE*)&SetupPkt)->duration;
 32301  008B9A  CD23 F058          	movff	3363,_idle_rate
 32302                           
 32303                           ;usb_device_hid.c: 231: ;
 32304                           ;usb_device_hid.c: 232: break;
 32305  008B9E  0012               	return	
 32306  008BA0                     i1l9848:
 32307                           
 32308                           ;usb_device_hid.c: 234: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 32309  008BA0  0E57               	movlw	low _active_protocol
 32310  008BA2  0100               	movlb	0	; () banked
 32311  008BA4  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 32312  008BA6  0E00               	movlw	high _active_protocol
 32313  008BA8  0100               	movlb	0	; () banked
 32314  008BAA  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 32315                           
 32316                           ; BSR set to: 0
 32317  008BAC  0E00               	movlw	0
 32318  008BAE  0100               	movlb	0	; () banked
 32319  008BB0  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32320  008BB2  0E01               	movlw	1
 32321  008BB4  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 32322                           
 32323                           ; BSR set to: 0
 32324  008BB6  0E81               	movlw	129
 32325  008BB8  0100               	movlb	0	; () banked
 32326  008BBA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32327                           
 32328                           ;usb_device_hid.c: 238: break;
 32329  008BBC  0012               	return	
 32330  008BBE                     i1l9854:
 32331                           
 32332                           ;usb_device_hid.c: 240: inPipes[0].info.Val = 0x00 | 0x80;
 32333  008BBE  0E80               	movlw	128
 32334  008BC0  0100               	movlb	0	; () banked
 32335  008BC2  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32336                           
 32337                           ; BSR set to: 0
 32338                           ;usb_device_hid.c: 241: active_protocol = ((USB_SETUP_SET_PROTOCOL*)&SetupPkt)->protocol
      +                          ;
 32339  008BC4  CD22 F057          	movff	3362,_active_protocol
 32340                           
 32341                           ; BSR set to: 0
 32342                           ;usb_device_hid.c: 243: }
 32343                           
 32344                           ;usb_device_hid.c: 242: break;
 32345  008BC8  0012               	return	
 32346  008BCA                     i1l9860:
 32347  008BCA  010D               	movlb	13	; () banked
 32348  008BCC  5121               	movf	33,w,b	;volatile
 32349                           
 32350                           ; Switch size 1, requested type "space"
 32351                           ; Number of cases is 6, Range of values is 1 to 11
 32352                           ; switch strategies available:
 32353                           ; Name         Instructions Cycles
 32354                           ; simple_byte           19    10 (average)
 32355                           ;	Chosen strategy is simple_byte
 32356  008BCE  0A01               	xorlw	1	; case 1
 32357  008BD0  B4D8               	btfsc	status,2,c
 32358  008BD2  0012               	return	
 32359  008BD4  0A03               	xorlw	3	; case 2
 32360  008BD6  B4D8               	btfsc	status,2,c
 32361  008BD8  D7CE               	goto	i1l9838
 32362  008BDA  0A01               	xorlw	1	; case 3
 32363  008BDC  B4D8               	btfsc	status,2,c
 32364  008BDE  D7E0               	goto	i1l9848
 32365  008BE0  0A0A               	xorlw	10	; case 9
 32366  008BE2  B4D8               	btfsc	status,2,c
 32367  008BE4  0012               	return	
 32368  008BE6  0A03               	xorlw	3	; case 10
 32369  008BE8  B4D8               	btfsc	status,2,c
 32370  008BEA  D7D4               	goto	i1l9844
 32371  008BEC  0A01               	xorlw	1	; case 11
 32372  008BEE  A4D8               	btfss	status,2,c
 32373  008BF0  0012               	return	
 32374  008BF2  D7E5               	goto	i1l9854
 32375  008BF4                     __end_of_USBCheckHIDRequest:
 32376                           	opt stack 0
 32377                           pclatu	equ	0xFFB
 32378                           pclath	equ	0xFFA
 32379                           tblptru	equ	0xFF8
 32380                           tblptrh	equ	0xFF7
 32381                           tblptrl	equ	0xFF6
 32382                           tablat	equ	0xFF5
 32383                           prodh	equ	0xFF4
 32384                           prodl	equ	0xFF3
 32385                           intcon	equ	0xFF2
 32386                           intcon2	equ	0xFF1
 32387                           intcon3	equ	0xFF0
 32388                           indf0	equ	0xFEF
 32389                           postinc0	equ	0xFEE
 32390                           plusw0	equ	0xFEB
 32391                           fsr0h	equ	0xFEA
 32392                           fsr0l	equ	0xFE9
 32393                           wreg	equ	0xFE8
 32394                           indf1	equ	0xFE7
 32395                           postinc1	equ	0xFE6
 32396                           postdec1	equ	0xFE5
 32397                           plusw1	equ	0xFE3
 32398                           fsr1h	equ	0xFE2
 32399                           fsr1l	equ	0xFE1
 32400                           bsr	equ	0xFE0
 32401                           indf2	equ	0xFDF
 32402                           postinc2	equ	0xFDE
 32403                           postdec2	equ	0xFDD
 32404                           plusw2	equ	0xFDB
 32405                           fsr2h	equ	0xFDA
 32406                           fsr2l	equ	0xFD9
 32407                           status	equ	0xFD8
 32408                           
 32409 ;; *************** function _APP_LEDUpdateUSBStatus *****************
 32410 ;; Defined at:
 32411 ;;		line 86 in file "src/app_led_usb_status.c"
 32412 ;; Parameters:    Size  Location     Type
 32413 ;;		None
 32414 ;; Auto vars:     Size  Location     Type
 32415 ;;		None
 32416 ;; Return value:  Size  Location     Type
 32417 ;;		None               void
 32418 ;; Registers used:
 32419 ;;		wreg, status,2, status,0, cstack
 32420 ;; Tracked objects:
 32421 ;;		On entry : 0/0
 32422 ;;		On exit  : 0/0
 32423 ;;		Unchanged: 0/0
 32424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32429 ;;Total ram usage:        0 bytes
 32430 ;; Hardware stack levels used:    1
 32431 ;; Hardware stack levels required when called:    7
 32432 ;; This function calls:
 32433 ;;		i1_update_LED
 32434 ;; This function is called by:
 32435 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32436 ;; This function uses a non-reentrant model
 32437 ;;
 32438                           
 32439                           	psect	text92
 32440  00ABF4                     __ptext92:
 32441                           	opt stack 0
 32442  00ABF4                     _APP_LEDUpdateUSBStatus:
 32443                           	opt stack 8
 32444                           
 32445                           ;app_led_usb_status.c: 90: if(UCONbits.SUSPND == 1)
 32446                           
 32447                           ;incstack = 0
 32448  00ABF4  A265               	btfss	3941,1,c	;volatile
 32449  00ABF6  D018               	goto	i1l9886
 32450                           
 32451                           ;app_led_usb_status.c: 91: {
 32452                           ;app_led_usb_status.c: 93: if (status_led != LED_OFF)
 32453  00ABF8  5053               	movf	_status_led,w,c	;volatile
 32454  00ABFA  B4D8               	btfsc	status,2,c
 32455  00ABFC  0012               	return	
 32456                           
 32457                           ;app_led_usb_status.c: 94: {
 32458                           ;app_led_usb_status.c: 95: status_led = LED_OFF;
 32459  00ABFE  0E00               	movlw	0
 32460  00AC00  6E53               	movwf	_status_led,c	;volatile
 32461                           
 32462                           ;app_led_usb_status.c: 96: update_LED();
 32463  00AC02  ECFF  F053         	call	i1_update_LED	;wreg free
 32464                           
 32465                           ;app_led_usb_status.c: 97: }
 32466                           ;app_led_usb_status.c: 98: return;
 32467  00AC06  0012               	return	
 32468  00AC08                     i1l9872:
 32469                           
 32470                           ;app_led_usb_status.c: 105: if (status_led == LED_OFF)
 32471  00AC08  5053               	movf	_status_led,w,c	;volatile
 32472  00AC0A  A4D8               	btfss	status,2,c
 32473  00AC0C  0012               	return	
 32474                           
 32475                           ;app_led_usb_status.c: 106: {
 32476                           ;app_led_usb_status.c: 107: status_led = LED_FAST_PULSE;
 32477  00AC0E  0E01               	movlw	1
 32478  00AC10  6E53               	movwf	_status_led,c	;volatile
 32479                           
 32480                           ;app_led_usb_status.c: 108: update_LED();
 32481  00AC12  ECFF  F053         	call	i1_update_LED	;wreg free
 32482                           
 32483                           ;app_led_usb_status.c: 109: }
 32484                           ;app_led_usb_status.c: 110: break;
 32485  00AC16  0012               	return	
 32486  00AC18                     i1l9878:
 32487                           
 32488                           ;app_led_usb_status.c: 114: if (status_led != LED_OFF)
 32489  00AC18  5053               	movf	_status_led,w,c	;volatile
 32490  00AC1A  B4D8               	btfsc	status,2,c
 32491  00AC1C  0012               	return	
 32492                           
 32493                           ;app_led_usb_status.c: 115: {
 32494                           ;app_led_usb_status.c: 116: status_led = LED_OFF;
 32495  00AC1E  0E00               	movlw	0
 32496  00AC20  6E53               	movwf	_status_led,c	;volatile
 32497                           
 32498                           ;app_led_usb_status.c: 117: update_LED();
 32499  00AC22  ECFF  F053         	call	i1_update_LED	;wreg free
 32500                           
 32501                           ;app_led_usb_status.c: 120: }
 32502                           
 32503                           ;app_led_usb_status.c: 118: }
 32504                           ;app_led_usb_status.c: 119: break;
 32505  00AC26  0012               	return	
 32506  00AC28                     i1l9886:
 32507  00AC28  5049               	movf	_USBDeviceState,w,c	;volatile
 32508                           
 32509                           ; Switch size 1, requested type "space"
 32510                           ; Number of cases is 1, Range of values is 32 to 32
 32511                           ; switch strategies available:
 32512                           ; Name         Instructions Cycles
 32513                           ; simple_byte            4     3 (average)
 32514                           ;	Chosen strategy is simple_byte
 32515  00AC2A  0A20               	xorlw	32	; case 32
 32516  00AC2C  B4D8               	btfsc	status,2,c
 32517  00AC2E  D7EC               	goto	i1l9872
 32518  00AC30  D7F3               	goto	i1l9878
 32519  00AC32                     __end_of_APP_LEDUpdateUSBStatus:
 32520                           	opt stack 0
 32521                           pclatu	equ	0xFFB
 32522                           pclath	equ	0xFFA
 32523                           tblptru	equ	0xFF8
 32524                           tblptrh	equ	0xFF7
 32525                           tblptrl	equ	0xFF6
 32526                           tablat	equ	0xFF5
 32527                           prodh	equ	0xFF4
 32528                           prodl	equ	0xFF3
 32529                           intcon	equ	0xFF2
 32530                           intcon2	equ	0xFF1
 32531                           intcon3	equ	0xFF0
 32532                           indf0	equ	0xFEF
 32533                           postinc0	equ	0xFEE
 32534                           plusw0	equ	0xFEB
 32535                           fsr0h	equ	0xFEA
 32536                           fsr0l	equ	0xFE9
 32537                           wreg	equ	0xFE8
 32538                           indf1	equ	0xFE7
 32539                           postinc1	equ	0xFE6
 32540                           postdec1	equ	0xFE5
 32541                           plusw1	equ	0xFE3
 32542                           fsr1h	equ	0xFE2
 32543                           fsr1l	equ	0xFE1
 32544                           bsr	equ	0xFE0
 32545                           indf2	equ	0xFDF
 32546                           postinc2	equ	0xFDE
 32547                           postdec2	equ	0xFDD
 32548                           plusw2	equ	0xFDB
 32549                           fsr2h	equ	0xFDA
 32550                           fsr2l	equ	0xFD9
 32551                           status	equ	0xFD8
 32552                           
 32553 ;; *************** function i1_update_LED *****************
 32554 ;; Defined at:
 32555 ;;		line 774 in file "src/main.c"
 32556 ;; Parameters:    Size  Location     Type
 32557 ;;		None
 32558 ;; Auto vars:     Size  Location     Type
 32559 ;;		None
 32560 ;; Return value:  Size  Location     Type
 32561 ;;                  2    0[None  ] int 
 32562 ;; Registers used:
 32563 ;;		wreg, status,2, status,0
 32564 ;; Tracked objects:
 32565 ;;		On entry : 0/0
 32566 ;;		On exit  : 0/0
 32567 ;;		Unchanged: 0/0
 32568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32573 ;;Total ram usage:        0 bytes
 32574 ;; Hardware stack levels used:    1
 32575 ;; Hardware stack levels required when called:    6
 32576 ;; This function calls:
 32577 ;;		Nothing
 32578 ;; This function is called by:
 32579 ;;		_APP_LEDUpdateUSBStatus
 32580 ;;		_SYS_InterruptLow
 32581 ;; This function uses a non-reentrant model
 32582 ;;
 32583                           
 32584                           	psect	text93
 32585  00A7FE                     __ptext93:
 32586                           	opt stack 0
 32587  00A7FE                     i1_update_LED:
 32588                           	opt stack 11
 32589                           
 32590                           ;main.c: 776: switch(status_led)
 32591                           
 32592                           ;incstack = 0
 32593  00A7FE  D021               	goto	i1l9786
 32594  00A800                     i1l1857:
 32595                           
 32596                           ;main.c: 780: CCP1CONbits.DC1B0 = 0;
 32597  00A800  98BA               	bcf	4026,4,c	;volatile
 32598                           
 32599                           ;main.c: 781: CCP1CONbits.DC1B1 = 0;
 32600  00A802  9ABA               	bcf	4026,5,c	;volatile
 32601                           
 32602                           ;main.c: 782: CCPR1L = 0;
 32603  00A804  0E00               	movlw	0
 32604  00A806  6EBB               	movwf	4027,c	;volatile
 32605                           
 32606                           ;main.c: 783: LED_increasing = 1;
 32607  00A808  0E01               	movlw	1
 32608  00A80A  6E43               	movwf	_LED_increasing,c	;volatile
 32609                           
 32610                           ;main.c: 784: break;
 32611  00A80C  0012               	return	
 32612  00A80E                     i1l1859:
 32613                           
 32614                           ;main.c: 788: CCP1CONbits.DC1B0 = 1023 & 1;
 32615  00A80E  88BA               	bsf	4026,4,c	;volatile
 32616                           
 32617                           ;main.c: 789: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 32618  00A810  8ABA               	bsf	4026,5,c	;volatile
 32619                           
 32620                           ;main.c: 790: CCPR1L = (1023 >> 2);
 32621  00A812  68BB               	setf	4027,c	;volatile
 32622                           
 32623                           ;main.c: 791: repeat_full = 4;
 32624  00A814  0E04               	movlw	4
 32625  00A816  6E51               	movwf	_repeat_full,c	;volatile
 32626                           
 32627                           ;main.c: 792: break;
 32628  00A818  0012               	return	
 32629  00A81A                     i1l9772:
 32630                           
 32631                           ;main.c: 795: T4CONbits.T4CKPS = 0b01;
 32632  00A81A  5076               	movf	3958,w,c	;volatile
 32633  00A81C  0BFC               	andlw	-4
 32634  00A81E  0901               	iorlw	1
 32635  00A820  6E76               	movwf	3958,c	;volatile
 32636                           
 32637                           ;main.c: 797: CCP1CONbits.DC1B0 = 235 & 1;
 32638  00A822  88BA               	bsf	4026,4,c	;volatile
 32639                           
 32640                           ;main.c: 798: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 32641  00A824  8ABA               	bsf	4026,5,c	;volatile
 32642                           
 32643                           ;main.c: 799: CCPR1L = (235 >> 2);
 32644  00A826  0E3A               	movlw	58
 32645  00A828  6EBB               	movwf	4027,c	;volatile
 32646                           
 32647                           ;main.c: 800: LED_increasing = 0;
 32648  00A82A  0E00               	movlw	0
 32649  00A82C  6E43               	movwf	_LED_increasing,c	;volatile
 32650                           
 32651                           ;main.c: 801: break;
 32652  00A82E  0012               	return	
 32653  00A830                     i1l9778:
 32654                           
 32655                           ;main.c: 804: T4CONbits.T4CKPS = 0b11;
 32656  00A830  0E03               	movlw	3
 32657  00A832  1276               	iorwf	3958,f,c	;volatile
 32658                           
 32659                           ;main.c: 806: CCP1CONbits.DC1B0 = 235 & 1;
 32660  00A834  88BA               	bsf	4026,4,c	;volatile
 32661                           
 32662                           ;main.c: 807: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 32663  00A836  8ABA               	bsf	4026,5,c	;volatile
 32664                           
 32665                           ;main.c: 808: CCPR1L = (235 >> 2);
 32666  00A838  0E3A               	movlw	58
 32667  00A83A  6EBB               	movwf	4027,c	;volatile
 32668                           
 32669                           ;main.c: 809: LED_increasing = 0;
 32670  00A83C  0E00               	movlw	0
 32671  00A83E  6E43               	movwf	_LED_increasing,c	;volatile
 32672                           
 32673                           ;main.c: 811: }
 32674                           
 32675                           ;main.c: 810: break;
 32676  00A840  0012               	return	
 32677  00A842                     i1l9786:
 32678  00A842  5053               	movf	_status_led,w,c	;volatile
 32679                           
 32680                           ; Switch size 1, requested type "space"
 32681                           ; Number of cases is 4, Range of values is 0 to 3
 32682                           ; switch strategies available:
 32683                           ; Name         Instructions Cycles
 32684                           ; simple_byte           13     7 (average)
 32685                           ;	Chosen strategy is simple_byte
 32686  00A844  0A00               	xorlw	0	; case 0
 32687  00A846  B4D8               	btfsc	status,2,c
 32688  00A848  D7DB               	goto	i1l1857
 32689  00A84A  0A01               	xorlw	1	; case 1
 32690  00A84C  B4D8               	btfsc	status,2,c
 32691  00A84E  D7E5               	goto	i1l9772
 32692  00A850  0A03               	xorlw	3	; case 2
 32693  00A852  B4D8               	btfsc	status,2,c
 32694  00A854  D7ED               	goto	i1l9778
 32695  00A856  0A01               	xorlw	1	; case 3
 32696  00A858  A4D8               	btfss	status,2,c
 32697  00A85A  0012               	return	
 32698  00A85C  D7D8               	goto	i1l1859
 32699  00A85E                     __end_ofi1_update_LED:
 32700                           	opt stack 0
 32701                           pclatu	equ	0xFFB
 32702                           pclath	equ	0xFFA
 32703                           tblptru	equ	0xFF8
 32704                           tblptrh	equ	0xFF7
 32705                           tblptrl	equ	0xFF6
 32706                           tablat	equ	0xFF5
 32707                           prodh	equ	0xFF4
 32708                           prodl	equ	0xFF3
 32709                           intcon	equ	0xFF2
 32710                           intcon2	equ	0xFF1
 32711                           intcon3	equ	0xFF0
 32712                           indf0	equ	0xFEF
 32713                           postinc0	equ	0xFEE
 32714                           plusw0	equ	0xFEB
 32715                           fsr0h	equ	0xFEA
 32716                           fsr0l	equ	0xFE9
 32717                           wreg	equ	0xFE8
 32718                           indf1	equ	0xFE7
 32719                           postinc1	equ	0xFE6
 32720                           postdec1	equ	0xFE5
 32721                           plusw1	equ	0xFE3
 32722                           fsr1h	equ	0xFE2
 32723                           fsr1l	equ	0xFE1
 32724                           bsr	equ	0xFE0
 32725                           indf2	equ	0xFDF
 32726                           postinc2	equ	0xFDE
 32727                           postdec2	equ	0xFDD
 32728                           plusw2	equ	0xFDB
 32729                           fsr2h	equ	0xFDA
 32730                           fsr2l	equ	0xFD9
 32731                           status	equ	0xFD8
 32732                           
 32733 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 32734 ;; Defined at:
 32735 ;;		line 713 in file "src/main.c"
 32736 ;; Parameters:    Size  Location     Type
 32737 ;;		None
 32738 ;; Auto vars:     Size  Location     Type
 32739 ;;		None
 32740 ;; Return value:  Size  Location     Type
 32741 ;;		None               void
 32742 ;; Registers used:
 32743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32744 ;; Tracked objects:
 32745 ;;		On entry : 0/0
 32746 ;;		On exit  : 0/0
 32747 ;;		Unchanged: 0/0
 32748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32753 ;;Total ram usage:        0 bytes
 32754 ;; Hardware stack levels used:    1
 32755 ;; Hardware stack levels required when called:    8
 32756 ;; This function calls:
 32757 ;;		_USBEnableEndpoint
 32758 ;;		i1_USBTransferOnePacket
 32759 ;; This function is called by:
 32760 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32761 ;; This function uses a non-reentrant model
 32762 ;;
 32763                           
 32764                           	psect	text94
 32765  00AD50                     __ptext94:
 32766                           	opt stack 0
 32767  00AD50                     _APP_DeviceCustomHIDInitialize:
 32768                           	opt stack 7
 32769                           
 32770                           ;main.c: 717: USBInHandle = 0;
 32771                           
 32772                           ;incstack = 0
 32773  00AD50  0E00               	movlw	0
 32774  00AD52  0100               	movlb	0	; () banked
 32775  00AD54  6FD6               	movwf	_USBInHandle& (0+255),b
 32776  00AD56  0E00               	movlw	0
 32777  00AD58  0100               	movlb	0	; () banked
 32778  00AD5A  6FD7               	movwf	(_USBInHandle+1)& (0+255),b
 32779                           
 32780                           ; BSR set to: 0
 32781                           ;main.c: 719: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 32782  00AD5C  0E1E               	movlw	30
 32783  00AD5E  6E09               	movwf	USBEnableEndpoint@options,c
 32784  00AD60  0E01               	movlw	1
 32785  00AD62  EC19  F056         	call	_USBEnableEndpoint
 32786                           
 32787                           ;main.c: 721: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
 32788  00AD66  0E00               	movlw	0
 32789  00AD68  6E01               	movwf	i1USBTransferOnePacket@dir,c
 32790  00AD6A  0E00               	movlw	low _ReceivedDataBuffer
 32791  00AD6C  6E02               	movwf	i1USBTransferOnePacket@data,c
 32792  00AD6E  0E04               	movlw	high _ReceivedDataBuffer
 32793  00AD70  6E03               	movwf	i1USBTransferOnePacket@data+1,c
 32794  00AD72  0E40               	movlw	64
 32795  00AD74  6E04               	movwf	i1USBTransferOnePacket@len,c
 32796  00AD76  0E01               	movlw	1
 32797  00AD78  ECB2  F04D         	call	i1_USBTransferOnePacket
 32798  00AD7C  C001  F1B8         	movff	?i1_USBTransferOnePacket,_USBOutHandle
 32799  00AD80  C002  F1B9         	movff	?i1_USBTransferOnePacket+1,_USBOutHandle+1
 32800  00AD84  0012               	return		;funcret
 32801  00AD86                     __end_of_APP_DeviceCustomHIDInitialize:
 32802                           	opt stack 0
 32803                           pclatu	equ	0xFFB
 32804                           pclath	equ	0xFFA
 32805                           tblptru	equ	0xFF8
 32806                           tblptrh	equ	0xFF7
 32807                           tblptrl	equ	0xFF6
 32808                           tablat	equ	0xFF5
 32809                           prodh	equ	0xFF4
 32810                           prodl	equ	0xFF3
 32811                           intcon	equ	0xFF2
 32812                           intcon2	equ	0xFF1
 32813                           intcon3	equ	0xFF0
 32814                           indf0	equ	0xFEF
 32815                           postinc0	equ	0xFEE
 32816                           plusw0	equ	0xFEB
 32817                           fsr0h	equ	0xFEA
 32818                           fsr0l	equ	0xFE9
 32819                           wreg	equ	0xFE8
 32820                           indf1	equ	0xFE7
 32821                           postinc1	equ	0xFE6
 32822                           postdec1	equ	0xFE5
 32823                           plusw1	equ	0xFE3
 32824                           fsr1h	equ	0xFE2
 32825                           fsr1l	equ	0xFE1
 32826                           bsr	equ	0xFE0
 32827                           indf2	equ	0xFDF
 32828                           postinc2	equ	0xFDE
 32829                           postdec2	equ	0xFDD
 32830                           plusw2	equ	0xFDB
 32831                           fsr2h	equ	0xFDA
 32832                           fsr2l	equ	0xFD9
 32833                           status	equ	0xFD8
 32834                           
 32835 ;; *************** function i1_USBTransferOnePacket *****************
 32836 ;; Defined at:
 32837 ;;		line 995 in file "src/usb/usb_device.c"
 32838 ;; Parameters:    Size  Location     Type
 32839 ;;  ep              1    wreg     unsigned char 
 32840 ;;  dir             1    0[COMRAM] unsigned char 
 32841 ;;  data            2    1[COMRAM] PTR unsigned char 
 32842 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 32843 ;;  len             1    3[COMRAM] unsigned char 
 32844 ;; Auto vars:     Size  Location     Type
 32845 ;;  ep              1    4[COMRAM] unsigned char 
 32846 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 32847 ;;		 -> BDT(32), NULL(0), 
 32848 ;; Return value:  Size  Location     Type
 32849 ;;                  2    0[COMRAM] PTR void 
 32850 ;; Registers used:
 32851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32852 ;; Tracked objects:
 32853 ;;		On entry : 0/0
 32854 ;;		On exit  : 0/0
 32855 ;;		Unchanged: 0/0
 32856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32858 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32860 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32861 ;;Total ram usage:        7 bytes
 32862 ;; Hardware stack levels used:    1
 32863 ;; Hardware stack levels required when called:    6
 32864 ;; This function calls:
 32865 ;;		Nothing
 32866 ;; This function is called by:
 32867 ;;		_APP_DeviceCustomHIDInitialize
 32868 ;; This function uses a non-reentrant model
 32869 ;;
 32870                           
 32871                           	psect	text95
 32872  009B64                     __ptext95:
 32873                           	opt stack 0
 32874  009B64                     i1_USBTransferOnePacket:
 32875                           	opt stack 8
 32876                           
 32877                           ;incstack = 0
 32878                           ;i1USBTransferOnePacket@ep stored from wreg
 32879  009B64  6E05               	movwf	i1USBTransferOnePacket@ep,c
 32880                           
 32881                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 32882                           ;usb_device.c: 1000: if(dir != 0)
 32883  009B66  5001               	movf	i1USBTransferOnePacket@dir,w,c
 32884  009B68  B4D8               	btfsc	status,2,c
 32885  009B6A  D007               	goto	i1l9740
 32886                           
 32887                           ;usb_device.c: 1001: {
 32888                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 32889  009B6C  5005               	movf	i1USBTransferOnePacket@ep,w,c
 32890  009B6E  0D02               	mullw	2
 32891  009B70  0ECE               	movlw	low _pBDTEntryIn
 32892  009B72  24F3               	addwf	prodl,w,c
 32893  009B74  6ED9               	movwf	fsr2l,c
 32894  009B76  0E00               	movlw	high _pBDTEntryIn
 32895  009B78  D006               	goto	L28
 32896  009B7A                     i1l9740:
 32897                           
 32898                           ;usb_device.c: 1005: else
 32899                           ;usb_device.c: 1006: {
 32900                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 32901  009B7A  5005               	movf	i1USBTransferOnePacket@ep,w,c
 32902  009B7C  0D02               	mullw	2
 32903  009B7E  0ED2               	movlw	low _pBDTEntryOut
 32904  009B80  24F3               	addwf	prodl,w,c
 32905  009B82  6ED9               	movwf	fsr2l,c
 32906  009B84  0E00               	movlw	high _pBDTEntryOut
 32907  009B86                     L28:
 32908  009B86  20F4               	addwfc	prodh,w,c
 32909  009B88  6EDA               	movwf	fsr2h,c
 32910  009B8A  CFDE F006          	movff	postinc2,i1USBTransferOnePacket@handle
 32911  009B8E  CFDD F007          	movff	postdec2,i1USBTransferOnePacket@handle+1
 32912                           
 32913                           ;usb_device.c: 1009: }
 32914                           ;usb_device.c: 1013: if(handle == 0)
 32915  009B92  5006               	movf	i1USBTransferOnePacket@handle,w,c
 32916  009B94  1007               	iorwf	i1USBTransferOnePacket@handle+1,w,c
 32917  009B96  A4D8               	btfss	status,2,c
 32918  009B98  D005               	goto	i1l9748
 32919                           
 32920                           ;usb_device.c: 1014: {
 32921                           ;usb_device.c: 1015: return 0;
 32922  009B9A  0E00               	movlw	0
 32923  009B9C  6E01               	movwf	?i1_USBTransferOnePacket,c
 32924  009B9E  0E00               	movlw	0
 32925  009BA0  6E02               	movwf	?i1_USBTransferOnePacket+1,c
 32926  009BA2  0012               	return	
 32927  009BA4                     i1l9748:
 32928                           
 32929                           ;usb_device.c: 1016: }
 32930                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 32931  009BA4  EE20 F002          	lfsr	2,2
 32932  009BA8  5006               	movf	i1USBTransferOnePacket@handle,w,c
 32933  009BAA  26D9               	addwf	fsr2l,f,c
 32934  009BAC  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 32935  009BAE  22DA               	addwfc	fsr2h,f,c
 32936  009BB0  C002  FFDE         	movff	i1USBTransferOnePacket@data,postinc2
 32937  009BB4  C003  FFDD         	movff	i1USBTransferOnePacket@data+1,postdec2
 32938                           
 32939                           ;usb_device.c: 1030: handle->CNT = len;
 32940  009BB8  EE20 F001          	lfsr	2,1
 32941  009BBC  5006               	movf	i1USBTransferOnePacket@handle,w,c
 32942  009BBE  26D9               	addwf	fsr2l,f,c
 32943  009BC0  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 32944  009BC2  22DA               	addwfc	fsr2h,f,c
 32945  009BC4  C004  FFDF         	movff	i1USBTransferOnePacket@len,indf2
 32946                           
 32947                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 32948  009BC8  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 32949  009BCC  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 32950  009BD0  0E40               	movlw	64
 32951  009BD2  16DF               	andwf	indf2,f,c
 32952                           
 32953                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 32954  009BD4  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 32955  009BD8  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 32956  009BDC  0E00               	movlw	0
 32957  009BDE  86DB               	bsf	plusw2,3,c
 32958                           
 32959                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 32960  009BE0  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 32961  009BE4  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 32962  009BE8  0E00               	movlw	0
 32963  009BEA  8EDB               	bsf	plusw2,7,c
 32964                           
 32965                           ;usb_device.c: 1036: if(dir != 0)
 32966  009BEC  5001               	movf	i1USBTransferOnePacket@dir,w,c
 32967  009BEE  B4D8               	btfsc	status,2,c
 32968  009BF0  D007               	goto	i1l9760
 32969                           
 32970                           ;usb_device.c: 1037: {
 32971                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 32972  009BF2  5005               	movf	i1USBTransferOnePacket@ep,w,c
 32973  009BF4  0D02               	mullw	2
 32974  009BF6  0ECE               	movlw	low _pBDTEntryIn
 32975  009BF8  24F3               	addwf	prodl,w,c
 32976  009BFA  6ED9               	movwf	fsr2l,c
 32977  009BFC  0E00               	movlw	high _pBDTEntryIn
 32978  009BFE  D006               	goto	L29
 32979  009C00                     i1l9760:
 32980                           
 32981                           ;usb_device.c: 1041: else
 32982                           ;usb_device.c: 1042: {
 32983                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 32984  009C00  5005               	movf	i1USBTransferOnePacket@ep,w,c
 32985  009C02  0D02               	mullw	2
 32986  009C04  0ED2               	movlw	low _pBDTEntryOut
 32987  009C06  24F3               	addwf	prodl,w,c
 32988  009C08  6ED9               	movwf	fsr2l,c
 32989  009C0A  0E00               	movlw	high _pBDTEntryOut
 32990  009C0C                     L29:
 32991  009C0C  20F4               	addwfc	prodh,w,c
 32992  009C0E  6EDA               	movwf	fsr2h,c
 32993  009C10  0E04               	movlw	4
 32994  009C12  1ADF               	xorwf	indf2,f,c
 32995                           
 32996                           ;usb_device.c: 1045: }
 32997                           ;usb_device.c: 1046: return (void*)handle;
 32998  009C14  C006  F001         	movff	i1USBTransferOnePacket@handle,?i1_USBTransferOnePacket
 32999  009C18  C007  F002         	movff	i1USBTransferOnePacket@handle+1,?i1_USBTransferOnePacket+1
 33000  009C1C  0012               	return	
 33001  009C1E                     __end_ofi1_USBTransferOnePacket:
 33002                           	opt stack 0
 33003                           pclatu	equ	0xFFB
 33004                           pclath	equ	0xFFA
 33005                           tblptru	equ	0xFF8
 33006                           tblptrh	equ	0xFF7
 33007                           tblptrl	equ	0xFF6
 33008                           tablat	equ	0xFF5
 33009                           prodh	equ	0xFF4
 33010                           prodl	equ	0xFF3
 33011                           intcon	equ	0xFF2
 33012                           intcon2	equ	0xFF1
 33013                           intcon3	equ	0xFF0
 33014                           indf0	equ	0xFEF
 33015                           postinc0	equ	0xFEE
 33016                           plusw0	equ	0xFEB
 33017                           fsr0h	equ	0xFEA
 33018                           fsr0l	equ	0xFE9
 33019                           wreg	equ	0xFE8
 33020                           indf1	equ	0xFE7
 33021                           postinc1	equ	0xFE6
 33022                           postdec1	equ	0xFE5
 33023                           plusw1	equ	0xFE3
 33024                           fsr1h	equ	0xFE2
 33025                           fsr1l	equ	0xFE1
 33026                           bsr	equ	0xFE0
 33027                           indf2	equ	0xFDF
 33028                           postinc2	equ	0xFDE
 33029                           postdec2	equ	0xFDD
 33030                           plusw2	equ	0xFDB
 33031                           fsr2h	equ	0xFDA
 33032                           fsr2l	equ	0xFD9
 33033                           status	equ	0xFD8
 33034                           
 33035 ;; *************** function _USBEnableEndpoint *****************
 33036 ;; Defined at:
 33037 ;;		line 878 in file "src/usb/usb_device.c"
 33038 ;; Parameters:    Size  Location     Type
 33039 ;;  ep              1    wreg     unsigned char 
 33040 ;;  options         1    8[COMRAM] unsigned char 
 33041 ;; Auto vars:     Size  Location     Type
 33042 ;;  ep              1   11[COMRAM] unsigned char 
 33043 ;;  p               2    9[COMRAM] PTR unsigned char 
 33044 ;;		 -> UEP0(1), 
 33045 ;; Return value:  Size  Location     Type
 33046 ;;		None               void
 33047 ;; Registers used:
 33048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33049 ;; Tracked objects:
 33050 ;;		On entry : 0/0
 33051 ;;		On exit  : 0/0
 33052 ;;		Unchanged: 0/0
 33053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33054 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33058 ;;Total ram usage:        4 bytes
 33059 ;; Hardware stack levels used:    1
 33060 ;; Hardware stack levels required when called:    7
 33061 ;; This function calls:
 33062 ;;		_USBConfigureEndpoint
 33063 ;; This function is called by:
 33064 ;;		_APP_DeviceCustomHIDInitialize
 33065 ;; This function uses a non-reentrant model
 33066 ;;
 33067                           
 33068                           	psect	text96
 33069  00AC32                     __ptext96:
 33070                           	opt stack 0
 33071  00AC32                     _USBEnableEndpoint:
 33072                           	opt stack 7
 33073                           
 33074                           ;incstack = 0
 33075                           ;USBEnableEndpoint@ep stored from wreg
 33076  00AC32  6E0C               	movwf	USBEnableEndpoint@ep,c
 33077                           
 33078                           ;usb_device.c: 880: unsigned char* p;
 33079                           ;usb_device.c: 884: if(options & 0x04)
 33080  00AC34  A409               	btfss	USBEnableEndpoint@options,2,c
 33081  00AC36  D005               	goto	i1l9728
 33082                           
 33083                           ;usb_device.c: 885: {
 33084                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 33085  00AC38  0E00               	movlw	0
 33086  00AC3A  6E01               	movwf	USBConfigureEndpoint@direction,c
 33087  00AC3C  500C               	movf	USBEnableEndpoint@ep,w,c
 33088  00AC3E  EC88  F050         	call	_USBConfigureEndpoint
 33089  00AC42                     i1l9728:
 33090                           
 33091                           ;usb_device.c: 887: }
 33092                           ;usb_device.c: 888: if(options & 0x02)
 33093  00AC42  A209               	btfss	USBEnableEndpoint@options,1,c
 33094  00AC44  D005               	goto	i1l9732
 33095                           
 33096                           ;usb_device.c: 889: {
 33097                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 33098  00AC46  0E01               	movlw	1
 33099  00AC48  6E01               	movwf	USBConfigureEndpoint@direction,c
 33100  00AC4A  500C               	movf	USBEnableEndpoint@ep,w,c
 33101  00AC4C  EC88  F050         	call	_USBConfigureEndpoint
 33102  00AC50                     i1l9732:
 33103                           
 33104                           ;usb_device.c: 891: }
 33105                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 33106  00AC50  500C               	movf	USBEnableEndpoint@ep,w,c
 33107  00AC52  0D01               	mullw	1
 33108  00AC54  0E26               	movlw	38
 33109  00AC56  24F3               	addwf	prodl,w,c
 33110  00AC58  6E0A               	movwf	USBEnableEndpoint@p,c
 33111  00AC5A  0E0F               	movlw	15
 33112  00AC5C  20F4               	addwfc	prodh,w,c
 33113  00AC5E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 33114                           
 33115                           ;usb_device.c: 901: *p = options;
 33116  00AC60  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 33117  00AC64  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 33118  00AC68  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 33119  00AC6C  0012               	return		;funcret
 33120  00AC6E                     __end_of_USBEnableEndpoint:
 33121                           	opt stack 0
 33122                           pclatu	equ	0xFFB
 33123                           pclath	equ	0xFFA
 33124                           tblptru	equ	0xFF8
 33125                           tblptrh	equ	0xFF7
 33126                           tblptrl	equ	0xFF6
 33127                           tablat	equ	0xFF5
 33128                           prodh	equ	0xFF4
 33129                           prodl	equ	0xFF3
 33130                           intcon	equ	0xFF2
 33131                           intcon2	equ	0xFF1
 33132                           intcon3	equ	0xFF0
 33133                           indf0	equ	0xFEF
 33134                           postinc0	equ	0xFEE
 33135                           plusw0	equ	0xFEB
 33136                           fsr0h	equ	0xFEA
 33137                           fsr0l	equ	0xFE9
 33138                           wreg	equ	0xFE8
 33139                           indf1	equ	0xFE7
 33140                           postinc1	equ	0xFE6
 33141                           postdec1	equ	0xFE5
 33142                           plusw1	equ	0xFE3
 33143                           fsr1h	equ	0xFE2
 33144                           fsr1l	equ	0xFE1
 33145                           bsr	equ	0xFE0
 33146                           indf2	equ	0xFDF
 33147                           postinc2	equ	0xFDE
 33148                           postdec2	equ	0xFDD
 33149                           plusw2	equ	0xFDB
 33150                           fsr2h	equ	0xFDA
 33151                           fsr2l	equ	0xFD9
 33152                           status	equ	0xFD8
 33153                           
 33154 ;; *************** function _USBConfigureEndpoint *****************
 33155 ;; Defined at:
 33156 ;;		line 1543 in file "src/usb/usb_device.c"
 33157 ;; Parameters:    Size  Location     Type
 33158 ;;  EPNum           1    wreg     unsigned char 
 33159 ;;  direction       1    0[COMRAM] unsigned char 
 33160 ;; Auto vars:     Size  Location     Type
 33161 ;;  EPNum           1    5[COMRAM] unsigned char 
 33162 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 33163 ;;		 -> BDT(32), 
 33164 ;; Return value:  Size  Location     Type
 33165 ;;		None               void
 33166 ;; Registers used:
 33167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33168 ;; Tracked objects:
 33169 ;;		On entry : 0/0
 33170 ;;		On exit  : 0/0
 33171 ;;		Unchanged: 0/0
 33172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33174 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33177 ;;Total ram usage:        8 bytes
 33178 ;; Hardware stack levels used:    1
 33179 ;; Hardware stack levels required when called:    6
 33180 ;; This function calls:
 33181 ;;		Nothing
 33182 ;; This function is called by:
 33183 ;;		_USBEnableEndpoint
 33184 ;; This function uses a non-reentrant model
 33185 ;;
 33186                           
 33187                           	psect	text97
 33188  00A110                     __ptext97:
 33189                           	opt stack 0
 33190  00A110                     _USBConfigureEndpoint:
 33191                           	opt stack 7
 33192                           
 33193                           ;incstack = 0
 33194                           ;USBConfigureEndpoint@EPNum stored from wreg
 33195  00A110  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 33196                           
 33197                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 33198                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 33199  00A112  0E00               	movlw	0
 33200  00A114  6E07               	movwf	USBConfigureEndpoint@handle,c
 33201  00A116  0E0D               	movlw	13
 33202  00A118  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 33203                           
 33204                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 33205  00A11A  5001               	movf	USBConfigureEndpoint@direction,w,c
 33206  00A11C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 33207  00A11E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 33208  00A120  90D8               	bcf	status,0,c
 33209  00A122  3602               	rlcf	??_USBConfigureEndpoint,f,c
 33210  00A124  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 33211  00A126  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 33212  00A128  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 33213  00A12A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 33214  00A12C  90D8               	bcf	status,0,c
 33215  00A12E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 33216  00A130  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 33217  00A132  90D8               	bcf	status,0,c
 33218  00A134  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 33219  00A136  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 33220  00A138  5002               	movf	??_USBConfigureEndpoint,w,c
 33221  00A13A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 33222  00A13C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 33223  00A13E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 33224  00A140  90D8               	bcf	status,0,c
 33225  00A142  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 33226  00A144  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 33227  00A146  90D8               	bcf	status,0,c
 33228  00A148  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 33229  00A14A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 33230  00A14C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 33231  00A14E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 33232  00A150  5005               	movf	??_USBConfigureEndpoint+3,w,c
 33233  00A152  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 33234                           
 33235                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 33236  00A154  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 33237  00A158  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 33238  00A15C  9EDF               	bcf	indf2,7,c
 33239                           
 33240                           ;usb_device.c: 1557: if(direction == 0)
 33241  00A15E  5001               	movf	USBConfigureEndpoint@direction,w,c
 33242  00A160  A4D8               	btfss	status,2,c
 33243  00A162  D007               	goto	i1l9632
 33244                           
 33245                           ;usb_device.c: 1558: {
 33246                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 33247  00A164  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 33248  00A166  0D02               	mullw	2
 33249  00A168  0ED2               	movlw	low _pBDTEntryOut
 33250  00A16A  24F3               	addwf	prodl,w,c
 33251  00A16C  6ED9               	movwf	fsr2l,c
 33252  00A16E  0E00               	movlw	high _pBDTEntryOut
 33253  00A170  D006               	goto	L30
 33254  00A172                     i1l9632:
 33255                           
 33256                           ;usb_device.c: 1561: else
 33257                           ;usb_device.c: 1562: {
 33258                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 33259  00A172  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 33260  00A174  0D02               	mullw	2
 33261  00A176  0ECE               	movlw	low _pBDTEntryIn
 33262  00A178  24F3               	addwf	prodl,w,c
 33263  00A17A  6ED9               	movwf	fsr2l,c
 33264  00A17C  0E00               	movlw	high _pBDTEntryIn
 33265  00A17E                     L30:
 33266  00A17E  20F4               	addwfc	prodh,w,c
 33267  00A180  6EDA               	movwf	fsr2h,c
 33268  00A182  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 33269  00A186  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 33270                           
 33271                           ;usb_device.c: 1564: }
 33272                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 33273  00A18A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 33274  00A18E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 33275  00A192  9CDF               	bcf	indf2,6,c
 33276                           
 33277                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 33278  00A194  EE20 F004          	lfsr	2,4
 33279  00A198  5007               	movf	USBConfigureEndpoint@handle,w,c
 33280  00A19A  26D9               	addwf	fsr2l,f,c
 33281  00A19C  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 33282  00A19E  22DA               	addwfc	fsr2h,f,c
 33283  00A1A0  8CDF               	bsf	indf2,6,c
 33284  00A1A2  0012               	return		;funcret
 33285  00A1A4                     __end_of_USBConfigureEndpoint:
 33286                           	opt stack 0
 33287                           pclatu	equ	0xFFB
 33288                           pclath	equ	0xFFA
 33289                           tblptru	equ	0xFF8
 33290                           tblptrh	equ	0xFF7
 33291                           tblptrl	equ	0xFF6
 33292                           tablat	equ	0xFF5
 33293                           prodh	equ	0xFF4
 33294                           prodl	equ	0xFF3
 33295                           intcon	equ	0xFF2
 33296                           intcon2	equ	0xFF1
 33297                           intcon3	equ	0xFF0
 33298                           indf0	equ	0xFEF
 33299                           postinc0	equ	0xFEE
 33300                           plusw0	equ	0xFEB
 33301                           fsr0h	equ	0xFEA
 33302                           fsr0l	equ	0xFE9
 33303                           wreg	equ	0xFE8
 33304                           indf1	equ	0xFE7
 33305                           postinc1	equ	0xFE6
 33306                           postdec1	equ	0xFE5
 33307                           plusw1	equ	0xFE3
 33308                           fsr1h	equ	0xFE2
 33309                           fsr1l	equ	0xFE1
 33310                           bsr	equ	0xFE0
 33311                           indf2	equ	0xFDF
 33312                           postinc2	equ	0xFDE
 33313                           postdec2	equ	0xFDD
 33314                           plusw2	equ	0xFDB
 33315                           fsr2h	equ	0xFDA
 33316                           fsr2l	equ	0xFD9
 33317                           status	equ	0xFD8
 33318                           
 33319 ;; *************** function _USBCtrlTrfOutHandler *****************
 33320 ;; Defined at:
 33321 ;;		line 2541 in file "src/usb/usb_device.c"
 33322 ;; Parameters:    Size  Location     Type
 33323 ;;		None
 33324 ;; Auto vars:     Size  Location     Type
 33325 ;;		None
 33326 ;; Return value:  Size  Location     Type
 33327 ;;		None               void
 33328 ;; Registers used:
 33329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33330 ;; Tracked objects:
 33331 ;;		On entry : 0/0
 33332 ;;		On exit  : 0/0
 33333 ;;		Unchanged: 0/0
 33334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33339 ;;Total ram usage:        0 bytes
 33340 ;; Hardware stack levels used:    1
 33341 ;; Hardware stack levels required when called:    8
 33342 ;; This function calls:
 33343 ;;		_USBCtrlTrfRxService
 33344 ;; This function is called by:
 33345 ;;		_USBCtrlEPService
 33346 ;; This function uses a non-reentrant model
 33347 ;;
 33348                           
 33349                           	psect	text98
 33350  00A8BE                     __ptext98:
 33351                           	opt stack 0
 33352  00A8BE                     _USBCtrlTrfOutHandler:
 33353                           	opt stack 7
 33354                           
 33355                           ;usb_device.c: 2543: if(controlTransferState == 2)
 33356                           
 33357                           ;incstack = 0
 33358  00A8BE  0E02               	movlw	2
 33359  00A8C0  184D               	xorwf	_controlTransferState,w,c	;volatile
 33360  00A8C2  A4D8               	btfss	status,2,c
 33361  00A8C4  D003               	goto	i1l12056
 33362                           
 33363                           ;usb_device.c: 2544: {
 33364                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 33365  00A8C6  ECE5  F043         	call	_USBCtrlTrfRxService	;wreg free
 33366                           
 33367                           ;usb_device.c: 2546: }
 33368  00A8CA  0012               	return	
 33369  00A8CC                     i1l12056:
 33370                           
 33371                           ;usb_device.c: 2547: else
 33372                           ;usb_device.c: 2548: {
 33373                           ;usb_device.c: 2551: controlTransferState = 0;
 33374  00A8CC  0E00               	movlw	0
 33375  00A8CE  6E4D               	movwf	_controlTransferState,c	;volatile
 33376                           
 33377                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 33378  00A8D0  5042               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 33379  00A8D2  A4D8               	btfss	status,2,c
 33380  00A8D4  D01F               	goto	i1l12064
 33381                           
 33382                           ;usb_device.c: 2559: {
 33383                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 33384  00A8D6  EE20 F001          	lfsr	2,1
 33385  00A8DA  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33386  00A8DC  26D9               	addwf	fsr2l,f,c
 33387  00A8DE  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33388  00A8E0  22DA               	addwfc	fsr2h,f,c
 33389  00A8E2  0E08               	movlw	8
 33390  00A8E4  6EDF               	movwf	indf2,c
 33391                           
 33392                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33393  00A8E6  EE20 F002          	lfsr	2,2
 33394  00A8EA  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33395  00A8EC  26D9               	addwf	fsr2l,f,c
 33396  00A8EE  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33397  00A8F0  22DA               	addwfc	fsr2h,f,c
 33398  00A8F2  0E20               	movlw	32
 33399  00A8F4  6EDE               	movwf	postinc2,c
 33400  00A8F6  0E0D               	movlw	13
 33401  00A8F8  6EDD               	movwf	postdec2,c
 33402                           
 33403                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 33404  00A8FA  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33405  00A8FE  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33406  00A902  0E0C               	movlw	12
 33407  00A904  6EDF               	movwf	indf2,c
 33408                           
 33409                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33410  00A906  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33411  00A90A  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33412  00A90E  0E00               	movlw	0
 33413  00A910  8EDB               	bsf	plusw2,7,c
 33414                           
 33415                           ;usb_device.c: 2564: }
 33416  00A912  0012               	return	
 33417  00A914                     i1l12064:
 33418                           
 33419                           ;usb_device.c: 2565: else
 33420                           ;usb_device.c: 2566: {
 33421                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 33422  00A914  0E00               	movlw	0
 33423  00A916  6E42               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 33424  00A918  0012               	return	
 33425  00A91A                     __end_of_USBCtrlTrfOutHandler:
 33426                           	opt stack 0
 33427                           pclatu	equ	0xFFB
 33428                           pclath	equ	0xFFA
 33429                           tblptru	equ	0xFF8
 33430                           tblptrh	equ	0xFF7
 33431                           tblptrl	equ	0xFF6
 33432                           tablat	equ	0xFF5
 33433                           prodh	equ	0xFF4
 33434                           prodl	equ	0xFF3
 33435                           intcon	equ	0xFF2
 33436                           intcon2	equ	0xFF1
 33437                           intcon3	equ	0xFF0
 33438                           indf0	equ	0xFEF
 33439                           postinc0	equ	0xFEE
 33440                           plusw0	equ	0xFEB
 33441                           fsr0h	equ	0xFEA
 33442                           fsr0l	equ	0xFE9
 33443                           wreg	equ	0xFE8
 33444                           indf1	equ	0xFE7
 33445                           postinc1	equ	0xFE6
 33446                           postdec1	equ	0xFE5
 33447                           plusw1	equ	0xFE3
 33448                           fsr1h	equ	0xFE2
 33449                           fsr1l	equ	0xFE1
 33450                           bsr	equ	0xFE0
 33451                           indf2	equ	0xFDF
 33452                           postinc2	equ	0xFDE
 33453                           postdec2	equ	0xFDD
 33454                           plusw2	equ	0xFDB
 33455                           fsr2h	equ	0xFDA
 33456                           fsr2l	equ	0xFD9
 33457                           status	equ	0xFD8
 33458                           
 33459 ;; *************** function _USBCtrlTrfRxService *****************
 33460 ;; Defined at:
 33461 ;;		line 1852 in file "src/usb/usb_device.c"
 33462 ;; Parameters:    Size  Location     Type
 33463 ;;		None
 33464 ;; Auto vars:     Size  Location     Type
 33465 ;;  byteToRead      1    1[COMRAM] unsigned char 
 33466 ;;  i               1    0[COMRAM] unsigned char 
 33467 ;; Return value:  Size  Location     Type
 33468 ;;		None               void
 33469 ;; Registers used:
 33470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33471 ;; Tracked objects:
 33472 ;;		On entry : 0/0
 33473 ;;		On exit  : 0/0
 33474 ;;		Unchanged: 0/0
 33475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33480 ;;Total ram usage:        2 bytes
 33481 ;; Hardware stack levels used:    1
 33482 ;; Hardware stack levels required when called:    7
 33483 ;; This function calls:
 33484 ;;		_USBCtrlEPAllowStatusStage
 33485 ;; This function is called by:
 33486 ;;		_USBCtrlTrfOutHandler
 33487 ;; This function uses a non-reentrant model
 33488 ;;
 33489                           
 33490                           	psect	text99
 33491  0087CA                     __ptext99:
 33492                           	opt stack 0
 33493  0087CA                     _USBCtrlTrfRxService:
 33494                           	opt stack 7
 33495                           
 33496                           ;usb_device.c: 1854: uint8_t byteToRead;
 33497                           ;usb_device.c: 1855: uint8_t i;
 33498                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 33499                           
 33500                           ;incstack = 0
 33501  0087CA  EE20 F001          	lfsr	2,1
 33502  0087CE  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 33503  0087D0  26D9               	addwf	fsr2l,f,c
 33504  0087D2  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33505  0087D4  22DA               	addwfc	fsr2h,f,c
 33506  0087D6  50DF               	movf	indf2,w,c
 33507  0087D8  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 33508                           
 33509                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 33510  0087DA  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 33511  0087DC  0100               	movlb	0	; () banked
 33512  0087DE  5DA7               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 33513  0087E0  0E00               	movlw	0
 33514  0087E2  59A8               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 33515  0087E4  A0D8               	btfss	status,0,c
 33516                           
 33517                           ; BSR set to: 0
 33518                           ;usb_device.c: 1866: {
 33519                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 33520  0087E6  C0A7  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 33521                           
 33522                           ; BSR set to: 0
 33523                           ;usb_device.c: 1868: }
 33524                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 33525                           
 33526                           ; BSR set to: 0
 33527  0087EA  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 33528  0087EC  0100               	movlb	0	; () banked
 33529  0087EE  5FA7               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 33530  0087F0  0E00               	movlw	0
 33531  0087F2  5BA8               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 33532                           
 33533                           ; BSR set to: 0
 33534                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 33535  0087F4  0E00               	movlw	0
 33536  0087F6  6E01               	movwf	USBCtrlTrfRxService@i,c
 33537  0087F8  D012               	goto	i1l10986
 33538  0087FA                     i1l10980:
 33539                           
 33540                           ; BSR set to: 0
 33541                           ;usb_device.c: 1875: {
 33542                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 33543  0087FA  5001               	movf	USBCtrlTrfRxService@i,w,c
 33544  0087FC  0D01               	mullw	1
 33545  0087FE  0E28               	movlw	40
 33546  008800  24F3               	addwf	prodl,w,c
 33547  008802  6ED9               	movwf	fsr2l,c
 33548  008804  0E0D               	movlw	13
 33549  008806  20F4               	addwfc	prodh,w,c
 33550  008808  6EDA               	movwf	fsr2h,c
 33551  00880A  C0A3  FFE1         	movff	_outPipes,fsr1l	;volatile
 33552  00880E  C0A4  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 33553  008812  CFDF FFE7          	movff	indf2,indf1
 33554                           
 33555                           ; BSR set to: 0
 33556  008816  0100               	movlb	0	; () banked
 33557  008818  4BA3               	infsnz	_outPipes& (0+255),f,b	;volatile
 33558  00881A  2BA4               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 33559                           
 33560                           ; BSR set to: 0
 33561  00881C  2A01               	incf	USBCtrlTrfRxService@i,f,c
 33562  00881E                     i1l10986:
 33563                           
 33564                           ; BSR set to: 0
 33565  00881E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 33566  008820  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 33567  008822  A0D8               	btfss	status,0,c
 33568  008824  D7EA               	goto	i1l10980
 33569                           
 33570                           ; BSR set to: 0
 33571                           ;usb_device.c: 1877: }
 33572                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 33573                           
 33574                           ; BSR set to: 0
 33575  008826  0100               	movlb	0	; () banked
 33576  008828  51A7               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 33577  00882A  0100               	movlb	0	; () banked
 33578  00882C  11A8               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 33579  00882E  B4D8               	btfsc	status,2,c
 33580  008830  D032               	goto	i1l11002
 33581                           
 33582                           ; BSR set to: 0
 33583                           ;usb_device.c: 1882: {
 33584                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 33585  008832  EE20 F001          	lfsr	2,1
 33586  008836  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33587  008838  26D9               	addwf	fsr2l,f,c
 33588  00883A  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33589  00883C  22DA               	addwfc	fsr2h,f,c
 33590  00883E  0E08               	movlw	8
 33591  008840  6EDF               	movwf	indf2,c
 33592                           
 33593                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 33594  008842  EE20 F002          	lfsr	2,2
 33595  008846  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33596  008848  26D9               	addwf	fsr2l,f,c
 33597  00884A  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33598  00884C  22DA               	addwfc	fsr2h,f,c
 33599  00884E  0E28               	movlw	40
 33600  008850  6EDE               	movwf	postinc2,c
 33601  008852  0E0D               	movlw	13
 33602  008854  6EDD               	movwf	postdec2,c
 33603                           
 33604                           ; BSR set to: 0
 33605                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 33606  008856  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33607  00885A  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33608  00885E  BCDF               	btfsc	indf2,6,c
 33609  008860  D00D               	goto	i1l10998
 33610                           
 33611                           ; BSR set to: 0
 33612                           ;usb_device.c: 1886: {
 33613                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 33614  008862  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33615  008866  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33616  00886A  0E48               	movlw	72
 33617  00886C  6EDF               	movwf	indf2,c
 33618                           
 33619                           ; BSR set to: 0
 33620                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33621  00886E  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33622  008872  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33623  008876  0E00               	movlw	0
 33624  008878  8EDB               	bsf	plusw2,7,c
 33625                           
 33626                           ;usb_device.c: 1889: }
 33627  00887A  0012               	return	
 33628  00887C                     i1l10998:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;usb_device.c: 1890: else
 33632                           ;usb_device.c: 1891: {
 33633                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 33634  00887C  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33635  008880  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33636  008884  0E08               	movlw	8
 33637  008886  6EDF               	movwf	indf2,c
 33638                           
 33639                           ; BSR set to: 0
 33640                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33641  008888  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33642  00888C  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33643  008890  0E00               	movlw	0
 33644  008892  8EDB               	bsf	plusw2,7,c
 33645                           
 33646                           ; BSR set to: 0
 33647                           ;usb_device.c: 1894: }
 33648                           ;usb_device.c: 1895: }
 33649  008894  0012               	return	
 33650  008896                     i1l11002:
 33651                           
 33652                           ; BSR set to: 0
 33653                           ;usb_device.c: 1896: else
 33654                           ;usb_device.c: 1897: {
 33655                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 33656  008896  EE20 F001          	lfsr	2,1
 33657  00889A  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33658  00889C  26D9               	addwf	fsr2l,f,c
 33659  00889E  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33660  0088A0  22DA               	addwfc	fsr2h,f,c
 33661  0088A2  0E08               	movlw	8
 33662  0088A4  6EDF               	movwf	indf2,c
 33663                           
 33664                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33665  0088A6  EE20 F002          	lfsr	2,2
 33666  0088AA  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33667  0088AC  26D9               	addwf	fsr2l,f,c
 33668  0088AE  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33669  0088B0  22DA               	addwfc	fsr2h,f,c
 33670  0088B2  0E20               	movlw	32
 33671  0088B4  6EDE               	movwf	postinc2,c
 33672  0088B6  0E0D               	movlw	13
 33673  0088B8  6EDD               	movwf	postdec2,c
 33674                           
 33675                           ; BSR set to: 0
 33676                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 33677  0088BA  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33678  0088BE  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33679  0088C2  0E04               	movlw	4
 33680  0088C4  6EDF               	movwf	indf2,c
 33681                           
 33682                           ; BSR set to: 0
 33683                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33684  0088C6  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33685  0088CA  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33686  0088CE  0E00               	movlw	0
 33687  0088D0  8EDB               	bsf	plusw2,7,c
 33688                           
 33689                           ; BSR set to: 0
 33690                           ;usb_device.c: 1926: }
 33691                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 33692                           
 33693                           ; BSR set to: 0
 33694                           ;usb_device.c: 1915: {
 33695                           ;usb_device.c: 1921: outPipes[0].pFunc();
 33696  0088D2  0100               	movlb	0	; () banked
 33697  0088D4  9FA6               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 33698                           
 33699                           ; BSR set to: 0
 33700                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 33701  0088D6  5048               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 33702  0088D8  A4D8               	btfss	status,2,c
 33703  0088DA  0012               	return	
 33704                           
 33705                           ; BSR set to: 0
 33706                           ;usb_device.c: 1942: {
 33707                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 33708  0088DC  ECBD  F04A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 33709  0088E0  0012               	return	
 33710  0088E2                     __end_of_USBCtrlTrfRxService:
 33711                           	opt stack 0
 33712                           pclatu	equ	0xFFB
 33713                           pclath	equ	0xFFA
 33714                           tblptru	equ	0xFF8
 33715                           tblptrh	equ	0xFF7
 33716                           tblptrl	equ	0xFF6
 33717                           tablat	equ	0xFF5
 33718                           prodh	equ	0xFF4
 33719                           prodl	equ	0xFF3
 33720                           intcon	equ	0xFF2
 33721                           intcon2	equ	0xFF1
 33722                           intcon3	equ	0xFF0
 33723                           indf0	equ	0xFEF
 33724                           postinc0	equ	0xFEE
 33725                           plusw0	equ	0xFEB
 33726                           fsr0h	equ	0xFEA
 33727                           fsr0l	equ	0xFE9
 33728                           wreg	equ	0xFE8
 33729                           indf1	equ	0xFE7
 33730                           postinc1	equ	0xFE6
 33731                           postdec1	equ	0xFE5
 33732                           plusw1	equ	0xFE3
 33733                           fsr1h	equ	0xFE2
 33734                           fsr1l	equ	0xFE1
 33735                           bsr	equ	0xFE0
 33736                           indf2	equ	0xFDF
 33737                           postinc2	equ	0xFDE
 33738                           postdec2	equ	0xFDD
 33739                           plusw2	equ	0xFDB
 33740                           fsr2h	equ	0xFDA
 33741                           fsr2l	equ	0xFD9
 33742                           status	equ	0xFD8
 33743                           
 33744 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 33745 ;; Defined at:
 33746 ;;		line 1416 in file "src/usb/usb_device.c"
 33747 ;; Parameters:    Size  Location     Type
 33748 ;;		None
 33749 ;; Auto vars:     Size  Location     Type
 33750 ;;		None
 33751 ;; Return value:  Size  Location     Type
 33752 ;;		None               void
 33753 ;; Registers used:
 33754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33755 ;; Tracked objects:
 33756 ;;		On entry : 0/0
 33757 ;;		On exit  : 0/0
 33758 ;;		Unchanged: 0/0
 33759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33764 ;;Total ram usage:        0 bytes
 33765 ;; Hardware stack levels used:    1
 33766 ;; Hardware stack levels required when called:    6
 33767 ;; This function calls:
 33768 ;;		Nothing
 33769 ;; This function is called by:
 33770 ;;		_USBDeviceTasks
 33771 ;;		_USBCtrlEPServiceComplete
 33772 ;;		_USBCtrlTrfRxService
 33773 ;; This function uses a non-reentrant model
 33774 ;;
 33775                           
 33776                           	psect	text100
 33777  00957A                     __ptext100:
 33778                           	opt stack 0
 33779  00957A                     _USBCtrlEPAllowStatusStage:
 33780                           	opt stack 7
 33781                           
 33782                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 33783                           
 33784                           ;incstack = 0
 33785  00957A  504A               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 33786  00957C  A4D8               	btfss	status,2,c
 33787  00957E  0012               	return	
 33788                           
 33789                           ;usb_device.c: 1424: {
 33790                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 33791  009580  0E01               	movlw	1
 33792  009582  6E4A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 33793                           
 33794                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 33795  009584  504B               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 33796  009586  A4D8               	btfss	status,2,c
 33797  009588  0012               	return	
 33798                           
 33799                           ;usb_device.c: 1427: {
 33800                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 33801  00958A  0E01               	movlw	1
 33802  00958C  6E4B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 33803                           
 33804                           ;usb_device.c: 1432: if(controlTransferState == 2)
 33805  00958E  0E02               	movlw	2
 33806  009590  184D               	xorwf	_controlTransferState,w,c	;volatile
 33807  009592  A4D8               	btfss	status,2,c
 33808  009594  D016               	goto	i1l10428
 33809                           
 33810                           ;usb_device.c: 1433: {
 33811                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 33812  009596  0100               	movlb	0	; () banked
 33813  009598  EE20 F001          	lfsr	2,1
 33814  00959C  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 33815  00959E  26D9               	addwf	fsr2l,f,c
 33816  0095A0  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 33817  0095A2  22DA               	addwfc	fsr2h,f,c
 33818  0095A4  0E00               	movlw	0
 33819  0095A6  6EDF               	movwf	indf2,c
 33820                           
 33821                           ; BSR set to: 0
 33822                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 33823  0095A8  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 33824  0095AC  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33825  0095B0  0E48               	movlw	72
 33826  0095B2  6EDF               	movwf	indf2,c
 33827                           
 33828                           ; BSR set to: 0
 33829                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33830  0095B4  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 33831  0095B8  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33832  0095BC  0E00               	movlw	0
 33833  0095BE  8EDB               	bsf	plusw2,7,c
 33834                           
 33835                           ;usb_device.c: 1437: }
 33836  0095C0  0012               	return	
 33837  0095C2                     i1l10428:
 33838                           
 33839                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 33840  0095C2  044D               	decf	_controlTransferState,w,c	;volatile
 33841  0095C4  A4D8               	btfss	status,2,c
 33842  0095C6  0012               	return	
 33843                           
 33844                           ;usb_device.c: 1439: {
 33845                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 33846  0095C8  0E00               	movlw	0
 33847  0095CA  6E42               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 33848                           
 33849                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 33850  0095CC  EE20 F001          	lfsr	2,1
 33851  0095D0  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 33852  0095D2  26D9               	addwf	fsr2l,f,c
 33853  0095D4  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33854  0095D6  22DA               	addwfc	fsr2h,f,c
 33855  0095D8  0E08               	movlw	8
 33856  0095DA  6EDF               	movwf	indf2,c
 33857                           
 33858                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 33859  0095DC  EE20 F002          	lfsr	2,2
 33860  0095E0  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 33861  0095E2  26D9               	addwf	fsr2l,f,c
 33862  0095E4  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33863  0095E6  22DA               	addwfc	fsr2h,f,c
 33864  0095E8  0E20               	movlw	32
 33865  0095EA  6EDE               	movwf	postinc2,c
 33866  0095EC  0E0D               	movlw	13
 33867  0095EE  6EDD               	movwf	postdec2,c
 33868                           
 33869                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 33870  0095F0  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33871  0095F4  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33872  0095F8  0E04               	movlw	4
 33873  0095FA  6EDF               	movwf	indf2,c
 33874                           
 33875                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 33876  0095FC  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33877  009600  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33878  009604  0E00               	movlw	0
 33879  009606  8EDB               	bsf	plusw2,7,c
 33880                           
 33881                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 33882  009608  0E01               	movlw	1
 33883  00960A  6E42               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 33884                           
 33885                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 33886  00960C  EE20 F001          	lfsr	2,1
 33887  009610  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33888  009612  26D9               	addwf	fsr2l,f,c
 33889  009614  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33890  009616  22DA               	addwfc	fsr2h,f,c
 33891  009618  0E08               	movlw	8
 33892  00961A  6EDF               	movwf	indf2,c
 33893                           
 33894                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33895  00961C  EE20 F002          	lfsr	2,2
 33896  009620  5038               	movf	_pBDTEntryEP0OutNext,w,c
 33897  009622  26D9               	addwf	fsr2l,f,c
 33898  009624  5039               	movf	_pBDTEntryEP0OutNext+1,w,c
 33899  009626  22DA               	addwfc	fsr2h,f,c
 33900  009628  0E20               	movlw	32
 33901  00962A  6EDE               	movwf	postinc2,c
 33902  00962C  0E0D               	movlw	13
 33903  00962E  6EDD               	movwf	postdec2,c
 33904                           
 33905                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 33906  009630  C038  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33907  009634  C039  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33908  009638  0E80               	movlw	128
 33909  00963A  6EDF               	movwf	indf2,c
 33910  00963C  0012               	return	
 33911  00963E                     __end_of_USBCtrlEPAllowStatusStage:
 33912                           	opt stack 0
 33913                           pclatu	equ	0xFFB
 33914                           pclath	equ	0xFFA
 33915                           tblptru	equ	0xFF8
 33916                           tblptrh	equ	0xFF7
 33917                           tblptrl	equ	0xFF6
 33918                           tablat	equ	0xFF5
 33919                           prodh	equ	0xFF4
 33920                           prodl	equ	0xFF3
 33921                           intcon	equ	0xFF2
 33922                           intcon2	equ	0xFF1
 33923                           intcon3	equ	0xFF0
 33924                           indf0	equ	0xFEF
 33925                           postinc0	equ	0xFEE
 33926                           plusw0	equ	0xFEB
 33927                           fsr0h	equ	0xFEA
 33928                           fsr0l	equ	0xFE9
 33929                           wreg	equ	0xFE8
 33930                           indf1	equ	0xFE7
 33931                           postinc1	equ	0xFE6
 33932                           postdec1	equ	0xFE5
 33933                           plusw1	equ	0xFE3
 33934                           fsr1h	equ	0xFE2
 33935                           fsr1l	equ	0xFE1
 33936                           bsr	equ	0xFE0
 33937                           indf2	equ	0xFDF
 33938                           postinc2	equ	0xFDE
 33939                           postdec2	equ	0xFDD
 33940                           plusw2	equ	0xFDB
 33941                           fsr2h	equ	0xFDA
 33942                           fsr2l	equ	0xFD9
 33943                           status	equ	0xFD8
 33944                           
 33945 ;; *************** function _USBCtrlTrfInHandler *****************
 33946 ;; Defined at:
 33947 ;;		line 2595 in file "src/usb/usb_device.c"
 33948 ;; Parameters:    Size  Location     Type
 33949 ;;		None
 33950 ;; Auto vars:     Size  Location     Type
 33951 ;;  lastDTS         1    1[COMRAM] unsigned char 
 33952 ;; Return value:  Size  Location     Type
 33953 ;;		None               void
 33954 ;; Registers used:
 33955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33956 ;; Tracked objects:
 33957 ;;		On entry : 0/0
 33958 ;;		On exit  : 0/0
 33959 ;;		Unchanged: 0/0
 33960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33965 ;;Total ram usage:        1 bytes
 33966 ;; Hardware stack levels used:    1
 33967 ;; Hardware stack levels required when called:    7
 33968 ;; This function calls:
 33969 ;;		_USBCtrlTrfTxService
 33970 ;; This function is called by:
 33971 ;;		_USBCtrlEPService
 33972 ;; This function uses a non-reentrant model
 33973 ;;
 33974                           
 33975                           	psect	text101
 33976  00963E                     __ptext101:
 33977                           	opt stack 0
 33978  00963E                     _USBCtrlTrfInHandler:
 33979                           	opt stack 8
 33980                           
 33981                           ;usb_device.c: 2597: uint8_t lastDTS;
 33982                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 33983                           
 33984                           ;incstack = 0
 33985  00963E  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 33986  009642  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33987  009646  0E00               	movlw	0
 33988  009648  BCDF               	btfsc	indf2,6,c
 33989  00964A  0E01               	movlw	1
 33990  00964C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 33991                           
 33992                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 33993  00964E  0E04               	movlw	4
 33994  009650  0100               	movlb	0	; () banked
 33995  009652  1BCE               	xorwf	_pBDTEntryIn& (0+255),f,b
 33996                           
 33997                           ; BSR set to: 0
 33998                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 33999  009654  0E08               	movlw	8
 34000  009656  1849               	xorwf	_USBDeviceState,w,c	;volatile
 34001  009658  A4D8               	btfss	status,2,c
 34002  00965A  D00D               	goto	i1l12080
 34003                           
 34004                           ; BSR set to: 0
 34005                           ;usb_device.c: 2608: {
 34006                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 34007  00965C  010D               	movlb	13	; () banked
 34008  00965E  5122               	movf	34,w,b	;volatile
 34009  009660  0B7F               	andlw	127
 34010  009662  010F               	movlb	15	; () banked
 34011  009664  6F38               	movwf	56,b	;volatile
 34012                           
 34013                           ; BSR set to: 15
 34014                           ;usb_device.c: 2610: if(UADDR != 0u)
 34015  009666  010F               	movlb	15	; () banked
 34016  009668  5138               	movf	56,w,b	;volatile
 34017  00966A  B4D8               	btfsc	status,2,c
 34018  00966C  D002               	goto	i1l12078
 34019                           
 34020                           ; BSR set to: 15
 34021                           ;usb_device.c: 2611: {
 34022                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 34023  00966E  0E10               	movlw	16
 34024  009670  D001               	goto	L31
 34025  009672                     i1l12078:
 34026                           
 34027                           ; BSR set to: 15
 34028                           ;usb_device.c: 2614: else
 34029                           ;usb_device.c: 2615: {
 34030                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 34031  009672  0E04               	movlw	4
 34032  009674                     L31:
 34033  009674  6E49               	movwf	_USBDeviceState,c	;volatile
 34034  009676                     i1l12080:
 34035                           
 34036                           ;usb_device.c: 2617: }
 34037                           ;usb_device.c: 2618: }
 34038                           ;usb_device.c: 2621: if(controlTransferState == 1)
 34039  009676  044D               	decf	_controlTransferState,w,c	;volatile
 34040  009678  A4D8               	btfss	status,2,c
 34041  00967A  D03B               	goto	i1l1421
 34042                           
 34043                           ;usb_device.c: 2622: {
 34044                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 34045  00967C  0100               	movlb	0	; () banked
 34046  00967E  EE20 F002          	lfsr	2,2
 34047  009682  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 34048  009684  26D9               	addwf	fsr2l,f,c
 34049  009686  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 34050  009688  22DA               	addwfc	fsr2h,f,c
 34051  00968A  0E28               	movlw	40
 34052  00968C  6EDE               	movwf	postinc2,c
 34053  00968E  0E0D               	movlw	13
 34054  009690  6EDD               	movwf	postdec2,c
 34055                           
 34056                           ; BSR set to: 0
 34057                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 34058  009692  EC24  F049         	call	_USBCtrlTrfTxService	;wreg free
 34059                           
 34060                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 34061  009696  0E02               	movlw	2
 34062  009698  1852               	xorwf	_shortPacketStatus,w,c	;volatile
 34063  00969A  A4D8               	btfss	status,2,c
 34064  00969C  D00D               	goto	i1l12092
 34065                           
 34066                           ;usb_device.c: 2631: {
 34067                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 34068  00969E  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 34069  0096A2  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34070  0096A6  0E04               	movlw	4
 34071  0096A8  6EDF               	movwf	indf2,c
 34072                           
 34073                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 34074  0096AA  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 34075  0096AE  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34076  0096B2  0E00               	movlw	0
 34077  0096B4  8EDB               	bsf	plusw2,7,c
 34078                           
 34079                           ;usb_device.c: 2636: }
 34080  0096B6  0012               	return	
 34081  0096B8                     i1l12092:
 34082                           
 34083                           ;usb_device.c: 2637: else
 34084                           ;usb_device.c: 2638: {
 34085                           ;usb_device.c: 2639: if(lastDTS == 0)
 34086  0096B8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 34087  0096BA  A4D8               	btfss	status,2,c
 34088  0096BC  D00D               	goto	i1l12098
 34089                           
 34090                           ;usb_device.c: 2640: {
 34091                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 34092  0096BE  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 34093  0096C2  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34094  0096C6  0E48               	movlw	72
 34095  0096C8  6EDF               	movwf	indf2,c
 34096                           
 34097                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 34098  0096CA  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 34099  0096CE  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34100  0096D2  0E00               	movlw	0
 34101  0096D4  8EDB               	bsf	plusw2,7,c
 34102                           
 34103                           ;usb_device.c: 2643: }
 34104  0096D6  0012               	return	
 34105  0096D8                     i1l12098:
 34106                           
 34107                           ;usb_device.c: 2644: else
 34108                           ;usb_device.c: 2645: {
 34109                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 34110  0096D8  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 34111  0096DC  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34112  0096E0  0E08               	movlw	8
 34113  0096E2  6EDF               	movwf	indf2,c
 34114                           
 34115                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 34116  0096E4  C0CE  FFD9         	movff	_pBDTEntryIn,fsr2l
 34117  0096E8  C0CF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34118  0096EC  0E00               	movlw	0
 34119  0096EE  8EDB               	bsf	plusw2,7,c
 34120                           
 34121                           ;usb_device.c: 2648: }
 34122                           ;usb_device.c: 2649: }
 34123                           ;usb_device.c: 2650: }
 34124  0096F0  0012               	return	
 34125  0096F2                     i1l1421:
 34126                           
 34127                           ;usb_device.c: 2651: else
 34128                           ;usb_device.c: 2652: {
 34129                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 34130  0096F2  0100               	movlb	0	; () banked
 34131  0096F4  AFA6               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 34132  0096F6  D002               	goto	i1l12104
 34133                           
 34134                           ; BSR set to: 0
 34135                           ;usb_device.c: 2661: }
 34136                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 34137                           
 34138                           ; BSR set to: 0
 34139                           ;usb_device.c: 2659: {
 34140                           ;usb_device.c: 2660: outPipes[0].pFunc();
 34141  0096F8  0100               	movlb	0	; () banked
 34142  0096FA  9FA6               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 34143  0096FC                     i1l12104:
 34144                           
 34145                           ; BSR set to: 0
 34146                           ;usb_device.c: 2663: }
 34147                           ;usb_device.c: 2665: controlTransferState = 0;
 34148  0096FC  0E00               	movlw	0
 34149  0096FE  6E4D               	movwf	_controlTransferState,c	;volatile
 34150  009700  0012               	return	
 34151  009702                     __end_of_USBCtrlTrfInHandler:
 34152                           	opt stack 0
 34153                           pclatu	equ	0xFFB
 34154                           pclath	equ	0xFFA
 34155                           tblptru	equ	0xFF8
 34156                           tblptrh	equ	0xFF7
 34157                           tblptrl	equ	0xFF6
 34158                           tablat	equ	0xFF5
 34159                           prodh	equ	0xFF4
 34160                           prodl	equ	0xFF3
 34161                           intcon	equ	0xFF2
 34162                           intcon2	equ	0xFF1
 34163                           intcon3	equ	0xFF0
 34164                           indf0	equ	0xFEF
 34165                           postinc0	equ	0xFEE
 34166                           plusw0	equ	0xFEB
 34167                           fsr0h	equ	0xFEA
 34168                           fsr0l	equ	0xFE9
 34169                           wreg	equ	0xFE8
 34170                           indf1	equ	0xFE7
 34171                           postinc1	equ	0xFE6
 34172                           postdec1	equ	0xFE5
 34173                           plusw1	equ	0xFE3
 34174                           fsr1h	equ	0xFE2
 34175                           fsr1l	equ	0xFE1
 34176                           bsr	equ	0xFE0
 34177                           indf2	equ	0xFDF
 34178                           postinc2	equ	0xFDE
 34179                           postdec2	equ	0xFDD
 34180                           plusw2	equ	0xFDB
 34181                           fsr2h	equ	0xFDA
 34182                           fsr2l	equ	0xFD9
 34183                           status	equ	0xFD8
 34184                           
 34185 ;; *************** function _USBCtrlTrfTxService *****************
 34186 ;; Defined at:
 34187 ;;		line 1771 in file "src/usb/usb_device.c"
 34188 ;; Parameters:    Size  Location     Type
 34189 ;;		None
 34190 ;; Auto vars:     Size  Location     Type
 34191 ;;  byteToSend      1    0[COMRAM] unsigned char 
 34192 ;; Return value:  Size  Location     Type
 34193 ;;		None               void
 34194 ;; Registers used:
 34195 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34196 ;; Tracked objects:
 34197 ;;		On entry : 0/0
 34198 ;;		On exit  : 0/0
 34199 ;;		Unchanged: 0/0
 34200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34205 ;;Total ram usage:        1 bytes
 34206 ;; Hardware stack levels used:    1
 34207 ;; Hardware stack levels required when called:    6
 34208 ;; This function calls:
 34209 ;;		Nothing
 34210 ;; This function is called by:
 34211 ;;		_USBCtrlEPAllowDataStage
 34212 ;;		_USBCtrlTrfInHandler
 34213 ;; This function uses a non-reentrant model
 34214 ;;
 34215                           
 34216                           	psect	text102
 34217  009248                     __ptext102:
 34218                           	opt stack 0
 34219  009248                     _USBCtrlTrfTxService:
 34220                           	opt stack 6
 34221                           
 34222                           ;usb_device.c: 1773: uint8_t byteToSend;
 34223                           ;usb_device.c: 1777: byteToSend = 8;
 34224                           
 34225                           ;incstack = 0
 34226  009248  0E08               	movlw	8
 34227  00924A  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 34228                           
 34229                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 34230  00924C  0100               	movlb	0	; () banked
 34231  00924E  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 34232  009250  E111               	bnz	i1l10004
 34233  009252  0E08               	movlw	8
 34234  009254  0100               	movlb	0	; () banked
 34235  009256  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 34236  009258  B0D8               	btfsc	status,0,c
 34237  00925A  D00C               	goto	i1l10004
 34238                           
 34239                           ; BSR set to: 0
 34240                           ;usb_device.c: 1779: {
 34241                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 34242  00925C  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 34243                           
 34244                           ; BSR set to: 0
 34245                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 34246  009260  5052               	movf	_shortPacketStatus,w,c	;volatile
 34247  009262  A4D8               	btfss	status,2,c
 34248  009264  D002               	goto	i1l10000
 34249                           
 34250                           ; BSR set to: 0
 34251                           ;usb_device.c: 1788: {
 34252                           ;usb_device.c: 1789: shortPacketStatus = 1;
 34253  009266  0E01               	movlw	1
 34254  009268  D004               	goto	L32
 34255  00926A                     i1l10000:
 34256                           
 34257                           ; BSR set to: 0
 34258                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 34259  00926A  0452               	decf	_shortPacketStatus,w,c	;volatile
 34260  00926C  A4D8               	btfss	status,2,c
 34261  00926E  D002               	goto	i1l10004
 34262                           
 34263                           ; BSR set to: 0
 34264                           ;usb_device.c: 1792: {
 34265                           ;usb_device.c: 1793: shortPacketStatus = 2;
 34266  009270  0E02               	movlw	2
 34267  009272                     L32:
 34268  009272  6E52               	movwf	_shortPacketStatus,c	;volatile
 34269  009274                     i1l10004:
 34270                           
 34271                           ; BSR set to: 0
 34272                           ;usb_device.c: 1794: }
 34273                           ;usb_device.c: 1795: }
 34274                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 34275  009274  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 34276  009276  0100               	movlb	0	; () banked
 34277  009278  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 34278  00927A  0E00               	movlw	0
 34279  00927C  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 34280                           
 34281                           ; BSR set to: 0
 34282                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 34283  00927E  0100               	movlb	0	; () banked
 34284  009280  EE20 F001          	lfsr	2,1
 34285  009284  51CE               	movf	_pBDTEntryIn& (0+255),w,b
 34286  009286  26D9               	addwf	fsr2l,f,c
 34287  009288  51CF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 34288  00928A  22DA               	addwfc	fsr2h,f,c
 34289  00928C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 34290                           
 34291                           ; BSR set to: 0
 34292                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 34293  009290  0E28               	movlw	40
 34294  009292  6E3A               	movwf	_pDst,c
 34295  009294  0E0D               	movlw	13
 34296  009296  6E3B               	movwf	_pDst+1,c
 34297                           
 34298                           ; BSR set to: 0
 34299                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 34300  009298  0100               	movlb	0	; () banked
 34301  00929A  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 34302  00929C  D01D               	goto	i1l10022
 34303  00929E  D03C               	goto	i1l10032
 34304  0092A0                     i1l10014:
 34305                           
 34306                           ; BSR set to: 0
 34307                           ;usb_device.c: 1812: {
 34308                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 34309  0092A0  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 34310  0092A4  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 34311  0092A8  0E00               	movlw	low (__mediumconst shr (0+16))
 34312  0092AA  6EF8               	movwf	tblptru,c
 34313  0092AC  C03A  FFD9         	movff	_pDst,fsr2l
 34314  0092B0  C03B  FFDA         	movff	_pDst+1,fsr2h
 34315  0092B4  0E0E               	movlw	(high __ramtop+-1)
 34316  0092B6  64F7               	cpfsgt	tblptrh,c
 34317  0092B8  D003               	bra	i1u902_27
 34318  0092BA  0008               	tblrd		*
 34319  0092BC  50F5               	movf	tablat,w,c
 34320  0092BE  D005               	bra	i1u902_20
 34321  0092C0                     i1u902_27:
 34322  0092C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 34323  0092C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 34324  0092C8  50EF               	movf	indf0,w,c
 34325  0092CA                     i1u902_20:
 34326  0092CA  6EDF               	movwf	indf2,c
 34327  0092CC  0100               	movlb	0	; () banked
 34328  0092CE  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 34329  0092D0  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 34330                           
 34331                           ; BSR set to: 0
 34332  0092D2  4A3A               	infsnz	_pDst,f,c
 34333  0092D4  2A3B               	incf	_pDst+1,f,c
 34334                           
 34335                           ; BSR set to: 0
 34336                           ;usb_device.c: 1814: byteToSend--;
 34337  0092D6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 34338  0092D8                     i1l10022:
 34339                           
 34340                           ; BSR set to: 0
 34341  0092D8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 34342  0092DA  B4D8               	btfsc	status,2,c
 34343  0092DC  0012               	return	
 34344  0092DE  D7E0               	goto	i1l10014
 34345  0092E0                     i1l10024:
 34346                           
 34347                           ; BSR set to: 0
 34348                           ;usb_device.c: 1820: {
 34349                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 34350  0092E0  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 34351  0092E4  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 34352  0092E8  0E00               	movlw	low (__mediumconst shr (0+16))
 34353  0092EA  6EF8               	movwf	tblptru,c
 34354  0092EC  C03A  FFD9         	movff	_pDst,fsr2l
 34355  0092F0  C03B  FFDA         	movff	_pDst+1,fsr2h
 34356  0092F4  0E0E               	movlw	(high __ramtop+-1)
 34357  0092F6  64F7               	cpfsgt	tblptrh,c
 34358  0092F8  D003               	bra	i1u904_27
 34359  0092FA  0008               	tblrd		*
 34360  0092FC  50F5               	movf	tablat,w,c
 34361  0092FE  D005               	bra	i1u904_20
 34362  009300                     i1u904_27:
 34363  009300  CFF6 FFE9          	movff	tblptrl,fsr0l
 34364  009304  CFF7 FFEA          	movff	tblptrh,fsr0h
 34365  009308  50EF               	movf	indf0,w,c
 34366  00930A                     i1u904_20:
 34367  00930A  6EDF               	movwf	indf2,c
 34368  00930C  0100               	movlb	0	; () banked
 34369  00930E  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 34370  009310  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 34371                           
 34372                           ; BSR set to: 0
 34373  009312  4A3A               	infsnz	_pDst,f,c
 34374  009314  2A3B               	incf	_pDst+1,f,c
 34375                           
 34376                           ; BSR set to: 0
 34377                           ;usb_device.c: 1822: byteToSend--;
 34378  009316  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 34379  009318                     i1l10032:
 34380                           
 34381                           ; BSR set to: 0
 34382  009318  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 34383  00931A  B4D8               	btfsc	status,2,c
 34384  00931C  0012               	return	
 34385  00931E  D7E0               	goto	i1l10024
 34386  009320                     __end_of_USBCtrlTrfTxService:
 34387                           	opt stack 0
 34388                           pclatu	equ	0xFFB
 34389                           pclath	equ	0xFFA
 34390                           tblptru	equ	0xFF8
 34391                           tblptrh	equ	0xFF7
 34392                           tblptrl	equ	0xFF6
 34393                           tablat	equ	0xFF5
 34394                           prodh	equ	0xFF4
 34395                           prodl	equ	0xFF3
 34396                           intcon	equ	0xFF2
 34397                           intcon2	equ	0xFF1
 34398                           intcon3	equ	0xFF0
 34399                           indf0	equ	0xFEF
 34400                           postinc0	equ	0xFEE
 34401                           plusw0	equ	0xFEB
 34402                           fsr0h	equ	0xFEA
 34403                           fsr0l	equ	0xFE9
 34404                           wreg	equ	0xFE8
 34405                           indf1	equ	0xFE7
 34406                           postinc1	equ	0xFE6
 34407                           postdec1	equ	0xFE5
 34408                           plusw1	equ	0xFE3
 34409                           fsr1h	equ	0xFE2
 34410                           fsr1l	equ	0xFE1
 34411                           bsr	equ	0xFE0
 34412                           indf2	equ	0xFDF
 34413                           postinc2	equ	0xFDE
 34414                           postdec2	equ	0xFDD
 34415                           plusw2	equ	0xFDB
 34416                           fsr2h	equ	0xFDA
 34417                           fsr2l	equ	0xFD9
 34418                           status	equ	0xFD8
 34419                           
 34420 ;; *************** function _SYS_InterruptHigh *****************
 34421 ;; Defined at:
 34422 ;;		line 821 in file "src/main.c"
 34423 ;; Parameters:    Size  Location     Type
 34424 ;;		None
 34425 ;; Auto vars:     Size  Location     Type
 34426 ;;		None
 34427 ;; Return value:  Size  Location     Type
 34428 ;;		None               void
 34429 ;; Registers used:
 34430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34431 ;; Tracked objects:
 34432 ;;		On entry : 0/0
 34433 ;;		On exit  : 0/0
 34434 ;;		Unchanged: 0/0
 34435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34438 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34439 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34440 ;;Total ram usage:       14 bytes
 34441 ;; Hardware stack levels used:    1
 34442 ;; Hardware stack levels required when called:    5
 34443 ;; This function calls:
 34444 ;;		_MIWIInterruptHandler
 34445 ;; This function is called by:
 34446 ;;		Interrupt level 2
 34447 ;; This function uses a non-reentrant model
 34448 ;;
 34449                           
 34450                           	psect	intcode
 34451  000008                     __pintcode:
 34452                           	opt stack 0
 34453  000008                     _SYS_InterruptHigh:
 34454                           	opt stack 3
 34455                           
 34456                           ; BSR set to: 0
 34457                           ;incstack = 0
 34458  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34459  00000A  CFFA F095          	movff	pclath,??_SYS_InterruptHigh
 34460  00000E  CFFB F096          	movff	pclatu,??_SYS_InterruptHigh+1
 34461  000012  EF04  F053         	goto	int_func
 34462                           pclatu	equ	0xFFB
 34463                           pclath	equ	0xFFA
 34464                           tblptru	equ	0xFF8
 34465                           tblptrh	equ	0xFF7
 34466                           tblptrl	equ	0xFF6
 34467                           tablat	equ	0xFF5
 34468                           prodh	equ	0xFF4
 34469                           prodl	equ	0xFF3
 34470                           intcon	equ	0xFF2
 34471                           intcon2	equ	0xFF1
 34472                           intcon3	equ	0xFF0
 34473                           indf0	equ	0xFEF
 34474                           postinc0	equ	0xFEE
 34475                           plusw0	equ	0xFEB
 34476                           fsr0h	equ	0xFEA
 34477                           fsr0l	equ	0xFE9
 34478                           wreg	equ	0xFE8
 34479                           indf1	equ	0xFE7
 34480                           postinc1	equ	0xFE6
 34481                           postdec1	equ	0xFE5
 34482                           plusw1	equ	0xFE3
 34483                           fsr1h	equ	0xFE2
 34484                           fsr1l	equ	0xFE1
 34485                           bsr	equ	0xFE0
 34486                           indf2	equ	0xFDF
 34487                           postinc2	equ	0xFDE
 34488                           postdec2	equ	0xFDD
 34489                           plusw2	equ	0xFDB
 34490                           fsr2h	equ	0xFDA
 34491                           fsr2l	equ	0xFD9
 34492                           status	equ	0xFD8
 34493                           
 34494                           	psect	intcode_body
 34495  00A608                     __pintcode_body:
 34496                           	opt stack 3
 34497  00A608                     int_func:
 34498                           	opt stack 3
 34499  00A608  CFE9 F097          	movff	fsr0l,??_SYS_InterruptHigh+2
 34500  00A60C  CFEA F098          	movff	fsr0h,??_SYS_InterruptHigh+3
 34501  00A610  CFE1 F099          	movff	fsr1l,??_SYS_InterruptHigh+4
 34502  00A614  CFE2 F09A          	movff	fsr1h,??_SYS_InterruptHigh+5
 34503  00A618  CFD9 F09B          	movff	fsr2l,??_SYS_InterruptHigh+6
 34504  00A61C  CFDA F09C          	movff	fsr2h,??_SYS_InterruptHigh+7
 34505  00A620  CFF3 F09D          	movff	prodl,??_SYS_InterruptHigh+8
 34506  00A624  CFF4 F09E          	movff	prodh,??_SYS_InterruptHigh+9
 34507  00A628  CFF6 F09F          	movff	tblptrl,??_SYS_InterruptHigh+10
 34508  00A62C  CFF7 F0A0          	movff	tblptrh,??_SYS_InterruptHigh+11
 34509  00A630  CFF8 F0A1          	movff	tblptru,??_SYS_InterruptHigh+12
 34510  00A634  CFF5 F0A2          	movff	tablat,??_SYS_InterruptHigh+13
 34511                           
 34512                           ;main.c: 823: MIWIInterruptHandler();
 34513  00A638  EC35  F027         	call	_MIWIInterruptHandler	;wreg free
 34514  00A63C  C0A2  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 34515  00A640  C0A1  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 34516  00A644  C0A0  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 34517  00A648  C09F  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 34518  00A64C  C09E  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 34519  00A650  C09D  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 34520  00A654  C09C  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 34521  00A658  C09B  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 34522  00A65C  C09A  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 34523  00A660  C099  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 34524  00A664  C098  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 34525  00A668  C097  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 34526  00A66C  C096  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 34527  00A670  C095  FFFA         	movff	??_SYS_InterruptHigh,pclath
 34528  00A674  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34529  00A676  0011               	retfie		f
 34530  00A678                     __end_of_SYS_InterruptHigh:
 34531                           	opt stack 0
 34532                           pclatu	equ	0xFFB
 34533                           pclath	equ	0xFFA
 34534                           tblptru	equ	0xFF8
 34535                           tblptrh	equ	0xFF7
 34536                           tblptrl	equ	0xFF6
 34537                           tablat	equ	0xFF5
 34538                           prodh	equ	0xFF4
 34539                           prodl	equ	0xFF3
 34540                           intcon	equ	0xFF2
 34541                           intcon2	equ	0xFF1
 34542                           intcon3	equ	0xFF0
 34543                           indf0	equ	0xFEF
 34544                           postinc0	equ	0xFEE
 34545                           plusw0	equ	0xFEB
 34546                           fsr0h	equ	0xFEA
 34547                           fsr0l	equ	0xFE9
 34548                           wreg	equ	0xFE8
 34549                           indf1	equ	0xFE7
 34550                           postinc1	equ	0xFE6
 34551                           postdec1	equ	0xFE5
 34552                           plusw1	equ	0xFE3
 34553                           fsr1h	equ	0xFE2
 34554                           fsr1l	equ	0xFE1
 34555                           bsr	equ	0xFE0
 34556                           indf2	equ	0xFDF
 34557                           postinc2	equ	0xFDE
 34558                           postdec2	equ	0xFDD
 34559                           plusw2	equ	0xFDB
 34560                           fsr2h	equ	0xFDA
 34561                           fsr2l	equ	0xFD9
 34562                           status	equ	0xFD8
 34563                           
 34564 ;; *************** function _MIWIInterruptHandler *****************
 34565 ;; Defined at:
 34566 ;;		line 1248 in file "src/miwi/drv_mrf_miwi_89xa.c"
 34567 ;; Parameters:    Size  Location     Type
 34568 ;;		None
 34569 ;; Auto vars:     Size  Location     Type
 34570 ;;  ackInfoIndex    1   49[BANK0 ] unsigned char 
 34571 ;;  i               1   52[BANK0 ] unsigned char 
 34572 ;;  fifo_stat       1   42[BANK0 ] unsigned char 
 34573 ;;  ackPacket       4   43[BANK0 ] unsigned char [4]
 34574 ;;  counter         2   40[BANK0 ] unsigned int 
 34575 ;;  BankIndex       1   51[BANK0 ] unsigned char 
 34576 ;;  PacketLen       1   50[BANK0 ] unsigned char 
 34577 ;;  RxPacketPtr     1   48[BANK0 ] unsigned char 
 34578 ;;  bAck            1   47[BANK0 ] unsigned char 
 34579 ;; Return value:  Size  Location     Type
 34580 ;;		None               void
 34581 ;; Registers used:
 34582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34583 ;; Tracked objects:
 34584 ;;		On entry : 0/0
 34585 ;;		On exit  : 0/0
 34586 ;;		Unchanged: 0/0
 34587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34589 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34590 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34591 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34592 ;;Total ram usage:       19 bytes
 34593 ;; Hardware stack levels used:    1
 34594 ;; Hardware stack levels required when called:    4
 34595 ;; This function calls:
 34596 ;;		i2_MiWi_TickGet
 34597 ;;		i2_RegisterRead
 34598 ;;		i2_SPIGet
 34599 ;;		i2_TxPacket
 34600 ;;		i2_update_LED
 34601 ;; This function is called by:
 34602 ;;		_SYS_InterruptHigh
 34603 ;; This function uses a non-reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text104
 34607  004E6A                     __ptext104:
 34608                           	opt stack 0
 34609  004E6A                     _MIWIInterruptHandler:
 34610                           	opt stack 3
 34611                           
 34612                           ;drv_mrf_miwi_89xa.c: 1250: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 34613                           
 34614                           ;incstack = 0
 34615  004E6A  B0F0               	btfsc	intcon3,0,c	;volatile
 34616  004E6C  A6F0               	btfss	intcon3,3,c	;volatile
 34617  004E6E  D280               	goto	i2l18542
 34618                           
 34619                           ;drv_mrf_miwi_89xa.c: 1251: {
 34620                           ;drv_mrf_miwi_89xa.c: 1252: INTCON3bits.INT1IF = 0;
 34621  004E70  90F0               	bcf	intcon3,0,c	;volatile
 34622                           
 34623                           ;drv_mrf_miwi_89xa.c: 1258: if(RF_Mode == 0x60)
 34624  004E72  0E60               	movlw	96
 34625  004E74  0100               	movlb	0	; () banked
 34626  004E76  19DD               	xorwf	_RF_Mode& (0+255),w,b
 34627  004E78  A4D8               	btfss	status,2,c
 34628  004E7A  D275               	goto	i2l18536
 34629                           
 34630                           ; BSR set to: 0
 34631                           ;drv_mrf_miwi_89xa.c: 1259: {
 34632                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t RxPacketPtr;
 34633                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t PacketLen;
 34634                           ;drv_mrf_miwi_89xa.c: 1262: uint8_t BankIndex;
 34635                           ;drv_mrf_miwi_89xa.c: 1263: uint16_t counter;
 34636                           ;drv_mrf_miwi_89xa.c: 1264: bool bAck;
 34637                           ;drv_mrf_miwi_89xa.c: 1265: uint8_t ackPacket[4];
 34638                           ;drv_mrf_miwi_89xa.c: 1271: RSSILock = RSSIVal;
 34639  004E7C  C0DE  F1C5         	movff	_RSSIVal,_RSSILock
 34640                           
 34641                           ;drv_mrf_miwi_89xa.c: 1273: LATCbits.LATC6 = 0;
 34642  004E80  9C8B               	bcf	3979,6,c	;volatile
 34643                           
 34644                           ; BSR set to: 0
 34645                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPIGet();
 34646  004E82  ECC0  F057         	call	i2_SPIGet	;wreg free
 34647  004E86  0100               	movlb	0	; () banked
 34648  004E88  6F92               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 34649                           
 34650                           ; BSR set to: 0
 34651                           ;drv_mrf_miwi_89xa.c: 1275: LATCbits.LATC6 = 1;
 34652  004E8A  8C8B               	bsf	3979,6,c	;volatile
 34653                           
 34654                           ; BSR set to: 0
 34655                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 34656  004E8C  0E00               	movlw	0
 34657  004E8E  0100               	movlb	0	; () banked
 34658  004E90  6F93               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 34659  004E92                     i2l18376:
 34660                           
 34661                           ; BSR set to: 0
 34662  004E92  0E01               	movlw	1
 34663  004E94  0100               	movlb	0	; () banked
 34664  004E96  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 34665  004E98  D001               	goto	i2l18380
 34666  004E9A  D00F               	goto	i2l18388
 34667  004E9C                     i2l18380:
 34668                           
 34669                           ; BSR set to: 0
 34670                           ;drv_mrf_miwi_89xa.c: 1279: {
 34671                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 34672  004E9C  0100               	movlb	0	; () banked
 34673  004E9E  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 34674  004EA0  0D42               	mullw	66
 34675  004EA2  0E00               	movlw	low _RxPacket
 34676  004EA4  24F3               	addwf	prodl,w,c
 34677  004EA6  6ED9               	movwf	fsr2l,c
 34678  004EA8  0E03               	movlw	high _RxPacket
 34679  004EAA  20F4               	addwfc	prodh,w,c
 34680  004EAC  6EDA               	movwf	fsr2h,c
 34681  004EAE  0103               	movlb	3	; () banked
 34682  004EB0  A0DF               	btfss	indf2,0,c
 34683  004EB2  D003               	goto	i2l18388
 34684                           
 34685                           ; BSR set to: 3
 34686                           
 34687                           ; BSR set to: 3
 34688                           
 34689                           ; BSR set to: 3
 34690                           ;drv_mrf_miwi_89xa.c: 1281: {
 34691                           ;drv_mrf_miwi_89xa.c: 1282: break;
 34692  004EB4  0100               	movlb	0	; () banked
 34693  004EB6  2B93               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 34694  004EB8  D7EC               	goto	i2l18376
 34695  004EBA                     i2l18388:
 34696                           
 34697                           ;drv_mrf_miwi_89xa.c: 1283: }
 34698                           ;drv_mrf_miwi_89xa.c: 1284: }
 34699                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 34700  004EBA  0E02               	movlw	2
 34701  004EBC  0100               	movlb	0	; () banked
 34702  004EBE  1992               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 34703  004EC0  A4D8               	btfss	status,2,c
 34704  004EC2  D002               	goto	i2l18392
 34705                           
 34706                           ; BSR set to: 0
 34707                           ;drv_mrf_miwi_89xa.c: 1288: {
 34708                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 34709  004EC4  0E01               	movlw	1
 34710  004EC6  D001               	goto	L33
 34711  004EC8                     i2l18392:
 34712                           
 34713                           ; BSR set to: 0
 34714                           ;drv_mrf_miwi_89xa.c: 1291: else
 34715                           ;drv_mrf_miwi_89xa.c: 1292: {
 34716                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 34717  004EC8  0E00               	movlw	0
 34718  004ECA                     L33:
 34719  004ECA  0100               	movlb	0	; () banked
 34720  004ECC  6F8F               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 34721                           
 34722                           ; BSR set to: 0
 34723                           ;drv_mrf_miwi_89xa.c: 1294: }
 34724                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 34725                           
 34726                           ; BSR set to: 0
 34727  004ECE  0E40               	movlw	64
 34728  004ED0  0100               	movlb	0	; () banked
 34729  004ED2  6192               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 34730  004ED4  D00E               	goto	i2l18402
 34731                           
 34732                           ; BSR set to: 0
 34733  004ED6  0100               	movlb	0	; () banked
 34734  004ED8  5192               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 34735  004EDA  0100               	movlb	0	; () banked
 34736  004EDC  B4D8               	btfsc	status,2,c
 34737  004EDE  D009               	goto	i2l18402
 34738                           
 34739                           ; BSR set to: 0
 34740  004EE0  0E01               	movlw	1
 34741  004EE2  0100               	movlb	0	; () banked
 34742  004EE4  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 34743  004EE6  D016               	goto	i2l18412
 34744                           
 34745                           ; BSR set to: 0
 34746  004EE8  0100               	movlb	0	; () banked
 34747  004EEA  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 34748  004EEC  0100               	movlb	0	; () banked
 34749  004EEE  A4D8               	btfss	status,2,c
 34750  004EF0  D011               	goto	i2l18412
 34751  004EF2                     i2l18402:
 34752                           
 34753                           ; BSR set to: 0
 34754                           ;drv_mrf_miwi_89xa.c: 1300: {
 34755                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 34756  004EF2  0E1A               	movlw	26
 34757  004EF4  ECB9  F054         	call	i2_RegisterRead
 34758  004EF8  D007               	goto	L34
 34759  004EFA                     i2l410:
 34760                           
 34761                           ; BSR set to: 0
 34762                           ;drv_mrf_miwi_89xa.c: 1303: {
 34763                           ;drv_mrf_miwi_89xa.c: 1304: LATCbits.LATC6 = 0;
 34764  004EFA  9C8B               	bcf	3979,6,c	;volatile
 34765                           
 34766                           ; BSR set to: 0
 34767                           ;drv_mrf_miwi_89xa.c: 1305: SPIGet();
 34768  004EFC  ECC0  F057         	call	i2_SPIGet	;wreg free
 34769                           
 34770                           ;drv_mrf_miwi_89xa.c: 1306: LATCbits.LATC6 = 1;
 34771  004F00  8C8B               	bsf	3979,6,c	;volatile
 34772                           
 34773                           ;drv_mrf_miwi_89xa.c: 1307: fifo_stat = RegisterRead(0x1A00>>8);
 34774  004F02  0E1A               	movlw	26
 34775  004F04  ECB9  F054         	call	i2_RegisterRead
 34776  004F08                     L34:
 34777  004F08  0100               	movlb	0	; () banked
 34778  004F0A  6F8A               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 34779                           
 34780                           ; BSR set to: 0
 34781                           
 34782                           ; BSR set to: 0
 34783  004F0C  0100               	movlb	0	; () banked
 34784  004F0E  A38A               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 34785  004F10  D22D               	goto	i2l18538
 34786  004F12  D7F3               	goto	i2l410
 34787  004F14                     i2l18412:
 34788                           
 34789                           ; BSR set to: 0
 34790                           ;drv_mrf_miwi_89xa.c: 1311: }
 34791                           ;drv_mrf_miwi_89xa.c: 1313: RxPacketPtr = 0;
 34792  004F14  0E00               	movlw	0
 34793  004F16  0100               	movlb	0	; () banked
 34794  004F18  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 34795                           
 34796                           ; BSR set to: 0
 34797                           ;drv_mrf_miwi_89xa.c: 1314: counter = PacketLen;
 34798  004F1A  C092  F088         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 34799  004F1E  0100               	movlb	0	; () banked
 34800  004F20  6B89               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 34801                           
 34802                           ;drv_mrf_miwi_89xa.c: 1316: while(counter >= 1)
 34803  004F22  D21A               	goto	i2l18534
 34804  004F24                     i2l18416:
 34805                           
 34806                           ; BSR set to: 0
 34807                           ;drv_mrf_miwi_89xa.c: 1319: if(1)
 34808  004F24  0100               	movlb	0	; () banked
 34809  004F26  0788               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 34810  004F28  A0D8               	btfss	status,0,c
 34811  004F2A  0789               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 34812                           
 34813                           ; BSR set to: 0
 34814                           ;drv_mrf_miwi_89xa.c: 1320: {
 34815                           ;drv_mrf_miwi_89xa.c: 1322: if( bAck )
 34816  004F2C  0100               	movlb	0	; () banked
 34817  004F2E  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 34818  004F30  0100               	movlb	0	; () banked
 34819  004F32  B4D8               	btfsc	status,2,c
 34820  004F34  D010               	goto	i2l416
 34821                           
 34822                           ; BSR set to: 0
 34823                           ;drv_mrf_miwi_89xa.c: 1323: {
 34824                           ;drv_mrf_miwi_89xa.c: 1324: LATCbits.LATC6 = 0;
 34825  004F36  9C8B               	bcf	3979,6,c	;volatile
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;drv_mrf_miwi_89xa.c: 1325: ackPacket[RxPacketPtr++] = SPIGet();
 34829  004F38  0100               	movlb	0	; () banked
 34830  004F3A  5190               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 34831  004F3C  0D01               	mullw	1
 34832  004F3E  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 34833  004F40  24F3               	addwf	prodl,w,c
 34834  004F42  6ED9               	movwf	fsr2l,c
 34835  004F44  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 34836  004F46  20F4               	addwfc	prodh,w,c
 34837  004F48  6EDA               	movwf	fsr2h,c
 34838  004F4A  ECC0  F057         	call	i2_SPIGet	;wreg free
 34839  004F4E  D024               	goto	L35
 34840  004F50                     i2l18424:
 34841  004F50  0100               	movlb	0	; () banked
 34842  004F52  2B90               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 34843  004F54  D023               	goto	i2l18432
 34844  004F56                     i2l416:
 34845                           
 34846                           ; BSR set to: 0
 34847                           ;drv_mrf_miwi_89xa.c: 1329: else
 34848                           ;drv_mrf_miwi_89xa.c: 1330: {
 34849                           ;drv_mrf_miwi_89xa.c: 1331: LATCbits.LATC6 = 0;
 34850  004F56  9C8B               	bcf	3979,6,c	;volatile
 34851                           
 34852                           ; BSR set to: 0
 34853                           ;drv_mrf_miwi_89xa.c: 1332: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 34854  004F58  0100               	movlb	0	; () banked
 34855  004F5A  5190               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 34856  004F5C  0D01               	mullw	1
 34857  004F5E  0E01               	movlw	1
 34858  004F60  26F3               	addwf	prodl,f,c
 34859  004F62  0E00               	movlw	0
 34860  004F64  22F4               	addwfc	prodh,f,c
 34861  004F66  0E00               	movlw	low _RxPacket
 34862  004F68  0100               	movlb	0	; () banked
 34863  004F6A  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 34864  004F6C  0E03               	movlw	high _RxPacket
 34865  004F6E  0100               	movlb	0	; () banked
 34866  004F70  6F83               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 34867  004F72  50F3               	movf	prodl,w,c
 34868  004F74  0100               	movlb	0	; () banked
 34869  004F76  2782               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 34870  004F78  50F4               	movf	prodh,w,c
 34871  004F7A  0100               	movlb	0	; () banked
 34872  004F7C  2383               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 34873  004F7E  0100               	movlb	0	; () banked
 34874  004F80  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 34875  004F82  0D42               	mullw	66
 34876  004F84  50F3               	movf	prodl,w,c
 34877  004F86  0100               	movlb	0	; () banked
 34878  004F88  2582               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 34879  004F8A  6ED9               	movwf	fsr2l,c
 34880  004F8C  50F4               	movf	prodh,w,c
 34881  004F8E  0100               	movlb	0	; () banked
 34882  004F90  2183               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 34883  004F92  6EDA               	movwf	fsr2h,c
 34884  004F94  ECC0  F057         	call	i2_SPIGet	;wreg free
 34885  004F98                     L35:
 34886  004F98  6EDF               	movwf	indf2,c
 34887  004F9A  D7DA               	goto	i2l18424
 34888  004F9C                     i2l18432:
 34889                           
 34890                           ; BSR set to: 0
 34891                           ;drv_mrf_miwi_89xa.c: 1333: LATCbits.LATC6 = 1;
 34892  004F9C  8C8B               	bsf	3979,6,c	;volatile
 34893                           
 34894                           ; BSR set to: 0
 34895                           ;drv_mrf_miwi_89xa.c: 1334: }
 34896                           ;drv_mrf_miwi_89xa.c: 1337: if( RxPacketPtr >= PacketLen )
 34897                           
 34898                           ; BSR set to: 0
 34899  004F9E  0100               	movlb	0	; () banked
 34900  004FA0  5192               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 34901  004FA2  0100               	movlb	0	; () banked
 34902  004FA4  5D90               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 34903  004FA6  A0D8               	btfss	status,0,c
 34904  004FA8  D1D7               	goto	i2l18534
 34905                           
 34906                           ; BSR set to: 0
 34907                           ;drv_mrf_miwi_89xa.c: 1338: {
 34908                           ;drv_mrf_miwi_89xa.c: 1339: uint8_t i;
 34909                           ;drv_mrf_miwi_89xa.c: 1341: if( bAck )
 34910  004FAA  0100               	movlb	0	; () banked
 34911  004FAC  518F               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 34912  004FAE  0100               	movlb	0	; () banked
 34913  004FB0  B4D8               	btfsc	status,2,c
 34914  004FB2  D039               	goto	i2l419
 34915                           
 34916                           ; BSR set to: 0
 34917                           ;drv_mrf_miwi_89xa.c: 1342: {
 34918                           ;drv_mrf_miwi_89xa.c: 1344: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 34919  004FB4  0100               	movlb	0	; () banked
 34920  004FB6  518B               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 34921  004FB8  0B03               	andlw	3
 34922  004FBA  0A02               	xorlw	2
 34923  004FBC  A4D8               	btfss	status,2,c
 34924  004FBE  D00D               	goto	i2l18446
 34925                           
 34926                           ; BSR set to: 0
 34927                           ;drv_mrf_miwi_89xa.c: 1345: {
 34928                           ;drv_mrf_miwi_89xa.c: 1346: if( ackPacket[1] == TxMACSeq )
 34929  004FC0  0100               	movlb	0	; () banked
 34930  004FC2  51DF               	movf	_TxMACSeq& (0+255),w,b
 34931  004FC4  0100               	movlb	0	; () banked
 34932  004FC6  198C               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 34933  004FC8  A4D8               	btfss	status,2,c
 34934  004FCA  D003               	goto	i2l421
 34935                           
 34936                           ; BSR set to: 0
 34937                           ;drv_mrf_miwi_89xa.c: 1347: {
 34938                           ;drv_mrf_miwi_89xa.c: 1348: hasAck = 1;
 34939  004FCC  0E01               	movlw	1
 34940  004FCE  0100               	movlb	0	; () banked
 34941  004FD0  6FE0               	movwf	_hasAck& (0+255),b	;volatile
 34942  004FD2                     i2l421:
 34943                           
 34944                           ; BSR set to: 0
 34945                           ;drv_mrf_miwi_89xa.c: 1349: }
 34946                           ;drv_mrf_miwi_89xa.c: 1350: RxPacketPtr = 0;
 34947  004FD2  0E00               	movlw	0
 34948  004FD4  0100               	movlb	0	; () banked
 34949  004FD6  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 34950                           
 34951                           ;drv_mrf_miwi_89xa.c: 1351: goto RETURN_HERE;
 34952  004FD8  D1C9               	goto	i2l18538
 34953  004FDA                     i2l18446:
 34954                           
 34955                           ; BSR set to: 0
 34956                           ;drv_mrf_miwi_89xa.c: 1353: else
 34957                           ;drv_mrf_miwi_89xa.c: 1355: if( BankIndex >= 2 )
 34958  004FDA  0E01               	movlw	1
 34959  004FDC  0100               	movlb	0	; () banked
 34960  004FDE  6593               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 34961  004FE0  D004               	goto	i2l18450
 34962                           
 34963                           ; BSR set to: 0
 34964                           ;drv_mrf_miwi_89xa.c: 1356: {
 34965                           ;drv_mrf_miwi_89xa.c: 1357: RxPacketPtr = 0;
 34966  004FE2  0E00               	movlw	0
 34967  004FE4  0100               	movlb	0	; () banked
 34968  004FE6  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 34969                           
 34970                           ;drv_mrf_miwi_89xa.c: 1358: goto IGNORE_HERE;
 34971  004FE8  D784               	goto	i2l18402
 34972  004FEA                     i2l18450:
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;drv_mrf_miwi_89xa.c: 1359: }
 34976                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 34977  004FEA  0100               	movlb	0	; () banked
 34978  004FEC  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 34979  004FEE  0D42               	mullw	66
 34980  004FF0  0E01               	movlw	1
 34981  004FF2  26F3               	addwf	prodl,f,c
 34982  004FF4  0E00               	movlw	0
 34983  004FF6  22F4               	addwfc	prodh,f,c
 34984  004FF8  0E00               	movlw	low _RxPacket
 34985  004FFA  24F3               	addwf	prodl,w,c
 34986  004FFC  6ED9               	movwf	fsr2l,c
 34987  004FFE  0E03               	movlw	high _RxPacket
 34988  005000  20F4               	addwfc	prodh,w,c
 34989  005002  6EDA               	movwf	fsr2h,c
 34990  005004  C08B  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 34991                           
 34992                           ;drv_mrf_miwi_89xa.c: 1361: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 34993  005008  0100               	movlb	0	; () banked
 34994  00500A  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 34995  00500C  0D42               	mullw	66
 34996  00500E  0E02               	movlw	2
 34997  005010  26F3               	addwf	prodl,f,c
 34998  005012  0E00               	movlw	0
 34999  005014  22F4               	addwfc	prodh,f,c
 35000  005016  0E00               	movlw	low _RxPacket
 35001  005018  24F3               	addwf	prodl,w,c
 35002  00501A  6ED9               	movwf	fsr2l,c
 35003  00501C  0E03               	movlw	high _RxPacket
 35004  00501E  20F4               	addwfc	prodh,w,c
 35005  005020  6EDA               	movwf	fsr2h,c
 35006  005022  C08C  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 35007  005026                     i2l419:
 35008                           
 35009                           ; BSR set to: 0
 35010                           ;drv_mrf_miwi_89xa.c: 1363: }
 35011                           ;drv_mrf_miwi_89xa.c: 1365: RxPacket[BankIndex].PayloadLen = PacketLen;
 35012  005026  0100               	movlb	0	; () banked
 35013  005028  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35014  00502A  0D42               	mullw	66
 35015  00502C  0E41               	movlw	65
 35016  00502E  26F3               	addwf	prodl,f,c
 35017  005030  0E00               	movlw	0
 35018  005032  22F4               	addwfc	prodh,f,c
 35019  005034  0E00               	movlw	low _RxPacket
 35020  005036  24F3               	addwf	prodl,w,c
 35021  005038  6ED9               	movwf	fsr2l,c
 35022  00503A  0E03               	movlw	high _RxPacket
 35023  00503C  20F4               	addwfc	prodh,w,c
 35024  00503E  6EDA               	movwf	fsr2h,c
 35025  005040  C092  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 35026                           
 35027                           ; BSR set to: 0
 35028                           ;drv_mrf_miwi_89xa.c: 1382: {
 35029                           ;drv_mrf_miwi_89xa.c: 1383: uint8_t ackInfoIndex = 0xFF;
 35030  005044  0100               	movlb	0	; () banked
 35031  005046  6991               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 35032                           
 35033                           ;drv_mrf_miwi_89xa.c: 1385: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 35034  005048  0100               	movlb	0	; () banked
 35035  00504A  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35036  00504C  0D42               	mullw	66
 35037  00504E  0E01               	movlw	1
 35038  005050  26F3               	addwf	prodl,f,c
 35039  005052  0E00               	movlw	0
 35040  005054  22F4               	addwfc	prodh,f,c
 35041  005056  0E00               	movlw	low _RxPacket
 35042  005058  24F3               	addwf	prodl,w,c
 35043  00505A  6ED9               	movwf	fsr2l,c
 35044  00505C  0E03               	movlw	high _RxPacket
 35045  00505E  20F4               	addwfc	prodh,w,c
 35046  005060  6EDA               	movwf	fsr2h,c
 35047  005062  0103               	movlb	3	; () banked
 35048  005064  ACDF               	btfss	indf2,6,c
 35049  005066  D058               	goto	i2l18466
 35050                           
 35051                           ; BSR set to: 3
 35052                           ;drv_mrf_miwi_89xa.c: 1386: {
 35053                           ;drv_mrf_miwi_89xa.c: 1387: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 35054  005068  0E00               	movlw	0
 35055  00506A  0100               	movlb	0	; () banked
 35056  00506C  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 35057  00506E  D047               	goto	i2l18464
 35058  005070                     i2l18456:
 35059                           
 35060                           ; BSR set to: 0
 35061                           ;drv_mrf_miwi_89xa.c: 1388: {
 35062                           ;drv_mrf_miwi_89xa.c: 1389: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 35063  005070  0100               	movlb	0	; () banked
 35064  005072  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35065  005074  0D01               	mullw	1
 35066  005076  50F3               	movf	prodl,w,c
 35067  005078  0101               	movlb	1	; () banked
 35068  00507A  25AF               	addwf	(_MACInitParams+1)& (0+255),w,b
 35069  00507C  6ED9               	movwf	fsr2l,c
 35070  00507E  50F4               	movf	prodh,w,c
 35071  005080  0101               	movlb	1	; () banked
 35072  005082  21B0               	addwfc	(_MACInitParams+2)& (0+255),w,b
 35073  005084  6EDA               	movwf	fsr2h,c
 35074  005086  0100               	movlb	0	; () banked
 35075  005088  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35076  00508A  0D42               	mullw	66
 35077  00508C  0100               	movlb	0	; () banked
 35078  00508E  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35079  005090  0100               	movlb	0	; () banked
 35080  005092  6F83               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 35081  005094  6B84               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 35082  005096  0E03               	movlw	3
 35083  005098  0100               	movlb	0	; () banked
 35084  00509A  2783               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 35085  00509C  0E00               	movlw	0
 35086  00509E  2384               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 35087  0050A0  0E00               	movlw	low _RxPacket
 35088  0050A2  0100               	movlb	0	; () banked
 35089  0050A4  6F85               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 35090  0050A6  0E03               	movlw	high _RxPacket
 35091  0050A8  0100               	movlb	0	; () banked
 35092  0050AA  6F86               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 35093  0050AC  0100               	movlb	0	; () banked
 35094  0050AE  5183               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 35095  0050B0  0100               	movlb	0	; () banked
 35096  0050B2  2785               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 35097  0050B4  0100               	movlb	0	; () banked
 35098  0050B6  5184               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 35099  0050B8  0100               	movlb	0	; () banked
 35100  0050BA  2386               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 35101  0050BC  50F3               	movf	prodl,w,c
 35102  0050BE  0100               	movlb	0	; () banked
 35103  0050C0  2585               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 35104  0050C2  6EE1               	movwf	fsr1l,c
 35105  0050C4  50F4               	movf	prodh,w,c
 35106  0050C6  0100               	movlb	0	; () banked
 35107  0050C8  2186               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 35108  0050CA  6EE2               	movwf	fsr1h,c
 35109  0050CC  50DE               	movf	postinc2,w,c
 35110  0050CE  18E6               	xorwf	postinc1,w,c
 35111  0050D0  B4D8               	btfsc	status,2,c
 35112  0050D2  D013               	goto	i2l18462
 35113                           
 35114                           ; BSR set to: 0
 35115                           ;drv_mrf_miwi_89xa.c: 1390: {
 35116                           ;drv_mrf_miwi_89xa.c: 1391: RxPacketPtr = 0;
 35117  0050D4  0E00               	movlw	0
 35118  0050D6  0100               	movlb	0	; () banked
 35119  0050D8  6F90               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 35120                           
 35121                           ; BSR set to: 0
 35122                           ;drv_mrf_miwi_89xa.c: 1392: RxPacket[BankIndex].PayloadLen = 0;
 35123  0050DA  0100               	movlb	0	; () banked
 35124  0050DC  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35125  0050DE  0D42               	mullw	66
 35126  0050E0  0E41               	movlw	65
 35127  0050E2  26F3               	addwf	prodl,f,c
 35128  0050E4  0E00               	movlw	0
 35129  0050E6  22F4               	addwfc	prodh,f,c
 35130  0050E8  0E00               	movlw	low _RxPacket
 35131  0050EA  24F3               	addwf	prodl,w,c
 35132  0050EC  6ED9               	movwf	fsr2l,c
 35133  0050EE  0E03               	movlw	high _RxPacket
 35134  0050F0  20F4               	addwfc	prodh,w,c
 35135  0050F2  6EDA               	movwf	fsr2h,c
 35136  0050F4  0E00               	movlw	0
 35137  0050F6  6EDF               	movwf	indf2,c
 35138                           
 35139                           ;drv_mrf_miwi_89xa.c: 1393: goto IGNORE_HERE;
 35140  0050F8  D6FC               	goto	i2l18402
 35141  0050FA                     i2l18462:
 35142                           
 35143                           ; BSR set to: 0
 35144  0050FA  0100               	movlb	0	; () banked
 35145  0050FC  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 35146  0050FE                     i2l18464:
 35147                           
 35148                           ; BSR set to: 0
 35149  0050FE  0101               	movlb	1	; () banked
 35150  005100  31AE               	rrcf	_MACInitParams& (0+255),w,b
 35151  005102  32E8               	rrcf	wreg,f,c
 35152  005104  32E8               	rrcf	wreg,f,c
 35153  005106  0B0F               	andlw	15
 35154  005108  0100               	movlb	0	; () banked
 35155  00510A  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 35156  00510C  0100               	movlb	0	; () banked
 35157  00510E  5182               	movf	??_MIWIInterruptHandler& (0+255),w,b
 35158  005110  0100               	movlb	0	; () banked
 35159  005112  5D94               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 35160  005114  A0D8               	btfss	status,0,c
 35161  005116  D7AC               	goto	i2l18456
 35162  005118                     i2l18466:
 35163                           
 35164                           ;drv_mrf_miwi_89xa.c: 1394: }
 35165                           ;drv_mrf_miwi_89xa.c: 1395: }
 35166                           ;drv_mrf_miwi_89xa.c: 1396: }
 35167                           ;drv_mrf_miwi_89xa.c: 1399: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 35168  005118  0100               	movlb	0	; () banked
 35169  00511A  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35170  00511C  0D42               	mullw	66
 35171  00511E  0E01               	movlw	1
 35172  005120  26F3               	addwf	prodl,f,c
 35173  005122  0E00               	movlw	0
 35174  005124  22F4               	addwfc	prodh,f,c
 35175  005126  0E00               	movlw	low _RxPacket
 35176  005128  24F3               	addwf	prodl,w,c
 35177  00512A  6ED9               	movwf	fsr2l,c
 35178  00512C  0E03               	movlw	high _RxPacket
 35179  00512E  20F4               	addwfc	prodh,w,c
 35180  005130  6EDA               	movwf	fsr2h,c
 35181  005132  0103               	movlb	3	; () banked
 35182  005134  AADF               	btfss	indf2,5,c
 35183  005136  D058               	goto	i2l18500
 35184                           
 35185                           ; BSR set to: 3
 35186                           ;drv_mrf_miwi_89xa.c: 1400: {
 35187                           ;drv_mrf_miwi_89xa.c: 1402: for(i = 0; i < 2; i++)
 35188  005138  0E00               	movlw	0
 35189  00513A  0100               	movlb	0	; () banked
 35190  00513C  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 35191  00513E                     i2l18470:
 35192                           
 35193                           ; BSR set to: 0
 35194  00513E  0E01               	movlw	1
 35195  005140  0100               	movlb	0	; () banked
 35196  005142  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 35197  005144  D001               	goto	i2l18474
 35198  005146  D017               	goto	i2l18480
 35199  005148                     i2l18474:
 35200                           
 35201                           ; BSR set to: 0
 35202                           ;drv_mrf_miwi_89xa.c: 1403: {
 35203                           ;drv_mrf_miwi_89xa.c: 1404: ackPacket[i] = MACTxBuffer[i];
 35204  005148  0100               	movlb	0	; () banked
 35205  00514A  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35206  00514C  0D01               	mullw	1
 35207  00514E  0E66               	movlw	low _MACTxBuffer
 35208  005150  24F3               	addwf	prodl,w,c
 35209  005152  6ED9               	movwf	fsr2l,c
 35210  005154  0E02               	movlw	high _MACTxBuffer
 35211  005156  20F4               	addwfc	prodh,w,c
 35212  005158  6EDA               	movwf	fsr2h,c
 35213  00515A  0100               	movlb	0	; () banked
 35214  00515C  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35215  00515E  0D01               	mullw	1
 35216  005160  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 35217  005162  24F3               	addwf	prodl,w,c
 35218  005164  6EE1               	movwf	fsr1l,c
 35219  005166  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 35220  005168  20F4               	addwfc	prodh,w,c
 35221  00516A  6EE2               	movwf	fsr1h,c
 35222  00516C  CFDF FFE7          	movff	indf2,indf1
 35223                           
 35224                           ; BSR set to: 0
 35225  005170  0100               	movlb	0	; () banked
 35226  005172  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 35227  005174  D7E4               	goto	i2l18470
 35228  005176                     i2l18480:
 35229                           
 35230                           ; BSR set to: 0
 35231                           ;drv_mrf_miwi_89xa.c: 1405: }
 35232                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[0] = 0x02 | 0x04;
 35233  005176  0E06               	movlw	6
 35234  005178  0102               	movlb	2	; () banked
 35235  00517A  6F66               	movwf	_MACTxBuffer& (0+255),b	;volatile
 35236                           
 35237                           ; BSR set to: 2
 35238                           ;drv_mrf_miwi_89xa.c: 1407: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 35239  00517C  0100               	movlb	0	; () banked
 35240  00517E  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35241  005180  0D42               	mullw	66
 35242  005182  0E02               	movlw	2
 35243  005184  26F3               	addwf	prodl,f,c
 35244  005186  0E00               	movlw	0
 35245  005188  22F4               	addwfc	prodh,f,c
 35246  00518A  0E00               	movlw	low _RxPacket
 35247  00518C  24F3               	addwf	prodl,w,c
 35248  00518E  6ED9               	movwf	fsr2l,c
 35249  005190  0E03               	movlw	high _RxPacket
 35250  005192  20F4               	addwfc	prodh,w,c
 35251  005194  6EDA               	movwf	fsr2h,c
 35252  005196  50DF               	movf	indf2,w,c
 35253  005198  0102               	movlb	2	; () banked
 35254  00519A  6F67               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 35255                           
 35256                           ; BSR set to: 2
 35257                           ;drv_mrf_miwi_89xa.c: 1408: INTCON3bits.INT1IF = 0;
 35258  00519C  90F0               	bcf	intcon3,0,c	;volatile
 35259                           
 35260                           ; BSR set to: 2
 35261                           ;drv_mrf_miwi_89xa.c: 1409: TxPacket(2, 0);
 35262  00519E  0E00               	movlw	0
 35263  0051A0  0100               	movlb	0	; () banked
 35264  0051A2  6F6A               	movwf	i2TxPacket@CCA& (0+255),b
 35265  0051A4  0E02               	movlw	2
 35266  0051A6  EC42  F039         	call	i2_TxPacket
 35267                           
 35268                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 35269  0051AA  0E00               	movlw	0
 35270  0051AC  0100               	movlb	0	; () banked
 35271  0051AE  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 35272  0051B0                     i2l18490:
 35273                           
 35274                           ; BSR set to: 0
 35275  0051B0  0E01               	movlw	1
 35276  0051B2  0100               	movlb	0	; () banked
 35277  0051B4  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 35278  0051B6  D001               	goto	i2l18494
 35279  0051B8  D017               	goto	i2l18500
 35280  0051BA                     i2l18494:
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;drv_mrf_miwi_89xa.c: 1413: {
 35284                           ;drv_mrf_miwi_89xa.c: 1414: MACTxBuffer[i] = ackPacket[i];
 35285  0051BA  0100               	movlb	0	; () banked
 35286  0051BC  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35287  0051BE  0D01               	mullw	1
 35288  0051C0  0E8B               	movlw	low MIWIInterruptHandler@ackPacket
 35289  0051C2  24F3               	addwf	prodl,w,c
 35290  0051C4  6ED9               	movwf	fsr2l,c
 35291  0051C6  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 35292  0051C8  20F4               	addwfc	prodh,w,c
 35293  0051CA  6EDA               	movwf	fsr2h,c
 35294  0051CC  0100               	movlb	0	; () banked
 35295  0051CE  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35296  0051D0  0D01               	mullw	1
 35297  0051D2  0E66               	movlw	low _MACTxBuffer
 35298  0051D4  24F3               	addwf	prodl,w,c
 35299  0051D6  6EE1               	movwf	fsr1l,c
 35300  0051D8  0E02               	movlw	high _MACTxBuffer
 35301  0051DA  20F4               	addwfc	prodh,w,c
 35302  0051DC  6EE2               	movwf	fsr1h,c
 35303  0051DE  CFDF FFE7          	movff	indf2,indf1
 35304                           
 35305                           ; BSR set to: 0
 35306  0051E2  0100               	movlb	0	; () banked
 35307  0051E4  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 35308  0051E6  D7E4               	goto	i2l18490
 35309  0051E8                     i2l18500:
 35310                           
 35311                           ;drv_mrf_miwi_89xa.c: 1415: }
 35312                           ;drv_mrf_miwi_89xa.c: 1416: }
 35313                           ;drv_mrf_miwi_89xa.c: 1420: for(i = 0; i < 5; i++)
 35314  0051E8  0E00               	movlw	0
 35315  0051EA  0100               	movlb	0	; () banked
 35316  0051EC  6F94               	movwf	MIWIInterruptHandler@i& (0+255),b
 35317  0051EE                     i2l18502:
 35318                           
 35319                           ; BSR set to: 0
 35320  0051EE  0E04               	movlw	4
 35321  0051F0  0100               	movlb	0	; () banked
 35322  0051F2  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 35323  0051F4  D001               	goto	i2l18506
 35324  0051F6  D05A               	goto	i2l18522
 35325  0051F8                     i2l18506:
 35326                           
 35327                           ; BSR set to: 0
 35328                           ;drv_mrf_miwi_89xa.c: 1421: {
 35329                           ;drv_mrf_miwi_89xa.c: 1422: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 35330  0051F8  0100               	movlb	0	; () banked
 35331  0051FA  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35332  0051FC  0D06               	mullw	6
 35333  0051FE  0E48               	movlw	low _AckInfo
 35334  005200  24F3               	addwf	prodl,w,c
 35335  005202  6ED9               	movwf	fsr2l,c
 35336  005204  0E02               	movlw	high _AckInfo
 35337  005206  20F4               	addwfc	prodh,w,c
 35338  005208  6EDA               	movwf	fsr2h,c
 35339  00520A  50DF               	movf	indf2,w,c
 35340  00520C  B4D8               	btfsc	status,2,c
 35341  00520E  D03A               	goto	i2l18512
 35342                           
 35343                           ; BSR set to: 0
 35344  005210  0100               	movlb	0	; () banked
 35345  005212  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35346  005214  0D42               	mullw	66
 35347  005216  0E02               	movlw	2
 35348  005218  26F3               	addwf	prodl,f,c
 35349  00521A  0E00               	movlw	0
 35350  00521C  22F4               	addwfc	prodh,f,c
 35351  00521E  0E00               	movlw	low _RxPacket
 35352  005220  24F3               	addwf	prodl,w,c
 35353  005222  6ED9               	movwf	fsr2l,c
 35354  005224  0E03               	movlw	high _RxPacket
 35355  005226  20F4               	addwfc	prodh,w,c
 35356  005228  6EDA               	movwf	fsr2h,c
 35357  00522A  0100               	movlb	0	; () banked
 35358  00522C  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35359  00522E  0D06               	mullw	6
 35360  005230  0E01               	movlw	1
 35361  005232  26F3               	addwf	prodl,f,c
 35362  005234  0E00               	movlw	0
 35363  005236  22F4               	addwfc	prodh,f,c
 35364  005238  0E48               	movlw	low _AckInfo
 35365  00523A  24F3               	addwf	prodl,w,c
 35366  00523C  6EE1               	movwf	fsr1l,c
 35367  00523E  0E02               	movlw	high _AckInfo
 35368  005240  20F4               	addwfc	prodh,w,c
 35369  005242  6EE2               	movwf	fsr1h,c
 35370  005244  50DE               	movf	postinc2,w,c
 35371  005246  18E6               	xorwf	postinc1,w,c
 35372  005248  A4D8               	btfss	status,2,c
 35373  00524A  D01C               	goto	i2l18512
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;drv_mrf_miwi_89xa.c: 1423: {
 35377                           ;drv_mrf_miwi_89xa.c: 1424: AckInfo[i].startTick = MiWi_TickGet();
 35378  00524C  EC91  F052         	call	i2_MiWi_TickGet	;wreg free
 35379  005250  0100               	movlb	0	; () banked
 35380  005252  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35381  005254  0D06               	mullw	6
 35382  005256  0E02               	movlw	2
 35383  005258  26F3               	addwf	prodl,f,c
 35384  00525A  0E00               	movlw	0
 35385  00525C  22F4               	addwfc	prodh,f,c
 35386  00525E  0E48               	movlw	low _AckInfo
 35387  005260  24F3               	addwf	prodl,w,c
 35388  005262  6ED9               	movwf	fsr2l,c
 35389  005264  0E02               	movlw	high _AckInfo
 35390  005266  20F4               	addwfc	prodh,w,c
 35391  005268  6EDA               	movwf	fsr2h,c
 35392  00526A  0100               	movlb	0	; () banked
 35393  00526C  C060  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 35394  005270  0100               	movlb	0	; () banked
 35395  005272  C061  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 35396  005276  0100               	movlb	0	; () banked
 35397  005278  C062  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 35398  00527C  0100               	movlb	0	; () banked
 35399  00527E  C063  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 35400                           
 35401                           ;drv_mrf_miwi_89xa.c: 1425: break;
 35402  005282  D014               	goto	i2l18522
 35403  005284                     i2l18512:
 35404                           
 35405                           ; BSR set to: 0
 35406                           ;drv_mrf_miwi_89xa.c: 1426: }
 35407                           ;drv_mrf_miwi_89xa.c: 1427: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 35408  005284  0100               	movlb	0	; () banked
 35409  005286  2991               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 35410  005288  A4D8               	btfss	status,2,c
 35411  00528A  D00D               	goto	i2l18518
 35412                           
 35413                           ; BSR set to: 0
 35414  00528C  0100               	movlb	0	; () banked
 35415  00528E  5194               	movf	MIWIInterruptHandler@i& (0+255),w,b
 35416  005290  0D06               	mullw	6
 35417  005292  0E48               	movlw	low _AckInfo
 35418  005294  24F3               	addwf	prodl,w,c
 35419  005296  6ED9               	movwf	fsr2l,c
 35420  005298  0E02               	movlw	high _AckInfo
 35421  00529A  20F4               	addwfc	prodh,w,c
 35422  00529C  6EDA               	movwf	fsr2h,c
 35423  00529E  50DF               	movf	indf2,w,c
 35424  0052A0  B4D8               	btfsc	status,2,c
 35425                           
 35426                           ; BSR set to: 0
 35427                           ;drv_mrf_miwi_89xa.c: 1428: {
 35428                           ;drv_mrf_miwi_89xa.c: 1429: ackInfoIndex = i;
 35429  0052A2  C094  F091         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 35430  0052A6                     i2l18518:
 35431                           
 35432                           ; BSR set to: 0
 35433  0052A6  0100               	movlb	0	; () banked
 35434  0052A8  2B94               	incf	MIWIInterruptHandler@i& (0+255),f,b
 35435  0052AA  D7A1               	goto	i2l18502
 35436  0052AC                     i2l18522:
 35437                           
 35438                           ; BSR set to: 0
 35439                           ;drv_mrf_miwi_89xa.c: 1430: }
 35440                           ;drv_mrf_miwi_89xa.c: 1431: }
 35441                           ;drv_mrf_miwi_89xa.c: 1433: if( i >= 5 )
 35442  0052AC  0E04               	movlw	4
 35443  0052AE  0100               	movlb	0	; () banked
 35444  0052B0  6594               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 35445  0052B2  D05C               	goto	i2l18538
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;drv_mrf_miwi_89xa.c: 1434: {
 35449                           ;drv_mrf_miwi_89xa.c: 1435: if( ackInfoIndex < 5 )
 35450  0052B4  0E05               	movlw	5
 35451  0052B6  0100               	movlb	0	; () banked
 35452  0052B8  6191               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 35453  0052BA  D042               	goto	i2l18532
 35454                           
 35455                           ; BSR set to: 0
 35456                           ;drv_mrf_miwi_89xa.c: 1436: {
 35457                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Valid = 1;
 35458  0052BC  0100               	movlb	0	; () banked
 35459  0052BE  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 35460  0052C0  0D06               	mullw	6
 35461  0052C2  0E48               	movlw	low _AckInfo
 35462  0052C4  24F3               	addwf	prodl,w,c
 35463  0052C6  6ED9               	movwf	fsr2l,c
 35464  0052C8  0E02               	movlw	high _AckInfo
 35465  0052CA  20F4               	addwfc	prodh,w,c
 35466  0052CC  6EDA               	movwf	fsr2h,c
 35467  0052CE  0E01               	movlw	1
 35468  0052D0  6EDF               	movwf	indf2,c
 35469                           
 35470                           ; BSR set to: 0
 35471                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 35472  0052D2  0100               	movlb	0	; () banked
 35473  0052D4  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35474  0052D6  0D42               	mullw	66
 35475  0052D8  0E02               	movlw	2
 35476  0052DA  26F3               	addwf	prodl,f,c
 35477  0052DC  0E00               	movlw	0
 35478  0052DE  22F4               	addwfc	prodh,f,c
 35479  0052E0  0E00               	movlw	low _RxPacket
 35480  0052E2  24F3               	addwf	prodl,w,c
 35481  0052E4  6ED9               	movwf	fsr2l,c
 35482  0052E6  0E03               	movlw	high _RxPacket
 35483  0052E8  20F4               	addwfc	prodh,w,c
 35484  0052EA  6EDA               	movwf	fsr2h,c
 35485  0052EC  0100               	movlb	0	; () banked
 35486  0052EE  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 35487  0052F0  0D06               	mullw	6
 35488  0052F2  0E01               	movlw	1
 35489  0052F4  26F3               	addwf	prodl,f,c
 35490  0052F6  0E00               	movlw	0
 35491  0052F8  22F4               	addwfc	prodh,f,c
 35492  0052FA  0E48               	movlw	low _AckInfo
 35493  0052FC  24F3               	addwf	prodl,w,c
 35494  0052FE  6EE1               	movwf	fsr1l,c
 35495  005300  0E02               	movlw	high _AckInfo
 35496  005302  20F4               	addwfc	prodh,w,c
 35497  005304  6EE2               	movwf	fsr1h,c
 35498  005306  CFDF FFE7          	movff	indf2,indf1
 35499                           
 35500                           ; BSR set to: 0
 35501                           ;drv_mrf_miwi_89xa.c: 1439: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 35502  00530A  EC91  F052         	call	i2_MiWi_TickGet	;wreg free
 35503  00530E  0100               	movlb	0	; () banked
 35504  005310  5191               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 35505  005312  0D06               	mullw	6
 35506  005314  0E02               	movlw	2
 35507  005316  26F3               	addwf	prodl,f,c
 35508  005318  0E00               	movlw	0
 35509  00531A  22F4               	addwfc	prodh,f,c
 35510  00531C  0E48               	movlw	low _AckInfo
 35511  00531E  24F3               	addwf	prodl,w,c
 35512  005320  6ED9               	movwf	fsr2l,c
 35513  005322  0E02               	movlw	high _AckInfo
 35514  005324  20F4               	addwfc	prodh,w,c
 35515  005326  6EDA               	movwf	fsr2h,c
 35516  005328  0100               	movlb	0	; () banked
 35517  00532A  C060  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 35518  00532E  0100               	movlb	0	; () banked
 35519  005330  C061  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 35520  005334  0100               	movlb	0	; () banked
 35521  005336  C062  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 35522  00533A  0100               	movlb	0	; () banked
 35523  00533C  C063  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 35524  005340                     i2l18532:
 35525                           
 35526                           ; BSR set to: 0
 35527                           ;drv_mrf_miwi_89xa.c: 1440: }
 35528                           ;drv_mrf_miwi_89xa.c: 1443: RxPacket[BankIndex].flags.bits.Valid = 1;
 35529  005340  0100               	movlb	0	; () banked
 35530  005342  5193               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 35531  005344  0D42               	mullw	66
 35532  005346  0E00               	movlw	low _RxPacket
 35533  005348  24F3               	addwf	prodl,w,c
 35534  00534A  6ED9               	movwf	fsr2l,c
 35535  00534C  0E03               	movlw	high _RxPacket
 35536  00534E  20F4               	addwfc	prodh,w,c
 35537  005350  6EDA               	movwf	fsr2h,c
 35538  005352  0103               	movlb	3	; () banked
 35539  005354  80DF               	bsf	indf2,0,c
 35540                           
 35541                           ; BSR set to: 3
 35542                           ;drv_mrf_miwi_89xa.c: 1444: }
 35543                           ;drv_mrf_miwi_89xa.c: 1451: }
 35544                           ;drv_mrf_miwi_89xa.c: 1452: goto RETURN_HERE;
 35545  005356  D00A               	goto	i2l18538
 35546  005358                     i2l18534:
 35547  005358  0100               	movlb	0	; () banked
 35548  00535A  5188               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 35549  00535C  0100               	movlb	0	; () banked
 35550  00535E  1189               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 35551  005360  B4D8               	btfsc	status,2,c
 35552  005362  D004               	goto	i2l18538
 35553  005364  D5DF               	goto	i2l18416
 35554  005366                     i2l18536:
 35555                           
 35556                           ; BSR set to: 0
 35557                           ;drv_mrf_miwi_89xa.c: 1458: else
 35558                           ;drv_mrf_miwi_89xa.c: 1459: {
 35559                           ;drv_mrf_miwi_89xa.c: 1461: IRQ1_Received = 1;
 35560  005366  0E01               	movlw	1
 35561  005368  0100               	movlb	0	; () banked
 35562  00536A  6FDC               	movwf	_IRQ1_Received& (0+255),b	;volatile
 35563  00536C                     i2l18538:
 35564                           
 35565                           ;drv_mrf_miwi_89xa.c: 1465: INTCON3bits.INT1IF = 0;
 35566  00536C  90F0               	bcf	intcon3,0,c	;volatile
 35567                           
 35568                           ;drv_mrf_miwi_89xa.c: 1467: __nop();
 35569  00536E  F000               	nop	
 35570  005370                     i2l18542:
 35571                           
 35572                           ;drv_mrf_miwi_89xa.c: 1468: }
 35573                           ;drv_mrf_miwi_89xa.c: 1472: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 35574  005370  B2F2               	btfsc	intcon,1,c	;volatile
 35575  005372  A8F2               	btfss	intcon,4,c	;volatile
 35576  005374  D014               	goto	i2l18556
 35577                           
 35578                           ;drv_mrf_miwi_89xa.c: 1473: {
 35579                           ;drv_mrf_miwi_89xa.c: 1475: status_led = LED_FULL;
 35580  005376  0E03               	movlw	3
 35581  005378  6E53               	movwf	_status_led,c	;volatile
 35582                           
 35583                           ;drv_mrf_miwi_89xa.c: 1476: update_LED();
 35584  00537A  EC2F  F054         	call	i2_update_LED	;wreg free
 35585                           
 35586                           ;drv_mrf_miwi_89xa.c: 1482: INTCONbits.INT0IF = 0;
 35587  00537E  92F2               	bcf	intcon,1,c	;volatile
 35588                           
 35589                           ;drv_mrf_miwi_89xa.c: 1485: if(RF_Mode == 0x60)
 35590  005380  0E60               	movlw	96
 35591  005382  0100               	movlb	0	; () banked
 35592  005384  19DD               	xorwf	_RF_Mode& (0+255),w,b
 35593  005386  A4D8               	btfss	status,2,c
 35594  005388  D00A               	goto	i2l18556
 35595                           
 35596                           ; BSR set to: 0
 35597                           ;drv_mrf_miwi_89xa.c: 1486: {
 35598                           ;drv_mrf_miwi_89xa.c: 1487: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 35599  00538A  0E28               	movlw	40
 35600  00538C  ECB9  F054         	call	i2_RegisterRead
 35601  005390  0100               	movlb	0	; () banked
 35602  005392  6F82               	movwf	??_MIWIInterruptHandler& (0+255),b
 35603  005394  0100               	movlb	0	; () banked
 35604  005396  90D8               	bcf	status,0,c
 35605  005398  3182               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 35606  00539A  0100               	movlb	0	; () banked
 35607  00539C  6FDE               	movwf	_RSSIVal& (0+255),b
 35608  00539E                     i2l18556:
 35609                           
 35610                           ;drv_mrf_miwi_89xa.c: 1488: }
 35611                           ;drv_mrf_miwi_89xa.c: 1492: }
 35612                           ;drv_mrf_miwi_89xa.c: 1496: if(PIR1bits.TMR1IF)
 35613  00539E  A09E               	btfss	3998,0,c	;volatile
 35614  0053A0  0012               	return	
 35615                           
 35616                           ;drv_mrf_miwi_89xa.c: 1497: {
 35617                           ;drv_mrf_miwi_89xa.c: 1498: if(PIE1bits.TMR1IE)
 35618  0053A2  A09D               	btfss	3997,0,c	;volatile
 35619  0053A4  0012               	return	
 35620                           
 35621                           ;drv_mrf_miwi_89xa.c: 1499: {
 35622                           ;drv_mrf_miwi_89xa.c: 1501: PIR1bits.TMR1IF = 0;
 35623  0053A6  909E               	bcf	3998,0,c	;volatile
 35624                           
 35625                           ;drv_mrf_miwi_89xa.c: 1502: timerExtension1++;
 35626  0053A8  0100               	movlb	0	; () banked
 35627  0053AA  2BE2               	incf	_timerExtension1& (0+255),f,b	;volatile
 35628                           
 35629                           ; BSR set to: 0
 35630                           ;drv_mrf_miwi_89xa.c: 1503: if(timerExtension1 == 0)
 35631  0053AC  0100               	movlb	0	; () banked
 35632  0053AE  51E2               	movf	_timerExtension1& (0+255),w,b	;volatile
 35633  0053B0  A4D8               	btfss	status,2,c
 35634  0053B2  0012               	return	
 35635                           
 35636                           ; BSR set to: 0
 35637                           ;drv_mrf_miwi_89xa.c: 1504: {
 35638                           ;drv_mrf_miwi_89xa.c: 1505: timerExtension2++;
 35639  0053B4  0100               	movlb	0	; () banked
 35640  0053B6  2BE3               	incf	_timerExtension2& (0+255),f,b	;volatile
 35641                           
 35642                           ; BSR set to: 0
 35643                           
 35644                           ; BSR set to: 0
 35645                           
 35646                           ; BSR set to: 0
 35647  0053B8  0012               	return	
 35648  0053BA                     __end_of_MIWIInterruptHandler:
 35649                           	opt stack 0
 35650                           pclatu	equ	0xFFB
 35651                           pclath	equ	0xFFA
 35652                           tblptru	equ	0xFF8
 35653                           tblptrh	equ	0xFF7
 35654                           tblptrl	equ	0xFF6
 35655                           tablat	equ	0xFF5
 35656                           prodh	equ	0xFF4
 35657                           prodl	equ	0xFF3
 35658                           intcon	equ	0xFF2
 35659                           intcon2	equ	0xFF1
 35660                           intcon3	equ	0xFF0
 35661                           indf0	equ	0xFEF
 35662                           postinc0	equ	0xFEE
 35663                           plusw0	equ	0xFEB
 35664                           fsr0h	equ	0xFEA
 35665                           fsr0l	equ	0xFE9
 35666                           wreg	equ	0xFE8
 35667                           indf1	equ	0xFE7
 35668                           postinc1	equ	0xFE6
 35669                           postdec1	equ	0xFE5
 35670                           plusw1	equ	0xFE3
 35671                           fsr1h	equ	0xFE2
 35672                           fsr1l	equ	0xFE1
 35673                           bsr	equ	0xFE0
 35674                           indf2	equ	0xFDF
 35675                           postinc2	equ	0xFDE
 35676                           postdec2	equ	0xFDD
 35677                           plusw2	equ	0xFDB
 35678                           fsr2h	equ	0xFDA
 35679                           fsr2l	equ	0xFD9
 35680                           status	equ	0xFD8
 35681                           
 35682 ;; *************** function i2_update_LED *****************
 35683 ;; Defined at:
 35684 ;;		line 774 in file "src/main.c"
 35685 ;; Parameters:    Size  Location     Type
 35686 ;;		None
 35687 ;; Auto vars:     Size  Location     Type
 35688 ;;		None
 35689 ;; Return value:  Size  Location     Type
 35690 ;;                  2    0[None  ] int 
 35691 ;; Registers used:
 35692 ;;		wreg, status,2, status,0
 35693 ;; Tracked objects:
 35694 ;;		On entry : 0/0
 35695 ;;		On exit  : 0/0
 35696 ;;		Unchanged: 0/0
 35697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35702 ;;Total ram usage:        0 bytes
 35703 ;; Hardware stack levels used:    1
 35704 ;; This function calls:
 35705 ;;		Nothing
 35706 ;; This function is called by:
 35707 ;;		_MIWIInterruptHandler
 35708 ;; This function uses a non-reentrant model
 35709 ;;
 35710                           
 35711                           	psect	text105
 35712  00A85E                     __ptext105:
 35713                           	opt stack 0
 35714  00A85E                     i2_update_LED:
 35715                           	opt stack 6
 35716                           
 35717                           ;main.c: 776: switch(status_led)
 35718                           
 35719                           ;incstack = 0
 35720  00A85E  D021               	goto	i2l12750
 35721  00A860                     i2l1857:
 35722                           
 35723                           ;main.c: 780: CCP1CONbits.DC1B0 = 0;
 35724  00A860  98BA               	bcf	4026,4,c	;volatile
 35725                           
 35726                           ;main.c: 781: CCP1CONbits.DC1B1 = 0;
 35727  00A862  9ABA               	bcf	4026,5,c	;volatile
 35728                           
 35729                           ;main.c: 782: CCPR1L = 0;
 35730  00A864  0E00               	movlw	0
 35731  00A866  6EBB               	movwf	4027,c	;volatile
 35732                           
 35733                           ;main.c: 783: LED_increasing = 1;
 35734  00A868  0E01               	movlw	1
 35735  00A86A  6E43               	movwf	_LED_increasing,c	;volatile
 35736                           
 35737                           ;main.c: 784: break;
 35738  00A86C  0012               	return	
 35739  00A86E                     i2l1859:
 35740                           
 35741                           ;main.c: 788: CCP1CONbits.DC1B0 = 1023 & 1;
 35742  00A86E  88BA               	bsf	4026,4,c	;volatile
 35743                           
 35744                           ;main.c: 789: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 35745  00A870  8ABA               	bsf	4026,5,c	;volatile
 35746                           
 35747                           ;main.c: 790: CCPR1L = (1023 >> 2);
 35748  00A872  68BB               	setf	4027,c	;volatile
 35749                           
 35750                           ;main.c: 791: repeat_full = 4;
 35751  00A874  0E04               	movlw	4
 35752  00A876  6E51               	movwf	_repeat_full,c	;volatile
 35753                           
 35754                           ;main.c: 792: break;
 35755  00A878  0012               	return	
 35756  00A87A                     i2l12736:
 35757                           
 35758                           ;main.c: 795: T4CONbits.T4CKPS = 0b01;
 35759  00A87A  5076               	movf	3958,w,c	;volatile
 35760  00A87C  0BFC               	andlw	-4
 35761  00A87E  0901               	iorlw	1
 35762  00A880  6E76               	movwf	3958,c	;volatile
 35763                           
 35764                           ;main.c: 797: CCP1CONbits.DC1B0 = 235 & 1;
 35765  00A882  88BA               	bsf	4026,4,c	;volatile
 35766                           
 35767                           ;main.c: 798: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35768  00A884  8ABA               	bsf	4026,5,c	;volatile
 35769                           
 35770                           ;main.c: 799: CCPR1L = (235 >> 2);
 35771  00A886  0E3A               	movlw	58
 35772  00A888  6EBB               	movwf	4027,c	;volatile
 35773                           
 35774                           ;main.c: 800: LED_increasing = 0;
 35775  00A88A  0E00               	movlw	0
 35776  00A88C  6E43               	movwf	_LED_increasing,c	;volatile
 35777                           
 35778                           ;main.c: 801: break;
 35779  00A88E  0012               	return	
 35780  00A890                     i2l12742:
 35781                           
 35782                           ;main.c: 804: T4CONbits.T4CKPS = 0b11;
 35783  00A890  0E03               	movlw	3
 35784  00A892  1276               	iorwf	3958,f,c	;volatile
 35785                           
 35786                           ;main.c: 806: CCP1CONbits.DC1B0 = 235 & 1;
 35787  00A894  88BA               	bsf	4026,4,c	;volatile
 35788                           
 35789                           ;main.c: 807: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35790  00A896  8ABA               	bsf	4026,5,c	;volatile
 35791                           
 35792                           ;main.c: 808: CCPR1L = (235 >> 2);
 35793  00A898  0E3A               	movlw	58
 35794  00A89A  6EBB               	movwf	4027,c	;volatile
 35795                           
 35796                           ;main.c: 809: LED_increasing = 0;
 35797  00A89C  0E00               	movlw	0
 35798  00A89E  6E43               	movwf	_LED_increasing,c	;volatile
 35799                           
 35800                           ;main.c: 811: }
 35801                           
 35802                           ;main.c: 810: break;
 35803  00A8A0  0012               	return	
 35804  00A8A2                     i2l12750:
 35805  00A8A2  5053               	movf	_status_led,w,c	;volatile
 35806                           
 35807                           ; Switch size 1, requested type "space"
 35808                           ; Number of cases is 4, Range of values is 0 to 3
 35809                           ; switch strategies available:
 35810                           ; Name         Instructions Cycles
 35811                           ; simple_byte           13     7 (average)
 35812                           ;	Chosen strategy is simple_byte
 35813  00A8A4  0A00               	xorlw	0	; case 0
 35814  00A8A6  B4D8               	btfsc	status,2,c
 35815  00A8A8  D7DB               	goto	i2l1857
 35816  00A8AA  0A01               	xorlw	1	; case 1
 35817  00A8AC  B4D8               	btfsc	status,2,c
 35818  00A8AE  D7E5               	goto	i2l12736
 35819  00A8B0  0A03               	xorlw	3	; case 2
 35820  00A8B2  B4D8               	btfsc	status,2,c
 35821  00A8B4  D7ED               	goto	i2l12742
 35822  00A8B6  0A01               	xorlw	1	; case 3
 35823  00A8B8  A4D8               	btfss	status,2,c
 35824  00A8BA  0012               	return	
 35825  00A8BC  D7D8               	goto	i2l1859
 35826  00A8BE                     __end_ofi2_update_LED:
 35827                           	opt stack 0
 35828                           pclatu	equ	0xFFB
 35829                           pclath	equ	0xFFA
 35830                           tblptru	equ	0xFF8
 35831                           tblptrh	equ	0xFF7
 35832                           tblptrl	equ	0xFF6
 35833                           tablat	equ	0xFF5
 35834                           prodh	equ	0xFF4
 35835                           prodl	equ	0xFF3
 35836                           intcon	equ	0xFF2
 35837                           intcon2	equ	0xFF1
 35838                           intcon3	equ	0xFF0
 35839                           indf0	equ	0xFEF
 35840                           postinc0	equ	0xFEE
 35841                           plusw0	equ	0xFEB
 35842                           fsr0h	equ	0xFEA
 35843                           fsr0l	equ	0xFE9
 35844                           wreg	equ	0xFE8
 35845                           indf1	equ	0xFE7
 35846                           postinc1	equ	0xFE6
 35847                           postdec1	equ	0xFE5
 35848                           plusw1	equ	0xFE3
 35849                           fsr1h	equ	0xFE2
 35850                           fsr1l	equ	0xFE1
 35851                           bsr	equ	0xFE0
 35852                           indf2	equ	0xFDF
 35853                           postinc2	equ	0xFDE
 35854                           postdec2	equ	0xFDD
 35855                           plusw2	equ	0xFDB
 35856                           fsr2h	equ	0xFDA
 35857                           fsr2l	equ	0xFD9
 35858                           status	equ	0xFD8
 35859                           
 35860 ;; *************** function i2_TxPacket *****************
 35861 ;; Defined at:
 35862 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 35863 ;; Parameters:    Size  Location     Type
 35864 ;;  TxPacketLen     1    wreg     unsigned char 
 35865 ;;  CCA             1   10[BANK0 ] unsigned char 
 35866 ;; Auto vars:     Size  Location     Type
 35867 ;;  TxPacketLen     1   31[BANK0 ] unsigned char 
 35868 ;;  TxPacket        4   23[BANK0 ] struct _MIWI_TICK
 35869 ;;  TxPacket        4   19[BANK0 ] struct _MIWI_TICK
 35870 ;;  TxPacket        1   33[BANK0 ] unsigned char 
 35871 ;;  TxPacket        1   32[BANK0 ] unsigned char 
 35872 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 35873 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 35874 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 35875 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 35876 ;; Return value:  Size  Location     Type
 35877 ;;                  1    wreg      unsigned char 
 35878 ;; Registers used:
 35879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35880 ;; Tracked objects:
 35881 ;;		On entry : 0/0
 35882 ;;		On exit  : 0/0
 35883 ;;		Unchanged: 0/0
 35884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35885 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35886 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35889 ;;Total ram usage:       24 bytes
 35890 ;; Hardware stack levels used:    1
 35891 ;; Hardware stack levels required when called:    3
 35892 ;; This function calls:
 35893 ;;		i2_MiWi_TickGet
 35894 ;;		i2_RegisterRead
 35895 ;;		i2_RegisterSet
 35896 ;;		i2_SetRFMode
 35897 ;;		i2_WriteFIFO
 35898 ;; This function is called by:
 35899 ;;		_MIWIInterruptHandler
 35900 ;; This function uses a non-reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text106
 35904  007284                     __ptext106:
 35905                           	opt stack 0
 35906  007284                     i2_TxPacket:
 35907                           	opt stack 3
 35908                           
 35909                           ;incstack = 0
 35910                           ;i2TxPacket@TxPacketLen stored from wreg
 35911  007284  0100               	movlb	0	; () banked
 35912  007286  6F7F               	movwf	i2TxPacket@TxPacketLen& (0+255),b
 35913                           
 35914                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 35915                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 35916                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 35917                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 35918                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 35919                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 35920  007288  0E03               	movlw	3
 35921  00728A  0100               	movlb	0	; () banked
 35922  00728C  6F7D               	movwf	i2TxPacket@reTry& (0+255),b
 35923                           
 35924                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 35925  00728E  D0C8               	goto	i2l18166
 35926  007290                     i2l18100:
 35927                           
 35928                           ; BSR set to: 0
 35929                           ;drv_mrf_miwi_89xa.c: 305: {
 35930                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 35931                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 35932  007290  0E00               	movlw	0
 35933  007292  0100               	movlb	0	; () banked
 35934  007294  6F7E               	movwf	i2TxPacket@allowedTxFailure& (0+255),b
 35935  007296                     i2l262:
 35936                           
 35937                           ; BSR set to: 0
 35938                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 35939  007296  0E00               	movlw	0
 35940  007298  0100               	movlb	0	; () banked
 35941  00729A  6FE0               	movwf	_hasAck& (0+255),b	;volatile
 35942                           
 35943                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 35944  00729C  0E00               	movlw	0
 35945  00729E  0100               	movlb	0	; () banked
 35946  0072A0  6F7C               	movwf	i2TxPacket@CCARetries& (0+255),b
 35947                           
 35948                           ; BSR set to: 0
 35949                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 35950  0072A2  0100               	movlb	0	; () banked
 35951  0072A4  516A               	movf	i2TxPacket@CCA& (0+255),w,b
 35952  0072A6  0100               	movlb	0	; () banked
 35953  0072A8  B4D8               	btfsc	status,2,c
 35954  0072AA  D018               	goto	i2l263
 35955  0072AC                     i2l18104:
 35956                           
 35957                           ; BSR set to: 0
 35958                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 35959  0072AC  0E28               	movlw	40
 35960  0072AE  ECB9  F054         	call	i2_RegisterRead
 35961  0072B2  0100               	movlb	0	; () banked
 35962  0072B4  6F81               	movwf	i2TxPacket@rssival& (0+255),b
 35963                           
 35964                           ; BSR set to: 0
 35965                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 35966  0072B6  0100               	movlb	0	; () banked
 35967  0072B8  90D8               	bcf	status,0,c
 35968  0072BA  3181               	rrcf	i2TxPacket@rssival& (0+255),w,b
 35969  0072BC  0100               	movlb	0	; () banked
 35970  0072BE  6F81               	movwf	i2TxPacket@rssival& (0+255),b
 35971                           
 35972                           ; BSR set to: 0
 35973                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 35974  0072C0  0E41               	movlw	65
 35975  0072C2  0100               	movlb	0	; () banked
 35976  0072C4  6581               	cpfsgt	i2TxPacket@rssival& (0+255),b
 35977  0072C6  D00A               	goto	i2l263
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;drv_mrf_miwi_89xa.c: 326: {
 35981                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 35982  0072C8  0100               	movlb	0	; () banked
 35983  0072CA  2B7C               	incf	i2TxPacket@CCARetries& (0+255),f,b
 35984  0072CC  057C               	decf	i2TxPacket@CCARetries& (0+255),w,b
 35985  0072CE  0100               	movlb	0	; () banked
 35986  0072D0  6F6B               	movwf	??i2_TxPacket& (0+255),b
 35987  0072D2  0E04               	movlw	4
 35988  0072D4  0100               	movlb	0	; () banked
 35989  0072D6  656B               	cpfsgt	??i2_TxPacket& (0+255),b
 35990  0072D8  D7E9               	goto	i2l18104
 35991  0072DA  0012               	return	
 35992  0072DC                     i2l263:
 35993                           
 35994                           ; BSR set to: 0
 35995                           ;drv_mrf_miwi_89xa.c: 333: }
 35996                           ;drv_mrf_miwi_89xa.c: 334: }
 35997                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 35998  0072DC  98F2               	bcf	intcon,4,c	;volatile
 35999                           
 36000                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 36001  0072DE  96F0               	bcf	intcon3,3,c	;volatile
 36002                           
 36003                           ; BSR set to: 0
 36004                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 36005  0072E0  0E20               	movlw	32
 36006  0072E2  ECF1  F04F         	call	i2_SetRFMode
 36007                           
 36008                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 36009  0072E6  0E1A               	movlw	26
 36010  0072E8  0100               	movlb	0	; () banked
 36011  0072EA  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 36012  0072EC  0EC9               	movlw	201
 36013  0072EE  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 36014  0072F0  EC54  F055         	call	i2_RegisterSet	;wreg free
 36015                           
 36016                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 36017  0072F4  0100               	movlb	0	; () banked
 36018  0072F6  517F               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 36019  0072F8  ECBA  F055         	call	i2_WriteFIFO
 36020                           
 36021                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 36022  0072FC  0E00               	movlw	0
 36023  0072FE  0100               	movlb	0	; () banked
 36024  007300  6F80               	movwf	i2TxPacket@i& (0+255),b
 36025  007302  D00E               	goto	i2l18126
 36026  007304                     i2l18122:
 36027                           
 36028                           ; BSR set to: 0
 36029                           ;drv_mrf_miwi_89xa.c: 346: {
 36030                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 36031  007304  0100               	movlb	0	; () banked
 36032  007306  5180               	movf	i2TxPacket@i& (0+255),w,b
 36033  007308  0D01               	mullw	1
 36034  00730A  0E66               	movlw	low _MACTxBuffer
 36035  00730C  24F3               	addwf	prodl,w,c
 36036  00730E  6ED9               	movwf	fsr2l,c
 36037  007310  0E02               	movlw	high _MACTxBuffer
 36038  007312  20F4               	addwfc	prodh,w,c
 36039  007314  6EDA               	movwf	fsr2h,c
 36040  007316  50DF               	movf	indf2,w,c
 36041  007318  ECBA  F055         	call	i2_WriteFIFO
 36042  00731C  0100               	movlb	0	; () banked
 36043  00731E  2B80               	incf	i2TxPacket@i& (0+255),f,b
 36044  007320                     i2l18126:
 36045                           
 36046                           ; BSR set to: 0
 36047  007320  0100               	movlb	0	; () banked
 36048  007322  517F               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 36049  007324  0100               	movlb	0	; () banked
 36050  007326  5D80               	subwf	i2TxPacket@i& (0+255),w,b
 36051  007328  A0D8               	btfss	status,0,c
 36052  00732A  D7EC               	goto	i2l18122
 36053                           
 36054                           ; BSR set to: 0
 36055                           ;drv_mrf_miwi_89xa.c: 348: }
 36056                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 36057                           
 36058                           ; BSR set to: 0
 36059  00732C  0E80               	movlw	128
 36060  00732E  ECF1  F04F         	call	i2_SetRFMode
 36061                           
 36062                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 36063  007332  88F2               	bsf	intcon,4,c	;volatile
 36064                           
 36065                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 36066  007334  86F0               	bsf	intcon3,3,c	;volatile
 36067  007336                     i2l18134:
 36068  007336  0100               	movlb	0	; () banked
 36069  007338  51DC               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 36070  00733A  B4D8               	btfsc	status,2,c
 36071                           
 36072                           ; BSR set to: 0
 36073  00733C  B0F0               	btfsc	intcon3,0,c	;volatile
 36074  00733E  D001               	goto	i2l18138
 36075  007340  D7FA               	goto	i2l18134
 36076  007342                     i2l18138:
 36077                           
 36078                           ; BSR set to: 0
 36079                           ;drv_mrf_miwi_89xa.c: 357: };
 36080                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 36081  007342  0E00               	movlw	0
 36082  007344  0100               	movlb	0	; () banked
 36083  007346  6FDC               	movwf	_IRQ1_Received& (0+255),b	;volatile
 36084                           
 36085                           ; BSR set to: 0
 36086                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 36087  007348  0E20               	movlw	32
 36088  00734A  ECF1  F04F         	call	i2_SetRFMode
 36089                           
 36090                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 36091  00734E  0E60               	movlw	96
 36092  007350  ECF1  F04F         	call	i2_SetRFMode
 36093                           
 36094                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 36095  007354  0102               	movlb	2	; () banked
 36096  007356  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 36097  007358  D05F               	goto	i2l18164
 36098                           
 36099                           ; BSR set to: 2
 36100                           ;drv_mrf_miwi_89xa.c: 367: {
 36101                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 36102  00735A  C267  F0DF         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 36103                           
 36104                           ; BSR set to: 2
 36105                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 36106  00735E  EC91  F052         	call	i2_MiWi_TickGet	;wreg free
 36107  007362  C060  F073         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 36108  007366  C061  F074         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 36109  00736A  C062  F075         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 36110  00736E  C063  F076         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 36111  007372                     i2l18150:
 36112                           
 36113                           ;drv_mrf_miwi_89xa.c: 371: {
 36114                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 36115  007372  0100               	movlb	0	; () banked
 36116  007374  51E0               	movf	_hasAck& (0+255),w,b	;volatile
 36117  007376  B4D8               	btfsc	status,2,c
 36118  007378  D004               	goto	i2l18154
 36119                           
 36120                           ; BSR set to: 0
 36121                           ;drv_mrf_miwi_89xa.c: 373: {
 36122                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 36123  00737A  0E01               	movlw	1
 36124  00737C  0100               	movlb	0	; () banked
 36125  00737E  6F7B               	movwf	i2TxPacket@status& (0+255),b
 36126                           
 36127                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 36128  007380  0012               	return	
 36129  007382                     i2l18154:
 36130                           
 36131                           ; BSR set to: 0
 36132                           ;drv_mrf_miwi_89xa.c: 376: }
 36133                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 36134  007382  EC91  F052         	call	i2_MiWi_TickGet	;wreg free
 36135  007386  C060  F077         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 36136  00738A  C061  F078         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 36137  00738E  C062  F079         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 36138  007392  C063  F07A         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 36139                           
 36140                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 36141  007396  C073  F06B         	movff	i2TxPacket@t1,??i2_TxPacket
 36142  00739A  C074  F06C         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 36143  00739E  C075  F06D         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 36144  0073A2  C076  F06E         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 36145  0073A6  0100               	movlb	0	; () banked
 36146  0073A8  1F6B               	comf	??i2_TxPacket& (0+255),f,b
 36147  0073AA  1F6C               	comf	(??i2_TxPacket+1)& (0+255),f,b
 36148  0073AC  1F6D               	comf	(??i2_TxPacket+2)& (0+255),f,b
 36149  0073AE  1F6E               	comf	(??i2_TxPacket+3)& (0+255),f,b
 36150  0073B0  2B6B               	incf	??i2_TxPacket& (0+255),f,b
 36151  0073B2  0E00               	movlw	0
 36152  0073B4  236C               	addwfc	(??i2_TxPacket+1)& (0+255),f,b
 36153  0073B6  236D               	addwfc	(??i2_TxPacket+2)& (0+255),f,b
 36154  0073B8  236E               	addwfc	(??i2_TxPacket+3)& (0+255),f,b
 36155  0073BA  0100               	movlb	0	; () banked
 36156  0073BC  5177               	movf	i2TxPacket@t2& (0+255),w,b
 36157  0073BE  0100               	movlb	0	; () banked
 36158  0073C0  256B               	addwf	??i2_TxPacket& (0+255),w,b
 36159  0073C2  0100               	movlb	0	; () banked
 36160  0073C4  6F6F               	movwf	(??i2_TxPacket+4)& (0+255),b
 36161  0073C6  0100               	movlb	0	; () banked
 36162  0073C8  5178               	movf	(i2TxPacket@t2+1)& (0+255),w,b
 36163  0073CA  0100               	movlb	0	; () banked
 36164  0073CC  216C               	addwfc	(??i2_TxPacket+1)& (0+255),w,b
 36165  0073CE  0100               	movlb	0	; () banked
 36166  0073D0  6F70               	movwf	(??i2_TxPacket+5)& (0+255),b
 36167  0073D2  0100               	movlb	0	; () banked
 36168  0073D4  5179               	movf	(i2TxPacket@t2+2)& (0+255),w,b
 36169  0073D6  0100               	movlb	0	; () banked
 36170  0073D8  216D               	addwfc	(??i2_TxPacket+2)& (0+255),w,b
 36171  0073DA  0100               	movlb	0	; () banked
 36172  0073DC  6F71               	movwf	(??i2_TxPacket+6)& (0+255),b
 36173  0073DE  0100               	movlb	0	; () banked
 36174  0073E0  517A               	movf	(i2TxPacket@t2+3)& (0+255),w,b
 36175  0073E2  0100               	movlb	0	; () banked
 36176  0073E4  216E               	addwfc	(??i2_TxPacket+3)& (0+255),w,b
 36177  0073E6  0100               	movlb	0	; () banked
 36178  0073E8  6F72               	movwf	(??i2_TxPacket+7)& (0+255),b
 36179  0073EA  0100               	movlb	0	; () banked
 36180  0073EC  5172               	movf	(??i2_TxPacket+7)& (0+255),w,b
 36181  0073EE  0100               	movlb	0	; () banked
 36182  0073F0  1171               	iorwf	(??i2_TxPacket+6)& (0+255),w,b
 36183  0073F2  E108               	bnz	i2l18160
 36184  0073F4  0EA9               	movlw	169
 36185  0073F6  0100               	movlb	0	; () banked
 36186  0073F8  5D6F               	subwf	(??i2_TxPacket+4)& (0+255),w,b
 36187  0073FA  0E61               	movlw	97
 36188  0073FC  0100               	movlb	0	; () banked
 36189  0073FE  5970               	subwfb	(??i2_TxPacket+5)& (0+255),w,b
 36190  007400  A0D8               	btfss	status,0,c
 36191  007402  D7B7               	goto	i2l18150
 36192  007404                     i2l18160:
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;drv_mrf_miwi_89xa.c: 381: }
 36196                           ;drv_mrf_miwi_89xa.c: 382: }
 36197                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 36198  007404  0100               	movlb	0	; () banked
 36199  007406  2B7E               	incf	i2TxPacket@allowedTxFailure& (0+255),f,b
 36200  007408  057E               	decf	i2TxPacket@allowedTxFailure& (0+255),w,b
 36201  00740A  0100               	movlb	0	; () banked
 36202  00740C  6F6B               	movwf	??i2_TxPacket& (0+255),b
 36203  00740E  0E04               	movlw	4
 36204  007410  0100               	movlb	0	; () banked
 36205  007412  616B               	cpfslt	??i2_TxPacket& (0+255),b
 36206  007414  D005               	goto	i2l18166
 36207  007416  D73F               	goto	i2l262
 36208  007418                     i2l18164:
 36209                           
 36210                           ;drv_mrf_miwi_89xa.c: 388: else
 36211                           ;drv_mrf_miwi_89xa.c: 390: {
 36212                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 36213  007418  0E01               	movlw	1
 36214  00741A  0100               	movlb	0	; () banked
 36215  00741C  6F7B               	movwf	i2TxPacket@status& (0+255),b
 36216                           
 36217                           ;drv_mrf_miwi_89xa.c: 392: goto TX_END_HERE;
 36218  00741E  0012               	return	
 36219  007420                     i2l18166:
 36220                           
 36221                           ; BSR set to: 0
 36222  007420  0100               	movlb	0	; () banked
 36223  007422  077D               	decf	i2TxPacket@reTry& (0+255),f,b
 36224  007424  0100               	movlb	0	; () banked
 36225  007426  297D               	incf	i2TxPacket@reTry& (0+255),w,b
 36226  007428  A4D8               	btfss	status,2,c
 36227  00742A  D732               	goto	i2l18100
 36228                           
 36229                           ; BSR set to: 0
 36230                           ;drv_mrf_miwi_89xa.c: 393: }
 36231                           ;drv_mrf_miwi_89xa.c: 394: }
 36232                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 36233                           
 36234                           ; BSR set to: 0
 36235  00742C  0E00               	movlw	0
 36236  00742E  0100               	movlb	0	; () banked
 36237  007430  6F7B               	movwf	i2TxPacket@status& (0+255),b
 36238                           
 36239                           ; BSR set to: 0
 36240                           
 36241                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 36242  007432  0012               	return	
 36243  007434                     __end_ofi2_TxPacket:
 36244                           	opt stack 0
 36245                           pclatu	equ	0xFFB
 36246                           pclath	equ	0xFFA
 36247                           tblptru	equ	0xFF8
 36248                           tblptrh	equ	0xFF7
 36249                           tblptrl	equ	0xFF6
 36250                           tablat	equ	0xFF5
 36251                           prodh	equ	0xFF4
 36252                           prodl	equ	0xFF3
 36253                           intcon	equ	0xFF2
 36254                           intcon2	equ	0xFF1
 36255                           intcon3	equ	0xFF0
 36256                           indf0	equ	0xFEF
 36257                           postinc0	equ	0xFEE
 36258                           plusw0	equ	0xFEB
 36259                           fsr0h	equ	0xFEA
 36260                           fsr0l	equ	0xFE9
 36261                           wreg	equ	0xFE8
 36262                           indf1	equ	0xFE7
 36263                           postinc1	equ	0xFE6
 36264                           postdec1	equ	0xFE5
 36265                           plusw1	equ	0xFE3
 36266                           fsr1h	equ	0xFE2
 36267                           fsr1l	equ	0xFE1
 36268                           bsr	equ	0xFE0
 36269                           indf2	equ	0xFDF
 36270                           postinc2	equ	0xFDE
 36271                           postdec2	equ	0xFDD
 36272                           plusw2	equ	0xFDB
 36273                           fsr2h	equ	0xFDA
 36274                           fsr2l	equ	0xFD9
 36275                           status	equ	0xFD8
 36276                           
 36277 ;; *************** function i2_WriteFIFO *****************
 36278 ;; Defined at:
 36279 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 36280 ;; Parameters:    Size  Location     Type
 36281 ;;  Data            1    wreg     unsigned char 
 36282 ;; Auto vars:     Size  Location     Type
 36283 ;;  Data            1    2[BANK0 ] unsigned char 
 36284 ;;  WriteFIFO       1    4[BANK0 ] unsigned char 
 36285 ;;  WriteFIFO       1    3[BANK0 ] unsigned char 
 36286 ;; Return value:  Size  Location     Type
 36287 ;;		None               void
 36288 ;; Registers used:
 36289 ;;		wreg, status,2, cstack
 36290 ;; Tracked objects:
 36291 ;;		On entry : 0/0
 36292 ;;		On exit  : 0/0
 36293 ;;		Unchanged: 0/0
 36294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36296 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36298 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36299 ;;Total ram usage:        3 bytes
 36300 ;; Hardware stack levels used:    1
 36301 ;; Hardware stack levels required when called:    1
 36302 ;; This function calls:
 36303 ;;		i2_SPIPut
 36304 ;; This function is called by:
 36305 ;;		i2_TxPacket
 36306 ;; This function uses a non-reentrant model
 36307 ;;
 36308                           
 36309                           	psect	text107
 36310  00AB74                     __ptext107:
 36311                           	opt stack 0
 36312  00AB74                     i2_WriteFIFO:
 36313                           	opt stack 4
 36314                           
 36315                           ; BSR set to: 0
 36316                           ;incstack = 0
 36317                           ;i2WriteFIFO@Data stored from wreg
 36318  00AB74  0100               	movlb	0	; () banked
 36319  00AB76  6F62               	movwf	i2WriteFIFO@Data& (0+255),b
 36320                           
 36321                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 36322  00AB78  0E00               	movlw	0
 36323  00AB7A  B6F0               	btfsc	intcon3,3,c	;volatile
 36324  00AB7C  0E01               	movlw	1
 36325  00AB7E  0100               	movlb	0	; () banked
 36326  00AB80  6F63               	movwf	i2WriteFIFO@IRQ1select& (0+255),b
 36327                           
 36328                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 36329  00AB82  0E00               	movlw	0
 36330  00AB84  B8F2               	btfsc	intcon,4,c	;volatile
 36331  00AB86  0E01               	movlw	1
 36332  00AB88  0100               	movlb	0	; () banked
 36333  00AB8A  6F64               	movwf	i2WriteFIFO@IRQ0select& (0+255),b
 36334                           
 36335                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 36336  00AB8C  98F2               	bcf	intcon,4,c	;volatile
 36337                           
 36338                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 36339  00AB8E  96F0               	bcf	intcon3,3,c	;volatile
 36340                           
 36341                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 36342  00AB90  9C8B               	bcf	3979,6,c	;volatile
 36343                           
 36344                           ; BSR set to: 0
 36345                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 36346  00AB92  0100               	movlb	0	; () banked
 36347  00AB94  5162               	movf	i2WriteFIFO@Data& (0+255),w,b
 36348  00AB96  EC7D  F057         	call	i2_SPIPut
 36349                           
 36350                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 36351  00AB9A  8C8B               	bsf	3979,6,c	;volatile
 36352                           
 36353                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 36354  00AB9C  0100               	movlb	0	; () banked
 36355  00AB9E  B163               	btfsc	i2WriteFIFO@IRQ1select& (0+255),0,b
 36356  00ABA0  D002               	bra	i2u1227_45
 36357  00ABA2  96F0               	bcf	intcon3,3,c	;volatile
 36358  00ABA4  D001               	bra	i2u1227_46
 36359  00ABA6                     i2u1227_45:
 36360  00ABA6  86F0               	bsf	intcon3,3,c	;volatile
 36361  00ABA8                     i2u1227_46:
 36362                           
 36363                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 36364  00ABA8  0100               	movlb	0	; () banked
 36365  00ABAA  B164               	btfsc	i2WriteFIFO@IRQ0select& (0+255),0,b
 36366  00ABAC  D002               	bra	i2u1228_45
 36367  00ABAE  98F2               	bcf	intcon,4,c	;volatile
 36368  00ABB0  D001               	bra	i2u1228_46
 36369  00ABB2                     i2u1228_45:
 36370  00ABB2  88F2               	bsf	intcon,4,c	;volatile
 36371  00ABB4                     i2u1228_46:
 36372  00ABB4  0012               	return		;funcret
 36373  00ABB6                     __end_ofi2_WriteFIFO:
 36374                           	opt stack 0
 36375                           pclatu	equ	0xFFB
 36376                           pclath	equ	0xFFA
 36377                           tblptru	equ	0xFF8
 36378                           tblptrh	equ	0xFF7
 36379                           tblptrl	equ	0xFF6
 36380                           tablat	equ	0xFF5
 36381                           prodh	equ	0xFF4
 36382                           prodl	equ	0xFF3
 36383                           intcon	equ	0xFF2
 36384                           intcon2	equ	0xFF1
 36385                           intcon3	equ	0xFF0
 36386                           indf0	equ	0xFEF
 36387                           postinc0	equ	0xFEE
 36388                           plusw0	equ	0xFEB
 36389                           fsr0h	equ	0xFEA
 36390                           fsr0l	equ	0xFE9
 36391                           wreg	equ	0xFE8
 36392                           indf1	equ	0xFE7
 36393                           postinc1	equ	0xFE6
 36394                           postdec1	equ	0xFE5
 36395                           plusw1	equ	0xFE3
 36396                           fsr1h	equ	0xFE2
 36397                           fsr1l	equ	0xFE1
 36398                           bsr	equ	0xFE0
 36399                           indf2	equ	0xFDF
 36400                           postinc2	equ	0xFDE
 36401                           postdec2	equ	0xFDD
 36402                           plusw2	equ	0xFDB
 36403                           fsr2h	equ	0xFDA
 36404                           fsr2l	equ	0xFD9
 36405                           status	equ	0xFD8
 36406                           
 36407 ;; *************** function i2_SetRFMode *****************
 36408 ;; Defined at:
 36409 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 36410 ;; Parameters:    Size  Location     Type
 36411 ;;  mode            1    wreg     unsigned char 
 36412 ;; Auto vars:     Size  Location     Type
 36413 ;;  mode            1    6[BANK0 ] unsigned char 
 36414 ;; Return value:  Size  Location     Type
 36415 ;;		None               void
 36416 ;; Registers used:
 36417 ;;		wreg, status,2, status,0, cstack
 36418 ;; Tracked objects:
 36419 ;;		On entry : 0/0
 36420 ;;		On exit  : 0/0
 36421 ;;		Unchanged: 0/0
 36422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36427 ;;Total ram usage:        1 bytes
 36428 ;; Hardware stack levels used:    1
 36429 ;; Hardware stack levels required when called:    2
 36430 ;; This function calls:
 36431 ;;		i2_RegisterSet
 36432 ;; This function is called by:
 36433 ;;		i2_TxPacket
 36434 ;; This function uses a non-reentrant model
 36435 ;;
 36436                           
 36437                           	psect	text108
 36438  009FE2                     __ptext108:
 36439                           	opt stack 0
 36440  009FE2                     i2_SetRFMode:
 36441                           	opt stack 3
 36442                           
 36443                           ;incstack = 0
 36444                           ;i2SetRFMode@mode stored from wreg
 36445  009FE2  0100               	movlb	0	; () banked
 36446  009FE4  6F66               	movwf	i2SetRFMode@mode& (0+255),b
 36447                           
 36448                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 36449  009FE6  D037               	goto	i2l12196
 36450  009FE8                     i2l12174:
 36451                           
 36452                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 36453  009FE8  0E00               	movlw	0
 36454  009FEA  0100               	movlb	0	; () banked
 36455  009FEC  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 36456  009FEE  0E96               	movlw	150
 36457  009FF0  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 36458  009FF2  EC54  F055         	call	i2_RegisterSet	;wreg free
 36459                           
 36460                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 36461  009FF6  0E80               	movlw	128
 36462  009FF8  0100               	movlb	0	; () banked
 36463  009FFA  6FDD               	movwf	_RF_Mode& (0+255),b
 36464                           
 36465                           ;drv_mrf_miwi_89xa.c: 672: break;
 36466  009FFC  0012               	return	
 36467  009FFE                     i2l12178:
 36468                           
 36469                           ; BSR set to: 0
 36470                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 36471  009FFE  0E00               	movlw	0
 36472  00A000  0100               	movlb	0	; () banked
 36473  00A002  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 36474  00A004  0E76               	movlw	118
 36475  00A006  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 36476  00A008  EC54  F055         	call	i2_RegisterSet	;wreg free
 36477                           
 36478                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 36479  00A00C  0E60               	movlw	96
 36480  00A00E  0100               	movlb	0	; () banked
 36481  00A010  6FDD               	movwf	_RF_Mode& (0+255),b
 36482                           
 36483                           ;drv_mrf_miwi_89xa.c: 676: break;
 36484  00A012  0012               	return	
 36485  00A014                     i2l12182:
 36486                           
 36487                           ; BSR set to: 0
 36488                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 36489  00A014  0E00               	movlw	0
 36490  00A016  0100               	movlb	0	; () banked
 36491  00A018  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 36492  00A01A  0E56               	movlw	86
 36493  00A01C  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 36494  00A01E  EC54  F055         	call	i2_RegisterSet	;wreg free
 36495                           
 36496                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 36497  00A022  0E40               	movlw	64
 36498  00A024  0100               	movlb	0	; () banked
 36499  00A026  6FDD               	movwf	_RF_Mode& (0+255),b
 36500                           
 36501                           ;drv_mrf_miwi_89xa.c: 680: break;
 36502  00A028  0012               	return	
 36503  00A02A                     i2l12186:
 36504                           
 36505                           ; BSR set to: 0
 36506                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 36507  00A02A  0E00               	movlw	0
 36508  00A02C  0100               	movlb	0	; () banked
 36509  00A02E  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 36510  00A030  0E36               	movlw	54
 36511  00A032  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 36512  00A034  EC54  F055         	call	i2_RegisterSet	;wreg free
 36513                           
 36514                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 36515  00A038  0E20               	movlw	32
 36516  00A03A  0100               	movlb	0	; () banked
 36517  00A03C  6FDD               	movwf	_RF_Mode& (0+255),b
 36518                           
 36519                           ;drv_mrf_miwi_89xa.c: 684: break;
 36520  00A03E  0012               	return	
 36521  00A040                     i2l12190:
 36522                           
 36523                           ; BSR set to: 0
 36524                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 36525  00A040  0E00               	movlw	0
 36526  00A042  0100               	movlb	0	; () banked
 36527  00A044  6F63               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 36528  00A046  0E16               	movlw	22
 36529  00A048  6F62               	movwf	i2RegisterSet@setting& (0+255),b
 36530  00A04A  EC54  F055         	call	i2_RegisterSet	;wreg free
 36531                           
 36532                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 36533  00A04E  0E00               	movlw	0
 36534  00A050  0100               	movlb	0	; () banked
 36535  00A052  6FDD               	movwf	_RF_Mode& (0+255),b
 36536                           
 36537                           ; BSR set to: 0
 36538                           ;drv_mrf_miwi_89xa.c: 689: }
 36539                           
 36540                           ;drv_mrf_miwi_89xa.c: 688: break;
 36541  00A054  0012               	return	
 36542  00A056                     i2l12196:
 36543  00A056  0100               	movlb	0	; () banked
 36544  00A058  5166               	movf	i2SetRFMode@mode& (0+255),w,b
 36545                           
 36546                           ; Switch size 1, requested type "space"
 36547                           ; Number of cases is 5, Range of values is 0 to 128
 36548                           ; switch strategies available:
 36549                           ; Name         Instructions Cycles
 36550                           ; simple_byte           16     9 (average)
 36551                           ;	Chosen strategy is simple_byte
 36552  00A05A  0A00               	xorlw	0	; case 0
 36553  00A05C  B4D8               	btfsc	status,2,c
 36554  00A05E  D7F0               	goto	i2l12190
 36555  00A060  0A20               	xorlw	32	; case 32
 36556  00A062  B4D8               	btfsc	status,2,c
 36557  00A064  D7E2               	goto	i2l12186
 36558  00A066  0A60               	xorlw	96	; case 64
 36559  00A068  B4D8               	btfsc	status,2,c
 36560  00A06A  D7D4               	goto	i2l12182
 36561  00A06C  0A20               	xorlw	32	; case 96
 36562  00A06E  B4D8               	btfsc	status,2,c
 36563  00A070  D7C6               	goto	i2l12178
 36564  00A072  0AE0               	xorlw	224	; case 128
 36565  00A074  A4D8               	btfss	status,2,c
 36566  00A076  0012               	return	
 36567  00A078  D7B7               	goto	i2l12174
 36568  00A07A                     __end_ofi2_SetRFMode:
 36569                           	opt stack 0
 36570                           pclatu	equ	0xFFB
 36571                           pclath	equ	0xFFA
 36572                           tblptru	equ	0xFF8
 36573                           tblptrh	equ	0xFF7
 36574                           tblptrl	equ	0xFF6
 36575                           tablat	equ	0xFF5
 36576                           prodh	equ	0xFF4
 36577                           prodl	equ	0xFF3
 36578                           intcon	equ	0xFF2
 36579                           intcon2	equ	0xFF1
 36580                           intcon3	equ	0xFF0
 36581                           indf0	equ	0xFEF
 36582                           postinc0	equ	0xFEE
 36583                           plusw0	equ	0xFEB
 36584                           fsr0h	equ	0xFEA
 36585                           fsr0l	equ	0xFE9
 36586                           wreg	equ	0xFE8
 36587                           indf1	equ	0xFE7
 36588                           postinc1	equ	0xFE6
 36589                           postdec1	equ	0xFE5
 36590                           plusw1	equ	0xFE3
 36591                           fsr1h	equ	0xFE2
 36592                           fsr1l	equ	0xFE1
 36593                           bsr	equ	0xFE0
 36594                           indf2	equ	0xFDF
 36595                           postinc2	equ	0xFDE
 36596                           postdec2	equ	0xFDD
 36597                           plusw2	equ	0xFDB
 36598                           fsr2h	equ	0xFDA
 36599                           fsr2l	equ	0xFD9
 36600                           status	equ	0xFD8
 36601                           
 36602 ;; *************** function i2_RegisterSet *****************
 36603 ;; Defined at:
 36604 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 36605 ;; Parameters:    Size  Location     Type
 36606 ;;  setting         2    2[BANK0 ] unsigned int 
 36607 ;; Auto vars:     Size  Location     Type
 36608 ;;  RegisterSet     1    5[BANK0 ] unsigned char 
 36609 ;;  RegisterSet     1    4[BANK0 ] unsigned char 
 36610 ;; Return value:  Size  Location     Type
 36611 ;;		None               void
 36612 ;; Registers used:
 36613 ;;		wreg, status,2, cstack
 36614 ;; Tracked objects:
 36615 ;;		On entry : 0/0
 36616 ;;		On exit  : 0/0
 36617 ;;		Unchanged: 0/0
 36618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36620 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36622 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36623 ;;Total ram usage:        4 bytes
 36624 ;; Hardware stack levels used:    1
 36625 ;; Hardware stack levels required when called:    1
 36626 ;; This function calls:
 36627 ;;		i2_SPIPut
 36628 ;; This function is called by:
 36629 ;;		i2_TxPacket
 36630 ;;		i2_SetRFMode
 36631 ;; This function uses a non-reentrant model
 36632 ;;
 36633                           
 36634                           	psect	text109
 36635  00AAA8                     __ptext109:
 36636                           	opt stack 0
 36637  00AAA8                     i2_RegisterSet:
 36638                           	opt stack 3
 36639                           
 36640                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 36641                           
 36642                           ; BSR set to: 0
 36643                           ;incstack = 0
 36644  00AAA8  0E00               	movlw	0
 36645  00AAAA  B6F0               	btfsc	intcon3,3,c	;volatile
 36646  00AAAC  0E01               	movlw	1
 36647  00AAAE  0100               	movlb	0	; () banked
 36648  00AAB0  6F64               	movwf	i2RegisterSet@IRQ1select& (0+255),b
 36649                           
 36650                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 36651  00AAB2  0E00               	movlw	0
 36652  00AAB4  B8F2               	btfsc	intcon,4,c	;volatile
 36653  00AAB6  0E01               	movlw	1
 36654  00AAB8  0100               	movlb	0	; () banked
 36655  00AABA  6F65               	movwf	i2RegisterSet@IRQ0select& (0+255),b
 36656                           
 36657                           ; BSR set to: 0
 36658                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 36659  00AABC  98F2               	bcf	intcon,4,c	;volatile
 36660                           
 36661                           ; BSR set to: 0
 36662                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 36663  00AABE  96F0               	bcf	intcon3,3,c	;volatile
 36664                           
 36665                           ; BSR set to: 0
 36666                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 36667  00AAC0  968A               	bcf	3978,3,c	;volatile
 36668                           
 36669                           ; BSR set to: 0
 36670                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 36671  00AAC2  0100               	movlb	0	; () banked
 36672  00AAC4  5163               	movf	(i2RegisterSet@setting+1)& (0+255),w,b
 36673  00AAC6  EC7D  F057         	call	i2_SPIPut
 36674                           
 36675                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 36676  00AACA  0100               	movlb	0	; () banked
 36677  00AACC  5162               	movf	i2RegisterSet@setting& (0+255),w,b
 36678  00AACE  EC7D  F057         	call	i2_SPIPut
 36679                           
 36680                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 36681  00AAD2  868A               	bsf	3978,3,c	;volatile
 36682                           
 36683                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 36684  00AAD4  0100               	movlb	0	; () banked
 36685  00AAD6  B164               	btfsc	i2RegisterSet@IRQ1select& (0+255),0,b
 36686  00AAD8  D002               	bra	i2u1061_45
 36687  00AADA  96F0               	bcf	intcon3,3,c	;volatile
 36688  00AADC  D001               	bra	i2u1061_46
 36689  00AADE                     i2u1061_45:
 36690  00AADE  86F0               	bsf	intcon3,3,c	;volatile
 36691  00AAE0                     i2u1061_46:
 36692                           
 36693                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 36694  00AAE0  0100               	movlb	0	; () banked
 36695  00AAE2  B165               	btfsc	i2RegisterSet@IRQ0select& (0+255),0,b
 36696  00AAE4  D002               	bra	i2u1062_45
 36697  00AAE6  98F2               	bcf	intcon,4,c	;volatile
 36698  00AAE8  D001               	bra	i2u1062_46
 36699  00AAEA                     i2u1062_45:
 36700  00AAEA  88F2               	bsf	intcon,4,c	;volatile
 36701  00AAEC                     i2u1062_46:
 36702  00AAEC  0012               	return		;funcret
 36703  00AAEE                     __end_ofi2_RegisterSet:
 36704                           	opt stack 0
 36705                           pclatu	equ	0xFFB
 36706                           pclath	equ	0xFFA
 36707                           tblptru	equ	0xFF8
 36708                           tblptrh	equ	0xFF7
 36709                           tblptrl	equ	0xFF6
 36710                           tablat	equ	0xFF5
 36711                           prodh	equ	0xFF4
 36712                           prodl	equ	0xFF3
 36713                           intcon	equ	0xFF2
 36714                           intcon2	equ	0xFF1
 36715                           intcon3	equ	0xFF0
 36716                           indf0	equ	0xFEF
 36717                           postinc0	equ	0xFEE
 36718                           plusw0	equ	0xFEB
 36719                           fsr0h	equ	0xFEA
 36720                           fsr0l	equ	0xFE9
 36721                           wreg	equ	0xFE8
 36722                           indf1	equ	0xFE7
 36723                           postinc1	equ	0xFE6
 36724                           postdec1	equ	0xFE5
 36725                           plusw1	equ	0xFE3
 36726                           fsr1h	equ	0xFE2
 36727                           fsr1l	equ	0xFE1
 36728                           bsr	equ	0xFE0
 36729                           indf2	equ	0xFDF
 36730                           postinc2	equ	0xFDE
 36731                           postdec2	equ	0xFDD
 36732                           plusw2	equ	0xFDB
 36733                           fsr2h	equ	0xFDA
 36734                           fsr2l	equ	0xFD9
 36735                           status	equ	0xFD8
 36736                           
 36737 ;; *************** function i2_RegisterRead *****************
 36738 ;; Defined at:
 36739 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 36740 ;; Parameters:    Size  Location     Type
 36741 ;;  address         1    wreg     unsigned char 
 36742 ;; Auto vars:     Size  Location     Type
 36743 ;;  address         1    5[BANK0 ] unsigned char 
 36744 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 36745 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 36746 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 36747 ;; Return value:  Size  Location     Type
 36748 ;;                  1    wreg      unsigned char 
 36749 ;; Registers used:
 36750 ;;		wreg, status,2, status,0, cstack
 36751 ;; Tracked objects:
 36752 ;;		On entry : 0/0
 36753 ;;		On exit  : 0/0
 36754 ;;		Unchanged: 0/0
 36755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36757 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36759 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36760 ;;Total ram usage:        4 bytes
 36761 ;; Hardware stack levels used:    1
 36762 ;; Hardware stack levels required when called:    2
 36763 ;; This function calls:
 36764 ;;		i2_SPIGet
 36765 ;;		i2_SPIPut
 36766 ;; This function is called by:
 36767 ;;		_MIWIInterruptHandler
 36768 ;;		i2_TxPacket
 36769 ;; This function uses a non-reentrant model
 36770 ;;
 36771                           
 36772                           	psect	text110
 36773  00A972                     __ptext110:
 36774                           	opt stack 0
 36775  00A972                     i2_RegisterRead:
 36776                           	opt stack 3
 36777                           
 36778                           ;incstack = 0
 36779                           ;i2RegisterRead@address stored from wreg
 36780  00A972  0100               	movlb	0	; () banked
 36781  00A974  6F65               	movwf	i2RegisterRead@address& (0+255),b
 36782                           
 36783                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 36784                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 36785  00A976  0E00               	movlw	0
 36786  00A978  B6F0               	btfsc	intcon3,3,c	;volatile
 36787  00A97A  0E01               	movlw	1
 36788  00A97C  0100               	movlb	0	; () banked
 36789  00A97E  6F63               	movwf	i2RegisterRead@IRQ1select& (0+255),b
 36790                           
 36791                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 36792  00A980  0E00               	movlw	0
 36793  00A982  B8F2               	btfsc	intcon,4,c	;volatile
 36794  00A984  0E01               	movlw	1
 36795  00A986  0100               	movlb	0	; () banked
 36796  00A988  6F64               	movwf	i2RegisterRead@IRQ0select& (0+255),b
 36797                           
 36798                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 36799  00A98A  98F2               	bcf	intcon,4,c	;volatile
 36800                           
 36801                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 36802  00A98C  96F0               	bcf	intcon3,3,c	;volatile
 36803                           
 36804                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 36805  00A98E  968A               	bcf	3978,3,c	;volatile
 36806                           
 36807                           ; BSR set to: 0
 36808                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 36809  00A990  0100               	movlb	0	; () banked
 36810  00A992  5165               	movf	i2RegisterRead@address& (0+255),w,b
 36811  00A994  0940               	iorlw	64
 36812  00A996  0100               	movlb	0	; () banked
 36813  00A998  6F65               	movwf	i2RegisterRead@address& (0+255),b
 36814                           
 36815                           ; BSR set to: 0
 36816                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 36817  00A99A  0100               	movlb	0	; () banked
 36818  00A99C  5165               	movf	i2RegisterRead@address& (0+255),w,b
 36819  00A99E  EC7D  F057         	call	i2_SPIPut
 36820                           
 36821                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 36822  00A9A2  ECC0  F057         	call	i2_SPIGet	;wreg free
 36823  00A9A6  0100               	movlb	0	; () banked
 36824  00A9A8  6F62               	movwf	i2RegisterRead@value& (0+255),b
 36825                           
 36826                           ; BSR set to: 0
 36827                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 36828  00A9AA  868A               	bsf	3978,3,c	;volatile
 36829                           
 36830                           ; BSR set to: 0
 36831                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 36832  00A9AC  0100               	movlb	0	; () banked
 36833  00A9AE  B163               	btfsc	i2RegisterRead@IRQ1select& (0+255),0,b
 36834  00A9B0  D002               	bra	i2u1225_45
 36835  00A9B2  96F0               	bcf	intcon3,3,c	;volatile
 36836  00A9B4  D001               	bra	i2u1225_46
 36837  00A9B6                     i2u1225_45:
 36838  00A9B6  86F0               	bsf	intcon3,3,c	;volatile
 36839  00A9B8                     i2u1225_46:
 36840                           
 36841                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 36842  00A9B8  0100               	movlb	0	; () banked
 36843  00A9BA  B164               	btfsc	i2RegisterRead@IRQ0select& (0+255),0,b
 36844  00A9BC  D002               	bra	i2u1226_45
 36845  00A9BE  98F2               	bcf	intcon,4,c	;volatile
 36846  00A9C0  D001               	bra	i2u1226_46
 36847  00A9C2                     i2u1226_45:
 36848  00A9C2  88F2               	bsf	intcon,4,c	;volatile
 36849  00A9C4                     i2u1226_46:
 36850                           
 36851                           ;drv_mrf_miwi_89xa.c: 222: return value;
 36852  00A9C4  0100               	movlb	0	; () banked
 36853  00A9C6  5162               	movf	i2RegisterRead@value& (0+255),w,b
 36854  00A9C8  0012               	return	
 36855  00A9CA                     __end_ofi2_RegisterRead:
 36856                           	opt stack 0
 36857                           pclatu	equ	0xFFB
 36858                           pclath	equ	0xFFA
 36859                           tblptru	equ	0xFF8
 36860                           tblptrh	equ	0xFF7
 36861                           tblptrl	equ	0xFF6
 36862                           tablat	equ	0xFF5
 36863                           prodh	equ	0xFF4
 36864                           prodl	equ	0xFF3
 36865                           intcon	equ	0xFF2
 36866                           intcon2	equ	0xFF1
 36867                           intcon3	equ	0xFF0
 36868                           indf0	equ	0xFEF
 36869                           postinc0	equ	0xFEE
 36870                           plusw0	equ	0xFEB
 36871                           fsr0h	equ	0xFEA
 36872                           fsr0l	equ	0xFE9
 36873                           wreg	equ	0xFE8
 36874                           indf1	equ	0xFE7
 36875                           postinc1	equ	0xFE6
 36876                           postdec1	equ	0xFE5
 36877                           plusw1	equ	0xFE3
 36878                           fsr1h	equ	0xFE2
 36879                           fsr1l	equ	0xFE1
 36880                           bsr	equ	0xFE0
 36881                           indf2	equ	0xFDF
 36882                           postinc2	equ	0xFDE
 36883                           postdec2	equ	0xFDD
 36884                           plusw2	equ	0xFDB
 36885                           fsr2h	equ	0xFDA
 36886                           fsr2l	equ	0xFD9
 36887                           status	equ	0xFD8
 36888                           
 36889 ;; *************** function i2_SPIGet *****************
 36890 ;; Defined at:
 36891 ;;		line 104 in file "src/18F27J53/spi.c"
 36892 ;; Parameters:    Size  Location     Type
 36893 ;;		None
 36894 ;; Auto vars:     Size  Location     Type
 36895 ;;		None
 36896 ;; Return value:  Size  Location     Type
 36897 ;;                  1    wreg      unsigned char 
 36898 ;; Registers used:
 36899 ;;		wreg, status,2, cstack
 36900 ;; Tracked objects:
 36901 ;;		On entry : 0/0
 36902 ;;		On exit  : 0/0
 36903 ;;		Unchanged: 0/0
 36904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36909 ;;Total ram usage:        0 bytes
 36910 ;; Hardware stack levels used:    1
 36911 ;; Hardware stack levels required when called:    1
 36912 ;; This function calls:
 36913 ;;		i2_SPIPut
 36914 ;; This function is called by:
 36915 ;;		_MIWIInterruptHandler
 36916 ;;		i2_RegisterRead
 36917 ;; This function uses a non-reentrant model
 36918 ;;
 36919                           
 36920                           	psect	text111
 36921  00AF80                     __ptext111:
 36922                           	opt stack 0
 36923  00AF80                     i2_SPIGet:
 36924                           	opt stack 3
 36925                           
 36926                           ;spi.c: 128: SPIPut(0x00);
 36927                           
 36928                           ; BSR set to: 0
 36929                           ;incstack = 0
 36930  00AF80  0E00               	movlw	0
 36931  00AF82  EC7D  F057         	call	i2_SPIPut
 36932                           
 36933                           ;spi.c: 129: return SSP2BUF;
 36934  00AF86  5075               	movf	3957,w,c	;volatile
 36935  00AF88  0012               	return	
 36936  00AF8A                     __end_ofi2_SPIGet:
 36937                           	opt stack 0
 36938                           pclatu	equ	0xFFB
 36939                           pclath	equ	0xFFA
 36940                           tblptru	equ	0xFF8
 36941                           tblptrh	equ	0xFF7
 36942                           tblptrl	equ	0xFF6
 36943                           tablat	equ	0xFF5
 36944                           prodh	equ	0xFF4
 36945                           prodl	equ	0xFF3
 36946                           intcon	equ	0xFF2
 36947                           intcon2	equ	0xFF1
 36948                           intcon3	equ	0xFF0
 36949                           indf0	equ	0xFEF
 36950                           postinc0	equ	0xFEE
 36951                           plusw0	equ	0xFEB
 36952                           fsr0h	equ	0xFEA
 36953                           fsr0l	equ	0xFE9
 36954                           wreg	equ	0xFE8
 36955                           indf1	equ	0xFE7
 36956                           postinc1	equ	0xFE6
 36957                           postdec1	equ	0xFE5
 36958                           plusw1	equ	0xFE3
 36959                           fsr1h	equ	0xFE2
 36960                           fsr1l	equ	0xFE1
 36961                           bsr	equ	0xFE0
 36962                           indf2	equ	0xFDF
 36963                           postinc2	equ	0xFDE
 36964                           postdec2	equ	0xFDD
 36965                           plusw2	equ	0xFDB
 36966                           fsr2h	equ	0xFDA
 36967                           fsr2l	equ	0xFD9
 36968                           status	equ	0xFD8
 36969                           
 36970 ;; *************** function i2_SPIPut *****************
 36971 ;; Defined at:
 36972 ;;		line 45 in file "src/18F27J53/spi.c"
 36973 ;; Parameters:    Size  Location     Type
 36974 ;;  v               1    wreg     unsigned char 
 36975 ;; Auto vars:     Size  Location     Type
 36976 ;;  v               1    1[BANK0 ] unsigned char 
 36977 ;;  SPIPut          1    0[BANK0 ] unsigned char 
 36978 ;; Return value:  Size  Location     Type
 36979 ;;		None               void
 36980 ;; Registers used:
 36981 ;;		wreg
 36982 ;; Tracked objects:
 36983 ;;		On entry : 0/0
 36984 ;;		On exit  : 0/0
 36985 ;;		Unchanged: 0/0
 36986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36991 ;;Total ram usage:        2 bytes
 36992 ;; Hardware stack levels used:    1
 36993 ;; This function calls:
 36994 ;;		Nothing
 36995 ;; This function is called by:
 36996 ;;		i2_SPIGet
 36997 ;;		i2_RegisterSet
 36998 ;;		i2_RegisterRead
 36999 ;;		i2_WriteFIFO
 37000 ;; This function uses a non-reentrant model
 37001 ;;
 37002                           
 37003                           	psect	text112
 37004  00AEFA                     __ptext112:
 37005                           	opt stack 0
 37006  00AEFA                     i2_SPIPut:
 37007                           	opt stack 4
 37008                           
 37009                           ;incstack = 0
 37010                           ;i2SPIPut@v stored from wreg
 37011  00AEFA  0100               	movlb	0	; () banked
 37012  00AEFC  6F61               	movwf	i2SPIPut@v& (0+255),b
 37013                           
 37014                           ;spi.c: 66: {
 37015                           ;spi.c: 68: uint8_t i;
 37016                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 37017  00AEFE  9EA4               	bcf	4004,7,c	;volatile
 37018                           
 37019                           ;spi.c: 72: i = SSP2BUF;
 37020  00AF00  CF75 F060          	movff	3957,i2SPIPut@i	;volatile
 37021  00AF04                     i2l29:
 37022                           
 37023                           ;spi.c: 75: {
 37024                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 37025  00AF04  9E72               	bcf	3954,7,c	;volatile
 37026                           
 37027                           ;spi.c: 77: SSP2BUF = v;
 37028  00AF06  C061  FF75         	movff	i2SPIPut@v,3957	;volatile
 37029                           
 37030                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 37031  00AF0A  BE72               	btfsc	3954,7,c	;volatile
 37032  00AF0C  D7FB               	goto	i2l29
 37033  00AF0E                     i2l31:
 37034  00AF0E  AEA4               	btfss	4004,7,c	;volatile
 37035  00AF10  D7FE               	goto	i2l31
 37036                           
 37037                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 37038  00AF12  9EA4               	bcf	4004,7,c	;volatile
 37039  00AF14  0012               	return		;funcret
 37040  00AF16                     __end_ofi2_SPIPut:
 37041                           	opt stack 0
 37042                           pclatu	equ	0xFFB
 37043                           pclath	equ	0xFFA
 37044                           tblptru	equ	0xFF8
 37045                           tblptrh	equ	0xFF7
 37046                           tblptrl	equ	0xFF6
 37047                           tablat	equ	0xFF5
 37048                           prodh	equ	0xFF4
 37049                           prodl	equ	0xFF3
 37050                           intcon	equ	0xFF2
 37051                           intcon2	equ	0xFF1
 37052                           intcon3	equ	0xFF0
 37053                           indf0	equ	0xFEF
 37054                           postinc0	equ	0xFEE
 37055                           plusw0	equ	0xFEB
 37056                           fsr0h	equ	0xFEA
 37057                           fsr0l	equ	0xFE9
 37058                           wreg	equ	0xFE8
 37059                           indf1	equ	0xFE7
 37060                           postinc1	equ	0xFE6
 37061                           postdec1	equ	0xFE5
 37062                           plusw1	equ	0xFE3
 37063                           fsr1h	equ	0xFE2
 37064                           fsr1l	equ	0xFE1
 37065                           bsr	equ	0xFE0
 37066                           indf2	equ	0xFDF
 37067                           postinc2	equ	0xFDE
 37068                           postdec2	equ	0xFDD
 37069                           plusw2	equ	0xFDB
 37070                           fsr2h	equ	0xFDA
 37071                           fsr2l	equ	0xFD9
 37072                           status	equ	0xFD8
 37073                           
 37074 ;; *************** function i2_MiWi_TickGet *****************
 37075 ;; Defined at:
 37076 ;;		line 105 in file "src/18F27J53/symbol.c"
 37077 ;; Parameters:    Size  Location     Type
 37078 ;;		None
 37079 ;; Auto vars:     Size  Location     Type
 37080 ;;  MiWi_TickGet    4    6[BANK0 ] struct _MIWI_TICK
 37081 ;;  MiWi_TickGet    1    5[BANK0 ] unsigned char 
 37082 ;; Return value:  Size  Location     Type
 37083 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 37084 ;; Registers used:
 37085 ;;		wreg, status,2, status,0
 37086 ;; Tracked objects:
 37087 ;;		On entry : 0/0
 37088 ;;		On exit  : 0/0
 37089 ;;		Unchanged: 0/0
 37090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37092 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37094 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37095 ;;Total ram usage:       10 bytes
 37096 ;; Hardware stack levels used:    1
 37097 ;; This function calls:
 37098 ;;		Nothing
 37099 ;; This function is called by:
 37100 ;;		_MIWIInterruptHandler
 37101 ;;		i2_TxPacket
 37102 ;; This function uses a non-reentrant model
 37103 ;;
 37104                           
 37105                           	psect	text113
 37106  00A522                     __ptext113:
 37107                           	opt stack 0
 37108  00A522                     i2_MiWi_TickGet:
 37109                           	opt stack 5
 37110                           
 37111                           ;symbol.c: 107: MIWI_TICK currentTime;
 37112                           ;symbol.c: 110: uint8_t failureCounter;
 37113                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 37114                           
 37115                           ;incstack = 0
 37116  00A522  909D               	bcf	3997,0,c	;volatile
 37117                           
 37118                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 37119  00A524  0E00               	movlw	0
 37120  00A526  0100               	movlb	0	; () banked
 37121  00A528  6F68               	movwf	(i2MiWi_TickGet@currentTime+2)& (0+255),b
 37122                           
 37123                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 37124  00A52A  0E00               	movlw	0
 37125  00A52C  0100               	movlb	0	; () banked
 37126  00A52E  6F69               	movwf	(i2MiWi_TickGet@currentTime+3)& (0+255),b
 37127                           
 37128                           ;symbol.c: 119: failureCounter = 0;
 37129  00A530  0E00               	movlw	0
 37130  00A532  0100               	movlb	0	; () banked
 37131  00A534  6F65               	movwf	i2MiWi_TickGet@failureCounter& (0+255),b
 37132  00A536                     i2l17754:
 37133                           
 37134                           ; BSR set to: 0
 37135                           ;symbol.c: 122: {
 37136                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 37137  00A536  CFCE F066          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 37138                           
 37139                           ; BSR set to: 0
 37140                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 37141  00A53A  CFCF F067          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 37142                           
 37143                           ; BSR set to: 0
 37144                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 37145  00A53E  0100               	movlb	0	; () banked
 37146  00A540  2966               	incf	i2MiWi_TickGet@currentTime& (0+255),w,b
 37147  00A542  E10D               	bnz	i2l62
 37148  00A544  0100               	movlb	0	; () banked
 37149  00A546  2967               	incf	(i2MiWi_TickGet@currentTime+1)& (0+255),w,b
 37150  00A548  A4D8               	btfss	status,2,c
 37151  00A54A  D009               	goto	i2l62
 37152                           
 37153                           ; BSR set to: 0
 37154  00A54C  0100               	movlb	0	; () banked
 37155  00A54E  2B65               	incf	i2MiWi_TickGet@failureCounter& (0+255),f,b
 37156  00A550  0565               	decf	i2MiWi_TickGet@failureCounter& (0+255),w,b
 37157  00A552  0100               	movlb	0	; () banked
 37158  00A554  6F64               	movwf	??i2_MiWi_TickGet& (0+255),b
 37159  00A556  0E02               	movlw	2
 37160  00A558  0100               	movlb	0	; () banked
 37161  00A55A  6564               	cpfsgt	??i2_MiWi_TickGet& (0+255),b
 37162  00A55C  D7EC               	goto	i2l17754
 37163  00A55E                     i2l62:
 37164                           
 37165                           ; BSR set to: 0
 37166                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 37167  00A55E  A09E               	btfss	3998,0,c	;volatile
 37168  00A560  D008               	goto	i2l17768
 37169                           
 37170                           ; BSR set to: 0
 37171                           ;symbol.c: 130: {
 37172                           ;symbol.c: 132: {
 37173                           ;symbol.c: 135: currentTime.byte.b2++;
 37174  00A562  0100               	movlb	0	; () banked
 37175  00A564  2B68               	incf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 37176                           
 37177                           ; BSR set to: 0
 37178                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 37179  00A566  0100               	movlb	0	; () banked
 37180  00A568  29E2               	incf	_timerExtension1& (0+255),w,b	;volatile
 37181  00A56A  A4D8               	btfss	status,2,c
 37182  00A56C  D002               	goto	i2l17768
 37183                           
 37184                           ; BSR set to: 0
 37185                           ;symbol.c: 137: {
 37186                           ;symbol.c: 138: currentTime.byte.b3++;
 37187  00A56E  0100               	movlb	0	; () banked
 37188  00A570  2B69               	incf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 37189  00A572                     i2l17768:
 37190                           
 37191                           ; BSR set to: 0
 37192                           ;symbol.c: 139: }
 37193                           ;symbol.c: 140: }
 37194                           ;symbol.c: 141: }
 37195                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 37196  00A572  0100               	movlb	0	; () banked
 37197  00A574  51E2               	movf	_timerExtension1& (0+255),w,b	;volatile
 37198  00A576  0100               	movlb	0	; () banked
 37199  00A578  2768               	addwf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 37200                           
 37201                           ; BSR set to: 0
 37202                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 37203  00A57A  0100               	movlb	0	; () banked
 37204  00A57C  51E3               	movf	_timerExtension2& (0+255),w,b	;volatile
 37205  00A57E  0100               	movlb	0	; () banked
 37206  00A580  2769               	addwf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 37207                           
 37208                           ; BSR set to: 0
 37209                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 37210  00A582  809D               	bsf	3997,0,c	;volatile
 37211                           
 37212                           ; BSR set to: 0
 37213                           ;symbol.c: 150: return currentTime;
 37214  00A584  C066  F060         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 37215  00A588  C067  F061         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 37216  00A58C  C068  F062         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 37217  00A590  C069  F063         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 37218  00A594  0012               	return	
 37219  00A596                     __end_ofi2_MiWi_TickGet:
 37220                           	opt stack 0
 37221                           pclatu	equ	0xFFB
 37222                           pclath	equ	0xFFA
 37223                           tblptru	equ	0xFF8
 37224                           tblptrh	equ	0xFF7
 37225                           tblptrl	equ	0xFF6
 37226                           tablat	equ	0xFF5
 37227                           prodh	equ	0xFF4
 37228                           prodl	equ	0xFF3
 37229                           intcon	equ	0xFF2
 37230                           intcon2	equ	0xFF1
 37231                           intcon3	equ	0xFF0
 37232                           indf0	equ	0xFEF
 37233                           postinc0	equ	0xFEE
 37234                           plusw0	equ	0xFEB
 37235                           fsr0h	equ	0xFEA
 37236                           fsr0l	equ	0xFE9
 37237                           wreg	equ	0xFE8
 37238                           indf1	equ	0xFE7
 37239                           postinc1	equ	0xFE6
 37240                           postdec1	equ	0xFE5
 37241                           plusw1	equ	0xFE3
 37242                           fsr1h	equ	0xFE2
 37243                           fsr1l	equ	0xFE1
 37244                           bsr	equ	0xFE0
 37245                           indf2	equ	0xFDF
 37246                           postinc2	equ	0xFDE
 37247                           postdec2	equ	0xFDD
 37248                           plusw2	equ	0xFDB
 37249                           fsr2h	equ	0xFDA
 37250                           fsr2l	equ	0xFD9
 37251                           status	equ	0xFD8
 37252                           pclatu	equ	0xFFB
 37253                           pclath	equ	0xFFA
 37254                           tblptru	equ	0xFF8
 37255                           tblptrh	equ	0xFF7
 37256                           tblptrl	equ	0xFF6
 37257                           tablat	equ	0xFF5
 37258                           prodh	equ	0xFF4
 37259                           prodl	equ	0xFF3
 37260                           intcon	equ	0xFF2
 37261                           intcon2	equ	0xFF1
 37262                           intcon3	equ	0xFF0
 37263                           indf0	equ	0xFEF
 37264                           postinc0	equ	0xFEE
 37265                           plusw0	equ	0xFEB
 37266                           fsr0h	equ	0xFEA
 37267                           fsr0l	equ	0xFE9
 37268                           wreg	equ	0xFE8
 37269                           indf1	equ	0xFE7
 37270                           postinc1	equ	0xFE6
 37271                           postdec1	equ	0xFE5
 37272                           plusw1	equ	0xFE3
 37273                           fsr1h	equ	0xFE2
 37274                           fsr1l	equ	0xFE1
 37275                           bsr	equ	0xFE0
 37276                           indf2	equ	0xFDF
 37277                           postinc2	equ	0xFDE
 37278                           postdec2	equ	0xFDD
 37279                           plusw2	equ	0xFDB
 37280                           fsr2h	equ	0xFDA
 37281                           fsr2l	equ	0xFD9
 37282                           status	equ	0xFD8
 37283                           
 37284                           	psect	param0
 37285  0000                     pclatu	equ	0xFFB
 37286                           pclath	equ	0xFFA
 37287                           tblptru	equ	0xFF8
 37288                           tblptrh	equ	0xFF7
 37289                           tblptrl	equ	0xFF6
 37290                           tablat	equ	0xFF5
 37291                           prodh	equ	0xFF4
 37292                           prodl	equ	0xFF3
 37293                           intcon	equ	0xFF2
 37294                           intcon2	equ	0xFF1
 37295                           intcon3	equ	0xFF0
 37296                           indf0	equ	0xFEF
 37297                           postinc0	equ	0xFEE
 37298                           plusw0	equ	0xFEB
 37299                           fsr0h	equ	0xFEA
 37300                           fsr0l	equ	0xFE9
 37301                           wreg	equ	0xFE8
 37302                           indf1	equ	0xFE7
 37303                           postinc1	equ	0xFE6
 37304                           postdec1	equ	0xFE5
 37305                           plusw1	equ	0xFE3
 37306                           fsr1h	equ	0xFE2
 37307                           fsr1l	equ	0xFE1
 37308                           bsr	equ	0xFE0
 37309                           indf2	equ	0xFDF
 37310                           postinc2	equ	0xFDE
 37311                           postdec2	equ	0xFDD
 37312                           plusw2	equ	0xFDB
 37313                           fsr2h	equ	0xFDA
 37314                           fsr2l	equ	0xFD9
 37315                           status	equ	0xFD8
 37316                           
 37317                           	psect	temp
 37318  00005C                     btemp:
 37319                           	opt stack 0
 37320  00005C                     	ds	1
 37321  0000                     int$flags	set	btemp
 37322                           pclatu	equ	0xFFB
 37323                           pclath	equ	0xFFA
 37324                           tblptru	equ	0xFF8
 37325                           tblptrh	equ	0xFF7
 37326                           tblptrl	equ	0xFF6
 37327                           tablat	equ	0xFF5
 37328                           prodh	equ	0xFF4
 37329                           prodl	equ	0xFF3
 37330                           intcon	equ	0xFF2
 37331                           intcon2	equ	0xFF1
 37332                           intcon3	equ	0xFF0
 37333                           indf0	equ	0xFEF
 37334                           postinc0	equ	0xFEE
 37335                           plusw0	equ	0xFEB
 37336                           fsr0h	equ	0xFEA
 37337                           fsr0l	equ	0xFE9
 37338                           wreg	equ	0xFE8
 37339                           indf1	equ	0xFE7
 37340                           postinc1	equ	0xFE6
 37341                           postdec1	equ	0xFE5
 37342                           plusw1	equ	0xFE3
 37343                           fsr1h	equ	0xFE2
 37344                           fsr1l	equ	0xFE1
 37345                           bsr	equ	0xFE0
 37346                           indf2	equ	0xFDF
 37347                           postinc2	equ	0xFDE
 37348                           postdec2	equ	0xFDD
 37349                           plusw2	equ	0xFDB
 37350                           fsr2h	equ	0xFDA
 37351                           fsr2l	equ	0xFD9
 37352                           status	equ	0xFD8


Data Sizes:
    Strings     495
    Constant    482
    Data        12
    BSS         1549
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      91
    BANK0           160     67     133
    BANK1           256    144     250
    BANK2           256      0     255
    BANK3           256     31     227
    BANK4           256      0      64
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          208      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[32]), NULL(NULL[0]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK1[2]), 

    pUsbBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> m_var.label(BANK1[3]), m_var(BANK1[9]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[9]), m_var(BANK1[9]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[9]), m_var(BANK1[9]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[7]), TX_POWER_INVALID(CODE[9]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), 
		 -> TX_POWER_N_2_DB_MW(CODE[6]), TX_POWER_1_DB_MW(CODE[6]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), 
		 -> TX_POWER_10_DB_MW(CODE[5]), TX_POWER_13_DB_MW(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_14(CODE[39]), STR_13(CODE[52]), STR_12(CODE[44]), STR_11(CODE[55]), 
		 -> STR_10(CODE[39]), STR_9(CODE[32]), STR_8(CODE[17]), STR_7(CODE[31]), 
		 -> STR_6(CODE[25]), STR_5(CODE[22]), STR_4(CODE[41]), STR_3(CODE[33]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_uint16_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    sendHIDText@str	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDText@p	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDBinary@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK2[32]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[9]), m_var(BANK1[9]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 9
		 -> TX_POWER_INVALID(CODE[9]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[6]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 41
		 -> configDescriptor1(CODE[41]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), ToSendDataBuffer(BANK3[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    S2898$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S2888$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2888$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2864$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2864$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2864$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2864$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    MiApp_NoiseDetection@RSSIValue	PTR unsigned char  size(2) Largest target is 1
		 -> noise_level(BANK1[1]), MiApp_StartConnection@RSSIValue(BANK1[1]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), 

    UnicastShortAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> openSocketInfo.ShortAddress2(BANK1[2]), openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable.Address(BIGRAMl[4]), 
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    S2010$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2010$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK2[43]), 

    S1592$DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1390$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1614$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1614$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    _SYS_InterruptLow->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i1_USBDeviceInit->i1_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler
    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_UnicastAddress
    _update_variable->_MiMAC_SetPower
    _MiMAC_SetPower->_RegisterSet
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_writables_update->_sendHIDBinary
    _send_periodic_update->_sendHIDBinary
    _send_network_register->_sendHIDBinary
    _send_complete_update->_sendHIDBinary
    _sendHIDBinary->_memcpy
    _sendHIDText->_USBTransferOnePacket
    _decode_variable->_memcpy
    _USBDeviceInit->_memset
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_UnicastShortAddress
    _UnicastShortAddress->_RouteMessage
    _RouteMessage->_SendMACPacket
    _SendBeacon->_SendMACPacket
    _SendMACPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _BroadcastJitter->_MiWi_TickGet
    _AddNodeToNetworkTable->_SearchForLongAddress
    _MiApp_StartConnection->_MiApp_NoiseDetection
    _MiApp_NoiseDetection->_MiMAC_ChannelAssessment
    _MiMAC_ChannelAssessment->___awdiv
    ___awdiv->_RegisterRead
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  971978
                                            137 BANK1      7     7      0
                                             19 BANK3     12    12      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_NoiseDetection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
               _MiApp_UnicastAddress
                     _MiMAC_SetPower
                          _MiWiTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _USBTransferOnePacket
                          _dBm_to_mW
                    _decode_variable
                             _memcpy
                      _sendHIDBinary
                        _sendHIDText
               _send_complete_update
              _send_network_register
               _send_periodic_update
              _send_writables_update
                            _sprintf
                             _strcpy
                        _timer_reset
                         _update_LED
                    _update_variable
 ---------------------------------------------------------------------------------
 (1) _update_variable                                      0     0      0    2335
                     _MiMAC_SetPower
                           _RtccWrOn
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     549
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetPower                                       3     3      0    1786
                                              6 BANK1      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _update_LED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     525
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             34    22     12   13264
                                             12 BANK1     30    18     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                          _dBm_to_mW (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    7276
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     440
                                              7 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _send_writables_update                                2     2      0   17827
                                             16 BANK1      1     1      0
              _encode_uint8_variable
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_periodic_update                                 2     2      0   23318
                                             16 BANK1      2     2      0
                            ___awdiv
                            ___lldiv
             _encode_uint16_variable
              _encode_uint8_variable
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_network_register                                0     0      0   15092
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_complete_update                                 2     2      0   23318
                                             16 BANK1      2     2      0
                            ___awdiv
                            ___lldiv
             _encode_uint16_variable
              _encode_uint8_variable
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _sendHIDBinary                                        6     3      3    9302
                                             10 BANK1      6     3      3
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               11     0     11    2735
                                              0 BANK1     11     0     11
 ---------------------------------------------------------------------------------
 (2) _encode_uint16_variable                              11     0     11    1555
                                              0 BANK1     11     0     11
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1489
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _sendHIDText                                         10     8      2    3558
                                              7 BANK1     10     8      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _decode_variable                                     20    11      9    6524
                                             10 BANK1     20    11      9
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6    5790
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _dBm_to_mW                                            3     1      2      31
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK1      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0      34
                                              0 BANK1      2     2      0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                31    27      4  331940
                                            125 BANK1     12     8      4
                                              0 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                               0     0      0  233917
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (1) _MiWiTasks                                           51    51      0  233917
                                             74 BANK1     51    51      0
              _AddNodeToNetworkTable
                    _BroadcastJitter
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
                _UnicastShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _UnicastShortAddress                                  2     0      2   71732
                                             72 BANK1      2     0      2
                       _RouteMessage
 ---------------------------------------------------------------------------------
 (3) _RouteMessage                                        11     6      5   71400
                                             61 BANK1     11     6      5
                   _MiMAC_SendPacket
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendBeacon                                           1     1      0   22957
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendMACPacket                                        4     1      3   22957
                                             57 BANK1      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                    10     4      6   21824
                                             47 BANK1     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (6) _TxPacket                                            24    23      1    4859
                                             10 BANK1     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (7) _WriteFIFO                                            3     3      0     133
                                              2 BANK1      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _CCM_Enc                                             11     5      6   10853
                                             36 BANK1     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (2) _MiMAC_ReceivedPacket                                20    20      0   13093
                                             51 BANK1     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        7     3      4     400
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _CCM_Dec                                             15     9      6   10853
                                             36 BANK1     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (7) _CTR                                                 13     6      7    4853
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _CBC_MAC                                             13     6      7    4853
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (8) _encode                                              23    19      4    1094
                                              0 BANK1     23    19      4
 ---------------------------------------------------------------------------------
 (2) _BroadcastJitter                                     18    18      0     872
                                             10 BANK1     18    18      0
                       _MiWi_TickGet
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     336
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _AddNodeToNetworkTable                                4     4      0    1034
                                              6 BANK1      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _findNextNetworkEntry                                 1     1      0     130
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SearchForShortAddress                                3     3      0     192
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SearchForLongAddress                                 6     6      0     322
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (2) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_StartConnection                                9     4      5   17855
                                             65 BANK1      9     4      5
               _MiApp_NoiseDetection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_NoiseDetection                                36    28      8   11873
                                             29 BANK1     36    28      8
                   _MiApp_SetChannel
            _MiMAC_ChannelAssessment
                       _MiWi_TickGet
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) _MiWi_TickGet                                        10     6      4     400
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ChannelAssessment                             15    15      0    3831
                                             14 BANK1     15    15      0
                       _RegisterRead
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     865
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2317
                                              6 BANK1      8     4      4
                       _RegisterRead (ARG)
 ---------------------------------------------------------------------------------
 (7) _RegisterRead                                         4     4      0     235
                                              2 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   11123
                                             22 BANK1      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetAltAddress                                  4     0      4    1872
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5074
                                             18 BANK1      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             6     4      2    1033
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             10 BANK1      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                              7 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (7) _SetRFMode                                            1     1      0    1755
                                              6 BANK1      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     2      2    1724
                                              2 BANK1      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _SPIPut                                               2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptLow                                   19    19      0   28194
                                             30 COMRAM    19    19      0
                     _USBDeviceTasks
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   28194
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i1_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i1_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    3     3      0   16300
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   16003
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   12165
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    4244
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    4129
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3746
                                             12 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_LEDUpdateUSBStatus                              0     0      0       0
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1054
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i1_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     644
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (23) _SYS_InterruptHigh                                  14    14      0    4094
                                             53 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (24) _MIWIInterruptHandler                               19    19      0    4094
                                             34 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
                       i2_update_LED
 ---------------------------------------------------------------------------------
 (25) i2_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (25) i2_TxPacket                                         24    23      1    1577
                                             10 BANK0     24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (26) i2_WriteFIFO                                         3     3      0      91
                                              2 BANK0      3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_SetRFMode                                         1     1      0     291
                                              6 BANK0      1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (27) i2_RegisterSet                                       4     2      2     269
                                              2 BANK0      4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_RegisterRead                                      4     4      0     160
                                              2 BANK0      4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIGet                                            0     0      0      23
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIPut                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (26) i2_MiWi_TickGet                                     10     6      4     316
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _BroadcastJitter
         _MiWi_TickGet
         ___lbmod
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SearchForLongAddress
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
       _UnicastShortAddress
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _findNextNetworkEntry
   _MiApp_NoiseDetection
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_ChannelAssessment
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
       ___lwdiv
     _MiWi_TickGet
     ___awdiv
       _RegisterRead (ARG)
         _SPIGet
           _SPIPut
         _SPIPut
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SetChannel
     _MiMAC_SetChannel
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiApp_StartConnection
     _MiApp_NoiseDetection
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiMAC_ChannelAssessment
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         ___awdiv
           _RegisterRead (ARG)
             _SPIGet
               _SPIPut
             _SPIPut
         ___lwdiv
       _MiWi_TickGet
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_UnicastAddress
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _BroadcastJitter
           _MiWi_TickGet
           ___lbmod
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SearchForLongAddress
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
         _UnicastShortAddress
           _RouteMessage
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _SearchForShortAddress
             _SendBeacon
               _SendMACPacket
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                     _CTR
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                   _TxPacket
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
         _findNextNetworkEntry
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _BroadcastJitter
       _MiWi_TickGet
       ___lbmod
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
     _SearchForShortAddress
     _SendBeacon
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _UnicastShortAddress
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
     _findNextNetworkEntry
   _SYSTEM_Initialize
     _RtccWrOn
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBTransferOnePacket
   _dBm_to_mW
   _decode_variable
     _memcpy
   _memcpy
   _sendHIDBinary
     _USBTransferOnePacket
     _memcpy
   _sendHIDText
     _USBTransferOnePacket
   _send_complete_update
     ___awdiv
       _RegisterRead (ARG)
         _SPIGet
           _SPIPut
         _SPIPut
     ___lldiv
     _encode_uint16_variable
     _encode_uint8_variable
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_network_register
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_periodic_update
     ___awdiv
       _RegisterRead (ARG)
         _SPIGet
           _SPIPut
         _SPIPut
     ___lldiv
     _encode_uint16_variable
     _encode_uint8_variable
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_writables_update
     _encode_uint8_variable
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _dBm_to_mW (ARG)
     _isdigit (ARG)
   _strcpy
   _timer_reset
   _update_LED
   _update_variable
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _RtccWrOn
     _strcmp

 _SYS_InterruptLow (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               i1_update_LED
             _USBCheckHIDRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             i1_update_LED
           _USBCheckHIDRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         i1_update_LED
       _USBCheckHIDRequest
     i1_USBDeviceInit
       i1_memset
   i1_update_LED

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut
     i2_update_LED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     240      36       17.3%
BIGRAMh            180      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      40      14       25.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     1F      E3      12       88.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     90      FA       7       97.7%
BITBANK13           D0      0       0      31        0.0%
BANK13              D0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5B       1       96.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FC       8        0.0%
DATA                 0      0     73C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Aug 14 10:38:44 2016

                              i2_TxPacket 7284                                _USB_SD_Ptr 20C3  
                    ?_MiMAC_DiscardPacket 0001                              _UPTIME_LABEL 21CF  
                          ?_isSameAddress 0100                              _RoutingTable 00B4  
                                      l31 AEF2                                        l18 9D5A  
                                      l19 9D46                                        l29 AEE8  
                                      l62 A4EA                              ___awdiv@sign 010B  
                  ??_MiApp_NoiseDetection 0125                                        bsr 000FE0  
                           _USBDeviceInit 78D8                       ___wmul@multiplicand 0102  
                      _USBCheckHIDRequest 8AF8                       MiApp_ProtocolInit@i 011B  
                       _ActiveScanResults 0200                              __CFG_CP0$OFF 000000  
                              _MiMAC_Init 7E22      USER_USB_CALLBACK_EVENT_HANDLER@event 000D  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F                                       l322 6C6E  
             __end_of_USBStdGetDscHandler 7CDC                                       l262 7446  
                                     l263 748E                                       l327 6CDC  
                                     l328 6D38                                       l460 8712  
                                     l356 6056                                       l383 853C  
                                     l641 3B0A                            ?i2_RegisterSet 0062  
                                     l486 83FC                                       l670 296C  
                                     l495 7A86                                       l904 8648  
                                     l753 37C0                                       l746 3566  
                                     l907 8670                                       l691 2CC8  
                                     l667 28D6                                       l940 ADF8  
                                     l692 2CCC                                       _BDT 000D00  
                                     l790 3C04                                       l774 39D8  
                                     l758 378A                                       l769 399C  
                                     l697 2D8C                                       l899 8596  
                                     _CTR 86AA                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _MTP 01B1                                       _UIR 000F62  
                  _APP_LEDUpdateUSBStatus ABF4                                       _key 02F1  
                              _USBSuspend AE6C                           __end_of_CBC_MAC 8AF8  
             __end_of_MiMAC_SetAltAddress AF98                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                    __end_ofi1_update_LED A85E                            _USBDeviceTasks 7CDC  
                     ?_USBCheckHIDRequest 0001                           __end_of_CCM_Dec 7B8E  
                          _USBDeviceState 0049                           __end_of_CCM_Enc 8456  
          __end_of_UPDATE_FREQUENCY_LABEL 21CF                               i2_WriteFIFO AB74  
                   ??_USBCtrlTrfRxService 0001            __size_of_MiApp_StartConnection 010C  
                USBEnableEndpoint@options 0009                                      ?_CTR 0117  
           __end_of_MiApp_StartConnection 89EE                                      CTR@i 0122  
                                    CTR@j 0123                    ??_send_complete_update 0110  
                                    l1014 62C4                                      l1024 64CE  
                                    l1033 6644                                      l1019 6320  
                                    l1222 794E                                      l2116 5608  
                                    l1283 ACD8                                      l1284 ACD6  
                                    l2530 986A                                      l1723 3E06  
                                    l1812 8CB4                USBConfigureEndpoint@handle 0007  
                                    l1817 AF24                                      l1737 3EC4  
                                    l1739 3ED0                                      l1748 4214  
                                    l1765 4634                                      l2583 A42E  
                                    l1767 4638                                      l2593 A732  
                                    l1857 A7A0                                      l1859 A7AE  
                                    l1993 9E62                                      l1989 A27E  
                         ?i2_RegisterRead 0001                                      STR_1 23B7  
                                    STR_2 2306                                      STR_3 22E5  
                                    STR_4 226E                                      STR_5 237F  
                                    STR_6 2366                                      STR_7 2347  
                                    STR_8 23A6                                      STR_9 2327  
                                    i2l31 AF0E                                      i2l29 AF04  
                                    i2l62 A55E                     ??_USBCtrlTrfTxService 0001  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                  _encode_uint16_variable 9E16     MiMAC_ChannelAssessment@AssessmentMode 0118  
  USBStdFeatureReqHandler@current_ep_data 0018                 MiApp_StartConnection@Mode 0147  
                                    _pDst 003A                MiMAC_SetChannel@offsetFreq 0107  
                                    _main 3D4C                                      _role 01CB  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                           _USBDeviceAttach ACA8  
                                    btemp 005C                                      pclat 000FFA  
                         _update_variable 8BF4                MiApp_UnicastAddress@handle 03D6  
                   MiApp_ProtocolInit@MIP 0118                                      prodh 000FF4  
                                    prodl 000FF3                                      start 01E4  
                           __CFG_IESO$OFF 000000                          __end_of_DELAY_ms 9D78  
                    ??_USBCheckHIDRequest 0001                 do_NETWORK_REGISTER@F10203 003E  
                    __end_ofi2_update_LED A8BE                __end_of_USBCheckStdRequest 8ED0  
                  ??_USBCtrlTrfOutHandler 0003                            _InitConfigRegs 1FF5  
          UnicastShortAddress@DestAddress 0148           MiApp_NoiseDetection@channelMask 012E  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0015  
                            _USBOutHandle 01B8                     ??_MiMAC_DiscardPacket 0100  
                                   ??_CTR 011E                   decode_variable@p_buffer 010A  
          MiApp_StartConnection@RSSIValue 0149                          CCM_Enc@headerLen 0126  
                ??_USBStdGetStatusHandler 0001                            ?_USBDeviceInit 0001  
            __end_of_MiApp_DiscardMessage AF76        MiApp_NoiseDetection@OptimalChannel 013A  
                           __CFG_PLLDIV$2 000000                                     l20312 3E82  
                                   l20330 3ED4                                     l20314 3E8C  
                                   l20412 41E2                                     l20332 3EE4  
                                   l20308 3E50                                     l20318 3E9A  
                                   l20520 4626                                     l20512 45C6  
                                   l20514 45EA                                     l20274 3DA6  
                                   l20540 46B8                                     l20508 4570  
                                   l20444 42FC                                     l20364 4034  
                                   l20292 3DFE                                     l20284 3DEE  
                                   l20534 4688                                     l20518 461C  
                                   l20278 3DBC                                     l16000 6C8E  
                                   l20560 47C4                                     l20448 4352  
                                   l16010 6CEA                                     l20546 473E  
                                   l20562 47D4                                     l16100 A33A  
                                   l16020 6D44                                     l20556 47A6  
                                   l20564 47FC                                     l20484 4494  
                                   l20468 43E8                                     l16006 6CC2  
                                   l16104 A340                                     l16032 6D80  
                                   l16024 6D4E                                     l16016 6D1E  
                                   l20488 44DA                                     l16202 7B16  
                                   l16042 6DB4                                     l16212 7B8A  
                                   l16062 6E5C                                     l16054 6E20  
                                   l16208 7B84                                     l16056 6E28  
                                   l16064 6E68                                     l16048 6DE8  
                                   l16312 4AB8                                     l16090 A2CC  
                                   l16162 A9DA                                     l16410 4CD0  
                                   l16330 4B0C                                     l16242 4888  
                                   l16226 4832                                     l17114 2A8A  
                                   l17202 2CD4                                     l17210 2D2E  
                                   l17050 28A6                                     l16172 AA18  
                                   l16076 A36A                                     l16420 4D32  
                                   l16404 4CB0                                     l16324 4B08  
                                   l17300 2FFC                                     l17140 2B4E  
                                   l17132 2ADE                                     l17204 2CF4  
                                   l17036 283E                                     l17052 28AA  
                                   l16086 A2C2                                     l16182 7A48  
                                   l16158 A9D0                                     l16422 4D38  
                                   l16414 4CDA                                     l16350 4B9C  
                                   l16238 4884                                     l16246 48AA  
                                   l17118 2A94                                     l17070 2928  
                                   l15712 97B6                                     l15704 9794  
                                   l15720 A4C2                                     l16504 9440  
                                   l16520 94AC                                     l16192 7AA2  
                                   l16168 AA12                                     l16600 5F0C  
                                   l16432 4D9A                                     l16360 4BBC  
                                   l16264 4946                                     l17312 3066  
                                   l17304 3006                                     l17240 2DE2  
                                   l17152 2BBA                                     l17128 2AD4  
                                   l17048 2886                                     l17232 2DBA  
                                   l18032 A67A                                     l16530 AAFE  
                                   l15802 86D0                                     l16186 7A60  
                                   l16178 7A3E                                     l16442 4DE6  
                                   l16426 4D42                                     l16258 4942  
                                   l17322 30BC                                     l17226 2DA4  
                                   l17162 2BD6                                     l17090 29C6  
                                   l17082 29AA                                     l17066 291E  
                                   l18050 AE62                                     l18034 A686  
                                   l15708 97A2                                     l16516 94A6  
                                   l16508 944A                                     l16524 94B2  
                                   l15804 86D6                                     l16620 5FDE  
                                   l16604 5F16                                     l15900 74B6  
                                   l16372 4BEE                                     l16356 4BB6  
                                   l16292 49EE                                     l17412 34CC  
                                   l17332 3122                                     l17316 3072  
                                   l17156 2BC6                                     l17076 2978  
                                   l15734 A4FE                                     l15654 6EBC  
                                   l15822 873E                                     l16198 7B0C  
                                   l16622 5FEA                                     l16614 5F88  
                                   l16702 6296                                     l16382 4C50  
                                   l16294 49F4                                     l16286 49D4  
                                   l17510 3746                                     l17430 355C  
                                   l17326 30C6                                     l17334 31CC  
                                   l17246 2E16                                     l17174 2C38  
                                   l17158 2BCC                                     l17086 29BC  
                                   l18070 9804                                     l18038 A6CA  
                                   l16552 9A00                                     l15680 971E  
                                   l15840 8A12                                     l15832 87B8  
                                   l15808 86E0                                     l15912 74E8  
                                   l15904 74D2                                     l16384 4C56  
                                   l16376 4BF8                                     l16448 4DF0  
                                   l17416 350E                                     l17168 2C1A  
                                   l17096 2A32                                     l19112 7924  
                                   l16810 A3F0                                     l16474 ABBC  
                                   l16538 AB26                                     l16714 994A  
                                   l15658 6EC6                                     l15850 8A3C  
                                   l15818 8734                                     l15834 87BC  
                                   l16634 6062                                     l16466 4E60  
                                   l16394 4C98                                     l16298 49FE  
                                   l17602 39CE                                     l17530 37EE  
                                   l17506 373C                                     l17362 33C0  
                                   l17282 2F54                                     l17266 2EA6  
                                   l17194 2CB2                                     l19210 9538  
                                   l18066 97EE                                     l18090 A700  
                                   l15692 9752                                     l16484 ABEA  
                                   l16732 85A4                                     l16724 99E4  
                                   l15668 706E                                     l15852 8A44  
                                   l15844 8A1C                                     l16652 60CE  
                                   l16644 60BA                                     l15916 74F4  
                                   l16388 4C60                                     l17620 3A26  
                                   l17532 37F4                                     l17516 3778  
                                   l17460 35E4                                     l17444 35AA  
                                   l17452 35C2                                     l17364 33C6  
                                   l17268 2EC8                                     l17188 2CA2  
                                   l19140 7992                                     l19116 792E  
                                   l19204 9520                                     l18068 97FE  
                                   l19300 558E                                     l15790 9FA8  
                                   l15782 9F7C                                     l15774 9F50  
                                   l15694 975E                                     l15686 9734  
                                   l16806 A3DE                                     l16494 93F4  
                                   l16478 ABC6                                     l16718 9962  
                                   l15854 8A4A                                     l16662 6144  
                                   l16638 606C                                     l16574 5DE8  
                                   l15942 75C2                                     l16398 4C9E  
                                   l17630 3AC4                                     l17542 3830  
                                   l17382 3442                                     l17374 342C  
                                   l17358 3390                                     l16910 2472  
                                   l19150 7A02                                     l18078 9858  
                                   l18094 A724                                     l18086 A6EE  
                                   l19310 55CC                                     l15696 9764  
                                   l16808 A3EA                                     l19072 8946  
                                   l19056 88E8                                     l16488 ABF0  
                                   l16744 85E6                                     l16736 85B4  
                                   l15872 8AEA                                     l16672 618C  
                                   l16656 60D8                                     l16648 60C0  
                                   l16592 5EFA                                     l15928 7524  
                                   l15880 745C                                     l15944 75C6  
                                   l17616 3A0E                                     l17552 388A  
                                   l17536 37FE                                     l17448 35B0  
                                   l17384 3448                                     l17376 3432  
                                   l17368 33D0                                     l16904 2462  
                                   l18176 80B4                                     l19144 799C  
                                   l19128 795C                                     l19136 7974  
                                   l18088 A6FA                                     l19400 57F6  
                                   l15786 9F92                                     l15778 9F66  
                                   l17706 AEDA                                     l16818 A420  
                                   l16850 84B2                                     l16842 847C  
                                   l16498 93FE                                     l15858 8A54  
                                   l16674 61AE                                     l16578 5DF2  
                                   l15970 83BE                                     l15954 8354  
                                   l15938 75AE                                     l17650 3B36  
                                   l17626 3AA8                                     l17554 3890  
                                   l17482 3664                                     l17394 3484  
                                   l17634 3ACA                                     l17298 2FF6  
                                   l16930 257C                                     l16914 247E  
                                   l17642 3B12                                     l17722 91C2  
                                   l17714 918E                                     l19402 57FC  
                                   l19410 58A8                                     l19322 5640  
                                   l19306 55B4                                     l15796 9FBE  
                                   l17820 7E58                                     l17900 70C2  
                                   l16748 85F0                                     l16756 86A4  
                                   l15868 8AD2                                     l16684 6234  
                                   l16588 5EF4                                     l15980 8418  
                                   l15964 83AE                                     l15876 7440  
                                   l17468 3608                                     l17388 3452  
                                   l16924 254E                                     l19404 584E  
                                   l19412 58BA                                     l19340 569E  
                                   l19420 58F8                                     l19252 53E6  
                                   l16854 84EC                                     l16686 623C  
                                   l16598 5F06                                     l15974 83D6  
                                   l15966 83B4                                     l15958 835E  
                                   l17646 3B2C                                     l17558 389A  
                                   l17494 36F2                                     l16950 260C  
                                   l17638 3AEE                                     l17742 A74E  
                                   l17734 9228                                     l19342 56A4  
                                   l19326 565C                                     l19254 53F8  
                                   l19246 53C8                                     l16792 A44A  
                                   l17840 7EB8                                     l17832 7E84  
                                   l17816 7E4E                                     l16864 8500  
                                   l16856 84F2                                     l19096 89DA  
                                   l17672 3C50                                     l17656 3BFE  
                                   l17584 3962                                     l17592 3978  
                                   l16952 2612                                     l16944 25D6  
                                   l19192 94C0                                     l19512 5BAC  
                                   l19416 58CC                                     l19328 5662  
                                   l19272 54BA                                     l19264 543A  
                                   l19184 ACEC                                     l17850 7EF0  
                                   l17826 7E74                                     l16698 6290  
                                   l17498 3710                                     l16938 25A2  
                                   l18722 62BA                                     l19522 5C20  
                                   l19370 5756                                     l19282 54F2  
                                   l19274 54C0                                     l19258 5402  
                                   l19418 58D8                                     l19186 ACF8  
                                   l16796 A470                                     l17852 7EF6  
                                   l17844 7EC2                                     l17828 7E7A  
                                   l16868 8506                                     l17924 7236  
                                   l17908 7154                                     l15988 6C34  
                                   l17684 3C8C                                     l17676 3C5A  
                                   l16972 26A2                                     l16964 2690  
                                   l16956 261C                                     l18900 6674  
                                   l18732 62DE                                     l19604 9900  
                                   l17748 A786                                     l19196 94F2  
                                   l19364 5714                                     l19356 56E0  
                                   l19292 5558                                     l19284 54FE  
                                   l17862 7F2E                                     l17838 7EA0  
                                   l16878 854C                                     l17926 723A  
                                   l17694 3CD6                                     l16974 26A8  
                                   l18910 6700                                     l18822 64E8  
                                   l17950 ADA2                                     l19198 94FC  
                                   l19534 5CB8                                     l19358 56F2  
                                   l19294 5564                                     l19286 5504  
                                   l18582 A7D0                                     l18590 A7E2  
                                   l17856 7F00                                     l17936 7272  
                                   l16968 2696                                     l18832 64FE  
                                   l18728 62D4                                     l19616 90E2  
                                   l17960 9EEE                                     l19368 574C  
                                   l18576 A7BA                                     l18930 762C  
                                   l18922 7602                                     l17938 7276  
                                   l16986 26D8                                     l16978 26B2  
                                   l18842 658A                                     l18738 6310  
                                   l17946 AD90                                     l19570 9890  
                                   l19634 9156                                     l17962 9EF8  
                                   l19394 57D6                                     l19378 577C  
                                   l19386 57A4                                     l19298 5576  
                                   l19562 AF28                                     l19650 8C3A  
                                   l18940 7668                                     l16996 277A  
                                   l19628 913E                                     l17956 9EBC  
                                   l19388 57B0                                     l18934 7636  
                                   l18918 75F8                                     l16998 2786  
                                   l18846 658E                                     l19590 98D6  
                                   l19582 98BA                                     l19574 989E  
                                   l19566 9882                                     l17798 AC7C  
                                   l18952 76A4                                     l18928 7626  
                                   l17898 70BA                                     l18890 665E  
                                   l18786 63E2                                     l18778 639A  
                                   l19594 98E4                                     l19586 98C8  
                                   l19578 98AC                                     l18948 769A  
                                   l18958 76C4                                     l19598 98F2  
                                   l19774 67D8                                     l19784 684C  
                                   l19796 68E4                                     ?_main 0001  
                         __end_of___awdiv 97C0                                     STR_10 22BE  
                                   STR_11 21D7                                     STR_12 2242  
                                   STR_13 220E                                     STR_14 2297  
                                   STR_15 23BF                                     STR_16 2395  
                         __end_of___lbmod AB32         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___lldiv 987C                           ___awdiv@divisor 0108  
                                   _T1CON 000FCD                    __end_of_USBDeviceTasks 7E22  
                                   u21311 5C12                                     u21411 9166  
                                   u21331 5CAA                                     u21251 59B4  
                                   u20620 6582                                     u22220 3E72  
                                   u21341 5D26                                     u21261 5A1E  
                                   u21501 7886                                     u21351 5D90  
                                   u21271 5A88                                     u22400 4674  
                                   u21521 67CA                                     u22410 4676  
                                   u20555 6368                                     u21291 5B9E  
                                   u20556 636C                                     u22340 460C  
                                   u22228 3E76                                     u21541 683E  
                                   u22421 469A                                     u20670 66F8  
                                   u20745 76E4                                     u21385 90FC  
                                   u21561 68D6                                     u20746 76E8  
               ?_USBCtrlEPServiceComplete 0001                                     u21571 6952  
                                   u21491 781C                                     u20940 94E2  
                                   u22348 4610                                     u17014 48C0  
                                   u16215 6F1C                                     u17015 48BA  
                                   u16225 6FA4                                     u16235 6FFE  
                                   u17124 4A84                                     u17044 4918  
                                   u18020 23EE                                     u20948 94E6  
                                   u17125 4A7E                                     u17045 4912  
                                   u17055 495C                                     u18111 254C  
                                   u22807 40E2                                     u17056 4960  
                                   u18040 2426                                     u16185 AA52  
                                   u17145 4B22                                     u22817 4130  
                                   u16186 AA54                                     u17146 4B26  
                                   u16195 AA5E                                     u16355 A95E  
                                   u18035 240E                                     u22827 416E  
                                   u16196 AA60                                     u16356 A960  
                                   u19004 36E2                                     u18028 23F2  
                                   u16365 A96A                                     u19005 36DC  
                                   u18037 2412                                     u22837 41B6  
                                   u22757 3E42                                     u16366 A96C  
                                   u17254 4C86                                     u17094 4A2C  
                                   u16375 AB64                                     u17255 4C7E  
                                   u17095 4A26                                     u22847 78CC  
                                   u22767 3F52                                     u17520 5EDE  
                                   u16376 AB66                                     u16385 AB70  
                                   u18065 244C                                     u22857 6998  
                                   u22777 3FD2                                     u16386 AB72  
                                   u16810 A378                                     u18058 242A  
                                   u17355 4E06                                     u17195 4BDC  
                                   u18067 2450                                     u22867 5ACE  
                                   u22787 4026                                     u17356 4E0A  
                                   u17196 4BE0                                     u18261 279A  
                                   u22877 5DD6                                     u22797 4068  
                                   u18271 27B0                                     u18095 2530  
                                   u16680 6C42                                     u19320 3D46  
                                   u18521 2D22                                     u18097 2534  
                         __end_of___lwdiv A438                                     u16828 A37C  
                                   u19260 3BE0                                     u17911 846E  
                                   u19520 AF68                                     u16698 6C46  
                                   u19370 A778                                     u19540 70E8  
                                   u18644 2F2A                                     u18645 2F24  
                                   u19545 70DC                                     u19377 A76E  
                                   u16995 4848                                     u16996 484C  
                                   u19660 9EDE                                     u18944 359A  
                                   u18945 3594                                     u19668 9EE2  
                         __end_of___lwmod A73C                                     i2l410 4EFA  
                                   i2l421 4FD2                                     i2l262 7296  
                                   i2l263 72DC                                     i2l416 4F56  
                                   i2l419 5026                                     _UADDR 000F38  
                         ___awdiv@counter 010A                  __size_of_InitSymbolTimer 0018  
                    BroadcastJitter@range 011A                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RTCEN 0079FF  
                                   _RTCOE 0079FA                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                 __end_of_BroadcastJitter 99F0                                     _USTAT 000F64  
                              i1memset@p1 0001        __size_of_USBCtrlEPAllowStatusStage 00C4  
                        __end_ofi2_SPIGet AF8A                       ___lmul@multiplicand 0104  
                              _MiWiSeqNum 01C4                          __end_ofi2_SPIPut AF16  
                          _myShortAddress 01F2                           _decode_variable 9094  
                          __CFG_FCMEN$OFF 000000             __size_of_MIWIInterruptHandler 0550  
         __end_of_USBCtrlEPAllowDataStage 9E16                               _BestChannel 01BF  
                         __end_of_myMODEL FFF6                                     _sd000 21D3  
                                   _sd001 20CF                                     _sd002 2103  
            MiMAC_ChannelAssessment@count 011A             __size_of_MiApp_ConnectionMode 002C  
                         __end_of_dpowers 20BB                                     _myUID FFF6  
                                   _m_var 01DF             __size_of_MiApp_UnicastAddress 046A  
                         __end_of_isdigit AE6C                      _send_periodic_update 6704  
                                   main@x 03DE                                     tablat 000FF5  
                __end_of_SYS_InterruptLow 01E4                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                            ?_sendHIDText 0107                                     status 000FD8  
                         __end_of_sprintf 5906              encode_uint16_variable@buffer 0100  
                        __end_ofi1_memset AE42                    __end_of_InitConfigRegs 2035  
               __size_of_MiMAC_SetChannel 00BA              __size_of_USBStdSetCfgHandler 00E2  
                         __initialization 8ED0                           ??_isSameAddress 0104  
                             ?i2_TxPacket 006A                         BroadcastJitter@t1 0112  
                       BroadcastJitter@t2 0116                     _AddNodeToNetworkTable 8586  
               __size_of_MiMAC_SendPacket 0254                              __end_of_main 4810  
                 __size_of_MiMAC_SetPower 003A                    __size_of_SendMACPacket 007C  
                          TxPacket@status 011E                                 ??_CBC_MAC 011E  
                        __end_of_ScanTime 2071                           ??i2_RegisterSet 0064  
               __size_of_USBCtrlEPService 00CE                                 ??_CCM_Dec 012A  
                               ??_CCM_Enc 012A                             ??_RegisterSet 0104  
                                  ??_main 0189                               ?_MiMAC_Init 0112  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
           MiMAC_ChannelAssessment@F10758 02F9                      __end_of_MiWi_TickGet A522  
                                  CTR@len 0119                                    CTR@key 011A  
                           _IRQ1_Received 00DC                               ?_USBSuspend 0001  
                    _SearchForLongAddress 93EE                   MiApp_SetChannel@channel 010A  
                        __end_of_TxPacket 75DE                           i1_USBDeviceInit 7F66  
                        __end_of_RtccWrOn AF5A                                _SendBeacon 81E6  
                 send_complete_update@tmp 0111         MiApp_ProtocolInit@bNetworkFreezer 0117  
                    _MiMAC_ReceivedPacket 5DE2                        __size_of_MiWiTasks 1984  
                         i2SetRFMode@mode 0066                   __end_of_USBDeviceAttach ACE2  
                 ??_encode_uint8_variable 010B                             RouteMessage@i 0147  
                           RouteMessage@j 0145                     ?_send_periodic_update 0001  
                                  _CCPR1L 000FBB                                    _EECON2 000FA7  
                 __end_of_update_variable 8CEA                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0106  
                 _MiMAC_ChannelAssessment 8456                      _IncomingFrameCounter 0500  
                                  i1l1222 7FCC                                    i1l1234 7D0C  
                                  i1l1308 8D64                                    i1l1244 7DA6  
                                  i1l1421 96F2                                    i1l1245 7E1E  
                                  i1l1246 7DB8                                    _MACSeq 01C1  
                                  i1l1450 69CE                                    i1l1371 9AB8  
                                  i1l1435 8DEE                                    i1l1444 8E52  
                                  i1l1374 9B46                                    i1l1375 9AC8  
                                  i1l1376 9ACE                                    i1l1384 AAA4  
                                  i1l1469 6B94                                    i1l1857 A800  
                                  i1l1890 019C                                    i1l1859 A80E  
                                  i1l1868 014C                                    i1l1887 019A  
                                  i1l1888 0196                            __CFG_WDTEN$OFF 000000  
                                  i2l1857 A860                                    i2l1859 A86E  
                                  i1l9632 A172                                    i1l9732 AC50  
                                  i1l9740 9B7A                                    i1l9822 8B34  
                                  i1l9728 AC42                                    i1l9760 9C00  
                                  i1l9824 8B3C                                    i1l9816 8B18  
                                  i1l9832 8B54                                    i1l9834 8B66  
                                  i1l9748 9BA4                                    i1l9772 A81A  
                                  i1l9844 8B94                                    i1l9860 8BCA  
                                  i1l9854 8BBE                                    i1l9838 8B76  
                                  i1l9872 AC08                                    i1l9848 8BA0  
                                  i1l9778 A830                                    i1l9786 A842  
                                  i1l9970 A59E                                    i1l9972 A5A4  
                                  i1l9980 A5B6                                    i1l9878 AC18  
                                  i1l9886 AC28                                    i1l9974 A5AA  
                                  i1l9976 A5B0                                    i1l9968 A598  
         ??_APP_DeviceCustomHIDInitialize 000D                     BroadcastJitter@jitter 011B  
                                  _RTCCAL 000F3E                            sendHIDText@str 0107  
                                  _RTCCFG 000F3F                                    _PVALUE 2071  
                                  _RPOR11 000ECB                                    _RPINR1 000EE1  
                                  _SVALUE 2091                                    _SPIGet AF76  
            i1USBTransferOnePacket@handle 0006                                    _SPIPut AEDE  
                 i2RegisterSet@IRQ0select 0065           MiApp_StartConnection@ChannelMap 0142  
                 i2RegisterSet@IRQ1select 0064                  __end_of_TX_POWER_1_DB_MW 219F  
                __end_of_TX_POWER_4_DB_MW 21A5                                TxPacket@t1 0113  
                              TxPacket@t2 0117                         _StaticSecurityKey 1FEC  
                      __size_of_SetRFMode 0098                         _shortPacketStatus 0052  
                __end_of_TX_POWER_7_DB_MW 21CB                            __CFG_XINST$OFF 000000  
                      _myUID_absconstaddr 01FFF6                                    _TxData 01C7  
                         USBDeviceTasks@i 001E               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0101                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0108                                    ___lmul A438  
                                  ___wmul AD1A                                 ??___awdiv 010A  
                    MiWiTasks@sourcePANID 0175                                 ??___lbmod 0101  
                                  _hasAck 00E0                                 ??___lldiv 0108  
           MiMAC_ChannelAssessment@result 0112                 __size_of_MiApp_SetChannel 0024  
                               ??___lwdiv 0104                        __size_of_dBm_to_mW 00BA  
                               ??___lwmod 010B                                    _encode 6E7C  
                __end_of_TX_POWER_INVALID 2192                         _USBEnableEndpoint AC32  
         __size_of_USBStdGetStatusHandler 00BA                                    _memcpy A73C  
                                  _memset AD86                                    clear_0 8ED8  
                                  clear_1 8EEC                                    clear_2 8EFE  
                                  clear_3 8F0A                                    clear_4 8F16  
                                  clear_5 8F22                                    clear_6 8F2E  
                                  clear_7 8F3A                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 010C                              _CCM_Dec$1986 0130  
                 __end_of_decode_variable 9170                     __size_ofi1_update_LED 0060  
              __p_StaticSecurityKey_const 1FEC                        ?_USBEnableEndpoint 0009  
          __size_of_SearchForShortAddress 0088             __end_of_SearchForShortAddress A344  
                                  _strcmp A678                                    _strcpy ACE2  
                      decode_variable@var 0115             __size_of_USBTransferOnePacket 00D8  
                   ?_SearchForLongAddress 0001                              __pdataCOMRAM 0059  
                               ??_isdigit 0100                              _CCM_Enc$1978 012C  
                        ?_BroadcastJitter 0001                            _openSocketInfo 01CD  
                            __mediumconst 1FF4                     ?_MiMAC_ReceivedPacket 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                    _myMODEL_absconstaddr 01FFF4                                    tblptru 000FF8  
                               ?_DELAY_ms 010C                       ??_USBEnableEndpoint 000A  
                     __end_of_RegisterSet AA62                              ?_timer_reset 0001  
                           ?_RegisterRead 0001                       __size_ofi2_TxPacket 01B0  
                               ??_sprintf 0118                         _ReceivedBankIndex 01C6  
                             _CtrlTrfData 000D28                             _SendMACPacket A344  
                       ??_InitSymbolTimer 0100                             _CHANNEL_LABEL 21BB  
                            ?i2_SetRFMode 0001                      _controlTransferState 004D  
    MiApp_UnicastAddress@MiWiFrameControl 03D4                      __CFG_LS48MHZ$SYS48X8 000000  
                       _SYSTEM_Initialize 80A8                           ___lbmod@divisor 0100  
                    _MiApp_DiscardMessage AF6C                     __size_ofi2_update_LED 0060  
                              __accesstop 0060                        __size_of_WriteFIFO 0042  
                 __end_of__initialization 8FA8                i1USBTransferOnePacket@data 0002  
                         ___lbmod@counter 0102                              __pbssBIGRAMl 0600  
               __end_of_StaticSecurityKey 1FF4           MiMAC_ReceivedPacket@currentTick 013B  
                      ?_SYSTEM_Initialize 0001                       __size_of_MiMAC_Init 0144  
                           ___rparam_used 000000                  __size_of_USBStallHandler 0046  
                MIWIInterruptHandler@bAck 008F                         CCM_Enc@payloadLen 0127  
                  ?_AddNodeToNetworkTable 0001                       __size_of_USBSuspend 002A  
                            i1_update_LED A7FE            __size_of_send_writables_update 016A  
                        _sendHIDText$4950 010B              __end_of_findNextNetworkEntry ABF4  
           __end_of_send_writables_update 78D8                     _ActiveScanResultIndex 01BE  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint AC6E  
                       __end_of_MiWiTasks 3D4C                                 ?i2_SPIGet 0001  
                           __end_of_sd000 21D7                             __end_of_sd001 2103  
                           __end_of_sd002 2131                                 ?i2_SPIPut 0001  
          __size_of_send_network_register 00B0                              __pidataBANK0 AF98  
                            __pidataBANK1 AF93                              __pidataBANK2 AF8A  
                     ??_SYSTEM_Initialize 0100             __end_of_send_network_register 9CCE  
        __size_of_USBCtrlEPAllowDataStage 009E                     i2RegisterRead@address 0065  
                           __end_of_myUID FFF8                           _active_protocol 0057  
        MiMAC_ReceivedPacket@FrameCounter 013F             __size_of_USBConfigureEndpoint 0094  
                 __end_ofi1_USBDeviceInit 80A8               __end_of_USBCtrlTrfInHandler 9702  
                               CTR@nounce 011C                   ?_APP_LEDUpdateUSBStatus 0001  
         MiApp_UnicastAddress@DestAddress 017D                           TxPacket@rssival 0121  
             MiApp_NoiseDetection@maxRSSI 0140               MiApp_NoiseDetection@minRSSI 013E  
                         _ConnectionTable 0600                                 ?i1_memset 0001  
                        ??i2_RegisterRead 0062                               ?_SendBeacon 0001  
               ??_MiMAC_ChannelAssessment 010E                         __end_of_SetRFMode 9FE2  
                            ?i2_WriteFIFO 0001                              i2_update_LED A85E  
                              ??_DELAY_ms 010E                    ??_send_periodic_update 0110  
                          ??_RegisterRead 0102              __size_of_UnicastShortAddress 0096  
                 ?_encode_uint16_variable 0100                    __size_of_sendHIDBinary 0098  
                ??_USBCtrlTrfSetupHandler 001B                            ?_SendMACPacket 0139  
                        ?_USBDeviceAttach 0001                 __end_of_SYSTEM_Initialize 81E6  
                  _USBStdGetStatusHandler 9AAA                              sprintf@width 0127  
               MiWiTasks@destShortAddress 0173                          ?_update_variable 0001  
                   isSameAddress@Address1 0100                     isSameAddress@Address2 0102  
                       __end_of_dBm_to_mW 9936                                __pbssBANK0 00A3  
                              __pbssBANK1 0190                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                              __pbssBANK5 0500                     ?_MiApp_DiscardMessage 0001  
             __size_of_MiApp_ProtocolInit 0190                                   ?_SPIGet 0001  
                                 CTR@text 0117                                   ?_SPIPut 0001  
                      RegisterSet@setting 0102                   send_periodic_update@tmp 0111  
                          isSameAddress@i 0106                       i2RegisterRead@value 0062  
             __size_of_USBWakeFromSuspend 0030                         _m_failed_messages 0032  
                             _pBDTEntryIn 00CE                          _MiMAC_SetChannel 99F0  
                    __size_of_sendHIDText 00C4          __end_of_USBCtrlEPServiceComplete 8DDE  
                              CBC_MAC@MIC 011C     __end_of_APP_DeviceCustomHIDInitialize AD86  
  __size_of_APP_DeviceCustomHIDInitialize 0036             _APP_DeviceCustomHIDInitialize AD50  
                MiMAC_SetAltAddress@PANID 0102                              CBC_MAC@block 0121  
                              CBC_MAC@len 0119                                CBC_MAC@key 011A  
                               ?_TxPacket 010A                                 ?_RtccWrOn 0001  
                    USBCtrlTrfRxService@i 0001                          _MiMAC_SendPacket 6C28  
                              ??i2_SPIGet 0062                            _MiMAC_SetPower AC6E  
                              ??i2_SPIPut 0060                                   ?___lmul 0100  
                          dBm_to_mW@power 0102                                   ?___wmul 0100  
          __end_of_APP_LEDUpdateUSBStatus AC32                                   ?_encode 0100  
                   __size_of_MiWi_TickGet 0074                                   ?_memcpy 0100  
                                 _CBC_MAC 89EE                                   ?_memset 0100  
                          ___lmul@product 0108                                _device_dsc 2177  
                                 SPIPut@i 0100                                   SPIPut@v 0101  
                        _USBCtrlEPService 9320                          ?_decode_variable 010A  
                                 _CCM_Dec 7A38                                   _CCM_Enc 8322  
                              _ep_data_in 00D8                    ??_SearchForLongAddress 0100  
                       __end_of_WriteFIFO AB74                                   ?_strcmp 0100  
                                 ?_strcpy 0100                               _RegisterSet AA1C  
           __size_of_MiApp_NoiseDetection 01EE                                _pUsbBuffer 003C  
             __end_of_USBCtrlTrfRxService 88E2                        _USBCheckStdRequest 8DDE  
                         MiWiTasks@j_2532 0172                           MiWiTasks@j_2544 0169  
                                 i1l10000 926A                                   i1l10004 9274  
                         MiWiTasks@j_2488 0171                                   i1l10014 92A0  
                                 i1l10022 92D8                           MiWiTasks@j_2569 016C  
                                 i1l10024 92E0                                   i1l10032 9318  
                                 i1l10040 AE30                                   i1l11002 8896  
                                 i1l10036 AE20                                   i1l11020 8DF8  
                                 i1l11022 8DFE                                   i1l11032 8E20  
                                 i1l11024 8E04                                   i1l11034 8E26  
                                 i1l11050 8E8C                                   i1l11036 8E2C  
                                 i1l11046 8E6E                                   i1l12104 96FC  
                                 i1l10600 6A8A                                   i1l10512 7BA0  
                                 i1l10504 9072                         _configDescriptor1 2131  
                                 i1l10428 95C2                                   i1l10620 6B2E  
                                 i1l10604 6AA6                                   i1l10532 7CB4  
                                 i1l10524 7C52                                   i1l10516 7BB8  
                                 i1l10630 6B74                                   i1l10614 6AF8  
                                 i1l10534 7CBC                                   i1l10526 7C5A  
                                 i1l10550 9AEE                                   i1l10462 9DE2  
                                 i1l12080 9676                                   i1l12064 A914  
                                 i1l12056 A8CC                                   i1l10640 6BB0  
                                 i1l10632 6B80                                   i1l10616 6B14  
                                 i1l10560 9B2E                                   i1l10538 7CC4  
                                 i1l10482 8FFC                                   i1l10458 9DC6  
                                 i1l12092 96B8                                   i1l12420 9370  
                                 i1l12404 AAA0                                   i1l12078 9672  
                                 i1l10646 6BF6                                   i1l10478 8FF4  
                                 i1l10648 6C02                                   i1l10592 6A44  
                                 i1l10488 9028                                   i1l12432 93BE  
                                 i1l12424 9378                                   i1l12098 96D8  
                                 i1l10578 69CA                                   i1l10932 8D0E  
                                 i1l12436 93D8                                   i1l12380 ADE2  
                                 i1l12700 7FF2                                   i1l10598 6A88  
                                 i1l12438 93DE                                   i1l12382 ADE4  
                                 i1l10952 8D8A                                   i1l12704 800E  
                                 i1l12714 8072                                   i1l10980 87FA  
                                 i1l12708 8016                                   i1l15300 00C4  
                                 i1l12680 7FB0                                   i1l15320 012E  
                                 i1l10986 881E                                   i1l20850 A602  
                                 i1l13802 7D68                                   i1l15306 010C  
                                 i1l12692 7FDA                                   i1l12676 7FA8  
                                 i1l15324 013A                                   i1l10998 887C  
                                 i1l13822 7DB0                                   i1l15318 012A  
                                 i1l20848 A5CE                                   i1l13816 7D9C  
                                 i1l13808 7D74                                   i1l15328 0146  
                                 i1l13842 7DFE                                   i1l15290 0076  
                                 i1l13844 7E1A                                   i1l13836 7DDE  
                                 i1l13764 7D04                                   i1l13756 7CF4  
                                 i1l13792 7D58                                   i1l15296 00A0  
                                 i1l13786 7D32                                   i1l13778 7D22  
                                 i2l12190 A040                                   i2l12182 A014  
                                 i2l12174 9FE8                    ??_MiMAC_ReceivedPacket 0133  
                                 i2l12186 A02A                                   i2l12178 9FFE  
                                 i2l12196 A056                                   i2l12742 A890  
                                 i2l12750 A8A2                                   i2l12736 A87A  
                                 i2l18100 7290                                   i2l18104 72AC  
                                 i2l18122 7304                                   i2l18150 7372  
                                 i2l18134 7336                                   i2l18126 7320  
                                 i2l18160 7404                                   i2l18154 7382  
                                 i2l18138 7342                                   i2l18402 4EF2  
                      __CFG_OSC$INTOSCPLL 000000                                   i2l18164 7418  
                                 i2l18500 51E8                                   i2l18412 4F14  
                                 i2l18166 7420                                   i2l18502 51EE  
                                 i2l18512 5284                                   i2l18432 4F9C  
                                 i2l18424 4F50                                   i2l18416 4F24  
                                 i2l18522 52AC                                   i2l18506 51F8  
                                 i2l18450 4FEA                                   i2l18532 5340  
                                 i2l18380 4E9C                                   i2l18518 52A6  
                                 i2l18470 513E                                   i2l18462 50FA  
                                 i2l18446 4FDA                                   i2l18534 5358  
                                 i2l18542 5370                                   i2l18480 5176  
                                 i2l18456 5070                                   i2l18464 50FE  
                                 i2l18392 4EC8                                   i2l18376 4E92  
                                 i2l18536 5366                                   i2l17754 A536  
                                 i2l18490 51B0                                   i2l18474 5148  
                                 i2l18466 5118                                   i2l18538 536C  
                                 i2l18556 539E                                   i2l18388 4EBA  
                                 i2l18494 51BA                                   i2l17768 A572  
                          _LED_brightness 0059                                ??i1_memset 0007  
                         MiWiTasks@cIndex 016B            __end_of_encode_uint16_variable 9EB2  
             __end_of_USBCtrlTrfTxService 9320                       _USBStdSetCfgHandler 8FB2  
                   i2WriteFIFO@IRQ0select 0064                     i2WriteFIFO@IRQ1select 0063  
                         sendHIDText@size 010F                                   _RPINR21 000EFC  
                                 _RPINR22 000EFD                                   _SSP2BUF 000F75  
                         MiWiTasks@handle 0177          MIWIInterruptHandler@ackInfoIndex 0091  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 014E  
                                 _RF_Mode 00DD                                   _AckInfo 0248  
                                 _UIEbits 000F36                                   _RSSIVal 00DE  
                         MiWiTasks@jitter 0162                                   _UIRbits 000F62  
            __size_of_MiMAC_SetAltAddress 0002                     _MiApp_StartConnection 88E2  
                        __CFG_CFGPLLEN$ON 000000               AddNodeToNetworkTable@handle 0109  
           __size_of_send_complete_update 04DC                         ?_SYS_InterruptLow 0001  
                ??i1_USBTransferOnePacket 0005                           _timerExtension1 00E2  
                         _timerExtension2 00E3                               TxPacket@CCA 010A  
                MiApp_ConnectionMode@Mode 0101                           __size_of_SPIGet 000A  
                         __size_of_SPIPut 001C               __end_of_MiMAC_DiscardPacket AEBA  
                      ??_SYS_InterruptLow 001F                                DELAY_ms@ms 010C  
                     _AcknowledgementAddr 01B4                              _MiWi_TickGet A4AE  
            __end_of_MIWIInterruptHandler 53BA                    __end_of_MiMAC_SetPower ACA8  
                                 __Hparam 0000                            _LED_increasing 0043  
                    ?_USBStdSetCfgHandler 0001               __size_of_USBCheckHIDRequest 00FC  
                                 __Lparam 0000                         __end_of_hid_rpt01 2177  
            __end_of_MiApp_ConnectionMode AE16                              ??i2_TxPacket 006B  
                              ??_TxPacket 010B                                ??_RtccWrOn 0100  
                           _sendHIDBinary 9EB2                                CCM_Dec@key 0128  
                     __size_of_SendBeacon 013C              __end_of_MiApp_UnicastAddress 6704  
              __size_of_USBEnableEndpoint 003C                      ??_USBCheckStdRequest 001B  
           __size_of_USBCtrlTrfOutHandler 005C                   __size_ofi2_MiWi_TickGet 0074  
                                 ___awdiv 9702                          _ToSendDataBuffer 0384  
                         __size_of___lmul 0076                                   ___lbmod AAEE  
                   MIWIInterruptHandler@i 0094                                CCM_Enc@key 0128  
                                 ___lldiv 97C0                          ??_USBDeviceTasks 001E  
                         __size_of___wmul 0036                                _myAppState 0050  
                        _MiApp_SetChannel AEBA                                   ___lwdiv A3C0  
                       ??_USBStallHandler 0001                                   ___lwmod A6DA  
                         __size_of_encode 021A                           __CFG_STVREN$OFF 000000  
                   __CFG_RTCOSC$INTOSCREF 000000                          ?i1_USBDeviceInit 0001  
                          _tempNodeStatus 00E1                                   __pcinit 8ED0  
                         __size_of_memcpy 0062                           __size_of_memset 0034  
               __end_of_configDescriptor1 215A                                   __ramtop 0F00  
                    SendMACPacket@Address 0139                                   __ptext0 3D4C  
                                 __ptext1 8BF4                              ??_MiMAC_Init 0115  
                                 __ptext2 A678                                   __ptext3 AC6E  
                                 __ptext4 A79E                                   __ptext5 AF16  
                                 __ptext6 ACE2                                   __ptext7 53BA  
                                 __ptext8 AE42                                   __ptext9 AD1A  
                                 _inPipes 00C4                                   _myPANID 01F0  
                                 _myMODEL FFF4               _USBDeferOUTDataStagePackets 0047  
                            __size_of_CTR 0120                           __size_of_strcmp 0062  
                         __size_of_strcpy 0038                         __end_of_hexpowers 20C3  
                               _T1CONbits 000FCD                                   _dpowers 20B1  
                            ??_USBSuspend 0015                                   _m_power 01C9  
                ??_MiApp_MessageAvailable 017D                                 _T2CONbits 000FCA  
                   MiApp_NoiseDetection@i 013F                     MiApp_NoiseDetection@j 013B  
                                 _isdigit AE42                     MiApp_NoiseDetection@k 013C  
                           _myLongAddress 01E8                                 _T4CONbits 000F76  
                         ??_SendMACPacket 013C                    RegisterRead@IRQ0select 0104  
                   MiApp_UnicastAddress@i 03D5                    RegisterRead@IRQ1select 0103  
                                 encode@i 0110                      _findNextNetworkEntry ABB6  
                      __end_of_USB_CD_Ptr 20CF                __size_of_SYSTEM_Initialize 013E  
                                 _sprintf 53BA           __size_of_USBCtrlTrfSetupHandler 008E  
                  ??_MiApp_DiscardMessage 0100                            __pintcode_body A608  
                      __end_ofi2_TxPacket 7434                      end_of_initialization 8FA8  
                        _MiWiStateMachine 01B6            __size_of_encode_uint8_variable 008A  
           __end_of_encode_uint8_variable A2BC                        __end_of_USB_SD_Ptr 20C9  
                    __size_of_timer_reset 001A          MiApp_NoiseDetection@ScanDuration 0121  
                               i2SPIPut@i 0060                                 i2SPIPut@v 0061  
                                 memcpy@d 0106                                   memcpy@n 0104  
                                 memcpy@s 0108                       _pBDTEntryEP0OutNext 0038  
                                 memset@c 0102                                   memset@n 0104  
                                 memset@p 0106             MIWIInterruptHandler@BankIndex 0093  
           MiMAC_SendPacket@MACPayloadLen 0134                                   int_func A608  
                    __size_ofi2_SetRFMode 0098                   SendMACPacket@PacketType 013B  
                               i1u1577_20 0094                                 i2u1061_45 AADE  
                               i2u1061_46 AAE0                                 i2u1062_45 AAEA  
                               i2u1062_46 AAEC                  ?_USBStdFeatureReqHandler 0001  
                               i2u1225_45 A9B6                                 i2u1225_46 A9B8  
                               i2u1226_45 A9C2                                 i2u1226_46 A9C4  
                               i2u1227_45 ABA6                                 i2u1227_46 ABA8  
                               i2u1228_45 ABB2                                 i2u1228_46 ABB4  
                   ??_USBStdSetCfgHandler 0015                           ___lldiv@divisor 0104  
                      __end_of_MiMAC_Init 7F66                           ___lldiv@counter 010C  
                         ?_MiMAC_SetPower 0001                            ?_sendHIDBinary 010A  
             MIWIInterruptHandler@counter 0088               encode_uint8_variable@buffer 0100  
                      __end_of_USBSuspend AE96                   _USBCtrlEPAllowDataStage 9D78  
                 MiMAC_SetChannel@channel 0109                                   postdec1 000FE5  
                                 postdec2 000FDD                      __end_of_RegisterRead A972  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     __end_of_isSameAddress AA1C  
                _USBCtrlEPServiceComplete 8CEA      DELAY_ms@cyclesRequiredForEntireDelay 010E  
                     RegisterRead@address 0105                     MiWiTasks@CapacityByte 0170  
                           WriteFIFO@Data 0102                                   strcmp@r 0105  
              _USBStatusStageEnabledFlag1 004A                _USBStatusStageEnabledFlag2 004B  
                              _timer_flag 01CC                        USBEnableEndpoint@p 000A  
                         _InitSymbolTimer AF30                     __end_ofi2_RegisterSet AAEE  
                        ___lbmod@dividend 0101                                _update_LED A79E  
                               _TRISAbits 000F92                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                        _ReceivedDataBuffer 0400  
                              encode@text 0100                        _BothEP0OutUOWNsSet 0042  
                   ?_findNextNetworkEntry 0001                             _mySecurityKey 00BC  
                 MiMAC_SendPacket@TxIndex 0137             MIWIInterruptHandler@PacketLen 0092  
                           ?_RouteMessage 013D                 USBConfigureEndpoint@EPNum 0006  
                    __size_ofi2_WriteFIFO 0042                    ?_MiApp_StartConnection 0141  
              ?_USBCtrlEPAllowStatusStage 0001                         __size_of_DELAY_ms 00AA  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 0056  
                RouteMessage@ShortAddress 013F                               ___lbmod@rem 0103  
                       CCM_Dec@payloadLen 0127                MiMAC_SendPacket@transParam 012F  
                i1USBTransferOnePacket@ep 0005                                _status_led 0053  
            __end_of_USBTransferOnePacket 9248                   ??_AddNodeToNetworkTable 0106  
                             _CCP1CONbits 000FBA                MiMAC_SetAltAddress@Address 0100  
         __size_ofi1_USBTransferOnePacket 00BA                 MiApp_UnicastAddress@SecEn 0180  
                          __end_of_PVALUE 2091                            __end_of_SVALUE 20B1  
                          __end_of_SPIGet AF80                            __end_of_SPIPut AEFA  
                  SearchForShortAddress@i 0102                       _UnicastShortAddress A07A  
                  _USBCtrlTrfSetupHandler A1A4                     __end_of_USBDeviceInit 7A38  
                          __end_of___lmul A4AE                              sendHIDText@c 010A  
                            sendHIDText@p 010D                            __end_of___wmul AD50  
                       __size_ofi2_SPIGet 000A                         __size_ofi2_SPIPut 001C  
                               i1memset@c 0003                                 i1memset@n 0005  
                               i1memset@p 0007                             __pidataCOMRAM AF90  
                               _MiWiTasks 23C8                            __end_of_encode 7096  
                          __end_of_memcpy A79E                            __end_of_memset ADBA  
                       _USBBusIsSuspended 0045                            __end_of_strcmp A6DA  
                          __end_of_strcpy AD1A           __size_of_MiApp_MessageAvailable 0012  
        MiMAC_ReceivedPacket@PayloadIndex 0145                  __end_of_MiMAC_SetChannel 9AAA  
                     start_initialization 8ED0                     _SearchForShortAddress A2BC  
                            ??_SendBeacon 013D                   ?_USBStdGetStatusHandler 0001  
                             __end_of_CTR 87CA             MiApp_NoiseDetection@RSSIValue 0123  
           USBCtrlTrfRxService@byteToRead 0002                      _MIWIInterruptHandler 4E6A  
                    ?_UnicastShortAddress 0148                       WriteFIFO@IRQ0select 0104  
                           TxPacket@reTry 011C             MiApp_NoiseDetection@RSSIcheck 013D  
                     WriteFIFO@IRQ1select 0103                  __end_of_MiMAC_SendPacket 6E7C  
                          ??_RouteMessage 0142                      _MiApp_ConnectionMode ADEA  
                      TxPacket@CCARetries 011B                         __size_ofi1_memset 002C  
              i2TxPacket@allowedTxFailure 007E                      _MiApp_UnicastAddress 629A  
            __end_of_USBConfigureEndpoint A1A4             MIWIInterruptHandler@ackPacket 008B  
         __end_of_USBStdFeatureReqHandler 6C28                                 _SetRFMode 9F4A  
       __end_of_USBCtrlEPAllowStatusStage 963E                  __size_of_BroadcastJitter 00BA  
                                CBC_MAC@i 0123                                  CBC_MAC@j 0122  
                __end_of_USBCtrlEPService 93EE                                  ??_SPIGet 0102  
                                ??_SPIPut 0100                           ??_sendHIDBinary 010D  
                               _dBm_to_mW 987C                 ??_USBCtrlEPAllowDataStage 0002  
                          _currentChannel 01F6                 encode_uint16_variable@var 0102  
                          USBDeviceInit@i 0108                                 TxPacket@i 0120  
                  _pBDTEntryEP0OutCurrent 0036                                  CCM_Dec@i 0132  
                 USBTransferOnePacket@dir 0100                                  CCM_Enc@i 012E  
                 USBTransferOnePacket@len 0103                   __end_of_InitSymbolTimer AF48  
                          i2_MiWi_TickGet A522                                  ??___lmul 0108  
                      __end_of_SendBeacon 8322                                  ??___wmul 0104  
       MiApp_UnicastAddress@PermanentAddr 017F                          _m_uptime_seconds 00CA  
                     _USBStdGetDscHandler 7B8E                     _send_writables_update 776E  
                                ??_encode 0104                               __pdataBANK0 00E4  
                             __pdataBANK1 01F8                               __pdataBANK2 02F9  
                       __size_of_TxPacket 01AA                         __size_of_RtccWrOn 0012  
                     _MiMAC_SetAltAddress AF96                                  ??_memcpy 0106  
                                ?_CBC_MAC 0117                                  ??_memset 0106  
            MiApp_StartConnection@channel 0148                     _send_network_register 9C1E  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 0124  
                                ?_CCM_Enc 0124                    i1_USBTransferOnePacket 9B64  
                            ?_RegisterSet 0102                                  ??_strcmp 0104  
                                ??_strcpy 0104             MIWIInterruptHandler@fifo_stat 008A  
                             _ALRMCFGbits 000F47                    _USBActiveConfiguration 0054  
          __end_of_USBStdGetStatusHandler 9B64                         RegisterRead@value 0102  
               i1USBTransferOnePacket@dir 0001                 i1USBTransferOnePacket@len 0004  
                 MiWi_TickGet@currentTime 0106                               __pbssCOMRAM 0032  
                  ??_findNextNetworkEntry 0100                               ?_update_LED 0001  
                   ?_MIWIInterruptHandler 0001                     ??_UnicastShortAddress 014A  
                               _WriteFIFO AB32                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK3 03C4  
            __size_of_USBCtrlTrfInHandler 00C4                     ?_MiApp_ConnectionMode 0001  
                                CTR@block 0121                               _defaultHops 01F9  
                   ?_MiApp_UnicastAddress 017D                      ?_USBStdGetDscHandler 0001  
                            _isdigit$5487 0101                __end_of_MiApp_ProtocolInit 776E  
                __end_of_MiApp_SetChannel AEDE             __size_of_send_periodic_update 02A0  
                              ?_SetRFMode 0001                __end_of_TX_POWER_N_2_DB_MW 21AB  
                    ?_MiMAC_SetAltAddress 0100                          __p_myMODEL_const FFF4  
              __end_of_TX_POWER_N_5_DB_MW 21B1                       __end_of_PANID_LABEL 20CD  
                             MiMAC_Init@i 0115                             ??_sendHIDText 0109  
              __end_of_USBWakeFromSuspend ADEA              __end_of_MiApp_NoiseDetection 7284  
              __end_of_TX_POWER_N_8_DB_MW 2199                               sprintf@flag 0126  
                             sprintf@prec 011D                           _USBStallHandler AA62  
                            _pBDTEntryOut 00D2                       sendHIDBinary@buffer 010A  
                              ?_dBm_to_mW 0100                       sendHIDBinary@length 010C  
                   __size_of_RegisterRead 0058                    _MiApp_MessageAvailable AF5A  
                __size_of_USBDeviceAttach 003A                  __size_of_update_variable 00F6  
                  __end_ofi2_MiWi_TickGet A596                                 _main$4875 03D8  
                       MiMAC_SendPacket@i 0138                                 _main$4898 03DA  
                        ___lwdiv@dividend 0100                          _MiWiCapacityInfo 01C3  
                             CBC_MAC@text 0117                                 __pintcode 0008  
                           __pmediumconst 1FF4                                  ?___awdiv 0106  
                               __ptext100 957A                                 __ptext101 963E  
                               __ptext110 A972                                 __ptext102 9248  
                               __ptext111 AF80                                 __ptext112 AEFA  
                               __ptext104 4E6A                                 __ptext113 A522  
                               __ptext105 A85E                                 __ptext106 7284  
                               __ptext107 AB74                                 __ptext108 9FE2  
                               __ptext109 AAA8                 MiMAC_SendPacket@headerLen 0136  
                                ?___lbmod 0100                                  ?___lldiv 0100  
                                ?___lwdiv 0100                                  ?___lwmod 0107  
             MiApp_UnicastAddress@t1_2749 03CC               MiApp_UnicastAddress@t2_2760 03D0  
                               _hid_rpt01 215A              __end_of_send_complete_update 5DE2  
                             __pintcodelo 0018                 __size_of_SYS_InterruptLow 01CC  
                               _idle_rate 0058                  ?_MiMAC_ChannelAssessment 0001  
                          MiWiTasks@entry 017A                      _USBTransferOnePacket 9170  
                  ?_SearchForShortAddress 0001             __size_of_SearchForLongAddress 00C8  
                                ?_isdigit 0001                                ?_WriteFIFO 0001  
                      _AcknowledgementSeq 01F8                                  _CCPTMRS0 000F52  
           __size_of_MiMAC_ReceivedPacket 04B8                                  _DELAY_ms 9CCE  
            __end_of_USBCtrlTrfOutHandler A91A                          CCM_Dec@headerLen 0126  
                               _hexpowers 20BB                     ??_USBStdGetDscHandler 0001  
             MiWiTasks@sourceShortAddress 0178                  __size_of_decode_variable 00DC  
                               _last_rssi 004F                               _ep_data_out 00DA  
                        ___lwdiv@quotient 0105                                  ?_sprintf 010C  
            __size_of_USBCtrlTrfRxService 0118                              _RegisterRead A91A  
           USBConfigureEndpoint@direction 0001                     ??_MiMAC_SetAltAddress 0104  
                        MiWiTasks@t1_2546 0156                          MiWiTasks@t2_2557 015A  
               MiMAC_SetPower@outputPower 0108                          ??_MiMAC_SetPower 0106  
            __size_of_USBCtrlTrfTxService 00D8                    _UPDATE_FREQUENCY_LABEL 21CB  
                          ___wmul@product 0104                   __size_ofi2_RegisterRead 0058  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                    i2RegisterSet@setting 0062                                  _LATCbits 000F8B  
              __end_of_USBCheckHIDRequest 8BF4                MiWiTasks@coordinatorNumber 0168  
                               _tempPANID 01BC                ??_USBCtrlEPServiceComplete 0002  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3                     MiWiTasks@CoordAddress 015E  
                         ?i2_MiWi_TickGet 0060                                  i1u902_20 92CA  
                                i1u902_27 92C0                                  i1u904_20 930A  
                                i1u904_27 9300                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_BroadcastJitter 010A                                  i1u980_20 7CA8  
                     __end_of_NOISE_LABEL 21C3                                  i1u980_27 7C9E  
                               _rxMessage 0190                 USBCtrlEPService@setup_cnt 001D  
                                i1u977_20 7C16                                  i1u977_27 7C0C  
                                i1u978_20 7C4C                                  i1u978_27 7C42  
                     __size_of_update_LED 0060                       __end_of_sendHIDText 957A  
                                _RCONbits 000FD0                                  i2_SPIGet AF80  
                                _UEP0bits 000F26                    ?_send_writables_update 0001  
                                i2_SPIPut AEFA                          ?_InitSymbolTimer 0001  
              _USBDeferINDataStagePackets 0046                                  _SSP2CON1 000F72  
             __size_of_USBCheckStdRequest 00F2                      __end_of_RouteMessage 4E6A  
                encode_uint8_variable@var 0102                                  _UCONbits 000F65  
                                _SSP2STAT 000F73              __size_of_MiMAC_DiscardPacket 0024  
                  ?_send_network_register 0001           MIWIInterruptHandler@RxPacketPtr 0090  
                    _USBConfigureEndpoint A110         MiApp_StartConnection@ScanDuration 0141  
                             ??_MiWiTasks 014A                               _MACRxPacket 019A  
                         main@last_update 03D7                                 encode@key 0102  
                               encode@sum 0115                                  _RSSILock 01C5  
        __size_of_USBStdFeatureReqHandler 0284                               _MACTxBuffer 0266  
                           SetRFMode@mode 0106                          __size_of_CBC_MAC 010A  
                         _m_sent_messages 01A6                         ___wmul@multiplier 0100  
                   ?_USBTransferOnePacket 0100                          MiWiTasks@rxIndex 016F  
                        __size_of_CCM_Dec 0156                          __size_of_CCM_Enc 0134  
                  ??_MIWIInterruptHandler 0082                         _SYS_InterruptHigh 0008  
                       RouteMessage@PANID 013D                     i2TxPacket@TxPacketLen 007F  
                                i1_memset AE16                    ??_MiApp_ConnectionMode 0100  
                            _RemoteWakeup 0044            MiApp_NoiseDetection@ChannelMap 011D  
                    _OutgoingFrameCounter 01A2                                 main@power 03DC  
                  ??_MiApp_UnicastAddress 0181                   ??_MiApp_StartConnection 0146  
                             _PANID_LABEL 20C9                        ?_SYS_InterruptHigh 0001  
                       RouteMessage@SecEn 0141                  __size_ofi1_USBDeviceInit 0142  
                         _MiWiAckRequired 01C2                             ??_timer_reset 0100  
                 __end_of_USBStallHandler AAA8                     __end_of_SendMACPacket A3C0  
                                _ConnMode 01C0                      __end_of_UPTIME_LABEL 21D3  
                   __end_of_CHANNEL_LABEL 21BF                         ___lmul@multiplier 0100  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                               copy_data0 8F54                             ??i2_SetRFMode 0066  
                             ??_SetRFMode 0106               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 9094                     SearchForLongAddress@i 0105  
                   SearchForLongAddress@j 0104             __size_of_MiApp_DiscardMessage 000A  
                     ??_SYS_InterruptHigh 0095                                  _TxMACSeq 00DF  
                                _ScanTime 2035                     _encode_uint8_variable A232  
                      __end_of_device_dsc 2189                               ??_dBm_to_mW 0102  
                                __Hparam0 0000                  ??_APP_LEDUpdateUSBStatus 0001  
          __size_of_AddNodeToNetworkTable 0124                   ?_USBCtrlTrfSetupHandler 0001  
           __end_of_AddNodeToNetworkTable 86AA                   USBStdGetStatusHandler@p 0002  
                                __Lparam0 0000                             ?i1_update_LED 0001  
                                _RxPacket 0300                                  _TxBuffer 02A6  
                  USBTransferOnePacket@ep 0104                                  _TxPacket 7434  
                                _RtccWrOn AF48                                  _SetupPkt 000D20  
                             CCM_Dec@text 0124           __end_of_MiMAC_ChannelAssessment 8586  
                   ?_USBConfigureEndpoint 0001                     MiMAC_ReceivedPacket@i 0146  
                   MiMAC_ReceivedPacket@j 0144                     MiMAC_ReceivedPacket@k 0143  
                       ??_USBDeviceAttach 0100                       __end_of_POWER_LABEL 21C7  
                        __size_of___awdiv 00BE                          __size_of___lbmod 0044  
                        __size_of___lldiv 00BC                         ??_update_variable 0109  
                         _tempLongAddress 01AA                  ??_encode_uint16_variable 010B  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                             CCM_Enc@text 0124                 __end_of_SYS_InterruptHigh A678  
                i2RegisterRead@IRQ0select 0064                      _MiApp_NoiseDetection 7096  
                i2RegisterRead@IRQ1select 0063                        _sendHIDBinary$4947 010E  
                MiMAC_ChannelAssessment@i 011C                  MiMAC_ChannelAssessment@k 0119  
                  AddNodeToNetworkTable@i 0108                                sprintf@idx 011C  
                              sprintf@len 0122                                sprintf@val 0124  
                    __size_of_RegisterSet 0046                          main@shortaddress 03E1  
                           ??i2_WriteFIFO 0062                             ?i2_update_LED 0001  
                             ??_WriteFIFO 0102                          __size_of_isdigit 002A  
                       ?_MiMAC_SetChannel 0107                   __size_of_USBDeviceTasks 0146  
                         ___lwdiv@divisor 0102                           ___lwdiv@counter 0104  
                                __ptext10 A6DA                                  __ptext11 776E  
                                __ptext20 9170                                  __ptext12 6704  
                                __ptext21 9094                                  __ptext13 9C1E  
                                __ptext30 AF5A                                  __ptext22 A73C  
                                __ptext14 5906                                  __ptext31 23C8  
                                __ptext23 987C                                  __ptext15 9EB2  
                                __ptext40 5DE2                                  __ptext32 A07A  
                                __ptext24 78D8                                  __ptext16 A232  
                                __ptext41 A9CA                                  __ptext33 4810  
                                __ptext25 AD86                                  __ptext17 9E16  
                                __ptext50 A2BC                                  __ptext42 7A38  
                                __ptext34 81E6                                  __ptext26 ACA8  
                                __ptext18 97C0                                  __ptext51 93EE  
                                __ptext43 86AA                                  __ptext35 A344  
                                __ptext27 80A8                                  __ptext19 94B6  
                                __ptext60 A91A                                  __ptext52 AF6C  
                                __ptext44 89EE                                  __ptext36 6C28  
                                __ptext28 AF48                                  __ptext61 AF76  
                                __ptext53 AE96                                  __ptext45 6E7C  
                                __ptext37 7434                                  __ptext29 629A  
                                __ptext70 AA1C                                  __ptext62 75DE  
                                __ptext54 88E2                                  __ptext46 9936  
                                __ptext38 AB32                                  __ptext71 AEDE  
                                __ptext63 AF96                                  __ptext55 7096  
                                __ptext47 AAEE                                  __ptext39 8322  
                                __ptext80 9320                                  __ptext72 AF30  
                                __ptext64 7E22                                  __ptext56 A4AE  
                                __ptext48 8586                                  __ptext81 A1A4  
                                __ptext73 ADEA                                  __ptext65 9CCE  
                                __ptext57 8456                                  __ptext49 ABB6  
                                __ptext90 A596                                  __ptext82 8CEA  
                                __ptext66 A438                                  __ptext58 A3C0  
                                __ptext91 8AF8                                  __ptext83 9D78  
                                __ptext75 7CDC                                  __ptext67 AEBA  
                                __ptext59 9702                                  __ptext92 ABF4  
                                __ptext84 8DDE                                  __ptext76 7F66  
                                __ptext68 99F0                                  __ptext93 A7FE  
                                __ptext85 8FB2                                  __ptext77 ADBA  
                                __ptext69 9F4A                                  __ptext94 AD50  
                                __ptext86 AE16                                  __ptext78 AE6C  
                                __ptext95 9B64                                  __ptext87 9AAA  
                                __ptext79 AA62                                  __ptext96 AC32  
                                __ptext88 7B8E                                  __ptext97 A110  
                                __ptext89 69A4                                  __ptext98 A8BE  
                                __ptext99 87CA                  TxPacket@allowedTxFailure 011D  
                      ??_MiMAC_SetChannel 0108                         ?_MiMAC_SendPacket 012F  
                            _SSP2CON1bits 000F72                                  _m_buffer 02D1  
                           MiWiTasks@mask 0160                    RouteMessage@parentNode 0146  
                        __size_of_sprintf 054C                    __size_of_isSameAddress 0052  
                              strcpy@from 0102                        ??_MiMAC_SendPacket 0135  
                                _p_buffer 01BA                      _send_complete_update 5906  
                             _NOISE_LABEL 21BF                               _sendHIDText 94B6  
          __end_of_USBCtrlTrfSetupHandler A232                             __size_of_main 0AC4  
                       ?_USBCtrlEPService 0001                    MiApp_NoiseDetection@t1 0132  
                  MiApp_NoiseDetection@t2 0136                       __end_of_timer_reset AF30  
                       ??_decode_variable 0113                                  _myParent 01CA  
                          ??i1_update_LED 0001                    __size_ofi2_RegisterSet 0046  
                     __end_ofi2_SetRFMode A07A                        ??_USBCtrlEPService 001B  
                     _USBCtrlTrfInHandler 963E                    MiApp_UnicastAddress@t1 03C4  
                  MiApp_UnicastAddress@t2 03C8                                  _tmpBlock 01EC  
                        _tempShortAddress 01F4                                  _outPipes 00A3  
                    _USBCtrlTrfOutHandler A8BE                                  int$flags 005C  
                 ?i1_USBTransferOnePacket 0001                 _USBCtrlEPAllowStatusStage 957A  
                       _TX_POWER_10_DB_MW 21B1              i2MiWi_TickGet@failureCounter 0065  
                       _TX_POWER_13_DB_MW 21B6                          _SYS_InterruptLow 0018  
                  ??_USBTransferOnePacket 0104                                  main@size 03E0  
                                main@rssi 03DD                     ?_MiApp_NoiseDetection 011D  
              MiMAC_SendPacket@MACPayload 0132            ?_APP_DeviceCustomHIDInitialize 0001  
                   __CFG_CPUDIV$OSC3_PLL3 000000                     findNextNetworkEntry@i 0100  
               _USBDeferStatusStagePacket 0048                          i1USBDeviceInit@i 0009  
                             _OSCTUNEbits 000F9B                            ??i2_update_LED 0060  
                              _INTCONbits 000FF2                           do_UPDATE@F10231 0040  
                            ??_update_LED 0100                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0100                           i2WriteFIFO@Data 0062  
                                memcpy@s1 0102             USBCtrlTrfTxService@byteToSend 0001  
                                isdigit@c 0102                                  memset@p1 0100  
       MiApp_NoiseDetection@DetectionMode 0122                               _repeat_full 0051  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                                intlevel1 0000                                  intlevel2 0000  
                       ?_MiApp_SetChannel 0001                                 sprintf@ap 0120  
                               sprintf@cp 011E                                 sprintf@sp 010C  
                   ?_send_complete_update 0001                   ?_MiApp_MessageAvailable 0001  
                     __end_ofi2_WriteFIFO ABB6                    __size_of_USBDeviceInit 0160  
                  ?_encode_uint8_variable 0100   __end_of_USER_USB_CALLBACK_EVENT_HANDLER A608  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0072         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER A596  
                          i2_RegisterRead A972                         ??i1_USBDeviceInit 0009  
                        ___lwmod@dividend 0107                               _noise_level 01F7  
                        ___lldiv@dividend 0100                        ??_MiApp_SetChannel 010A  
    SYSTEM_Initialize@pll_startup_counter 0100                             ?_MiWi_TickGet 0100  
                   __size_of_RouteMessage 065A                               _POWER_LABEL 21C3  
         __size_of_APP_LEDUpdateUSBStatus 003E                     __end_of_sendHIDBinary 9F4A  
                      _m_update_frequency 00E4                        _MiApp_ProtocolInit 75DE  
               __end_of_TX_POWER_10_DB_MW 21B6            __end_ofi1_USBTransferOnePacket 9C1E  
                             _RTCVALHbits 000F3B                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW 21BB                        _TX_POWER_N_2_DB_MW 21A5  
                           _MACInitParams 01AE                        __end_of_update_LED A7FE  
            __end_of_send_periodic_update 69A4                       MiMAC_Init@initValue 0112  
                      _TX_POWER_N_5_DB_MW 21AB                       _USBCtrlTrfRxService 87CA  
                      _USBWakeFromSuspend ADBA                        _TX_POWER_N_8_DB_MW 2192  
                 _USBStdFeatureReqHandler 69A4                             _isSameAddress A9CA  
                 ??_SearchForShortAddress 0100                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 0105                       _USBCtrlTrfTxService 9248  
         __size_of_encode_uint16_variable 009C               __end_of_UnicastShortAddress A110  
              __size_of_SYS_InterruptHigh A670                                _RTCCFGbits 000F3F  
                          __p_myUID_const FFF6                          _BroadcastRecords 0228  
                                sprintf@c 0129                                  sprintf@f 010E  
                      MiWiTasks@destPANID 016D                          _TX_POWER_1_DB_MW 2199  
                           i2_RegisterSet AAA8                       ?_USBWakeFromSuspend 0001  
                                strcmp@s1 0100                                  strcmp@s2 0102  
                              _PPSCONbits 000EBF                          _TX_POWER_4_DB_MW 219F  
                        ___lldiv@quotient 0108                               MiWiTasks@t1 0164  
                             MiWiTasks@t2 0152                           ___lwmod@divisor 0109  
                   ??_USBCtrlTrfInHandler 0002                                  strcpy@cp 0104  
                                strcpy@to 0100                     _USBAlternateInterface 0055  
                         ___lwmod@counter 010B                         i2TxPacket@rssival 0081  
                     TxPacket@TxPacketLen 011F                          _TX_POWER_7_DB_MW 21C7  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 004E  
                             _timer_count 005B                      i2TxPacket@CCARetries 007C  
           __size_of_findNextNetworkEntry 003E                               _timer_reset AF16  
                    ?_USBCtrlTrfRxService 0001            __end_of_MiApp_MessageAvailable AF6C  
                  __end_ofi2_RegisterRead A9CA                              _RouteMessage 4810  
                        _TX_POWER_INVALID 2189                       _MiMAC_DiscardPacket AE96  
                       _knownCoordinators 01C8                            _RouterFailures 00AC  
                         _BroadcastJitter 9936                               i2_SetRFMode 9FE2  
                              MiWiTasks@i 017C                                MiWiTasks@j 017B  
                ?_USBCtrlEPAllowDataStage 0001          __size_of_MiMAC_ChannelAssessment 0130  
                    ??_MiApp_ProtocolInit 0116                          i2TxPacket@status 007B  
                    ?_USBCtrlTrfTxService 0001                          ??i2_MiWi_TickGet 0064  
                     MiWiTasks@entry_2536 0161                           i2TxPacket@reTry 007D  
            _USBStatusStageTimeoutCounter 004C                            ??_MiWi_TickGet 0104  
            __end_of_SearchForLongAddress 94B6                      ??_USBWakeFromSuspend 0015  
                           i2TxPacket@CCA 006A            _StaticSecurityKey_absconstaddr 001FEC  
               i2MiWi_TickGet@currentTime 0066                USBTransferOnePacket@handle 0105  
                 ??_send_writables_update 0110                               encode@delta 010E  
                   RegisterSet@IRQ0select 0105                  MiWiTasks@associateStatus 0163  
                   RegisterSet@IRQ1select 0104              __end_of_MiMAC_ReceivedPacket 629A  
                              _USB_CD_Ptr 20CD                              i2TxPacket@t1 0073  
                            i2TxPacket@t2 0077                               encode@part1 0111  
                             encode@part2 0113                   ??_send_network_register 0110  
                             i2TxPacket@i 0080                               _USBInHandle 00D6  
