

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Dec 09 12:38:45 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	_myMUTA_version_const,global,ovrld,reloc=2,class=CODE,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1
   129                           	psect	text100,global,reloc=2,class=CODE,delta=1
   130                           	psect	text101,global,reloc=2,class=CODE,delta=1
   131                           	psect	text102,global,reloc=2,class=CODE,delta=1
   132                           	psect	text103,global,reloc=2,class=CODE,delta=1
   133                           	psect	text104,global,reloc=2,class=CODE,delta=1
   134                           	psect	text105,global,reloc=2,class=CODE,delta=1
   135                           	psect	text106,global,reloc=2,class=CODE,delta=1
   136                           	psect	text107,global,reloc=2,class=CODE,delta=1
   137                           	psect	text108,global,reloc=2,class=CODE,delta=1
   138                           	psect	text109,global,reloc=2,class=CODE,delta=1
   139                           	psect	text110,global,reloc=2,class=CODE,delta=1
   140                           	psect	text111,global,reloc=2,class=CODE,delta=1
   141                           	psect	text112,global,reloc=2,class=CODE,delta=1
   142                           	psect	text113,global,reloc=2,class=CODE,delta=1
   143                           	psect	text114,global,reloc=2,class=CODE,delta=1
   144                           	psect	text115,global,reloc=2,class=CODE,delta=1
   145                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   146                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   147                           	psect	text117,global,reloc=2,class=CODE,delta=1
   148                           	psect	text118,global,reloc=2,class=CODE,delta=1
   149                           	psect	text119,global,reloc=2,class=CODE,delta=1
   150                           	psect	text120,global,reloc=2,class=CODE,delta=1
   151                           	psect	text121,global,reloc=2,class=CODE,delta=1
   152                           	psect	text122,global,reloc=2,class=CODE,delta=1
   153                           	psect	text123,global,reloc=2,class=CODE,delta=1
   154                           	psect	text124,global,reloc=2,class=CODE,delta=1
   155                           	psect	text125,global,reloc=2,class=CODE,delta=1
   156                           	psect	text126,global,reloc=2,class=CODE,delta=1
   157                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   158                           	psect	param0,global,class=BANK0,space=1,delta=1
   159                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   160                           	dabs	1,0xD00,32,_BDT
   161                           	dabs	1,0xD28,8,_CtrlTrfData
   162                           	dabs	1,0xD20,8,_SetupPkt
   163  0000                     
   164                           	psect	idataCOMRAM
   165  00BBCE                     __pidataCOMRAM:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _LED_brightness
   169  00BBCE  00EB               	dw	235
   170                           
   171                           ;initializer for _timer_count
   172  00BBD0  01                 	db	1
   173                           
   174                           	psect	idataBANK1
   175  00BBD1                     __pidataBANK1:
   176                           	opt stack 0
   177                           
   178                           ;initializer for _AcknowledgementSeq
   179  00BBD1  FF                 	db	255
   180                           
   181                           ;initializer for _defaultHops
   182  00BBD2  04                 	db	4
   183                           
   184                           ;initializer for _m_update_frequency
   185  00BBD3  01                 	db	1
   186                           
   187                           	psect	idataBANK2
   188  00BBC8                     __pidataBANK2:
   189                           	opt stack 0
   190                           
   191                           ;initializer for MiMAC_ChannelAssessment@F10758
   192  00BBC8  2A                 	db	42
   193  00BBC9  4E                 	db	78
   194  00BBCA  72                 	db	114
   195  00BBCB  96                 	db	150
   196  00BBCC  BA                 	db	186
   197  00BBCD  DE                 	db	222
   198                           
   199                           	psect	mediumconst
   200  001FF4                     __pmediumconst:
   201                           	opt stack 0
   202  001FF4  00                 	db	0
   203  001FF5                     _InitConfigRegs:
   204                           	opt stack 0
   205  001FF5  0036               	dw	54
   206  001FF7  0284               	dw	644
   207  001FF9  0409               	dw	1033
   208  001FFB  0609               	dw	1545
   209  001FFD  080C               	dw	2060
   210  001FFF  0AC1               	dw	2753
   211  002001  0C7D               	dw	3197
   212  002003  0E64               	dw	3684
   213  002005  1014               	dw	4116
   214  002007  1200               	dw	4608
   215  002009  1400               	dw	5120
   216  00200B  1600               	dw	5632
   217  00200D  1838               	dw	6200
   218  00200F  1AC8               	dw	6856
   219  002011  1C0D               	dw	7181
   220  002013  1E00               	dw	7680
   221  002015  2072               	dw	8306
   222  002017  2238               	dw	8760
   223  002019  2438               	dw	9272
   224  00201B  2607               	dw	9735
   225  00201D  2800               	dw	10240
   226  00201F  2A00               	dw	10752
   227  002021  2C69               	dw	11369
   228  002023  2E81               	dw	11905
   229  002025  307E               	dw	12414
   230  002027  3296               	dw	12950
   231  002029  34F0               	dw	13552
   232  00202B  3688               	dw	13960
   233  00202D  3840               	dw	14400
   234  00202F  3A00               	dw	14848
   235  002031  3CE8               	dw	15592
   236  002033  3E00               	dw	15872
   237  002035                     __end_of_InitConfigRegs:
   238                           	opt stack 0
   239  002035                     _ScanTime:
   240                           	opt stack 0
   241  002035  03C0               	dw	960
   242  002037  0000               	dw	0
   243  002039  05A0               	dw	1440
   244  00203B  0000               	dw	0
   245  00203D  0960               	dw	2400
   246  00203F  0000               	dw	0
   247  002041  10E0               	dw	4320
   248  002043  0000               	dw	0
   249  002045  1FE0               	dw	8160
   250  002047  0000               	dw	0
   251  002049  3DE0               	dw	15840
   252  00204B  0000               	dw	0
   253  00204D  79E0               	dw	31200
   254  00204F  0000               	dw	0
   255  002051  F1E0               	dw	61920
   256  002053  0000               	dw	0
   257  002055  E1E0               	dw	57824
   258  002057  0001               	dw	1
   259  002059  C1E0               	dw	49632
   260  00205B  0003               	dw	3
   261  00205D  81E0               	dw	33248
   262  00205F  0007               	dw	7
   263  002061  01E0               	dw	480
   264  002063  000F               	dw	15
   265  002065  01E0               	dw	480
   266  002067  001E               	dw	30
   267  002069  3D44               	dw	15684
   268  00206B  001B               	dw	27
   269  00206D  B40D               	dw	46093
   270  00206F  0015               	dw	21
   271  002071                     __end_of_ScanTime:
   272                           	opt stack 0
   273  002071                     _PVALUE:
   274                           	opt stack 0
   275  002071  4F                 	db	79
   276  002072  4F                 	db	79
   277  002073  4F                 	db	79
   278  002074  4F                 	db	79
   279  002075  4F                 	db	79
   280  002076  4F                 	db	79
   281  002077  4F                 	db	79
   282  002078  4F                 	db	79
   283  002079  4F                 	db	79
   284  00207A  4F                 	db	79
   285  00207B  4F                 	db	79
   286  00207C  4F                 	db	79
   287  00207D  4F                 	db	79
   288  00207E  4F                 	db	79
   289  00207F  4F                 	db	79
   290  002080  4F                 	db	79
   291  002081  4F                 	db	79
   292  002082  4F                 	db	79
   293  002083  4F                 	db	79
   294  002084  4F                 	db	79
   295  002085  4F                 	db	79
   296  002086  4F                 	db	79
   297  002087  50                 	db	80
   298  002088  50                 	db	80
   299  002089  50                 	db	80
   300  00208A  50                 	db	80
   301  00208B  50                 	db	80
   302  00208C  50                 	db	80
   303  00208D  50                 	db	80
   304  00208E  50                 	db	80
   305  00208F  50                 	db	80
   306  002090  50                 	db	80
   307  002091                     __end_of_PVALUE:
   308                           	opt stack 0
   309  002091                     _SVALUE:
   310                           	opt stack 0
   311  002091  22                 	db	34
   312  002092  24                 	db	36
   313  002093  26                 	db	38
   314  002094  28                 	db	40
   315  002095  2A                 	db	42
   316  002096  2C                 	db	44
   317  002097  2E                 	db	46
   318  002098  30                 	db	48
   319  002099  32                 	db	50
   320  00209A  34                 	db	52
   321  00209B  37                 	db	55
   322  00209C  39                 	db	57
   323  00209D  3B                 	db	59
   324  00209E  3D                 	db	61
   325  00209F  3F                 	db	63
   326  0020A0  41                 	db	65
   327  0020A1  43                 	db	67
   328  0020A2  45                 	db	69
   329  0020A3  47                 	db	71
   330  0020A4  4A                 	db	74
   331  0020A5  4C                 	db	76
   332  0020A6  4E                 	db	78
   333  0020A7  05                 	db	5
   334  0020A8  07                 	db	7
   335  0020A9  09                 	db	9
   336  0020AA  0B                 	db	11
   337  0020AB  0D                 	db	13
   338  0020AC  0F                 	db	15
   339  0020AD  11                 	db	17
   340  0020AE  14                 	db	20
   341  0020AF  16                 	db	22
   342  0020B0  18                 	db	24
   343  0020B1                     __end_of_SVALUE:
   344                           	opt stack 0
   345  0020B1                     _dpowers:
   346                           	opt stack 0
   347  0020B1  0001               	dw	1
   348  0020B3  000A               	dw	10
   349  0020B5  0064               	dw	100
   350  0020B7  03E8               	dw	1000
   351  0020B9  2710               	dw	10000
   352  0020BB                     __end_of_dpowers:
   353                           	opt stack 0
   354  0000                     _StaticSecurityKey_absconstaddr	set	8172
   355  0020BB                     _hexpowers:
   356                           	opt stack 0
   357  0020BB  0001               	dw	1
   358  0020BD  0010               	dw	16
   359  0020BF  0100               	dw	256
   360  0020C1  1000               	dw	4096
   361  0020C3                     __end_of_hexpowers:
   362                           	opt stack 0
   363  0020C3                     _USB_SD_Ptr:
   364                           	opt stack 0
   365  0020C3  D1                 	db	low _sd000
   366  0020C4  21                 	db	high _sd000
   367  0020C5  CF                 	db	low _sd001
   368  0020C6  20                 	db	high _sd001
   369  0020C7  03                 	db	low _sd002
   370  0020C8  21                 	db	high _sd002
   371  0020C9                     __end_of_USB_SD_Ptr:
   372                           	opt stack 0
   373  0020C9                     _PANID_LABEL:
   374                           	opt stack 0
   375  0020C9  50                 	db	80
   376  0020CA  41                 	db	65
   377  0020CB  4E                 	db	78
   378  0020CC  00                 	db	0
   379  0020CD                     __end_of_PANID_LABEL:
   380                           	opt stack 0
   381  0020CD                     _USB_CD_Ptr:
   382                           	opt stack 0
   383  0020CD  31                 	db	low _configDescriptor1
   384  0020CE  21                 	db	high _configDescriptor1
   385  0020CF                     __end_of_USB_CD_Ptr:
   386                           	opt stack 0
   387  0000                     _myUID_absconstaddr	set	131062
   388  0000                     _myMODEL_absconstaddr	set	131060
   389  0000                     _myMUTA_version_absconstaddr	set	131058
   390  0020CF                     _sd001:
   391                           	opt stack 0
   392  0020CF  34                 	db	52
   393  0020D0  03                 	db	3
   394  0020D1  004D               	dw	77
   395  0020D3  0069               	dw	105
   396  0020D5  0063               	dw	99
   397  0020D7  0072               	dw	114
   398  0020D9  006F               	dw	111
   399  0020DB  0063               	dw	99
   400  0020DD  0068               	dw	104
   401  0020DF  0069               	dw	105
   402  0020E1  0070               	dw	112
   403  0020E3  0020               	dw	32
   404  0020E5  0054               	dw	84
   405  0020E7  0065               	dw	101
   406  0020E9  0063               	dw	99
   407  0020EB  0068               	dw	104
   408  0020ED  006E               	dw	110
   409  0020EF  006F               	dw	111
   410  0020F1  006C               	dw	108
   411  0020F3  006F               	dw	111
   412  0020F5  0067               	dw	103
   413  0020F7  0079               	dw	121
   414  0020F9  0020               	dw	32
   415  0020FB  0049               	dw	73
   416  0020FD  006E               	dw	110
   417  0020FF  0063               	dw	99
   418  002101  002E               	dw	46
   419  002103                     __end_of_sd001:
   420                           	opt stack 0
   421  002103                     _sd002:
   422                           	opt stack 0
   423  002103  2E                 	db	46
   424  002104  03                 	db	3
   425  002105  0053               	dw	83
   426  002107  0069               	dw	105
   427  002109  006D               	dw	109
   428  00210B  0070               	dw	112
   429  00210D  006C               	dw	108
   430  00210F  0065               	dw	101
   431  002111  0020               	dw	32
   432  002113  0048               	dw	72
   433  002115  0049               	dw	73
   434  002117  0044               	dw	68
   435  002119  0020               	dw	32
   436  00211B  0044               	dw	68
   437  00211D  0065               	dw	101
   438  00211F  0076               	dw	118
   439  002121  0069               	dw	105
   440  002123  0063               	dw	99
   441  002125  0065               	dw	101
   442  002127  0020               	dw	32
   443  002129  0044               	dw	68
   444  00212B  0065               	dw	101
   445  00212D  006D               	dw	109
   446  00212F  006F               	dw	111
   447  002131                     __end_of_sd002:
   448                           	opt stack 0
   449  002131                     _configDescriptor1:
   450                           	opt stack 0
   451  002131  09                 	db	9
   452  002132  02                 	db	2
   453  002133  29                 	db	41
   454  002134  00                 	db	0
   455  002135  01                 	db	1
   456  002136  01                 	db	1
   457  002137  00                 	db	0
   458  002138  C0                 	db	192
   459  002139  32                 	db	50
   460  00213A  09                 	db	9
   461  00213B  04                 	db	4
   462  00213C  00                 	db	0
   463  00213D  00                 	db	0
   464  00213E  02                 	db	2
   465  00213F  03                 	db	3
   466  002140  00                 	db	0
   467  002141  00                 	db	0
   468  002142  00                 	db	0
   469  002143  09                 	db	9
   470  002144  21                 	db	33
   471  002145  11                 	db	17
   472  002146  01                 	db	1
   473  002147  00                 	db	0
   474  002148  01                 	db	1
   475  002149  22                 	db	34
   476  00214A  1D                 	db	29
   477  00214B  00                 	db	0
   478  00214C  07                 	db	7
   479  00214D  05                 	db	5
   480  00214E  81                 	db	129
   481  00214F  03                 	db	3
   482  002150  40                 	db	64
   483  002151  00                 	db	0
   484  002152  01                 	db	1
   485  002153  07                 	db	7
   486  002154  05                 	db	5
   487  002155  01                 	db	1
   488  002156  03                 	db	3
   489  002157  40                 	db	64
   490  002158  00                 	db	0
   491  002159  01                 	db	1
   492  00215A                     __end_of_configDescriptor1:
   493                           	opt stack 0
   494  00215A                     _hid_rpt01:
   495                           	opt stack 0
   496  00215A  06                 	db	6
   497  00215B  00                 	db	0
   498  00215C  FF                 	db	255
   499  00215D  09                 	db	9
   500  00215E  01                 	db	1
   501  00215F  A1                 	db	161
   502  002160  01                 	db	1
   503  002161  19                 	db	25
   504  002162  01                 	db	1
   505  002163  29                 	db	41
   506  002164  40                 	db	64
   507  002165  15                 	db	21
   508  002166  00                 	db	0
   509  002167  26                 	db	38
   510  002168  FF                 	db	255
   511  002169  00                 	db	0
   512  00216A  75                 	db	117
   513  00216B  08                 	db	8
   514  00216C  95                 	db	149
   515  00216D  40                 	db	64
   516  00216E  81                 	db	129
   517  00216F  00                 	db	0
   518  002170  19                 	db	25
   519  002171  01                 	db	1
   520  002172  29                 	db	41
   521  002173  40                 	db	64
   522  002174  91                 	db	145
   523  002175  00                 	db	0
   524  002176  C0                 	db	192
   525  002177                     __end_of_hid_rpt01:
   526                           	opt stack 0
   527  002177                     _device_dsc:
   528                           	opt stack 0
   529  002177  12                 	db	18
   530  002178  01                 	db	1
   531  002179  0200               	dw	512
   532  00217B  00                 	db	0
   533  00217C  00                 	db	0
   534  00217D  00                 	db	0
   535  00217E  08                 	db	8
   536  00217F  04D8               	dw	1240
   537  002181  F7C9               	dw	63433
   538  002183  0100               	dw	256
   539  002185  01                 	db	1
   540  002186  02                 	db	2
   541  002187  00                 	db	0
   542  002188  01                 	db	1
   543  002189                     __end_of_device_dsc:
   544                           	opt stack 0
   545  002189                     _TX_POWER_1_DB_MW:
   546                           	opt stack 0
   547  002189  31                 	db	49
   548  00218A  2E                 	db	46
   549  00218B  32                 	db	50
   550  00218C  35                 	db	53
   551  00218D  6D                 	db	109
   552  00218E  57                 	db	87
   553  00218F  00                 	db	0
   554  002190                     __end_of_TX_POWER_1_DB_MW:
   555                           	opt stack 0
   556  002190                     _TX_POWER_N_8_DB_MW:
   557                           	opt stack 0
   558  002190  30                 	db	48
   559  002191  2E                 	db	46
   560  002192  31                 	db	49
   561  002193  35                 	db	53
   562  002194  6D                 	db	109
   563  002195  57                 	db	87
   564  002196  00                 	db	0
   565  002197                     __end_of_TX_POWER_N_8_DB_MW:
   566                           	opt stack 0
   567  002197                     _TX_POWER_4_DB_MW:
   568                           	opt stack 0
   569  002197  32                 	db	50
   570  002198  2E                 	db	46
   571  002199  35                 	db	53
   572  00219A  6D                 	db	109
   573  00219B  57                 	db	87
   574  00219C  00                 	db	0
   575  00219D                     __end_of_TX_POWER_4_DB_MW:
   576                           	opt stack 0
   577  00219D                     _TX_POWER_INVALID:
   578                           	opt stack 0
   579  00219D  30                 	db	48
   580  00219E  2E                 	db	46
   581  00219F  30                 	db	48
   582  0021A0  6D                 	db	109
   583  0021A1  57                 	db	87
   584  0021A2  00                 	db	0
   585  0021A3                     __end_of_TX_POWER_INVALID:
   586                           	opt stack 0
   587  0021A3                     _TX_POWER_N_2_DB_MW:
   588                           	opt stack 0
   589  0021A3  30                 	db	48
   590  0021A4  2E                 	db	46
   591  0021A5  36                 	db	54
   592  0021A6  6D                 	db	109
   593  0021A7  57                 	db	87
   594  0021A8  00                 	db	0
   595  0021A9                     __end_of_TX_POWER_N_2_DB_MW:
   596                           	opt stack 0
   597  0021A9                     _TX_POWER_N_5_DB_MW:
   598                           	opt stack 0
   599  0021A9  30                 	db	48
   600  0021AA  2E                 	db	46
   601  0021AB  33                 	db	51
   602  0021AC  6D                 	db	109
   603  0021AD  57                 	db	87
   604  0021AE  00                 	db	0
   605  0021AF                     __end_of_TX_POWER_N_5_DB_MW:
   606                           	opt stack 0
   607  0021AF                     _TX_POWER_10_DB_MW:
   608                           	opt stack 0
   609  0021AF  31                 	db	49
   610  0021B0  30                 	db	48
   611  0021B1  6D                 	db	109
   612  0021B2  57                 	db	87
   613  0021B3  00                 	db	0
   614  0021B4                     __end_of_TX_POWER_10_DB_MW:
   615                           	opt stack 0
   616  0021B4                     _TX_POWER_13_DB_MW:
   617                           	opt stack 0
   618  0021B4  32                 	db	50
   619  0021B5  30                 	db	48
   620  0021B6  6D                 	db	109
   621  0021B7  57                 	db	87
   622  0021B8  00                 	db	0
   623  0021B9                     __end_of_TX_POWER_13_DB_MW:
   624                           	opt stack 0
   625  0021B9                     _CHANNEL_LABEL:
   626                           	opt stack 0
   627  0021B9  43                 	db	67
   628  0021BA  68                 	db	104
   629  0021BB  6E                 	db	110
   630  0021BC  00                 	db	0
   631  0021BD                     __end_of_CHANNEL_LABEL:
   632                           	opt stack 0
   633  0021BD                     _NOISE_LABEL:
   634                           	opt stack 0
   635  0021BD  4E                 	db	78
   636  0021BE  73                 	db	115
   637  0021BF  65                 	db	101
   638  0021C0  00                 	db	0
   639  0021C1                     __end_of_NOISE_LABEL:
   640                           	opt stack 0
   641  0021C1                     _POWER_LABEL:
   642                           	opt stack 0
   643  0021C1  50                 	db	80
   644  0021C2  77                 	db	119
   645  0021C3  72                 	db	114
   646  0021C4  00                 	db	0
   647  0021C5                     __end_of_POWER_LABEL:
   648                           	opt stack 0
   649  0021C5                     _TX_POWER_7_DB_MW:
   650                           	opt stack 0
   651  0021C5  35                 	db	53
   652  0021C6  6D                 	db	109
   653  0021C7  57                 	db	87
   654  0021C8  00                 	db	0
   655  0021C9                     __end_of_TX_POWER_7_DB_MW:
   656                           	opt stack 0
   657  0021C9                     _UPDATE_FREQUENCY_LABEL:
   658                           	opt stack 0
   659  0021C9  55                 	db	85
   660  0021CA  70                 	db	112
   661  0021CB  46                 	db	70
   662  0021CC  00                 	db	0
   663  0021CD                     __end_of_UPDATE_FREQUENCY_LABEL:
   664                           	opt stack 0
   665  0021CD                     _UPTIME_LABEL:
   666                           	opt stack 0
   667  0021CD  55                 	db	85
   668  0021CE  70                 	db	112
   669  0021CF  74                 	db	116
   670  0021D0  00                 	db	0
   671  0021D1                     __end_of_UPTIME_LABEL:
   672                           	opt stack 0
   673  0021D1                     _sd000:
   674                           	opt stack 0
   675  0021D1  04                 	db	4
   676  0021D2  03                 	db	3
   677  0021D3  0409               	dw	1033
   678  0021D5                     __end_of_sd000:
   679                           	opt stack 0
   680  0000                     _StaticSecurityKey_absconstaddr	set	8172
   681  0021D5                     STR_11:
   682                           
   683                           ; BSR set to: 0
   684  0021D5  49                 	db	73	;'I'
   685  0021D6  7C                 	db	124
   686  0021D7  25                 	db	37
   687  0021D8  30                 	db	48	;'0'
   688  0021D9  32                 	db	50	;'2'
   689  0021DA  78                 	db	120	;'x'
   690  0021DB  25                 	db	37
   691  0021DC  30                 	db	48	;'0'
   692  0021DD  32                 	db	50	;'2'
   693  0021DE  78                 	db	120	;'x'
   694  0021DF  3A                 	db	58	;':'
   695  0021E0  50                 	db	80	;'P'
   696  0021E1  4F                 	db	79	;'O'
   697  0021E2  57                 	db	87	;'W'
   698  0021E3  45                 	db	69	;'E'
   699  0021E4  52                 	db	82	;'R'
   700  0021E5  5F                 	db	95	;'_'
   701  0021E6  54                 	db	84	;'T'
   702  0021E7  45                 	db	69	;'E'
   703  0021E8  53                 	db	83	;'S'
   704  0021E9  54                 	db	84	;'T'
   705  0021EA  3A                 	db	58	;':'
   706  0021EB  20                 	db	32
   707  0021EC  65                 	db	101	;'e'
   708  0021ED  72                 	db	114	;'r'
   709  0021EE  72                 	db	114	;'r'
   710  0021EF  6F                 	db	111	;'o'
   711  0021F0  72                 	db	114	;'r'
   712  0021F1  20                 	db	32
   713  0021F2  73                 	db	115	;'s'
   714  0021F3  65                 	db	101	;'e'
   715  0021F4  6E                 	db	110	;'n'
   716  0021F5  64                 	db	100	;'d'
   717  0021F6  69                 	db	105	;'i'
   718  0021F7  6E                 	db	110	;'n'
   719  0021F8  67                 	db	103	;'g'
   720  0021F9  20                 	db	32
   721  0021FA  62                 	db	98	;'b'
   722  0021FB  61                 	db	97	;'a'
   723  0021FC  63                 	db	99	;'c'
   724  0021FD  6B                 	db	107	;'k'
   725  0021FE  2C                 	db	44
   726  0021FF  20                 	db	32
   727  002200  25                 	db	37
   728  002201  73                 	db	115	;'s'
   729  002202  2C                 	db	44
   730  002203  20                 	db	32
   731  002204  52                 	db	82	;'R'
   732  002205  53                 	db	83	;'S'
   733  002206  53                 	db	83	;'S'
   734  002207  49                 	db	73	;'I'
   735  002208  3D                 	db	61	;'='
   736  002209  25                 	db	37
   737  00220A  69                 	db	105	;'i'
   738  00220B  00                 	db	0
   739  00220C                     STR_13:
   740                           
   741                           ; BSR set to: 0
   742  00220C  49                 	db	73	;'I'
   743  00220D  7C                 	db	124
   744  00220E  25                 	db	37
   745  00220F  30                 	db	48	;'0'
   746  002210  32                 	db	50	;'2'
   747  002211  78                 	db	120	;'x'
   748  002212  25                 	db	37
   749  002213  30                 	db	48	;'0'
   750  002214  32                 	db	50	;'2'
   751  002215  78                 	db	120	;'x'
   752  002216  3A                 	db	58	;':'
   753  002217  50                 	db	80	;'P'
   754  002218  49                 	db	73	;'I'
   755  002219  4E                 	db	78	;'N'
   756  00221A  47                 	db	71	;'G'
   757  00221B  20                 	db	32
   758  00221C  65                 	db	101	;'e'
   759  00221D  72                 	db	114	;'r'
   760  00221E  72                 	db	114	;'r'
   761  00221F  6F                 	db	111	;'o'
   762  002220  72                 	db	114	;'r'
   763  002221  20                 	db	32
   764  002222  73                 	db	115	;'s'
   765  002223  65                 	db	101	;'e'
   766  002224  6E                 	db	110	;'n'
   767  002225  64                 	db	100	;'d'
   768  002226  69                 	db	105	;'i'
   769  002227  6E                 	db	110	;'n'
   770  002228  67                 	db	103	;'g'
   771  002229  20                 	db	32
   772  00222A  62                 	db	98	;'b'
   773  00222B  61                 	db	97	;'a'
   774  00222C  63                 	db	99	;'c'
   775  00222D  6B                 	db	107	;'k'
   776  00222E  3A                 	db	58	;':'
   777  00222F  20                 	db	32
   778  002230  70                 	db	112	;'p'
   779  002231  61                 	db	97	;'a'
   780  002232  79                 	db	121	;'y'
   781  002233  6C                 	db	108	;'l'
   782  002234  6F                 	db	111	;'o'
   783  002235  61                 	db	97	;'a'
   784  002236  64                 	db	100	;'d'
   785  002237  5F                 	db	95	;'_'
   786  002238  73                 	db	115	;'s'
   787  002239  69                 	db	105	;'i'
   788  00223A  7A                 	db	122	;'z'
   789  00223B  65                 	db	101	;'e'
   790  00223C  3D                 	db	61	;'='
   791  00223D  25                 	db	37
   792  00223E  69                 	db	105	;'i'
   793  00223F  00                 	db	0
   794  002240                     STR_12:
   795                           
   796                           ; BSR set to: 0
   797  002240  49                 	db	73	;'I'
   798  002241  7C                 	db	124
   799  002242  25                 	db	37
   800  002243  30                 	db	48	;'0'
   801  002244  32                 	db	50	;'2'
   802  002245  78                 	db	120	;'x'
   803  002246  25                 	db	37
   804  002247  30                 	db	48	;'0'
   805  002248  32                 	db	50	;'2'
   806  002249  78                 	db	120	;'x'
   807  00224A  3A                 	db	58	;':'
   808  00224B  50                 	db	80	;'P'
   809  00224C  49                 	db	73	;'I'
   810  00224D  4E                 	db	78	;'N'
   811  00224E  47                 	db	71	;'G'
   812  00224F  20                 	db	32
   813  002250  73                 	db	115	;'s'
   814  002251  75                 	db	117	;'u'
   815  002252  63                 	db	99	;'c'
   816  002253  63                 	db	99	;'c'
   817  002254  65                 	db	101	;'e'
   818  002255  73                 	db	115	;'s'
   819  002256  73                 	db	115	;'s'
   820  002257  66                 	db	102	;'f'
   821  002258  75                 	db	117	;'u'
   822  002259  6C                 	db	108	;'l'
   823  00225A  3A                 	db	58	;':'
   824  00225B  20                 	db	32
   825  00225C  70                 	db	112	;'p'
   826  00225D  61                 	db	97	;'a'
   827  00225E  79                 	db	121	;'y'
   828  00225F  6C                 	db	108	;'l'
   829  002260  6F                 	db	111	;'o'
   830  002261  61                 	db	97	;'a'
   831  002262  64                 	db	100	;'d'
   832  002263  5F                 	db	95	;'_'
   833  002264  73                 	db	115	;'s'
   834  002265  69                 	db	105	;'i'
   835  002266  7A                 	db	122	;'z'
   836  002267  65                 	db	101	;'e'
   837  002268  3D                 	db	61	;'='
   838  002269  25                 	db	37
   839  00226A  69                 	db	105	;'i'
   840  00226B  00                 	db	0
   841  00226C                     STR_4:
   842                           
   843                           ; BSR set to: 0
   844  00226C  49                 	db	73	;'I'
   845  00226D  7C                 	db	124
   846  00226E  45                 	db	69	;'E'
   847  00226F  72                 	db	114	;'r'
   848  002270  72                 	db	114	;'r'
   849  002271  6F                 	db	111	;'o'
   850  002272  72                 	db	114	;'r'
   851  002273  3A                 	db	58	;':'
   852  002274  20                 	db	32
   853  002275  75                 	db	117	;'u'
   854  002276  6E                 	db	110	;'n'
   855  002277  61                 	db	97	;'a'
   856  002278  62                 	db	98	;'b'
   857  002279  6C                 	db	108	;'l'
   858  00227A  65                 	db	101	;'e'
   859  00227B  20                 	db	32
   860  00227C  74                 	db	116	;'t'
   861  00227D  6F                 	db	111	;'o'
   862  00227E  20                 	db	32
   863  00227F  73                 	db	115	;'s'
   864  002280  65                 	db	101	;'e'
   865  002281  74                 	db	116	;'t'
   866  002282  20                 	db	32
   867  002283  63                 	db	99	;'c'
   868  002284  68                 	db	104	;'h'
   869  002285  61                 	db	97	;'a'
   870  002286  6E                 	db	110	;'n'
   871  002287  6E                 	db	110	;'n'
   872  002288  65                 	db	101	;'e'
   873  002289  6C                 	db	108	;'l'
   874  00228A  20                 	db	32
   875  00228B  25                 	db	37
   876  00228C  69                 	db	105	;'i'
   877  00228D  21                 	db	33
   878  00228E  20                 	db	32
   879  00228F  28                 	db	40
   880  002290  54                 	db	84	;'T'
   881  002291  5F                 	db	95	;'_'
   882  002292  54                 	db	84	;'T'
   883  002293  29                 	db	41
   884  002294  00                 	db	0
   885  002295                     STR_14:
   886                           
   887                           ; BSR set to: 0
   888  002295  49                 	db	73	;'I'
   889  002296  7C                 	db	124
   890  002297  25                 	db	37
   891  002298  30                 	db	48	;'0'
   892  002299  32                 	db	50	;'2'
   893  00229A  78                 	db	120	;'x'
   894  00229B  25                 	db	37
   895  00229C  30                 	db	48	;'0'
   896  00229D  32                 	db	50	;'2'
   897  00229E  78                 	db	120	;'x'
   898  00229F  3A                 	db	58	;':'
   899  0022A0  20                 	db	32
   900  0022A1  25                 	db	37
   901  0022A2  69                 	db	105	;'i'
   902  0022A3  20                 	db	32
   903  0022A4  63                 	db	99	;'c'
   904  0022A5  6F                 	db	111	;'o'
   905  0022A6  6D                 	db	109	;'m'
   906  0022A7  6D                 	db	109	;'m'
   907  0022A8  61                 	db	97	;'a'
   908  0022A9  6E                 	db	110	;'n'
   909  0022AA  64                 	db	100	;'d'
   910  0022AB  20                 	db	32
   911  0022AC  6E                 	db	110	;'n'
   912  0022AD  6F                 	db	111	;'o'
   913  0022AE  74                 	db	116	;'t'
   914  0022AF  20                 	db	32
   915  0022B0  72                 	db	114	;'r'
   916  0022B1  65                 	db	101	;'e'
   917  0022B2  63                 	db	99	;'c'
   918  0022B3  6F                 	db	111	;'o'
   919  0022B4  67                 	db	103	;'g'
   920  0022B5  6E                 	db	110	;'n'
   921  0022B6  69                 	db	105	;'i'
   922  0022B7  7A                 	db	122	;'z'
   923  0022B8  65                 	db	101	;'e'
   924  0022B9  64                 	db	100	;'d'
   925  0022BA  21                 	db	33
   926  0022BB  00                 	db	0
   927  0022BC                     STR_10:
   928                           
   929                           ; BSR set to: 0
   930  0022BC  49                 	db	73	;'I'
   931  0022BD  7C                 	db	124
   932  0022BE  25                 	db	37
   933  0022BF  30                 	db	48	;'0'
   934  0022C0  32                 	db	50	;'2'
   935  0022C1  78                 	db	120	;'x'
   936  0022C2  25                 	db	37
   937  0022C3  30                 	db	48	;'0'
   938  0022C4  32                 	db	50	;'2'
   939  0022C5  78                 	db	120	;'x'
   940  0022C6  3A                 	db	58	;':'
   941  0022C7  50                 	db	80	;'P'
   942  0022C8  4F                 	db	79	;'O'
   943  0022C9  57                 	db	87	;'W'
   944  0022CA  45                 	db	69	;'E'
   945  0022CB  52                 	db	82	;'R'
   946  0022CC  5F                 	db	95	;'_'
   947  0022CD  54                 	db	84	;'T'
   948  0022CE  45                 	db	69	;'E'
   949  0022CF  53                 	db	83	;'S'
   950  0022D0  54                 	db	84	;'T'
   951  0022D1  3A                 	db	58	;':'
   952  0022D2  20                 	db	32
   953  0022D3  4F                 	db	79	;'O'
   954  0022D4  4B                 	db	75	;'K'
   955  0022D5  2C                 	db	44
   956  0022D6  20                 	db	32
   957  0022D7  25                 	db	37
   958  0022D8  73                 	db	115	;'s'
   959  0022D9  2C                 	db	44
   960  0022DA  20                 	db	32
   961  0022DB  52                 	db	82	;'R'
   962  0022DC  53                 	db	83	;'S'
   963  0022DD  53                 	db	83	;'S'
   964  0022DE  49                 	db	73	;'I'
   965  0022DF  3D                 	db	61	;'='
   966  0022E0  25                 	db	37
   967  0022E1  69                 	db	105	;'i'
   968  0022E2  00                 	db	0
   969  0022E3                     STR_3:
   970                           
   971                           ; BSR set to: 0
   972  0022E3  49                 	db	73	;'I'
   973  0022E4  7C                 	db	124
   974  0022E5  62                 	db	98	;'b'
   975  0022E6  65                 	db	101	;'e'
   976  0022E7  73                 	db	115	;'s'
   977  0022E8  74                 	db	116	;'t'
   978  0022E9  20                 	db	32
   979  0022EA  63                 	db	99	;'c'
   980  0022EB  68                 	db	104	;'h'
   981  0022EC  61                 	db	97	;'a'
   982  0022ED  6E                 	db	110	;'n'
   983  0022EE  6E                 	db	110	;'n'
   984  0022EF  65                 	db	101	;'e'
   985  0022F0  6C                 	db	108	;'l'
   986  0022F1  3A                 	db	58	;':'
   987  0022F2  20                 	db	32
   988  0022F3  25                 	db	37
   989  0022F4  69                 	db	105	;'i'
   990  0022F5  20                 	db	32
   991  0022F6  28                 	db	40
   992  0022F7  6E                 	db	110	;'n'
   993  0022F8  6F                 	db	111	;'o'
   994  0022F9  69                 	db	105	;'i'
   995  0022FA  73                 	db	115	;'s'
   996  0022FB  65                 	db	101	;'e'
   997  0022FC  20                 	db	32
   998  0022FD  3D                 	db	61	;'='
   999  0022FE  3D                 	db	61	;'='
  1000  0022FF  20                 	db	32
  1001  002300  25                 	db	37
  1002  002301  69                 	db	105	;'i'
  1003  002302  29                 	db	41
  1004  002303  00                 	db	0
  1005  002304                     STR_2:
  1006                           
  1007                           ; BSR set to: 0
  1008  002304  49                 	db	73	;'I'
  1009  002305  7C                 	db	124
  1010  002306  73                 	db	115	;'s'
  1011  002307  63                 	db	99	;'c'
  1012  002308  61                 	db	97	;'a'
  1013  002309  6E                 	db	110	;'n'
  1014  00230A  6E                 	db	110	;'n'
  1015  00230B  69                 	db	105	;'i'
  1016  00230C  6E                 	db	110	;'n'
  1017  00230D  67                 	db	103	;'g'
  1018  00230E  20                 	db	32
  1019  00230F  63                 	db	99	;'c'
  1020  002310  68                 	db	104	;'h'
  1021  002311  61                 	db	97	;'a'
  1022  002312  6E                 	db	110	;'n'
  1023  002313  6E                 	db	110	;'n'
  1024  002314  65                 	db	101	;'e'
  1025  002315  6C                 	db	108	;'l'
  1026  002316  73                 	db	115	;'s'
  1027  002317  20                 	db	32
  1028  002318  66                 	db	102	;'f'
  1029  002319  6F                 	db	111	;'o'
  1030  00231A  72                 	db	114	;'r'
  1031  00231B  20                 	db	32
  1032  00231C  6E                 	db	110	;'n'
  1033  00231D  6F                 	db	111	;'o'
  1034  00231E  69                 	db	105	;'i'
  1035  00231F  73                 	db	115	;'s'
  1036  002320  65                 	db	101	;'e'
  1037  002321  2E                 	db	46
  1038  002322  2E                 	db	46
  1039  002323  2E                 	db	46
  1040  002324  00                 	db	0
  1041  002325                     STR_9:
  1042                           
  1043                           ; BSR set to: 0
  1044  002325  49                 	db	73	;'I'
  1045  002326  7C                 	db	124
  1046  002327  61                 	db	97	;'a'
  1047  002328  63                 	db	99	;'c'
  1048  002329  63                 	db	99	;'c'
  1049  00232A  65                 	db	101	;'e'
  1050  00232B  70                 	db	112	;'p'
  1051  00232C  74                 	db	116	;'t'
  1052  00232D  69                 	db	105	;'i'
  1053  00232E  6E                 	db	110	;'n'
  1054  00232F  67                 	db	103	;'g'
  1055  002330  20                 	db	32
  1056  002331  73                 	db	115	;'s'
  1057  002332  63                 	db	99	;'c'
  1058  002333  61                 	db	97	;'a'
  1059  002334  6E                 	db	110	;'n'
  1060  002335  73                 	db	115	;'s'
  1061  002336  20                 	db	32
  1062  002337  26                 	db	38
  1063  002338  20                 	db	32
  1064  002339  63                 	db	99	;'c'
  1065  00233A  6F                 	db	111	;'o'
  1066  00233B  6E                 	db	110	;'n'
  1067  00233C  6E                 	db	110	;'n'
  1068  00233D  65                 	db	101	;'e'
  1069  00233E  63                 	db	99	;'c'
  1070  00233F  74                 	db	116	;'t'
  1071  002340  69                 	db	105	;'i'
  1072  002341  6F                 	db	111	;'o'
  1073  002342  6E                 	db	110	;'n'
  1074  002343  73                 	db	115	;'s'
  1075  002344  00                 	db	0
  1076  002345                     STR_7:
  1077                           
  1078                           ; BSR set to: 0
  1079  002345  49                 	db	73	;'I'
  1080  002346  7C                 	db	124
  1081  002347  6F                 	db	111	;'o'
  1082  002348  70                 	db	112	;'p'
  1083  002349  65                 	db	101	;'e'
  1084  00234A  72                 	db	114	;'r'
  1085  00234B  61                 	db	97	;'a'
  1086  00234C  74                 	db	116	;'t'
  1087  00234D  6F                 	db	111	;'o'
  1088  00234E  72                 	db	114	;'r'
  1089  00234F  27                 	db	39
  1090  002350  73                 	db	115	;'s'
  1091  002351  20                 	db	32
  1092  002352  61                 	db	97	;'a'
  1093  002353  64                 	db	100	;'d'
  1094  002354  64                 	db	100	;'d'
  1095  002355  72                 	db	114	;'r'
  1096  002356  65                 	db	101	;'e'
  1097  002357  73                 	db	115	;'s'
  1098  002358  73                 	db	115	;'s'
  1099  002359  3A                 	db	58	;':'
  1100  00235A  20                 	db	32
  1101  00235B  25                 	db	37
  1102  00235C  30                 	db	48	;'0'
  1103  00235D  32                 	db	50	;'2'
  1104  00235E  78                 	db	120	;'x'
  1105  00235F  25                 	db	37
  1106  002360  30                 	db	48	;'0'
  1107  002361  32                 	db	50	;'2'
  1108  002362  78                 	db	120	;'x'
  1109  002363  00                 	db	0
  1110  002364                     STR_6:
  1111                           
  1112                           ; BSR set to: 0
  1113  002364  49                 	db	73	;'I'
  1114  002365  7C                 	db	124
  1115  002366  50                 	db	80	;'P'
  1116  002367  41                 	db	65	;'A'
  1117  002368  4E                 	db	78	;'N'
  1118  002369  49                 	db	73	;'I'
  1119  00236A  44                 	db	68	;'D'
  1120  00236B  3A                 	db	58	;':'
  1121  00236C  25                 	db	37
  1122  00236D  30                 	db	48	;'0'
  1123  00236E  32                 	db	50	;'2'
  1124  00236F  78                 	db	120	;'x'
  1125  002370  25                 	db	37
  1126  002371  30                 	db	48	;'0'
  1127  002372  32                 	db	50	;'2'
  1128  002373  78                 	db	120	;'x'
  1129  002374  20                 	db	32
  1130  002375  43                 	db	67	;'C'
  1131  002376  68                 	db	104	;'h'
  1132  002377  3A                 	db	58	;':'
  1133  002378  25                 	db	37
  1134  002379  30                 	db	48	;'0'
  1135  00237A  32                 	db	50	;'2'
  1136  00237B  64                 	db	100	;'d'
  1137  00237C  00                 	db	0
  1138  00237D                     STR_5:
  1139                           
  1140                           ; BSR set to: 0
  1141  00237D  49                 	db	73	;'I'
  1142  00237E  7C                 	db	124
  1143  00237F  63                 	db	99	;'c'
  1144  002380  72                 	db	114	;'r'
  1145  002381  65                 	db	101	;'e'
  1146  002382  61                 	db	97	;'a'
  1147  002383  74                 	db	116	;'t'
  1148  002384  69                 	db	105	;'i'
  1149  002385  6E                 	db	110	;'n'
  1150  002386  67                 	db	103	;'g'
  1151  002387  20                 	db	32
  1152  002388  6E                 	db	110	;'n'
  1153  002389  65                 	db	101	;'e'
  1154  00238A  74                 	db	116	;'t'
  1155  00238B  77                 	db	119	;'w'
  1156  00238C  6F                 	db	111	;'o'
  1157  00238D  72                 	db	114	;'r'
  1158  00238E  6B                 	db	107	;'k'
  1159  00238F  2E                 	db	46
  1160  002390  2E                 	db	46
  1161  002391  2E                 	db	46
  1162  002392  00                 	db	0
  1163  002393                     STR_16:
  1164                           
  1165                           ; BSR set to: 0
  1166  002393  30                 	db	48	;'0'
  1167  002394  31                 	db	49	;'1'
  1168  002395  32                 	db	50	;'2'
  1169  002396  33                 	db	51	;'3'
  1170  002397  34                 	db	52	;'4'
  1171  002398  35                 	db	53	;'5'
  1172  002399  36                 	db	54	;'6'
  1173  00239A  37                 	db	55	;'7'
  1174  00239B  38                 	db	56	;'8'
  1175  00239C  39                 	db	57	;'9'
  1176  00239D  61                 	db	97	;'a'
  1177  00239E  62                 	db	98	;'b'
  1178  00239F  63                 	db	99	;'c'
  1179  0023A0  64                 	db	100	;'d'
  1180  0023A1  65                 	db	101	;'e'
  1181  0023A2  66                 	db	102	;'f'
  1182  0023A3  00                 	db	0
  1183  0023A4                     STR_8:
  1184                           
  1185                           ; BSR set to: 0
  1186  0023A4  49                 	db	73	;'I'
  1187  0023A5  7C                 	db	124
  1188  0023A6  73                 	db	115	;'s'
  1189  0023A7  74                 	db	116	;'t'
  1190  0023A8  61                 	db	97	;'a'
  1191  0023A9  74                 	db	116	;'t'
  1192  0023AA  75                 	db	117	;'u'
  1193  0023AB  73                 	db	115	;'s'
  1194  0023AC  3A                 	db	58	;':'
  1195  0023AD  20                 	db	32
  1196  0023AE  72                 	db	114	;'r'
  1197  0023AF  65                 	db	101	;'e'
  1198  0023B0  61                 	db	97	;'a'
  1199  0023B1  64                 	db	100	;'d'
  1200  0023B2  79                 	db	121	;'y'
  1201  0023B3  21                 	db	33
  1202  0023B4  00                 	db	0
  1203  0023B5                     STR_1:
  1204                           
  1205                           ; BSR set to: 0
  1206  0023B5  49                 	db	73	;'I'
  1207  0023B6  7C                 	db	124
  1208  0023B7  52                 	db	82	;'R'
  1209  0023B8  45                 	db	69	;'E'
  1210  0023B9  53                 	db	83	;'S'
  1211  0023BA  45                 	db	69	;'E'
  1212  0023BB  54                 	db	84	;'T'
  1213  0023BC  00                 	db	0
  1214  0023BD                     STR_15:
  1215                           
  1216                           ; BSR set to: 0
  1217  0023BD  28                 	db	40
  1218  0023BE  6E                 	db	110	;'n'
  1219  0023BF  75                 	db	117	;'u'
  1220  0023C0  6C                 	db	108	;'l'
  1221  0023C1  6C                 	db	108	;'l'
  1222  0023C2  29                 	db	41
  1223  0023C3  00                 	db	0
  1224                           
  1225                           ; #config settings
  1226  0023C4  00                 	db	0	; dummy byte at the end
  1227  0000                     
  1228                           	psect	_StaticSecurityKey_const
  1229  001FEC                     __p_StaticSecurityKey_const:
  1230                           	opt stack 0
  1231  001FEC                     _StaticSecurityKey:
  1232                           	opt stack 0
  1233  001FEC  00                 	db	0
  1234  001FED  01                 	db	1
  1235  001FEE  02                 	db	2
  1236  001FEF  03                 	db	3
  1237  001FF0  04                 	db	4
  1238  001FF1  05                 	db	5
  1239  001FF2  06                 	db	6
  1240  001FF3  07                 	db	7
  1241  001FF4                     __end_of_StaticSecurityKey:
  1242                           	opt stack 0
  1243  0000                     _myUID_absconstaddr	set	131062
  1244                           
  1245                           	psect	_myUID_const
  1246  01FFF6                     __p_myUID_const:
  1247                           	opt stack 0
  1248  01FFF6                     _myUID:
  1249                           	opt stack 0
  1250  01FFF6  00                 	db	0
  1251  01FFF7  01                 	db	1
  1252  01FFF8                     __end_of_myUID:
  1253                           	opt stack 0
  1254  0000                     _myMODEL_absconstaddr	set	131060
  1255                           
  1256                           	psect	_myMODEL_const
  1257  01FFF4                     __p_myMODEL_const:
  1258                           	opt stack 0
  1259  01FFF4                     _myMODEL:
  1260                           	opt stack 0
  1261  01FFF4  00                 	db	0
  1262  01FFF5                     __end_of_myMODEL:
  1263                           	opt stack 0
  1264  0000                     _myMUTA_version_absconstaddr	set	131058
  1265                           
  1266                           	psect	_myMUTA_version_const
  1267  01FFF2                     __p_myMUTA_version_const:
  1268                           	opt stack 0
  1269  01FFF2                     _myMUTA_version:
  1270                           	opt stack 0
  1271  01FFF2  01                 	db	1
  1272  01FFF3                     __end_of_myMUTA_version:
  1273                           	opt stack 0
  1274  0000                     _PPSCONbits	set	3775
  1275  0000                     _RPINR1	set	3809
  1276  0000                     _RPINR21	set	3836
  1277  0000                     _RPINR22	set	3837
  1278  0000                     _RPOR11	set	3787
  1279  0000                     _RPOR4	set	3780
  1280  0000                     _RPOR5	set	3781
  1281  0000                     _ALRMCFGbits	set	3911
  1282  0000                     _ANCON0	set	3912
  1283  0000                     _ANCON1	set	3913
  1284  0000                     _CCPTMRS0	set	3922
  1285  0000                     _RTCCAL	set	3902
  1286  0000                     _RTCCFG	set	3903
  1287  0000                     _RTCCFGbits	set	3903
  1288  0000                     _RTCVALHbits	set	3899
  1289  0000                     _RTCVALLbits	set	3898
  1290  0000                     _UADDR	set	3896
  1291  0000                     _UCFG	set	3897
  1292  0000                     _UEIE	set	3895
  1293  0000                     _UEP0bits	set	3878
  1294  0000                     _UIE	set	3894
  1295  0000                     _UIEbits	set	3894
  1296  0000                     _UEP0	set	3878
  1297  0000                     _UEP1	set	3879
  1298  0000                     _RTCEN	set	31231
  1299  0000                     _RTCOE	set	31226
  1300  0000                     _CCP1CONbits	set	4026
  1301  0000                     _CCPR1L	set	4027
  1302  0000                     _EECON2	set	4007
  1303  0000                     _INTCON2bits	set	4081
  1304  0000                     _INTCON3bits	set	4080
  1305  0000                     _INTCONbits	set	4082
  1306  0000                     _IPR2bits	set	4002
  1307  0000                     _IPR3bits	set	4005
  1308  0000                     _LATAbits	set	3977
  1309  0000                     _LATBbits	set	3978
  1310  0000                     _LATCbits	set	3979
  1311  0000                     _OSCTUNEbits	set	3995
  1312  0000                     _PIE1bits	set	3997
  1313  0000                     _PIE2bits	set	4000
  1314  0000                     _PIE3bits	set	4003
  1315  0000                     _PIR1bits	set	3998
  1316  0000                     _PIR2bits	set	4001
  1317  0000                     _PIR3bits	set	4004
  1318  0000                     _PR2	set	4043
  1319  0000                     _PR4	set	3959
  1320  0000                     _RCONbits	set	4048
  1321  0000                     _SSP2BUF	set	3957
  1322  0000                     _SSP2CON1	set	3954
  1323  0000                     _SSP2CON1bits	set	3954
  1324  0000                     _SSP2STAT	set	3955
  1325  0000                     _T1CON	set	4045
  1326  0000                     _T1CONbits	set	4045
  1327  0000                     _T2CONbits	set	4042
  1328  0000                     _T4CONbits	set	3958
  1329  0000                     _TMR1H	set	4047
  1330  0000                     _TMR1L	set	4046
  1331  0000                     _TRISA	set	3986
  1332  0000                     _TRISAbits	set	3986
  1333  0000                     _TRISB	set	3987
  1334  0000                     _TRISBbits	set	3987
  1335  0000                     _TRISC	set	3988
  1336  0000                     _TRISCbits	set	3988
  1337  0000                     _UCON	set	3941
  1338  0000                     _UCONbits	set	3941
  1339  0000                     _UEIR	set	3939
  1340  0000                     _UIR	set	3938
  1341  0000                     _UIRbits	set	3938
  1342  0000                     _USTAT	set	3940
  1343                           
  1344                           	psect	cinit
  1345  009AFC                     __pcinit:
  1346                           	opt stack 0
  1347  009AFC                     start_initialization:
  1348                           	opt stack 0
  1349  009AFC                     __initialization:
  1350                           	opt stack 0
  1351                           
  1352                           ; Clear objects allocated to BIGRAMl (576 bytes)
  1353  009AFC  EE06  F000         	lfsr	0,__pbssBIGRAMl
  1354  009B00  EE12 F040          	lfsr	1,576
  1355  009B04                     clear_0:
  1356  009B04  6AEE               	clrf	postinc0,c
  1357  009B06  50E5               	movf	postdec1,w,c
  1358  009B08  50E1               	movf	fsr1l,w,c
  1359  009B0A  E1FC               	bnz	clear_0
  1360  009B0C  50E2               	movf	fsr1h,w,c
  1361  009B0E  E1FA               	bnz	clear_0
  1362                           
  1363                           ; Clear objects allocated to BANK5 (256 bytes)
  1364  009B10  EE05  F000         	lfsr	0,__pbssBANK5
  1365  009B14  EE11 F000          	lfsr	1,256
  1366  009B18                     clear_1:
  1367  009B18  6AEE               	clrf	postinc0,c
  1368  009B1A  50E5               	movf	postdec1,w,c
  1369  009B1C  50E1               	movf	fsr1l,w,c
  1370  009B1E  E1FC               	bnz	clear_1
  1371  009B20  50E2               	movf	fsr1h,w,c
  1372  009B22  E1FA               	bnz	clear_1
  1373                           
  1374                           ; Clear objects allocated to BANK4 (64 bytes)
  1375  009B24  EE04  F000         	lfsr	0,__pbssBANK4
  1376  009B28  0E40               	movlw	64
  1377  009B2A                     clear_2:
  1378  009B2A  6AEE               	clrf	postinc0,c
  1379  009B2C  06E8               	decf	wreg,f,c
  1380  009B2E  E1FD               	bnz	clear_2
  1381                           
  1382                           ; Clear objects allocated to BANK3 (196 bytes)
  1383  009B30  EE03  F000         	lfsr	0,__pbssBANK3
  1384  009B34  0EC4               	movlw	196
  1385  009B36                     clear_3:
  1386  009B36  6AEE               	clrf	postinc0,c
  1387  009B38  06E8               	decf	wreg,f,c
  1388  009B3A  E1FD               	bnz	clear_3
  1389                           
  1390                           ; Clear objects allocated to BANK2 (249 bytes)
  1391  009B3C  EE02  F000         	lfsr	0,__pbssBANK2
  1392  009B40  0EF9               	movlw	249
  1393  009B42                     clear_4:
  1394  009B42  6AEE               	clrf	postinc0,c
  1395  009B44  06E8               	decf	wreg,f,c
  1396  009B46  E1FD               	bnz	clear_4
  1397                           
  1398                           ; Clear objects allocated to BANK1 (104 bytes)
  1399  009B48  EE01  F090         	lfsr	0,__pbssBANK1
  1400  009B4C  0E68               	movlw	104
  1401  009B4E                     clear_5:
  1402  009B4E  6AEE               	clrf	postinc0,c
  1403  009B50  06E8               	decf	wreg,f,c
  1404  009B52  E1FD               	bnz	clear_5
  1405                           
  1406                           ; Clear objects allocated to BANK0 (67 bytes)
  1407  009B54  EE00  F060         	lfsr	0,__pbssBANK0
  1408  009B58  0E43               	movlw	67
  1409  009B5A                     clear_6:
  1410  009B5A  6AEE               	clrf	postinc0,c
  1411  009B5C  06E8               	decf	wreg,f,c
  1412  009B5E  E1FD               	bnz	clear_6
  1413                           
  1414                           ; Clear objects allocated to COMRAM (41 bytes)
  1415  009B60  EE00  F032         	lfsr	0,__pbssCOMRAM
  1416  009B64  0E29               	movlw	41
  1417  009B66                     clear_7:
  1418  009B66  6AEE               	clrf	postinc0,c
  1419  009B68  06E8               	decf	wreg,f,c
  1420  009B6A  E1FD               	bnz	clear_7
  1421                           
  1422                           ; Initialize objects allocated to BANK2 (6 bytes)
  1423                           ; load TBLPTR registers with __pidataBANK2
  1424  009B6C  0EC8               	movlw	low __pidataBANK2
  1425  009B6E  6EF6               	movwf	tblptrl,c
  1426  009B70  0EBB               	movlw	high __pidataBANK2
  1427  009B72  6EF7               	movwf	tblptrh,c
  1428  009B74  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1429  009B76  6EF8               	movwf	tblptru,c
  1430  009B78  EE02  F0F9         	lfsr	0,__pdataBANK2
  1431  009B7C  EE10 F006          	lfsr	1,6
  1432  009B80                     copy_data0:
  1433  009B80  0009               	tblrd		*+
  1434  009B82  CFF5 FFEE          	movff	tablat,postinc0
  1435  009B86  50E5               	movf	postdec1,w,c
  1436  009B88  50E1               	movf	fsr1l,w,c
  1437  009B8A  E1FA               	bnz	copy_data0
  1438                           
  1439                           ; Initialize objects allocated to BANK1 (3 bytes)
  1440                           ; load TBLPTR registers with __pidataBANK1
  1441  009B8C  0ED1               	movlw	low __pidataBANK1
  1442  009B8E  6EF6               	movwf	tblptrl,c
  1443  009B90  0EBB               	movlw	high __pidataBANK1
  1444  009B92  6EF7               	movwf	tblptrh,c
  1445  009B94  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1446  009B96  6EF8               	movwf	tblptru,c
  1447  009B98  0009               	tblrd		*+	;fetch initializer
  1448  009B9A  CFF5 F1F8          	movff	tablat,__pdataBANK1
  1449  009B9E  0009               	tblrd		*+	;fetch initializer
  1450  009BA0  CFF5 F1F9          	movff	tablat,__pdataBANK1+1
  1451  009BA4  0009               	tblrd		*+	;fetch initializer
  1452  009BA6  CFF5 F1FA          	movff	tablat,__pdataBANK1+2
  1453                           
  1454                           ; Initialize objects allocated to COMRAM (3 bytes)
  1455                           ; load TBLPTR registers with __pidataCOMRAM
  1456  009BAA  0ECE               	movlw	low __pidataCOMRAM
  1457  009BAC  6EF6               	movwf	tblptrl,c
  1458  009BAE  0EBB               	movlw	high __pidataCOMRAM
  1459  009BB0  6EF7               	movwf	tblptrh,c
  1460  009BB2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1461  009BB4  6EF8               	movwf	tblptru,c
  1462  009BB6  0009               	tblrd		*+	;fetch initializer
  1463  009BB8  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  1464  009BBC  0009               	tblrd		*+	;fetch initializer
  1465  009BBE  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
  1466  009BC2  0009               	tblrd		*+	;fetch initializer
  1467  009BC4  CFF5 F05D          	movff	tablat,__pdataCOMRAM+2
  1468  009BC8                     end_of_initialization:
  1469                           	opt stack 0
  1470  009BC8                     __end_of__initialization:
  1471                           	opt stack 0
  1472  009BC8  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1473  009BCA  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1474  009BCC  0100               	movlb	0
  1475  009BCE  EFA5  F01E         	goto	_main	;jump to C main() function
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           postdec1	equ	0xFE5
  1483                           fsr1h	equ	0xFE2
  1484                           fsr1l	equ	0xFE1
  1485                           
  1486                           	psect	bssCOMRAM
  1487  000032                     __pbssCOMRAM:
  1488                           	opt stack 0
  1489  000032                     _m_failed_messages:
  1490                           	opt stack 0
  1491  000032                     	ds	4
  1492  000036                     _errno:
  1493                           	opt stack 0
  1494  000036                     	ds	2
  1495  000038                     _pBDTEntryEP0OutCurrent:
  1496                           	opt stack 0
  1497  000038                     	ds	2
  1498  00003A                     _pBDTEntryEP0OutNext:
  1499                           	opt stack 0
  1500  00003A                     	ds	2
  1501  00003C                     _pDst:
  1502                           	opt stack 0
  1503  00003C                     	ds	2
  1504  00003E                     _pUsbBuffer:
  1505                           	opt stack 0
  1506  00003E                     	ds	2
  1507  000040                     do_NETWORK_REGISTER@F10229:
  1508                           	opt stack 0
  1509  000040                     	ds	2
  1510  000042                     do_UPDATE@F10257:
  1511                           	opt stack 0
  1512  000042                     	ds	2
  1513  000044                     _BothEP0OutUOWNsSet:
  1514                           	opt stack 0
  1515  000044                     	ds	1
  1516  000045                     _LED_increasing:
  1517                           	opt stack 0
  1518  000045                     	ds	1
  1519  000046                     _RemoteWakeup:
  1520                           	opt stack 0
  1521  000046                     	ds	1
  1522  000047                     _USBBusIsSuspended:
  1523                           	opt stack 0
  1524  000047                     	ds	1
  1525  000048                     _USBDeferINDataStagePackets:
  1526                           	opt stack 0
  1527  000048                     	ds	1
  1528  000049                     _USBDeferOUTDataStagePackets:
  1529                           	opt stack 0
  1530  000049                     	ds	1
  1531  00004A                     _USBDeferStatusStagePacket:
  1532                           	opt stack 0
  1533  00004A                     	ds	1
  1534  00004B                     _USBDeviceState:
  1535                           	opt stack 0
  1536  00004B                     	ds	1
  1537  00004C                     _USBStatusStageEnabledFlag1:
  1538                           	opt stack 0
  1539  00004C                     	ds	1
  1540  00004D                     _USBStatusStageEnabledFlag2:
  1541                           	opt stack 0
  1542  00004D                     	ds	1
  1543  00004E                     _USBStatusStageTimeoutCounter:
  1544                           	opt stack 0
  1545  00004E                     	ds	1
  1546  00004F                     _controlTransferState:
  1547                           	opt stack 0
  1548  00004F                     	ds	1
  1549  000050                     _endpoint_number:
  1550                           	opt stack 0
  1551  000050                     	ds	1
  1552  000051                     _last_rssi:
  1553                           	opt stack 0
  1554  000051                     	ds	1
  1555  000052                     _myAppState:
  1556                           	opt stack 0
  1557  000052                     	ds	1
  1558  000053                     _repeat_full:
  1559                           	opt stack 0
  1560  000053                     	ds	1
  1561  000054                     _shortPacketStatus:
  1562                           	opt stack 0
  1563  000054                     	ds	1
  1564  000055                     _status_led:
  1565                           	opt stack 0
  1566  000055                     	ds	1
  1567  000056                     _USBActiveConfiguration:
  1568                           	opt stack 0
  1569  000056                     	ds	1
  1570  000057                     _USBAlternateInterface:
  1571                           	opt stack 0
  1572  000057                     	ds	1
  1573  000058                     _USTATcopy:
  1574                           	opt stack 0
  1575  000058                     	ds	1
  1576  000059                     _active_protocol:
  1577                           	opt stack 0
  1578  000059                     	ds	1
  1579  00005A                     _idle_rate:
  1580                           	opt stack 0
  1581  00005A                     	ds	1
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           
  1592                           	psect	dataCOMRAM
  1593  00005B                     __pdataCOMRAM:
  1594                           	opt stack 0
  1595  00005B                     _LED_brightness:
  1596                           	opt stack 0
  1597  00005B                     	ds	2
  1598  00005D                     _timer_count:
  1599                           	opt stack 0
  1600  00005D                     	ds	1
  1601                           tblptru	equ	0xFF8
  1602                           tblptrh	equ	0xFF7
  1603                           tblptrl	equ	0xFF6
  1604                           tablat	equ	0xFF5
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postdec1	equ	0xFE5
  1608                           fsr1h	equ	0xFE2
  1609                           fsr1l	equ	0xFE1
  1610                           
  1611                           	psect	bssBANK0
  1612  000060                     __pbssBANK0:
  1613                           	opt stack 0
  1614  000060                     _outPipes:
  1615                           	opt stack 0
  1616  000060                     	ds	9
  1617  000069                     _RouterFailures:
  1618                           	opt stack 0
  1619  000069                     	ds	8
  1620  000071                     _RoutingTable:
  1621                           	opt stack 0
  1622  000071                     	ds	8
  1623  000079                     _mySecurityKey:
  1624                           	opt stack 0
  1625  000079                     	ds	8
  1626  000081                     _inPipes:
  1627                           	opt stack 0
  1628  000081                     	ds	6
  1629  000087                     _m_sent_messages:
  1630                           	opt stack 0
  1631  000087                     	ds	4
  1632  00008B                     _pBDTEntryIn:
  1633                           	opt stack 0
  1634  00008B                     	ds	4
  1635  00008F                     _pBDTEntryOut:
  1636                           	opt stack 0
  1637  00008F                     	ds	4
  1638  000093                     _USBInHandle:
  1639                           	opt stack 0
  1640  000093                     	ds	2
  1641  000095                     _ep_data_in:
  1642                           	opt stack 0
  1643  000095                     	ds	2
  1644  000097                     _ep_data_out:
  1645                           	opt stack 0
  1646  000097                     	ds	2
  1647  000099                     _IRQ1_Received:
  1648                           	opt stack 0
  1649  000099                     	ds	1
  1650  00009A                     _Pwr_updated:
  1651                           	opt stack 0
  1652  00009A                     	ds	1
  1653  00009B                     _RF_Mode:
  1654                           	opt stack 0
  1655  00009B                     	ds	1
  1656  00009C                     _RSSIVal:
  1657                           	opt stack 0
  1658  00009C                     	ds	1
  1659  00009D                     _TxMACSeq:
  1660                           	opt stack 0
  1661  00009D                     	ds	1
  1662  00009E                     _UpF_updated:
  1663                           	opt stack 0
  1664  00009E                     	ds	1
  1665  00009F                     _hasAck:
  1666                           	opt stack 0
  1667  00009F                     	ds	1
  1668  0000A0                     _tempNodeStatus:
  1669                           	opt stack 0
  1670  0000A0                     	ds	1
  1671  0000A1                     _timerExtension1:
  1672                           	opt stack 0
  1673  0000A1                     	ds	1
  1674  0000A2                     _timerExtension2:
  1675                           	opt stack 0
  1676  0000A2                     	ds	1
  1677                           tblptru	equ	0xFF8
  1678                           tblptrh	equ	0xFF7
  1679                           tblptrl	equ	0xFF6
  1680                           tablat	equ	0xFF5
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1h	equ	0xFE2
  1685                           fsr1l	equ	0xFE1
  1686                           
  1687                           	psect	bssBANK1
  1688  000190                     __pbssBANK1:
  1689                           	opt stack 0
  1690  000190                     _rxMessage:
  1691                           	opt stack 0
  1692  000190                     	ds	10
  1693  00019A                     _MACRxPacket:
  1694                           	opt stack 0
  1695  00019A                     	ds	8
  1696  0001A2                     _OutgoingFrameCounter:
  1697                           	opt stack 0
  1698  0001A2                     	ds	4
  1699  0001A6                     _tempLongAddress:
  1700                           	opt stack 0
  1701  0001A6                     	ds	4
  1702  0001AA                     _MACInitParams:
  1703                           	opt stack 0
  1704  0001AA                     	ds	3
  1705  0001AD                     _MTP:
  1706                           	opt stack 0
  1707  0001AD                     	ds	3
  1708  0001B0                     _m_uptime_days:
  1709                           	opt stack 0
  1710  0001B0                     	ds	3
  1711  0001B3                     _AcknowledgementAddr:
  1712                           	opt stack 0
  1713  0001B3                     	ds	2
  1714  0001B5                     _MiWiStateMachine:
  1715                           	opt stack 0
  1716  0001B5                     	ds	2
  1717  0001B7                     _USBOutHandle:
  1718                           	opt stack 0
  1719  0001B7                     	ds	2
  1720  0001B9                     _p_buffer:
  1721                           	opt stack 0
  1722  0001B9                     	ds	2
  1723  0001BB                     _tempPANID:
  1724                           	opt stack 0
  1725  0001BB                     	ds	2
  1726  0001BD                     _ActiveScanResultIndex:
  1727                           	opt stack 0
  1728  0001BD                     	ds	1
  1729  0001BE                     _BestChannel:
  1730                           	opt stack 0
  1731  0001BE                     	ds	1
  1732  0001BF                     _ConnMode:
  1733                           	opt stack 0
  1734  0001BF                     	ds	1
  1735  0001C0                     _MACSeq:
  1736                           	opt stack 0
  1737  0001C0                     	ds	1
  1738  0001C1                     _MiWiAckRequired:
  1739                           	opt stack 0
  1740  0001C1                     	ds	1
  1741  0001C2                     _MiWiCapacityInfo:
  1742                           	opt stack 0
  1743  0001C2                     	ds	1
  1744  0001C3                     _MiWiSeqNum:
  1745                           	opt stack 0
  1746  0001C3                     	ds	1
  1747  0001C4                     _RSSILock:
  1748                           	opt stack 0
  1749  0001C4                     	ds	1
  1750  0001C5                     _ReceivedBankIndex:
  1751                           	opt stack 0
  1752  0001C5                     	ds	1
  1753  0001C6                     _TxData:
  1754                           	opt stack 0
  1755  0001C6                     	ds	1
  1756  0001C7                     _knownCoordinators:
  1757                           	opt stack 0
  1758  0001C7                     	ds	1
  1759  0001C8                     _m_power:
  1760                           	opt stack 0
  1761  0001C8                     	ds	1
  1762  0001C9                     _myParent:
  1763                           	opt stack 0
  1764  0001C9                     	ds	1
  1765  0001CA                     _role:
  1766                           	opt stack 0
  1767  0001CA                     	ds	1
  1768  0001CB                     _timer_flag:
  1769                           	opt stack 0
  1770  0001CB                     	ds	1
  1771  0001CC                     _openSocketInfo:
  1772                           	opt stack 0
  1773  0001CC                     	ds	18
  1774  0001DE                     _m_var:
  1775                           	opt stack 0
  1776  0001DE                     	ds	10
  1777  0001E8                     _myLongAddress:
  1778                           	opt stack 0
  1779  0001E8                     	ds	4
  1780  0001EC                     _tmpBlock:
  1781                           	opt stack 0
  1782  0001EC                     	ds	4
  1783  0001F0                     _myPANID:
  1784                           	opt stack 0
  1785  0001F0                     	ds	2
  1786  0001F2                     _myShortAddress:
  1787                           	opt stack 0
  1788  0001F2                     	ds	2
  1789  0001F4                     _tempShortAddress:
  1790                           	opt stack 0
  1791  0001F4                     	ds	2
  1792  0001F6                     _currentChannel:
  1793                           	opt stack 0
  1794  0001F6                     	ds	1
  1795  0001F7                     _noise_level:
  1796                           	opt stack 0
  1797  0001F7                     	ds	1
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           
  1808                           	psect	dataBANK1
  1809  0001F8                     __pdataBANK1:
  1810                           	opt stack 0
  1811  0001F8                     _AcknowledgementSeq:
  1812                           	opt stack 0
  1813  0001F8                     	ds	1
  1814  0001F9                     _defaultHops:
  1815                           	opt stack 0
  1816  0001F9                     	ds	1
  1817  0001FA                     _m_update_frequency:
  1818                           	opt stack 0
  1819  0001FA                     	ds	1
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           postdec1	equ	0xFE5
  1827                           fsr1h	equ	0xFE2
  1828                           fsr1l	equ	0xFE1
  1829                           
  1830                           	psect	bssBANK2
  1831  000200                     __pbssBANK2:
  1832                           	opt stack 0
  1833  000200                     _ActiveScanResults:
  1834                           	opt stack 0
  1835  000200                     	ds	40
  1836  000228                     _BroadcastRecords:
  1837                           	opt stack 0
  1838  000228                     	ds	32
  1839  000248                     _AckInfo:
  1840                           	opt stack 0
  1841  000248                     	ds	30
  1842  000266                     _MACTxBuffer:
  1843                           	opt stack 0
  1844  000266                     	ds	64
  1845  0002A6                     _TxBuffer:
  1846                           	opt stack 0
  1847  0002A6                     	ds	43
  1848  0002D1                     _m_buffer:
  1849                           	opt stack 0
  1850  0002D1                     	ds	32
  1851  0002F1                     _key:
  1852                           	opt stack 0
  1853  0002F1                     	ds	8
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           postinc0	equ	0xFEE
  1859                           wreg	equ	0xFE8
  1860                           postdec1	equ	0xFE5
  1861                           fsr1h	equ	0xFE2
  1862                           fsr1l	equ	0xFE1
  1863                           
  1864                           	psect	dataBANK2
  1865  0002F9                     __pdataBANK2:
  1866                           	opt stack 0
  1867  0002F9                     MiMAC_ChannelAssessment@F10758:
  1868                           	opt stack 0
  1869  0002F9                     	ds	6
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           postdec1	equ	0xFE5
  1877                           fsr1h	equ	0xFE2
  1878                           fsr1l	equ	0xFE1
  1879                           
  1880                           	psect	bssBANK3
  1881  000300                     __pbssBANK3:
  1882                           	opt stack 0
  1883  000300                     _RxPacket:
  1884                           	opt stack 0
  1885  000300                     	ds	132
  1886  000384                     _ToSendDataBuffer:
  1887                           	opt stack 0
  1888  000384                     	ds	64
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           postdec1	equ	0xFE5
  1896                           fsr1h	equ	0xFE2
  1897                           fsr1l	equ	0xFE1
  1898                           
  1899                           	psect	bssBANK4
  1900  000400                     __pbssBANK4:
  1901                           	opt stack 0
  1902  000400                     _ReceivedDataBuffer:
  1903                           	opt stack 0
  1904  000400                     	ds	64
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           postdec1	equ	0xFE5
  1912                           fsr1h	equ	0xFE2
  1913                           fsr1l	equ	0xFE1
  1914                           
  1915                           	psect	bssBANK5
  1916  000500                     __pbssBANK5:
  1917                           	opt stack 0
  1918  000500                     _IncomingFrameCounter:
  1919                           	opt stack 0
  1920  000500                     	ds	256
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1h	equ	0xFE2
  1929                           fsr1l	equ	0xFE1
  1930                           
  1931                           	psect	bssBIGRAMl
  1932  000600                     __pbssBIGRAMl:
  1933                           	opt stack 0
  1934  000600                     _ConnectionTable:
  1935                           	opt stack 0
  1936  000600                     	ds	576
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           postinc0	equ	0xFEE
  1942                           wreg	equ	0xFE8
  1943                           postdec1	equ	0xFE5
  1944                           fsr1h	equ	0xFE2
  1945                           fsr1l	equ	0xFE1
  1946                           
  1947                           	psect	cstackBANK3
  1948  0003C4                     __pcstackBANK3:
  1949                           	opt stack 0
  1950  0003C4                     MiApp_UnicastAddress@t1:
  1951                           	opt stack 0
  1952                           
  1953                           ; 4 bytes @ 0x0
  1954  0003C4                     	ds	4
  1955  0003C8                     MiApp_UnicastAddress@t2:
  1956                           	opt stack 0
  1957                           
  1958                           ; 4 bytes @ 0x4
  1959  0003C8                     	ds	4
  1960  0003CC                     MiApp_UnicastAddress@t1_2749:
  1961                           	opt stack 0
  1962                           
  1963                           ; 4 bytes @ 0x8
  1964  0003CC                     	ds	4
  1965  0003D0                     MiApp_UnicastAddress@t2_2760:
  1966                           	opt stack 0
  1967                           
  1968                           ; 4 bytes @ 0xC
  1969  0003D0                     	ds	4
  1970  0003D4                     MiApp_UnicastAddress@MiWiFrameControl:
  1971                           	opt stack 0
  1972                           
  1973                           ; 1 bytes @ 0x10
  1974  0003D4                     	ds	1
  1975  0003D5                     MiApp_UnicastAddress@i:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x11
  1979  0003D5                     	ds	1
  1980  0003D6                     MiApp_UnicastAddress@handle:
  1981                           	opt stack 0
  1982                           
  1983                           ; 1 bytes @ 0x12
  1984  0003D6                     	ds	1
  1985  0003D7                     main@last_update:
  1986                           	opt stack 0
  1987                           
  1988                           ; 1 bytes @ 0x13
  1989  0003D7                     	ds	1
  1990  0003D8                     _main$4902:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x14
  1994  0003D8                     	ds	2
  1995  0003DA                     _main$4925:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x16
  1999  0003DA                     	ds	2
  2000  0003DC                     main@power:
  2001                           	opt stack 0
  2002                           
  2003                           ; 1 bytes @ 0x18
  2004  0003DC                     	ds	1
  2005  0003DD                     main@rssi:
  2006                           	opt stack 0
  2007                           
  2008                           ; 1 bytes @ 0x19
  2009  0003DD                     	ds	1
  2010  0003DE                     main@x:
  2011                           	opt stack 0
  2012                           
  2013                           ; 2 bytes @ 0x1A
  2014  0003DE                     	ds	2
  2015  0003E0                     main@size:
  2016                           	opt stack 0
  2017                           
  2018                           ; 1 bytes @ 0x1C
  2019  0003E0                     	ds	1
  2020  0003E1                     main@shortaddress:
  2021                           	opt stack 0
  2022                           
  2023                           ; 2 bytes @ 0x1D
  2024  0003E1                     	ds	2
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           postdec1	equ	0xFE5
  2032                           fsr1h	equ	0xFE2
  2033                           fsr1l	equ	0xFE1
  2034                           
  2035                           	psect	cstackBANK1
  2036  000100                     __pcstackBANK1:
  2037                           	opt stack 0
  2038  000100                     ??_SearchForLongAddress:
  2039  000100                     ??_isdigit:
  2040  000100                     ??_MiApp_ConnectionMode:
  2041  000100                     ?_dBm_to_mW:
  2042                           	opt stack 0
  2043  000100                     ?_USBTransferOnePacket:
  2044                           	opt stack 0
  2045  000100                     ?___wmul:
  2046                           	opt stack 0
  2047  000100                     ?___lwdiv:
  2048                           	opt stack 0
  2049  000100                     ?___ftpack:
  2050                           	opt stack 0
  2051  000100                     ?_MiWi_TickGet:
  2052                           	opt stack 0
  2053  000100                     ?___lmul:
  2054                           	opt stack 0
  2055  000100                     SPIPut@i:
  2056                           	opt stack 0
  2057  000100                     findNextNetworkEntry@i:
  2058                           	opt stack 0
  2059  000100                     USBTransferOnePacket@dir:
  2060                           	opt stack 0
  2061  000100                     mW_ufixed16_to_dBm@value2:
  2062                           	opt stack 0
  2063  000100                     ___lbmod@divisor:
  2064                           	opt stack 0
  2065  000100                     SYSTEM_Initialize@pll_startup_counter:
  2066                           	opt stack 0
  2067  000100                     MiMAC_SetAltAddress@Address:
  2068                           	opt stack 0
  2069  000100                     encode@text:
  2070                           	opt stack 0
  2071  000100                     isSameAddress@Address1:
  2072                           	opt stack 0
  2073  000100                     labelcmp@p1:
  2074                           	opt stack 0
  2075  000100                     dBm_to_mW_ufixed16@value1:
  2076                           	opt stack 0
  2077  000100                     encode_uint8_variable@buffer:
  2078                           	opt stack 0
  2079  000100                     encode_ufixed16_variable@buffer:
  2080                           	opt stack 0
  2081  000100                     ___wmul@multiplier:
  2082                           	opt stack 0
  2083  000100                     ___lwdiv@dividend:
  2084                           	opt stack 0
  2085  000100                     memcpy@d1:
  2086                           	opt stack 0
  2087  000100                     memset@p1:
  2088                           	opt stack 0
  2089  000100                     strcpy@to:
  2090                           	opt stack 0
  2091  000100                     ___ftpack@arg:
  2092                           	opt stack 0
  2093  000100                     frexp@value:
  2094                           	opt stack 0
  2095  000100                     ___ftge@ff1:
  2096                           	opt stack 0
  2097  000100                     ___lmul@multiplier:
  2098                           	opt stack 0
  2099                           
  2100                           ; 4 bytes @ 0x0
  2101  000100                     	ds	1
  2102  000101                     SPIPut@v:
  2103                           	opt stack 0
  2104  000101                     MiApp_ConnectionMode@Mode:
  2105                           	opt stack 0
  2106  000101                     mW_ufixed16_to_dBm@value1:
  2107                           	opt stack 0
  2108  000101                     _isdigit$5576:
  2109                           	opt stack 0
  2110  000101                     ___lbmod@dividend:
  2111                           	opt stack 0
  2112  000101                     USBTransferOnePacket@data:
  2113                           	opt stack 0
  2114                           
  2115                           ; 2 bytes @ 0x1
  2116  000101                     	ds	1
  2117  000102                     RegisterRead@value:
  2118                           	opt stack 0
  2119  000102                     WriteFIFO@Data:
  2120                           	opt stack 0
  2121  000102                     SearchForShortAddress@i:
  2122                           	opt stack 0
  2123  000102                     dBm_to_mW@power:
  2124                           	opt stack 0
  2125  000102                     isdigit@c:
  2126                           	opt stack 0
  2127  000102                     ___lbmod@counter:
  2128                           	opt stack 0
  2129  000102                     RegisterSet@setting:
  2130                           	opt stack 0
  2131  000102                     MiMAC_SetAltAddress@PANID:
  2132                           	opt stack 0
  2133  000102                     encode@key:
  2134                           	opt stack 0
  2135  000102                     isSameAddress@Address2:
  2136                           	opt stack 0
  2137  000102                     labelcmp@p2:
  2138                           	opt stack 0
  2139  000102                     dBm_to_mW_ufixed16@value2:
  2140                           	opt stack 0
  2141  000102                     ___wmul@multiplicand:
  2142                           	opt stack 0
  2143  000102                     ___lwdiv@divisor:
  2144                           	opt stack 0
  2145  000102                     memcpy@s1:
  2146                           	opt stack 0
  2147  000102                     memset@c:
  2148                           	opt stack 0
  2149  000102                     strcpy@from:
  2150                           	opt stack 0
  2151  000102                     encode_uint8_variable@var:
  2152                           	opt stack 0
  2153  000102                     encode_ufixed16_variable@var:
  2154                           	opt stack 0
  2155                           
  2156                           ; 10 bytes @ 0x2
  2157  000102                     	ds	1
  2158  000103                     RegisterRead@IRQ1select:
  2159                           	opt stack 0
  2160  000103                     WriteFIFO@IRQ1select:
  2161                           	opt stack 0
  2162  000103                     USBTransferOnePacket@len:
  2163                           	opt stack 0
  2164  000103                     ___ftpack@exp:
  2165                           	opt stack 0
  2166  000103                     ___lbmod@rem:
  2167                           	opt stack 0
  2168  000103                     frexp@eptr:
  2169                           	opt stack 0
  2170  000103                     ___ftge@ff2:
  2171                           	opt stack 0
  2172                           
  2173                           ; 3 bytes @ 0x3
  2174  000103                     	ds	1
  2175  000104                     ??_labelcmp:
  2176  000104                     ??_MiWi_TickGet:
  2177  000104                     ??_encode:
  2178  000104                     RegisterSet@IRQ1select:
  2179                           	opt stack 0
  2180  000104                     RegisterRead@IRQ0select:
  2181                           	opt stack 0
  2182  000104                     WriteFIFO@IRQ0select:
  2183                           	opt stack 0
  2184  000104                     SearchForLongAddress@j:
  2185                           	opt stack 0
  2186  000104                     USBTransferOnePacket@ep:
  2187                           	opt stack 0
  2188  000104                     dBm_to_mW_ufixed16@power:
  2189                           	opt stack 0
  2190  000104                     ___ftpack@sign:
  2191                           	opt stack 0
  2192  000104                     ___lwdiv@counter:
  2193                           	opt stack 0
  2194  000104                     ___wmul@product:
  2195                           	opt stack 0
  2196  000104                     memcpy@n:
  2197                           	opt stack 0
  2198  000104                     memset@n:
  2199                           	opt stack 0
  2200  000104                     strcpy@cp:
  2201                           	opt stack 0
  2202  000104                     ___lmul@multiplicand:
  2203                           	opt stack 0
  2204                           
  2205                           ; 4 bytes @ 0x4
  2206  000104                     	ds	1
  2207  000105                     ??___ftpack:
  2208  000105                     ??_frexp:
  2209  000105                     MiWi_TickGet@failureCounter:
  2210                           	opt stack 0
  2211  000105                     RegisterSet@IRQ0select:
  2212                           	opt stack 0
  2213  000105                     RegisterRead@address:
  2214                           	opt stack 0
  2215  000105                     SearchForLongAddress@i:
  2216                           	opt stack 0
  2217  000105                     USBTransferOnePacket@handle:
  2218                           	opt stack 0
  2219  000105                     ___lwdiv@quotient:
  2220                           	opt stack 0
  2221                           
  2222                           ; 2 bytes @ 0x5
  2223  000105                     	ds	1
  2224  000106                     ??_AddNodeToNetworkTable:
  2225  000106                     ??_MiMAC_SetPower:
  2226  000106                     ??___ftge:
  2227  000106                     ?___awdiv:
  2228                           	opt stack 0
  2229  000106                     SetRFMode@mode:
  2230                           	opt stack 0
  2231  000106                     isSameAddress@i:
  2232                           	opt stack 0
  2233  000106                     ___awdiv@dividend:
  2234                           	opt stack 0
  2235  000106                     memcpy@d:
  2236                           	opt stack 0
  2237  000106                     memset@p:
  2238                           	opt stack 0
  2239  000106                     MiWi_TickGet@currentTime:
  2240                           	opt stack 0
  2241                           
  2242                           ; 4 bytes @ 0x6
  2243  000106                     	ds	1
  2244  000107                     ?___lwmod:
  2245                           	opt stack 0
  2246  000107                     MiMAC_SetChannel@offsetFreq:
  2247                           	opt stack 0
  2248  000107                     _labelcmp$5116:
  2249                           	opt stack 0
  2250  000107                     sendHIDText@str:
  2251                           	opt stack 0
  2252  000107                     ___lwmod@dividend:
  2253                           	opt stack 0
  2254                           
  2255                           ; 2 bytes @ 0x7
  2256  000107                     	ds	1
  2257  000108                     ??_MiMAC_SetChannel:
  2258  000108                     ?___ftadd:
  2259                           	opt stack 0
  2260  000108                     MiMAC_SetPower@outputPower:
  2261                           	opt stack 0
  2262  000108                     AddNodeToNetworkTable@i:
  2263                           	opt stack 0
  2264  000108                     USBDeviceInit@i:
  2265                           	opt stack 0
  2266  000108                     ___awdiv@divisor:
  2267                           	opt stack 0
  2268  000108                     memcpy@s:
  2269                           	opt stack 0
  2270  000108                     ___ftadd@f1:
  2271                           	opt stack 0
  2272  000108                     ___lmul@product:
  2273                           	opt stack 0
  2274                           
  2275                           ; 4 bytes @ 0x8
  2276  000108                     	ds	1
  2277  000109                     ??_sendHIDText:
  2278  000109                     MiMAC_SetChannel@channel:
  2279                           	opt stack 0
  2280  000109                     AddNodeToNetworkTable@handle:
  2281                           	opt stack 0
  2282  000109                     ___lwmod@divisor:
  2283                           	opt stack 0
  2284                           
  2285                           ; 2 bytes @ 0x9
  2286  000109                     	ds	1
  2287  00010A                     ??_BroadcastJitter:
  2288  00010A                     ?_decode_variable:
  2289                           	opt stack 0
  2290  00010A                     TxPacket@CCA:
  2291                           	opt stack 0
  2292  00010A                     MiApp_SetChannel@channel:
  2293                           	opt stack 0
  2294  00010A                     sendHIDText@c:
  2295                           	opt stack 0
  2296  00010A                     ___awdiv@counter:
  2297                           	opt stack 0
  2298  00010A                     sendHIDBinary@buffer:
  2299                           	opt stack 0
  2300  00010A                     decode_variable@p_buffer:
  2301                           	opt stack 0
  2302                           
  2303                           ; 2 bytes @ 0xA
  2304  00010A                     	ds	1
  2305  00010B                     ??_TxPacket:
  2306  00010B                     ___awdiv@sign:
  2307                           	opt stack 0
  2308  00010B                     ___lwmod@counter:
  2309                           	opt stack 0
  2310  00010B                     _sendHIDText$4978:
  2311                           	opt stack 0
  2312  00010B                     ___ftadd@f2:
  2313                           	opt stack 0
  2314                           
  2315                           ; 3 bytes @ 0xB
  2316  00010B                     	ds	1
  2317  00010C                     ??_encode_ufixed16_variable:
  2318  00010C                     ??_encode_uint8_variable:
  2319  00010C                     ?_sprintf:
  2320                           	opt stack 0
  2321  00010C                     sendHIDBinary@length:
  2322                           	opt stack 0
  2323  00010C                     DELAY_ms@ms:
  2324                           	opt stack 0
  2325  00010C                     sprintf@sp:
  2326                           	opt stack 0
  2327  00010C                     ___awdiv@quotient:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0xC
  2331  00010C                     	ds	1
  2332  00010D                     ??_sendHIDBinary:
  2333  00010D                     encode_uint8_variable@m_signed:
  2334                           	opt stack 0
  2335  00010D                     encode_ufixed16_variable@m_signed:
  2336                           	opt stack 0
  2337  00010D                     sendHIDText@p:
  2338                           	opt stack 0
  2339                           
  2340                           ; 2 bytes @ 0xD
  2341  00010D                     	ds	1
  2342  00010E                     ??___ftadd:
  2343  00010E                     ??_MiMAC_ChannelAssessment:
  2344  00010E                     encode_uint8_variable@m_writable:
  2345                           	opt stack 0
  2346  00010E                     encode_ufixed16_variable@m_writable:
  2347                           	opt stack 0
  2348  00010E                     encode@delta:
  2349                           	opt stack 0
  2350  00010E                     _sendHIDBinary$4975:
  2351                           	opt stack 0
  2352  00010E                     sprintf@f:
  2353                           	opt stack 0
  2354  00010E                     DELAY_ms@cyclesRequiredForEntireDelay:
  2355                           	opt stack 0
  2356                           
  2357                           ; 4 bytes @ 0xE
  2358  00010E                     	ds	1
  2359  00010F                     sendHIDText@size:
  2360                           	opt stack 0
  2361                           
  2362                           ; 2 bytes @ 0xF
  2363  00010F                     	ds	1
  2364  000110                     ??_send_answer_to_update:
  2365  000110                     encode@i:
  2366                           	opt stack 0
  2367                           
  2368                           ; 1 bytes @ 0x10
  2369  000110                     	ds	1
  2370  000111                     ___ftadd@sign:
  2371                           	opt stack 0
  2372  000111                     encode@part1:
  2373                           	opt stack 0
  2374                           
  2375                           ; 2 bytes @ 0x11
  2376  000111                     	ds	1
  2377  000112                     ___ftadd@exp2:
  2378                           	opt stack 0
  2379  000112                     MiMAC_Init@initValue:
  2380                           	opt stack 0
  2381  000112                     BroadcastJitter@t1:
  2382                           	opt stack 0
  2383  000112                     MiMAC_ChannelAssessment@result:
  2384                           	opt stack 0
  2385                           
  2386                           ; 6 bytes @ 0x12
  2387  000112                     	ds	1
  2388  000113                     ___ftadd@exp1:
  2389                           	opt stack 0
  2390  000113                     encode@part2:
  2391                           	opt stack 0
  2392  000113                     TxPacket@t1:
  2393                           	opt stack 0
  2394                           
  2395                           ; 4 bytes @ 0x13
  2396  000113                     	ds	1
  2397  000114                     ??_decode_variable:
  2398  000114                     ?___fttol:
  2399                           	opt stack 0
  2400  000114                     ___fttol@f1:
  2401                           	opt stack 0
  2402                           
  2403                           ; 3 bytes @ 0x14
  2404  000114                     	ds	1
  2405  000115                     MiMAC_Init@i:
  2406                           	opt stack 0
  2407  000115                     encode@sum:
  2408                           	opt stack 0
  2409                           
  2410                           ; 2 bytes @ 0x15
  2411  000115                     	ds	1
  2412  000116                     ??_MiApp_ProtocolInit:
  2413  000116                     BroadcastJitter@t2:
  2414                           	opt stack 0
  2415  000116                     decode_variable@var:
  2416                           	opt stack 0
  2417                           
  2418                           ; 10 bytes @ 0x16
  2419  000116                     	ds	1
  2420  000117                     MiApp_ProtocolInit@bNetworkFreezer:
  2421                           	opt stack 0
  2422  000117                     CTR@text:
  2423                           	opt stack 0
  2424  000117                     CBC_MAC@text:
  2425                           	opt stack 0
  2426  000117                     TxPacket@t2:
  2427                           	opt stack 0
  2428                           
  2429                           ; 4 bytes @ 0x17
  2430  000117                     	ds	1
  2431  000118                     ??_sprintf:
  2432  000118                     ??___fttol:
  2433  000118                     MiMAC_ChannelAssessment@AssessmentMode:
  2434                           	opt stack 0
  2435  000118                     MiApp_ProtocolInit@MIP:
  2436                           	opt stack 0
  2437                           
  2438                           ; 3 bytes @ 0x18
  2439  000118                     	ds	1
  2440  000119                     MiMAC_ChannelAssessment@k:
  2441                           	opt stack 0
  2442  000119                     CTR@len:
  2443                           	opt stack 0
  2444  000119                     CBC_MAC@len:
  2445                           	opt stack 0
  2446                           
  2447                           ; 1 bytes @ 0x19
  2448  000119                     	ds	1
  2449  00011A                     BroadcastJitter@range:
  2450                           	opt stack 0
  2451  00011A                     MiMAC_ChannelAssessment@count:
  2452                           	opt stack 0
  2453  00011A                     CTR@key:
  2454                           	opt stack 0
  2455  00011A                     CBC_MAC@key:
  2456                           	opt stack 0
  2457                           
  2458                           ; 2 bytes @ 0x1A
  2459  00011A                     	ds	1
  2460  00011B                     TxPacket@CCARetries:
  2461                           	opt stack 0
  2462  00011B                     BroadcastJitter@jitter:
  2463                           	opt stack 0
  2464  00011B                     MiApp_ProtocolInit@i:
  2465                           	opt stack 0
  2466                           
  2467                           ; 1 bytes @ 0x1B
  2468  00011B                     	ds	1
  2469  00011C                     TxPacket@reTry:
  2470                           	opt stack 0
  2471  00011C                     MiMAC_ChannelAssessment@i:
  2472                           	opt stack 0
  2473  00011C                     sprintf@idx:
  2474                           	opt stack 0
  2475  00011C                     CTR@nounce:
  2476                           	opt stack 0
  2477  00011C                     CBC_MAC@MIC:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0x1C
  2481  00011C                     	ds	1
  2482  00011D                     TxPacket@allowedTxFailure:
  2483                           	opt stack 0
  2484  00011D                     sprintf@prec:
  2485                           	opt stack 0
  2486  00011D                     ___fttol@sign1:
  2487                           	opt stack 0
  2488  00011D                     MiApp_NoiseDetection@ChannelMap:
  2489                           	opt stack 0
  2490                           
  2491                           ; 4 bytes @ 0x1D
  2492  00011D                     	ds	1
  2493  00011E                     ??_CTR:
  2494  00011E                     ??_CBC_MAC:
  2495  00011E                     TxPacket@status:
  2496                           	opt stack 0
  2497  00011E                     sprintf@cp:
  2498                           	opt stack 0
  2499  00011E                     ___fttol@lval:
  2500                           	opt stack 0
  2501                           
  2502                           ; 4 bytes @ 0x1E
  2503  00011E                     	ds	1
  2504  00011F                     TxPacket@TxPacketLen:
  2505                           	opt stack 0
  2506                           
  2507                           ; 1 bytes @ 0x1F
  2508  00011F                     	ds	1
  2509  000120                     TxPacket@i:
  2510                           	opt stack 0
  2511  000120                     sprintf@ap:
  2512                           	opt stack 0
  2513                           
  2514                           ; 2 bytes @ 0x20
  2515  000120                     	ds	1
  2516  000121                     TxPacket@rssival:
  2517                           	opt stack 0
  2518  000121                     CTR@block:
  2519                           	opt stack 0
  2520  000121                     CBC_MAC@block:
  2521                           	opt stack 0
  2522  000121                     MiApp_NoiseDetection@ScanDuration:
  2523                           	opt stack 0
  2524                           
  2525                           ; 1 bytes @ 0x21
  2526  000121                     	ds	1
  2527  000122                     CTR@i:
  2528                           	opt stack 0
  2529  000122                     CBC_MAC@j:
  2530                           	opt stack 0
  2531  000122                     MiApp_NoiseDetection@DetectionMode:
  2532                           	opt stack 0
  2533  000122                     ___fttol@exp1:
  2534                           	opt stack 0
  2535  000122                     sprintf@len:
  2536                           	opt stack 0
  2537                           
  2538                           ; 2 bytes @ 0x22
  2539  000122                     	ds	1
  2540  000123                     ?___altoft:
  2541                           	opt stack 0
  2542  000123                     CTR@j:
  2543                           	opt stack 0
  2544  000123                     CBC_MAC@i:
  2545                           	opt stack 0
  2546  000123                     MiApp_NoiseDetection@RSSIValue:
  2547                           	opt stack 0
  2548  000123                     ___altoft@c:
  2549                           	opt stack 0
  2550                           
  2551                           ; 4 bytes @ 0x23
  2552  000123                     	ds	1
  2553  000124                     CCM_Enc@text:
  2554                           	opt stack 0
  2555  000124                     CCM_Dec@text:
  2556                           	opt stack 0
  2557  000124                     sprintf@val:
  2558                           	opt stack 0
  2559                           
  2560                           ; 2 bytes @ 0x24
  2561  000124                     	ds	1
  2562  000125                     ??_MiApp_NoiseDetection:
  2563                           
  2564                           ; 0 bytes @ 0x25
  2565  000125                     	ds	1
  2566  000126                     CCM_Enc@headerLen:
  2567                           	opt stack 0
  2568  000126                     CCM_Dec@headerLen:
  2569                           	opt stack 0
  2570  000126                     sprintf@flag:
  2571                           	opt stack 0
  2572                           
  2573                           ; 1 bytes @ 0x26
  2574  000126                     	ds	1
  2575  000127                     ??___altoft:
  2576  000127                     CCM_Enc@payloadLen:
  2577                           	opt stack 0
  2578  000127                     CCM_Dec@payloadLen:
  2579                           	opt stack 0
  2580  000127                     sprintf@width:
  2581                           	opt stack 0
  2582                           
  2583                           ; 2 bytes @ 0x27
  2584  000127                     	ds	1
  2585  000128                     CCM_Enc@key:
  2586                           	opt stack 0
  2587  000128                     CCM_Dec@key:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0x28
  2591  000128                     	ds	1
  2592  000129                     sprintf@c:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x29
  2596  000129                     	ds	1
  2597  00012A                     ??_CCM_Enc:
  2598  00012A                     ??_CCM_Dec:
  2599                           
  2600                           ; 0 bytes @ 0x2A
  2601  00012A                     	ds	1
  2602  00012B                     ___altoft@exp:
  2603                           	opt stack 0
  2604                           
  2605                           ; 1 bytes @ 0x2B
  2606  00012B                     	ds	1
  2607  00012C                     ___altoft@sign:
  2608                           	opt stack 0
  2609  00012C                     _CCM_Enc$1978:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x2C
  2613  00012C                     	ds	1
  2614  00012D                     ?_floor:
  2615                           	opt stack 0
  2616  00012D                     floor@x:
  2617                           	opt stack 0
  2618                           
  2619                           ; 3 bytes @ 0x2D
  2620  00012D                     	ds	1
  2621  00012E                     CCM_Enc@i:
  2622                           	opt stack 0
  2623  00012E                     MiApp_NoiseDetection@channelMask:
  2624                           	opt stack 0
  2625                           
  2626                           ; 4 bytes @ 0x2E
  2627  00012E                     	ds	1
  2628  00012F                     MiMAC_SendPacket@transParam:
  2629                           	opt stack 0
  2630                           
  2631                           ; 3 bytes @ 0x2F
  2632  00012F                     	ds	1
  2633  000130                     _CCM_Dec$1986:
  2634                           	opt stack 0
  2635  000130                     floor@i:
  2636                           	opt stack 0
  2637                           
  2638                           ; 3 bytes @ 0x30
  2639  000130                     	ds	2
  2640  000132                     CCM_Dec@i:
  2641                           	opt stack 0
  2642  000132                     MiMAC_SendPacket@MACPayload:
  2643                           	opt stack 0
  2644  000132                     MiApp_NoiseDetection@t1:
  2645                           	opt stack 0
  2646                           
  2647                           ; 4 bytes @ 0x32
  2648  000132                     	ds	1
  2649  000133                     ??_MiMAC_ReceivedPacket:
  2650  000133                     floor@expon:
  2651                           	opt stack 0
  2652                           
  2653                           ; 2 bytes @ 0x33
  2654  000133                     	ds	1
  2655  000134                     MiMAC_SendPacket@MACPayloadLen:
  2656                           	opt stack 0
  2657                           
  2658                           ; 1 bytes @ 0x34
  2659  000134                     	ds	1
  2660  000135                     ??_MiMAC_SendPacket:
  2661  000135                     ?___ftneg:
  2662                           	opt stack 0
  2663  000135                     ___ftneg@f1:
  2664                           	opt stack 0
  2665                           
  2666                           ; 3 bytes @ 0x35
  2667  000135                     	ds	1
  2668  000136                     MiMAC_SendPacket@headerLen:
  2669                           	opt stack 0
  2670  000136                     MiApp_NoiseDetection@t2:
  2671                           	opt stack 0
  2672                           
  2673                           ; 4 bytes @ 0x36
  2674  000136                     	ds	1
  2675  000137                     MiMAC_SendPacket@TxIndex:
  2676                           	opt stack 0
  2677                           
  2678                           ; 1 bytes @ 0x37
  2679  000137                     	ds	1
  2680  000138                     ?___ftmul:
  2681                           	opt stack 0
  2682  000138                     MiMAC_SendPacket@i:
  2683                           	opt stack 0
  2684  000138                     ___ftmul@f1:
  2685                           	opt stack 0
  2686                           
  2687                           ; 3 bytes @ 0x38
  2688  000138                     	ds	1
  2689  000139                     SendMACPacket@Address:
  2690                           	opt stack 0
  2691                           
  2692                           ; 2 bytes @ 0x39
  2693  000139                     	ds	1
  2694  00013A                     MiApp_NoiseDetection@OptimalChannel:
  2695                           	opt stack 0
  2696                           
  2697                           ; 1 bytes @ 0x3A
  2698  00013A                     	ds	1
  2699  00013B                     SendMACPacket@PacketType:
  2700                           	opt stack 0
  2701  00013B                     MiApp_NoiseDetection@j:
  2702                           	opt stack 0
  2703  00013B                     ___ftmul@f2:
  2704                           	opt stack 0
  2705  00013B                     MiMAC_ReceivedPacket@currentTick:
  2706                           	opt stack 0
  2707                           
  2708                           ; 4 bytes @ 0x3B
  2709  00013B                     	ds	1
  2710  00013C                     ??_SendMACPacket:
  2711  00013C                     MiApp_NoiseDetection@k:
  2712                           	opt stack 0
  2713                           
  2714                           ; 1 bytes @ 0x3C
  2715  00013C                     	ds	1
  2716  00013D                     MiApp_NoiseDetection@RSSIcheck:
  2717                           	opt stack 0
  2718  00013D                     RouteMessage@PANID:
  2719                           	opt stack 0
  2720                           
  2721                           ; 2 bytes @ 0x3D
  2722  00013D                     	ds	1
  2723  00013E                     ??___ftmul:
  2724  00013E                     MiApp_NoiseDetection@minRSSI:
  2725                           	opt stack 0
  2726                           
  2727                           ; 1 bytes @ 0x3E
  2728  00013E                     	ds	1
  2729  00013F                     MiApp_NoiseDetection@i:
  2730                           	opt stack 0
  2731  00013F                     RouteMessage@ShortAddress:
  2732                           	opt stack 0
  2733  00013F                     MiMAC_ReceivedPacket@FrameCounter:
  2734                           	opt stack 0
  2735                           
  2736                           ; 4 bytes @ 0x3F
  2737  00013F                     	ds	1
  2738  000140                     MiApp_NoiseDetection@maxRSSI:
  2739                           	opt stack 0
  2740                           
  2741                           ; 1 bytes @ 0x40
  2742  000140                     	ds	1
  2743  000141                     RouteMessage@SecEn:
  2744                           	opt stack 0
  2745  000141                     MiApp_StartConnection@ScanDuration:
  2746                           	opt stack 0
  2747  000141                     ___ftmul@exp:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x41
  2751  000141                     	ds	1
  2752  000142                     ??_RouteMessage:
  2753  000142                     ___ftmul@f3_as_product:
  2754                           	opt stack 0
  2755  000142                     MiApp_StartConnection@ChannelMap:
  2756                           	opt stack 0
  2757                           
  2758                           ; 4 bytes @ 0x42
  2759  000142                     	ds	1
  2760  000143                     MiMAC_ReceivedPacket@k:
  2761                           	opt stack 0
  2762                           
  2763                           ; 1 bytes @ 0x43
  2764  000143                     	ds	1
  2765  000144                     MiMAC_ReceivedPacket@j:
  2766                           	opt stack 0
  2767                           
  2768                           ; 1 bytes @ 0x44
  2769  000144                     	ds	1
  2770  000145                     MiMAC_ReceivedPacket@PayloadIndex:
  2771                           	opt stack 0
  2772  000145                     RouteMessage@j:
  2773                           	opt stack 0
  2774  000145                     ___ftmul@cntr:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0x45
  2778  000145                     	ds	1
  2779  000146                     ??_MiApp_StartConnection:
  2780  000146                     MiMAC_ReceivedPacket@i:
  2781                           	opt stack 0
  2782  000146                     RouteMessage@parentNode:
  2783                           	opt stack 0
  2784  000146                     ___ftmul@sign:
  2785                           	opt stack 0
  2786                           
  2787                           ; 1 bytes @ 0x46
  2788  000146                     	ds	1
  2789  000147                     ??_send_complete_update:
  2790  000147                     ??_send_periodic_update:
  2791  000147                     RouteMessage@i:
  2792                           	opt stack 0
  2793  000147                     MiApp_StartConnection@Mode:
  2794                           	opt stack 0
  2795                           
  2796                           ; 1 bytes @ 0x47
  2797  000147                     	ds	1
  2798  000148                     MiApp_StartConnection@channel:
  2799                           	opt stack 0
  2800  000148                     UnicastShortAddress@DestAddress:
  2801                           	opt stack 0
  2802  000148                     _send_complete_update$6065:
  2803                           	opt stack 0
  2804  000148                     _send_periodic_update$6069:
  2805                           	opt stack 0
  2806                           
  2807                           ; 3 bytes @ 0x48
  2808  000148                     	ds	1
  2809  000149                     MiApp_StartConnection@RSSIValue:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x49
  2813  000149                     	ds	1
  2814  00014A                     ??_MiWiTasks:
  2815                           
  2816                           ; 0 bytes @ 0x4A
  2817  00014A                     	ds	1
  2818  00014B                     _send_complete_update$6066:
  2819                           	opt stack 0
  2820  00014B                     _send_periodic_update$6070:
  2821                           	opt stack 0
  2822                           
  2823                           ; 3 bytes @ 0x4B
  2824  00014B                     	ds	3
  2825  00014E                     _send_complete_update$6067:
  2826                           	opt stack 0
  2827  00014E                     _send_periodic_update$6071:
  2828                           	opt stack 0
  2829                           
  2830                           ; 3 bytes @ 0x4E
  2831  00014E                     	ds	3
  2832  000151                     _send_complete_update$6068:
  2833                           	opt stack 0
  2834  000151                     _send_periodic_update$6072:
  2835                           	opt stack 0
  2836                           
  2837                           ; 3 bytes @ 0x51
  2838  000151                     	ds	1
  2839  000152                     MiWiTasks@t2:
  2840                           	opt stack 0
  2841                           
  2842                           ; 4 bytes @ 0x52
  2843  000152                     	ds	4
  2844  000156                     MiWiTasks@t1_2546:
  2845                           	opt stack 0
  2846                           
  2847                           ; 4 bytes @ 0x56
  2848  000156                     	ds	4
  2849  00015A                     MiWiTasks@t2_2557:
  2850                           	opt stack 0
  2851                           
  2852                           ; 4 bytes @ 0x5A
  2853  00015A                     	ds	4
  2854  00015E                     MiWiTasks@CoordAddress:
  2855                           	opt stack 0
  2856                           
  2857                           ; 2 bytes @ 0x5E
  2858  00015E                     	ds	2
  2859  000160                     MiWiTasks@mask:
  2860                           	opt stack 0
  2861                           
  2862                           ; 1 bytes @ 0x60
  2863  000160                     	ds	1
  2864  000161                     MiWiTasks@entry_2536:
  2865                           	opt stack 0
  2866                           
  2867                           ; 1 bytes @ 0x61
  2868  000161                     	ds	1
  2869  000162                     MiWiTasks@jitter:
  2870                           	opt stack 0
  2871                           
  2872                           ; 1 bytes @ 0x62
  2873  000162                     	ds	1
  2874  000163                     MiWiTasks@associateStatus:
  2875                           	opt stack 0
  2876                           
  2877                           ; 1 bytes @ 0x63
  2878  000163                     	ds	1
  2879  000164                     MiWiTasks@t1:
  2880                           	opt stack 0
  2881                           
  2882                           ; 4 bytes @ 0x64
  2883  000164                     	ds	4
  2884  000168                     MiWiTasks@coordinatorNumber:
  2885                           	opt stack 0
  2886                           
  2887                           ; 1 bytes @ 0x68
  2888  000168                     	ds	1
  2889  000169                     MiWiTasks@j_2544:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x69
  2893  000169                     	ds	2
  2894  00016B                     MiWiTasks@cIndex:
  2895                           	opt stack 0
  2896                           
  2897                           ; 1 bytes @ 0x6B
  2898  00016B                     	ds	1
  2899  00016C                     MiWiTasks@j_2569:
  2900                           	opt stack 0
  2901                           
  2902                           ; 1 bytes @ 0x6C
  2903  00016C                     	ds	1
  2904  00016D                     MiWiTasks@destPANID:
  2905                           	opt stack 0
  2906                           
  2907                           ; 2 bytes @ 0x6D
  2908  00016D                     	ds	2
  2909  00016F                     MiWiTasks@rxIndex:
  2910                           	opt stack 0
  2911                           
  2912                           ; 1 bytes @ 0x6F
  2913  00016F                     	ds	1
  2914  000170                     MiWiTasks@CapacityByte:
  2915                           	opt stack 0
  2916                           
  2917                           ; 1 bytes @ 0x70
  2918  000170                     	ds	1
  2919  000171                     MiWiTasks@j_2488:
  2920                           	opt stack 0
  2921                           
  2922                           ; 1 bytes @ 0x71
  2923  000171                     	ds	1
  2924  000172                     MiWiTasks@j_2532:
  2925                           	opt stack 0
  2926                           
  2927                           ; 1 bytes @ 0x72
  2928  000172                     	ds	1
  2929  000173                     MiWiTasks@destShortAddress:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x73
  2933  000173                     	ds	2
  2934  000175                     MiWiTasks@sourcePANID:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x75
  2938  000175                     	ds	2
  2939  000177                     MiWiTasks@handle:
  2940                           	opt stack 0
  2941                           
  2942                           ; 1 bytes @ 0x77
  2943  000177                     	ds	1
  2944  000178                     MiWiTasks@sourceShortAddress:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x78
  2948  000178                     	ds	2
  2949  00017A                     MiWiTasks@entry:
  2950                           	opt stack 0
  2951                           
  2952                           ; 1 bytes @ 0x7A
  2953  00017A                     	ds	1
  2954  00017B                     MiWiTasks@j:
  2955                           	opt stack 0
  2956                           
  2957                           ; 1 bytes @ 0x7B
  2958  00017B                     	ds	1
  2959  00017C                     MiWiTasks@i:
  2960                           	opt stack 0
  2961                           
  2962                           ; 1 bytes @ 0x7C
  2963  00017C                     	ds	1
  2964  00017D                     MiApp_UnicastAddress@DestAddress:
  2965                           	opt stack 0
  2966                           
  2967                           ; 2 bytes @ 0x7D
  2968  00017D                     	ds	2
  2969  00017F                     MiApp_UnicastAddress@PermanentAddr:
  2970                           	opt stack 0
  2971                           
  2972                           ; 1 bytes @ 0x7F
  2973  00017F                     	ds	1
  2974  000180                     MiApp_UnicastAddress@SecEn:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x80
  2978  000180                     	ds	1
  2979  000181                     ??_MiApp_UnicastAddress:
  2980                           
  2981                           ; 0 bytes @ 0x81
  2982  000181                     	ds	8
  2983  000189                     ??_main:
  2984                           
  2985                           ; 0 bytes @ 0x89
  2986  000189                     	ds	7
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           postinc0	equ	0xFEE
  2992                           wreg	equ	0xFE8
  2993                           postdec1	equ	0xFE5
  2994                           fsr1h	equ	0xFE2
  2995                           fsr1l	equ	0xFE1
  2996                           
  2997                           	psect	cstackBANK0
  2998  0000A3                     __pcstackBANK0:
  2999                           	opt stack 0
  3000  0000A3                     ?i2_MiWi_TickGet:
  3001                           	opt stack 0
  3002  0000A3                     i2SPIPut@i:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x0
  3006  0000A3                     	ds	1
  3007  0000A4                     i2SPIPut@v:
  3008                           	opt stack 0
  3009                           
  3010                           ; 1 bytes @ 0x1
  3011  0000A4                     	ds	1
  3012  0000A5                     i2RegisterRead@value:
  3013                           	opt stack 0
  3014  0000A5                     i2WriteFIFO@Data:
  3015                           	opt stack 0
  3016  0000A5                     i2RegisterSet@setting:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0x2
  3020  0000A5                     	ds	1
  3021  0000A6                     i2RegisterRead@IRQ1select:
  3022                           	opt stack 0
  3023  0000A6                     i2WriteFIFO@IRQ1select:
  3024                           	opt stack 0
  3025                           
  3026                           ; 1 bytes @ 0x3
  3027  0000A6                     	ds	1
  3028  0000A7                     ??i2_MiWi_TickGet:
  3029  0000A7                     i2RegisterSet@IRQ1select:
  3030                           	opt stack 0
  3031  0000A7                     i2RegisterRead@IRQ0select:
  3032                           	opt stack 0
  3033  0000A7                     i2WriteFIFO@IRQ0select:
  3034                           	opt stack 0
  3035                           
  3036                           ; 1 bytes @ 0x4
  3037  0000A7                     	ds	1
  3038  0000A8                     i2MiWi_TickGet@failureCounter:
  3039                           	opt stack 0
  3040  0000A8                     i2RegisterSet@IRQ0select:
  3041                           	opt stack 0
  3042  0000A8                     i2RegisterRead@address:
  3043                           	opt stack 0
  3044                           
  3045                           ; 1 bytes @ 0x5
  3046  0000A8                     	ds	1
  3047  0000A9                     i2SetRFMode@mode:
  3048                           	opt stack 0
  3049  0000A9                     i2MiWi_TickGet@currentTime:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x6
  3053  0000A9                     	ds	4
  3054  0000AD                     i2TxPacket@CCA:
  3055                           	opt stack 0
  3056                           
  3057                           ; 1 bytes @ 0xA
  3058  0000AD                     	ds	1
  3059  0000AE                     ??i2_TxPacket:
  3060                           
  3061                           ; 0 bytes @ 0xB
  3062  0000AE                     	ds	8
  3063  0000B6                     i2TxPacket@t1:
  3064                           	opt stack 0
  3065                           
  3066                           ; 4 bytes @ 0x13
  3067  0000B6                     	ds	4
  3068  0000BA                     i2TxPacket@t2:
  3069                           	opt stack 0
  3070                           
  3071                           ; 4 bytes @ 0x17
  3072  0000BA                     	ds	4
  3073  0000BE                     i2TxPacket@status:
  3074                           	opt stack 0
  3075                           
  3076                           ; 1 bytes @ 0x1B
  3077  0000BE                     	ds	1
  3078  0000BF                     i2TxPacket@CCARetries:
  3079                           	opt stack 0
  3080                           
  3081                           ; 1 bytes @ 0x1C
  3082  0000BF                     	ds	1
  3083  0000C0                     i2TxPacket@reTry:
  3084                           	opt stack 0
  3085                           
  3086                           ; 1 bytes @ 0x1D
  3087  0000C0                     	ds	1
  3088  0000C1                     i2TxPacket@allowedTxFailure:
  3089                           	opt stack 0
  3090                           
  3091                           ; 1 bytes @ 0x1E
  3092  0000C1                     	ds	1
  3093  0000C2                     i2TxPacket@TxPacketLen:
  3094                           	opt stack 0
  3095                           
  3096                           ; 1 bytes @ 0x1F
  3097  0000C2                     	ds	1
  3098  0000C3                     i2TxPacket@i:
  3099                           	opt stack 0
  3100                           
  3101                           ; 1 bytes @ 0x20
  3102  0000C3                     	ds	1
  3103  0000C4                     i2TxPacket@rssival:
  3104                           	opt stack 0
  3105                           
  3106                           ; 1 bytes @ 0x21
  3107  0000C4                     	ds	1
  3108  0000C5                     ??_MIWIInterruptHandler:
  3109                           
  3110                           ; 0 bytes @ 0x22
  3111  0000C5                     	ds	6
  3112  0000CB                     MIWIInterruptHandler@counter:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x28
  3116  0000CB                     	ds	2
  3117  0000CD                     MIWIInterruptHandler@fifo_stat:
  3118                           	opt stack 0
  3119                           
  3120                           ; 1 bytes @ 0x2A
  3121  0000CD                     	ds	1
  3122  0000CE                     MIWIInterruptHandler@ackPacket:
  3123                           	opt stack 0
  3124                           
  3125                           ; 4 bytes @ 0x2B
  3126  0000CE                     	ds	4
  3127  0000D2                     MIWIInterruptHandler@bAck:
  3128                           	opt stack 0
  3129                           
  3130                           ; 1 bytes @ 0x2F
  3131  0000D2                     	ds	1
  3132  0000D3                     MIWIInterruptHandler@RxPacketPtr:
  3133                           	opt stack 0
  3134                           
  3135                           ; 1 bytes @ 0x30
  3136  0000D3                     	ds	1
  3137  0000D4                     MIWIInterruptHandler@ackInfoIndex:
  3138                           	opt stack 0
  3139                           
  3140                           ; 1 bytes @ 0x31
  3141  0000D4                     	ds	1
  3142  0000D5                     MIWIInterruptHandler@PacketLen:
  3143                           	opt stack 0
  3144                           
  3145                           ; 1 bytes @ 0x32
  3146  0000D5                     	ds	1
  3147  0000D6                     MIWIInterruptHandler@BankIndex:
  3148                           	opt stack 0
  3149                           
  3150                           ; 1 bytes @ 0x33
  3151  0000D6                     	ds	1
  3152  0000D7                     MIWIInterruptHandler@i:
  3153                           	opt stack 0
  3154                           
  3155                           ; 1 bytes @ 0x34
  3156  0000D7                     	ds	1
  3157  0000D8                     ??_SYS_InterruptHigh:
  3158                           
  3159                           ; 0 bytes @ 0x35
  3160  0000D8                     	ds	14
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           postinc0	equ	0xFEE
  3166                           wreg	equ	0xFE8
  3167                           postdec1	equ	0xFE5
  3168                           fsr1h	equ	0xFE2
  3169                           fsr1l	equ	0xFE1
  3170                           
  3171                           	psect	cstackCOMRAM
  3172  000001                     __pcstackCOMRAM:
  3173                           	opt stack 0
  3174  000001                     ??_USBStdGetDscHandler:
  3175  000001                     ??_USBStdGetStatusHandler:
  3176  000001                     ?i1_USBTransferOnePacket:
  3177                           	opt stack 0
  3178  000001                     ?i1___ftpack:
  3179                           	opt stack 0
  3180  000001                     USBConfigureEndpoint@direction:
  3181                           	opt stack 0
  3182  000001                     USBCtrlTrfTxService@byteToSend:
  3183                           	opt stack 0
  3184  000001                     USBCtrlTrfRxService@i:
  3185                           	opt stack 0
  3186  000001                     i1USBTransferOnePacket@dir:
  3187                           	opt stack 0
  3188  000001                     i1memset@p1:
  3189                           	opt stack 0
  3190  000001                     i1___ftpack@arg:
  3191                           	opt stack 0
  3192                           
  3193                           ; 3 bytes @ 0x0
  3194  000001                     	ds	1
  3195  000002                     ??_USBConfigureEndpoint:
  3196  000002                     USBCtrlTrfRxService@byteToRead:
  3197                           	opt stack 0
  3198  000002                     USBCtrlTrfInHandler@lastDTS:
  3199                           	opt stack 0
  3200  000002                     USBStdGetStatusHandler@p:
  3201                           	opt stack 0
  3202  000002                     i1USBTransferOnePacket@data:
  3203                           	opt stack 0
  3204                           
  3205                           ; 2 bytes @ 0x1
  3206  000002                     	ds	1
  3207  000003                     i1memset@c:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x2
  3211  000003                     	ds	1
  3212  000004                     i1USBTransferOnePacket@len:
  3213                           	opt stack 0
  3214  000004                     i1___ftpack@exp:
  3215                           	opt stack 0
  3216                           
  3217                           ; 1 bytes @ 0x3
  3218  000004                     	ds	1
  3219  000005                     i1USBTransferOnePacket@ep:
  3220                           	opt stack 0
  3221  000005                     i1___ftpack@sign:
  3222                           	opt stack 0
  3223  000005                     i1memset@n:
  3224                           	opt stack 0
  3225                           
  3226                           ; 2 bytes @ 0x4
  3227  000005                     	ds	1
  3228  000006                     ??i1___ftpack:
  3229  000006                     USBConfigureEndpoint@EPNum:
  3230                           	opt stack 0
  3231  000006                     i1USBTransferOnePacket@handle:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0x5
  3235  000006                     	ds	1
  3236  000007                     USBConfigureEndpoint@handle:
  3237                           	opt stack 0
  3238  000007                     i1memset@p:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x6
  3242  000007                     	ds	2
  3243  000009                     ?i1___ftadd:
  3244                           	opt stack 0
  3245  000009                     USBEnableEndpoint@options:
  3246                           	opt stack 0
  3247  000009                     i1USBDeviceInit@i:
  3248                           	opt stack 0
  3249  000009                     i1___ftadd@f1:
  3250                           	opt stack 0
  3251                           
  3252                           ; 3 bytes @ 0x8
  3253  000009                     	ds	1
  3254  00000A                     USBEnableEndpoint@p:
  3255                           	opt stack 0
  3256                           
  3257                           ; 2 bytes @ 0x9
  3258  00000A                     	ds	2
  3259  00000C                     USBEnableEndpoint@ep:
  3260                           	opt stack 0
  3261  00000C                     i1___ftadd@f2:
  3262                           	opt stack 0
  3263                           
  3264                           ; 3 bytes @ 0xB
  3265  00000C                     	ds	1
  3266  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0xC
  3270  00000D                     	ds	2
  3271  00000F                     ??i1___ftadd:
  3272  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3273                           	opt stack 0
  3274                           
  3275                           ; 2 bytes @ 0xE
  3276  00000F                     	ds	2
  3277  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3278                           	opt stack 0
  3279                           
  3280                           ; 2 bytes @ 0x10
  3281  000011                     	ds	1
  3282  000012                     i1___ftadd@sign:
  3283                           	opt stack 0
  3284                           
  3285                           ; 1 bytes @ 0x11
  3286  000012                     	ds	1
  3287  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3288  000013                     i1___ftadd@exp2:
  3289                           	opt stack 0
  3290                           
  3291                           ; 1 bytes @ 0x12
  3292  000013                     	ds	1
  3293  000014                     i1___ftadd@exp1:
  3294                           	opt stack 0
  3295                           
  3296                           ; 1 bytes @ 0x13
  3297  000014                     	ds	1
  3298  000015                     ??_USBStdFeatureReqHandler:
  3299  000015                     USBStdSetCfgHandler@i:
  3300                           	opt stack 0
  3301                           
  3302                           ; 1 bytes @ 0x14
  3303  000015                     	ds	1
  3304  000016                     USBStdFeatureReqHandler@pUEP:
  3305                           	opt stack 0
  3306                           
  3307                           ; 2 bytes @ 0x15
  3308  000016                     	ds	2
  3309  000018                     USBStdFeatureReqHandler@current_ep_data:
  3310                           	opt stack 0
  3311                           
  3312                           ; 1 bytes @ 0x17
  3313  000018                     	ds	1
  3314  000019                     USBStdFeatureReqHandler@p:
  3315                           	opt stack 0
  3316                           
  3317                           ; 2 bytes @ 0x18
  3318  000019                     	ds	2
  3319  00001B                     ??_USBCtrlEPService:
  3320  00001B                     
  3321                           ; 0 bytes @ 0x1A
  3322  00001B                     	ds	2
  3323  00001D                     USBCtrlEPService@setup_cnt:
  3324                           	opt stack 0
  3325                           
  3326                           ; 1 bytes @ 0x1C
  3327  00001D                     	ds	1
  3328  00001E                     USBDeviceTasks@i:
  3329                           	opt stack 0
  3330                           
  3331                           ; 1 bytes @ 0x1D
  3332  00001E                     	ds	1
  3333  00001F                     ??_SYS_InterruptLow:
  3334                           
  3335                           ; 0 bytes @ 0x1E
  3336  00001F                     	ds	19
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           postdec1	equ	0xFE5
  3344                           fsr1h	equ	0xFE2
  3345                           fsr1l	equ	0xFE1
  3346                           
  3347 ;;
  3348 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  3349 ;;
  3350 ;; *************** function _main *****************
  3351 ;; Defined at:
  3352 ;;		line 143 in file "src/main.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  last_update     1   19[BANK3 ] unsigned char 
  3357 ;;  shortaddress    2   29[BANK3 ] unsigned char [2]
  3358 ;;  uid             2    0        unsigned char [2]
  3359 ;;  size            1   28[BANK3 ] unsigned char 
  3360 ;;  rssi            1   25[BANK3 ] unsigned char 
  3361 ;;  power           1   24[BANK3 ] unsigned char 
  3362 ;;  x               2   26[BANK3 ] int 
  3363 ;;  result          1    0        unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;		None               void
  3366 ;; Registers used:
  3367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Totals:         0       0       7       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;Total ram usage:       19 bytes
  3378 ;; Hardware stack levels required when called:   28
  3379 ;; This function calls:
  3380 ;;		_MiApp_ConnectionMode
  3381 ;;		_MiApp_DiscardMessage
  3382 ;;		_MiApp_MessageAvailable
  3383 ;;		_MiApp_NoiseDetection
  3384 ;;		_MiApp_ProtocolInit
  3385 ;;		_MiApp_SetChannel
  3386 ;;		_MiApp_StartConnection
  3387 ;;		_MiApp_UnicastAddress
  3388 ;;		_MiMAC_SetPower
  3389 ;;		_MiWiTasks
  3390 ;;		_RTCC_reset
  3391 ;;		_SYSTEM_Initialize
  3392 ;;		_USBDeviceAttach
  3393 ;;		_USBDeviceInit
  3394 ;;		_USBTransferOnePacket
  3395 ;;		_dBm_to_mW
  3396 ;;		_decode_variable
  3397 ;;		_memcpy
  3398 ;;		_sendHIDBinary
  3399 ;;		_sendHIDText
  3400 ;;		_send_answer_to_update
  3401 ;;		_send_complete_update
  3402 ;;		_send_network_register
  3403 ;;		_send_periodic_update
  3404 ;;		_sprintf
  3405 ;;		_strcpy
  3406 ;;		_timer_reset
  3407 ;;		_update_LED
  3408 ;;		_update_variable
  3409 ;; This function is called by:
  3410 ;;		Startup code after reset
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text0
  3415  003D4A                     __ptext0:
  3416                           	opt stack 0
  3417  003D4A                     _main:
  3418                           	opt stack 3
  3419                           
  3420                           ;main.c: 145: SYSTEM_Initialize();
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;incstack = 0
  3424  003D4A  EC14  F043         	call	_SYSTEM_Initialize	;wreg free
  3425                           
  3426                           ;main.c: 150: myAppState = STATE_INIT;
  3427  003D4E  0E00               	movlw	0
  3428  003D50  6E52               	movwf	_myAppState,c
  3429                           
  3430                           ;main.c: 152: bool result;
  3431                           ;main.c: 154: myLongAddress[0] = myMUTA_version;
  3432  003D52  0EF2               	movlw	242
  3433  003D54  6EF6               	movwf	tblptrl,c
  3434  003D56                     	if	1	;There is more than 1 active tblptr byte
  3435  003D56  0EFF               	movlw	255
  3436  003D58  6EF7               	movwf	tblptrh,c
  3437  003D5A                     	endif
  3438  003D5A                     	if	1	;There are 3 active tblptr bytes
  3439  003D5A  0E01               	movlw	1
  3440  003D5C  6EF8               	movwf	tblptru,c
  3441  003D5E                     	endif
  3442  003D5E  0008               	tblrd		*
  3443  003D60  CFF5 F1E8          	movff	tablat,_myLongAddress
  3444                           
  3445                           ;main.c: 155: myLongAddress[1] = myMODEL;
  3446  003D64  0EF4               	movlw	244
  3447  003D66  6EF6               	movwf	tblptrl,c
  3448  003D68                     	if	1	;There is more than 1 active tblptr byte
  3449  003D68  0EFF               	movlw	255
  3450  003D6A  6EF7               	movwf	tblptrh,c
  3451  003D6C                     	endif
  3452  003D6C                     	if	1	;There are 3 active tblptr bytes
  3453  003D6C  0E01               	movlw	1
  3454  003D6E  6EF8               	movwf	tblptru,c
  3455  003D70                     	endif
  3456  003D70  0008               	tblrd		*
  3457  003D72  CFF5 F1E9          	movff	tablat,_myLongAddress+1
  3458                           
  3459                           ;main.c: 156: myLongAddress[2] = myUID[0];
  3460  003D76  0EF6               	movlw	246
  3461  003D78  6EF6               	movwf	tblptrl,c
  3462  003D7A                     	if	1	;There is more than 1 active tblptr byte
  3463  003D7A  0EFF               	movlw	255
  3464  003D7C  6EF7               	movwf	tblptrh,c
  3465  003D7E                     	endif
  3466  003D7E                     	if	1	;There are 3 active tblptr bytes
  3467  003D7E  0E01               	movlw	1
  3468  003D80  6EF8               	movwf	tblptru,c
  3469  003D82                     	endif
  3470  003D82  0008               	tblrd		*
  3471  003D84  CFF5 F1EA          	movff	tablat,_myLongAddress+2
  3472                           
  3473                           ;main.c: 157: myLongAddress[3] = myUID[1];
  3474  003D88  0EF7               	movlw	247
  3475  003D8A  6EF6               	movwf	tblptrl,c
  3476  003D8C  0EFF               	movlw	255
  3477  003D8E  6EF7               	movwf	tblptrh,c
  3478  003D90  0E01               	movlw	1
  3479  003D92  6EF8               	movwf	tblptru,c
  3480  003D94  0008               	tblrd		*
  3481  003D96  CFF5 F1EB          	movff	tablat,_myLongAddress+3
  3482                           
  3483                           ;main.c: 160: for (int x=0; x<8; x++)
  3484  003D9A  0E00               	movlw	0
  3485  003D9C  0103               	movlb	3	; () banked
  3486  003D9E  6FDF               	movwf	(main@x+1)& (0+255),b
  3487  003DA0  0E00               	movlw	0
  3488  003DA2  6FDE               	movwf	main@x& (0+255),b
  3489  003DA4                     l21663:
  3490                           
  3491                           ; BSR set to: 3
  3492  003DA4  0103               	movlb	3	; () banked
  3493  003DA6  BFDF               	btfsc	(main@x+1)& (0+255),7,b
  3494  003DA8  D008               	goto	l21667
  3495  003DAA  0103               	movlb	3	; () banked
  3496  003DAC  51DF               	movf	(main@x+1)& (0+255),w,b
  3497  003DAE  E11E               	bnz	l21673
  3498  003DB0  0E08               	movlw	8
  3499  003DB2  0103               	movlb	3	; () banked
  3500  003DB4  5DDE               	subwf	main@x& (0+255),w,b
  3501  003DB6  B0D8               	btfsc	status,0,c
  3502  003DB8  D019               	goto	l21673
  3503  003DBA                     l21667:
  3504                           
  3505                           ; BSR set to: 3
  3506                           ;main.c: 161: mySecurityKey[x] = StaticSecurityKey[x];
  3507  003DBA  0EEC               	movlw	236
  3508  003DBC  0103               	movlb	3	; () banked
  3509  003DBE  25DE               	addwf	main@x& (0+255),w,b
  3510  003DC0  6EF6               	movwf	tblptrl,c
  3511  003DC2  0E1F               	movlw	31
  3512  003DC4  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3513  003DC6  6EF7               	movwf	tblptrh,c
  3514  003DC8  6AF8               	clrf	tblptru,c
  3515  003DCA  0E00               	movlw	0
  3516  003DCC  22F8               	addwfc	tblptru,f,c
  3517  003DCE  0E79               	movlw	low _mySecurityKey
  3518  003DD0  0103               	movlb	3	; () banked
  3519  003DD2  25DE               	addwf	main@x& (0+255),w,b
  3520  003DD4  6ED9               	movwf	fsr2l,c
  3521  003DD6  0E00               	movlw	high _mySecurityKey
  3522  003DD8  0103               	movlb	3	; () banked
  3523  003DDA  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3524  003DDC  6EDA               	movwf	fsr2h,c
  3525  003DDE  0008               	tblrd		*
  3526  003DE0  CFF5 FFDF          	movff	tablat,indf2
  3527                           
  3528                           ; BSR set to: 3
  3529  003DE4  0103               	movlb	3	; () banked
  3530  003DE6  4BDE               	infsnz	main@x& (0+255),f,b
  3531  003DE8  2BDF               	incf	(main@x+1)& (0+255),f,b
  3532  003DEA  D7DC               	goto	l21663
  3533  003DEC                     l21673:
  3534                           
  3535                           ; BSR set to: 3
  3536                           ;main.c: 168: status_led = LED_FAST_PULSE;
  3537  003DEC  0E01               	movlw	1
  3538  003DEE  6E55               	movwf	_status_led,c	;volatile
  3539                           
  3540                           ; BSR set to: 3
  3541                           ;main.c: 169: update_LED();
  3542  003DF0  ECC7  F059         	call	_update_LED	;wreg free
  3543                           
  3544                           ;main.c: 172: USBDeviceInit();
  3545  003DF4  ECDB  F03D         	call	_USBDeviceInit	;wreg free
  3546                           
  3547                           ;main.c: 176: USBDeviceAttach();
  3548  003DF8  EC4C  F05C         	call	_USBDeviceAttach	;wreg free
  3549  003DFC                     l21681:
  3550                           
  3551                           ;main.c: 178: {
  3552                           ;main.c: 182: if( USBDeviceState < CONFIGURED_STATE )
  3553  003DFC  0E20               	movlw	32
  3554  003DFE  604B               	cpfslt	_USBDeviceState,c	;volatile
  3555  003E00  D001               	goto	l1737
  3556  003E02  D7FC               	goto	l21681
  3557  003E04                     l1737:
  3558                           
  3559                           ;main.c: 184: if( UCONbits.SUSPND == 1 )
  3560  003E04  B265               	btfsc	3941,1,c	;volatile
  3561  003E06  D7FA               	goto	l21681
  3562                           
  3563                           ;main.c: 186: myAppState = STATE_USB_READY;
  3564                           
  3565                           ;main.c: 185: continue;
  3566  003E08  0E01               	movlw	1
  3567  003E0A  6E52               	movwf	_myAppState,c
  3568                           
  3569                           ;main.c: 188: }
  3570                           ;main.c: 190: strcpy(ToSendDataBuffer, "I|RESET");
  3571                           
  3572                           ;main.c: 187: break;
  3573  003E0C  0E84               	movlw	low _ToSendDataBuffer
  3574  003E0E  0101               	movlb	1	; () banked
  3575  003E10  6F00               	movwf	strcpy@to& (0+255),b
  3576  003E12  0E03               	movlw	high _ToSendDataBuffer
  3577  003E14  0101               	movlb	1	; () banked
  3578  003E16  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3579  003E18  0EB5               	movlw	low STR_1
  3580  003E1A  0101               	movlb	1	; () banked
  3581  003E1C  6F02               	movwf	strcpy@from& (0+255),b
  3582  003E1E  0E23               	movlw	high STR_1
  3583  003E20  0101               	movlb	1	; () banked
  3584  003E22  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3585  003E24  EC69  F05C         	call	_strcpy	;wreg free
  3586                           
  3587                           ;main.c: 191: sendHIDText(ToSendDataBuffer);
  3588  003E28  0E84               	movlw	low _ToSendDataBuffer
  3589  003E2A  0101               	movlb	1	; () banked
  3590  003E2C  6F07               	movwf	sendHIDText@str& (0+255),b
  3591  003E2E  0E03               	movlw	high _ToSendDataBuffer
  3592  003E30  0101               	movlb	1	; () banked
  3593  003E32  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3594  003E34  EC7B  F04F         	call	_sendHIDText	;wreg free
  3595                           
  3596                           ;main.c: 192: _delay((unsigned long)((20)*(16000000/4000.0)));
  3597  003E38  0E68               	movlw	104
  3598  003E3A  0101               	movlb	1	; () banked
  3599  003E3C  6F89               	movwf	??_main& (0+255),b
  3600  003E3E  0EE4               	movlw	228
  3601  003E40                     u25157:
  3602  003E40  2EE8               	decfsz	wreg,f,c
  3603  003E42  D7FE               	goto	u25157
  3604  003E44  2F89               	decfsz	??_main& (0+255),f,b
  3605  003E46  D7FC               	goto	u25157
  3606  003E48  D000               	nop2	
  3607                           
  3608                           ;main.c: 196: send_network_register();
  3609  003E4A  EC8A  F053         	call	_send_network_register	;wreg free
  3610  003E4E                     l21697:
  3611                           
  3612                           ;main.c: 198: {
  3613                           ;main.c: 200: if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN) == 0
      +                          )
  3614  003E4E  0101               	movlb	1	; () banked
  3615  003E50  51B7               	movf	_USBOutHandle& (0+255),w,b
  3616  003E52  0101               	movlb	1	; () banked
  3617  003E54  11B8               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  3618  003E56  B4D8               	btfsc	status,2,c
  3619  003E58  D013               	goto	l21701
  3620                           
  3621                           ; BSR set to: 1
  3622  003E5A  C1B7  FFD9         	movff	_USBOutHandle,fsr2l
  3623  003E5E  C1B8  FFDA         	movff	_USBOutHandle+1,fsr2h
  3624  003E62  0101               	movlb	1	; () banked
  3625  003E64  AEDF               	btfss	indf2,7,c
  3626  003E66  D004               	goto	u24620
  3627  003E68  0101               	movlb	1	; () banked
  3628  003E6A  6B89               	clrf	??_main& (0+255),b
  3629  003E6C  2B89               	incf	??_main& (0+255),f,b
  3630  003E6E  D002               	goto	u24628
  3631  003E70                     u24620:
  3632  003E70  0101               	movlb	1	; () banked
  3633  003E72  6B89               	clrf	??_main& (0+255),b
  3634  003E74                     u24628:
  3635  003E74  0101               	movlb	1	; () banked
  3636  003E76  5189               	movf	??_main& (0+255),w,b
  3637  003E78  0103               	movlb	3	; () banked
  3638  003E7A  6FD8               	movwf	_main$4902& (0+255),b
  3639  003E7C  6BD9               	clrf	(_main$4902+1)& (0+255),b
  3640  003E7E  D005               	goto	l21703
  3641  003E80                     l21701:
  3642  003E80  0E00               	movlw	0
  3643  003E82  0103               	movlb	3	; () banked
  3644  003E84  6FD9               	movwf	(_main$4902+1)& (0+255),b
  3645  003E86  0E00               	movlw	0
  3646  003E88  6FD8               	movwf	_main$4902& (0+255),b
  3647  003E8A                     l21703:
  3648                           
  3649                           ; BSR set to: 3
  3650  003E8A  0103               	movlb	3	; () banked
  3651  003E8C  51D8               	movf	_main$4902& (0+255),w,b
  3652  003E8E  0103               	movlb	3	; () banked
  3653  003E90  11D9               	iorwf	(_main$4902+1)& (0+255),w,b
  3654  003E92  B4D8               	btfsc	status,2,c
  3655  003E94  D01E               	goto	l21719
  3656  003E96  D7DB               	goto	l21697
  3657  003E98                     l21707:
  3658                           
  3659                           ;main.c: 205: if (ReceivedDataBuffer[1] != 0x00 || ReceivedDataBuffer[2] != 0x00 || Rece
      +                          ivedDataBuffer[3] != 4 ||ReceivedDataBuffer[4] != 02 || ReceivedDataBuffer[5] != 0xff)
  3660  003E98  0104               	movlb	4	; () banked
  3661  003E9A  5101               	movf	(_ReceivedDataBuffer+1)& (0+255),w,b
  3662  003E9C  A4D8               	btfss	status,2,c
  3663  003E9E  D011               	goto	l1751
  3664                           
  3665                           ; BSR set to: 4
  3666  003EA0  0104               	movlb	4	; () banked
  3667  003EA2  5102               	movf	(_ReceivedDataBuffer+2)& (0+255),w,b
  3668  003EA4  A4D8               	btfss	status,2,c
  3669  003EA6  D00D               	goto	l1751
  3670                           
  3671                           ; BSR set to: 4
  3672  003EA8  0E04               	movlw	4
  3673  003EAA  0104               	movlb	4	; () banked
  3674  003EAC  1903               	xorwf	(_ReceivedDataBuffer+3)& (0+255),w,b
  3675  003EAE  A4D8               	btfss	status,2,c
  3676  003EB0  D008               	goto	l1751
  3677                           
  3678                           ; BSR set to: 4
  3679  003EB2  0E02               	movlw	2
  3680  003EB4  0104               	movlb	4	; () banked
  3681  003EB6  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  3682  003EB8  A4D8               	btfss	status,2,c
  3683  003EBA  D003               	goto	l1751
  3684                           
  3685                           ; BSR set to: 4
  3686  003EBC  0104               	movlb	4	; () banked
  3687  003EBE  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  3688  003EC0  A4D8               	btfss	status,2,c
  3689  003EC2                     l1751:
  3690                           
  3691                           ; BSR set to: 4
  3692  003EC2  00FF               	reset		;# 
  3693                           
  3694                           ;main.c: 210: }
  3695                           ;main.c: 211: mySecurityKey[2] = ReceivedDataBuffer[6];
  3696  003EC4  C406  F07B         	movff	_ReceivedDataBuffer+6,_mySecurityKey+2
  3697                           
  3698                           ;main.c: 212: mySecurityKey[6] = ReceivedDataBuffer[7];
  3699  003EC8  C407  F07F         	movff	_ReceivedDataBuffer+7,_mySecurityKey+6
  3700                           
  3701                           ;main.c: 213: break;
  3702  003ECC  D00A               	goto	l21721
  3703  003ECE                     l1753:
  3704                           
  3705                           ; BSR set to: 4
  3706  003ECE  00FF               	reset		;# 
  3707                           
  3708                           ;main.c: 220: }
  3709                           
  3710                           ;main.c: 219: break;
  3711                           
  3712                           ;main.c: 217: default:
  3713                           
  3714                           ;main.c: 216: break;
  3715  003ED0  D008               	goto	l21721
  3716  003ED2                     l21719:
  3717  003ED2  0104               	movlb	4	; () banked
  3718  003ED4  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  3719                           
  3720                           ; Switch size 1, requested type "space"
  3721                           ; Number of cases is 2, Range of values is 83 to 88
  3722                           ; switch strategies available:
  3723                           ; Name         Instructions Cycles
  3724                           ; simple_byte            7     4 (average)
  3725                           ;	Chosen strategy is simple_byte
  3726  003ED6  0A53               	xorlw	83	; case 83
  3727  003ED8  B4D8               	btfsc	status,2,c
  3728  003EDA  D7DE               	goto	l21707
  3729  003EDC  0A0B               	xorlw	11	; case 88
  3730  003EDE  B4D8               	btfsc	status,2,c
  3731  003EE0  D7F6               	goto	l1753
  3732  003EE2                     l21721:
  3733                           
  3734                           ;main.c: 222: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  3735  003EE2  0E00               	movlw	0
  3736  003EE4  0101               	movlb	1	; () banked
  3737  003EE6  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  3738  003EE8  0E00               	movlw	low _ReceivedDataBuffer
  3739  003EEA  0101               	movlb	1	; () banked
  3740  003EEC  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  3741  003EEE  0E04               	movlw	high _ReceivedDataBuffer
  3742  003EF0  0101               	movlb	1	; () banked
  3743  003EF2  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3744  003EF4  0E40               	movlw	64
  3745  003EF6  0101               	movlb	1	; () banked
  3746  003EF8  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  3747  003EFA  0E01               	movlw	1
  3748  003EFC  ECA6  F04C         	call	_USBTransferOnePacket
  3749  003F00  C100  F1B7         	movff	?_USBTransferOnePacket,_USBOutHandle
  3750  003F04  C101  F1B8         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  3751                           
  3752                           ;main.c: 224: }
  3753                           ;main.c: 225: }
  3754                           ;main.c: 229: MiApp_ProtocolInit(0);
  3755                           
  3756                           ;main.c: 223: break;
  3757  003F08  0E00               	movlw	0
  3758  003F0A  EC13  F03D         	call	_MiApp_ProtocolInit
  3759                           
  3760                           ;main.c: 230: m_power = 0x00;
  3761  003F0E  0E00               	movlw	0
  3762  003F10  0101               	movlb	1	; () banked
  3763  003F12  6FC8               	movwf	_m_power& (0+255),b
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;main.c: 231: MiMAC_SetPower(m_power);
  3767  003F14  0101               	movlb	1	; () banked
  3768  003F16  51C8               	movf	_m_power& (0+255),w,b
  3769  003F18  EC2F  F05C         	call	_MiMAC_SetPower
  3770                           
  3771                           ;main.c: 234: strcpy(ToSendDataBuffer, "I|scanning channels for noise...");
  3772  003F1C  0E84               	movlw	low _ToSendDataBuffer
  3773  003F1E  0101               	movlb	1	; () banked
  3774  003F20  6F00               	movwf	strcpy@to& (0+255),b
  3775  003F22  0E03               	movlw	high _ToSendDataBuffer
  3776  003F24  0101               	movlb	1	; () banked
  3777  003F26  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3778  003F28  0E04               	movlw	low STR_2
  3779  003F2A  0101               	movlb	1	; () banked
  3780  003F2C  6F02               	movwf	strcpy@from& (0+255),b
  3781  003F2E  0E23               	movlw	high STR_2
  3782  003F30  0101               	movlb	1	; () banked
  3783  003F32  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3784  003F34  EC69  F05C         	call	_strcpy	;wreg free
  3785                           
  3786                           ;main.c: 235: sendHIDText(ToSendDataBuffer);
  3787  003F38  0E84               	movlw	low _ToSendDataBuffer
  3788  003F3A  0101               	movlb	1	; () banked
  3789  003F3C  6F07               	movwf	sendHIDText@str& (0+255),b
  3790  003F3E  0E03               	movlw	high _ToSendDataBuffer
  3791  003F40  0101               	movlb	1	; () banked
  3792  003F42  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3793  003F44  EC7B  F04F         	call	_sendHIDText	;wreg free
  3794                           
  3795                           ;main.c: 236: _delay((unsigned long)((20)*(16000000/4000.0)));
  3796  003F48  0E68               	movlw	104
  3797  003F4A  0101               	movlb	1	; () banked
  3798  003F4C  6F89               	movwf	??_main& (0+255),b
  3799  003F4E  0EE4               	movlw	228
  3800  003F50                     u25167:
  3801  003F50  2EE8               	decfsz	wreg,f,c
  3802  003F52  D7FE               	goto	u25167
  3803  003F54  2F89               	decfsz	??_main& (0+255),f,b
  3804  003F56  D7FC               	goto	u25167
  3805  003F58  D000               	nop2	
  3806                           
  3807                           ;main.c: 239: BestChannel = MiApp_NoiseDetection(0x11111111, 8, 0x00, &noise_level);
  3808  003F5A  0E11               	movlw	17
  3809  003F5C  0101               	movlb	1	; () banked
  3810  003F5E  6F1D               	movwf	MiApp_NoiseDetection@ChannelMap& (0+255),b
  3811  003F60  0E11               	movlw	17
  3812  003F62  6F1E               	movwf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),b
  3813  003F64  0E11               	movlw	17
  3814  003F66  6F1F               	movwf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),b
  3815  003F68  0E11               	movlw	17
  3816  003F6A  6F20               	movwf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),b
  3817  003F6C  0E08               	movlw	8
  3818  003F6E  0101               	movlb	1	; () banked
  3819  003F70  6F21               	movwf	MiApp_NoiseDetection@ScanDuration& (0+255),b
  3820  003F72  0E00               	movlw	0
  3821  003F74  0101               	movlb	1	; () banked
  3822  003F76  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
  3823  003F78  0EF7               	movlw	low _noise_level
  3824  003F7A  0101               	movlb	1	; () banked
  3825  003F7C  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
  3826  003F7E  0E01               	movlw	high _noise_level
  3827  003F80  0101               	movlb	1	; () banked
  3828  003F82  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
  3829  003F84  ECDB  F037         	call	_MiApp_NoiseDetection	;wreg free
  3830  003F88  0101               	movlb	1	; () banked
  3831  003F8A  6FBE               	movwf	_BestChannel& (0+255),b
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;main.c: 241: sprintf(ToSendDataBuffer, "I|best channel: %i (noise == %i)", BestChannel,
      +                           noise_level);
  3835  003F8C  0E84               	movlw	low _ToSendDataBuffer
  3836  003F8E  0101               	movlb	1	; () banked
  3837  003F90  6F0C               	movwf	sprintf@sp& (0+255),b
  3838  003F92  0E03               	movlw	high _ToSendDataBuffer
  3839  003F94  0101               	movlb	1	; () banked
  3840  003F96  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3841  003F98  0EE3               	movlw	low STR_3
  3842  003F9A  0101               	movlb	1	; () banked
  3843  003F9C  6F0E               	movwf	sprintf@f& (0+255),b
  3844  003F9E  0E22               	movlw	high STR_3
  3845  003FA0  0101               	movlb	1	; () banked
  3846  003FA2  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3847  003FA4  C1BE  F110         	movff	_BestChannel,?_sprintf+4
  3848  003FA8  0101               	movlb	1	; () banked
  3849  003FAA  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3850  003FAC  C1F7  F112         	movff	_noise_level,?_sprintf+6
  3851  003FB0  0101               	movlb	1	; () banked
  3852  003FB2  6B13               	clrf	(?_sprintf+7)& (0+255),b
  3853  003FB4  ECDE  F029         	call	_sprintf	;wreg free
  3854                           
  3855                           ;main.c: 242: sendHIDText(ToSendDataBuffer);
  3856  003FB8  0E84               	movlw	low _ToSendDataBuffer
  3857  003FBA  0101               	movlb	1	; () banked
  3858  003FBC  6F07               	movwf	sendHIDText@str& (0+255),b
  3859  003FBE  0E03               	movlw	high _ToSendDataBuffer
  3860  003FC0  0101               	movlb	1	; () banked
  3861  003FC2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3862  003FC4  EC7B  F04F         	call	_sendHIDText	;wreg free
  3863                           
  3864                           ;main.c: 243: _delay((unsigned long)((20)*(16000000/4000.0)));
  3865  003FC8  0E68               	movlw	104
  3866  003FCA  0101               	movlb	1	; () banked
  3867  003FCC  6F89               	movwf	??_main& (0+255),b
  3868  003FCE  0EE4               	movlw	228
  3869  003FD0                     u25177:
  3870  003FD0  2EE8               	decfsz	wreg,f,c
  3871  003FD2  D7FE               	goto	u25177
  3872  003FD4  2F89               	decfsz	??_main& (0+255),f,b
  3873  003FD6  D7FC               	goto	u25177
  3874  003FD8  D000               	nop2	
  3875                           
  3876                           ;main.c: 245: if( MiApp_SetChannel(BestChannel) == 0 )
  3877  003FDA  0101               	movlb	1	; () banked
  3878  003FDC  51BE               	movf	_BestChannel& (0+255),w,b
  3879  003FDE  EC6D  F05D         	call	_MiApp_SetChannel
  3880  003FE2  0900               	iorlw	0
  3881  003FE4  A4D8               	btfss	status,2,c
  3882  003FE6  D025               	goto	l21753
  3883                           
  3884                           ;main.c: 246: {
  3885                           ;main.c: 247: sprintf(ToSendDataBuffer, "I|Error: unable to set channel %i! (T_T)", Best
      +                          Channel);
  3886  003FE8  0E84               	movlw	low _ToSendDataBuffer
  3887  003FEA  0101               	movlb	1	; () banked
  3888  003FEC  6F0C               	movwf	sprintf@sp& (0+255),b
  3889  003FEE  0E03               	movlw	high _ToSendDataBuffer
  3890  003FF0  0101               	movlb	1	; () banked
  3891  003FF2  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3892  003FF4  0E6C               	movlw	low STR_4
  3893  003FF6  0101               	movlb	1	; () banked
  3894  003FF8  6F0E               	movwf	sprintf@f& (0+255),b
  3895  003FFA  0E22               	movlw	high STR_4
  3896  003FFC  0101               	movlb	1	; () banked
  3897  003FFE  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3898  004000  C1BE  F110         	movff	_BestChannel,?_sprintf+4
  3899  004004  0101               	movlb	1	; () banked
  3900  004006  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3901  004008  ECDE  F029         	call	_sprintf	;wreg free
  3902                           
  3903                           ;main.c: 248: sendHIDText(ToSendDataBuffer);
  3904  00400C  0E84               	movlw	low _ToSendDataBuffer
  3905  00400E  0101               	movlb	1	; () banked
  3906  004010  6F07               	movwf	sendHIDText@str& (0+255),b
  3907  004012  0E03               	movlw	high _ToSendDataBuffer
  3908  004014  0101               	movlb	1	; () banked
  3909  004016  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3910  004018  EC7B  F04F         	call	_sendHIDText	;wreg free
  3911                           
  3912                           ;main.c: 249: _delay((unsigned long)((20)*(16000000/4000.0)));
  3913  00401C  0E68               	movlw	104
  3914  00401E  0101               	movlb	1	; () banked
  3915  004020  6F89               	movwf	??_main& (0+255),b
  3916  004022  0EE4               	movlw	228
  3917  004024                     u25187:
  3918  004024  2EE8               	decfsz	wreg,f,c
  3919  004026  D7FE               	goto	u25187
  3920  004028  2F89               	decfsz	??_main& (0+255),f,b
  3921  00402A  D7FC               	goto	u25187
  3922  00402C  D000               	nop2	
  3923                           
  3924                           ;main.c: 250: return;
  3925  00402E  EFF2  F000         	goto	start
  3926  004032                     l21753:
  3927                           
  3928                           ;main.c: 251: }
  3929                           ;main.c: 253: sprintf(ToSendDataBuffer, "I|creating network...");
  3930  004032  0E84               	movlw	low _ToSendDataBuffer
  3931  004034  0101               	movlb	1	; () banked
  3932  004036  6F0C               	movwf	sprintf@sp& (0+255),b
  3933  004038  0E03               	movlw	high _ToSendDataBuffer
  3934  00403A  0101               	movlb	1	; () banked
  3935  00403C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3936  00403E  0E7D               	movlw	low STR_5
  3937  004040  0101               	movlb	1	; () banked
  3938  004042  6F0E               	movwf	sprintf@f& (0+255),b
  3939  004044  0E23               	movlw	high STR_5
  3940  004046  0101               	movlb	1	; () banked
  3941  004048  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3942  00404A  ECDE  F029         	call	_sprintf	;wreg free
  3943                           
  3944                           ;main.c: 254: sendHIDText(ToSendDataBuffer);
  3945  00404E  0E84               	movlw	low _ToSendDataBuffer
  3946  004050  0101               	movlb	1	; () banked
  3947  004052  6F07               	movwf	sendHIDText@str& (0+255),b
  3948  004054  0E03               	movlw	high _ToSendDataBuffer
  3949  004056  0101               	movlb	1	; () banked
  3950  004058  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3951  00405A  EC7B  F04F         	call	_sendHIDText	;wreg free
  3952                           
  3953                           ;main.c: 255: _delay((unsigned long)((20)*(16000000/4000.0)));
  3954  00405E  0E68               	movlw	104
  3955  004060  0101               	movlb	1	; () banked
  3956  004062  6F89               	movwf	??_main& (0+255),b
  3957  004064  0EE4               	movlw	228
  3958  004066                     u25197:
  3959  004066  2EE8               	decfsz	wreg,f,c
  3960  004068  D7FE               	goto	u25197
  3961  00406A  2F89               	decfsz	??_main& (0+255),f,b
  3962  00406C  D7FC               	goto	u25197
  3963  00406E  D000               	nop2	
  3964                           
  3965                           ;main.c: 257: MiApp_StartConnection(0x00, 0, 0);
  3966  004070  0E00               	movlw	0
  3967  004072  0101               	movlb	1	; () banked
  3968  004074  6F41               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  3969  004076  0E00               	movlw	0
  3970  004078  0101               	movlb	1	; () banked
  3971  00407A  6F42               	movwf	MiApp_StartConnection@ChannelMap& (0+255),b
  3972  00407C  0E00               	movlw	0
  3973  00407E  6F43               	movwf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  3974  004080  0E00               	movlw	0
  3975  004082  6F44               	movwf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  3976  004084  0E00               	movlw	0
  3977  004086  6F45               	movwf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  3978  004088  0E00               	movlw	0
  3979  00408A  EC4A  F048         	call	_MiApp_StartConnection
  3980                           
  3981                           ;main.c: 258: MiApp_ConnectionMode(0x03);
  3982  00408E  0E03               	movlw	3
  3983  004090  EC05  F05D         	call	_MiApp_ConnectionMode
  3984                           
  3985                           ;main.c: 260: sprintf(ToSendDataBuffer, "I|PANID:%02x%02x Ch:%02d",myPANID.v[1],myPANID.
      +                          v[0],BestChannel);
  3986  004094  0E84               	movlw	low _ToSendDataBuffer
  3987  004096  0101               	movlb	1	; () banked
  3988  004098  6F0C               	movwf	sprintf@sp& (0+255),b
  3989  00409A  0E03               	movlw	high _ToSendDataBuffer
  3990  00409C  0101               	movlb	1	; () banked
  3991  00409E  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3992  0040A0  0E64               	movlw	low STR_6
  3993  0040A2  0101               	movlb	1	; () banked
  3994  0040A4  6F0E               	movwf	sprintf@f& (0+255),b
  3995  0040A6  0E23               	movlw	high STR_6
  3996  0040A8  0101               	movlb	1	; () banked
  3997  0040AA  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3998  0040AC  C1F1  F110         	movff	_myPANID+1,?_sprintf+4
  3999  0040B0  0101               	movlb	1	; () banked
  4000  0040B2  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4001  0040B4  C1F0  F112         	movff	_myPANID,?_sprintf+6
  4002  0040B8  0101               	movlb	1	; () banked
  4003  0040BA  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4004  0040BC  C1BE  F114         	movff	_BestChannel,?_sprintf+8
  4005  0040C0  0101               	movlb	1	; () banked
  4006  0040C2  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4007  0040C4  ECDE  F029         	call	_sprintf	;wreg free
  4008                           
  4009                           ;main.c: 261: sendHIDText(ToSendDataBuffer);
  4010  0040C8  0E84               	movlw	low _ToSendDataBuffer
  4011  0040CA  0101               	movlb	1	; () banked
  4012  0040CC  6F07               	movwf	sendHIDText@str& (0+255),b
  4013  0040CE  0E03               	movlw	high _ToSendDataBuffer
  4014  0040D0  0101               	movlb	1	; () banked
  4015  0040D2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4016  0040D4  EC7B  F04F         	call	_sendHIDText	;wreg free
  4017                           
  4018                           ;main.c: 262: _delay((unsigned long)((20)*(16000000/4000.0)));
  4019  0040D8  0E68               	movlw	104
  4020  0040DA  0101               	movlb	1	; () banked
  4021  0040DC  6F89               	movwf	??_main& (0+255),b
  4022  0040DE  0EE4               	movlw	228
  4023  0040E0                     u25207:
  4024  0040E0  2EE8               	decfsz	wreg,f,c
  4025  0040E2  D7FE               	goto	u25207
  4026  0040E4  2F89               	decfsz	??_main& (0+255),f,b
  4027  0040E6  D7FC               	goto	u25207
  4028  0040E8  D000               	nop2	
  4029                           
  4030                           ;main.c: 264: sprintf(ToSendDataBuffer, "I|operator's address: %02x%02x", myShortAddress
      +                          .v[1], myShortAddress.v[0]);
  4031  0040EA  0E84               	movlw	low _ToSendDataBuffer
  4032  0040EC  0101               	movlb	1	; () banked
  4033  0040EE  6F0C               	movwf	sprintf@sp& (0+255),b
  4034  0040F0  0E03               	movlw	high _ToSendDataBuffer
  4035  0040F2  0101               	movlb	1	; () banked
  4036  0040F4  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4037  0040F6  0E45               	movlw	low STR_7
  4038  0040F8  0101               	movlb	1	; () banked
  4039  0040FA  6F0E               	movwf	sprintf@f& (0+255),b
  4040  0040FC  0E23               	movlw	high STR_7
  4041  0040FE  0101               	movlb	1	; () banked
  4042  004100  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4043  004102  C1F3  F110         	movff	_myShortAddress+1,?_sprintf+4
  4044  004106  0101               	movlb	1	; () banked
  4045  004108  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4046  00410A  C1F2  F112         	movff	_myShortAddress,?_sprintf+6
  4047  00410E  0101               	movlb	1	; () banked
  4048  004110  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4049  004112  ECDE  F029         	call	_sprintf	;wreg free
  4050                           
  4051                           ;main.c: 265: sendHIDText(ToSendDataBuffer);
  4052  004116  0E84               	movlw	low _ToSendDataBuffer
  4053  004118  0101               	movlb	1	; () banked
  4054  00411A  6F07               	movwf	sendHIDText@str& (0+255),b
  4055  00411C  0E03               	movlw	high _ToSendDataBuffer
  4056  00411E  0101               	movlb	1	; () banked
  4057  004120  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4058  004122  EC7B  F04F         	call	_sendHIDText	;wreg free
  4059                           
  4060                           ;main.c: 266: _delay((unsigned long)((20)*(16000000/4000.0)));
  4061  004126  0E68               	movlw	104
  4062  004128  0101               	movlb	1	; () banked
  4063  00412A  6F89               	movwf	??_main& (0+255),b
  4064  00412C  0EE4               	movlw	228
  4065  00412E                     u25217:
  4066  00412E  2EE8               	decfsz	wreg,f,c
  4067  004130  D7FE               	goto	u25217
  4068  004132  2F89               	decfsz	??_main& (0+255),f,b
  4069  004134  D7FC               	goto	u25217
  4070  004136  D000               	nop2	
  4071                           
  4072                           ;main.c: 268: sprintf(ToSendDataBuffer, "I|status: ready!");
  4073  004138  0E84               	movlw	low _ToSendDataBuffer
  4074  00413A  0101               	movlb	1	; () banked
  4075  00413C  6F0C               	movwf	sprintf@sp& (0+255),b
  4076  00413E  0E03               	movlw	high _ToSendDataBuffer
  4077  004140  0101               	movlb	1	; () banked
  4078  004142  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4079  004144  0EA4               	movlw	low STR_8
  4080  004146  0101               	movlb	1	; () banked
  4081  004148  6F0E               	movwf	sprintf@f& (0+255),b
  4082  00414A  0E23               	movlw	high STR_8
  4083  00414C  0101               	movlb	1	; () banked
  4084  00414E  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4085  004150  ECDE  F029         	call	_sprintf	;wreg free
  4086                           
  4087                           ;main.c: 269: sendHIDText(ToSendDataBuffer);
  4088  004154  0E84               	movlw	low _ToSendDataBuffer
  4089  004156  0101               	movlb	1	; () banked
  4090  004158  6F07               	movwf	sendHIDText@str& (0+255),b
  4091  00415A  0E03               	movlw	high _ToSendDataBuffer
  4092  00415C  0101               	movlb	1	; () banked
  4093  00415E  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4094  004160  EC7B  F04F         	call	_sendHIDText	;wreg free
  4095                           
  4096                           ;main.c: 270: _delay((unsigned long)((20)*(16000000/4000.0)));
  4097  004164  0E68               	movlw	104
  4098  004166  0101               	movlb	1	; () banked
  4099  004168  6F89               	movwf	??_main& (0+255),b
  4100  00416A  0EE4               	movlw	228
  4101  00416C                     u25227:
  4102  00416C  2EE8               	decfsz	wreg,f,c
  4103  00416E  D7FE               	goto	u25227
  4104  004170  2F89               	decfsz	??_main& (0+255),f,b
  4105  004172  D7FC               	goto	u25227
  4106  004174  D000               	nop2	
  4107                           
  4108                           ;main.c: 275: send_complete_update();
  4109  004176  EC15  F031         	call	_send_complete_update	;wreg free
  4110                           
  4111                           ;main.c: 278: MiApp_ConnectionMode(0x00);
  4112  00417A  0E00               	movlw	0
  4113  00417C  EC05  F05D         	call	_MiApp_ConnectionMode
  4114                           
  4115                           ;main.c: 280: sprintf(ToSendDataBuffer, "I|accepting scans & connections");
  4116  004180  0E84               	movlw	low _ToSendDataBuffer
  4117  004182  0101               	movlb	1	; () banked
  4118  004184  6F0C               	movwf	sprintf@sp& (0+255),b
  4119  004186  0E03               	movlw	high _ToSendDataBuffer
  4120  004188  0101               	movlb	1	; () banked
  4121  00418A  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4122  00418C  0E25               	movlw	low STR_9
  4123  00418E  0101               	movlb	1	; () banked
  4124  004190  6F0E               	movwf	sprintf@f& (0+255),b
  4125  004192  0E23               	movlw	high STR_9
  4126  004194  0101               	movlb	1	; () banked
  4127  004196  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4128  004198  ECDE  F029         	call	_sprintf	;wreg free
  4129                           
  4130                           ;main.c: 281: sendHIDText(ToSendDataBuffer);
  4131  00419C  0E84               	movlw	low _ToSendDataBuffer
  4132  00419E  0101               	movlb	1	; () banked
  4133  0041A0  6F07               	movwf	sendHIDText@str& (0+255),b
  4134  0041A2  0E03               	movlw	high _ToSendDataBuffer
  4135  0041A4  0101               	movlb	1	; () banked
  4136  0041A6  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4137  0041A8  EC7B  F04F         	call	_sendHIDText	;wreg free
  4138                           
  4139                           ;main.c: 282: _delay((unsigned long)((20)*(16000000/4000.0)));
  4140  0041AC  0E68               	movlw	104
  4141  0041AE  0101               	movlb	1	; () banked
  4142  0041B0  6F89               	movwf	??_main& (0+255),b
  4143  0041B2  0EE4               	movlw	228
  4144  0041B4                     u25237:
  4145  0041B4  2EE8               	decfsz	wreg,f,c
  4146  0041B6  D7FE               	goto	u25237
  4147  0041B8  2F89               	decfsz	??_main& (0+255),f,b
  4148  0041BA  D7FC               	goto	u25237
  4149  0041BC  D000               	nop2	
  4150                           
  4151                           ;main.c: 284: myAppState = STATE_READY;
  4152  0041BE  0E02               	movlw	2
  4153  0041C0  6E52               	movwf	_myAppState,c
  4154                           
  4155                           ;main.c: 285: status_led = LED_SLOW_PULSE;
  4156  0041C2  0E02               	movlw	2
  4157  0041C4  6E55               	movwf	_status_led,c	;volatile
  4158                           
  4159                           ;main.c: 286: update_LED();
  4160  0041C6  ECC7  F059         	call	_update_LED	;wreg free
  4161                           
  4162                           ;main.c: 288: m_uptime_days = 0;
  4163  0041CA  0E00               	movlw	0
  4164  0041CC  0101               	movlb	1	; () banked
  4165  0041CE  6FB0               	movwf	_m_uptime_days& (0+255),b	;volatile
  4166  0041D0  0E00               	movlw	0
  4167  0041D2  0101               	movlb	1	; () banked
  4168  0041D4  6FB1               	movwf	(_m_uptime_days+1)& (0+255),b	;volatile
  4169  0041D6  0E00               	movlw	0
  4170  0041D8  0101               	movlb	1	; () banked
  4171  0041DA  6FB2               	movwf	(_m_uptime_days+2)& (0+255),b	;volatile
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;main.c: 289: RTCC_reset();
  4175  0041DC  EC7F  F05D         	call	_RTCC_reset	;wreg free
  4176                           
  4177                           ;main.c: 290: timer_reset();
  4178  0041E0  ECAA  F05D         	call	_timer_reset	;wreg free
  4179  0041E4                     l21803:
  4180                           
  4181                           ;main.c: 295: {
  4182                           ;main.c: 296: uint8_t shortaddress[2];
  4183                           ;main.c: 297: uint8_t power;
  4184                           ;main.c: 298: uint8_t rssi;
  4185                           ;main.c: 299: uint8_t uid[2];
  4186                           ;main.c: 300: uint8_t size;
  4187                           ;main.c: 304: MiWiTasks();
  4188  0041E4  ECE3  F011         	call	_MiWiTasks	;wreg free
  4189                           
  4190                           ;main.c: 308: if(MiApp_MessageAvailable())
  4191  0041E8  ECCC  F05D         	call	_MiApp_MessageAvailable	;wreg free
  4192  0041EC  0900               	iorlw	0
  4193  0041EE  B4D8               	btfsc	status,2,c
  4194  0041F0  D1FD               	goto	l21905
  4195                           
  4196                           ;main.c: 309: {
  4197                           ;main.c: 310: shortaddress[0] = rxMessage.SourceAddress[0];
  4198  0041F2  C193  FFD9         	movff	_rxMessage+3,fsr2l
  4199  0041F6  C194  FFDA         	movff	_rxMessage+4,fsr2h
  4200  0041FA  50DF               	movf	indf2,w,c
  4201  0041FC  0103               	movlb	3	; () banked
  4202  0041FE  6FE1               	movwf	main@shortaddress& (0+255),b
  4203                           
  4204                           ; BSR set to: 3
  4205                           ;main.c: 311: shortaddress[1] = rxMessage.SourceAddress[1];
  4206  004200  0101               	movlb	1	; () banked
  4207  004202  EE20 F001          	lfsr	2,1
  4208  004206  5193               	movf	(_rxMessage+3)& (0+255),w,b
  4209  004208  26D9               	addwf	fsr2l,f,c
  4210  00420A  5194               	movf	(_rxMessage+4)& (0+255),w,b
  4211  00420C  22DA               	addwfc	fsr2h,f,c
  4212  00420E  50DF               	movf	indf2,w,c
  4213  004210  0103               	movlb	3	; () banked
  4214  004212  6FE2               	movwf	(main@shortaddress+1)& (0+255),b
  4215                           
  4216                           ;main.c: 312: switch(rxMessage.Payload[0])
  4217  004214  D1D9               	goto	l21903
  4218  004216                     l1762:
  4219                           
  4220                           ;main.c: 315: rssi = rxMessage.PacketRSSI;
  4221  004216  C198  F3DD         	movff	_rxMessage+8,main@rssi
  4222                           
  4223                           ;main.c: 316: power = rxMessage.Payload[1];
  4224  00421A  0101               	movlb	1	; () banked
  4225  00421C  EE20 F001          	lfsr	2,1
  4226  004220  5195               	movf	(_rxMessage+5)& (0+255),w,b
  4227  004222  26D9               	addwf	fsr2l,f,c
  4228  004224  5196               	movf	(_rxMessage+6)& (0+255),w,b
  4229  004226  22DA               	addwfc	fsr2h,f,c
  4230  004228  50DF               	movf	indf2,w,c
  4231  00422A  0103               	movlb	3	; () banked
  4232  00422C  6FDC               	movwf	main@power& (0+255),b
  4233                           
  4234                           ; BSR set to: 3
  4235                           ;main.c: 317: MiApp_DiscardMessage();
  4236  00422E  ECD5  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4237                           
  4238                           ;main.c: 319: {TxData = 11;};
  4239  004232  0E0B               	movlw	11
  4240  004234  0101               	movlb	1	; () banked
  4241  004236  6FC6               	movwf	_TxData& (0+255),b
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;main.c: 320: TxBuffer[TxData++] = 01;
  4245  004238  0101               	movlb	1	; () banked
  4246  00423A  51C6               	movf	_TxData& (0+255),w,b
  4247  00423C  0D01               	mullw	1
  4248  00423E  0EA6               	movlw	low _TxBuffer
  4249  004240  24F3               	addwf	prodl,w,c
  4250  004242  6ED9               	movwf	fsr2l,c
  4251  004244  0E02               	movlw	high _TxBuffer
  4252  004246  20F4               	addwfc	prodh,w,c
  4253  004248  6EDA               	movwf	fsr2h,c
  4254  00424A  0E01               	movlw	1
  4255  00424C  6EDF               	movwf	indf2,c
  4256                           
  4257                           ; BSR set to: 1
  4258  00424E  0101               	movlb	1	; () banked
  4259  004250  2BC6               	incf	_TxData& (0+255),f,b
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;main.c: 321: TxBuffer[TxData++] = power;
  4263  004252  0101               	movlb	1	; () banked
  4264  004254  51C6               	movf	_TxData& (0+255),w,b
  4265  004256  0D01               	mullw	1
  4266  004258  0EA6               	movlw	low _TxBuffer
  4267  00425A  24F3               	addwf	prodl,w,c
  4268  00425C  6ED9               	movwf	fsr2l,c
  4269  00425E  0E02               	movlw	high _TxBuffer
  4270  004260  20F4               	addwfc	prodh,w,c
  4271  004262  6EDA               	movwf	fsr2h,c
  4272  004264  C3DC  FFDF         	movff	main@power,indf2
  4273                           
  4274                           ; BSR set to: 1
  4275  004268  0101               	movlb	1	; () banked
  4276  00426A  2BC6               	incf	_TxData& (0+255),f,b
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;main.c: 322: TxBuffer[TxData++] = rssi;
  4280  00426C  0101               	movlb	1	; () banked
  4281  00426E  51C6               	movf	_TxData& (0+255),w,b
  4282  004270  0D01               	mullw	1
  4283  004272  0EA6               	movlw	low _TxBuffer
  4284  004274  24F3               	addwf	prodl,w,c
  4285  004276  6ED9               	movwf	fsr2l,c
  4286  004278  0E02               	movlw	high _TxBuffer
  4287  00427A  20F4               	addwfc	prodh,w,c
  4288  00427C  6EDA               	movwf	fsr2h,c
  4289  00427E  C3DD  FFDF         	movff	main@rssi,indf2
  4290                           
  4291                           ; BSR set to: 1
  4292  004282  0101               	movlb	1	; () banked
  4293  004284  2BC6               	incf	_TxData& (0+255),f,b
  4294                           
  4295                           ; BSR set to: 1
  4296                           ;main.c: 324: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4297  004286  0EE1               	movlw	low main@shortaddress
  4298  004288  0101               	movlb	1	; () banked
  4299  00428A  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4300  00428C  0E03               	movlw	high main@shortaddress
  4301  00428E  0101               	movlb	1	; () banked
  4302  004290  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4303  004292  0E00               	movlw	0
  4304  004294  0101               	movlb	1	; () banked
  4305  004296  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4306  004298  0E01               	movlw	1
  4307  00429A  0101               	movlb	1	; () banked
  4308  00429C  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4309  00429E  ECE0  F02E         	call	_MiApp_UnicastAddress	;wreg free
  4310  0042A2  06E8               	decf	wreg,f,c
  4311  0042A4  A4D8               	btfss	status,2,c
  4312  0042A6  D02B               	goto	l21835
  4313                           
  4314                           ;main.c: 325: {
  4315                           ;main.c: 326: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: OK, %s, RSSI=%i", shorta
      +                          ddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4316  0042A8  0E84               	movlw	low _ToSendDataBuffer
  4317  0042AA  0101               	movlb	1	; () banked
  4318  0042AC  6F0C               	movwf	sprintf@sp& (0+255),b
  4319  0042AE  0E03               	movlw	high _ToSendDataBuffer
  4320  0042B0  0101               	movlb	1	; () banked
  4321  0042B2  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4322  0042B4  0EBC               	movlw	low STR_10
  4323  0042B6  0101               	movlb	1	; () banked
  4324  0042B8  6F0E               	movwf	sprintf@f& (0+255),b
  4325  0042BA  0E22               	movlw	high STR_10
  4326  0042BC  0101               	movlb	1	; () banked
  4327  0042BE  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4328  0042C0  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4329  0042C4  0101               	movlb	1	; () banked
  4330  0042C6  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4331  0042C8  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4332  0042CC  0101               	movlb	1	; () banked
  4333  0042CE  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4334  0042D0  0103               	movlb	3	; () banked
  4335  0042D2  51DC               	movf	main@power& (0+255),w,b
  4336  0042D4  EC5D  F051         	call	_dBm_to_mW
  4337  0042D8  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4338  0042DC  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4339  0042E0  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4340  0042E4  0101               	movlb	1	; () banked
  4341  0042E6  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4342  0042E8  ECDE  F029         	call	_sprintf	;wreg free
  4343                           
  4344                           ;main.c: 327: sendHIDText(ToSendDataBuffer);
  4345  0042EC  0E84               	movlw	low _ToSendDataBuffer
  4346  0042EE  0101               	movlb	1	; () banked
  4347  0042F0  6F07               	movwf	sendHIDText@str& (0+255),b
  4348  0042F2  0E03               	movlw	high _ToSendDataBuffer
  4349  0042F4  0101               	movlb	1	; () banked
  4350  0042F6  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4351  0042F8  EC7B  F04F         	call	_sendHIDText	;wreg free
  4352                           
  4353                           ;main.c: 329: }
  4354  0042FC  D773               	goto	l21803
  4355  0042FE                     l21835:
  4356                           
  4357                           ;main.c: 330: else
  4358                           ;main.c: 331: {
  4359                           ;main.c: 332: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: error sending back, %s, 
      +                          RSSI=%i", shortaddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4360  0042FE  0E84               	movlw	low _ToSendDataBuffer
  4361  004300  0101               	movlb	1	; () banked
  4362  004302  6F0C               	movwf	sprintf@sp& (0+255),b
  4363  004304  0E03               	movlw	high _ToSendDataBuffer
  4364  004306  0101               	movlb	1	; () banked
  4365  004308  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4366  00430A  0ED5               	movlw	low STR_11
  4367  00430C  0101               	movlb	1	; () banked
  4368  00430E  6F0E               	movwf	sprintf@f& (0+255),b
  4369  004310  0E21               	movlw	high STR_11
  4370  004312  0101               	movlb	1	; () banked
  4371  004314  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4372  004316  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4373  00431A  0101               	movlb	1	; () banked
  4374  00431C  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4375  00431E  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4376  004322  0101               	movlb	1	; () banked
  4377  004324  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4378  004326  0103               	movlb	3	; () banked
  4379  004328  51DC               	movf	main@power& (0+255),w,b
  4380  00432A  EC5D  F051         	call	_dBm_to_mW
  4381  00432E  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4382  004332  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4383  004336  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4384  00433A  0101               	movlb	1	; () banked
  4385  00433C  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4386  00433E  ECDE  F029         	call	_sprintf	;wreg free
  4387                           
  4388                           ;main.c: 333: sendHIDText(ToSendDataBuffer);
  4389  004342  0E84               	movlw	low _ToSendDataBuffer
  4390  004344  0101               	movlb	1	; () banked
  4391  004346  6F07               	movwf	sendHIDText@str& (0+255),b
  4392  004348  0E03               	movlw	high _ToSendDataBuffer
  4393  00434A  0101               	movlb	1	; () banked
  4394  00434C  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4395  00434E  EC7B  F04F         	call	_sendHIDText	;wreg free
  4396                           
  4397                           ;main.c: 335: }
  4398                           ;main.c: 336: break;
  4399  004352  D748               	goto	l21803
  4400  004354                     l21839:
  4401                           
  4402                           ;main.c: 340: p_buffer = &m_buffer[0];
  4403  004354  0ED1               	movlw	low _m_buffer
  4404  004356  0101               	movlb	1	; () banked
  4405  004358  6FB9               	movwf	_p_buffer& (0+255),b
  4406  00435A  0E02               	movlw	high _m_buffer
  4407  00435C  0101               	movlb	1	; () banked
  4408  00435E  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;main.c: 341: *(p_buffer++) = 0x4d;
  4412  004360  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4413  004364  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4414  004368  0E4D               	movlw	77
  4415  00436A  6EDF               	movwf	indf2,c
  4416                           
  4417                           ; BSR set to: 1
  4418  00436C  0101               	movlb	1	; () banked
  4419  00436E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4420  004370  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4421                           
  4422                           ;main.c: 342: *(p_buffer++) = shortaddress[0];
  4423  004372  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4424  004376  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4425  00437A  C3E1  FFDF         	movff	main@shortaddress,indf2
  4426                           
  4427                           ; BSR set to: 1
  4428  00437E  0101               	movlb	1	; () banked
  4429  004380  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4430  004382  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;main.c: 343: *(p_buffer++) = shortaddress[1];
  4434  004384  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4435  004388  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4436  00438C  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4437  004390  0101               	movlb	1	; () banked
  4438  004392  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4439  004394  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;main.c: 344: size = rxMessage.PayloadSize;
  4443  004396  C197  F3E0         	movff	_rxMessage+7,main@size
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;main.c: 345: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4447  00439A  C1B9  F100         	movff	_p_buffer,memcpy@d1
  4448  00439E  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  4449  0043A2  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4450  0043A6  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4451  0043AA  C3E0  F104         	movff	main@size,memcpy@n
  4452  0043AE  0101               	movlb	1	; () banked
  4453  0043B0  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4454  0043B2  EC96  F059         	call	_memcpy	;wreg free
  4455                           
  4456                           ;main.c: 346: p_buffer += size;
  4457  0043B6  0103               	movlb	3	; () banked
  4458  0043B8  51E0               	movf	main@size& (0+255),w,b
  4459  0043BA  0D01               	mullw	1
  4460  0043BC  50F3               	movf	prodl,w,c
  4461  0043BE  0101               	movlb	1	; () banked
  4462  0043C0  27B9               	addwf	_p_buffer& (0+255),f,b
  4463  0043C2  50F4               	movf	prodh,w,c
  4464  0043C4  0101               	movlb	1	; () banked
  4465  0043C6  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4466                           
  4467                           ; BSR set to: 1
  4468                           ;main.c: 348: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4469  0043C8  0ED1               	movlw	low _m_buffer
  4470  0043CA  0101               	movlb	1	; () banked
  4471  0043CC  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4472  0043CE  0E02               	movlw	high _m_buffer
  4473  0043D0  0101               	movlb	1	; () banked
  4474  0043D2  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4475  0043D4  0ED1               	movlw	_m_buffer& (0+255)
  4476  0043D6  0800               	sublw	0
  4477  0043D8  0101               	movlb	1	; () banked
  4478  0043DA  25B9               	addwf	_p_buffer& (0+255),w,b
  4479  0043DC  0101               	movlb	1	; () banked
  4480  0043DE  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4481  0043E0  EC7F  F055         	call	_sendHIDBinary	;wreg free
  4482                           
  4483                           ;main.c: 349: MiApp_DiscardMessage();
  4484  0043E4  ECD5  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4485                           
  4486                           ;main.c: 350: break;
  4487  0043E8  D6FD               	goto	l21803
  4488  0043EA                     l21859:
  4489                           
  4490                           ;main.c: 353: {TxData = 11;};
  4491  0043EA  0E0B               	movlw	11
  4492  0043EC  0101               	movlb	1	; () banked
  4493  0043EE  6FC6               	movwf	_TxData& (0+255),b
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;main.c: 354: size = rxMessage.PayloadSize;
  4497  0043F0  C197  F3E0         	movff	_rxMessage+7,main@size
  4498                           
  4499                           ; BSR set to: 1
  4500                           ;main.c: 355: memcpy(&TxBuffer[TxData], &rxMessage.Payload[0], size);
  4501  0043F4  0101               	movlb	1	; () banked
  4502  0043F6  51C6               	movf	_TxData& (0+255),w,b
  4503  0043F8  0D01               	mullw	1
  4504  0043FA  0EA6               	movlw	low _TxBuffer
  4505  0043FC  24F3               	addwf	prodl,w,c
  4506  0043FE  0101               	movlb	1	; () banked
  4507  004400  6F00               	movwf	memcpy@d1& (0+255),b
  4508  004402  0E02               	movlw	high _TxBuffer
  4509  004404  20F4               	addwfc	prodh,w,c
  4510  004406  0101               	movlb	1	; () banked
  4511  004408  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  4512  00440A  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4513  00440E  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4514  004412  C3E0  F104         	movff	main@size,memcpy@n
  4515  004416  0101               	movlb	1	; () banked
  4516  004418  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4517  00441A  EC96  F059         	call	_memcpy	;wreg free
  4518                           
  4519                           ;main.c: 356: TxData = TxData + size;
  4520  00441E  0101               	movlb	1	; () banked
  4521  004420  51C6               	movf	_TxData& (0+255),w,b
  4522  004422  0103               	movlb	3	; () banked
  4523  004424  25E0               	addwf	main@size& (0+255),w,b
  4524  004426  0101               	movlb	1	; () banked
  4525  004428  6FC6               	movwf	_TxData& (0+255),b
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;main.c: 357: MiApp_DiscardMessage();
  4529  00442A  ECD5  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4530                           
  4531                           ;main.c: 359: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4532  00442E  0EE1               	movlw	low main@shortaddress
  4533  004430  0101               	movlb	1	; () banked
  4534  004432  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4535  004434  0E03               	movlw	high main@shortaddress
  4536  004436  0101               	movlb	1	; () banked
  4537  004438  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4538  00443A  0E00               	movlw	0
  4539  00443C  0101               	movlb	1	; () banked
  4540  00443E  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4541  004440  0E01               	movlw	1
  4542  004442  0101               	movlb	1	; () banked
  4543  004444  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4544  004446  ECE0  F02E         	call	_MiApp_UnicastAddress	;wreg free
  4545  00444A  06E8               	decf	wreg,f,c
  4546  00444C  A4D8               	btfss	status,2,c
  4547  00444E  D023               	goto	l21875
  4548                           
  4549                           ;main.c: 360: {
  4550                           ;main.c: 361: sprintf(ToSendDataBuffer, "I|%02x%02x:PING successful: payload_size=%i", s
      +                          hortaddress[1], shortaddress[0], size);
  4551  004450  0E84               	movlw	low _ToSendDataBuffer
  4552  004452  0101               	movlb	1	; () banked
  4553  004454  6F0C               	movwf	sprintf@sp& (0+255),b
  4554  004456  0E03               	movlw	high _ToSendDataBuffer
  4555  004458  0101               	movlb	1	; () banked
  4556  00445A  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4557  00445C  0E40               	movlw	low STR_12
  4558  00445E  0101               	movlb	1	; () banked
  4559  004460  6F0E               	movwf	sprintf@f& (0+255),b
  4560  004462  0E22               	movlw	high STR_12
  4561  004464  0101               	movlb	1	; () banked
  4562  004466  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4563  004468  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4564  00446C  0101               	movlb	1	; () banked
  4565  00446E  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4566  004470  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4567  004474  0101               	movlb	1	; () banked
  4568  004476  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4569  004478  C3E0  F114         	movff	main@size,?_sprintf+8
  4570  00447C  0101               	movlb	1	; () banked
  4571  00447E  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4572  004480  ECDE  F029         	call	_sprintf	;wreg free
  4573                           
  4574                           ;main.c: 362: sendHIDText(ToSendDataBuffer);
  4575  004484  0E84               	movlw	low _ToSendDataBuffer
  4576  004486  0101               	movlb	1	; () banked
  4577  004488  6F07               	movwf	sendHIDText@str& (0+255),b
  4578  00448A  0E03               	movlw	high _ToSendDataBuffer
  4579  00448C  0101               	movlb	1	; () banked
  4580  00448E  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4581  004490  EC7B  F04F         	call	_sendHIDText	;wreg free
  4582                           
  4583                           ;main.c: 364: }
  4584  004494  D6A7               	goto	l21803
  4585  004496                     l21875:
  4586                           
  4587                           ;main.c: 365: else
  4588                           ;main.c: 366: {
  4589                           ;main.c: 367: sprintf(ToSendDataBuffer, "I|%02x%02x:PING error sending back: payload_siz
      +                          e=%i", shortaddress[1], shortaddress[0], size);
  4590  004496  0E84               	movlw	low _ToSendDataBuffer
  4591  004498  0101               	movlb	1	; () banked
  4592  00449A  6F0C               	movwf	sprintf@sp& (0+255),b
  4593  00449C  0E03               	movlw	high _ToSendDataBuffer
  4594  00449E  0101               	movlb	1	; () banked
  4595  0044A0  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4596  0044A2  0E0C               	movlw	low STR_13
  4597  0044A4  0101               	movlb	1	; () banked
  4598  0044A6  6F0E               	movwf	sprintf@f& (0+255),b
  4599  0044A8  0E22               	movlw	high STR_13
  4600  0044AA  0101               	movlb	1	; () banked
  4601  0044AC  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4602  0044AE  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4603  0044B2  0101               	movlb	1	; () banked
  4604  0044B4  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4605  0044B6  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4606  0044BA  0101               	movlb	1	; () banked
  4607  0044BC  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4608  0044BE  C3E0  F114         	movff	main@size,?_sprintf+8
  4609  0044C2  0101               	movlb	1	; () banked
  4610  0044C4  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4611  0044C6  ECDE  F029         	call	_sprintf	;wreg free
  4612                           
  4613                           ;main.c: 368: sendHIDText(ToSendDataBuffer);
  4614  0044CA  0E84               	movlw	low _ToSendDataBuffer
  4615  0044CC  0101               	movlb	1	; () banked
  4616  0044CE  6F07               	movwf	sendHIDText@str& (0+255),b
  4617  0044D0  0E03               	movlw	high _ToSendDataBuffer
  4618  0044D2  0101               	movlb	1	; () banked
  4619  0044D4  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4620  0044D6  EC7B  F04F         	call	_sendHIDText	;wreg free
  4621                           
  4622                           ;main.c: 370: }
  4623                           ;main.c: 371: break;
  4624  0044DA  D684               	goto	l21803
  4625  0044DC                     l21879:
  4626                           
  4627                           ;main.c: 375: p_buffer = &m_buffer[0];
  4628  0044DC  0ED1               	movlw	low _m_buffer
  4629  0044DE  0101               	movlb	1	; () banked
  4630  0044E0  6FB9               	movwf	_p_buffer& (0+255),b
  4631  0044E2  0E02               	movlw	high _m_buffer
  4632  0044E4  0101               	movlb	1	; () banked
  4633  0044E6  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;main.c: 376: *(p_buffer++) = 0x4d;
  4637  0044E8  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4638  0044EC  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4639  0044F0  0E4D               	movlw	77
  4640  0044F2  6EDF               	movwf	indf2,c
  4641                           
  4642                           ; BSR set to: 1
  4643  0044F4  0101               	movlb	1	; () banked
  4644  0044F6  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4645  0044F8  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4646                           
  4647                           ;main.c: 377: *(p_buffer++) = shortaddress[0];
  4648  0044FA  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4649  0044FE  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4650  004502  C3E1  FFDF         	movff	main@shortaddress,indf2
  4651                           
  4652                           ; BSR set to: 1
  4653  004506  0101               	movlb	1	; () banked
  4654  004508  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4655  00450A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4656                           
  4657                           ; BSR set to: 1
  4658                           ;main.c: 378: *(p_buffer++) = shortaddress[1];
  4659  00450C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4660  004510  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4661  004514  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4662  004518  0101               	movlb	1	; () banked
  4663  00451A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4664  00451C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4665                           
  4666                           ; BSR set to: 1
  4667                           ;main.c: 379: size = rxMessage.PayloadSize;
  4668  00451E  C197  F3E0         	movff	_rxMessage+7,main@size
  4669                           
  4670                           ; BSR set to: 1
  4671                           ;main.c: 380: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4672  004522  C1B9  F100         	movff	_p_buffer,memcpy@d1
  4673  004526  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  4674  00452A  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4675  00452E  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4676  004532  C3E0  F104         	movff	main@size,memcpy@n
  4677  004536  0101               	movlb	1	; () banked
  4678  004538  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4679  00453A  EC96  F059         	call	_memcpy	;wreg free
  4680                           
  4681                           ;main.c: 381: p_buffer += size;
  4682  00453E  0103               	movlb	3	; () banked
  4683  004540  51E0               	movf	main@size& (0+255),w,b
  4684  004542  0D01               	mullw	1
  4685  004544  50F3               	movf	prodl,w,c
  4686  004546  0101               	movlb	1	; () banked
  4687  004548  27B9               	addwf	_p_buffer& (0+255),f,b
  4688  00454A  50F4               	movf	prodh,w,c
  4689  00454C  0101               	movlb	1	; () banked
  4690  00454E  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;main.c: 383: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4694  004550  0ED1               	movlw	low _m_buffer
  4695  004552  0101               	movlb	1	; () banked
  4696  004554  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4697  004556  0E02               	movlw	high _m_buffer
  4698  004558  0101               	movlb	1	; () banked
  4699  00455A  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4700  00455C  0ED1               	movlw	_m_buffer& (0+255)
  4701  00455E  0800               	sublw	0
  4702  004560  0101               	movlb	1	; () banked
  4703  004562  25B9               	addwf	_p_buffer& (0+255),w,b
  4704  004564  0101               	movlb	1	; () banked
  4705  004566  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4706  004568  EC7F  F055         	call	_sendHIDBinary	;wreg free
  4707                           
  4708                           ;main.c: 384: MiApp_DiscardMessage();
  4709  00456C  ECD5  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4710                           
  4711                           ;main.c: 385: break;
  4712  004570  D639               	goto	l21803
  4713  004572                     l21899:
  4714                           
  4715                           ;main.c: 389: sprintf(ToSendDataBuffer, "I|%02x%02x: %i command not recognized!", shorta
      +                          ddress[1], shortaddress[0], rxMessage.Payload[0]);
  4716  004572  0E84               	movlw	low _ToSendDataBuffer
  4717  004574  0101               	movlb	1	; () banked
  4718  004576  6F0C               	movwf	sprintf@sp& (0+255),b
  4719  004578  0E03               	movlw	high _ToSendDataBuffer
  4720  00457A  0101               	movlb	1	; () banked
  4721  00457C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4722  00457E  0E95               	movlw	low STR_14
  4723  004580  0101               	movlb	1	; () banked
  4724  004582  6F0E               	movwf	sprintf@f& (0+255),b
  4725  004584  0E22               	movlw	high STR_14
  4726  004586  0101               	movlb	1	; () banked
  4727  004588  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4728  00458A  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4729  00458E  0101               	movlb	1	; () banked
  4730  004590  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4731  004592  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4732  004596  0101               	movlb	1	; () banked
  4733  004598  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4734  00459A  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4735  00459E  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4736  0045A2  50DF               	movf	indf2,w,c
  4737  0045A4  0101               	movlb	1	; () banked
  4738  0045A6  6F89               	movwf	??_main& (0+255),b
  4739  0045A8  0101               	movlb	1	; () banked
  4740  0045AA  5189               	movf	??_main& (0+255),w,b
  4741  0045AC  0101               	movlb	1	; () banked
  4742  0045AE  6F14               	movwf	(?_sprintf+8)& (0+255),b
  4743  0045B0  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4744  0045B2  ECDE  F029         	call	_sprintf	;wreg free
  4745                           
  4746                           ;main.c: 390: sendHIDText(ToSendDataBuffer);
  4747  0045B6  0E84               	movlw	low _ToSendDataBuffer
  4748  0045B8  0101               	movlb	1	; () banked
  4749  0045BA  6F07               	movwf	sendHIDText@str& (0+255),b
  4750  0045BC  0E03               	movlw	high _ToSendDataBuffer
  4751  0045BE  0101               	movlb	1	; () banked
  4752  0045C0  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4753  0045C2  EC7B  F04F         	call	_sendHIDText	;wreg free
  4754                           
  4755                           ;main.c: 391: }
  4756  0045C6  D60E               	goto	l21803
  4757  0045C8                     l21903:
  4758  0045C8  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4759  0045CC  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4760  0045D0  50DF               	movf	indf2,w,c
  4761                           
  4762                           ; Switch size 1, requested type "space"
  4763                           ; Number of cases is 4, Range of values is 1 to 4
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte           13     7 (average)
  4767                           ;	Chosen strategy is simple_byte
  4768  0045D2  0A01               	xorlw	1	; case 1
  4769  0045D4  B4D8               	btfsc	status,2,c
  4770  0045D6  D61F               	goto	l1762
  4771  0045D8  0A03               	xorlw	3	; case 2
  4772  0045DA  B4D8               	btfsc	status,2,c
  4773  0045DC  D6BB               	goto	l21839
  4774  0045DE  0A01               	xorlw	1	; case 3
  4775  0045E0  B4D8               	btfsc	status,2,c
  4776  0045E2  D703               	goto	l21859
  4777  0045E4  0A07               	xorlw	7	; case 4
  4778  0045E6  B4D8               	btfsc	status,2,c
  4779  0045E8  D779               	goto	l21879
  4780  0045EA  D7C3               	goto	l21899
  4781  0045EC                     l21905:
  4782                           
  4783                           ;main.c: 396: else if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN)
      +                           == 0)
  4784  0045EC  0101               	movlb	1	; () banked
  4785  0045EE  51B7               	movf	_USBOutHandle& (0+255),w,b
  4786  0045F0  0101               	movlb	1	; () banked
  4787  0045F2  11B8               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  4788  0045F4  B4D8               	btfsc	status,2,c
  4789  0045F6  D013               	goto	l21909
  4790                           
  4791                           ; BSR set to: 1
  4792  0045F8  C1B7  FFD9         	movff	_USBOutHandle,fsr2l
  4793  0045FC  C1B8  FFDA         	movff	_USBOutHandle+1,fsr2h
  4794  004600  0101               	movlb	1	; () banked
  4795  004602  AEDF               	btfss	indf2,7,c
  4796  004604  D004               	goto	u24740
  4797  004606  0101               	movlb	1	; () banked
  4798  004608  6B89               	clrf	??_main& (0+255),b
  4799  00460A  2B89               	incf	??_main& (0+255),f,b
  4800  00460C  D002               	goto	u24748
  4801  00460E                     u24740:
  4802  00460E  0101               	movlb	1	; () banked
  4803  004610  6B89               	clrf	??_main& (0+255),b
  4804  004612                     u24748:
  4805  004612  0101               	movlb	1	; () banked
  4806  004614  5189               	movf	??_main& (0+255),w,b
  4807  004616  0103               	movlb	3	; () banked
  4808  004618  6FDA               	movwf	_main$4925& (0+255),b
  4809  00461A  6BDB               	clrf	(_main$4925+1)& (0+255),b
  4810  00461C  D005               	goto	l21911
  4811  00461E                     l21909:
  4812  00461E  0E00               	movlw	0
  4813  004620  0103               	movlb	3	; () banked
  4814  004622  6FDB               	movwf	(_main$4925+1)& (0+255),b
  4815  004624  0E00               	movlw	0
  4816  004626  6FDA               	movwf	_main$4925& (0+255),b
  4817  004628                     l21911:
  4818                           
  4819                           ; BSR set to: 3
  4820  004628  0103               	movlb	3	; () banked
  4821  00462A  51DA               	movf	_main$4925& (0+255),w,b
  4822  00462C  0103               	movlb	3	; () banked
  4823  00462E  11DB               	iorwf	(_main$4925+1)& (0+255),w,b
  4824  004630  B4D8               	btfsc	status,2,c
  4825  004632  D0C9               	goto	l21951
  4826  004634  D0E4               	goto	l21955
  4827  004636                     l1779:
  4828                           
  4829                           ; BSR set to: 4
  4830  004636  00FF               	reset		;# 
  4831                           
  4832                           ;main.c: 402: break;
  4833  004638  D0CE               	goto	l21953
  4834  00463A                     l1781:
  4835                           
  4836                           ; BSR set to: 4
  4837                           ;main.c: 405: shortaddress[0] = ReceivedDataBuffer[1];
  4838  00463A  C401  F3E1         	movff	_ReceivedDataBuffer+1,main@shortaddress
  4839                           
  4840                           ;main.c: 406: shortaddress[1] = ReceivedDataBuffer[2];
  4841  00463E  C402  F3E2         	movff	_ReceivedDataBuffer+2,main@shortaddress+1
  4842                           
  4843                           ;main.c: 407: size = ReceivedDataBuffer[3];
  4844  004642  C403  F3E0         	movff	_ReceivedDataBuffer+3,main@size
  4845                           
  4846                           ; BSR set to: 4
  4847                           ;main.c: 408: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00))
  4848  004646  0103               	movlb	3	; () banked
  4849  004648  51E1               	movf	main@shortaddress& (0+255),w,b
  4850  00464A  0103               	movlb	3	; () banked
  4851  00464C  A4D8               	btfss	status,2,c
  4852  00464E  D078               	goto	l21937
  4853                           
  4854                           ; BSR set to: 3
  4855  004650  0103               	movlb	3	; () banked
  4856  004652  51E2               	movf	(main@shortaddress+1)& (0+255),w,b
  4857  004654  A4D8               	btfss	status,2,c
  4858  004656  D074               	goto	l21937
  4859                           
  4860                           ; BSR set to: 3
  4861                           ;main.c: 409: {
  4862                           ;main.c: 411: if ((ReceivedDataBuffer[4] == 04) && (size > 2))
  4863  004658  0E04               	movlw	4
  4864  00465A  0104               	movlb	4	; () banked
  4865  00465C  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  4866  00465E  A4D8               	btfss	status,2,c
  4867  004660  D0BA               	goto	l21953
  4868                           
  4869                           ; BSR set to: 4
  4870  004662  0E02               	movlw	2
  4871  004664  0103               	movlb	3	; () banked
  4872  004666  65E0               	cpfsgt	main@size& (0+255),b
  4873  004668  D0B6               	goto	l21953
  4874                           
  4875                           ; BSR set to: 3
  4876                           ;main.c: 412: {
  4877                           ;main.c: 413: bool last_update = (ReceivedDataBuffer[5] == 0xff);
  4878  00466A  0104               	movlb	4	; () banked
  4879  00466C  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  4880  00466E  A4D8               	btfss	status,2,c
  4881  004670  D002               	goto	u24800
  4882  004672  0E01               	movlw	1
  4883  004674  D001               	goto	u24810
  4884  004676                     u24800:
  4885  004676  0E00               	movlw	0
  4886  004678                     u24810:
  4887  004678  0103               	movlb	3	; () banked
  4888  00467A  6FD7               	movwf	main@last_update& (0+255),b
  4889                           
  4890                           ;main.c: 415: p_buffer = &ReceivedDataBuffer[6];
  4891  00467C  0E06               	movlw	low (_ReceivedDataBuffer+6)
  4892  00467E  0101               	movlb	1	; () banked
  4893  004680  6FB9               	movwf	_p_buffer& (0+255),b
  4894  004682  0E04               	movlw	high (_ReceivedDataBuffer+6)
  4895  004684  0101               	movlb	1	; () banked
  4896  004686  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4897                           
  4898                           ;main.c: 416: while ((p_buffer - &ReceivedDataBuffer[6]) < (size - 2))
  4899  004688  D018               	goto	l21931
  4900  00468A                     l21925:
  4901                           
  4902                           ; BSR set to: 1
  4903                           ;main.c: 417: {
  4904                           ;main.c: 418: m_var = decode_variable(p_buffer);
  4905  00468A  C1B9  F10A         	movff	_p_buffer,decode_variable@p_buffer
  4906  00468E  C1BA  F10B         	movff	_p_buffer+1,decode_variable@p_buffer+1
  4907  004692  EC52  F04A         	call	_decode_variable	;wreg free
  4908  004696  EE21  F0DE         	lfsr	2,_m_var
  4909  00469A  0E09               	movlw	9
  4910  00469C                     u24821:
  4911  00469C  CFEB FFDB          	movff	plusw0,plusw2
  4912  0046A0  06E8               	decf	wreg,f,c
  4913  0046A2  E2FC               	bc	u24821
  4914                           
  4915                           ;main.c: 419: p_buffer += m_var.size;
  4916  0046A4  0101               	movlb	1	; () banked
  4917  0046A6  51E7               	movf	(_m_var+9)& (0+255),w,b
  4918  0046A8  0D01               	mullw	1
  4919  0046AA  50F3               	movf	prodl,w,c
  4920  0046AC  0101               	movlb	1	; () banked
  4921  0046AE  27B9               	addwf	_p_buffer& (0+255),f,b
  4922  0046B0  50F4               	movf	prodh,w,c
  4923  0046B2  0101               	movlb	1	; () banked
  4924  0046B4  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;main.c: 424: update_variable();
  4928  0046B6  ECBF  F04B         	call	_update_variable	;wreg free
  4929  0046BA                     l21931:
  4930  0046BA  0EFE               	movlw	254
  4931  0046BC  0101               	movlb	1	; () banked
  4932  0046BE  6F89               	movwf	??_main& (0+255),b
  4933  0046C0  0EFF               	movlw	255
  4934  0046C2  0101               	movlb	1	; () banked
  4935  0046C4  6F8A               	movwf	(??_main+1)& (0+255),b
  4936  0046C6  0103               	movlb	3	; () banked
  4937  0046C8  51E0               	movf	main@size& (0+255),w,b
  4938  0046CA  0101               	movlb	1	; () banked
  4939  0046CC  6F8B               	movwf	(??_main+2)& (0+255),b
  4940  0046CE  6B8C               	clrf	(??_main+3)& (0+255),b
  4941  0046D0  0101               	movlb	1	; () banked
  4942  0046D2  5189               	movf	??_main& (0+255),w,b
  4943  0046D4  0101               	movlb	1	; () banked
  4944  0046D6  278B               	addwf	(??_main+2)& (0+255),f,b
  4945  0046D8  0101               	movlb	1	; () banked
  4946  0046DA  518A               	movf	(??_main+1)& (0+255),w,b
  4947  0046DC  0101               	movlb	1	; () banked
  4948  0046DE  238C               	addwfc	(??_main+3)& (0+255),f,b
  4949  0046E0  0E00               	movlw	low _ReceivedDataBuffer
  4950  0046E2  0101               	movlb	1	; () banked
  4951  0046E4  6F8D               	movwf	(??_main+4)& (0+255),b
  4952  0046E6  0E04               	movlw	high _ReceivedDataBuffer
  4953  0046E8  0101               	movlb	1	; () banked
  4954  0046EA  6F8E               	movwf	(??_main+5)& (0+255),b
  4955  0046EC  0E06               	movlw	6
  4956  0046EE  0101               	movlb	1	; () banked
  4957  0046F0  278D               	addwf	(??_main+4)& (0+255),f,b
  4958  0046F2  0E00               	movlw	0
  4959  0046F4  238E               	addwfc	(??_main+5)& (0+255),f,b
  4960  0046F6  0101               	movlb	1	; () banked
  4961  0046F8  1F8D               	comf	(??_main+4)& (0+255),f,b
  4962  0046FA  1F8E               	comf	(??_main+5)& (0+255),f,b
  4963  0046FC  4B8D               	infsnz	(??_main+4)& (0+255),f,b
  4964  0046FE  2B8E               	incf	(??_main+5)& (0+255),f,b
  4965  004700  0101               	movlb	1	; () banked
  4966  004702  51B9               	movf	_p_buffer& (0+255),w,b
  4967  004704  0101               	movlb	1	; () banked
  4968  004706  278D               	addwf	(??_main+4)& (0+255),f,b
  4969  004708  0101               	movlb	1	; () banked
  4970  00470A  51BA               	movf	(_p_buffer+1)& (0+255),w,b
  4971  00470C  0101               	movlb	1	; () banked
  4972  00470E  238E               	addwfc	(??_main+5)& (0+255),f,b
  4973  004710  0101               	movlb	1	; () banked
  4974  004712  518B               	movf	(??_main+2)& (0+255),w,b
  4975  004714  0101               	movlb	1	; () banked
  4976  004716  5D8D               	subwf	(??_main+4)& (0+255),w,b
  4977  004718  0101               	movlb	1	; () banked
  4978  00471A  518E               	movf	(??_main+5)& (0+255),w,b
  4979  00471C  0A80               	xorlw	128
  4980  00471E  0101               	movlb	1	; () banked
  4981  004720  6F8F               	movwf	(??_main+6)& (0+255),b
  4982  004722  0101               	movlb	1	; () banked
  4983  004724  518C               	movf	(??_main+3)& (0+255),w,b
  4984  004726  0A80               	xorlw	128
  4985  004728  0101               	movlb	1	; () banked
  4986  00472A  598F               	subwfb	(??_main+6)& (0+255),w,b
  4987  00472C  A0D8               	btfss	status,0,c
  4988  00472E  D7AD               	goto	l21925
  4989                           
  4990                           ; BSR set to: 1
  4991                           ;main.c: 425: }
  4992                           ;main.c: 426: if (last_update)
  4993                           
  4994                           ; BSR set to: 1
  4995  004730  0103               	movlb	3	; () banked
  4996  004732  51D7               	movf	main@last_update& (0+255),w,b
  4997  004734  0103               	movlb	3	; () banked
  4998  004736  B4D8               	btfsc	status,2,c
  4999  004738  D04E               	goto	l21953
  5000                           
  5001                           ; BSR set to: 3
  5002                           ;main.c: 427: {
  5003                           ;main.c: 429: send_answer_to_update();
  5004  00473A  EC42  F03C         	call	_send_answer_to_update	;wreg free
  5005                           
  5006                           ;main.c: 430: }
  5007                           ;main.c: 431: }
  5008                           ;main.c: 432: }
  5009  00473E  D04B               	goto	l21953
  5010  004740                     l21937:
  5011                           
  5012                           ;main.c: 433: else
  5013                           ;main.c: 434: {
  5014                           ;main.c: 435: {TxData = 11;};
  5015  004740  0E0B               	movlw	11
  5016  004742  0101               	movlb	1	; () banked
  5017  004744  6FC6               	movwf	_TxData& (0+255),b
  5018                           
  5019                           ; BSR set to: 1
  5020                           ;main.c: 436: memcpy(&TxBuffer[TxData], &ReceivedDataBuffer[4], size);
  5021  004746  0101               	movlb	1	; () banked
  5022  004748  51C6               	movf	_TxData& (0+255),w,b
  5023  00474A  0D01               	mullw	1
  5024  00474C  0EA6               	movlw	low _TxBuffer
  5025  00474E  24F3               	addwf	prodl,w,c
  5026  004750  0101               	movlb	1	; () banked
  5027  004752  6F00               	movwf	memcpy@d1& (0+255),b
  5028  004754  0E02               	movlw	high _TxBuffer
  5029  004756  20F4               	addwfc	prodh,w,c
  5030  004758  0101               	movlb	1	; () banked
  5031  00475A  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  5032  00475C  0E04               	movlw	low (_ReceivedDataBuffer+4)
  5033  00475E  0101               	movlb	1	; () banked
  5034  004760  6F02               	movwf	memcpy@s1& (0+255),b
  5035  004762  0E04               	movlw	high (_ReceivedDataBuffer+4)
  5036  004764  0101               	movlb	1	; () banked
  5037  004766  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  5038  004768  C3E0  F104         	movff	main@size,memcpy@n
  5039  00476C  0101               	movlb	1	; () banked
  5040  00476E  6B05               	clrf	(memcpy@n+1)& (0+255),b
  5041  004770  EC96  F059         	call	_memcpy	;wreg free
  5042                           
  5043                           ;main.c: 437: TxData = TxData + size;
  5044  004774  0101               	movlb	1	; () banked
  5045  004776  51C6               	movf	_TxData& (0+255),w,b
  5046  004778  0103               	movlb	3	; () banked
  5047  00477A  25E0               	addwf	main@size& (0+255),w,b
  5048  00477C  0101               	movlb	1	; () banked
  5049  00477E  6FC6               	movwf	_TxData& (0+255),b
  5050                           
  5051                           ; BSR set to: 1
  5052                           ;main.c: 438: if (ReceivedDataBuffer[4] == 02)
  5053  004780  0E02               	movlw	2
  5054  004782  0104               	movlb	4	; () banked
  5055  004784  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  5056  004786  A4D8               	btfss	status,2,c
  5057  004788  D00F               	goto	l21947
  5058                           
  5059                           ; BSR set to: 4
  5060                           ;main.c: 440: MiApp_UnicastAddress(&shortaddress, 0, 0) == 1;
  5061  00478A  0EE1               	movlw	low main@shortaddress
  5062  00478C  0101               	movlb	1	; () banked
  5063  00478E  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  5064  004790  0E03               	movlw	high main@shortaddress
  5065  004792  0101               	movlb	1	; () banked
  5066  004794  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  5067  004796  0E00               	movlw	0
  5068  004798  0101               	movlb	1	; () banked
  5069  00479A  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  5070  00479C  0E00               	movlw	0
  5071  00479E  0101               	movlb	1	; () banked
  5072  0047A0  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  5073  0047A2  ECE0  F02E         	call	_MiApp_UnicastAddress	;wreg free
  5074  0047A6  D017               	goto	l21953
  5075  0047A8                     l21947:
  5076                           
  5077                           ;main.c: 441: else
  5078                           ;main.c: 442: MiApp_UnicastAddress(&shortaddress, 0, 1);
  5079  0047A8  0EE1               	movlw	low main@shortaddress
  5080  0047AA  0101               	movlb	1	; () banked
  5081  0047AC  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  5082  0047AE  0E03               	movlw	high main@shortaddress
  5083  0047B0  0101               	movlb	1	; () banked
  5084  0047B2  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  5085  0047B4  0E00               	movlw	0
  5086  0047B6  0101               	movlb	1	; () banked
  5087  0047B8  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  5088  0047BA  0E01               	movlw	1
  5089  0047BC  0101               	movlb	1	; () banked
  5090  0047BE  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  5091  0047C0  ECE0  F02E         	call	_MiApp_UnicastAddress	;wreg free
  5092                           
  5093                           ;main.c: 452: }
  5094                           
  5095                           ;main.c: 451: break;
  5096                           
  5097                           ;main.c: 449: default:
  5098                           
  5099                           ;main.c: 447: }
  5100                           ;main.c: 448: break;
  5101  0047C4  D008               	goto	l21953
  5102  0047C6                     l21951:
  5103  0047C6  0104               	movlb	4	; () banked
  5104  0047C8  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  5105                           
  5106                           ; Switch size 1, requested type "space"
  5107                           ; Number of cases is 2, Range of values is 83 to 88
  5108                           ; switch strategies available:
  5109                           ; Name         Instructions Cycles
  5110                           ; simple_byte            7     4 (average)
  5111                           ;	Chosen strategy is simple_byte
  5112  0047CA  0A53               	xorlw	83	; case 83
  5113  0047CC  B4D8               	btfsc	status,2,c
  5114  0047CE  D735               	goto	l1781
  5115  0047D0  0A0B               	xorlw	11	; case 88
  5116  0047D2  B4D8               	btfsc	status,2,c
  5117  0047D4  D730               	goto	l1779
  5118  0047D6                     l21953:
  5119                           
  5120                           ;main.c: 454: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  5121  0047D6  0E00               	movlw	0
  5122  0047D8  0101               	movlb	1	; () banked
  5123  0047DA  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  5124  0047DC  0E00               	movlw	low _ReceivedDataBuffer
  5125  0047DE  0101               	movlb	1	; () banked
  5126  0047E0  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  5127  0047E2  0E04               	movlw	high _ReceivedDataBuffer
  5128  0047E4  0101               	movlb	1	; () banked
  5129  0047E6  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5130  0047E8  0E40               	movlw	64
  5131  0047EA  0101               	movlb	1	; () banked
  5132  0047EC  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  5133  0047EE  0E01               	movlw	1
  5134  0047F0  ECA6  F04C         	call	_USBTransferOnePacket
  5135  0047F4  C100  F1B7         	movff	?_USBTransferOnePacket,_USBOutHandle
  5136  0047F8  C101  F1B8         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  5137                           
  5138                           ;main.c: 455: }
  5139  0047FC  D4F3               	goto	l21803
  5140  0047FE                     l21955:
  5141                           
  5142                           ;main.c: 459: else if (timer_flag == 1)
  5143  0047FE  0101               	movlb	1	; () banked
  5144  004800  05CB               	decf	_timer_flag& (0+255),w,b	;volatile
  5145  004802  A4D8               	btfss	status,2,c
  5146  004804  D4EF               	goto	l21803
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;main.c: 460: {
  5150                           ;main.c: 461: send_periodic_update();
  5151  004806  ECD2  F038         	call	_send_periodic_update	;wreg free
  5152                           
  5153                           ;main.c: 462: timer_flag = 0;
  5154  00480A  0E00               	movlw	0
  5155  00480C  0101               	movlb	1	; () banked
  5156  00480E  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  5157                           
  5158                           ; BSR set to: 1
  5159                           
  5160                           ; BSR set to: 1
  5161                           
  5162                           ; BSR set to: 1
  5163                           
  5164                           ; BSR set to: 1
  5165  004810  D4E9               	goto	l21803
  5166  004812                     __end_of_main:
  5167                           	opt stack 0
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           postinc0	equ	0xFEE
  5175                           plusw0	equ	0xFEB
  5176                           wreg	equ	0xFE8
  5177                           postdec1	equ	0xFE5
  5178                           fsr1h	equ	0xFE2
  5179                           fsr1l	equ	0xFE1
  5180                           indf2	equ	0xFDF
  5181                           plusw2	equ	0xFDB
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _update_variable *****************
  5187 ;; Defined at:
  5188 ;;		line 609 in file "src/main.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;		None               void
  5195 ;; Registers used:
  5196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:   19
  5209 ;; This function calls:
  5210 ;;		_MiMAC_SetPower
  5211 ;;		_RtccWrOn
  5212 ;;		_labelcmp
  5213 ;;		_mW_ufixed16_to_dBm
  5214 ;; This function is called by:
  5215 ;;		_main
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text1
  5220  00977E                     __ptext1:
  5221                           	opt stack 0
  5222  00977E                     _update_variable:
  5223                           	opt stack 11
  5224                           
  5225                           ;main.c: 612: if (labelcmp(m_var.label, (uint8_t*)POWER_LABEL) == 1)
  5226                           
  5227                           ;incstack = 0
  5228  00977E  0EDE               	movlw	low _m_var
  5229  009780  0101               	movlb	1	; () banked
  5230  009782  6F00               	movwf	labelcmp@p1& (0+255),b
  5231  009784  0E01               	movlw	high _m_var
  5232  009786  0101               	movlb	1	; () banked
  5233  009788  6F01               	movwf	(labelcmp@p1+1)& (0+255),b
  5234  00978A  0EC1               	movlw	low _POWER_LABEL
  5235  00978C  0101               	movlb	1	; () banked
  5236  00978E  6F02               	movwf	labelcmp@p2& (0+255),b
  5237  009790  0E21               	movlw	high _POWER_LABEL
  5238  009792  0101               	movlb	1	; () banked
  5239  009794  6F03               	movwf	(labelcmp@p2+1)& (0+255),b
  5240  009796  EC2E  F053         	call	_labelcmp	;wreg free
  5241  00979A  06E8               	decf	wreg,f,c
  5242  00979C  A4D8               	btfss	status,2,c
  5243  00979E  D010               	goto	l21051
  5244                           
  5245                           ;main.c: 613: {
  5246                           ;main.c: 614: m_power = mW_ufixed16_to_dBm(m_var.value_byte1, m_var.value_byte2);
  5247  0097A0  C1E3  F100         	movff	_m_var+5,mW_ufixed16_to_dBm@value2
  5248  0097A4  0101               	movlb	1	; () banked
  5249  0097A6  51E2               	movf	(_m_var+4)& (0+255),w,b
  5250  0097A8  EC18  F04F         	call	_mW_ufixed16_to_dBm
  5251  0097AC  0101               	movlb	1	; () banked
  5252  0097AE  6FC8               	movwf	_m_power& (0+255),b
  5253                           
  5254                           ;main.c: 615: MiMAC_SetPower(m_power);
  5255  0097B0  0101               	movlb	1	; () banked
  5256  0097B2  51C8               	movf	_m_power& (0+255),w,b
  5257  0097B4  EC2F  F05C         	call	_MiMAC_SetPower
  5258                           
  5259                           ;main.c: 616: Pwr_updated = 1;
  5260  0097B8  0E01               	movlw	1
  5261  0097BA  0100               	movlb	0	; () banked
  5262  0097BC  6F9A               	movwf	_Pwr_updated& (0+255),b
  5263                           
  5264                           ;main.c: 617: }
  5265  0097BE  0012               	return	
  5266  0097C0                     l21051:
  5267                           
  5268                           ;main.c: 618: else if ((labelcmp(m_var.label, (uint8_t*)UPDATE_FREQUENCY_LABEL) == 1) &&
      +                           (m_var.unit == 4) && (m_var.type == 0))
  5269  0097C0  0EDE               	movlw	low _m_var
  5270  0097C2  0101               	movlb	1	; () banked
  5271  0097C4  6F00               	movwf	labelcmp@p1& (0+255),b
  5272  0097C6  0E01               	movlw	high _m_var
  5273  0097C8  0101               	movlb	1	; () banked
  5274  0097CA  6F01               	movwf	(labelcmp@p1+1)& (0+255),b
  5275  0097CC  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
  5276  0097CE  0101               	movlb	1	; () banked
  5277  0097D0  6F02               	movwf	labelcmp@p2& (0+255),b
  5278  0097D2  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  5279  0097D4  0101               	movlb	1	; () banked
  5280  0097D6  6F03               	movwf	(labelcmp@p2+1)& (0+255),b
  5281  0097D8  EC2E  F053         	call	_labelcmp	;wreg free
  5282  0097DC  06E8               	decf	wreg,f,c
  5283  0097DE  A4D8               	btfss	status,2,c
  5284  0097E0  0012               	return	
  5285  0097E2  0E04               	movlw	4
  5286  0097E4  0101               	movlb	1	; () banked
  5287  0097E6  19E4               	xorwf	(_m_var+6)& (0+255),w,b
  5288  0097E8  A4D8               	btfss	status,2,c
  5289  0097EA  0012               	return	
  5290                           
  5291                           ; BSR set to: 1
  5292  0097EC  0101               	movlb	1	; () banked
  5293  0097EE  51E1               	movf	(_m_var+3)& (0+255),w,b
  5294  0097F0  A4D8               	btfss	status,2,c
  5295  0097F2  0012               	return	
  5296                           
  5297                           ; BSR set to: 1
  5298                           ;main.c: 620: {
  5299                           ;main.c: 621: if (m_var.value_byte1 == 0)
  5300  0097F4  0101               	movlb	1	; () banked
  5301  0097F6  51E2               	movf	(_m_var+4)& (0+255),w,b
  5302  0097F8  A4D8               	btfss	status,2,c
  5303  0097FA  D019               	goto	l1815
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;main.c: 622: {
  5307                           ;main.c: 623: m_update_frequency = 0;
  5308  0097FC  0E00               	movlw	0
  5309  0097FE  0101               	movlb	1	; () banked
  5310  009800  6FFA               	movwf	_m_update_frequency& (0+255),b	;volatile
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;main.c: 624: RtccWrOn();
  5314  009802  ECC3  F05D         	call	_RtccWrOn	;wreg free
  5315                           
  5316                           ;main.c: 625: RTCCFGbits.RTCPTR0 = 0;
  5317  009806  010F               	movlb	15	; () banked
  5318  009808  913F               	bcf	63,0,b	;volatile
  5319                           
  5320                           ; BSR set to: 15
  5321                           ;main.c: 626: RTCCFGbits.RTCPTR1 = 0;
  5322  00980A  010F               	movlb	15	; () banked
  5323  00980C  933F               	bcf	63,1,b	;volatile
  5324                           
  5325                           ; BSR set to: 15
  5326                           ;main.c: 627: RTCVALHbits.RTCVALH = 0x00;
  5327  00980E  0E00               	movlw	0
  5328  009810  010F               	movlb	15	; () banked
  5329  009812  6F3B               	movwf	59,b	;volatile
  5330                           
  5331                           ; BSR set to: 15
  5332                           ;main.c: 628: RTCVALLbits.RTCVALL = 0x00;
  5333  009814  0E00               	movlw	0
  5334  009816  010F               	movlb	15	; () banked
  5335  009818  6F3A               	movwf	58,b	;volatile
  5336                           
  5337                           ; BSR set to: 15
  5338                           ;main.c: 629: ALRMCFGbits.AMASK = 0b0010;
  5339  00981A  010F               	movlb	15	; () banked
  5340  00981C  5147               	movf	71,w,b	;volatile
  5341  00981E  0BC3               	andlw	-61
  5342  009820  0908               	iorlw	8
  5343  009822  6F47               	movwf	71,b	;volatile
  5344                           
  5345                           ; BSR set to: 15
  5346                           ;main.c: 630: (RTCCFGbits.RTCWREN = 0);
  5347  009824  010F               	movlb	15	; () banked
  5348  009826  9B3F               	bcf	63,5,b	;volatile
  5349                           
  5350                           ; BSR set to: 15
  5351                           ;main.c: 631: timer_count = 1;
  5352  009828  0E01               	movlw	1
  5353  00982A  6E5D               	movwf	_timer_count,c	;volatile
  5354  00982C  D017               	goto	l21095
  5355  00982E                     l1815:
  5356                           
  5357                           ; BSR set to: 1
  5358                           ;main.c: 634: else
  5359                           ;main.c: 635: {
  5360                           ;main.c: 636: m_update_frequency = m_var.value_byte1;
  5361  00982E  C1E2  F1FA         	movff	_m_var+4,_m_update_frequency	;volatile
  5362                           
  5363                           ; BSR set to: 1
  5364                           ;main.c: 637: RtccWrOn();
  5365  009832  ECC3  F05D         	call	_RtccWrOn	;wreg free
  5366                           
  5367                           ;main.c: 638: RTCCFGbits.RTCPTR0 = 0;
  5368  009836  010F               	movlb	15	; () banked
  5369  009838  913F               	bcf	63,0,b	;volatile
  5370                           
  5371                           ; BSR set to: 15
  5372                           ;main.c: 639: RTCCFGbits.RTCPTR1 = 0;
  5373  00983A  010F               	movlb	15	; () banked
  5374  00983C  933F               	bcf	63,1,b	;volatile
  5375                           
  5376                           ; BSR set to: 15
  5377                           ;main.c: 640: RTCVALHbits.RTCVALH = 0x00;
  5378  00983E  0E00               	movlw	0
  5379  009840  010F               	movlb	15	; () banked
  5380  009842  6F3B               	movwf	59,b	;volatile
  5381                           
  5382                           ; BSR set to: 15
  5383                           ;main.c: 641: RTCVALLbits.RTCVALL = 0x00;
  5384  009844  0E00               	movlw	0
  5385  009846  010F               	movlb	15	; () banked
  5386  009848  6F3A               	movwf	58,b	;volatile
  5387                           
  5388                           ; BSR set to: 15
  5389                           ;main.c: 642: ALRMCFGbits.AMASK = 0b0011;
  5390  00984A  010F               	movlb	15	; () banked
  5391  00984C  5147               	movf	71,w,b	;volatile
  5392  00984E  0BC3               	andlw	-61
  5393  009850  090C               	iorlw	12
  5394  009852  6F47               	movwf	71,b	;volatile
  5395                           
  5396                           ; BSR set to: 15
  5397                           ;main.c: 643: (RTCCFGbits.RTCWREN = 0);
  5398  009854  010F               	movlb	15	; () banked
  5399  009856  9B3F               	bcf	63,5,b	;volatile
  5400                           
  5401                           ; BSR set to: 15
  5402                           ;main.c: 644: timer_count = m_update_frequency;
  5403  009858  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
  5404  00985C                     l21095:
  5405                           
  5406                           ; BSR set to: 15
  5407                           ;main.c: 645: timer_flag = 0;
  5408  00985C  0E00               	movlw	0
  5409  00985E  0101               	movlb	1	; () banked
  5410  009860  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  5411                           
  5412                           ; BSR set to: 1
  5413                           ;main.c: 646: }
  5414                           ;main.c: 647: UpF_updated = 1;
  5415                           
  5416                           ; BSR set to: 1
  5417  009862  0E01               	movlw	1
  5418  009864  0100               	movlb	0	; () banked
  5419  009866  6F9E               	movwf	_UpF_updated& (0+255),b
  5420                           
  5421                           ; BSR set to: 0
  5422  009868  0012               	return	
  5423  00986A                     __end_of_update_variable:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           postinc0	equ	0xFEE
  5432                           plusw0	equ	0xFEB
  5433                           wreg	equ	0xFE8
  5434                           postdec1	equ	0xFE5
  5435                           fsr1h	equ	0xFE2
  5436                           fsr1l	equ	0xFE1
  5437                           indf2	equ	0xFDF
  5438                           plusw2	equ	0xFDB
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function _mW_ufixed16_to_dBm *****************
  5444 ;; Defined at:
  5445 ;;		line 22 in file "../../muta/muta_messages.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  value1          1    wreg     unsigned char 
  5448 ;;  value2          1    0[BANK1 ] unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  value1          1    1[BANK1 ] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5460 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5464 ;;Total ram usage:        2 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:   16
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_update_variable
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text2
  5475  009E30                     __ptext2:
  5476                           	opt stack 0
  5477  009E30                     _mW_ufixed16_to_dBm:
  5478                           	opt stack 13
  5479                           
  5480                           ;incstack = 0
  5481                           ;mW_ufixed16_to_dBm@value1 stored from wreg
  5482  009E30  0101               	movlb	1	; () banked
  5483  009E32  6F01               	movwf	mW_ufixed16_to_dBm@value1& (0+255),b
  5484                           
  5485                           ;muta_messages.c: 24: if (value1==20 && value2==0)
  5486  009E34  0E14               	movlw	20
  5487  009E36  0101               	movlb	1	; () banked
  5488  009E38  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5489  009E3A  A4D8               	btfss	status,2,c
  5490  009E3C  D007               	goto	l19347
  5491                           
  5492                           ; BSR set to: 1
  5493  009E3E  0101               	movlb	1	; () banked
  5494  009E40  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5495  009E42  0101               	movlb	1	; () banked
  5496  009E44  A4D8               	btfss	status,2,c
  5497  009E46  D002               	goto	l19347
  5498                           
  5499                           ; BSR set to: 1
  5500                           ;muta_messages.c: 25: return 0x00;
  5501  009E48  0E00               	movlw	0
  5502                           
  5503                           ; BSR set to: 1
  5504                           
  5505                           ; BSR set to: 1
  5506  009E4A  0012               	return	
  5507  009E4C                     l19347:
  5508                           
  5509                           ; BSR set to: 1
  5510                           ;muta_messages.c: 26: else if (value1==10 && value2==0)
  5511  009E4C  0E0A               	movlw	10
  5512  009E4E  0101               	movlb	1	; () banked
  5513  009E50  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5514  009E52  A4D8               	btfss	status,2,c
  5515  009E54  D007               	goto	l19357
  5516                           
  5517                           ; BSR set to: 1
  5518  009E56  0101               	movlb	1	; () banked
  5519  009E58  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5520  009E5A  0101               	movlb	1	; () banked
  5521  009E5C  A4D8               	btfss	status,2,c
  5522  009E5E  D002               	goto	l19357
  5523                           
  5524                           ; BSR set to: 1
  5525                           ;muta_messages.c: 27: return 0x01;
  5526  009E60  0E01               	movlw	1
  5527                           
  5528                           ; BSR set to: 1
  5529                           
  5530                           ; BSR set to: 1
  5531  009E62  0012               	return	
  5532  009E64                     l19357:
  5533                           
  5534                           ; BSR set to: 1
  5535                           ;muta_messages.c: 28: else if (value1==5 && value2==0)
  5536  009E64  0E05               	movlw	5
  5537  009E66  0101               	movlb	1	; () banked
  5538  009E68  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5539  009E6A  A4D8               	btfss	status,2,c
  5540  009E6C  D007               	goto	l19367
  5541                           
  5542                           ; BSR set to: 1
  5543  009E6E  0101               	movlb	1	; () banked
  5544  009E70  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5545  009E72  0101               	movlb	1	; () banked
  5546  009E74  A4D8               	btfss	status,2,c
  5547  009E76  D002               	goto	l19367
  5548                           
  5549                           ; BSR set to: 1
  5550                           ;muta_messages.c: 29: return 0x02;
  5551  009E78  0E02               	movlw	2
  5552                           
  5553                           ; BSR set to: 1
  5554                           
  5555                           ; BSR set to: 1
  5556  009E7A  0012               	return	
  5557  009E7C                     l19367:
  5558                           
  5559                           ; BSR set to: 1
  5560                           ;muta_messages.c: 30: else if (value1==2 && value2==50)
  5561  009E7C  0E02               	movlw	2
  5562  009E7E  0101               	movlb	1	; () banked
  5563  009E80  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5564  009E82  A4D8               	btfss	status,2,c
  5565  009E84  D007               	goto	l19377
  5566                           
  5567                           ; BSR set to: 1
  5568  009E86  0E32               	movlw	50
  5569  009E88  0101               	movlb	1	; () banked
  5570  009E8A  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5571  009E8C  A4D8               	btfss	status,2,c
  5572  009E8E  D002               	goto	l19377
  5573                           
  5574                           ; BSR set to: 1
  5575                           ;muta_messages.c: 31: return 0x03;
  5576  009E90  0E03               	movlw	3
  5577                           
  5578                           ; BSR set to: 1
  5579                           
  5580                           ; BSR set to: 1
  5581  009E92  0012               	return	
  5582  009E94                     l19377:
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;muta_messages.c: 32: else if (value1==1 && value2==25)
  5586  009E94  0101               	movlb	1	; () banked
  5587  009E96  0501               	decf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5588  009E98  A4D8               	btfss	status,2,c
  5589  009E9A  D007               	goto	l19387
  5590                           
  5591                           ; BSR set to: 1
  5592  009E9C  0E19               	movlw	25
  5593  009E9E  0101               	movlb	1	; () banked
  5594  009EA0  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5595  009EA2  A4D8               	btfss	status,2,c
  5596  009EA4  D002               	goto	l19387
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;muta_messages.c: 33: return 0x04;
  5600  009EA6  0E04               	movlw	4
  5601                           
  5602                           ; BSR set to: 1
  5603                           
  5604                           ; BSR set to: 1
  5605  009EA8  0012               	return	
  5606  009EAA                     l19387:
  5607                           
  5608                           ; BSR set to: 1
  5609                           ;muta_messages.c: 34: else if (value1==0 && value2==60)
  5610  009EAA  0101               	movlb	1	; () banked
  5611  009EAC  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5612  009EAE  0101               	movlb	1	; () banked
  5613  009EB0  A4D8               	btfss	status,2,c
  5614  009EB2  D007               	goto	l19397
  5615                           
  5616                           ; BSR set to: 1
  5617  009EB4  0E3C               	movlw	60
  5618  009EB6  0101               	movlb	1	; () banked
  5619  009EB8  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5620  009EBA  A4D8               	btfss	status,2,c
  5621  009EBC  D002               	goto	l19397
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;muta_messages.c: 35: return 0x05;
  5625  009EBE  0E05               	movlw	5
  5626                           
  5627                           ; BSR set to: 1
  5628                           
  5629                           ; BSR set to: 1
  5630  009EC0  0012               	return	
  5631  009EC2                     l19397:
  5632                           
  5633                           ; BSR set to: 1
  5634                           ;muta_messages.c: 36: else if (value1==0 && value2==30)
  5635  009EC2  0101               	movlb	1	; () banked
  5636  009EC4  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5637  009EC6  0101               	movlb	1	; () banked
  5638  009EC8  A4D8               	btfss	status,2,c
  5639  009ECA  D007               	goto	l19407
  5640                           
  5641                           ; BSR set to: 1
  5642  009ECC  0E1E               	movlw	30
  5643  009ECE  0101               	movlb	1	; () banked
  5644  009ED0  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5645  009ED2  A4D8               	btfss	status,2,c
  5646  009ED4  D002               	goto	l19407
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;muta_messages.c: 37: return 0x06;
  5650  009ED6  0E06               	movlw	6
  5651                           
  5652                           ; BSR set to: 1
  5653                           
  5654                           ; BSR set to: 1
  5655  009ED8  0012               	return	
  5656  009EDA                     l19407:
  5657                           
  5658                           ; BSR set to: 1
  5659                           ;muta_messages.c: 38: else if (value1==0 && value2==15)
  5660  009EDA  0101               	movlb	1	; () banked
  5661  009EDC  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5662  009EDE  0101               	movlb	1	; () banked
  5663  009EE0  A4D8               	btfss	status,2,c
  5664  009EE2  D007               	goto	l19417
  5665                           
  5666                           ; BSR set to: 1
  5667  009EE4  0E0F               	movlw	15
  5668  009EE6  0101               	movlb	1	; () banked
  5669  009EE8  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5670  009EEA  A4D8               	btfss	status,2,c
  5671  009EEC  D002               	goto	l19417
  5672                           
  5673                           ; BSR set to: 1
  5674                           ;muta_messages.c: 39: return 0x07;
  5675  009EEE  0E07               	movlw	7
  5676                           
  5677                           ; BSR set to: 1
  5678                           
  5679                           ; BSR set to: 1
  5680  009EF0  0012               	return	
  5681  009EF2                     l19417:
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;muta_messages.c: 40: else
  5685                           ;muta_messages.c: 41: return 0x07;
  5686  009EF2  0E07               	movlw	7
  5687                           
  5688                           ; BSR set to: 1
  5689                           
  5690                           ; BSR set to: 1
  5691                           
  5692                           ; BSR set to: 1
  5693                           
  5694                           ; BSR set to: 1
  5695                           
  5696                           ; BSR set to: 1
  5697                           
  5698                           ; BSR set to: 1
  5699                           
  5700                           ; BSR set to: 1
  5701                           
  5702                           ; BSR set to: 1
  5703  009EF4  0012               	return	
  5704  009EF6                     __end_of_mW_ufixed16_to_dBm:
  5705                           	opt stack 0
  5706                           tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           prodh	equ	0xFF4
  5711                           prodl	equ	0xFF3
  5712                           postinc0	equ	0xFEE
  5713                           plusw0	equ	0xFEB
  5714                           wreg	equ	0xFE8
  5715                           postdec1	equ	0xFE5
  5716                           fsr1h	equ	0xFE2
  5717                           fsr1l	equ	0xFE1
  5718                           indf2	equ	0xFDF
  5719                           plusw2	equ	0xFDB
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function _labelcmp *****************
  5725 ;; Defined at:
  5726 ;;		line 16 in file "../../muta/muta_messages.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  p1              2    0[BANK1 ] PTR unsigned char 
  5729 ;;		 -> m_var(10), 
  5730 ;;  p2              2    2[BANK1 ] PTR unsigned char 
  5731 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      unsigned char 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5743 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;Total ram usage:        8 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:   16
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_update_variable
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text3
  5758  00A65C                     __ptext3:
  5759                           	opt stack 0
  5760  00A65C                     _labelcmp:
  5761                           	opt stack 13
  5762                           
  5763                           ;muta_messages.c: 18: return (*p1==*p2)&&(*(p1+1)==*(p2+1))&&(*(p1+2)==*(p2+2));
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;incstack = 0
  5767  00A65C  0E00               	movlw	0
  5768  00A65E  0101               	movlb	1	; () banked
  5769  00A660  6F07               	movwf	_labelcmp$5116& (0+255),b
  5770                           
  5771                           ; BSR set to: 1
  5772  00A662  C100  FFD9         	movff	labelcmp@p1,fsr2l
  5773  00A666  C101  FFDA         	movff	labelcmp@p1+1,fsr2h
  5774  00A66A  50DF               	movf	indf2,w,c
  5775  00A66C  0101               	movlb	1	; () banked
  5776  00A66E  6F04               	movwf	??_labelcmp& (0+255),b
  5777  00A670  C102  FFF6         	movff	labelcmp@p2,tblptrl
  5778  00A674  C103  FFF7         	movff	labelcmp@p2+1,tblptrh
  5779  00A678                     	if	0	;tblptru may be non-zero
  5780  00A678                     	endif
  5781  00A678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5782  00A678  0E00               	movlw	low (__mediumconst shr (0+16))
  5783  00A67A  6EF8               	movwf	tblptru,c
  5784  00A67C                     	endif
  5785  00A67C  0008               	tblrd		*
  5786  00A67E  50F5               	movf	tablat,w,c
  5787  00A680  0101               	movlb	1	; () banked
  5788  00A682  1904               	xorwf	??_labelcmp& (0+255),w,b
  5789  00A684  A4D8               	btfss	status,2,c
  5790  00A686  D043               	goto	l1982
  5791                           
  5792                           ; BSR set to: 1
  5793  00A688  0101               	movlb	1	; () banked
  5794  00A68A  EE20 F001          	lfsr	2,1
  5795  00A68E  5100               	movf	labelcmp@p1& (0+255),w,b
  5796  00A690  26D9               	addwf	fsr2l,f,c
  5797  00A692  5101               	movf	(labelcmp@p1+1)& (0+255),w,b
  5798  00A694  22DA               	addwfc	fsr2h,f,c
  5799  00A696  50DF               	movf	indf2,w,c
  5800  00A698  0101               	movlb	1	; () banked
  5801  00A69A  6F04               	movwf	??_labelcmp& (0+255),b
  5802  00A69C  0E01               	movlw	1
  5803  00A69E  0101               	movlb	1	; () banked
  5804  00A6A0  2502               	addwf	labelcmp@p2& (0+255),w,b
  5805  00A6A2  0101               	movlb	1	; () banked
  5806  00A6A4  6F05               	movwf	(??_labelcmp+1)& (0+255),b
  5807  00A6A6  0E00               	movlw	0
  5808  00A6A8  0101               	movlb	1	; () banked
  5809  00A6AA  2103               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  5810  00A6AC  0101               	movlb	1	; () banked
  5811  00A6AE  6F06               	movwf	(??_labelcmp+2)& (0+255),b
  5812  00A6B0  C105  FFF6         	movff	??_labelcmp+1,tblptrl
  5813  00A6B4  C106  FFF7         	movff	??_labelcmp+2,tblptrh
  5814  00A6B8                     	if	0	;tblptru may be non-zero
  5815  00A6B8                     	endif
  5816  00A6B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5817  00A6B8  0E00               	movlw	low (__mediumconst shr (0+16))
  5818  00A6BA  6EF8               	movwf	tblptru,c
  5819  00A6BC                     	endif
  5820  00A6BC  0008               	tblrd		*
  5821  00A6BE  50F5               	movf	tablat,w,c
  5822  00A6C0  0101               	movlb	1	; () banked
  5823  00A6C2  1904               	xorwf	??_labelcmp& (0+255),w,b
  5824  00A6C4  A4D8               	btfss	status,2,c
  5825  00A6C6  D023               	goto	l1982
  5826                           
  5827                           ; BSR set to: 1
  5828  00A6C8  0101               	movlb	1	; () banked
  5829  00A6CA  EE20 F002          	lfsr	2,2
  5830  00A6CE  5100               	movf	labelcmp@p1& (0+255),w,b
  5831  00A6D0  26D9               	addwf	fsr2l,f,c
  5832  00A6D2  5101               	movf	(labelcmp@p1+1)& (0+255),w,b
  5833  00A6D4  22DA               	addwfc	fsr2h,f,c
  5834  00A6D6  50DF               	movf	indf2,w,c
  5835  00A6D8  0101               	movlb	1	; () banked
  5836  00A6DA  6F04               	movwf	??_labelcmp& (0+255),b
  5837  00A6DC  0E02               	movlw	2
  5838  00A6DE  0101               	movlb	1	; () banked
  5839  00A6E0  2502               	addwf	labelcmp@p2& (0+255),w,b
  5840  00A6E2  0101               	movlb	1	; () banked
  5841  00A6E4  6F05               	movwf	(??_labelcmp+1)& (0+255),b
  5842  00A6E6  0E00               	movlw	0
  5843  00A6E8  0101               	movlb	1	; () banked
  5844  00A6EA  2103               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  5845  00A6EC  0101               	movlb	1	; () banked
  5846  00A6EE  6F06               	movwf	(??_labelcmp+2)& (0+255),b
  5847  00A6F0  C105  FFF6         	movff	??_labelcmp+1,tblptrl
  5848  00A6F4  C106  FFF7         	movff	??_labelcmp+2,tblptrh
  5849  00A6F8                     	if	0	;tblptru may be non-zero
  5850  00A6F8                     	endif
  5851  00A6F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5852  00A6F8  0E00               	movlw	low (__mediumconst shr (0+16))
  5853  00A6FA  6EF8               	movwf	tblptru,c
  5854  00A6FC                     	endif
  5855  00A6FC  0008               	tblrd		*
  5856  00A6FE  50F5               	movf	tablat,w,c
  5857  00A700  0101               	movlb	1	; () banked
  5858  00A702  1904               	xorwf	??_labelcmp& (0+255),w,b
  5859  00A704  A4D8               	btfss	status,2,c
  5860  00A706  D003               	goto	l1982
  5861                           
  5862                           ; BSR set to: 1
  5863  00A708  0E01               	movlw	1
  5864  00A70A  0101               	movlb	1	; () banked
  5865  00A70C  6F07               	movwf	_labelcmp$5116& (0+255),b
  5866  00A70E                     l1982:
  5867                           
  5868                           ; BSR set to: 1
  5869  00A70E  0101               	movlb	1	; () banked
  5870  00A710  5107               	movf	_labelcmp$5116& (0+255),w,b
  5871  00A712  0012               	return	
  5872  00A714                     __end_of_labelcmp:
  5873                           	opt stack 0
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           postinc0	equ	0xFEE
  5881                           plusw0	equ	0xFEB
  5882                           wreg	equ	0xFE8
  5883                           postdec1	equ	0xFE5
  5884                           fsr1h	equ	0xFE2
  5885                           fsr1l	equ	0xFE1
  5886                           indf2	equ	0xFDF
  5887                           plusw2	equ	0xFDB
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function _MiMAC_SetPower *****************
  5893 ;; Defined at:
  5894 ;;		line 537 in file "src/miwi/drv_mrf_miwi_89xa.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  outputPower     1    wreg     unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  outputPower     1    8[BANK1 ] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      unsigned char 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5909 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5910 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5911 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5912 ;;Total ram usage:        3 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:   18
  5915 ;; This function calls:
  5916 ;;		_RegisterSet
  5917 ;; This function is called by:
  5918 ;;		_main
  5919 ;;		_update_variable
  5920 ;;		_adapt_power_level
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text4
  5925  00B85E                     __ptext4:
  5926                           	opt stack 0
  5927  00B85E                     _MiMAC_SetPower:
  5928                           	opt stack 11
  5929                           
  5930                           ; BSR set to: 1
  5931                           ;incstack = 0
  5932                           ;MiMAC_SetPower@outputPower stored from wreg
  5933  00B85E  0101               	movlb	1	; () banked
  5934  00B860  6F08               	movwf	MiMAC_SetPower@outputPower& (0+255),b
  5935                           
  5936                           ;drv_mrf_miwi_89xa.c: 539: if( outputPower > 0x07 )
  5937  00B862  0E07               	movlw	7
  5938  00B864  0101               	movlb	1	; () banked
  5939  00B866  6508               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
  5940  00B868  D001               	goto	l19033
  5941  00B86A  0012               	return	
  5942  00B86C                     l19033:
  5943                           
  5944                           ; BSR set to: 1
  5945                           ;drv_mrf_miwi_89xa.c: 542: }
  5946                           ;drv_mrf_miwi_89xa.c: 543: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
  5947  00B86C  0101               	movlb	1	; () banked
  5948  00B86E  5108               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
  5949  00B870  0101               	movlb	1	; () banked
  5950  00B872  6F06               	movwf	??_MiMAC_SetPower& (0+255),b
  5951  00B874  6B07               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
  5952  00B876  90D8               	bcf	status,0,c
  5953  00B878  0101               	movlb	1	; () banked
  5954  00B87A  3706               	rlcf	??_MiMAC_SetPower& (0+255),f,b
  5955  00B87C  3707               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
  5956  00B87E  0EF0               	movlw	240
  5957  00B880  0101               	movlb	1	; () banked
  5958  00B882  1106               	iorwf	??_MiMAC_SetPower& (0+255),w,b
  5959  00B884  0101               	movlb	1	; () banked
  5960  00B886  6F02               	movwf	RegisterSet@setting& (0+255),b
  5961  00B888  0E34               	movlw	52
  5962  00B88A  0101               	movlb	1	; () banked
  5963  00B88C  1107               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
  5964  00B88E  0101               	movlb	1	; () banked
  5965  00B890  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
  5966  00B892  EC06  F05B         	call	_RegisterSet	;wreg free
  5967  00B896  0012               	return	
  5968  00B898                     __end_of_MiMAC_SetPower:
  5969                           	opt stack 0
  5970                           tblptru	equ	0xFF8
  5971                           tblptrh	equ	0xFF7
  5972                           tblptrl	equ	0xFF6
  5973                           tablat	equ	0xFF5
  5974                           prodh	equ	0xFF4
  5975                           prodl	equ	0xFF3
  5976                           postinc0	equ	0xFEE
  5977                           plusw0	equ	0xFEB
  5978                           wreg	equ	0xFE8
  5979                           postdec1	equ	0xFE5
  5980                           fsr1h	equ	0xFE2
  5981                           fsr1l	equ	0xFE1
  5982                           indf2	equ	0xFDF
  5983                           plusw2	equ	0xFDB
  5984                           fsr2h	equ	0xFDA
  5985                           fsr2l	equ	0xFD9
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function _update_LED *****************
  5989 ;; Defined at:
  5990 ;;		line 735 in file "src/main.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2  203[None  ] int 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:   16
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text5
  6019  00B38E                     __ptext5:
  6020                           	opt stack 0
  6021  00B38E                     _update_LED:
  6022                           	opt stack 14
  6023                           
  6024                           ;main.c: 737: switch(status_led)
  6025                           
  6026                           ;incstack = 0
  6027  00B38E  D021               	goto	l19999
  6028  00B390                     l1863:
  6029                           
  6030                           ;main.c: 741: CCP1CONbits.DC1B0 = 0;
  6031  00B390  98BA               	bcf	4026,4,c	;volatile
  6032                           
  6033                           ;main.c: 742: CCP1CONbits.DC1B1 = 0;
  6034  00B392  9ABA               	bcf	4026,5,c	;volatile
  6035                           
  6036                           ;main.c: 743: CCPR1L = 0;
  6037  00B394  0E00               	movlw	0
  6038  00B396  6EBB               	movwf	4027,c	;volatile
  6039                           
  6040                           ;main.c: 744: LED_increasing = 1;
  6041  00B398  0E01               	movlw	1
  6042  00B39A  6E45               	movwf	_LED_increasing,c	;volatile
  6043                           
  6044                           ;main.c: 745: break;
  6045  00B39C  0012               	return	
  6046  00B39E                     l1865:
  6047                           
  6048                           ;main.c: 749: CCP1CONbits.DC1B0 = 1023 & 1;
  6049  00B39E  88BA               	bsf	4026,4,c	;volatile
  6050                           
  6051                           ;main.c: 750: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
  6052  00B3A0  8ABA               	bsf	4026,5,c	;volatile
  6053                           
  6054                           ;main.c: 751: CCPR1L = (1023 >> 2);
  6055  00B3A2  68BB               	setf	4027,c	;volatile
  6056                           
  6057                           ;main.c: 752: repeat_full = 4;
  6058  00B3A4  0E04               	movlw	4
  6059  00B3A6  6E53               	movwf	_repeat_full,c	;volatile
  6060                           
  6061                           ;main.c: 753: break;
  6062  00B3A8  0012               	return	
  6063  00B3AA                     l19985:
  6064                           
  6065                           ;main.c: 756: T4CONbits.T4CKPS = 0b01;
  6066  00B3AA  5076               	movf	3958,w,c	;volatile
  6067  00B3AC  0BFC               	andlw	-4
  6068  00B3AE  0901               	iorlw	1
  6069  00B3B0  6E76               	movwf	3958,c	;volatile
  6070                           
  6071                           ;main.c: 758: CCP1CONbits.DC1B0 = 235 & 1;
  6072  00B3B2  88BA               	bsf	4026,4,c	;volatile
  6073                           
  6074                           ;main.c: 759: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  6075  00B3B4  8ABA               	bsf	4026,5,c	;volatile
  6076                           
  6077                           ;main.c: 760: CCPR1L = (235 >> 2);
  6078  00B3B6  0E3A               	movlw	58
  6079  00B3B8  6EBB               	movwf	4027,c	;volatile
  6080                           
  6081                           ;main.c: 761: LED_increasing = 0;
  6082  00B3BA  0E00               	movlw	0
  6083  00B3BC  6E45               	movwf	_LED_increasing,c	;volatile
  6084                           
  6085                           ;main.c: 762: break;
  6086  00B3BE  0012               	return	
  6087  00B3C0                     l19991:
  6088                           
  6089                           ;main.c: 765: T4CONbits.T4CKPS = 0b11;
  6090  00B3C0  0E03               	movlw	3
  6091  00B3C2  1276               	iorwf	3958,f,c	;volatile
  6092                           
  6093                           ;main.c: 767: CCP1CONbits.DC1B0 = 235 & 1;
  6094  00B3C4  88BA               	bsf	4026,4,c	;volatile
  6095                           
  6096                           ;main.c: 768: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  6097  00B3C6  8ABA               	bsf	4026,5,c	;volatile
  6098                           
  6099                           ;main.c: 769: CCPR1L = (235 >> 2);
  6100  00B3C8  0E3A               	movlw	58
  6101  00B3CA  6EBB               	movwf	4027,c	;volatile
  6102                           
  6103                           ;main.c: 770: LED_increasing = 0;
  6104  00B3CC  0E00               	movlw	0
  6105  00B3CE  6E45               	movwf	_LED_increasing,c	;volatile
  6106                           
  6107                           ;main.c: 772: }
  6108                           
  6109                           ;main.c: 771: break;
  6110  00B3D0  0012               	return	
  6111  00B3D2                     l19999:
  6112  00B3D2  5055               	movf	_status_led,w,c	;volatile
  6113                           
  6114                           ; Switch size 1, requested type "space"
  6115                           ; Number of cases is 4, Range of values is 0 to 3
  6116                           ; switch strategies available:
  6117                           ; Name         Instructions Cycles
  6118                           ; simple_byte           13     7 (average)
  6119                           ;	Chosen strategy is simple_byte
  6120  00B3D4  0A00               	xorlw	0	; case 0
  6121  00B3D6  B4D8               	btfsc	status,2,c
  6122  00B3D8  D7DB               	goto	l1863
  6123  00B3DA  0A01               	xorlw	1	; case 1
  6124  00B3DC  B4D8               	btfsc	status,2,c
  6125  00B3DE  D7E5               	goto	l19985
  6126  00B3E0  0A03               	xorlw	3	; case 2
  6127  00B3E2  B4D8               	btfsc	status,2,c
  6128  00B3E4  D7ED               	goto	l19991
  6129  00B3E6  0A01               	xorlw	1	; case 3
  6130  00B3E8  A4D8               	btfss	status,2,c
  6131  00B3EA  0012               	return	
  6132  00B3EC  D7D8               	goto	l1865
  6133  00B3EE                     __end_of_update_LED:
  6134                           	opt stack 0
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           postinc0	equ	0xFEE
  6142                           plusw0	equ	0xFEB
  6143                           wreg	equ	0xFE8
  6144                           postdec1	equ	0xFE5
  6145                           fsr1h	equ	0xFE2
  6146                           fsr1l	equ	0xFE1
  6147                           indf2	equ	0xFDF
  6148                           plusw2	equ	0xFDB
  6149                           fsr2h	equ	0xFDA
  6150                           fsr2l	equ	0xFD9
  6151                           status	equ	0xFD8
  6152                           
  6153 ;; *************** function _timer_reset *****************
  6154 ;; Defined at:
  6155 ;;		line 661 in file "src/main.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;		None               void
  6162 ;; Registers used:
  6163 ;;		wreg, status,2
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:   16
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_main
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text6
  6184  00BB54                     __ptext6:
  6185                           	opt stack 0
  6186  00BB54                     _timer_reset:
  6187                           	opt stack 14
  6188                           
  6189                           ;main.c: 664: if (m_update_frequency == 0)
  6190                           
  6191                           ;incstack = 0
  6192  00BB54  0101               	movlb	1	; () banked
  6193  00BB56  51FA               	movf	_m_update_frequency& (0+255),w,b	;volatile
  6194  00BB58  A4D8               	btfss	status,2,c
  6195  00BB5A  D003               	goto	l1823
  6196                           
  6197                           ; BSR set to: 1
  6198                           ;main.c: 665: timer_count = 1;
  6199  00BB5C  0E01               	movlw	1
  6200  00BB5E  6E5D               	movwf	_timer_count,c	;volatile
  6201  00BB60  D002               	goto	l20961
  6202  00BB62                     l1823:
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;main.c: 666: else
  6206                           ;main.c: 667: timer_count = m_update_frequency;
  6207  00BB62  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
  6208  00BB66                     l20961:
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;main.c: 668: timer_flag = 0;
  6212  00BB66  0E00               	movlw	0
  6213  00BB68  0101               	movlb	1	; () banked
  6214  00BB6A  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  6215                           
  6216                           ; BSR set to: 1
  6217  00BB6C  0012               	return		;funcret
  6218  00BB6E                     __end_of_timer_reset:
  6219                           	opt stack 0
  6220                           tblptru	equ	0xFF8
  6221                           tblptrh	equ	0xFF7
  6222                           tblptrl	equ	0xFF6
  6223                           tablat	equ	0xFF5
  6224                           prodh	equ	0xFF4
  6225                           prodl	equ	0xFF3
  6226                           postinc0	equ	0xFEE
  6227                           plusw0	equ	0xFEB
  6228                           wreg	equ	0xFE8
  6229                           postdec1	equ	0xFE5
  6230                           fsr1h	equ	0xFE2
  6231                           fsr1l	equ	0xFE1
  6232                           indf2	equ	0xFDF
  6233                           plusw2	equ	0xFDB
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           
  6238 ;; *************** function _strcpy *****************
  6239 ;; Defined at:
  6240 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  to              2    0[BANK1 ] PTR unsigned char 
  6243 ;;		 -> ToSendDataBuffer(64), 
  6244 ;;  from            2    2[BANK1 ] PTR const unsigned char 
  6245 ;;		 -> STR_2(33), STR_1(8), 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  cp              2    4[BANK1 ] PTR unsigned char 
  6248 ;;		 -> ToSendDataBuffer(64), 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  2    0[BANK1 ] PTR unsigned char 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6258 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;Total ram usage:        6 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:   16
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_main
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text7
  6273  00B8D2                     __ptext7:
  6274                           	opt stack 0
  6275  00B8D2                     _strcpy:
  6276                           	opt stack 14
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;incstack = 0
  6280  00B8D2  C100  F104         	movff	strcpy@to,strcpy@cp
  6281  00B8D6  C101  F105         	movff	strcpy@to+1,strcpy@cp+1
  6282  00B8DA  D006               	goto	l20595
  6283  00B8DC                     l20593:
  6284  00B8DC  0101               	movlb	1	; () banked
  6285  00B8DE  4B04               	infsnz	strcpy@cp& (0+255),f,b
  6286  00B8E0  2B05               	incf	(strcpy@cp+1)& (0+255),f,b
  6287  00B8E2  0101               	movlb	1	; () banked
  6288  00B8E4  4B02               	infsnz	strcpy@from& (0+255),f,b
  6289  00B8E6  2B03               	incf	(strcpy@from+1)& (0+255),f,b
  6290  00B8E8                     l20595:
  6291  00B8E8  C102  FFF6         	movff	strcpy@from,tblptrl
  6292  00B8EC  C103  FFF7         	movff	strcpy@from+1,tblptrh
  6293  00B8F0                     	if	0	;tblptru may be non-zero
  6294  00B8F0                     	endif
  6295  00B8F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6296  00B8F0  0E00               	movlw	low (__mediumconst shr (0+16))
  6297  00B8F2  6EF8               	movwf	tblptru,c
  6298  00B8F4                     	endif
  6299  00B8F4  C104  FFD9         	movff	strcpy@cp,fsr2l
  6300  00B8F8  C105  FFDA         	movff	strcpy@cp+1,fsr2h
  6301  00B8FC  0008               	tblrd		*
  6302  00B8FE  CFF5 FFDF          	movff	tablat,indf2
  6303  00B902  50DF               	movf	indf2,w,c
  6304  00B904  B4D8               	btfsc	status,2,c
  6305  00B906  0012               	return	
  6306  00B908  D7E9               	goto	l20593
  6307  00B90A                     __end_of_strcpy:
  6308                           	opt stack 0
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           postinc0	equ	0xFEE
  6316                           plusw0	equ	0xFEB
  6317                           wreg	equ	0xFE8
  6318                           postdec1	equ	0xFE5
  6319                           fsr1h	equ	0xFE2
  6320                           fsr1l	equ	0xFE1
  6321                           indf2	equ	0xFDF
  6322                           plusw2	equ	0xFDB
  6323                           fsr2h	equ	0xFDA
  6324                           fsr2l	equ	0xFD9
  6325                           status	equ	0xFD8
  6326                           
  6327 ;; *************** function _sprintf *****************
  6328 ;; Defined at:
  6329 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  sp              2   12[BANK1 ] PTR unsigned char 
  6332 ;;		 -> ToSendDataBuffer(64), 
  6333 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  6334 ;;		 -> STR_14(39), STR_13(52), STR_12(44), STR_11(55), 
  6335 ;;		 -> STR_10(39), STR_9(32), STR_8(17), STR_7(31), 
  6336 ;;		 -> STR_6(25), STR_5(22), STR_4(41), STR_3(33), 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  idx             1   28[BANK1 ] unsigned char 
  6339 ;;  tmpval          4    0        struct .
  6340 ;;  width           2   39[BANK1 ] int 
  6341 ;;  val             2   36[BANK1 ] unsigned int 
  6342 ;;  len             2   34[BANK1 ] unsigned int 
  6343 ;;  ap              2   32[BANK1 ] PTR void [1]
  6344 ;;		 -> ?_sprintf(2), 
  6345 ;;  cp              2   30[BANK1 ] PTR const unsigned char 
  6346 ;;		 -> STR_15(7), TX_POWER_INVALID(6), TX_POWER_N_8_DB_MW(7), TX_POWER_N_5_DB_MW(6), 
  6347 ;;		 -> TX_POWER_N_2_DB_MW(6), TX_POWER_1_DB_MW(7), TX_POWER_4_DB_MW(6), TX_POWER_7_DB_MW(4), 
  6348 ;;		 -> TX_POWER_10_DB_MW(5), TX_POWER_13_DB_MW(5), 
  6349 ;;  c               1   41[BANK1 ] char 
  6350 ;;  flag            1   38[BANK1 ] unsigned char 
  6351 ;;  prec            1   29[BANK1 ] char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  2   12[BANK1 ] int 
  6354 ;; Registers used:
  6355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6361 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;Total ram usage:       30 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:   17
  6368 ;; This function calls:
  6369 ;;		___lwdiv
  6370 ;;		___lwmod
  6371 ;;		___wmul
  6372 ;;		_isdigit
  6373 ;; This function is called by:
  6374 ;;		_main
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text8
  6379  0053BC                     __ptext8:
  6380                           	opt stack 0
  6381  0053BC                     _sprintf:
  6382                           	opt stack 13
  6383                           
  6384                           ;doprnt.c: 494: va_list ap;
  6385                           ;doprnt.c: 499: signed char c;
  6386                           ;doprnt.c: 501: int width;
  6387                           ;doprnt.c: 506: signed char prec;
  6388                           ;doprnt.c: 508: unsigned char flag;
  6389                           ;doprnt.c: 523: union {
  6390                           ;doprnt.c: 524: unsigned long vd;
  6391                           ;doprnt.c: 525: double integ;
  6392                           ;doprnt.c: 526: } tmpval;
  6393                           ;doprnt.c: 528: unsigned int val;
  6394                           ;doprnt.c: 529: unsigned len;
  6395                           ;doprnt.c: 530: const char * cp;
  6396                           ;doprnt.c: 533: *ap = __va_start();
  6397                           
  6398                           ;incstack = 0
  6399  0053BC  0E10               	movlw	low (?_sprintf+4)
  6400  0053BE  0101               	movlb	1	; () banked
  6401  0053C0  6F20               	movwf	sprintf@ap& (0+255),b
  6402  0053C2  0E01               	movlw	high (?_sprintf+4)
  6403  0053C4  0101               	movlb	1	; () banked
  6404  0053C6  6F21               	movwf	(sprintf@ap+1)& (0+255),b
  6405                           
  6406                           ;doprnt.c: 536: while(c = *f++) {
  6407  0053C8  D288               	goto	l20827
  6408  0053CA                     l20655:
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;doprnt.c: 538: if(c != '%')
  6412  0053CA  0E25               	movlw	37
  6413  0053CC  0101               	movlb	1	; () banked
  6414  0053CE  1929               	xorwf	sprintf@c& (0+255),w,b
  6415  0053D0  B4D8               	btfsc	status,2,c
  6416  0053D2  D00A               	goto	l20661
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;doprnt.c: 540: {
  6420                           ;doprnt.c: 541: ((*sp++ = (c)));
  6421  0053D4  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6422  0053D8  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6423  0053DC  C129  FFDF         	movff	sprintf@c,indf2
  6424                           
  6425                           ; BSR set to: 1
  6426  0053E0  0101               	movlb	1	; () banked
  6427  0053E2  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6428  0053E4  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6429                           
  6430                           ;doprnt.c: 542: continue;
  6431  0053E6  D279               	goto	l20827
  6432  0053E8                     l20661:
  6433                           
  6434                           ; BSR set to: 1
  6435                           ;doprnt.c: 543: }
  6436                           ;doprnt.c: 546: width = 0;
  6437  0053E8  0E00               	movlw	0
  6438  0053EA  0101               	movlb	1	; () banked
  6439  0053EC  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6440  0053EE  0E00               	movlw	0
  6441  0053F0  6F27               	movwf	sprintf@width& (0+255),b
  6442                           
  6443                           ;doprnt.c: 548: flag = 0;
  6444  0053F2  0E00               	movlw	0
  6445  0053F4  0101               	movlb	1	; () banked
  6446  0053F6  6F26               	movwf	sprintf@flag& (0+255),b
  6447                           
  6448                           ; BSR set to: 1
  6449                           ;doprnt.c: 551: switch(*f) {
  6450                           
  6451                           ;doprnt.c: 550: for(;;) {
  6452  0053F8  D005               	goto	l20667
  6453  0053FA                     l20663:
  6454                           
  6455                           ;doprnt.c: 580: flag |= 0x04;
  6456  0053FA  0101               	movlb	1	; () banked
  6457  0053FC  8526               	bsf	sprintf@flag& (0+255),2,b
  6458                           
  6459                           ;doprnt.c: 581: f++;
  6460  0053FE  0101               	movlb	1	; () banked
  6461  005400  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6462  005402  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6463  005404                     l20667:
  6464  005404  C10E  FFF6         	movff	sprintf@f,tblptrl
  6465  005408  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6466  00540C                     	if	0	;tblptru may be non-zero
  6467  00540C                     	endif
  6468  00540C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6469  00540C  0E00               	movlw	low (__mediumconst shr (0+16))
  6470  00540E  6EF8               	movwf	tblptru,c
  6471  005410                     	endif
  6472  005410  0008               	tblrd		*
  6473  005412  50F5               	movf	tablat,w,c
  6474                           
  6475                           ; Switch size 1, requested type "space"
  6476                           ; Number of cases is 1, Range of values is 48 to 48
  6477                           ; switch strategies available:
  6478                           ; Name         Instructions Cycles
  6479                           ; simple_byte            4     3 (average)
  6480                           ;	Chosen strategy is simple_byte
  6481  005414  0A30               	xorlw	48	; case 48
  6482  005416  B4D8               	btfsc	status,2,c
  6483  005418  D7F0               	goto	l20663
  6484                           
  6485                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6486                           
  6487                           ;doprnt.c: 586: }
  6488                           
  6489                           ;doprnt.c: 585: break;
  6490  00541A  C10E  FFF6         	movff	sprintf@f,tblptrl
  6491  00541E  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6492  005422                     	if	0	;tblptru may be non-zero
  6493  005422                     	endif
  6494  005422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6495  005422  0E00               	movlw	low (__mediumconst shr (0+16))
  6496  005424  6EF8               	movwf	tblptru,c
  6497  005426                     	endif
  6498  005426  0008               	tblrd		*
  6499  005428  50F5               	movf	tablat,w,c
  6500  00542A  EC31  F05D         	call	_isdigit
  6501  00542E  A0D8               	btfss	status,0,c
  6502  005430  D0CE               	goto	l20719
  6503                           
  6504                           ;doprnt.c: 598: width = 0;
  6505  005432  0E00               	movlw	0
  6506  005434  0101               	movlb	1	; () banked
  6507  005436  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6508  005438  0E00               	movlw	0
  6509  00543A  6F27               	movwf	sprintf@width& (0+255),b
  6510  00543C                     l20673:
  6511                           
  6512                           ;doprnt.c: 600: width *= 10;
  6513  00543C  C127  F100         	movff	sprintf@width,___wmul@multiplier
  6514  005440  C128  F101         	movff	sprintf@width+1,___wmul@multiplier+1
  6515  005444  0E00               	movlw	0
  6516  005446  0101               	movlb	1	; () banked
  6517  005448  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6518  00544A  0E0A               	movlw	10
  6519  00544C  6F02               	movwf	___wmul@multiplicand& (0+255),b
  6520  00544E  EC85  F05C         	call	___wmul	;wreg free
  6521  005452  C100  F127         	movff	?___wmul,sprintf@width
  6522  005456  C101  F128         	movff	?___wmul+1,sprintf@width+1
  6523                           
  6524                           ;doprnt.c: 601: width += *f++ - '0';
  6525  00545A  0ED0               	movlw	208
  6526  00545C  0101               	movlb	1	; () banked
  6527  00545E  6F18               	movwf	??_sprintf& (0+255),b
  6528  005460  0EFF               	movlw	255
  6529  005462  0101               	movlb	1	; () banked
  6530  005464  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6531  005466  C10E  FFF6         	movff	sprintf@f,tblptrl
  6532  00546A  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6533  00546E                     	if	0	;tblptru may be non-zero
  6534  00546E                     	endif
  6535  00546E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6536  00546E  0E00               	movlw	low (__mediumconst shr (0+16))
  6537  005470  6EF8               	movwf	tblptru,c
  6538  005472                     	endif
  6539  005472  0008               	tblrd		*
  6540  005474  50F5               	movf	tablat,w,c
  6541  005476  0101               	movlb	1	; () banked
  6542  005478  6F1A               	movwf	(??_sprintf+2)& (0+255),b
  6543  00547A  6B1B               	clrf	(??_sprintf+3)& (0+255),b
  6544  00547C  0101               	movlb	1	; () banked
  6545  00547E  5118               	movf	??_sprintf& (0+255),w,b
  6546  005480  0101               	movlb	1	; () banked
  6547  005482  271A               	addwf	(??_sprintf+2)& (0+255),f,b
  6548  005484  0101               	movlb	1	; () banked
  6549  005486  5119               	movf	(??_sprintf+1)& (0+255),w,b
  6550  005488  0101               	movlb	1	; () banked
  6551  00548A  231B               	addwfc	(??_sprintf+3)& (0+255),f,b
  6552  00548C  0101               	movlb	1	; () banked
  6553  00548E  511A               	movf	(??_sprintf+2)& (0+255),w,b
  6554  005490  0101               	movlb	1	; () banked
  6555  005492  2727               	addwf	sprintf@width& (0+255),f,b
  6556  005494  0101               	movlb	1	; () banked
  6557  005496  511B               	movf	(??_sprintf+3)& (0+255),w,b
  6558  005498  0101               	movlb	1	; () banked
  6559  00549A  2328               	addwfc	(sprintf@width+1)& (0+255),f,b
  6560                           
  6561                           ; BSR set to: 1
  6562  00549C  0101               	movlb	1	; () banked
  6563  00549E  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6564  0054A0  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6565                           
  6566                           ; BSR set to: 1
  6567                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6568  0054A2  C10E  FFF6         	movff	sprintf@f,tblptrl
  6569  0054A6  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6570  0054AA                     	if	0	;tblptru may be non-zero
  6571  0054AA                     	endif
  6572  0054AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6573  0054AA  0E00               	movlw	low (__mediumconst shr (0+16))
  6574  0054AC  6EF8               	movwf	tblptru,c
  6575  0054AE                     	endif
  6576  0054AE  0008               	tblrd		*
  6577  0054B0  50F5               	movf	tablat,w,c
  6578  0054B2  EC31  F05D         	call	_isdigit
  6579  0054B6  A0D8               	btfss	status,0,c
  6580  0054B8  D08A               	goto	l20719
  6581  0054BA  D7C0               	goto	l20673
  6582  0054BC                     l20681:
  6583                           
  6584                           ;doprnt.c: 721: flag |= 0x80;
  6585  0054BC  0101               	movlb	1	; () banked
  6586  0054BE  8F26               	bsf	sprintf@flag& (0+255),7,b
  6587                           
  6588                           ;doprnt.c: 723: break;
  6589  0054C0  D0A4               	goto	l2166
  6590  0054C2                     l20683:
  6591                           
  6592                           ; BSR set to: 1
  6593                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6594  0054C2  C120  FFD9         	movff	sprintf@ap,fsr2l
  6595  0054C6  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6596  0054CA  CFDE F11E          	movff	postinc2,sprintf@cp
  6597  0054CE  CFDD F11F          	movff	postdec2,sprintf@cp+1
  6598                           
  6599                           ; BSR set to: 1
  6600  0054D2  0E02               	movlw	2
  6601  0054D4  0101               	movlb	1	; () banked
  6602  0054D6  2720               	addwf	sprintf@ap& (0+255),f,b
  6603  0054D8  0E00               	movlw	0
  6604  0054DA  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6605                           
  6606                           ; BSR set to: 1
  6607                           ;doprnt.c: 740: if(!cp)
  6608  0054DC  0101               	movlb	1	; () banked
  6609  0054DE  511E               	movf	sprintf@cp& (0+255),w,b
  6610  0054E0  0101               	movlb	1	; () banked
  6611  0054E2  111F               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6612  0054E4  A4D8               	btfss	status,2,c
  6613  0054E6  D006               	goto	l20691
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;doprnt.c: 741: cp = "(null)";
  6617  0054E8  0EBD               	movlw	low STR_15
  6618  0054EA  0101               	movlb	1	; () banked
  6619  0054EC  6F1E               	movwf	sprintf@cp& (0+255),b
  6620  0054EE  0E23               	movlw	high STR_15
  6621  0054F0  0101               	movlb	1	; () banked
  6622  0054F2  6F1F               	movwf	(sprintf@cp+1)& (0+255),b
  6623  0054F4                     l20691:
  6624                           
  6625                           ; BSR set to: 1
  6626                           ;doprnt.c: 745: len = 0;
  6627  0054F4  0E00               	movlw	0
  6628  0054F6  0101               	movlb	1	; () banked
  6629  0054F8  6F23               	movwf	(sprintf@len+1)& (0+255),b
  6630  0054FA  0E00               	movlw	0
  6631  0054FC  6F22               	movwf	sprintf@len& (0+255),b
  6632                           
  6633                           ;doprnt.c: 746: while(cp[len])
  6634  0054FE  D003               	goto	l20695
  6635  005500                     l20693:
  6636                           
  6637                           ; BSR set to: 1
  6638                           ;doprnt.c: 747: len++;
  6639  005500  0101               	movlb	1	; () banked
  6640  005502  4B22               	infsnz	sprintf@len& (0+255),f,b
  6641  005504  2B23               	incf	(sprintf@len+1)& (0+255),f,b
  6642  005506                     l20695:
  6643                           
  6644                           ; BSR set to: 1
  6645  005506  0101               	movlb	1	; () banked
  6646  005508  5122               	movf	sprintf@len& (0+255),w,b
  6647  00550A  0101               	movlb	1	; () banked
  6648  00550C  251E               	addwf	sprintf@cp& (0+255),w,b
  6649  00550E  0101               	movlb	1	; () banked
  6650  005510  6F18               	movwf	??_sprintf& (0+255),b
  6651  005512  0101               	movlb	1	; () banked
  6652  005514  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6653  005516  0101               	movlb	1	; () banked
  6654  005518  211F               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6655  00551A  0101               	movlb	1	; () banked
  6656  00551C  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6657  00551E  C118  FFF6         	movff	??_sprintf,tblptrl
  6658  005522  C119  FFF7         	movff	??_sprintf+1,tblptrh
  6659  005526                     	if	0	;tblptru may be non-zero
  6660  005526                     	endif
  6661  005526                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6662  005526  0E00               	movlw	low (__mediumconst shr (0+16))
  6663  005528  6EF8               	movwf	tblptru,c
  6664  00552A                     	endif
  6665  00552A  0008               	tblrd		*
  6666  00552C  50F5               	movf	tablat,w,c
  6667  00552E  0900               	iorlw	0
  6668  005530  A4D8               	btfss	status,2,c
  6669  005532  D7E6               	goto	l20693
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;doprnt.c: 757: if(width > len)
  6673                           
  6674                           ; BSR set to: 1
  6675  005534  0101               	movlb	1	; () banked
  6676  005536  5127               	movf	sprintf@width& (0+255),w,b
  6677  005538  0101               	movlb	1	; () banked
  6678  00553A  5D22               	subwf	sprintf@len& (0+255),w,b
  6679  00553C  0101               	movlb	1	; () banked
  6680  00553E  5128               	movf	(sprintf@width+1)& (0+255),w,b
  6681  005540  0101               	movlb	1	; () banked
  6682  005542  5923               	subwfb	(sprintf@len+1)& (0+255),w,b
  6683  005544  B0D8               	btfsc	status,0,c
  6684  005546  D009               	goto	l20701
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;doprnt.c: 758: width -= len;
  6688  005548  0101               	movlb	1	; () banked
  6689  00554A  5122               	movf	sprintf@len& (0+255),w,b
  6690  00554C  0101               	movlb	1	; () banked
  6691  00554E  5F27               	subwf	sprintf@width& (0+255),f,b
  6692  005550  0101               	movlb	1	; () banked
  6693  005552  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6694  005554  0101               	movlb	1	; () banked
  6695  005556  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  6696  005558  D00F               	goto	l20707
  6697  00555A                     l20701:
  6698                           
  6699                           ; BSR set to: 1
  6700                           ;doprnt.c: 759: else
  6701                           ;doprnt.c: 760: width = 0;
  6702  00555A  0E00               	movlw	0
  6703  00555C  0101               	movlb	1	; () banked
  6704  00555E  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6705  005560  0E00               	movlw	0
  6706  005562  6F27               	movwf	sprintf@width& (0+255),b
  6707                           
  6708                           ; BSR set to: 1
  6709                           ;doprnt.c: 764: while(width--)
  6710  005564  D009               	goto	l20707
  6711  005566                     l20703:
  6712                           
  6713                           ; BSR set to: 1
  6714                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6715  005566  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6716  00556A  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6717  00556E  0E20               	movlw	32
  6718  005570  6EDF               	movwf	indf2,c
  6719                           
  6720                           ; BSR set to: 1
  6721  005572  0101               	movlb	1	; () banked
  6722  005574  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6723  005576  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6724  005578                     l20707:
  6725                           
  6726                           ; BSR set to: 1
  6727  005578  0101               	movlb	1	; () banked
  6728  00557A  0727               	decf	sprintf@width& (0+255),f,b
  6729  00557C  A0D8               	btfss	status,0,c
  6730  00557E  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6731  005580  0101               	movlb	1	; () banked
  6732  005582  2927               	incf	sprintf@width& (0+255),w,b
  6733  005584  E1F0               	bnz	l20703
  6734  005586  0101               	movlb	1	; () banked
  6735  005588  2928               	incf	(sprintf@width+1)& (0+255),w,b
  6736  00558A  B4D8               	btfsc	status,2,c
  6737  00558C  D014               	goto	l20715
  6738  00558E  D7EB               	goto	l20703
  6739  005590                     l20709:
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6743  005590  C11E  FFF6         	movff	sprintf@cp,tblptrl
  6744  005594  C11F  FFF7         	movff	sprintf@cp+1,tblptrh
  6745  005598                     	if	0	;tblptru may be non-zero
  6746  005598                     	endif
  6747  005598                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6748  005598  0E00               	movlw	low (__mediumconst shr (0+16))
  6749  00559A  6EF8               	movwf	tblptru,c
  6750  00559C                     	endif
  6751  00559C  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6752  0055A0  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6753  0055A4  0008               	tblrd		*
  6754  0055A6  CFF5 FFDF          	movff	tablat,indf2
  6755                           
  6756                           ; BSR set to: 1
  6757  0055AA  0101               	movlb	1	; () banked
  6758  0055AC  4B1E               	infsnz	sprintf@cp& (0+255),f,b
  6759  0055AE  2B1F               	incf	(sprintf@cp+1)& (0+255),f,b
  6760                           
  6761                           ; BSR set to: 1
  6762  0055B0  0101               	movlb	1	; () banked
  6763  0055B2  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6764  0055B4  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6765  0055B6                     l20715:
  6766                           
  6767                           ; BSR set to: 1
  6768  0055B6  0101               	movlb	1	; () banked
  6769  0055B8  0722               	decf	sprintf@len& (0+255),f,b
  6770  0055BA  A0D8               	btfss	status,0,c
  6771  0055BC  0723               	decf	(sprintf@len+1)& (0+255),f,b
  6772  0055BE  0101               	movlb	1	; () banked
  6773  0055C0  2922               	incf	sprintf@len& (0+255),w,b
  6774  0055C2  E1E6               	bnz	l20709
  6775  0055C4  0101               	movlb	1	; () banked
  6776  0055C6  2923               	incf	(sprintf@len+1)& (0+255),w,b
  6777  0055C8  B4D8               	btfsc	status,2,c
  6778  0055CA  D187               	goto	l20827
  6779  0055CC  D7E1               	goto	l20709
  6780  0055CE                     l20719:
  6781  0055CE  C10E  FFF6         	movff	sprintf@f,tblptrl
  6782  0055D2  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6783  0055D6  0101               	movlb	1	; () banked
  6784  0055D8  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6785  0055DA  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6786  0055DC                     	if	0	;tblptru may be non-zero
  6787  0055DC                     	endif
  6788  0055DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6789  0055DC  0E00               	movlw	low (__mediumconst shr (0+16))
  6790  0055DE  6EF8               	movwf	tblptru,c
  6791  0055E0                     	endif
  6792  0055E0  0008               	tblrd		*
  6793  0055E2  CFF5 F129          	movff	tablat,sprintf@c
  6794  0055E6  0101               	movlb	1	; () banked
  6795  0055E8  5129               	movf	sprintf@c& (0+255),w,b
  6796                           
  6797                           ; Switch size 1, requested type "space"
  6798                           ; Number of cases is 5, Range of values is 0 to 120
  6799                           ; switch strategies available:
  6800                           ; Name         Instructions Cycles
  6801                           ; simple_byte           16     9 (average)
  6802                           ;	Chosen strategy is simple_byte
  6803  0055EA  0A00               	xorlw	0	; case 0
  6804  0055EC  B4D8               	btfsc	status,2,c
  6805  0055EE  D185               	goto	l20829
  6806  0055F0  0A64               	xorlw	100	; case 100
  6807  0055F2  B4D8               	btfsc	status,2,c
  6808  0055F4  D00A               	goto	l2166
  6809  0055F6  0A0D               	xorlw	13	; case 105
  6810  0055F8  B4D8               	btfsc	status,2,c
  6811  0055FA  D007               	goto	l2166
  6812  0055FC  0A1A               	xorlw	26	; case 115
  6813  0055FE  B4D8               	btfsc	status,2,c
  6814  005600  D760               	goto	l20683
  6815  005602  0A0B               	xorlw	11	; case 120
  6816  005604  B4D8               	btfsc	status,2,c
  6817  005606  D75A               	goto	l20681
  6818  005608  D168               	goto	l20827
  6819  00560A                     l2166:
  6820                           
  6821                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  6822  00560A  0101               	movlb	1	; () banked
  6823  00560C  BF26               	btfsc	sprintf@flag& (0+255),7,b
  6824  00560E  D019               	goto	l20731
  6825                           
  6826                           ; BSR set to: 1
  6827                           ;doprnt.c: 1253: {
  6828                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6829  005610  C120  FFD9         	movff	sprintf@ap,fsr2l
  6830  005614  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6831  005618  CFDE F124          	movff	postinc2,sprintf@val
  6832  00561C  CFDD F125          	movff	postdec2,sprintf@val+1
  6833                           
  6834                           ; BSR set to: 1
  6835  005620  0E02               	movlw	2
  6836  005622  0101               	movlb	1	; () banked
  6837  005624  2720               	addwf	sprintf@ap& (0+255),f,b
  6838  005626  0E00               	movlw	0
  6839  005628  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6840                           
  6841                           ; BSR set to: 1
  6842                           ;doprnt.c: 1261: if((int)val < 0) {
  6843  00562A  0101               	movlb	1	; () banked
  6844  00562C  AF25               	btfss	(sprintf@val+1)& (0+255),7,b
  6845  00562E  D059               	goto	l20765
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;doprnt.c: 1262: flag |= 0x03;
  6849  005630  0E03               	movlw	3
  6850  005632  0101               	movlb	1	; () banked
  6851  005634  1326               	iorwf	sprintf@flag& (0+255),f,b
  6852                           
  6853                           ; BSR set to: 1
  6854                           ;doprnt.c: 1263: val = -val;
  6855  005636  0101               	movlb	1	; () banked
  6856  005638  6D24               	negf	sprintf@val& (0+255),b
  6857  00563A  1F25               	comf	(sprintf@val+1)& (0+255),f,b
  6858  00563C  B0D8               	btfsc	status,0,c
  6859  00563E  2B25               	incf	(sprintf@val+1)& (0+255),f,b
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;doprnt.c: 1264: }
  6863                           ;doprnt.c: 1266: }
  6864  005640  D050               	goto	l20765
  6865  005642                     l20731:
  6866                           
  6867                           ; BSR set to: 1
  6868                           ;doprnt.c: 1268: else
  6869                           ;doprnt.c: 1273: {
  6870                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6871  005642  C120  FFD9         	movff	sprintf@ap,fsr2l
  6872  005646  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6873  00564A  CFDE F124          	movff	postinc2,sprintf@val
  6874  00564E  CFDD F125          	movff	postdec2,sprintf@val+1
  6875                           
  6876                           ; BSR set to: 1
  6877  005652  0E02               	movlw	2
  6878  005654  0101               	movlb	1	; () banked
  6879  005656  2720               	addwf	sprintf@ap& (0+255),f,b
  6880  005658  0E00               	movlw	0
  6881  00565A  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6882                           
  6883                           ; BSR set to: 1
  6884                           ;doprnt.c: 1287: }
  6885                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6886  00565C  D042               	goto	l20765
  6887  00565E                     l20735:
  6888                           
  6889                           ; BSR set to: 1
  6890                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6891  00565E  0E01               	movlw	1
  6892  005660  0101               	movlb	1	; () banked
  6893  005662  6F29               	movwf	sprintf@c& (0+255),b
  6894  005664                     l20737:
  6895                           
  6896                           ; BSR set to: 1
  6897  005664  0E05               	movlw	5
  6898  005666  0101               	movlb	1	; () banked
  6899  005668  1929               	xorwf	sprintf@c& (0+255),w,b
  6900  00566A  B4D8               	btfsc	status,2,c
  6901  00566C  D043               	goto	l20767
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;doprnt.c: 1306: if(val < dpowers[c])
  6905                           
  6906                           ; BSR set to: 1
  6907                           
  6908                           ; BSR set to: 1
  6909  00566E  0101               	movlb	1	; () banked
  6910  005670  5129               	movf	sprintf@c& (0+255),w,b
  6911  005672  0D02               	mullw	2
  6912  005674  0EB1               	movlw	low _dpowers
  6913  005676  24F3               	addwf	prodl,w,c
  6914  005678  6EF6               	movwf	tblptrl,c
  6915  00567A  0E20               	movlw	high _dpowers
  6916  00567C  20F4               	addwfc	prodh,w,c
  6917  00567E  6EF7               	movwf	tblptrh,c
  6918  005680                     	if	1	;There are 3 active tblptr bytes
  6919  005680  6AF8               	clrf	tblptru,c
  6920  005682  0E00               	movlw	low (__mediumconst shr (0+16))
  6921  005684  22F8               	addwfc	tblptru,f,c
  6922  005686                     	endif
  6923  005686  0009               	tblrd		*+
  6924  005688  50F5               	movf	tablat,w,c
  6925  00568A  0101               	movlb	1	; () banked
  6926  00568C  5D24               	subwf	sprintf@val& (0+255),w,b
  6927  00568E  0009               	tblrd		*+
  6928  005690  50F5               	movf	tablat,w,c
  6929  005692  0101               	movlb	1	; () banked
  6930  005694  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6931  005696  A0D8               	btfss	status,0,c
  6932  005698  D02D               	goto	l20767
  6933                           
  6934                           ; BSR set to: 1
  6935                           
  6936                           ; BSR set to: 1
  6937                           
  6938                           ; BSR set to: 1
  6939                           ;doprnt.c: 1307: break;
  6940  00569A  0101               	movlb	1	; () banked
  6941  00569C  2B29               	incf	sprintf@c& (0+255),f,b
  6942  00569E  D7E2               	goto	l20737
  6943  0056A0                     l20749:
  6944                           
  6945                           ; BSR set to: 1
  6946                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6947  0056A0  0E01               	movlw	1
  6948  0056A2  0101               	movlb	1	; () banked
  6949  0056A4  6F29               	movwf	sprintf@c& (0+255),b
  6950  0056A6                     l20751:
  6951                           
  6952                           ; BSR set to: 1
  6953  0056A6  0E04               	movlw	4
  6954  0056A8  0101               	movlb	1	; () banked
  6955  0056AA  1929               	xorwf	sprintf@c& (0+255),w,b
  6956  0056AC  B4D8               	btfsc	status,2,c
  6957  0056AE  D022               	goto	l20767
  6958                           
  6959                           ; BSR set to: 1
  6960                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6961                           
  6962                           ; BSR set to: 1
  6963                           
  6964                           ; BSR set to: 1
  6965  0056B0  0101               	movlb	1	; () banked
  6966  0056B2  5129               	movf	sprintf@c& (0+255),w,b
  6967  0056B4  0D02               	mullw	2
  6968  0056B6  0EBB               	movlw	low _hexpowers
  6969  0056B8  24F3               	addwf	prodl,w,c
  6970  0056BA  6EF6               	movwf	tblptrl,c
  6971  0056BC  0E20               	movlw	high _hexpowers
  6972  0056BE  20F4               	addwfc	prodh,w,c
  6973  0056C0  6EF7               	movwf	tblptrh,c
  6974  0056C2                     	if	1	;There are 3 active tblptr bytes
  6975  0056C2  6AF8               	clrf	tblptru,c
  6976  0056C4  0E00               	movlw	low (__mediumconst shr (0+16))
  6977  0056C6  22F8               	addwfc	tblptru,f,c
  6978  0056C8                     	endif
  6979  0056C8  0009               	tblrd		*+
  6980  0056CA  50F5               	movf	tablat,w,c
  6981  0056CC  0101               	movlb	1	; () banked
  6982  0056CE  5D24               	subwf	sprintf@val& (0+255),w,b
  6983  0056D0  0009               	tblrd		*+
  6984  0056D2  50F5               	movf	tablat,w,c
  6985  0056D4  0101               	movlb	1	; () banked
  6986  0056D6  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6987  0056D8  A0D8               	btfss	status,0,c
  6988  0056DA  D00C               	goto	l20767
  6989                           
  6990                           ; BSR set to: 1
  6991                           
  6992                           ; BSR set to: 1
  6993                           
  6994                           ; BSR set to: 1
  6995                           ;doprnt.c: 1318: break;
  6996  0056DC  0101               	movlb	1	; () banked
  6997  0056DE  2B29               	incf	sprintf@c& (0+255),f,b
  6998  0056E0  D7E2               	goto	l20751
  6999  0056E2                     l20765:
  7000                           
  7001                           ; BSR set to: 1
  7002  0056E2  0101               	movlb	1	; () banked
  7003  0056E4  5126               	movf	sprintf@flag& (0+255),w,b
  7004  0056E6  0B80               	andlw	128
  7005                           
  7006                           ; Switch size 1, requested type "space"
  7007                           ; Number of cases is 2, Range of values is 0 to 128
  7008                           ; switch strategies available:
  7009                           ; Name         Instructions Cycles
  7010                           ; simple_byte            7     4 (average)
  7011                           ;	Chosen strategy is simple_byte
  7012  0056E8  0A00               	xorlw	0	; case 0
  7013  0056EA  B4D8               	btfsc	status,2,c
  7014  0056EC  D7B8               	goto	l20735
  7015  0056EE  0A80               	xorlw	128	; case 128
  7016  0056F0  B4D8               	btfsc	status,2,c
  7017  0056F2  D7D6               	goto	l20749
  7018  0056F4                     l20767:
  7019                           
  7020                           ; BSR set to: 1
  7021                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7022  0056F4  0101               	movlb	1	; () banked
  7023  0056F6  5127               	movf	sprintf@width& (0+255),w,b
  7024  0056F8  0101               	movlb	1	; () banked
  7025  0056FA  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7026  0056FC  B4D8               	btfsc	status,2,c
  7027  0056FE  D00B               	goto	l20773
  7028                           
  7029                           ; BSR set to: 1
  7030  005700  C126  F118         	movff	sprintf@flag,??_sprintf
  7031  005704  0E03               	movlw	3
  7032  005706  0101               	movlb	1	; () banked
  7033  005708  1718               	andwf	??_sprintf& (0+255),f,b
  7034  00570A  B4D8               	btfsc	status,2,c
  7035  00570C  D004               	goto	l20773
  7036                           
  7037                           ; BSR set to: 1
  7038                           ;doprnt.c: 1346: width--;
  7039  00570E  0101               	movlb	1	; () banked
  7040  005710  0727               	decf	sprintf@width& (0+255),f,b
  7041  005712  A0D8               	btfss	status,0,c
  7042  005714  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7043  005716                     l20773:
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;doprnt.c: 1381: if(width > c)
  7047  005716  0E80               	movlw	128
  7048  005718  0101               	movlb	1	; () banked
  7049  00571A  BF29               	btfsc	sprintf@c& (0+255),7,b
  7050  00571C  0E7F               	movlw	127
  7051  00571E  0101               	movlb	1	; () banked
  7052  005720  6F18               	movwf	??_sprintf& (0+255),b
  7053  005722  0101               	movlb	1	; () banked
  7054  005724  5127               	movf	sprintf@width& (0+255),w,b
  7055  005726  0101               	movlb	1	; () banked
  7056  005728  5D29               	subwf	sprintf@c& (0+255),w,b
  7057  00572A  0101               	movlb	1	; () banked
  7058  00572C  5128               	movf	(sprintf@width+1)& (0+255),w,b
  7059  00572E  0A80               	xorlw	128
  7060  005730  0101               	movlb	1	; () banked
  7061  005732  5918               	subwfb	??_sprintf& (0+255),w,b
  7062  005734  B0D8               	btfsc	status,0,c
  7063  005736  D00B               	goto	l20777
  7064                           
  7065                           ; BSR set to: 1
  7066                           ;doprnt.c: 1382: width -= c;
  7067  005738  0101               	movlb	1	; () banked
  7068  00573A  5129               	movf	sprintf@c& (0+255),w,b
  7069  00573C  0101               	movlb	1	; () banked
  7070  00573E  5F27               	subwf	sprintf@width& (0+255),f,b
  7071  005740  0E00               	movlw	0
  7072  005742  0101               	movlb	1	; () banked
  7073  005744  BF29               	btfsc	sprintf@c& (0+255),7,b
  7074  005746  0EFF               	movlw	255
  7075  005748  0101               	movlb	1	; () banked
  7076  00574A  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  7077  00574C  D005               	goto	l20779
  7078  00574E                     l20777:
  7079                           
  7080                           ; BSR set to: 1
  7081                           ;doprnt.c: 1383: else
  7082                           ;doprnt.c: 1384: width = 0;
  7083  00574E  0E00               	movlw	0
  7084  005750  0101               	movlb	1	; () banked
  7085  005752  6F28               	movwf	(sprintf@width+1)& (0+255),b
  7086  005754  0E00               	movlw	0
  7087  005756  6F27               	movwf	sprintf@width& (0+255),b
  7088  005758                     l20779:
  7089                           
  7090                           ; BSR set to: 1
  7091                           ;doprnt.c: 1387: if(flag & 0x04) {
  7092  005758  0101               	movlb	1	; () banked
  7093  00575A  A526               	btfss	sprintf@flag& (0+255),2,b
  7094  00575C  D024               	goto	l20795
  7095                           
  7096                           ; BSR set to: 1
  7097                           ;doprnt.c: 1392: if(flag & 0x03)
  7098  00575E  C126  F118         	movff	sprintf@flag,??_sprintf
  7099  005762  0E03               	movlw	3
  7100  005764  0101               	movlb	1	; () banked
  7101  005766  1718               	andwf	??_sprintf& (0+255),f,b
  7102  005768  B4D8               	btfsc	status,2,c
  7103  00576A  D009               	goto	l20787
  7104                           
  7105                           ; BSR set to: 1
  7106                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  7107  00576C  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7108  005770  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7109  005774  0E2D               	movlw	45
  7110  005776  6EDF               	movwf	indf2,c
  7111                           
  7112                           ; BSR set to: 1
  7113  005778  0101               	movlb	1	; () banked
  7114  00577A  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7115  00577C  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7116  00577E                     l20787:
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;doprnt.c: 1415: if(width)
  7120  00577E  0101               	movlb	1	; () banked
  7121  005780  5127               	movf	sprintf@width& (0+255),w,b
  7122  005782  0101               	movlb	1	; () banked
  7123  005784  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7124  005786  B4D8               	btfsc	status,2,c
  7125  005788  D037               	goto	l20809
  7126                           
  7127                           ; BSR set to: 1
  7128                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7129                           
  7130                           ; BSR set to: 1
  7131                           
  7132                           ;doprnt.c: 1416: do
  7133  00578A  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7134  00578E  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7135  005792  0E30               	movlw	48
  7136  005794  6EDF               	movwf	indf2,c
  7137                           
  7138                           ; BSR set to: 1
  7139  005796  0101               	movlb	1	; () banked
  7140  005798  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7141  00579A  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;doprnt.c: 1418: while(--width);
  7145  00579C  0101               	movlb	1	; () banked
  7146  00579E  0727               	decf	sprintf@width& (0+255),f,b
  7147  0057A0  A0D8               	btfss	status,0,c
  7148  0057A2  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7149  0057A4  D7EC               	goto	l20787
  7150  0057A6                     l20795:
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;doprnt.c: 1422: {
  7154                           ;doprnt.c: 1424: if(width
  7155                           ;doprnt.c: 1428: )
  7156  0057A6  0101               	movlb	1	; () banked
  7157  0057A8  5127               	movf	sprintf@width& (0+255),w,b
  7158  0057AA  0101               	movlb	1	; () banked
  7159  0057AC  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7160  0057AE  B4D8               	btfsc	status,2,c
  7161  0057B0  D013               	goto	l20803
  7162  0057B2                     l20797:
  7163                           
  7164                           ; BSR set to: 1
  7165                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7166  0057B2  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7167  0057B6  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7168  0057BA  0E20               	movlw	32
  7169  0057BC  6EDF               	movwf	indf2,c
  7170                           
  7171                           ; BSR set to: 1
  7172  0057BE  0101               	movlb	1	; () banked
  7173  0057C0  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7174  0057C2  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7175                           
  7176                           ; BSR set to: 1
  7177                           ;doprnt.c: 1431: while(--width);
  7178  0057C4  0101               	movlb	1	; () banked
  7179  0057C6  0727               	decf	sprintf@width& (0+255),f,b
  7180  0057C8  A0D8               	btfss	status,0,c
  7181  0057CA  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7182  0057CC  0101               	movlb	1	; () banked
  7183  0057CE  5127               	movf	sprintf@width& (0+255),w,b
  7184  0057D0  0101               	movlb	1	; () banked
  7185  0057D2  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7186  0057D4  A4D8               	btfss	status,2,c
  7187  0057D6  D7ED               	goto	l20797
  7188  0057D8                     l20803:
  7189                           
  7190                           ; BSR set to: 1
  7191                           ;doprnt.c: 1438: if(flag & 0x03)
  7192  0057D8  C126  F118         	movff	sprintf@flag,??_sprintf
  7193  0057DC  0E03               	movlw	3
  7194  0057DE  0101               	movlb	1	; () banked
  7195  0057E0  1718               	andwf	??_sprintf& (0+255),f,b
  7196  0057E2  B4D8               	btfsc	status,2,c
  7197  0057E4  D009               	goto	l20809
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7201  0057E6  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7202  0057EA  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7203  0057EE  0E2D               	movlw	45
  7204  0057F0  6EDF               	movwf	indf2,c
  7205                           
  7206                           ; BSR set to: 1
  7207  0057F2  0101               	movlb	1	; () banked
  7208  0057F4  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7209  0057F6  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7210  0057F8                     l20809:
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;doprnt.c: 1469: }
  7214                           ;doprnt.c: 1472: prec = c;
  7215  0057F8  C129  F11D         	movff	sprintf@c,sprintf@prec
  7216                           
  7217                           ;doprnt.c: 1474: while(prec--) {
  7218  0057FC  D068               	goto	l20825
  7219  0057FE                     l20811:
  7220                           
  7221                           ; BSR set to: 1
  7222                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7223  0057FE  0101               	movlb	1	; () banked
  7224  005800  511D               	movf	sprintf@prec& (0+255),w,b
  7225  005802  0D02               	mullw	2
  7226  005804  0EB1               	movlw	low _dpowers
  7227  005806  24F3               	addwf	prodl,w,c
  7228  005808  6EF6               	movwf	tblptrl,c
  7229  00580A  0E20               	movlw	high _dpowers
  7230  00580C  20F4               	addwfc	prodh,w,c
  7231  00580E  6EF7               	movwf	tblptrh,c
  7232  005810                     	if	1	;There are 3 active tblptr bytes
  7233  005810  6AF8               	clrf	tblptru,c
  7234  005812  0E00               	movlw	low (__mediumconst shr (0+16))
  7235  005814  22F8               	addwfc	tblptru,f,c
  7236  005816                     	endif
  7237  005816  0009               	tblrd		*+
  7238  005818  CFF5 F102          	movff	tablat,___lwdiv@divisor
  7239  00581C  000A               	tblrd		*-
  7240  00581E  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  7241  005822  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  7242  005826  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  7243  00582A  EC09  F058         	call	___lwdiv	;wreg free
  7244  00582E  C100  F107         	movff	?___lwdiv,___lwmod@dividend
  7245  005832  C101  F108         	movff	?___lwdiv+1,___lwmod@dividend+1
  7246  005836  0E00               	movlw	0
  7247  005838  0101               	movlb	1	; () banked
  7248  00583A  6F0A               	movwf	(___lwmod@divisor+1)& (0+255),b
  7249  00583C  0E0A               	movlw	10
  7250  00583E  6F09               	movwf	___lwmod@divisor& (0+255),b
  7251  005840  EC65  F059         	call	___lwmod	;wreg free
  7252  005844  0101               	movlb	1	; () banked
  7253  005846  5107               	movf	?___lwmod& (0+255),w,b
  7254  005848  0F30               	addlw	48
  7255  00584A  0101               	movlb	1	; () banked
  7256  00584C  6F29               	movwf	sprintf@c& (0+255),b
  7257                           
  7258                           ;doprnt.c: 1491: break;
  7259  00584E  D036               	goto	l20821
  7260  005850                     l20813:
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;doprnt.c: 1499: {
  7264                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7265  005850  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  7266  005854  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  7267  005858  0101               	movlb	1	; () banked
  7268  00585A  511D               	movf	sprintf@prec& (0+255),w,b
  7269  00585C  0D02               	mullw	2
  7270  00585E  0EBB               	movlw	low _hexpowers
  7271  005860  24F3               	addwf	prodl,w,c
  7272  005862  6EF6               	movwf	tblptrl,c
  7273  005864  0E20               	movlw	high _hexpowers
  7274  005866  20F4               	addwfc	prodh,w,c
  7275  005868  6EF7               	movwf	tblptrh,c
  7276  00586A                     	if	1	;There are 3 active tblptr bytes
  7277  00586A  6AF8               	clrf	tblptru,c
  7278  00586C  0E00               	movlw	low (__mediumconst shr (0+16))
  7279  00586E  22F8               	addwfc	tblptru,f,c
  7280  005870                     	endif
  7281  005870  0009               	tblrd		*+
  7282  005872  CFF5 F102          	movff	tablat,___lwdiv@divisor
  7283  005876  000A               	tblrd		*-
  7284  005878  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  7285  00587C  EC09  F058         	call	___lwdiv	;wreg free
  7286  005880  0101               	movlb	1	; () banked
  7287  005882  5100               	movf	?___lwdiv& (0+255),w,b
  7288  005884  0B0F               	andlw	15
  7289  005886  0101               	movlb	1	; () banked
  7290  005888  6F1C               	movwf	sprintf@idx& (0+255),b
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  7294  00588A  0101               	movlb	1	; () banked
  7295  00588C  511C               	movf	sprintf@idx& (0+255),w,b
  7296  00588E  0D01               	mullw	1
  7297  005890  0E93               	movlw	low STR_16
  7298  005892  24F3               	addwf	prodl,w,c
  7299  005894  6EF6               	movwf	tblptrl,c
  7300  005896  0E23               	movlw	high STR_16
  7301  005898  20F4               	addwfc	prodh,w,c
  7302  00589A  6EF7               	movwf	tblptrh,c
  7303  00589C                     	if	1	;There are 3 active tblptr bytes
  7304  00589C  6AF8               	clrf	tblptru,c
  7305  00589E  0E00               	movlw	low (__mediumconst shr (0+16))
  7306  0058A0  22F8               	addwfc	tblptru,f,c
  7307  0058A2                     	endif
  7308  0058A2  0008               	tblrd		*
  7309  0058A4  CFF5 F129          	movff	tablat,sprintf@c
  7310                           
  7311                           ; BSR set to: 1
  7312                           ;doprnt.c: 1523: }
  7313                           
  7314                           ;doprnt.c: 1508: }
  7315                           ;doprnt.c: 1510: break;
  7316  0058A8  D009               	goto	l20821
  7317  0058AA                     l20819:
  7318                           
  7319                           ; BSR set to: 1
  7320  0058AA  0101               	movlb	1	; () banked
  7321  0058AC  5126               	movf	sprintf@flag& (0+255),w,b
  7322  0058AE  0B80               	andlw	128
  7323                           
  7324                           ; Switch size 1, requested type "space"
  7325                           ; Number of cases is 2, Range of values is 0 to 128
  7326                           ; switch strategies available:
  7327                           ; Name         Instructions Cycles
  7328                           ; simple_byte            7     4 (average)
  7329                           ;	Chosen strategy is simple_byte
  7330  0058B0  0A00               	xorlw	0	; case 0
  7331  0058B2  B4D8               	btfsc	status,2,c
  7332  0058B4  D7A4               	goto	l20811
  7333  0058B6  0A80               	xorlw	128	; case 128
  7334  0058B8  B4D8               	btfsc	status,2,c
  7335  0058BA  D7CA               	goto	l20813
  7336  0058BC                     l20821:
  7337                           
  7338                           ; BSR set to: 1
  7339                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7340  0058BC  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7341  0058C0  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7342  0058C4  C129  FFDF         	movff	sprintf@c,indf2
  7343                           
  7344                           ; BSR set to: 1
  7345  0058C8  0101               	movlb	1	; () banked
  7346  0058CA  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7347  0058CC  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7348  0058CE                     l20825:
  7349                           
  7350                           ; BSR set to: 1
  7351  0058CE  0101               	movlb	1	; () banked
  7352  0058D0  071D               	decf	sprintf@prec& (0+255),f,b
  7353  0058D2  0101               	movlb	1	; () banked
  7354  0058D4  291D               	incf	sprintf@prec& (0+255),w,b
  7355  0058D6  A4D8               	btfss	status,2,c
  7356  0058D8  D7E8               	goto	l20819
  7357  0058DA                     l20827:
  7358                           
  7359                           ; BSR set to: 1
  7360  0058DA  C10E  FFF6         	movff	sprintf@f,tblptrl
  7361  0058DE  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  7362  0058E2  0101               	movlb	1	; () banked
  7363  0058E4  4B0E               	infsnz	sprintf@f& (0+255),f,b
  7364  0058E6  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  7365  0058E8                     	if	0	;tblptru may be non-zero
  7366  0058E8                     	endif
  7367  0058E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7368  0058E8  0E00               	movlw	low (__mediumconst shr (0+16))
  7369  0058EA  6EF8               	movwf	tblptru,c
  7370  0058EC                     	endif
  7371  0058EC  0008               	tblrd		*
  7372  0058EE  CFF5 F129          	movff	tablat,sprintf@c
  7373  0058F2  0101               	movlb	1	; () banked
  7374  0058F4  5129               	movf	sprintf@c& (0+255),w,b
  7375  0058F6  A4D8               	btfss	status,2,c
  7376  0058F8  D568               	goto	l20655
  7377  0058FA                     l20829:
  7378                           
  7379                           ;doprnt.c: 1538: *sp = 0;
  7380  0058FA  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7381  0058FE  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7382  005902  0E00               	movlw	0
  7383  005904  6EDF               	movwf	indf2,c
  7384  005906  0012               	return	
  7385  005908                     __end_of_sprintf:
  7386                           	opt stack 0
  7387                           tblptru	equ	0xFF8
  7388                           tblptrh	equ	0xFF7
  7389                           tblptrl	equ	0xFF6
  7390                           tablat	equ	0xFF5
  7391                           prodh	equ	0xFF4
  7392                           prodl	equ	0xFF3
  7393                           postinc0	equ	0xFEE
  7394                           plusw0	equ	0xFEB
  7395                           wreg	equ	0xFE8
  7396                           postdec1	equ	0xFE5
  7397                           fsr1h	equ	0xFE2
  7398                           fsr1l	equ	0xFE1
  7399                           indf2	equ	0xFDF
  7400                           postinc2	equ	0xFDE
  7401                           postdec2	equ	0xFDD
  7402                           plusw2	equ	0xFDB
  7403                           fsr2h	equ	0xFDA
  7404                           fsr2l	equ	0xFD9
  7405                           status	equ	0xFD8
  7406                           
  7407 ;; *************** function _isdigit *****************
  7408 ;; Defined at:
  7409 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  c               1    wreg     unsigned char 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  c               1    2[BANK1 ] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;		None               void
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;Total ram usage:        3 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:   16
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_sprintf
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text9
  7438  00BA62                     __ptext9:
  7439                           	opt stack 0
  7440  00BA62                     _isdigit:
  7441                           	opt stack 13
  7442                           
  7443                           ;incstack = 0
  7444                           ;isdigit@c stored from wreg
  7445  00BA62  0101               	movlb	1	; () banked
  7446  00BA64  6F02               	movwf	isdigit@c& (0+255),b
  7447  00BA66  0E00               	movlw	0
  7448  00BA68  0101               	movlb	1	; () banked
  7449  00BA6A  6F01               	movwf	_isdigit$5576& (0+255),b
  7450                           
  7451                           ; BSR set to: 1
  7452  00BA6C  0E3A               	movlw	58
  7453  00BA6E  0101               	movlb	1	; () banked
  7454  00BA70  6102               	cpfslt	isdigit@c& (0+255),b
  7455  00BA72  D007               	goto	l19429
  7456                           
  7457                           ; BSR set to: 1
  7458  00BA74  0E2F               	movlw	47
  7459  00BA76  0101               	movlb	1	; () banked
  7460  00BA78  6502               	cpfsgt	isdigit@c& (0+255),b
  7461  00BA7A  D003               	goto	l19429
  7462                           
  7463                           ; BSR set to: 1
  7464  00BA7C  0E01               	movlw	1
  7465  00BA7E  0101               	movlb	1	; () banked
  7466  00BA80  6F01               	movwf	_isdigit$5576& (0+255),b
  7467  00BA82                     l19429:
  7468                           
  7469                           ; BSR set to: 1
  7470  00BA82  C101  F100         	movff	_isdigit$5576,??_isdigit
  7471  00BA86  0101               	movlb	1	; () banked
  7472  00BA88  3100               	rrcf	??_isdigit& (0+255),w,b
  7473  00BA8A  0012               	return	
  7474  00BA8C                     __end_of_isdigit:
  7475                           	opt stack 0
  7476                           tblptru	equ	0xFF8
  7477                           tblptrh	equ	0xFF7
  7478                           tblptrl	equ	0xFF6
  7479                           tablat	equ	0xFF5
  7480                           prodh	equ	0xFF4
  7481                           prodl	equ	0xFF3
  7482                           postinc0	equ	0xFEE
  7483                           plusw0	equ	0xFEB
  7484                           wreg	equ	0xFE8
  7485                           postdec1	equ	0xFE5
  7486                           fsr1h	equ	0xFE2
  7487                           fsr1l	equ	0xFE1
  7488                           indf2	equ	0xFDF
  7489                           postinc2	equ	0xFDE
  7490                           postdec2	equ	0xFDD
  7491                           plusw2	equ	0xFDB
  7492                           fsr2h	equ	0xFDA
  7493                           fsr2l	equ	0xFD9
  7494                           status	equ	0xFD8
  7495                           
  7496 ;; *************** function ___wmul *****************
  7497 ;; Defined at:
  7498 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7501 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;  product         2    4[BANK1 ] unsigned int 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  2    0[BANK1 ] unsigned int 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, prodl, prodh
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7513 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7514 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;Total ram usage:        6 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:   16
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_sprintf
  7524 ;;		_getReceiverBW
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text10
  7529  00B90A                     __ptext10:
  7530                           	opt stack 0
  7531  00B90A                     ___wmul:
  7532                           	opt stack 13
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;incstack = 0
  7536  00B90A  0101               	movlb	1	; () banked
  7537  00B90C  5100               	movf	___wmul@multiplier& (0+255),w,b
  7538  00B90E  0101               	movlb	1	; () banked
  7539  00B910  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7540  00B912  CFF3 F104          	movff	prodl,___wmul@product
  7541  00B916  CFF4 F105          	movff	prodh,___wmul@product+1
  7542  00B91A  0101               	movlb	1	; () banked
  7543  00B91C  5100               	movf	___wmul@multiplier& (0+255),w,b
  7544  00B91E  0101               	movlb	1	; () banked
  7545  00B920  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7546  00B922  50F3               	movf	prodl,w,c
  7547  00B924  0101               	movlb	1	; () banked
  7548  00B926  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7549  00B928  0101               	movlb	1	; () banked
  7550  00B92A  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7551  00B92C  0101               	movlb	1	; () banked
  7552  00B92E  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7553  00B930  50F3               	movf	prodl,w,c
  7554  00B932  0101               	movlb	1	; () banked
  7555  00B934  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7556                           
  7557                           ; BSR set to: 1
  7558  00B936  C104  F100         	movff	___wmul@product,?___wmul
  7559  00B93A  C105  F101         	movff	___wmul@product+1,?___wmul+1
  7560  00B93E  0012               	return	
  7561  00B940                     __end_of___wmul:
  7562                           	opt stack 0
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           postinc0	equ	0xFEE
  7570                           plusw0	equ	0xFEB
  7571                           wreg	equ	0xFE8
  7572                           postdec1	equ	0xFE5
  7573                           fsr1h	equ	0xFE2
  7574                           fsr1l	equ	0xFE1
  7575                           indf2	equ	0xFDF
  7576                           postinc2	equ	0xFDE
  7577                           postdec2	equ	0xFDD
  7578                           plusw2	equ	0xFDB
  7579                           fsr2h	equ	0xFDA
  7580                           fsr2l	equ	0xFD9
  7581                           status	equ	0xFD8
  7582                           
  7583 ;; *************** function ___lwmod *****************
  7584 ;; Defined at:
  7585 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  dividend        2    7[BANK1 ] unsigned int 
  7588 ;;  divisor         2    9[BANK1 ] unsigned int 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  counter         1   11[BANK1 ] unsigned char 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  2    7[BANK1 ] unsigned int 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7600 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7604 ;;Total ram usage:        5 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:   16
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_sprintf
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text11
  7615  00B2CA                     __ptext11:
  7616                           	opt stack 0
  7617  00B2CA                     ___lwmod:
  7618                           	opt stack 13
  7619                           
  7620                           ; BSR set to: 1
  7621                           ;incstack = 0
  7622  00B2CA  0101               	movlb	1	; () banked
  7623  00B2CC  5109               	movf	___lwmod@divisor& (0+255),w,b
  7624  00B2CE  0101               	movlb	1	; () banked
  7625  00B2D0  110A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7626  00B2D2  B4D8               	btfsc	status,2,c
  7627  00B2D4  D026               	goto	l2668
  7628                           
  7629                           ; BSR set to: 1
  7630  00B2D6  0E01               	movlw	1
  7631  00B2D8  0101               	movlb	1	; () banked
  7632  00B2DA  6F0B               	movwf	___lwmod@counter& (0+255),b
  7633  00B2DC  D006               	goto	l19497
  7634  00B2DE                     l19495:
  7635                           
  7636                           ; BSR set to: 1
  7637  00B2DE  0101               	movlb	1	; () banked
  7638  00B2E0  90D8               	bcf	status,0,c
  7639  00B2E2  3709               	rlcf	___lwmod@divisor& (0+255),f,b
  7640  00B2E4  370A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7641  00B2E6  0101               	movlb	1	; () banked
  7642  00B2E8  2B0B               	incf	___lwmod@counter& (0+255),f,b
  7643  00B2EA                     l19497:
  7644                           
  7645                           ; BSR set to: 1
  7646  00B2EA  0101               	movlb	1	; () banked
  7647  00B2EC  AF0A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7648  00B2EE  D7F7               	goto	l19495
  7649  00B2F0                     l19499:
  7650                           
  7651                           ; BSR set to: 1
  7652  00B2F0  0101               	movlb	1	; () banked
  7653  00B2F2  5109               	movf	___lwmod@divisor& (0+255),w,b
  7654  00B2F4  0101               	movlb	1	; () banked
  7655  00B2F6  5D07               	subwf	___lwmod@dividend& (0+255),w,b
  7656  00B2F8  0101               	movlb	1	; () banked
  7657  00B2FA  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7658  00B2FC  0101               	movlb	1	; () banked
  7659  00B2FE  5908               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7660  00B300  A0D8               	btfss	status,0,c
  7661  00B302  D008               	goto	l19503
  7662                           
  7663                           ; BSR set to: 1
  7664  00B304  0101               	movlb	1	; () banked
  7665  00B306  5109               	movf	___lwmod@divisor& (0+255),w,b
  7666  00B308  0101               	movlb	1	; () banked
  7667  00B30A  5F07               	subwf	___lwmod@dividend& (0+255),f,b
  7668  00B30C  0101               	movlb	1	; () banked
  7669  00B30E  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7670  00B310  0101               	movlb	1	; () banked
  7671  00B312  5B08               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7672  00B314                     l19503:
  7673                           
  7674                           ; BSR set to: 1
  7675  00B314  0101               	movlb	1	; () banked
  7676  00B316  90D8               	bcf	status,0,c
  7677  00B318  330A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7678  00B31A  3309               	rrcf	___lwmod@divisor& (0+255),f,b
  7679                           
  7680                           ; BSR set to: 1
  7681  00B31C  0101               	movlb	1	; () banked
  7682  00B31E  2F0B               	decfsz	___lwmod@counter& (0+255),f,b
  7683  00B320  D7E7               	goto	l19499
  7684  00B322                     l2668:
  7685                           
  7686                           ; BSR set to: 1
  7687  00B322  C107  F107         	movff	___lwmod@dividend,?___lwmod
  7688  00B326  C108  F108         	movff	___lwmod@dividend+1,?___lwmod+1
  7689                           
  7690                           ; BSR set to: 1
  7691  00B32A  0012               	return		;funcret
  7692  00B32C                     __end_of___lwmod:
  7693                           	opt stack 0
  7694                           tblptru	equ	0xFF8
  7695                           tblptrh	equ	0xFF7
  7696                           tblptrl	equ	0xFF6
  7697                           tablat	equ	0xFF5
  7698                           prodh	equ	0xFF4
  7699                           prodl	equ	0xFF3
  7700                           postinc0	equ	0xFEE
  7701                           plusw0	equ	0xFEB
  7702                           wreg	equ	0xFE8
  7703                           postdec1	equ	0xFE5
  7704                           fsr1h	equ	0xFE2
  7705                           fsr1l	equ	0xFE1
  7706                           indf2	equ	0xFDF
  7707                           postinc2	equ	0xFDE
  7708                           postdec2	equ	0xFDD
  7709                           plusw2	equ	0xFDB
  7710                           fsr2h	equ	0xFDA
  7711                           fsr2l	equ	0xFD9
  7712                           status	equ	0xFD8
  7713                           
  7714 ;; *************** function _send_periodic_update *****************
  7715 ;; Defined at:
  7716 ;;		line 586 in file "src/main.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;		None
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  tmp             1    0        unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;		None               void
  7723 ;; Registers used:
  7724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;Total ram usage:       13 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:   19
  7737 ;; This function calls:
  7738 ;;		___ftadd
  7739 ;;		___ftmul
  7740 ;;		___ftneg
  7741 ;;		___fttol
  7742 ;;		_encode_ufixed16_variable
  7743 ;;		_floor
  7744 ;;		_memcpy
  7745 ;;		_sendHIDBinary
  7746 ;; This function is called by:
  7747 ;;		_main
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text12
  7752  0071A4                     __ptext12:
  7753                           	opt stack 0
  7754  0071A4                     _send_periodic_update:
  7755                           	opt stack 11
  7756                           
  7757                           ;main.c: 588: p_buffer = m_buffer;
  7758                           
  7759                           ; BSR set to: 1
  7760                           ;incstack = 0
  7761  0071A4  0ED1               	movlw	low _m_buffer
  7762  0071A6  0101               	movlb	1	; () banked
  7763  0071A8  6FB9               	movwf	_p_buffer& (0+255),b
  7764  0071AA  0E02               	movlw	high _m_buffer
  7765  0071AC  0101               	movlb	1	; () banked
  7766  0071AE  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  7767                           
  7768                           ; BSR set to: 1
  7769                           ;main.c: 589: *(p_buffer++) = 0x4d;
  7770  0071B0  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7771  0071B4  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7772  0071B8  0E4D               	movlw	77
  7773  0071BA  6EDF               	movwf	indf2,c
  7774                           
  7775                           ; BSR set to: 1
  7776  0071BC  0101               	movlb	1	; () banked
  7777  0071BE  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7778  0071C0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7779                           
  7780                           ; BSR set to: 1
  7781                           ;main.c: 590: *(p_buffer++) = 0x00;
  7782  0071C2  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7783  0071C6  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7784  0071CA  0E00               	movlw	0
  7785  0071CC  6EDF               	movwf	indf2,c
  7786                           
  7787                           ; BSR set to: 1
  7788  0071CE  0101               	movlb	1	; () banked
  7789  0071D0  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7790  0071D2  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;main.c: 591: *(p_buffer++) = 0x00;
  7794  0071D4  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7795  0071D8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7796  0071DC  0E00               	movlw	0
  7797  0071DE  6EDF               	movwf	indf2,c
  7798                           
  7799                           ; BSR set to: 1
  7800  0071E0  0101               	movlb	1	; () banked
  7801  0071E2  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7802  0071E4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7803                           
  7804                           ; BSR set to: 1
  7805                           ;main.c: 592: *(p_buffer++) = 04;
  7806  0071E6  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7807  0071EA  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7808  0071EE  0E04               	movlw	4
  7809  0071F0  6EDF               	movwf	indf2,c
  7810                           
  7811                           ; BSR set to: 1
  7812  0071F2  0101               	movlb	1	; () banked
  7813  0071F4  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7814  0071F6  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7815                           
  7816                           ; BSR set to: 1
  7817                           ;main.c: 593: *(p_buffer++) = 0xff;
  7818  0071F8  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7819  0071FC  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7820  007200  0EFF               	movlw	255
  7821  007202  6EDF               	movwf	indf2,c
  7822                           
  7823                           ; BSR set to: 1
  7824  007204  0101               	movlb	1	; () banked
  7825  007206  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7826  007208  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7827                           
  7828                           ; BSR set to: 1
  7829                           ;main.c: 596: memcpy(m_var.label, UPTIME_LABEL, 3);
  7830  00720A  0EDE               	movlw	low _m_var
  7831  00720C  0101               	movlb	1	; () banked
  7832  00720E  6F00               	movwf	memcpy@d1& (0+255),b
  7833  007210  0E01               	movlw	high _m_var
  7834  007212  0101               	movlb	1	; () banked
  7835  007214  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  7836  007216  0ECD               	movlw	low _UPTIME_LABEL
  7837  007218  0101               	movlb	1	; () banked
  7838  00721A  6F02               	movwf	memcpy@s1& (0+255),b
  7839  00721C  0E21               	movlw	high _UPTIME_LABEL
  7840  00721E  0101               	movlb	1	; () banked
  7841  007220  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  7842  007222  0E00               	movlw	0
  7843  007224  0101               	movlb	1	; () banked
  7844  007226  6F05               	movwf	(memcpy@n+1)& (0+255),b
  7845  007228  0E03               	movlw	3
  7846  00722A  6F04               	movwf	memcpy@n& (0+255),b
  7847  00722C  EC96  F059         	call	_memcpy	;wreg free
  7848                           
  7849                           ;main.c: 597: m_var.unit = 7;
  7850  007230  0E07               	movlw	7
  7851  007232  0101               	movlb	1	; () banked
  7852  007234  6FE4               	movwf	(_m_var+6)& (0+255),b
  7853                           
  7854                           ; BSR set to: 1
  7855                           ;main.c: 598: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  7856  007236  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  7857  00723A  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  7858  00723E  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  7859  007242  EC55  F049         	call	_floor	;wreg free
  7860  007246  C12D  F148         	movff	?_floor,_send_periodic_update$6069
  7861  00724A  C12E  F149         	movff	?_floor+1,_send_periodic_update$6069+1
  7862  00724E  C12F  F14A         	movff	?_floor+2,_send_periodic_update$6069+2
  7863                           
  7864                           ;main.c: 598: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  7865  007252  C148  F114         	movff	_send_periodic_update$6069,___fttol@f1
  7866  007256  C149  F115         	movff	_send_periodic_update$6069+1,___fttol@f1+1
  7867  00725A  C14A  F116         	movff	_send_periodic_update$6069+2,___fttol@f1+2
  7868  00725E  EC2F  F041         	call	___fttol	;wreg free
  7869  007262  0101               	movlb	1	; () banked
  7870  007264  5114               	movf	?___fttol& (0+255),w,b
  7871  007266  0101               	movlb	1	; () banked
  7872  007268  6FE2               	movwf	(_m_var+4)& (0+255),b
  7873                           
  7874                           ; BSR set to: 1
  7875                           ;main.c: 599: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7876  00726A  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  7877  00726E  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  7878  007272  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  7879  007276  EC55  F049         	call	_floor	;wreg free
  7880  00727A  C12D  F135         	movff	?_floor,___ftneg@f1
  7881  00727E  C12E  F136         	movff	?_floor+1,___ftneg@f1+1
  7882  007282  C12F  F137         	movff	?_floor+2,___ftneg@f1+2
  7883  007286  ECD5  F05C         	call	___ftneg	;wreg free
  7884  00728A  C135  F14B         	movff	?___ftneg,_send_periodic_update$6070
  7885  00728E  C136  F14C         	movff	?___ftneg+1,_send_periodic_update$6070+1
  7886  007292  C137  F14D         	movff	?___ftneg+2,_send_periodic_update$6070+2
  7887                           
  7888                           ;main.c: 599: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7889  007296  0E00               	movlw	0
  7890  007298  0101               	movlb	1	; () banked
  7891  00729A  6F3B               	movwf	___ftmul@f2& (0+255),b
  7892  00729C  0EC8               	movlw	200
  7893  00729E  0101               	movlb	1	; () banked
  7894  0072A0  6F3C               	movwf	(___ftmul@f2+1)& (0+255),b
  7895  0072A2  0E42               	movlw	66
  7896  0072A4  0101               	movlb	1	; () banked
  7897  0072A6  6F3D               	movwf	(___ftmul@f2+2)& (0+255),b
  7898  0072A8  C1B0  F10B         	movff	_m_uptime_days,___ftadd@f2	;volatile
  7899  0072AC  C1B1  F10C         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  7900  0072B0  C1B2  F10D         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  7901  0072B4  C14B  F108         	movff	_send_periodic_update$6070,___ftadd@f1
  7902  0072B8  C14C  F109         	movff	_send_periodic_update$6070+1,___ftadd@f1+1
  7903  0072BC  C14D  F10A         	movff	_send_periodic_update$6070+2,___ftadd@f1+2
  7904  0072C0  EC70  F034         	call	___ftadd	;wreg free
  7905  0072C4  C108  F138         	movff	?___ftadd,___ftmul@f1
  7906  0072C8  C109  F139         	movff	?___ftadd+1,___ftmul@f1+1
  7907  0072CC  C10A  F13A         	movff	?___ftadd+2,___ftmul@f1+2
  7908  0072D0  EC8B  F03E         	call	___ftmul	;wreg free
  7909  0072D4  C138  F14E         	movff	?___ftmul,_send_periodic_update$6071
  7910  0072D8  C139  F14F         	movff	?___ftmul+1,_send_periodic_update$6071+1
  7911  0072DC  C13A  F150         	movff	?___ftmul+2,_send_periodic_update$6071+2
  7912                           
  7913                           ;main.c: 599: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7914  0072E0  C14E  F12D         	movff	_send_periodic_update$6071,floor@x
  7915  0072E4  C14F  F12E         	movff	_send_periodic_update$6071+1,floor@x+1
  7916  0072E8  C150  F12F         	movff	_send_periodic_update$6071+2,floor@x+2
  7917  0072EC  EC55  F049         	call	_floor	;wreg free
  7918  0072F0  C12D  F151         	movff	?_floor,_send_periodic_update$6072
  7919  0072F4  C12E  F152         	movff	?_floor+1,_send_periodic_update$6072+1
  7920  0072F8  C12F  F153         	movff	?_floor+2,_send_periodic_update$6072+2
  7921                           
  7922                           ;main.c: 599: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7923  0072FC  C151  F114         	movff	_send_periodic_update$6072,___fttol@f1
  7924  007300  C152  F115         	movff	_send_periodic_update$6072+1,___fttol@f1+1
  7925  007304  C153  F116         	movff	_send_periodic_update$6072+2,___fttol@f1+2
  7926  007308  EC2F  F041         	call	___fttol	;wreg free
  7927  00730C  0101               	movlb	1	; () banked
  7928  00730E  5114               	movf	?___fttol& (0+255),w,b
  7929  007310  0101               	movlb	1	; () banked
  7930  007312  6FE3               	movwf	(_m_var+5)& (0+255),b
  7931                           
  7932                           ; BSR set to: 1
  7933                           ;main.c: 600: m_var.writable = 0;
  7934  007314  0E00               	movlw	0
  7935  007316  0101               	movlb	1	; () banked
  7936  007318  6FE5               	movwf	(_m_var+7)& (0+255),b
  7937                           
  7938                           ; BSR set to: 1
  7939                           ;main.c: 601: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  7940  00731A  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  7941  00731E  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  7942  007322  EE21  F0DE         	lfsr	2,_m_var
  7943  007326  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  7944  00732A  0E09               	movlw	9
  7945  00732C                     u23971:
  7946  00732C  CFDB FFEB          	movff	plusw2,plusw0
  7947  007330  06E8               	decf	wreg,f,c
  7948  007332  E2FC               	bc	u23971
  7949  007334  EC00  F051         	call	_encode_ufixed16_variable	;wreg free
  7950  007338  0101               	movlb	1	; () banked
  7951  00733A  6F47               	movwf	??_send_periodic_update& (0+255),b
  7952  00733C  0101               	movlb	1	; () banked
  7953  00733E  5147               	movf	??_send_periodic_update& (0+255),w,b
  7954  007340  0D01               	mullw	1
  7955  007342  50F3               	movf	prodl,w,c
  7956  007344  0101               	movlb	1	; () banked
  7957  007346  27B9               	addwf	_p_buffer& (0+255),f,b
  7958  007348  50F4               	movf	prodh,w,c
  7959  00734A  0101               	movlb	1	; () banked
  7960  00734C  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  7961                           
  7962                           ; BSR set to: 1
  7963                           ;main.c: 603: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  7964  00734E  0ED1               	movlw	low _m_buffer
  7965  007350  0101               	movlb	1	; () banked
  7966  007352  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  7967  007354  0E02               	movlw	high _m_buffer
  7968  007356  0101               	movlb	1	; () banked
  7969  007358  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  7970  00735A  0ED1               	movlw	_m_buffer& (0+255)
  7971  00735C  0800               	sublw	0
  7972  00735E  0101               	movlb	1	; () banked
  7973  007360  25B9               	addwf	_p_buffer& (0+255),w,b
  7974  007362  0101               	movlb	1	; () banked
  7975  007364  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  7976  007366  EC7F  F055         	call	_sendHIDBinary	;wreg free
  7977                           
  7978                           ;main.c: 604: _delay((unsigned long)((20)*(16000000/4000.0)));
  7979  00736A  0E68               	movlw	104
  7980  00736C  0101               	movlb	1	; () banked
  7981  00736E  6F47               	movwf	??_send_periodic_update& (0+255),b
  7982  007370  0EE4               	movlw	228
  7983  007372                     u25247:
  7984  007372  2EE8               	decfsz	wreg,f,c
  7985  007374  D7FE               	goto	u25247
  7986  007376  2F47               	decfsz	??_send_periodic_update& (0+255),f,b
  7987  007378  D7FC               	goto	u25247
  7988  00737A  D000               	nop2	
  7989  00737C  0012               	return		;funcret
  7990  00737E                     __end_of_send_periodic_update:
  7991                           	opt stack 0
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           postinc0	equ	0xFEE
  7999                           plusw0	equ	0xFEB
  8000                           wreg	equ	0xFE8
  8001                           postdec1	equ	0xFE5
  8002                           fsr1h	equ	0xFE2
  8003                           fsr1l	equ	0xFE1
  8004                           indf2	equ	0xFDF
  8005                           postinc2	equ	0xFDE
  8006                           postdec2	equ	0xFDD
  8007                           plusw2	equ	0xFDB
  8008                           fsr2h	equ	0xFDA
  8009                           fsr2l	equ	0xFD9
  8010                           status	equ	0xFD8
  8011                           
  8012 ;; *************** function _send_network_register *****************
  8013 ;; Defined at:
  8014 ;;		line 470 in file "src/main.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;		None               void
  8021 ;; Registers used:
  8022 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:   18
  8035 ;; This function calls:
  8036 ;;		_memcpy
  8037 ;;		_sendHIDBinary
  8038 ;; This function is called by:
  8039 ;;		_main
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text13
  8044  00A714                     __ptext13:
  8045                           	opt stack 0
  8046  00A714                     _send_network_register:
  8047                           	opt stack 12
  8048                           
  8049                           ;main.c: 473: p_buffer = &m_buffer[0];
  8050                           
  8051                           ;incstack = 0
  8052  00A714  0ED1               	movlw	low _m_buffer
  8053  00A716  0101               	movlb	1	; () banked
  8054  00A718  6FB9               	movwf	_p_buffer& (0+255),b
  8055  00A71A  0E02               	movlw	high _m_buffer
  8056  00A71C  0101               	movlb	1	; () banked
  8057  00A71E  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;main.c: 474: *(p_buffer++) = 0x4d;
  8061  00A720  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8062  00A724  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8063  00A728  0E4D               	movlw	77
  8064  00A72A  6EDF               	movwf	indf2,c
  8065                           
  8066                           ; BSR set to: 1
  8067  00A72C  0101               	movlb	1	; () banked
  8068  00A72E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8069  00A730  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8070                           
  8071                           ; BSR set to: 1
  8072                           ;main.c: 475: *(p_buffer++) = 0x00;
  8073  00A732  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8074  00A736  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8075  00A73A  0E00               	movlw	0
  8076  00A73C  6EDF               	movwf	indf2,c
  8077                           
  8078                           ; BSR set to: 1
  8079  00A73E  0101               	movlb	1	; () banked
  8080  00A740  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8081  00A742  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8082                           
  8083                           ; BSR set to: 1
  8084                           ;main.c: 476: *(p_buffer++) = 0x00;
  8085  00A744  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8086  00A748  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8087  00A74C  0E00               	movlw	0
  8088  00A74E  6EDF               	movwf	indf2,c
  8089                           
  8090                           ; BSR set to: 1
  8091  00A750  0101               	movlb	1	; () banked
  8092  00A752  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8093  00A754  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8094                           
  8095                           ; BSR set to: 1
  8096                           ;main.c: 478: *(p_buffer++) = 02;
  8097  00A756  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8098  00A75A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8099  00A75E  0E02               	movlw	2
  8100  00A760  6EDF               	movwf	indf2,c
  8101                           
  8102                           ; BSR set to: 1
  8103  00A762  0101               	movlb	1	; () banked
  8104  00A764  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8105  00A766  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8106                           
  8107                           ; BSR set to: 1
  8108                           ;main.c: 479: memcpy(p_buffer, &myLongAddress[0], 4);
  8109  00A768  C1B9  F100         	movff	_p_buffer,memcpy@d1
  8110  00A76C  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  8111  00A770  0EE8               	movlw	low _myLongAddress
  8112  00A772  0101               	movlb	1	; () banked
  8113  00A774  6F02               	movwf	memcpy@s1& (0+255),b
  8114  00A776  0E01               	movlw	high _myLongAddress
  8115  00A778  0101               	movlb	1	; () banked
  8116  00A77A  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8117  00A77C  0E00               	movlw	0
  8118  00A77E  0101               	movlb	1	; () banked
  8119  00A780  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8120  00A782  0E04               	movlw	4
  8121  00A784  6F04               	movwf	memcpy@n& (0+255),b
  8122  00A786  EC96  F059         	call	_memcpy	;wreg free
  8123                           
  8124                           ;main.c: 480: p_buffer += 4;
  8125  00A78A  0E04               	movlw	4
  8126  00A78C  0101               	movlb	1	; () banked
  8127  00A78E  27B9               	addwf	_p_buffer& (0+255),f,b
  8128  00A790  0E00               	movlw	0
  8129  00A792  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8130                           
  8131                           ; BSR set to: 1
  8132                           ;main.c: 484: *(p_buffer++) = 0xf0;
  8133  00A794  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8134  00A798  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8135  00A79C  0EF0               	movlw	240
  8136  00A79E  6EDF               	movwf	indf2,c
  8137                           
  8138                           ; BSR set to: 1
  8139  00A7A0  0101               	movlb	1	; () banked
  8140  00A7A2  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8141  00A7A4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8142                           
  8143                           ; BSR set to: 1
  8144                           ;main.c: 487: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  8145  00A7A6  0ED1               	movlw	low _m_buffer
  8146  00A7A8  0101               	movlb	1	; () banked
  8147  00A7AA  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8148  00A7AC  0E02               	movlw	high _m_buffer
  8149  00A7AE  0101               	movlb	1	; () banked
  8150  00A7B0  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8151  00A7B2  0ED1               	movlw	_m_buffer& (0+255)
  8152  00A7B4  0800               	sublw	0
  8153  00A7B6  0101               	movlb	1	; () banked
  8154  00A7B8  25B9               	addwf	_p_buffer& (0+255),w,b
  8155  00A7BA  0101               	movlb	1	; () banked
  8156  00A7BC  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8157  00A7BE  EC7F  F055         	call	_sendHIDBinary	;wreg free
  8158  00A7C2  0012               	return		;funcret
  8159  00A7C4                     __end_of_send_network_register:
  8160                           	opt stack 0
  8161                           tblptru	equ	0xFF8
  8162                           tblptrh	equ	0xFF7
  8163                           tblptrl	equ	0xFF6
  8164                           tablat	equ	0xFF5
  8165                           prodh	equ	0xFF4
  8166                           prodl	equ	0xFF3
  8167                           postinc0	equ	0xFEE
  8168                           plusw0	equ	0xFEB
  8169                           wreg	equ	0xFE8
  8170                           postdec1	equ	0xFE5
  8171                           fsr1h	equ	0xFE2
  8172                           fsr1l	equ	0xFE1
  8173                           indf2	equ	0xFDF
  8174                           postinc2	equ	0xFDE
  8175                           postdec2	equ	0xFDD
  8176                           plusw2	equ	0xFDB
  8177                           fsr2h	equ	0xFDA
  8178                           fsr2l	equ	0xFD9
  8179                           status	equ	0xFD8
  8180                           
  8181 ;; *************** function _send_complete_update *****************
  8182 ;; Defined at:
  8183 ;;		line 493 in file "src/main.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;		None
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  tmp             1    0        unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;		None               void
  8190 ;; Registers used:
  8191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8198 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8199 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8200 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8201 ;;Total ram usage:       13 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:   19
  8204 ;; This function calls:
  8205 ;;		___ftadd
  8206 ;;		___ftmul
  8207 ;;		___ftneg
  8208 ;;		___fttol
  8209 ;;		_dBm_to_mW_ufixed16
  8210 ;;		_encode_ufixed16_variable
  8211 ;;		_encode_uint8_variable
  8212 ;;		_floor
  8213 ;;		_memcpy
  8214 ;;		_sendHIDBinary
  8215 ;; This function is called by:
  8216 ;;		_main
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text14
  8221  00622A                     __ptext14:
  8222                           	opt stack 0
  8223  00622A                     _send_complete_update:
  8224                           	opt stack 11
  8225                           
  8226                           ;main.c: 495: uint8_t tmp;
  8227                           ;main.c: 496: p_buffer = m_buffer;
  8228                           
  8229                           ;incstack = 0
  8230  00622A  0ED1               	movlw	low _m_buffer
  8231  00622C  0101               	movlb	1	; () banked
  8232  00622E  6FB9               	movwf	_p_buffer& (0+255),b
  8233  006230  0E02               	movlw	high _m_buffer
  8234  006232  0101               	movlb	1	; () banked
  8235  006234  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8236                           
  8237                           ; BSR set to: 1
  8238                           ;main.c: 497: *(p_buffer++) = 0x4d;
  8239  006236  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8240  00623A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8241  00623E  0E4D               	movlw	77
  8242  006240  6EDF               	movwf	indf2,c
  8243                           
  8244                           ; BSR set to: 1
  8245  006242  0101               	movlb	1	; () banked
  8246  006244  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8247  006246  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8248                           
  8249                           ; BSR set to: 1
  8250                           ;main.c: 498: *(p_buffer++) = 0x00;
  8251  006248  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8252  00624C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8253  006250  0E00               	movlw	0
  8254  006252  6EDF               	movwf	indf2,c
  8255                           
  8256                           ; BSR set to: 1
  8257  006254  0101               	movlb	1	; () banked
  8258  006256  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8259  006258  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8260                           
  8261                           ; BSR set to: 1
  8262                           ;main.c: 499: *(p_buffer++) = 0x00;
  8263  00625A  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8264  00625E  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8265  006262  0E00               	movlw	0
  8266  006264  6EDF               	movwf	indf2,c
  8267                           
  8268                           ; BSR set to: 1
  8269  006266  0101               	movlb	1	; () banked
  8270  006268  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8271  00626A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8272                           
  8273                           ; BSR set to: 1
  8274                           ;main.c: 500: *(p_buffer++) = 04;
  8275  00626C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8276  006270  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8277  006274  0E04               	movlw	4
  8278  006276  6EDF               	movwf	indf2,c
  8279                           
  8280                           ; BSR set to: 1
  8281  006278  0101               	movlb	1	; () banked
  8282  00627A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8283  00627C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8284                           
  8285                           ; BSR set to: 1
  8286                           ;main.c: 501: *(p_buffer++) = 0xf0;
  8287  00627E  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8288  006282  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8289  006286  0EF0               	movlw	240
  8290  006288  6EDF               	movwf	indf2,c
  8291                           
  8292                           ; BSR set to: 1
  8293  00628A  0101               	movlb	1	; () banked
  8294  00628C  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8295  00628E  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8296                           
  8297                           ; BSR set to: 1
  8298                           ;main.c: 503: memcpy(m_var.label, POWER_LABEL, 3);
  8299  006290  0EDE               	movlw	low _m_var
  8300  006292  0101               	movlb	1	; () banked
  8301  006294  6F00               	movwf	memcpy@d1& (0+255),b
  8302  006296  0E01               	movlw	high _m_var
  8303  006298  0101               	movlb	1	; () banked
  8304  00629A  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8305  00629C  0EC1               	movlw	low _POWER_LABEL
  8306  00629E  0101               	movlb	1	; () banked
  8307  0062A0  6F02               	movwf	memcpy@s1& (0+255),b
  8308  0062A2  0E21               	movlw	high _POWER_LABEL
  8309  0062A4  0101               	movlb	1	; () banked
  8310  0062A6  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8311  0062A8  0E00               	movlw	0
  8312  0062AA  0101               	movlb	1	; () banked
  8313  0062AC  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8314  0062AE  0E03               	movlw	3
  8315  0062B0  6F04               	movwf	memcpy@n& (0+255),b
  8316  0062B2  EC96  F059         	call	_memcpy	;wreg free
  8317                           
  8318                           ;main.c: 504: m_var.unit = 8;
  8319  0062B6  0E08               	movlw	8
  8320  0062B8  0101               	movlb	1	; () banked
  8321  0062BA  6FE4               	movwf	(_m_var+6)& (0+255),b
  8322                           
  8323                           ; BSR set to: 1
  8324                           ;main.c: 505: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  8325  0062BC  0EE2               	movlw	low (_m_var+4)
  8326  0062BE  0101               	movlb	1	; () banked
  8327  0062C0  6F00               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  8328  0062C2  0E01               	movlw	high (_m_var+4)
  8329  0062C4  0101               	movlb	1	; () banked
  8330  0062C6  6F01               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  8331  0062C8  0EE3               	movlw	low (_m_var+5)
  8332  0062CA  0101               	movlb	1	; () banked
  8333  0062CC  6F02               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  8334  0062CE  0E01               	movlw	high (_m_var+5)
  8335  0062D0  0101               	movlb	1	; () banked
  8336  0062D2  6F03               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  8337  0062D4  0101               	movlb	1	; () banked
  8338  0062D6  51C8               	movf	_m_power& (0+255),w,b
  8339  0062D8  EC83  F045         	call	_dBm_to_mW_ufixed16
  8340                           
  8341                           ;main.c: 506: m_var.writable = 1;
  8342  0062DC  0E01               	movlw	1
  8343  0062DE  0101               	movlb	1	; () banked
  8344  0062E0  6FE5               	movwf	(_m_var+7)& (0+255),b
  8345                           
  8346                           ; BSR set to: 1
  8347                           ;main.c: 507: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  8348  0062E2  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  8349  0062E6  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  8350  0062EA  EE21  F0DE         	lfsr	2,_m_var
  8351  0062EE  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  8352  0062F2  0E09               	movlw	9
  8353  0062F4                     u23761:
  8354  0062F4  CFDB FFEB          	movff	plusw2,plusw0
  8355  0062F8  06E8               	decf	wreg,f,c
  8356  0062FA  E2FC               	bc	u23761
  8357  0062FC  EC00  F051         	call	_encode_ufixed16_variable	;wreg free
  8358  006300  0101               	movlb	1	; () banked
  8359  006302  6F47               	movwf	??_send_complete_update& (0+255),b
  8360  006304  0101               	movlb	1	; () banked
  8361  006306  5147               	movf	??_send_complete_update& (0+255),w,b
  8362  006308  0D01               	mullw	1
  8363  00630A  50F3               	movf	prodl,w,c
  8364  00630C  0101               	movlb	1	; () banked
  8365  00630E  27B9               	addwf	_p_buffer& (0+255),f,b
  8366  006310  50F4               	movf	prodh,w,c
  8367  006312  0101               	movlb	1	; () banked
  8368  006314  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8369                           
  8370                           ; BSR set to: 1
  8371                           ;main.c: 508: memcpy(m_var.label, CHANNEL_LABEL, 3);
  8372  006316  0EDE               	movlw	low _m_var
  8373  006318  0101               	movlb	1	; () banked
  8374  00631A  6F00               	movwf	memcpy@d1& (0+255),b
  8375  00631C  0E01               	movlw	high _m_var
  8376  00631E  0101               	movlb	1	; () banked
  8377  006320  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8378  006322  0EB9               	movlw	low _CHANNEL_LABEL
  8379  006324  0101               	movlb	1	; () banked
  8380  006326  6F02               	movwf	memcpy@s1& (0+255),b
  8381  006328  0E21               	movlw	high _CHANNEL_LABEL
  8382  00632A  0101               	movlb	1	; () banked
  8383  00632C  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8384  00632E  0E00               	movlw	0
  8385  006330  0101               	movlb	1	; () banked
  8386  006332  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8387  006334  0E03               	movlw	3
  8388  006336  6F04               	movwf	memcpy@n& (0+255),b
  8389  006338  EC96  F059         	call	_memcpy	;wreg free
  8390                           
  8391                           ;main.c: 509: m_var.unit = 0;
  8392  00633C  0E00               	movlw	0
  8393  00633E  0101               	movlb	1	; () banked
  8394  006340  6FE4               	movwf	(_m_var+6)& (0+255),b
  8395                           
  8396                           ; BSR set to: 1
  8397                           ;main.c: 510: m_var.value_byte1 = BestChannel;
  8398  006342  C1BE  F1E2         	movff	_BestChannel,_m_var+4
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;main.c: 511: m_var.writable = 0;
  8402  006346  0E00               	movlw	0
  8403  006348  0101               	movlb	1	; () banked
  8404  00634A  6FE5               	movwf	(_m_var+7)& (0+255),b
  8405                           
  8406                           ; BSR set to: 1
  8407                           ;main.c: 512: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8408  00634C  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8409  006350  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8410  006354  EE21  F0DE         	lfsr	2,_m_var
  8411  006358  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8412  00635C  0E09               	movlw	9
  8413  00635E                     u23771:
  8414  00635E  CFDB FFEB          	movff	plusw2,plusw0
  8415  006362  06E8               	decf	wreg,f,c
  8416  006364  E2FC               	bc	u23771
  8417  006366  EC8E  F054         	call	_encode_uint8_variable	;wreg free
  8418  00636A  0101               	movlb	1	; () banked
  8419  00636C  6F47               	movwf	??_send_complete_update& (0+255),b
  8420  00636E  0101               	movlb	1	; () banked
  8421  006370  5147               	movf	??_send_complete_update& (0+255),w,b
  8422  006372  0D01               	mullw	1
  8423  006374  50F3               	movf	prodl,w,c
  8424  006376  0101               	movlb	1	; () banked
  8425  006378  27B9               	addwf	_p_buffer& (0+255),f,b
  8426  00637A  50F4               	movf	prodh,w,c
  8427  00637C  0101               	movlb	1	; () banked
  8428  00637E  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8429                           
  8430                           ; BSR set to: 1
  8431                           ;main.c: 513: memcpy(m_var.label, NOISE_LABEL, 3);
  8432  006380  0EDE               	movlw	low _m_var
  8433  006382  0101               	movlb	1	; () banked
  8434  006384  6F00               	movwf	memcpy@d1& (0+255),b
  8435  006386  0E01               	movlw	high _m_var
  8436  006388  0101               	movlb	1	; () banked
  8437  00638A  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8438  00638C  0EBD               	movlw	low _NOISE_LABEL
  8439  00638E  0101               	movlb	1	; () banked
  8440  006390  6F02               	movwf	memcpy@s1& (0+255),b
  8441  006392  0E21               	movlw	high _NOISE_LABEL
  8442  006394  0101               	movlb	1	; () banked
  8443  006396  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8444  006398  0E00               	movlw	0
  8445  00639A  0101               	movlb	1	; () banked
  8446  00639C  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8447  00639E  0E03               	movlw	3
  8448  0063A0  6F04               	movwf	memcpy@n& (0+255),b
  8449  0063A2  EC96  F059         	call	_memcpy	;wreg free
  8450                           
  8451                           ;main.c: 514: m_var.unit = 0;
  8452  0063A6  0E00               	movlw	0
  8453  0063A8  0101               	movlb	1	; () banked
  8454  0063AA  6FE4               	movwf	(_m_var+6)& (0+255),b
  8455                           
  8456                           ; BSR set to: 1
  8457                           ;main.c: 515: m_var.value_byte1 = noise_level;
  8458  0063AC  C1F7  F1E2         	movff	_noise_level,_m_var+4
  8459                           
  8460                           ; BSR set to: 1
  8461                           ;main.c: 516: m_var.writable = 0;
  8462  0063B0  0E00               	movlw	0
  8463  0063B2  0101               	movlb	1	; () banked
  8464  0063B4  6FE5               	movwf	(_m_var+7)& (0+255),b
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;main.c: 517: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8468  0063B6  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8469  0063BA  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8470  0063BE  EE21  F0DE         	lfsr	2,_m_var
  8471  0063C2  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8472  0063C6  0E09               	movlw	9
  8473  0063C8                     u23781:
  8474  0063C8  CFDB FFEB          	movff	plusw2,plusw0
  8475  0063CC  06E8               	decf	wreg,f,c
  8476  0063CE  E2FC               	bc	u23781
  8477  0063D0  EC8E  F054         	call	_encode_uint8_variable	;wreg free
  8478  0063D4  0101               	movlb	1	; () banked
  8479  0063D6  6F47               	movwf	??_send_complete_update& (0+255),b
  8480  0063D8  0101               	movlb	1	; () banked
  8481  0063DA  5147               	movf	??_send_complete_update& (0+255),w,b
  8482  0063DC  0D01               	mullw	1
  8483  0063DE  50F3               	movf	prodl,w,c
  8484  0063E0  0101               	movlb	1	; () banked
  8485  0063E2  27B9               	addwf	_p_buffer& (0+255),f,b
  8486  0063E4  50F4               	movf	prodh,w,c
  8487  0063E6  0101               	movlb	1	; () banked
  8488  0063E8  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8489                           
  8490                           ; BSR set to: 1
  8491                           ;main.c: 519: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8492  0063EA  0ED1               	movlw	low _m_buffer
  8493  0063EC  0101               	movlb	1	; () banked
  8494  0063EE  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8495  0063F0  0E02               	movlw	high _m_buffer
  8496  0063F2  0101               	movlb	1	; () banked
  8497  0063F4  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8498  0063F6  0ED1               	movlw	_m_buffer& (0+255)
  8499  0063F8  0800               	sublw	0
  8500  0063FA  0101               	movlb	1	; () banked
  8501  0063FC  25B9               	addwf	_p_buffer& (0+255),w,b
  8502  0063FE  0101               	movlb	1	; () banked
  8503  006400  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8504  006402  EC7F  F055         	call	_sendHIDBinary	;wreg free
  8505                           
  8506                           ;main.c: 520: _delay((unsigned long)((20)*(16000000/4000.0)));
  8507  006406  0E68               	movlw	104
  8508  006408  0101               	movlb	1	; () banked
  8509  00640A  6F47               	movwf	??_send_complete_update& (0+255),b
  8510  00640C  0EE4               	movlw	228
  8511  00640E                     u25257:
  8512  00640E  2EE8               	decfsz	wreg,f,c
  8513  006410  D7FE               	goto	u25257
  8514  006412  2F47               	decfsz	??_send_complete_update& (0+255),f,b
  8515  006414  D7FC               	goto	u25257
  8516  006416  D000               	nop2	
  8517                           
  8518                           ;main.c: 522: p_buffer = m_buffer;
  8519  006418  0ED1               	movlw	low _m_buffer
  8520  00641A  0101               	movlb	1	; () banked
  8521  00641C  6FB9               	movwf	_p_buffer& (0+255),b
  8522  00641E  0E02               	movlw	high _m_buffer
  8523  006420  0101               	movlb	1	; () banked
  8524  006422  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8525                           
  8526                           ; BSR set to: 1
  8527                           ;main.c: 523: *(p_buffer++) = 0x4d;
  8528  006424  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8529  006428  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8530  00642C  0E4D               	movlw	77
  8531  00642E  6EDF               	movwf	indf2,c
  8532                           
  8533                           ; BSR set to: 1
  8534  006430  0101               	movlb	1	; () banked
  8535  006432  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8536  006434  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8537                           
  8538                           ; BSR set to: 1
  8539                           ;main.c: 524: *(p_buffer++) = 0x00;
  8540  006436  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8541  00643A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8542  00643E  0E00               	movlw	0
  8543  006440  6EDF               	movwf	indf2,c
  8544                           
  8545                           ; BSR set to: 1
  8546  006442  0101               	movlb	1	; () banked
  8547  006444  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8548  006446  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8549                           
  8550                           ; BSR set to: 1
  8551                           ;main.c: 525: *(p_buffer++) = 0x00;
  8552  006448  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8553  00644C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8554  006450  0E00               	movlw	0
  8555  006452  6EDF               	movwf	indf2,c
  8556                           
  8557                           ; BSR set to: 1
  8558  006454  0101               	movlb	1	; () banked
  8559  006456  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8560  006458  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;main.c: 526: *(p_buffer++) = 04;
  8564  00645A  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8565  00645E  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8566  006462  0E04               	movlw	4
  8567  006464  6EDF               	movwf	indf2,c
  8568                           
  8569                           ; BSR set to: 1
  8570  006466  0101               	movlb	1	; () banked
  8571  006468  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8572  00646A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8573                           
  8574                           ; BSR set to: 1
  8575                           ;main.c: 527: *(p_buffer++) = 0xff;
  8576  00646C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8577  006470  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8578  006474  0EFF               	movlw	255
  8579  006476  6EDF               	movwf	indf2,c
  8580                           
  8581                           ; BSR set to: 1
  8582  006478  0101               	movlb	1	; () banked
  8583  00647A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8584  00647C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;main.c: 530: memcpy(m_var.label, UPTIME_LABEL, 3);
  8588  00647E  0EDE               	movlw	low _m_var
  8589  006480  0101               	movlb	1	; () banked
  8590  006482  6F00               	movwf	memcpy@d1& (0+255),b
  8591  006484  0E01               	movlw	high _m_var
  8592  006486  0101               	movlb	1	; () banked
  8593  006488  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8594  00648A  0ECD               	movlw	low _UPTIME_LABEL
  8595  00648C  0101               	movlb	1	; () banked
  8596  00648E  6F02               	movwf	memcpy@s1& (0+255),b
  8597  006490  0E21               	movlw	high _UPTIME_LABEL
  8598  006492  0101               	movlb	1	; () banked
  8599  006494  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8600  006496  0E00               	movlw	0
  8601  006498  0101               	movlb	1	; () banked
  8602  00649A  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8603  00649C  0E03               	movlw	3
  8604  00649E  6F04               	movwf	memcpy@n& (0+255),b
  8605  0064A0  EC96  F059         	call	_memcpy	;wreg free
  8606                           
  8607                           ;main.c: 531: m_var.unit = 7;
  8608  0064A4  0E07               	movlw	7
  8609  0064A6  0101               	movlb	1	; () banked
  8610  0064A8  6FE4               	movwf	(_m_var+6)& (0+255),b
  8611                           
  8612                           ; BSR set to: 1
  8613                           ;main.c: 532: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  8614  0064AA  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  8615  0064AE  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  8616  0064B2  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  8617  0064B6  EC55  F049         	call	_floor	;wreg free
  8618  0064BA  C12D  F148         	movff	?_floor,_send_complete_update$6065
  8619  0064BE  C12E  F149         	movff	?_floor+1,_send_complete_update$6065+1
  8620  0064C2  C12F  F14A         	movff	?_floor+2,_send_complete_update$6065+2
  8621                           
  8622                           ;main.c: 532: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  8623  0064C6  C148  F114         	movff	_send_complete_update$6065,___fttol@f1
  8624  0064CA  C149  F115         	movff	_send_complete_update$6065+1,___fttol@f1+1
  8625  0064CE  C14A  F116         	movff	_send_complete_update$6065+2,___fttol@f1+2
  8626  0064D2  EC2F  F041         	call	___fttol	;wreg free
  8627  0064D6  0101               	movlb	1	; () banked
  8628  0064D8  5114               	movf	?___fttol& (0+255),w,b
  8629  0064DA  0101               	movlb	1	; () banked
  8630  0064DC  6FE2               	movwf	(_m_var+4)& (0+255),b
  8631                           
  8632                           ; BSR set to: 1
  8633                           ;main.c: 533: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8634  0064DE  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  8635  0064E2  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  8636  0064E6  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  8637  0064EA  EC55  F049         	call	_floor	;wreg free
  8638  0064EE  C12D  F135         	movff	?_floor,___ftneg@f1
  8639  0064F2  C12E  F136         	movff	?_floor+1,___ftneg@f1+1
  8640  0064F6  C12F  F137         	movff	?_floor+2,___ftneg@f1+2
  8641  0064FA  ECD5  F05C         	call	___ftneg	;wreg free
  8642  0064FE  C135  F14B         	movff	?___ftneg,_send_complete_update$6066
  8643  006502  C136  F14C         	movff	?___ftneg+1,_send_complete_update$6066+1
  8644  006506  C137  F14D         	movff	?___ftneg+2,_send_complete_update$6066+2
  8645                           
  8646                           ;main.c: 533: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8647  00650A  0E00               	movlw	0
  8648  00650C  0101               	movlb	1	; () banked
  8649  00650E  6F3B               	movwf	___ftmul@f2& (0+255),b
  8650  006510  0EC8               	movlw	200
  8651  006512  0101               	movlb	1	; () banked
  8652  006514  6F3C               	movwf	(___ftmul@f2+1)& (0+255),b
  8653  006516  0E42               	movlw	66
  8654  006518  0101               	movlb	1	; () banked
  8655  00651A  6F3D               	movwf	(___ftmul@f2+2)& (0+255),b
  8656  00651C  C1B0  F10B         	movff	_m_uptime_days,___ftadd@f2	;volatile
  8657  006520  C1B1  F10C         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  8658  006524  C1B2  F10D         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  8659  006528  C14B  F108         	movff	_send_complete_update$6066,___ftadd@f1
  8660  00652C  C14C  F109         	movff	_send_complete_update$6066+1,___ftadd@f1+1
  8661  006530  C14D  F10A         	movff	_send_complete_update$6066+2,___ftadd@f1+2
  8662  006534  EC70  F034         	call	___ftadd	;wreg free
  8663  006538  C108  F138         	movff	?___ftadd,___ftmul@f1
  8664  00653C  C109  F139         	movff	?___ftadd+1,___ftmul@f1+1
  8665  006540  C10A  F13A         	movff	?___ftadd+2,___ftmul@f1+2
  8666  006544  EC8B  F03E         	call	___ftmul	;wreg free
  8667  006548  C138  F14E         	movff	?___ftmul,_send_complete_update$6067
  8668  00654C  C139  F14F         	movff	?___ftmul+1,_send_complete_update$6067+1
  8669  006550  C13A  F150         	movff	?___ftmul+2,_send_complete_update$6067+2
  8670                           
  8671                           ;main.c: 533: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8672  006554  C14E  F12D         	movff	_send_complete_update$6067,floor@x
  8673  006558  C14F  F12E         	movff	_send_complete_update$6067+1,floor@x+1
  8674  00655C  C150  F12F         	movff	_send_complete_update$6067+2,floor@x+2
  8675  006560  EC55  F049         	call	_floor	;wreg free
  8676  006564  C12D  F151         	movff	?_floor,_send_complete_update$6068
  8677  006568  C12E  F152         	movff	?_floor+1,_send_complete_update$6068+1
  8678  00656C  C12F  F153         	movff	?_floor+2,_send_complete_update$6068+2
  8679                           
  8680                           ;main.c: 533: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8681  006570  C151  F114         	movff	_send_complete_update$6068,___fttol@f1
  8682  006574  C152  F115         	movff	_send_complete_update$6068+1,___fttol@f1+1
  8683  006578  C153  F116         	movff	_send_complete_update$6068+2,___fttol@f1+2
  8684  00657C  EC2F  F041         	call	___fttol	;wreg free
  8685  006580  0101               	movlb	1	; () banked
  8686  006582  5114               	movf	?___fttol& (0+255),w,b
  8687  006584  0101               	movlb	1	; () banked
  8688  006586  6FE3               	movwf	(_m_var+5)& (0+255),b
  8689                           
  8690                           ; BSR set to: 1
  8691                           ;main.c: 534: m_var.writable = 0;
  8692  006588  0E00               	movlw	0
  8693  00658A  0101               	movlb	1	; () banked
  8694  00658C  6FE5               	movwf	(_m_var+7)& (0+255),b
  8695                           
  8696                           ; BSR set to: 1
  8697                           ;main.c: 535: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  8698  00658E  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  8699  006592  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  8700  006596  EE21  F0DE         	lfsr	2,_m_var
  8701  00659A  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  8702  00659E  0E09               	movlw	9
  8703  0065A0                     u23791:
  8704  0065A0  CFDB FFEB          	movff	plusw2,plusw0
  8705  0065A4  06E8               	decf	wreg,f,c
  8706  0065A6  E2FC               	bc	u23791
  8707  0065A8  EC00  F051         	call	_encode_ufixed16_variable	;wreg free
  8708  0065AC  0101               	movlb	1	; () banked
  8709  0065AE  6F47               	movwf	??_send_complete_update& (0+255),b
  8710  0065B0  0101               	movlb	1	; () banked
  8711  0065B2  5147               	movf	??_send_complete_update& (0+255),w,b
  8712  0065B4  0D01               	mullw	1
  8713  0065B6  50F3               	movf	prodl,w,c
  8714  0065B8  0101               	movlb	1	; () banked
  8715  0065BA  27B9               	addwf	_p_buffer& (0+255),f,b
  8716  0065BC  50F4               	movf	prodh,w,c
  8717  0065BE  0101               	movlb	1	; () banked
  8718  0065C0  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8719                           
  8720                           ; BSR set to: 1
  8721                           ;main.c: 537: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  8722  0065C2  0EDE               	movlw	low _m_var
  8723  0065C4  0101               	movlb	1	; () banked
  8724  0065C6  6F00               	movwf	memcpy@d1& (0+255),b
  8725  0065C8  0E01               	movlw	high _m_var
  8726  0065CA  0101               	movlb	1	; () banked
  8727  0065CC  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8728  0065CE  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
  8729  0065D0  0101               	movlb	1	; () banked
  8730  0065D2  6F02               	movwf	memcpy@s1& (0+255),b
  8731  0065D4  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  8732  0065D6  0101               	movlb	1	; () banked
  8733  0065D8  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8734  0065DA  0E00               	movlw	0
  8735  0065DC  0101               	movlb	1	; () banked
  8736  0065DE  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8737  0065E0  0E03               	movlw	3
  8738  0065E2  6F04               	movwf	memcpy@n& (0+255),b
  8739  0065E4  EC96  F059         	call	_memcpy	;wreg free
  8740                           
  8741                           ;main.c: 538: m_var.unit = 4;
  8742  0065E8  0E04               	movlw	4
  8743  0065EA  0101               	movlb	1	; () banked
  8744  0065EC  6FE4               	movwf	(_m_var+6)& (0+255),b
  8745                           
  8746                           ; BSR set to: 1
  8747                           ;main.c: 539: m_var.value_byte1 = m_update_frequency;
  8748  0065EE  C1FA  F1E2         	movff	_m_update_frequency,_m_var+4	;volatile
  8749                           
  8750                           ; BSR set to: 1
  8751                           ;main.c: 540: m_var.writable = 1;
  8752  0065F2  0E01               	movlw	1
  8753  0065F4  0101               	movlb	1	; () banked
  8754  0065F6  6FE5               	movwf	(_m_var+7)& (0+255),b
  8755                           
  8756                           ; BSR set to: 1
  8757                           ;main.c: 541: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8758  0065F8  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8759  0065FC  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8760  006600  EE21  F0DE         	lfsr	2,_m_var
  8761  006604  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8762  006608  0E09               	movlw	9
  8763  00660A                     u23801:
  8764  00660A  CFDB FFEB          	movff	plusw2,plusw0
  8765  00660E  06E8               	decf	wreg,f,c
  8766  006610  E2FC               	bc	u23801
  8767  006612  EC8E  F054         	call	_encode_uint8_variable	;wreg free
  8768  006616  0101               	movlb	1	; () banked
  8769  006618  6F47               	movwf	??_send_complete_update& (0+255),b
  8770  00661A  0101               	movlb	1	; () banked
  8771  00661C  5147               	movf	??_send_complete_update& (0+255),w,b
  8772  00661E  0D01               	mullw	1
  8773  006620  50F3               	movf	prodl,w,c
  8774  006622  0101               	movlb	1	; () banked
  8775  006624  27B9               	addwf	_p_buffer& (0+255),f,b
  8776  006626  50F4               	movf	prodh,w,c
  8777  006628  0101               	movlb	1	; () banked
  8778  00662A  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8779                           
  8780                           ; BSR set to: 1
  8781                           ;main.c: 543: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8782  00662C  0ED1               	movlw	low _m_buffer
  8783  00662E  0101               	movlb	1	; () banked
  8784  006630  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8785  006632  0E02               	movlw	high _m_buffer
  8786  006634  0101               	movlb	1	; () banked
  8787  006636  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8788  006638  0ED1               	movlw	_m_buffer& (0+255)
  8789  00663A  0800               	sublw	0
  8790  00663C  0101               	movlb	1	; () banked
  8791  00663E  25B9               	addwf	_p_buffer& (0+255),w,b
  8792  006640  0101               	movlb	1	; () banked
  8793  006642  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8794  006644  EC7F  F055         	call	_sendHIDBinary	;wreg free
  8795                           
  8796                           ;main.c: 544: _delay((unsigned long)((20)*(16000000/4000.0)));
  8797  006648  0E68               	movlw	104
  8798  00664A  0101               	movlb	1	; () banked
  8799  00664C  6F47               	movwf	??_send_complete_update& (0+255),b
  8800  00664E  0EE4               	movlw	228
  8801  006650                     u25267:
  8802  006650  2EE8               	decfsz	wreg,f,c
  8803  006652  D7FE               	goto	u25267
  8804  006654  2F47               	decfsz	??_send_complete_update& (0+255),f,b
  8805  006656  D7FC               	goto	u25267
  8806  006658  D000               	nop2	
  8807  00665A  0012               	return		;funcret
  8808  00665C                     __end_of_send_complete_update:
  8809                           	opt stack 0
  8810                           tblptru	equ	0xFF8
  8811                           tblptrh	equ	0xFF7
  8812                           tblptrl	equ	0xFF6
  8813                           tablat	equ	0xFF5
  8814                           prodh	equ	0xFF4
  8815                           prodl	equ	0xFF3
  8816                           postinc0	equ	0xFEE
  8817                           plusw0	equ	0xFEB
  8818                           wreg	equ	0xFE8
  8819                           postdec1	equ	0xFE5
  8820                           fsr1h	equ	0xFE2
  8821                           fsr1l	equ	0xFE1
  8822                           indf2	equ	0xFDF
  8823                           postinc2	equ	0xFDE
  8824                           postdec2	equ	0xFDD
  8825                           plusw2	equ	0xFDB
  8826                           fsr2h	equ	0xFDA
  8827                           fsr2l	equ	0xFD9
  8828                           status	equ	0xFD8
  8829                           
  8830 ;; *************** function _floor *****************
  8831 ;; Defined at:
  8832 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  x               3   45[BANK1 ] unsigned char 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  i               3   48[BANK1 ] unsigned char 
  8837 ;;  expon           2   51[BANK1 ] int 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  3   45[BANK1 ] int 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8847 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8848 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8850 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8851 ;;Total ram usage:        8 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:   18
  8854 ;; This function calls:
  8855 ;;		___altoft
  8856 ;;		___ftadd
  8857 ;;		___ftge
  8858 ;;		___fttol
  8859 ;;		_frexp
  8860 ;; This function is called by:
  8861 ;;		_send_complete_update
  8862 ;;		_send_periodic_update
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text15
  8867  0092AA                     __ptext15:
  8868                           	opt stack 0
  8869  0092AA                     _floor:
  8870                           	opt stack 11
  8871                           
  8872                           ;incstack = 0
  8873  0092AA  C12D  F100         	movff	floor@x,frexp@value
  8874  0092AE  C12E  F101         	movff	floor@x+1,frexp@value+1
  8875  0092B2  C12F  F102         	movff	floor@x+2,frexp@value+2
  8876  0092B6  0E33               	movlw	low floor@expon
  8877  0092B8  0101               	movlb	1	; () banked
  8878  0092BA  6F03               	movwf	frexp@eptr& (0+255),b
  8879  0092BC  0E01               	movlw	high floor@expon
  8880  0092BE  0101               	movlb	1	; () banked
  8881  0092C0  6F04               	movwf	(frexp@eptr+1)& (0+255),b
  8882  0092C2  ECF8  F056         	call	_frexp	;wreg free
  8883  0092C6  0101               	movlb	1	; () banked
  8884  0092C8  AF34               	btfss	(floor@expon+1)& (0+255),7,b
  8885  0092CA  D017               	goto	l19315
  8886                           
  8887                           ; BSR set to: 1
  8888  0092CC  0101               	movlb	1	; () banked
  8889  0092CE  AF2F               	btfss	(floor@x+2)& (0+255),7,b
  8890  0092D0  D00A               	goto	l19311
  8891                           
  8892                           ; BSR set to: 1
  8893  0092D2  0E00               	movlw	0
  8894  0092D4  0101               	movlb	1	; () banked
  8895  0092D6  6F2D               	movwf	?_floor& (0+255),b
  8896  0092D8  0E80               	movlw	128
  8897  0092DA  0101               	movlb	1	; () banked
  8898  0092DC  6F2E               	movwf	(?_floor+1)& (0+255),b
  8899  0092DE  0EBF               	movlw	191
  8900  0092E0  0101               	movlb	1	; () banked
  8901  0092E2  6F2F               	movwf	(?_floor+2)& (0+255),b
  8902                           
  8903                           ; BSR set to: 1
  8904  0092E4  0012               	return	
  8905  0092E6                     l19311:
  8906                           
  8907                           ; BSR set to: 1
  8908  0092E6  0E00               	movlw	0
  8909  0092E8  0101               	movlb	1	; () banked
  8910  0092EA  6F2D               	movwf	?_floor& (0+255),b
  8911  0092EC  0E00               	movlw	0
  8912  0092EE  0101               	movlb	1	; () banked
  8913  0092F0  6F2E               	movwf	(?_floor+1)& (0+255),b
  8914  0092F2  0E00               	movlw	0
  8915  0092F4  0101               	movlb	1	; () banked
  8916  0092F6  6F2F               	movwf	(?_floor+2)& (0+255),b
  8917                           
  8918                           ; BSR set to: 1
  8919  0092F8  0012               	return	
  8920  0092FA                     l19315:
  8921                           
  8922                           ; BSR set to: 1
  8923  0092FA  0101               	movlb	1	; () banked
  8924  0092FC  5134               	movf	(floor@expon+1)& (0+255),w,b
  8925  0092FE  E105               	bnz	u21980
  8926  009300  0E15               	movlw	21
  8927  009302  0101               	movlb	1	; () banked
  8928  009304  5D33               	subwf	floor@expon& (0+255),w,b
  8929  009306  A0D8               	btfss	status,0,c
  8930  009308  D007               	goto	l19319
  8931  00930A                     u21980:
  8932                           
  8933                           ; BSR set to: 1
  8934  00930A  C12D  F12D         	movff	floor@x,?_floor
  8935  00930E  C12E  F12E         	movff	floor@x+1,?_floor+1
  8936  009312  C12F  F12F         	movff	floor@x+2,?_floor+2
  8937  009316  0012               	return	
  8938  009318                     l19319:
  8939                           
  8940                           ; BSR set to: 1
  8941  009318  C12D  F114         	movff	floor@x,___fttol@f1
  8942  00931C  C12E  F115         	movff	floor@x+1,___fttol@f1+1
  8943  009320  C12F  F116         	movff	floor@x+2,___fttol@f1+2
  8944  009324  EC2F  F041         	call	___fttol	;wreg free
  8945  009328  C114  F123         	movff	?___fttol,___altoft@c
  8946  00932C  C115  F124         	movff	?___fttol+1,___altoft@c+1
  8947  009330  C116  F125         	movff	?___fttol+2,___altoft@c+2
  8948  009334  C117  F126         	movff	?___fttol+3,___altoft@c+3
  8949  009338  ECE1  F054         	call	___altoft	;wreg free
  8950  00933C  C123  F130         	movff	?___altoft,floor@i
  8951  009340  C124  F131         	movff	?___altoft+1,floor@i+1
  8952  009344  C125  F132         	movff	?___altoft+2,floor@i+2
  8953  009348  C12D  F100         	movff	floor@x,___ftge@ff1
  8954  00934C  C12E  F101         	movff	floor@x+1,___ftge@ff1+1
  8955  009350  C12F  F102         	movff	floor@x+2,___ftge@ff1+2
  8956  009354  C130  F103         	movff	floor@i,___ftge@ff2
  8957  009358  C131  F104         	movff	floor@i+1,___ftge@ff2+1
  8958  00935C  C132  F105         	movff	floor@i+2,___ftge@ff2+2
  8959  009360  EC50  F04E         	call	___ftge	;wreg free
  8960  009364  0101               	movlb	1	; () banked
  8961  009366  B0D8               	btfsc	status,0,c
  8962  009368  D018               	goto	l2461
  8963                           
  8964                           ; BSR set to: 1
  8965  00936A  C130  F108         	movff	floor@i,___ftadd@f1
  8966  00936E  C131  F109         	movff	floor@i+1,___ftadd@f1+1
  8967  009372  C132  F10A         	movff	floor@i+2,___ftadd@f1+2
  8968  009376  0E00               	movlw	0
  8969  009378  0101               	movlb	1	; () banked
  8970  00937A  6F0B               	movwf	___ftadd@f2& (0+255),b
  8971  00937C  0E80               	movlw	128
  8972  00937E  0101               	movlb	1	; () banked
  8973  009380  6F0C               	movwf	(___ftadd@f2+1)& (0+255),b
  8974  009382  0EBF               	movlw	191
  8975  009384  0101               	movlb	1	; () banked
  8976  009386  6F0D               	movwf	(___ftadd@f2+2)& (0+255),b
  8977  009388  EC70  F034         	call	___ftadd	;wreg free
  8978  00938C  C108  F12D         	movff	?___ftadd,?_floor
  8979  009390  C109  F12E         	movff	?___ftadd+1,?_floor+1
  8980  009394  C10A  F12F         	movff	?___ftadd+2,?_floor+2
  8981  009398  0012               	return	
  8982  00939A                     l2461:
  8983                           
  8984                           ; BSR set to: 1
  8985  00939A  C130  F12D         	movff	floor@i,?_floor
  8986  00939E  C131  F12E         	movff	floor@i+1,?_floor+1
  8987  0093A2  C132  F12F         	movff	floor@i+2,?_floor+2
  8988  0093A6  0012               	return		;funcret
  8989  0093A8                     __end_of_floor:
  8990                           	opt stack 0
  8991                           tblptru	equ	0xFF8
  8992                           tblptrh	equ	0xFF7
  8993                           tblptrl	equ	0xFF6
  8994                           tablat	equ	0xFF5
  8995                           prodh	equ	0xFF4
  8996                           prodl	equ	0xFF3
  8997                           postinc0	equ	0xFEE
  8998                           plusw0	equ	0xFEB
  8999                           wreg	equ	0xFE8
  9000                           postdec1	equ	0xFE5
  9001                           fsr1h	equ	0xFE2
  9002                           fsr1l	equ	0xFE1
  9003                           indf2	equ	0xFDF
  9004                           postinc2	equ	0xFDE
  9005                           postdec2	equ	0xFDD
  9006                           plusw2	equ	0xFDB
  9007                           fsr2h	equ	0xFDA
  9008                           fsr2l	equ	0xFD9
  9009                           status	equ	0xFD8
  9010                           
  9011 ;; *************** function _frexp *****************
  9012 ;; Defined at:
  9013 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  value           3    0[BANK1 ] int 
  9016 ;;  eptr            2    3[BANK1 ] PTR int 
  9017 ;;		 -> floor@expon(2), 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  3    0[BANK1 ] PTR int 
  9022 ;; Registers used:
  9023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9029 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9033 ;;Total ram usage:        7 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:   16
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_floor
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text16
  9044  00ADF0                     __ptext16:
  9045                           	opt stack 0
  9046  00ADF0                     _frexp:
  9047                           	opt stack 12
  9048                           
  9049                           ;incstack = 0
  9050  00ADF0  0101               	movlb	1	; () banked
  9051  00ADF2  5100               	movf	frexp@value& (0+255),w,b
  9052  00ADF4  0101               	movlb	1	; () banked
  9053  00ADF6  1101               	iorwf	(frexp@value+1)& (0+255),w,b
  9054  00ADF8  0101               	movlb	1	; () banked
  9055  00ADFA  1102               	iorwf	(frexp@value+2)& (0+255),w,b
  9056  00ADFC  A4D8               	btfss	status,2,c
  9057  00ADFE  D009               	goto	l18911
  9058                           
  9059                           ; BSR set to: 1
  9060  00AE00  C103  FFD9         	movff	frexp@eptr,fsr2l
  9061  00AE04  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9062  00AE08  0E00               	movlw	0
  9063  00AE0A  6EDE               	movwf	postinc2,c
  9064  00AE0C  0E00               	movlw	0
  9065  00AE0E  6EDD               	movwf	postdec2,c
  9066                           
  9067                           ; BSR set to: 1
  9068                           ;	Return value of _frexp is never used
  9069  00AE10  0012               	return	
  9070  00AE12                     l18911:
  9071                           
  9072                           ; BSR set to: 1
  9073  00AE12  0101               	movlb	1	; () banked
  9074  00AE14  5102               	movf	(frexp@value+2)& (0+255),w,b
  9075  00AE16  0B7F               	andlw	127
  9076  00AE18  0101               	movlb	1	; () banked
  9077  00AE1A  6F05               	movwf	??_frexp& (0+255),b
  9078  00AE1C  6B06               	clrf	(??_frexp+1)& (0+255),b
  9079  00AE1E  90D8               	bcf	status,0,c
  9080  00AE20  0101               	movlb	1	; () banked
  9081  00AE22  3705               	rlcf	??_frexp& (0+255),f,b
  9082  00AE24  3706               	rlcf	(??_frexp+1)& (0+255),f,b
  9083  00AE26  C103  FFD9         	movff	frexp@eptr,fsr2l
  9084  00AE2A  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9085  00AE2E  C105  FFDE         	movff	??_frexp,postinc2
  9086  00AE32  C106  FFDD         	movff	??_frexp+1,postdec2
  9087  00AE36  0101               	movlb	1	; () banked
  9088  00AE38  AF01               	btfss	(frexp@value+1)& (0+255),7,b
  9089  00AE3A  D004               	goto	u21510
  9090  00AE3C  0101               	movlb	1	; () banked
  9091  00AE3E  6B05               	clrf	??_frexp& (0+255),b
  9092  00AE40  2B05               	incf	??_frexp& (0+255),f,b
  9093  00AE42  D002               	goto	u21518
  9094  00AE44                     u21510:
  9095  00AE44  0101               	movlb	1	; () banked
  9096  00AE46  6B05               	clrf	??_frexp& (0+255),b
  9097  00AE48                     u21518:
  9098  00AE48  0101               	movlb	1	; () banked
  9099  00AE4A  5105               	movf	??_frexp& (0+255),w,b
  9100  00AE4C  C103  FFD9         	movff	frexp@eptr,fsr2l
  9101  00AE50  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9102  00AE54  12DE               	iorwf	postinc2,f,c
  9103  00AE56  0E00               	movlw	0
  9104  00AE58  12DD               	iorwf	postdec2,f,c
  9105                           
  9106                           ; BSR set to: 1
  9107  00AE5A  C103  FFD9         	movff	frexp@eptr,fsr2l
  9108  00AE5E  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9109  00AE62  0E82               	movlw	130
  9110  00AE64  26DE               	addwf	postinc2,f,c
  9111  00AE66  0EFF               	movlw	255
  9112  00AE68  22DD               	addwfc	postdec2,f,c
  9113                           
  9114                           ; BSR set to: 1
  9115  00AE6A  0101               	movlb	1	; () banked
  9116  00AE6C  8102               	bsf	(frexp@value+2)& (0+255),0,b
  9117  00AE6E  8302               	bsf	(frexp@value+2)& (0+255),1,b
  9118  00AE70  8502               	bsf	(frexp@value+2)& (0+255),2,b
  9119  00AE72  8702               	bsf	(frexp@value+2)& (0+255),3,b
  9120  00AE74  8902               	bsf	(frexp@value+2)& (0+255),4,b
  9121  00AE76  8B02               	bsf	(frexp@value+2)& (0+255),5,b
  9122  00AE78  9D02               	bcf	(frexp@value+2)& (0+255),6,b
  9123                           
  9124                           ; BSR set to: 1
  9125  00AE7A  0101               	movlb	1	; () banked
  9126  00AE7C  9F01               	bcf	(frexp@value+1)& (0+255),7,b
  9127  00AE7E  0012               	return	
  9128  00AE80                     __end_of_frexp:
  9129                           	opt stack 0
  9130                           tblptru	equ	0xFF8
  9131                           tblptrh	equ	0xFF7
  9132                           tblptrl	equ	0xFF6
  9133                           tablat	equ	0xFF5
  9134                           prodh	equ	0xFF4
  9135                           prodl	equ	0xFF3
  9136                           postinc0	equ	0xFEE
  9137                           plusw0	equ	0xFEB
  9138                           wreg	equ	0xFE8
  9139                           postdec1	equ	0xFE5
  9140                           fsr1h	equ	0xFE2
  9141                           fsr1l	equ	0xFE1
  9142                           indf2	equ	0xFDF
  9143                           postinc2	equ	0xFDE
  9144                           postdec2	equ	0xFDD
  9145                           plusw2	equ	0xFDB
  9146                           fsr2h	equ	0xFDA
  9147                           fsr2l	equ	0xFD9
  9148                           status	equ	0xFD8
  9149                           
  9150 ;; *************** function ___fttol *****************
  9151 ;; Defined at:
  9152 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  f1              3   20[BANK1 ] float 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  lval            4   30[BANK1 ] unsigned long 
  9157 ;;  exp1            1   34[BANK1 ] unsigned char 
  9158 ;;  sign1           1   29[BANK1 ] unsigned char 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  4   20[BANK1 ] long 
  9161 ;; Registers used:
  9162 ;;		wreg, status,2, status,0
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9168 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9169 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9170 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;Total ram usage:       15 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; Hardware stack levels required when called:   16
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_send_complete_update
  9179 ;;		_send_periodic_update
  9180 ;;		_floor
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text17
  9185  00825E                     __ptext17:
  9186                           	opt stack 0
  9187  00825E                     ___fttol:
  9188                           	opt stack 12
  9189                           
  9190                           ; BSR set to: 1
  9191                           ;incstack = 0
  9192  00825E  C116  F118         	movff	___fttol@f1+2,??___fttol
  9193  008262  0101               	movlb	1	; () banked
  9194  008264  6B19               	clrf	(??___fttol+1)& (0+255),b
  9195  008266  6B1A               	clrf	(??___fttol+2)& (0+255),b
  9196  008268  0101               	movlb	1	; () banked
  9197  00826A  3515               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9198  00826C  0101               	movlb	1	; () banked
  9199  00826E  3718               	rlcf	??___fttol& (0+255),f,b
  9200  008270  E301               	bnc	u21551
  9201  008272  8119               	bsf	(??___fttol+1)& (0+255),0,b
  9202  008274                     u21551:
  9203  008274  0101               	movlb	1	; () banked
  9204  008276  5118               	movf	??___fttol& (0+255),w,b
  9205  008278  0101               	movlb	1	; () banked
  9206  00827A  6F22               	movwf	___fttol@exp1& (0+255),b
  9207  00827C  0101               	movlb	1	; () banked
  9208  00827E  5122               	movf	___fttol@exp1& (0+255),w,b
  9209  008280  A4D8               	btfss	status,2,c
  9210  008282  D00A               	goto	l18945
  9211                           
  9212                           ; BSR set to: 1
  9213  008284  0E00               	movlw	0
  9214  008286  0101               	movlb	1	; () banked
  9215  008288  6F14               	movwf	?___fttol& (0+255),b
  9216  00828A  0E00               	movlw	0
  9217  00828C  6F15               	movwf	(?___fttol+1)& (0+255),b
  9218  00828E  0E00               	movlw	0
  9219  008290  6F16               	movwf	(?___fttol+2)& (0+255),b
  9220  008292  0E00               	movlw	0
  9221  008294  6F17               	movwf	(?___fttol+3)& (0+255),b
  9222                           
  9223                           ; BSR set to: 1
  9224  008296  0012               	return	
  9225  008298                     l18945:
  9226                           
  9227                           ; BSR set to: 1
  9228  008298  0E17               	movlw	23
  9229  00829A  0101               	movlb	1	; () banked
  9230  00829C  6F18               	movwf	??___fttol& (0+255),b
  9231  00829E  C114  F119         	movff	___fttol@f1,??___fttol+1
  9232  0082A2  C115  F11A         	movff	___fttol@f1+1,??___fttol+2
  9233  0082A6  C116  F11B         	movff	___fttol@f1+2,??___fttol+3
  9234  0082AA  0101               	movlb	1	; () banked
  9235  0082AC  2918               	incf	??___fttol& (0+255),w,b
  9236  0082AE  0101               	movlb	1	; () banked
  9237  0082B0  6F1C               	movwf	(??___fttol+4)& (0+255),b
  9238  0082B2  D005               	goto	u21570
  9239  0082B4                     u21575:
  9240  0082B4  0101               	movlb	1	; () banked
  9241  0082B6  90D8               	bcf	status,0,c
  9242  0082B8  331B               	rrcf	(??___fttol+3)& (0+255),f,b
  9243  0082BA  331A               	rrcf	(??___fttol+2)& (0+255),f,b
  9244  0082BC  3319               	rrcf	(??___fttol+1)& (0+255),f,b
  9245  0082BE                     u21570:
  9246  0082BE  0101               	movlb	1	; () banked
  9247  0082C0  2F1C               	decfsz	(??___fttol+4)& (0+255),f,b
  9248  0082C2  D7F8               	goto	u21575
  9249  0082C4  0101               	movlb	1	; () banked
  9250  0082C6  5119               	movf	(??___fttol+1)& (0+255),w,b
  9251  0082C8  0101               	movlb	1	; () banked
  9252  0082CA  6F1D               	movwf	___fttol@sign1& (0+255),b
  9253                           
  9254                           ; BSR set to: 1
  9255  0082CC  0101               	movlb	1	; () banked
  9256  0082CE  8F15               	bsf	(___fttol@f1+1)& (0+255),7,b
  9257                           
  9258                           ; BSR set to: 1
  9259  0082D0  0EFF               	movlw	255
  9260  0082D2  0101               	movlb	1	; () banked
  9261  0082D4  1714               	andwf	___fttol@f1& (0+255),f,b
  9262  0082D6  0EFF               	movlw	255
  9263  0082D8  0101               	movlb	1	; () banked
  9264  0082DA  1715               	andwf	(___fttol@f1+1)& (0+255),f,b
  9265  0082DC  0E00               	movlw	0
  9266  0082DE  0101               	movlb	1	; () banked
  9267  0082E0  1716               	andwf	(___fttol@f1+2)& (0+255),f,b
  9268                           
  9269                           ; BSR set to: 1
  9270  0082E2  0101               	movlb	1	; () banked
  9271  0082E4  5114               	movf	___fttol@f1& (0+255),w,b
  9272  0082E6  0101               	movlb	1	; () banked
  9273  0082E8  6F1E               	movwf	___fttol@lval& (0+255),b
  9274  0082EA  0101               	movlb	1	; () banked
  9275  0082EC  5115               	movf	(___fttol@f1+1)& (0+255),w,b
  9276  0082EE  0101               	movlb	1	; () banked
  9277  0082F0  6F1F               	movwf	(___fttol@lval+1)& (0+255),b
  9278  0082F2  0101               	movlb	1	; () banked
  9279  0082F4  5116               	movf	(___fttol@f1+2)& (0+255),w,b
  9280  0082F6  0101               	movlb	1	; () banked
  9281  0082F8  6F20               	movwf	(___fttol@lval+2)& (0+255),b
  9282  0082FA  0101               	movlb	1	; () banked
  9283  0082FC  6B21               	clrf	(___fttol@lval+3)& (0+255),b
  9284                           
  9285                           ; BSR set to: 1
  9286  0082FE  0E8E               	movlw	142
  9287  008300  0101               	movlb	1	; () banked
  9288  008302  5F22               	subwf	___fttol@exp1& (0+255),f,b
  9289                           
  9290                           ; BSR set to: 1
  9291  008304  0101               	movlb	1	; () banked
  9292  008306  AF22               	btfss	___fttol@exp1& (0+255),7,b
  9293  008308  D01A               	goto	l18967
  9294                           
  9295                           ; BSR set to: 1
  9296  00830A  0101               	movlb	1	; () banked
  9297  00830C  5122               	movf	___fttol@exp1& (0+255),w,b
  9298  00830E  0A80               	xorlw	128
  9299  008310  0F8F               	addlw	143
  9300  008312  B0D8               	btfsc	status,0,c
  9301  008314  D00A               	goto	l18963
  9302                           
  9303                           ; BSR set to: 1
  9304  008316  0E00               	movlw	0
  9305  008318  0101               	movlb	1	; () banked
  9306  00831A  6F14               	movwf	?___fttol& (0+255),b
  9307  00831C  0E00               	movlw	0
  9308  00831E  6F15               	movwf	(?___fttol+1)& (0+255),b
  9309  008320  0E00               	movlw	0
  9310  008322  6F16               	movwf	(?___fttol+2)& (0+255),b
  9311  008324  0E00               	movlw	0
  9312  008326  6F17               	movwf	(?___fttol+3)& (0+255),b
  9313                           
  9314                           ; BSR set to: 1
  9315  008328  0012               	return	
  9316  00832A                     l18963:
  9317                           
  9318                           ; BSR set to: 1
  9319  00832A  0101               	movlb	1	; () banked
  9320  00832C  90D8               	bcf	status,0,c
  9321  00832E  3321               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9322  008330  3320               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9323  008332  331F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9324  008334  331E               	rrcf	___fttol@lval& (0+255),f,b
  9325                           
  9326                           ; BSR set to: 1
  9327  008336  0101               	movlb	1	; () banked
  9328  008338  3F22               	incfsz	___fttol@exp1& (0+255),f,b
  9329  00833A  D7F7               	goto	l18963
  9330                           
  9331                           ; BSR set to: 1
  9332  00833C  D01B               	goto	l18977
  9333  00833E                     l18967:
  9334                           
  9335                           ; BSR set to: 1
  9336  00833E  0E17               	movlw	23
  9337  008340  0101               	movlb	1	; () banked
  9338  008342  6522               	cpfsgt	___fttol@exp1& (0+255),b
  9339  008344  D012               	goto	l18975
  9340                           
  9341                           ; BSR set to: 1
  9342  008346  0E00               	movlw	0
  9343  008348  0101               	movlb	1	; () banked
  9344  00834A  6F14               	movwf	?___fttol& (0+255),b
  9345  00834C  0E00               	movlw	0
  9346  00834E  6F15               	movwf	(?___fttol+1)& (0+255),b
  9347  008350  0E00               	movlw	0
  9348  008352  6F16               	movwf	(?___fttol+2)& (0+255),b
  9349  008354  0E00               	movlw	0
  9350  008356  6F17               	movwf	(?___fttol+3)& (0+255),b
  9351                           
  9352                           ; BSR set to: 1
  9353  008358  0012               	return	
  9354  00835A                     l18973:
  9355                           
  9356                           ; BSR set to: 1
  9357  00835A  0101               	movlb	1	; () banked
  9358  00835C  90D8               	bcf	status,0,c
  9359  00835E  371E               	rlcf	___fttol@lval& (0+255),f,b
  9360  008360  371F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9361  008362  3720               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9362  008364  3721               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9363  008366  0101               	movlb	1	; () banked
  9364  008368  0722               	decf	___fttol@exp1& (0+255),f,b
  9365  00836A                     l18975:
  9366                           
  9367                           ; BSR set to: 1
  9368  00836A  0101               	movlb	1	; () banked
  9369  00836C  5122               	movf	___fttol@exp1& (0+255),w,b
  9370  00836E  0101               	movlb	1	; () banked
  9371  008370  A4D8               	btfss	status,2,c
  9372  008372  D7F3               	goto	l18973
  9373  008374                     l18977:
  9374                           
  9375                           ; BSR set to: 1
  9376  008374  0101               	movlb	1	; () banked
  9377  008376  511D               	movf	___fttol@sign1& (0+255),w,b
  9378  008378  0101               	movlb	1	; () banked
  9379  00837A  B4D8               	btfsc	status,2,c
  9380  00837C  D009               	goto	l18981
  9381                           
  9382                           ; BSR set to: 1
  9383  00837E  0101               	movlb	1	; () banked
  9384  008380  1F21               	comf	(___fttol@lval+3)& (0+255),f,b
  9385  008382  1F20               	comf	(___fttol@lval+2)& (0+255),f,b
  9386  008384  1F1F               	comf	(___fttol@lval+1)& (0+255),f,b
  9387  008386  6D1E               	negf	___fttol@lval& (0+255),b
  9388  008388  0E00               	movlw	0
  9389  00838A  231F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9390  00838C  2320               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9391  00838E  2321               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9392  008390                     l18981:
  9393                           
  9394                           ; BSR set to: 1
  9395  008390  C11E  F114         	movff	___fttol@lval,?___fttol
  9396  008394  C11F  F115         	movff	___fttol@lval+1,?___fttol+1
  9397  008398  C120  F116         	movff	___fttol@lval+2,?___fttol+2
  9398  00839C  C121  F117         	movff	___fttol@lval+3,?___fttol+3
  9399  0083A0  0012               	return	
  9400  0083A2                     __end_of___fttol:
  9401                           	opt stack 0
  9402                           tblptru	equ	0xFF8
  9403                           tblptrh	equ	0xFF7
  9404                           tblptrl	equ	0xFF6
  9405                           tablat	equ	0xFF5
  9406                           prodh	equ	0xFF4
  9407                           prodl	equ	0xFF3
  9408                           postinc0	equ	0xFEE
  9409                           plusw0	equ	0xFEB
  9410                           wreg	equ	0xFE8
  9411                           postdec1	equ	0xFE5
  9412                           fsr1h	equ	0xFE2
  9413                           fsr1l	equ	0xFE1
  9414                           indf2	equ	0xFDF
  9415                           postinc2	equ	0xFDE
  9416                           postdec2	equ	0xFDD
  9417                           plusw2	equ	0xFDB
  9418                           fsr2h	equ	0xFDA
  9419                           fsr2l	equ	0xFD9
  9420                           status	equ	0xFD8
  9421                           
  9422 ;; *************** function ___ftge *****************
  9423 ;; Defined at:
  9424 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  ff1             3    0[BANK1 ] float 
  9427 ;;  ff2             3    3[BANK1 ] float 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;		None               void
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9439 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9441 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9442 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;Total ram usage:        9 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:   16
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_floor
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text18
  9454  009CA0                     __ptext18:
  9455                           	opt stack 0
  9456  009CA0                     ___ftge:
  9457                           	opt stack 12
  9458                           
  9459                           ; BSR set to: 1
  9460                           ;incstack = 0
  9461  009CA0  0101               	movlb	1	; () banked
  9462  009CA2  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9463  009CA4  D01D               	goto	l18925
  9464                           
  9465                           ; BSR set to: 1
  9466  009CA6  C100  F106         	movff	___ftge@ff1,??___ftge
  9467  009CAA  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  9468  009CAE  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  9469  009CB2  0101               	movlb	1	; () banked
  9470  009CB4  1F06               	comf	??___ftge& (0+255),f,b
  9471  009CB6  1F07               	comf	(??___ftge+1)& (0+255),f,b
  9472  009CB8  1F08               	comf	(??___ftge+2)& (0+255),f,b
  9473  009CBA  2B06               	incf	??___ftge& (0+255),f,b
  9474  009CBC  0E00               	movlw	0
  9475  009CBE  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  9476  009CC0  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  9477  009CC2  0E00               	movlw	0
  9478  009CC4  0101               	movlb	1	; () banked
  9479  009CC6  2506               	addwf	??___ftge& (0+255),w,b
  9480  009CC8  0101               	movlb	1	; () banked
  9481  009CCA  6F00               	movwf	___ftge@ff1& (0+255),b
  9482  009CCC  0E00               	movlw	0
  9483  009CCE  0101               	movlb	1	; () banked
  9484  009CD0  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  9485  009CD2  0101               	movlb	1	; () banked
  9486  009CD4  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  9487  009CD6  0E80               	movlw	128
  9488  009CD8  0101               	movlb	1	; () banked
  9489  009CDA  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  9490  009CDC  0101               	movlb	1	; () banked
  9491  009CDE  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  9492  009CE0                     l18925:
  9493                           
  9494                           ; BSR set to: 1
  9495  009CE0  0101               	movlb	1	; () banked
  9496  009CE2  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9497  009CE4  D01D               	goto	l18929
  9498                           
  9499                           ; BSR set to: 1
  9500  009CE6  C103  F106         	movff	___ftge@ff2,??___ftge
  9501  009CEA  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  9502  009CEE  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  9503  009CF2  0101               	movlb	1	; () banked
  9504  009CF4  1F06               	comf	??___ftge& (0+255),f,b
  9505  009CF6  1F07               	comf	(??___ftge+1)& (0+255),f,b
  9506  009CF8  1F08               	comf	(??___ftge+2)& (0+255),f,b
  9507  009CFA  2B06               	incf	??___ftge& (0+255),f,b
  9508  009CFC  0E00               	movlw	0
  9509  009CFE  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  9510  009D00  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  9511  009D02  0E00               	movlw	0
  9512  009D04  0101               	movlb	1	; () banked
  9513  009D06  2506               	addwf	??___ftge& (0+255),w,b
  9514  009D08  0101               	movlb	1	; () banked
  9515  009D0A  6F03               	movwf	___ftge@ff2& (0+255),b
  9516  009D0C  0E00               	movlw	0
  9517  009D0E  0101               	movlb	1	; () banked
  9518  009D10  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  9519  009D12  0101               	movlb	1	; () banked
  9520  009D14  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  9521  009D16  0E80               	movlw	128
  9522  009D18  0101               	movlb	1	; () banked
  9523  009D1A  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  9524  009D1C  0101               	movlb	1	; () banked
  9525  009D1E  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  9526  009D20                     l18929:
  9527                           
  9528                           ; BSR set to: 1
  9529  009D20  0E00               	movlw	0
  9530  009D22  0101               	movlb	1	; () banked
  9531  009D24  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  9532  009D26  0E00               	movlw	0
  9533  009D28  0101               	movlb	1	; () banked
  9534  009D2A  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9535  009D2C  0E80               	movlw	128
  9536  009D2E  0101               	movlb	1	; () banked
  9537  009D30  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9538                           
  9539                           ; BSR set to: 1
  9540  009D32  0E00               	movlw	0
  9541  009D34  0101               	movlb	1	; () banked
  9542  009D36  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  9543  009D38  0E00               	movlw	0
  9544  009D3A  0101               	movlb	1	; () banked
  9545  009D3C  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9546  009D3E  0E80               	movlw	128
  9547  009D40  0101               	movlb	1	; () banked
  9548  009D42  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9549  009D44  0101               	movlb	1	; () banked
  9550  009D46  5103               	movf	___ftge@ff2& (0+255),w,b
  9551  009D48  0101               	movlb	1	; () banked
  9552  009D4A  5D00               	subwf	___ftge@ff1& (0+255),w,b
  9553  009D4C  0101               	movlb	1	; () banked
  9554  009D4E  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  9555  009D50  0101               	movlb	1	; () banked
  9556  009D52  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9557  009D54  0101               	movlb	1	; () banked
  9558  009D56  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  9559  009D58  0101               	movlb	1	; () banked
  9560  009D5A  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9561  009D5C  B0D8               	btfsc	status,0,c
  9562  009D5E  D002               	goto	l18935
  9563                           
  9564                           ; BSR set to: 1
  9565  009D60  90D8               	bcf	status,0,c
  9566  009D62  0012               	return	
  9567  009D64                     l18935:
  9568                           
  9569                           ; BSR set to: 1
  9570  009D64  80D8               	bsf	status,0,c
  9571                           
  9572                           ; BSR set to: 1
  9573  009D66  0012               	return	
  9574  009D68                     __end_of___ftge:
  9575                           	opt stack 0
  9576                           tblptru	equ	0xFF8
  9577                           tblptrh	equ	0xFF7
  9578                           tblptrl	equ	0xFF6
  9579                           tablat	equ	0xFF5
  9580                           prodh	equ	0xFF4
  9581                           prodl	equ	0xFF3
  9582                           postinc0	equ	0xFEE
  9583                           plusw0	equ	0xFEB
  9584                           wreg	equ	0xFE8
  9585                           postdec1	equ	0xFE5
  9586                           fsr1h	equ	0xFE2
  9587                           fsr1l	equ	0xFE1
  9588                           indf2	equ	0xFDF
  9589                           postinc2	equ	0xFDE
  9590                           postdec2	equ	0xFDD
  9591                           plusw2	equ	0xFDB
  9592                           fsr2h	equ	0xFDA
  9593                           fsr2l	equ	0xFD9
  9594                           status	equ	0xFD8
  9595                           
  9596 ;; *************** function ___ftadd *****************
  9597 ;; Defined at:
  9598 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;  f1              3    8[BANK1 ] float 
  9601 ;;  f2              3   11[BANK1 ] float 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  exp1            1   19[BANK1 ] unsigned char 
  9604 ;;  exp2            1   18[BANK1 ] unsigned char 
  9605 ;;  sign            1   17[BANK1 ] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  3    8[BANK1 ] float 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9615 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9616 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9618 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9619 ;;Total ram usage:       12 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:   17
  9622 ;; This function calls:
  9623 ;;		___ftpack
  9624 ;; This function is called by:
  9625 ;;		_send_complete_update
  9626 ;;		_send_periodic_update
  9627 ;;		_floor
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text19
  9632  0068E0                     __ptext19:
  9633                           	opt stack 0
  9634  0068E0                     ___ftadd:
  9635                           	opt stack 11
  9636                           
  9637                           ; BSR set to: 1
  9638                           ;incstack = 0
  9639  0068E0  C10A  F10E         	movff	___ftadd@f1+2,??___ftadd
  9640  0068E4  0101               	movlb	1	; () banked
  9641  0068E6  6B0F               	clrf	(??___ftadd+1)& (0+255),b
  9642  0068E8  6B10               	clrf	(??___ftadd+2)& (0+255),b
  9643  0068EA  0101               	movlb	1	; () banked
  9644  0068EC  3509               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  9645  0068EE  0101               	movlb	1	; () banked
  9646  0068F0  370E               	rlcf	??___ftadd& (0+255),f,b
  9647  0068F2  E301               	bnc	u21291
  9648  0068F4  810F               	bsf	(??___ftadd+1)& (0+255),0,b
  9649  0068F6                     u21291:
  9650  0068F6  0101               	movlb	1	; () banked
  9651  0068F8  510E               	movf	??___ftadd& (0+255),w,b
  9652  0068FA  0101               	movlb	1	; () banked
  9653  0068FC  6F13               	movwf	___ftadd@exp1& (0+255),b
  9654  0068FE  C10D  F10E         	movff	___ftadd@f2+2,??___ftadd
  9655  006902  0101               	movlb	1	; () banked
  9656  006904  6B0F               	clrf	(??___ftadd+1)& (0+255),b
  9657  006906  6B10               	clrf	(??___ftadd+2)& (0+255),b
  9658  006908  0101               	movlb	1	; () banked
  9659  00690A  350C               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  9660  00690C  0101               	movlb	1	; () banked
  9661  00690E  370E               	rlcf	??___ftadd& (0+255),f,b
  9662  006910  E301               	bnc	u21301
  9663  006912  810F               	bsf	(??___ftadd+1)& (0+255),0,b
  9664  006914                     u21301:
  9665  006914  0101               	movlb	1	; () banked
  9666  006916  510E               	movf	??___ftadd& (0+255),w,b
  9667  006918  0101               	movlb	1	; () banked
  9668  00691A  6F12               	movwf	___ftadd@exp2& (0+255),b
  9669                           
  9670                           ; BSR set to: 1
  9671  00691C  0101               	movlb	1	; () banked
  9672  00691E  5113               	movf	___ftadd@exp1& (0+255),w,b
  9673  006920  0101               	movlb	1	; () banked
  9674  006922  B4D8               	btfsc	status,2,c
  9675  006924  D011               	goto	l2498
  9676                           
  9677                           ; BSR set to: 1
  9678  006926  0101               	movlb	1	; () banked
  9679  006928  5112               	movf	___ftadd@exp2& (0+255),w,b
  9680  00692A  0101               	movlb	1	; () banked
  9681  00692C  5D13               	subwf	___ftadd@exp1& (0+255),w,b
  9682  00692E  B0D8               	btfsc	status,0,c
  9683  006930  D012               	goto	l18843
  9684                           
  9685                           ; BSR set to: 1
  9686  006932  0101               	movlb	1	; () banked
  9687  006934  5113               	movf	___ftadd@exp1& (0+255),w,b
  9688  006936  0800               	sublw	0
  9689  006938  0101               	movlb	1	; () banked
  9690  00693A  2512               	addwf	___ftadd@exp2& (0+255),w,b
  9691  00693C  0101               	movlb	1	; () banked
  9692  00693E  6F0E               	movwf	??___ftadd& (0+255),b
  9693  006940  0E18               	movlw	24
  9694  006942  0101               	movlb	1	; () banked
  9695  006944  650E               	cpfsgt	??___ftadd& (0+255),b
  9696  006946  D007               	goto	l18843
  9697  006948                     l2498:
  9698                           
  9699                           ; BSR set to: 1
  9700  006948  C10B  F108         	movff	___ftadd@f2,?___ftadd
  9701  00694C  C10C  F109         	movff	___ftadd@f2+1,?___ftadd+1
  9702  006950  C10D  F10A         	movff	___ftadd@f2+2,?___ftadd+2
  9703  006954  0012               	return	
  9704  006956                     l18843:
  9705                           
  9706                           ; BSR set to: 1
  9707  006956  0101               	movlb	1	; () banked
  9708  006958  5112               	movf	___ftadd@exp2& (0+255),w,b
  9709  00695A  0101               	movlb	1	; () banked
  9710  00695C  B4D8               	btfsc	status,2,c
  9711  00695E  D011               	goto	l2502
  9712                           
  9713                           ; BSR set to: 1
  9714  006960  0101               	movlb	1	; () banked
  9715  006962  5113               	movf	___ftadd@exp1& (0+255),w,b
  9716  006964  0101               	movlb	1	; () banked
  9717  006966  5D12               	subwf	___ftadd@exp2& (0+255),w,b
  9718  006968  B0D8               	btfsc	status,0,c
  9719  00696A  D012               	goto	l18849
  9720                           
  9721                           ; BSR set to: 1
  9722  00696C  0101               	movlb	1	; () banked
  9723  00696E  5112               	movf	___ftadd@exp2& (0+255),w,b
  9724  006970  0800               	sublw	0
  9725  006972  0101               	movlb	1	; () banked
  9726  006974  2513               	addwf	___ftadd@exp1& (0+255),w,b
  9727  006976  0101               	movlb	1	; () banked
  9728  006978  6F0E               	movwf	??___ftadd& (0+255),b
  9729  00697A  0E18               	movlw	24
  9730  00697C  0101               	movlb	1	; () banked
  9731  00697E  650E               	cpfsgt	??___ftadd& (0+255),b
  9732  006980  D007               	goto	l18849
  9733  006982                     l2502:
  9734                           
  9735                           ; BSR set to: 1
  9736  006982  C108  F108         	movff	___ftadd@f1,?___ftadd
  9737  006986  C109  F109         	movff	___ftadd@f1+1,?___ftadd+1
  9738  00698A  C10A  F10A         	movff	___ftadd@f1+2,?___ftadd+2
  9739  00698E  0012               	return	
  9740  006990                     l18849:
  9741                           
  9742                           ; BSR set to: 1
  9743  006990  0E06               	movlw	6
  9744  006992  0101               	movlb	1	; () banked
  9745  006994  6F11               	movwf	___ftadd@sign& (0+255),b
  9746                           
  9747                           ; BSR set to: 1
  9748  006996  0101               	movlb	1	; () banked
  9749  006998  AF0A               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9750  00699A  D002               	goto	l18855
  9751                           
  9752                           ; BSR set to: 1
  9753  00699C  0101               	movlb	1	; () banked
  9754  00699E  8F11               	bsf	___ftadd@sign& (0+255),7,b
  9755  0069A0                     l18855:
  9756                           
  9757                           ; BSR set to: 1
  9758  0069A0  0101               	movlb	1	; () banked
  9759  0069A2  AF0D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9760  0069A4  D002               	goto	l2504
  9761                           
  9762                           ; BSR set to: 1
  9763  0069A6  0101               	movlb	1	; () banked
  9764  0069A8  8D11               	bsf	___ftadd@sign& (0+255),6,b
  9765  0069AA                     l2504:
  9766                           
  9767                           ; BSR set to: 1
  9768  0069AA  0101               	movlb	1	; () banked
  9769  0069AC  8F09               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9770                           
  9771                           ; BSR set to: 1
  9772  0069AE  0EFF               	movlw	255
  9773  0069B0  0101               	movlb	1	; () banked
  9774  0069B2  1708               	andwf	___ftadd@f1& (0+255),f,b
  9775  0069B4  0EFF               	movlw	255
  9776  0069B6  0101               	movlb	1	; () banked
  9777  0069B8  1709               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9778  0069BA  0E00               	movlw	0
  9779  0069BC  0101               	movlb	1	; () banked
  9780  0069BE  170A               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9781  0069C0  0101               	movlb	1	; () banked
  9782  0069C2  8F0C               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9783                           
  9784                           ; BSR set to: 1
  9785  0069C4  0EFF               	movlw	255
  9786  0069C6  0101               	movlb	1	; () banked
  9787  0069C8  170B               	andwf	___ftadd@f2& (0+255),f,b
  9788  0069CA  0EFF               	movlw	255
  9789  0069CC  0101               	movlb	1	; () banked
  9790  0069CE  170C               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9791  0069D0  0E00               	movlw	0
  9792  0069D2  0101               	movlb	1	; () banked
  9793  0069D4  170D               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 1
  9796  0069D6  0101               	movlb	1	; () banked
  9797  0069D8  5112               	movf	___ftadd@exp2& (0+255),w,b
  9798  0069DA  0101               	movlb	1	; () banked
  9799  0069DC  5D13               	subwf	___ftadd@exp1& (0+255),w,b
  9800  0069DE  B0D8               	btfsc	status,0,c
  9801  0069E0  D025               	goto	l18875
  9802  0069E2                     l18865:
  9803                           
  9804                           ; BSR set to: 1
  9805  0069E2  0101               	movlb	1	; () banked
  9806  0069E4  90D8               	bcf	status,0,c
  9807  0069E6  370B               	rlcf	___ftadd@f2& (0+255),f,b
  9808  0069E8  370C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9809  0069EA  370D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9810  0069EC  0101               	movlb	1	; () banked
  9811  0069EE  0712               	decf	___ftadd@exp2& (0+255),f,b
  9812                           
  9813                           ; BSR set to: 1
  9814  0069F0  0101               	movlb	1	; () banked
  9815  0069F2  5113               	movf	___ftadd@exp1& (0+255),w,b
  9816  0069F4  0101               	movlb	1	; () banked
  9817  0069F6  1912               	xorwf	___ftadd@exp2& (0+255),w,b
  9818  0069F8  B4D8               	btfsc	status,2,c
  9819  0069FA  D011               	goto	l18873
  9820                           
  9821                           ; BSR set to: 1
  9822  0069FC  0101               	movlb	1	; () banked
  9823  0069FE  0711               	decf	___ftadd@sign& (0+255),f,b
  9824  006A00  C111  F10E         	movff	___ftadd@sign,??___ftadd
  9825  006A04  0E07               	movlw	7
  9826  006A06  0101               	movlb	1	; () banked
  9827  006A08  170E               	andwf	??___ftadd& (0+255),f,b
  9828  006A0A  B4D8               	btfsc	status,2,c
  9829  006A0C  D008               	goto	l18873
  9830  006A0E  D7E9               	goto	l18865
  9831  006A10                     l18871:
  9832                           
  9833                           ; BSR set to: 1
  9834  006A10  0101               	movlb	1	; () banked
  9835  006A12  90D8               	bcf	status,0,c
  9836  006A14  330A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9837  006A16  3309               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9838  006A18  3308               	rrcf	___ftadd@f1& (0+255),f,b
  9839  006A1A  0101               	movlb	1	; () banked
  9840  006A1C  2B13               	incf	___ftadd@exp1& (0+255),f,b
  9841  006A1E                     l18873:
  9842                           
  9843                           ; BSR set to: 1
  9844  006A1E  0101               	movlb	1	; () banked
  9845  006A20  5112               	movf	___ftadd@exp2& (0+255),w,b
  9846  006A22  0101               	movlb	1	; () banked
  9847  006A24  1913               	xorwf	___ftadd@exp1& (0+255),w,b
  9848  006A26  B4D8               	btfsc	status,2,c
  9849  006A28  D02B               	goto	l2513
  9850  006A2A  D7F2               	goto	l18871
  9851  006A2C                     l18875:
  9852                           
  9853                           ; BSR set to: 1
  9854  006A2C  0101               	movlb	1	; () banked
  9855  006A2E  5113               	movf	___ftadd@exp1& (0+255),w,b
  9856  006A30  0101               	movlb	1	; () banked
  9857  006A32  5D12               	subwf	___ftadd@exp2& (0+255),w,b
  9858  006A34  B0D8               	btfsc	status,0,c
  9859  006A36  D024               	goto	l2513
  9860  006A38                     l18877:
  9861                           
  9862                           ; BSR set to: 1
  9863  006A38  0101               	movlb	1	; () banked
  9864  006A3A  90D8               	bcf	status,0,c
  9865  006A3C  3708               	rlcf	___ftadd@f1& (0+255),f,b
  9866  006A3E  3709               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9867  006A40  370A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9868  006A42  0101               	movlb	1	; () banked
  9869  006A44  0713               	decf	___ftadd@exp1& (0+255),f,b
  9870                           
  9871                           ; BSR set to: 1
  9872  006A46  0101               	movlb	1	; () banked
  9873  006A48  5113               	movf	___ftadd@exp1& (0+255),w,b
  9874  006A4A  0101               	movlb	1	; () banked
  9875  006A4C  1912               	xorwf	___ftadd@exp2& (0+255),w,b
  9876  006A4E  B4D8               	btfsc	status,2,c
  9877  006A50  D011               	goto	l18885
  9878                           
  9879                           ; BSR set to: 1
  9880  006A52  0101               	movlb	1	; () banked
  9881  006A54  0711               	decf	___ftadd@sign& (0+255),f,b
  9882  006A56  C111  F10E         	movff	___ftadd@sign,??___ftadd
  9883  006A5A  0E07               	movlw	7
  9884  006A5C  0101               	movlb	1	; () banked
  9885  006A5E  170E               	andwf	??___ftadd& (0+255),f,b
  9886  006A60  B4D8               	btfsc	status,2,c
  9887  006A62  D008               	goto	l18885
  9888  006A64  D7E9               	goto	l18877
  9889  006A66                     l18883:
  9890                           
  9891                           ; BSR set to: 1
  9892  006A66  0101               	movlb	1	; () banked
  9893  006A68  90D8               	bcf	status,0,c
  9894  006A6A  330D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9895  006A6C  330C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9896  006A6E  330B               	rrcf	___ftadd@f2& (0+255),f,b
  9897  006A70  0101               	movlb	1	; () banked
  9898  006A72  2B12               	incf	___ftadd@exp2& (0+255),f,b
  9899  006A74                     l18885:
  9900                           
  9901                           ; BSR set to: 1
  9902  006A74  0101               	movlb	1	; () banked
  9903  006A76  5112               	movf	___ftadd@exp2& (0+255),w,b
  9904  006A78  0101               	movlb	1	; () banked
  9905  006A7A  1913               	xorwf	___ftadd@exp1& (0+255),w,b
  9906  006A7C  A4D8               	btfss	status,2,c
  9907  006A7E  D7F3               	goto	l18883
  9908  006A80                     l2513:
  9909                           
  9910                           ; BSR set to: 1
  9911  006A80  0101               	movlb	1	; () banked
  9912  006A82  AF11               	btfss	___ftadd@sign& (0+255),7,b
  9913  006A84  D012               	goto	l2522
  9914                           
  9915                           ; BSR set to: 1
  9916  006A86  0EFF               	movlw	255
  9917  006A88  0101               	movlb	1	; () banked
  9918  006A8A  1B08               	xorwf	___ftadd@f1& (0+255),f,b
  9919  006A8C  0EFF               	movlw	255
  9920  006A8E  0101               	movlb	1	; () banked
  9921  006A90  1B09               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9922  006A92  0EFF               	movlw	255
  9923  006A94  0101               	movlb	1	; () banked
  9924  006A96  1B0A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  9925  006A98  0E01               	movlw	1
  9926  006A9A  0101               	movlb	1	; () banked
  9927  006A9C  2708               	addwf	___ftadd@f1& (0+255),f,b
  9928  006A9E  0E00               	movlw	0
  9929  006AA0  0101               	movlb	1	; () banked
  9930  006AA2  2309               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  9931  006AA4  0E00               	movlw	0
  9932  006AA6  0101               	movlb	1	; () banked
  9933  006AA8  230A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  9934  006AAA                     l2522:
  9935                           
  9936                           ; BSR set to: 1
  9937  006AAA  0101               	movlb	1	; () banked
  9938  006AAC  AD11               	btfss	___ftadd@sign& (0+255),6,b
  9939  006AAE  D012               	goto	l18891
  9940                           
  9941                           ; BSR set to: 1
  9942  006AB0  0EFF               	movlw	255
  9943  006AB2  0101               	movlb	1	; () banked
  9944  006AB4  1B0B               	xorwf	___ftadd@f2& (0+255),f,b
  9945  006AB6  0EFF               	movlw	255
  9946  006AB8  0101               	movlb	1	; () banked
  9947  006ABA  1B0C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9948  006ABC  0EFF               	movlw	255
  9949  006ABE  0101               	movlb	1	; () banked
  9950  006AC0  1B0D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9951  006AC2  0E01               	movlw	1
  9952  006AC4  0101               	movlb	1	; () banked
  9953  006AC6  270B               	addwf	___ftadd@f2& (0+255),f,b
  9954  006AC8  0E00               	movlw	0
  9955  006ACA  0101               	movlb	1	; () banked
  9956  006ACC  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9957  006ACE  0E00               	movlw	0
  9958  006AD0  0101               	movlb	1	; () banked
  9959  006AD2  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9960  006AD4                     l18891:
  9961                           
  9962                           ; BSR set to: 1
  9963  006AD4  0E00               	movlw	0
  9964  006AD6  0101               	movlb	1	; () banked
  9965  006AD8  6F11               	movwf	___ftadd@sign& (0+255),b
  9966                           
  9967                           ; BSR set to: 1
  9968  006ADA  0101               	movlb	1	; () banked
  9969  006ADC  5108               	movf	___ftadd@f1& (0+255),w,b
  9970  006ADE  0101               	movlb	1	; () banked
  9971  006AE0  270B               	addwf	___ftadd@f2& (0+255),f,b
  9972  006AE2  0101               	movlb	1	; () banked
  9973  006AE4  5109               	movf	(___ftadd@f1+1)& (0+255),w,b
  9974  006AE6  0101               	movlb	1	; () banked
  9975  006AE8  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9976  006AEA  0101               	movlb	1	; () banked
  9977  006AEC  510A               	movf	(___ftadd@f1+2)& (0+255),w,b
  9978  006AEE  0101               	movlb	1	; () banked
  9979  006AF0  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9980                           
  9981                           ; BSR set to: 1
  9982  006AF2  0101               	movlb	1	; () banked
  9983  006AF4  AF0D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9984  006AF6  D015               	goto	l18901
  9985                           
  9986                           ; BSR set to: 1
  9987  006AF8  0EFF               	movlw	255
  9988  006AFA  0101               	movlb	1	; () banked
  9989  006AFC  1B0B               	xorwf	___ftadd@f2& (0+255),f,b
  9990  006AFE  0EFF               	movlw	255
  9991  006B00  0101               	movlb	1	; () banked
  9992  006B02  1B0C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9993  006B04  0EFF               	movlw	255
  9994  006B06  0101               	movlb	1	; () banked
  9995  006B08  1B0D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9996  006B0A  0E01               	movlw	1
  9997  006B0C  0101               	movlb	1	; () banked
  9998  006B0E  270B               	addwf	___ftadd@f2& (0+255),f,b
  9999  006B10  0E00               	movlw	0
 10000  006B12  0101               	movlb	1	; () banked
 10001  006B14  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10002  006B16  0E00               	movlw	0
 10003  006B18  0101               	movlb	1	; () banked
 10004  006B1A  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10005                           
 10006                           ; BSR set to: 1
 10007  006B1C  0E01               	movlw	1
 10008  006B1E  0101               	movlb	1	; () banked
 10009  006B20  6F11               	movwf	___ftadd@sign& (0+255),b
 10010  006B22                     l18901:
 10011                           
 10012                           ; BSR set to: 1
 10013  006B22  C10B  F100         	movff	___ftadd@f2,___ftpack@arg
 10014  006B26  C10C  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
 10015  006B2A  C10D  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
 10016  006B2E  C113  F103         	movff	___ftadd@exp1,___ftpack@exp
 10017  006B32  C111  F104         	movff	___ftadd@sign,___ftpack@sign
 10018  006B36  ECC4  F047         	call	___ftpack	;wreg free
 10019  006B3A  C100  F108         	movff	?___ftpack,?___ftadd
 10020  006B3E  C101  F109         	movff	?___ftpack+1,?___ftadd+1
 10021  006B42  C102  F10A         	movff	?___ftpack+2,?___ftadd+2
 10022  006B46  0012               	return	
 10023  006B48                     __end_of___ftadd:
 10024                           	opt stack 0
 10025                           tblptru	equ	0xFF8
 10026                           tblptrh	equ	0xFF7
 10027                           tblptrl	equ	0xFF6
 10028                           tablat	equ	0xFF5
 10029                           prodh	equ	0xFF4
 10030                           prodl	equ	0xFF3
 10031                           postinc0	equ	0xFEE
 10032                           plusw0	equ	0xFEB
 10033                           wreg	equ	0xFE8
 10034                           postdec1	equ	0xFE5
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           indf2	equ	0xFDF
 10038                           postinc2	equ	0xFDE
 10039                           postdec2	equ	0xFDD
 10040                           plusw2	equ	0xFDB
 10041                           fsr2h	equ	0xFDA
 10042                           fsr2l	equ	0xFD9
 10043                           status	equ	0xFD8
 10044                           
 10045 ;; *************** function ___altoft *****************
 10046 ;; Defined at:
 10047 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  c               4   35[BANK1 ] long 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;  sign            1   44[BANK1 ] unsigned char 
 10052 ;;  exp             1   43[BANK1 ] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  3   35[BANK1 ] float 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2, status,0, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10062 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10063 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10064 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10065 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10066 ;;Total ram usage:       10 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:   17
 10069 ;; This function calls:
 10070 ;;		___ftpack
 10071 ;; This function is called by:
 10072 ;;		_floor
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text20
 10077  00A9C2                     __ptext20:
 10078                           	opt stack 0
 10079  00A9C2                     ___altoft:
 10080                           	opt stack 11
 10081                           
 10082                           ;incstack = 0
 10083  00A9C2  0E00               	movlw	0
 10084  00A9C4  0101               	movlb	1	; () banked
 10085  00A9C6  6F2C               	movwf	___altoft@sign& (0+255),b
 10086  00A9C8  0E8E               	movlw	142
 10087  00A9CA  0101               	movlb	1	; () banked
 10088  00A9CC  6F2B               	movwf	___altoft@exp& (0+255),b
 10089                           
 10090                           ; BSR set to: 1
 10091  00A9CE  0101               	movlb	1	; () banked
 10092  00A9D0  AF26               	btfss	(___altoft@c+3)& (0+255),7,b
 10093  00A9D2  D015               	goto	l18829
 10094                           
 10095                           ; BSR set to: 1
 10096  00A9D4  0101               	movlb	1	; () banked
 10097  00A9D6  1F26               	comf	(___altoft@c+3)& (0+255),f,b
 10098  00A9D8  1F25               	comf	(___altoft@c+2)& (0+255),f,b
 10099  00A9DA  1F24               	comf	(___altoft@c+1)& (0+255),f,b
 10100  00A9DC  6D23               	negf	___altoft@c& (0+255),b
 10101  00A9DE  0E00               	movlw	0
 10102  00A9E0  2324               	addwfc	(___altoft@c+1)& (0+255),f,b
 10103  00A9E2  2325               	addwfc	(___altoft@c+2)& (0+255),f,b
 10104  00A9E4  2326               	addwfc	(___altoft@c+3)& (0+255),f,b
 10105                           
 10106                           ; BSR set to: 1
 10107  00A9E6  0E01               	movlw	1
 10108  00A9E8  0101               	movlb	1	; () banked
 10109  00A9EA  6F2C               	movwf	___altoft@sign& (0+255),b
 10110                           
 10111                           ; BSR set to: 1
 10112  00A9EC  D008               	goto	l18829
 10113  00A9EE                     l18827:
 10114                           
 10115                           ; BSR set to: 1
 10116  00A9EE  0101               	movlb	1	; () banked
 10117  00A9F0  90D8               	bcf	status,0,c
 10118  00A9F2  3326               	rrcf	(___altoft@c+3)& (0+255),f,b
 10119  00A9F4  3325               	rrcf	(___altoft@c+2)& (0+255),f,b
 10120  00A9F6  3324               	rrcf	(___altoft@c+1)& (0+255),f,b
 10121  00A9F8  3323               	rrcf	___altoft@c& (0+255),f,b
 10122  00A9FA  0101               	movlb	1	; () banked
 10123  00A9FC  2B2B               	incf	___altoft@exp& (0+255),f,b
 10124  00A9FE                     l18829:
 10125                           
 10126                           ; BSR set to: 1
 10127  00A9FE  0E00               	movlw	0
 10128  00AA00  0101               	movlb	1	; () banked
 10129  00AA02  1523               	andwf	___altoft@c& (0+255),w,b
 10130  00AA04  0101               	movlb	1	; () banked
 10131  00AA06  6F27               	movwf	??___altoft& (0+255),b
 10132  00AA08  0E00               	movlw	0
 10133  00AA0A  0101               	movlb	1	; () banked
 10134  00AA0C  1524               	andwf	(___altoft@c+1)& (0+255),w,b
 10135  00AA0E  0101               	movlb	1	; () banked
 10136  00AA10  6F28               	movwf	(??___altoft+1)& (0+255),b
 10137  00AA12  0E00               	movlw	0
 10138  00AA14  0101               	movlb	1	; () banked
 10139  00AA16  1525               	andwf	(___altoft@c+2)& (0+255),w,b
 10140  00AA18  0101               	movlb	1	; () banked
 10141  00AA1A  6F29               	movwf	(??___altoft+2)& (0+255),b
 10142  00AA1C  0EFF               	movlw	255
 10143  00AA1E  0101               	movlb	1	; () banked
 10144  00AA20  1526               	andwf	(___altoft@c+3)& (0+255),w,b
 10145  00AA22  0101               	movlb	1	; () banked
 10146  00AA24  6F2A               	movwf	(??___altoft+3)& (0+255),b
 10147  00AA26  0101               	movlb	1	; () banked
 10148  00AA28  5127               	movf	??___altoft& (0+255),w,b
 10149  00AA2A  0101               	movlb	1	; () banked
 10150  00AA2C  1128               	iorwf	(??___altoft+1)& (0+255),w,b
 10151  00AA2E  0101               	movlb	1	; () banked
 10152  00AA30  1129               	iorwf	(??___altoft+2)& (0+255),w,b
 10153  00AA32  0101               	movlb	1	; () banked
 10154  00AA34  112A               	iorwf	(??___altoft+3)& (0+255),w,b
 10155  00AA36  A4D8               	btfss	status,2,c
 10156  00AA38  D7DA               	goto	l18827
 10157                           
 10158                           ; BSR set to: 1
 10159                           
 10160                           ; BSR set to: 1
 10161  00AA3A  C123  F100         	movff	___altoft@c,___ftpack@arg
 10162  00AA3E  C124  F101         	movff	___altoft@c+1,___ftpack@arg+1
 10163  00AA42  C125  F102         	movff	___altoft@c+2,___ftpack@arg+2
 10164  00AA46  C12B  F103         	movff	___altoft@exp,___ftpack@exp
 10165  00AA4A  C12C  F104         	movff	___altoft@sign,___ftpack@sign
 10166  00AA4E  ECC4  F047         	call	___ftpack	;wreg free
 10167  00AA52  C100  F123         	movff	?___ftpack,?___altoft
 10168  00AA56  C101  F124         	movff	?___ftpack+1,?___altoft+1
 10169  00AA5A  C102  F125         	movff	?___ftpack+2,?___altoft+2
 10170  00AA5E  0012               	return	
 10171  00AA60                     __end_of___altoft:
 10172                           	opt stack 0
 10173                           tblptru	equ	0xFF8
 10174                           tblptrh	equ	0xFF7
 10175                           tblptrl	equ	0xFF6
 10176                           tablat	equ	0xFF5
 10177                           prodh	equ	0xFF4
 10178                           prodl	equ	0xFF3
 10179                           postinc0	equ	0xFEE
 10180                           plusw0	equ	0xFEB
 10181                           wreg	equ	0xFE8
 10182                           postdec1	equ	0xFE5
 10183                           fsr1h	equ	0xFE2
 10184                           fsr1l	equ	0xFE1
 10185                           indf2	equ	0xFDF
 10186                           postinc2	equ	0xFDE
 10187                           postdec2	equ	0xFDD
 10188                           plusw2	equ	0xFDB
 10189                           fsr2h	equ	0xFDA
 10190                           fsr2l	equ	0xFD9
 10191                           status	equ	0xFD8
 10192                           
 10193 ;; *************** function ___ftneg *****************
 10194 ;; Defined at:
 10195 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  f1              3   53[BANK1 ] float 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;		None
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  3   53[BANK1 ] float 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10209 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;Total ram usage:        3 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:   16
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_send_complete_update
 10220 ;;		_send_periodic_update
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text21
 10225  00B9AA                     __ptext21:
 10226                           	opt stack 0
 10227  00B9AA                     ___ftneg:
 10228                           	opt stack 13
 10229                           
 10230                           ;incstack = 0
 10231  00B9AA  0101               	movlb	1	; () banked
 10232  00B9AC  5135               	movf	___ftneg@f1& (0+255),w,b
 10233  00B9AE  0101               	movlb	1	; () banked
 10234  00B9B0  1136               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10235  00B9B2  0101               	movlb	1	; () banked
 10236  00B9B4  1137               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 10237  00B9B6  B4D8               	btfsc	status,2,c
 10238  00B9B8  D009               	goto	l2555
 10239                           
 10240                           ; BSR set to: 1
 10241  00B9BA  0E00               	movlw	0
 10242  00B9BC  0101               	movlb	1	; () banked
 10243  00B9BE  1B35               	xorwf	___ftneg@f1& (0+255),f,b
 10244  00B9C0  0E00               	movlw	0
 10245  00B9C2  0101               	movlb	1	; () banked
 10246  00B9C4  1B36               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10247  00B9C6  0E80               	movlw	128
 10248  00B9C8  0101               	movlb	1	; () banked
 10249  00B9CA  1B37               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10250  00B9CC                     l2555:
 10251                           
 10252                           ; BSR set to: 1
 10253  00B9CC  C135  F135         	movff	___ftneg@f1,?___ftneg
 10254  00B9D0  C136  F136         	movff	___ftneg@f1+1,?___ftneg+1
 10255  00B9D4  C137  F137         	movff	___ftneg@f1+2,?___ftneg+2
 10256                           
 10257                           ; BSR set to: 1
 10258  00B9D8  0012               	return		;funcret
 10259  00B9DA                     __end_of___ftneg:
 10260                           	opt stack 0
 10261                           tblptru	equ	0xFF8
 10262                           tblptrh	equ	0xFF7
 10263                           tblptrl	equ	0xFF6
 10264                           tablat	equ	0xFF5
 10265                           prodh	equ	0xFF4
 10266                           prodl	equ	0xFF3
 10267                           postinc0	equ	0xFEE
 10268                           plusw0	equ	0xFEB
 10269                           wreg	equ	0xFE8
 10270                           postdec1	equ	0xFE5
 10271                           fsr1h	equ	0xFE2
 10272                           fsr1l	equ	0xFE1
 10273                           indf2	equ	0xFDF
 10274                           postinc2	equ	0xFDE
 10275                           postdec2	equ	0xFDD
 10276                           plusw2	equ	0xFDB
 10277                           fsr2h	equ	0xFDA
 10278                           fsr2l	equ	0xFD9
 10279                           status	equ	0xFD8
 10280                           
 10281 ;; *************** function ___ftmul *****************
 10282 ;; Defined at:
 10283 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  f1              3   56[BANK1 ] float 
 10286 ;;  f2              3   59[BANK1 ] float 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  f3_as_produc    3   66[BANK1 ] unsigned um
 10289 ;;  sign            1   70[BANK1 ] unsigned char 
 10290 ;;  cntr            1   69[BANK1 ] unsigned char 
 10291 ;;  exp             1   65[BANK1 ] unsigned char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  3   56[BANK1 ] float 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10301 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10302 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10303 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10304 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10305 ;;Total ram usage:       15 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:   17
 10308 ;; This function calls:
 10309 ;;		___ftpack
 10310 ;; This function is called by:
 10311 ;;		_send_complete_update
 10312 ;;		_send_periodic_update
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           	psect	text22
 10317  007D16                     __ptext22:
 10318                           	opt stack 0
 10319  007D16                     ___ftmul:
 10320                           	opt stack 12
 10321                           
 10322                           ; BSR set to: 1
 10323                           ;incstack = 0
 10324  007D16  C13A  F13E         	movff	___ftmul@f1+2,??___ftmul
 10325  007D1A  0101               	movlb	1	; () banked
 10326  007D1C  6B3F               	clrf	(??___ftmul+1)& (0+255),b
 10327  007D1E  6B40               	clrf	(??___ftmul+2)& (0+255),b
 10328  007D20  0101               	movlb	1	; () banked
 10329  007D22  3539               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10330  007D24  0101               	movlb	1	; () banked
 10331  007D26  373E               	rlcf	??___ftmul& (0+255),f,b
 10332  007D28  E301               	bnc	u22211
 10333  007D2A  813F               	bsf	(??___ftmul+1)& (0+255),0,b
 10334  007D2C                     u22211:
 10335  007D2C  0101               	movlb	1	; () banked
 10336  007D2E  513E               	movf	??___ftmul& (0+255),w,b
 10337  007D30  0101               	movlb	1	; () banked
 10338  007D32  6F41               	movwf	___ftmul@exp& (0+255),b
 10339  007D34  0101               	movlb	1	; () banked
 10340  007D36  5141               	movf	___ftmul@exp& (0+255),w,b
 10341  007D38  A4D8               	btfss	status,2,c
 10342  007D3A  D00A               	goto	l19445
 10343                           
 10344                           ; BSR set to: 1
 10345  007D3C  0E00               	movlw	0
 10346  007D3E  0101               	movlb	1	; () banked
 10347  007D40  6F38               	movwf	?___ftmul& (0+255),b
 10348  007D42  0E00               	movlw	0
 10349  007D44  0101               	movlb	1	; () banked
 10350  007D46  6F39               	movwf	(?___ftmul+1)& (0+255),b
 10351  007D48  0E00               	movlw	0
 10352  007D4A  0101               	movlb	1	; () banked
 10353  007D4C  6F3A               	movwf	(?___ftmul+2)& (0+255),b
 10354                           
 10355                           ; BSR set to: 1
 10356  007D4E  0012               	return	
 10357  007D50                     l19445:
 10358                           
 10359                           ; BSR set to: 1
 10360  007D50  C13D  F13E         	movff	___ftmul@f2+2,??___ftmul
 10361  007D54  0101               	movlb	1	; () banked
 10362  007D56  6B3F               	clrf	(??___ftmul+1)& (0+255),b
 10363  007D58  6B40               	clrf	(??___ftmul+2)& (0+255),b
 10364  007D5A  0101               	movlb	1	; () banked
 10365  007D5C  353C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10366  007D5E  0101               	movlb	1	; () banked
 10367  007D60  373E               	rlcf	??___ftmul& (0+255),f,b
 10368  007D62  E301               	bnc	u22231
 10369  007D64  813F               	bsf	(??___ftmul+1)& (0+255),0,b
 10370  007D66                     u22231:
 10371  007D66  0101               	movlb	1	; () banked
 10372  007D68  513E               	movf	??___ftmul& (0+255),w,b
 10373  007D6A  0101               	movlb	1	; () banked
 10374  007D6C  6F46               	movwf	___ftmul@sign& (0+255),b
 10375  007D6E  0101               	movlb	1	; () banked
 10376  007D70  5146               	movf	___ftmul@sign& (0+255),w,b
 10377  007D72  A4D8               	btfss	status,2,c
 10378  007D74  D00A               	goto	l19451
 10379                           
 10380                           ; BSR set to: 1
 10381  007D76  0E00               	movlw	0
 10382  007D78  0101               	movlb	1	; () banked
 10383  007D7A  6F38               	movwf	?___ftmul& (0+255),b
 10384  007D7C  0E00               	movlw	0
 10385  007D7E  0101               	movlb	1	; () banked
 10386  007D80  6F39               	movwf	(?___ftmul+1)& (0+255),b
 10387  007D82  0E00               	movlw	0
 10388  007D84  0101               	movlb	1	; () banked
 10389  007D86  6F3A               	movwf	(?___ftmul+2)& (0+255),b
 10390                           
 10391                           ; BSR set to: 1
 10392  007D88  0012               	return	
 10393  007D8A                     l19451:
 10394                           
 10395                           ; BSR set to: 1
 10396  007D8A  0101               	movlb	1	; () banked
 10397  007D8C  5146               	movf	___ftmul@sign& (0+255),w,b
 10398  007D8E  0F7B               	addlw	123
 10399  007D90  0101               	movlb	1	; () banked
 10400  007D92  2741               	addwf	___ftmul@exp& (0+255),f,b
 10401                           
 10402                           ; BSR set to: 1
 10403  007D94  C13A  F146         	movff	___ftmul@f1+2,___ftmul@sign
 10404  007D98  0101               	movlb	1	; () banked
 10405  007D9A  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10406  007D9C  0101               	movlb	1	; () banked
 10407  007D9E  1B46               	xorwf	___ftmul@sign& (0+255),f,b
 10408  007DA0  0E80               	movlw	128
 10409  007DA2  0101               	movlb	1	; () banked
 10410  007DA4  1746               	andwf	___ftmul@sign& (0+255),f,b
 10411                           
 10412                           ; BSR set to: 1
 10413  007DA6  0101               	movlb	1	; () banked
 10414  007DA8  8F39               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10415                           
 10416                           ; BSR set to: 1
 10417  007DAA  0101               	movlb	1	; () banked
 10418  007DAC  8F3C               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10419                           
 10420                           ; BSR set to: 1
 10421  007DAE  0EFF               	movlw	255
 10422  007DB0  0101               	movlb	1	; () banked
 10423  007DB2  173B               	andwf	___ftmul@f2& (0+255),f,b
 10424  007DB4  0EFF               	movlw	255
 10425  007DB6  0101               	movlb	1	; () banked
 10426  007DB8  173C               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10427  007DBA  0E00               	movlw	0
 10428  007DBC  0101               	movlb	1	; () banked
 10429  007DBE  173D               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10430                           
 10431                           ; BSR set to: 1
 10432  007DC0  0E00               	movlw	0
 10433  007DC2  0101               	movlb	1	; () banked
 10434  007DC4  6F42               	movwf	___ftmul@f3_as_product& (0+255),b
 10435  007DC6  0E00               	movlw	0
 10436  007DC8  0101               	movlb	1	; () banked
 10437  007DCA  6F43               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10438  007DCC  0E00               	movlw	0
 10439  007DCE  0101               	movlb	1	; () banked
 10440  007DD0  6F44               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10441                           
 10442                           ; BSR set to: 1
 10443  007DD2  0E07               	movlw	7
 10444  007DD4  0101               	movlb	1	; () banked
 10445  007DD6  6F45               	movwf	___ftmul@cntr& (0+255),b
 10446  007DD8                     l19465:
 10447                           
 10448                           ; BSR set to: 1
 10449  007DD8  0101               	movlb	1	; () banked
 10450  007DDA  A138               	btfss	___ftmul@f1& (0+255),0,b
 10451  007DDC  D00C               	goto	l19469
 10452                           
 10453                           ; BSR set to: 1
 10454  007DDE  0101               	movlb	1	; () banked
 10455  007DE0  513B               	movf	___ftmul@f2& (0+255),w,b
 10456  007DE2  0101               	movlb	1	; () banked
 10457  007DE4  2742               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10458  007DE6  0101               	movlb	1	; () banked
 10459  007DE8  513C               	movf	(___ftmul@f2+1)& (0+255),w,b
 10460  007DEA  0101               	movlb	1	; () banked
 10461  007DEC  2343               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10462  007DEE  0101               	movlb	1	; () banked
 10463  007DF0  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10464  007DF2  0101               	movlb	1	; () banked
 10465  007DF4  2344               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10466  007DF6                     l19469:
 10467                           
 10468                           ; BSR set to: 1
 10469  007DF6  0101               	movlb	1	; () banked
 10470  007DF8  90D8               	bcf	status,0,c
 10471  007DFA  333A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10472  007DFC  3339               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10473  007DFE  3338               	rrcf	___ftmul@f1& (0+255),f,b
 10474  007E00  0101               	movlb	1	; () banked
 10475  007E02  90D8               	bcf	status,0,c
 10476  007E04  373B               	rlcf	___ftmul@f2& (0+255),f,b
 10477  007E06  373C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10478  007E08  373D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10479                           
 10480                           ; BSR set to: 1
 10481  007E0A  0101               	movlb	1	; () banked
 10482  007E0C  2F45               	decfsz	___ftmul@cntr& (0+255),f,b
 10483  007E0E  D7E4               	goto	l19465
 10484                           
 10485                           ; BSR set to: 1
 10486                           
 10487                           ; BSR set to: 1
 10488  007E10  0E09               	movlw	9
 10489  007E12  0101               	movlb	1	; () banked
 10490  007E14  6F45               	movwf	___ftmul@cntr& (0+255),b
 10491  007E16                     l19475:
 10492                           
 10493                           ; BSR set to: 1
 10494  007E16  0101               	movlb	1	; () banked
 10495  007E18  A138               	btfss	___ftmul@f1& (0+255),0,b
 10496  007E1A  D00C               	goto	l19479
 10497                           
 10498                           ; BSR set to: 1
 10499  007E1C  0101               	movlb	1	; () banked
 10500  007E1E  513B               	movf	___ftmul@f2& (0+255),w,b
 10501  007E20  0101               	movlb	1	; () banked
 10502  007E22  2742               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10503  007E24  0101               	movlb	1	; () banked
 10504  007E26  513C               	movf	(___ftmul@f2+1)& (0+255),w,b
 10505  007E28  0101               	movlb	1	; () banked
 10506  007E2A  2343               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10507  007E2C  0101               	movlb	1	; () banked
 10508  007E2E  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10509  007E30  0101               	movlb	1	; () banked
 10510  007E32  2344               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10511  007E34                     l19479:
 10512                           
 10513                           ; BSR set to: 1
 10514  007E34  0101               	movlb	1	; () banked
 10515  007E36  90D8               	bcf	status,0,c
 10516  007E38  333A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10517  007E3A  3339               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10518  007E3C  3338               	rrcf	___ftmul@f1& (0+255),f,b
 10519  007E3E  0101               	movlb	1	; () banked
 10520  007E40  90D8               	bcf	status,0,c
 10521  007E42  3344               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10522  007E44  3343               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10523  007E46  3342               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10524                           
 10525                           ; BSR set to: 1
 10526  007E48  0101               	movlb	1	; () banked
 10527  007E4A  2F45               	decfsz	___ftmul@cntr& (0+255),f,b
 10528  007E4C  D7E4               	goto	l19475
 10529                           
 10530                           ; BSR set to: 1
 10531                           
 10532                           ; BSR set to: 1
 10533  007E4E  C142  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
 10534  007E52  C143  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10535  007E56  C144  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10536  007E5A  C141  F103         	movff	___ftmul@exp,___ftpack@exp
 10537  007E5E  C146  F104         	movff	___ftmul@sign,___ftpack@sign
 10538  007E62  ECC4  F047         	call	___ftpack	;wreg free
 10539  007E66  C100  F138         	movff	?___ftpack,?___ftmul
 10540  007E6A  C101  F139         	movff	?___ftpack+1,?___ftmul+1
 10541  007E6E  C102  F13A         	movff	?___ftpack+2,?___ftmul+2
 10542  007E72  0012               	return	
 10543  007E74                     __end_of___ftmul:
 10544                           	opt stack 0
 10545                           tblptru	equ	0xFF8
 10546                           tblptrh	equ	0xFF7
 10547                           tblptrl	equ	0xFF6
 10548                           tablat	equ	0xFF5
 10549                           prodh	equ	0xFF4
 10550                           prodl	equ	0xFF3
 10551                           postinc0	equ	0xFEE
 10552                           plusw0	equ	0xFEB
 10553                           wreg	equ	0xFE8
 10554                           postdec1	equ	0xFE5
 10555                           fsr1h	equ	0xFE2
 10556                           fsr1l	equ	0xFE1
 10557                           indf2	equ	0xFDF
 10558                           postinc2	equ	0xFDE
 10559                           postdec2	equ	0xFDD
 10560                           plusw2	equ	0xFDB
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8
 10564                           
 10565 ;; *************** function ___ftpack *****************
 10566 ;; Defined at:
 10567 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  arg             3    0[BANK1 ] unsigned um
 10570 ;;  exp             1    3[BANK1 ] unsigned char 
 10571 ;;  sign            1    4[BANK1 ] unsigned char 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  3    0[BANK1 ] float 
 10576 ;; Registers used:
 10577 ;;		wreg, status,2, status,0
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10583 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10585 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10586 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10587 ;;Total ram usage:        8 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:   16
 10590 ;; This function calls:
 10591 ;;		Nothing
 10592 ;; This function is called by:
 10593 ;;		___altoft
 10594 ;;		___ftadd
 10595 ;;		___ftmul
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text23
 10600  008F88                     __ptext23:
 10601                           	opt stack 0
 10602  008F88                     ___ftpack:
 10603                           	opt stack 11
 10604                           
 10605                           ;incstack = 0
 10606  008F88  0101               	movlb	1	; () banked
 10607  008F8A  5103               	movf	___ftpack@exp& (0+255),w,b
 10608  008F8C  0101               	movlb	1	; () banked
 10609  008F8E  B4D8               	btfsc	status,2,c
 10610  008F90  D008               	goto	l17837
 10611                           
 10612                           ; BSR set to: 1
 10613  008F92  0101               	movlb	1	; () banked
 10614  008F94  5100               	movf	___ftpack@arg& (0+255),w,b
 10615  008F96  0101               	movlb	1	; () banked
 10616  008F98  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10617  008F9A  0101               	movlb	1	; () banked
 10618  008F9C  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10619  008F9E  A4D8               	btfss	status,2,c
 10620  008FA0  D011               	goto	l17843
 10621  008FA2                     l17837:
 10622                           
 10623                           ; BSR set to: 1
 10624  008FA2  0E00               	movlw	0
 10625  008FA4  0101               	movlb	1	; () banked
 10626  008FA6  6F00               	movwf	?___ftpack& (0+255),b
 10627  008FA8  0E00               	movlw	0
 10628  008FAA  0101               	movlb	1	; () banked
 10629  008FAC  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10630  008FAE  0E00               	movlw	0
 10631  008FB0  0101               	movlb	1	; () banked
 10632  008FB2  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10633                           
 10634                           ; BSR set to: 1
 10635  008FB4  0012               	return	
 10636  008FB6                     l17841:
 10637                           
 10638                           ; BSR set to: 1
 10639  008FB6  0101               	movlb	1	; () banked
 10640  008FB8  2B03               	incf	___ftpack@exp& (0+255),f,b
 10641  008FBA  0101               	movlb	1	; () banked
 10642  008FBC  90D8               	bcf	status,0,c
 10643  008FBE  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10644  008FC0  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10645  008FC2  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10646  008FC4                     l17843:
 10647                           
 10648                           ; BSR set to: 1
 10649  008FC4  0E00               	movlw	0
 10650  008FC6  0101               	movlb	1	; () banked
 10651  008FC8  1500               	andwf	___ftpack@arg& (0+255),w,b
 10652  008FCA  0101               	movlb	1	; () banked
 10653  008FCC  6F05               	movwf	??___ftpack& (0+255),b
 10654  008FCE  0E00               	movlw	0
 10655  008FD0  0101               	movlb	1	; () banked
 10656  008FD2  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10657  008FD4  0101               	movlb	1	; () banked
 10658  008FD6  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10659  008FD8  0EFE               	movlw	254
 10660  008FDA  0101               	movlb	1	; () banked
 10661  008FDC  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10662  008FDE  0101               	movlb	1	; () banked
 10663  008FE0  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10664  008FE2  0101               	movlb	1	; () banked
 10665  008FE4  5105               	movf	??___ftpack& (0+255),w,b
 10666  008FE6  0101               	movlb	1	; () banked
 10667  008FE8  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10668  008FEA  0101               	movlb	1	; () banked
 10669  008FEC  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10670  008FEE  B4D8               	btfsc	status,2,c
 10671  008FF0  D011               	goto	l17849
 10672  008FF2  D7E1               	goto	l17841
 10673  008FF4                     l17845:
 10674                           
 10675                           ; BSR set to: 1
 10676  008FF4  0101               	movlb	1	; () banked
 10677  008FF6  2B03               	incf	___ftpack@exp& (0+255),f,b
 10678                           
 10679                           ; BSR set to: 1
 10680  008FF8  0E01               	movlw	1
 10681  008FFA  0101               	movlb	1	; () banked
 10682  008FFC  2700               	addwf	___ftpack@arg& (0+255),f,b
 10683  008FFE  0E00               	movlw	0
 10684  009000  0101               	movlb	1	; () banked
 10685  009002  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10686  009004  0E00               	movlw	0
 10687  009006  0101               	movlb	1	; () banked
 10688  009008  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10689  00900A  0101               	movlb	1	; () banked
 10690  00900C  90D8               	bcf	status,0,c
 10691  00900E  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10692  009010  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10693  009012  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10694  009014                     l17849:
 10695                           
 10696                           ; BSR set to: 1
 10697  009014  0E00               	movlw	0
 10698  009016  0101               	movlb	1	; () banked
 10699  009018  1500               	andwf	___ftpack@arg& (0+255),w,b
 10700  00901A  0101               	movlb	1	; () banked
 10701  00901C  6F05               	movwf	??___ftpack& (0+255),b
 10702  00901E  0E00               	movlw	0
 10703  009020  0101               	movlb	1	; () banked
 10704  009022  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10705  009024  0101               	movlb	1	; () banked
 10706  009026  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10707  009028  0EFF               	movlw	255
 10708  00902A  0101               	movlb	1	; () banked
 10709  00902C  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10710  00902E  0101               	movlb	1	; () banked
 10711  009030  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10712  009032  0101               	movlb	1	; () banked
 10713  009034  5105               	movf	??___ftpack& (0+255),w,b
 10714  009036  0101               	movlb	1	; () banked
 10715  009038  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10716  00903A  0101               	movlb	1	; () banked
 10717  00903C  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10718  00903E  B4D8               	btfsc	status,2,c
 10719  009040  D008               	goto	l17853
 10720  009042  D7D8               	goto	l17845
 10721  009044                     l17851:
 10722                           
 10723                           ; BSR set to: 1
 10724  009044  0101               	movlb	1	; () banked
 10725  009046  0703               	decf	___ftpack@exp& (0+255),f,b
 10726  009048  0101               	movlb	1	; () banked
 10727  00904A  90D8               	bcf	status,0,c
 10728  00904C  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10729  00904E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10730  009050  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10731  009052                     l17853:
 10732                           
 10733                           ; BSR set to: 1
 10734  009052  0101               	movlb	1	; () banked
 10735  009054  BF01               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10736  009056  D004               	goto	l2450
 10737                           
 10738                           ; BSR set to: 1
 10739  009058  0E02               	movlw	2
 10740  00905A  0101               	movlb	1	; () banked
 10741  00905C  6103               	cpfslt	___ftpack@exp& (0+255),b
 10742  00905E  D7F2               	goto	l17851
 10743  009060                     l2450:
 10744                           
 10745                           ; BSR set to: 1
 10746  009060  0101               	movlb	1	; () banked
 10747  009062  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10748  009064  D002               	goto	l17859
 10749                           
 10750                           ; BSR set to: 1
 10751  009066  0101               	movlb	1	; () banked
 10752  009068  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10753  00906A                     l17859:
 10754                           
 10755                           ; BSR set to: 1
 10756  00906A  0101               	movlb	1	; () banked
 10757  00906C  90D8               	bcf	status,0,c
 10758  00906E  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10759  009070  0101               	movlb	1	; () banked
 10760  009072  5103               	movf	___ftpack@exp& (0+255),w,b
 10761  009074  0101               	movlb	1	; () banked
 10762  009076  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10763                           
 10764                           ; BSR set to: 1
 10765  009078  0101               	movlb	1	; () banked
 10766  00907A  5104               	movf	___ftpack@sign& (0+255),w,b
 10767  00907C  0101               	movlb	1	; () banked
 10768  00907E  B4D8               	btfsc	status,2,c
 10769  009080  D002               	goto	l17865
 10770                           
 10771                           ; BSR set to: 1
 10772  009082  0101               	movlb	1	; () banked
 10773  009084  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10774  009086                     l17865:
 10775                           
 10776                           ; BSR set to: 1
 10777  009086  C100  F100         	movff	___ftpack@arg,?___ftpack
 10778  00908A  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 10779  00908E  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 10780  009092  0012               	return	
 10781  009094                     __end_of___ftpack:
 10782                           	opt stack 0
 10783                           tblptru	equ	0xFF8
 10784                           tblptrh	equ	0xFF7
 10785                           tblptrl	equ	0xFF6
 10786                           tablat	equ	0xFF5
 10787                           prodh	equ	0xFF4
 10788                           prodl	equ	0xFF3
 10789                           postinc0	equ	0xFEE
 10790                           plusw0	equ	0xFEB
 10791                           wreg	equ	0xFE8
 10792                           postdec1	equ	0xFE5
 10793                           fsr1h	equ	0xFE2
 10794                           fsr1l	equ	0xFE1
 10795                           indf2	equ	0xFDF
 10796                           postinc2	equ	0xFDE
 10797                           postdec2	equ	0xFDD
 10798                           plusw2	equ	0xFDB
 10799                           fsr2h	equ	0xFDA
 10800                           fsr2l	equ	0xFD9
 10801                           status	equ	0xFD8
 10802                           
 10803 ;; *************** function _send_answer_to_update *****************
 10804 ;; Defined at:
 10805 ;;		line 550 in file "src/main.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;		None
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  tmp             1    0        unsigned char 
 10810 ;; Return value:  Size  Location     Type
 10811 ;;		None               void
 10812 ;; Registers used:
 10813 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10821 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10822 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10823 ;;Total ram usage:        1 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; Hardware stack levels required when called:   18
 10826 ;; This function calls:
 10827 ;;		_dBm_to_mW_ufixed16
 10828 ;;		_encode_ufixed16_variable
 10829 ;;		_encode_uint8_variable
 10830 ;;		_memcpy
 10831 ;;		_sendHIDBinary
 10832 ;; This function is called by:
 10833 ;;		_main
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text24
 10838  007884                     __ptext24:
 10839                           	opt stack 0
 10840  007884                     _send_answer_to_update:
 10841                           	opt stack 12
 10842                           
 10843                           ;main.c: 552: p_buffer = m_buffer;
 10844                           
 10845                           ; BSR set to: 1
 10846                           ;incstack = 0
 10847  007884  0ED1               	movlw	low _m_buffer
 10848  007886  0101               	movlb	1	; () banked
 10849  007888  6FB9               	movwf	_p_buffer& (0+255),b
 10850  00788A  0E02               	movlw	high _m_buffer
 10851  00788C  0101               	movlb	1	; () banked
 10852  00788E  6FBA               	movwf	(_p_buffer+1)& (0+255),b
 10853                           
 10854                           ; BSR set to: 1
 10855                           ;main.c: 553: *(p_buffer++) = 0x4d;
 10856  007890  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10857  007894  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10858  007898  0E4D               	movlw	77
 10859  00789A  6EDF               	movwf	indf2,c
 10860                           
 10861                           ; BSR set to: 1
 10862  00789C  0101               	movlb	1	; () banked
 10863  00789E  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10864  0078A0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10865                           
 10866                           ; BSR set to: 1
 10867                           ;main.c: 554: *(p_buffer++) = 0x00;
 10868  0078A2  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10869  0078A6  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10870  0078AA  0E00               	movlw	0
 10871  0078AC  6EDF               	movwf	indf2,c
 10872                           
 10873                           ; BSR set to: 1
 10874  0078AE  0101               	movlb	1	; () banked
 10875  0078B0  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10876  0078B2  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10877                           
 10878                           ; BSR set to: 1
 10879                           ;main.c: 555: *(p_buffer++) = 0x00;
 10880  0078B4  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10881  0078B8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10882  0078BC  0E00               	movlw	0
 10883  0078BE  6EDF               	movwf	indf2,c
 10884                           
 10885                           ; BSR set to: 1
 10886  0078C0  0101               	movlb	1	; () banked
 10887  0078C2  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10888  0078C4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;main.c: 556: *(p_buffer++) = 04;
 10892  0078C6  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10893  0078CA  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10894  0078CE  0E04               	movlw	4
 10895  0078D0  6EDF               	movwf	indf2,c
 10896                           
 10897                           ; BSR set to: 1
 10898  0078D2  0101               	movlb	1	; () banked
 10899  0078D4  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10900  0078D6  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10901                           
 10902                           ; BSR set to: 1
 10903                           ;main.c: 557: *(p_buffer++) = 0xff;
 10904  0078D8  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10905  0078DC  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10906  0078E0  0EFF               	movlw	255
 10907  0078E2  6EDF               	movwf	indf2,c
 10908                           
 10909                           ; BSR set to: 1
 10910  0078E4  0101               	movlb	1	; () banked
 10911  0078E6  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10912  0078E8  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10913                           
 10914                           ; BSR set to: 1
 10915                           ;main.c: 559: if (Pwr_updated)
 10916  0078EA  0100               	movlb	0	; () banked
 10917  0078EC  519A               	movf	_Pwr_updated& (0+255),w,b
 10918  0078EE  B4D8               	btfsc	status,2,c
 10919  0078F0  D046               	goto	l21135
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;main.c: 560: {
 10923                           ;main.c: 562: memcpy(m_var.label, POWER_LABEL, 3);
 10924  0078F2  0EDE               	movlw	low _m_var
 10925  0078F4  0101               	movlb	1	; () banked
 10926  0078F6  6F00               	movwf	memcpy@d1& (0+255),b
 10927  0078F8  0E01               	movlw	high _m_var
 10928  0078FA  0101               	movlb	1	; () banked
 10929  0078FC  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 10930  0078FE  0EC1               	movlw	low _POWER_LABEL
 10931  007900  0101               	movlb	1	; () banked
 10932  007902  6F02               	movwf	memcpy@s1& (0+255),b
 10933  007904  0E21               	movlw	high _POWER_LABEL
 10934  007906  0101               	movlb	1	; () banked
 10935  007908  6F03               	movwf	(memcpy@s1+1)& (0+255),b
 10936  00790A  0E00               	movlw	0
 10937  00790C  0101               	movlb	1	; () banked
 10938  00790E  6F05               	movwf	(memcpy@n+1)& (0+255),b
 10939  007910  0E03               	movlw	3
 10940  007912  6F04               	movwf	memcpy@n& (0+255),b
 10941  007914  EC96  F059         	call	_memcpy	;wreg free
 10942                           
 10943                           ;main.c: 563: m_var.unit = 8;
 10944  007918  0E08               	movlw	8
 10945  00791A  0101               	movlb	1	; () banked
 10946  00791C  6FE4               	movwf	(_m_var+6)& (0+255),b
 10947                           
 10948                           ; BSR set to: 1
 10949                           ;main.c: 564: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
 10950  00791E  0EE2               	movlw	low (_m_var+4)
 10951  007920  0101               	movlb	1	; () banked
 10952  007922  6F00               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
 10953  007924  0E01               	movlw	high (_m_var+4)
 10954  007926  0101               	movlb	1	; () banked
 10955  007928  6F01               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
 10956  00792A  0EE3               	movlw	low (_m_var+5)
 10957  00792C  0101               	movlb	1	; () banked
 10958  00792E  6F02               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
 10959  007930  0E01               	movlw	high (_m_var+5)
 10960  007932  0101               	movlb	1	; () banked
 10961  007934  6F03               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
 10962  007936  0101               	movlb	1	; () banked
 10963  007938  51C8               	movf	_m_power& (0+255),w,b
 10964  00793A  EC83  F045         	call	_dBm_to_mW_ufixed16
 10965                           
 10966                           ;main.c: 565: m_var.writable = 1;
 10967  00793E  0E01               	movlw	1
 10968  007940  0101               	movlb	1	; () banked
 10969  007942  6FE5               	movwf	(_m_var+7)& (0+255),b
 10970                           
 10971                           ; BSR set to: 1
 10972                           ;main.c: 566: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
 10973  007944  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
 10974  007948  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
 10975  00794C  EE21  F0DE         	lfsr	2,_m_var
 10976  007950  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
 10977  007954  0E09               	movlw	9
 10978  007956                     u23941:
 10979  007956  CFDB FFEB          	movff	plusw2,plusw0
 10980  00795A  06E8               	decf	wreg,f,c
 10981  00795C  E2FC               	bc	u23941
 10982  00795E  EC00  F051         	call	_encode_ufixed16_variable	;wreg free
 10983  007962  0101               	movlb	1	; () banked
 10984  007964  6F10               	movwf	??_send_answer_to_update& (0+255),b
 10985  007966  0101               	movlb	1	; () banked
 10986  007968  5110               	movf	??_send_answer_to_update& (0+255),w,b
 10987  00796A  0D01               	mullw	1
 10988  00796C  50F3               	movf	prodl,w,c
 10989  00796E  0101               	movlb	1	; () banked
 10990  007970  27B9               	addwf	_p_buffer& (0+255),f,b
 10991  007972  50F4               	movf	prodh,w,c
 10992  007974  0101               	movlb	1	; () banked
 10993  007976  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
 10994                           
 10995                           ; BSR set to: 1
 10996                           ;main.c: 567: Pwr_updated = 0;
 10997  007978  0E00               	movlw	0
 10998  00797A  0100               	movlb	0	; () banked
 10999  00797C  6F9A               	movwf	_Pwr_updated& (0+255),b
 11000  00797E                     l21135:
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;main.c: 568: }
 11004                           ;main.c: 569: if (UpF_updated)
 11005  00797E  0100               	movlb	0	; () banked
 11006  007980  519E               	movf	_UpF_updated& (0+255),w,b
 11007  007982  B4D8               	btfsc	status,2,c
 11008  007984  D038               	goto	l21149
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;main.c: 570: {
 11012                           ;main.c: 572: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
 11013  007986  0EDE               	movlw	low _m_var
 11014  007988  0101               	movlb	1	; () banked
 11015  00798A  6F00               	movwf	memcpy@d1& (0+255),b
 11016  00798C  0E01               	movlw	high _m_var
 11017  00798E  0101               	movlb	1	; () banked
 11018  007990  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 11019  007992  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
 11020  007994  0101               	movlb	1	; () banked
 11021  007996  6F02               	movwf	memcpy@s1& (0+255),b
 11022  007998  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
 11023  00799A  0101               	movlb	1	; () banked
 11024  00799C  6F03               	movwf	(memcpy@s1+1)& (0+255),b
 11025  00799E  0E00               	movlw	0
 11026  0079A0  0101               	movlb	1	; () banked
 11027  0079A2  6F05               	movwf	(memcpy@n+1)& (0+255),b
 11028  0079A4  0E03               	movlw	3
 11029  0079A6  6F04               	movwf	memcpy@n& (0+255),b
 11030  0079A8  EC96  F059         	call	_memcpy	;wreg free
 11031                           
 11032                           ;main.c: 573: m_var.unit = 4;
 11033  0079AC  0E04               	movlw	4
 11034  0079AE  0101               	movlb	1	; () banked
 11035  0079B0  6FE4               	movwf	(_m_var+6)& (0+255),b
 11036                           
 11037                           ; BSR set to: 1
 11038                           ;main.c: 574: m_var.value_byte1 = m_update_frequency;
 11039  0079B2  C1FA  F1E2         	movff	_m_update_frequency,_m_var+4	;volatile
 11040                           
 11041                           ; BSR set to: 1
 11042                           ;main.c: 575: m_var.writable = 1;
 11043  0079B6  0E01               	movlw	1
 11044  0079B8  0101               	movlb	1	; () banked
 11045  0079BA  6FE5               	movwf	(_m_var+7)& (0+255),b
 11046                           
 11047                           ; BSR set to: 1
 11048                           ;main.c: 576: p_buffer += encode_uint8_variable(p_buffer, m_var);
 11049  0079BC  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
 11050  0079C0  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
 11051  0079C4  EE21  F0DE         	lfsr	2,_m_var
 11052  0079C8  EE01  F002         	lfsr	0,encode_uint8_variable@var
 11053  0079CC  0E09               	movlw	9
 11054  0079CE                     u23961:
 11055  0079CE  CFDB FFEB          	movff	plusw2,plusw0
 11056  0079D2  06E8               	decf	wreg,f,c
 11057  0079D4  E2FC               	bc	u23961
 11058  0079D6  EC8E  F054         	call	_encode_uint8_variable	;wreg free
 11059  0079DA  0101               	movlb	1	; () banked
 11060  0079DC  6F10               	movwf	??_send_answer_to_update& (0+255),b
 11061  0079DE  0101               	movlb	1	; () banked
 11062  0079E0  5110               	movf	??_send_answer_to_update& (0+255),w,b
 11063  0079E2  0D01               	mullw	1
 11064  0079E4  50F3               	movf	prodl,w,c
 11065  0079E6  0101               	movlb	1	; () banked
 11066  0079E8  27B9               	addwf	_p_buffer& (0+255),f,b
 11067  0079EA  50F4               	movf	prodh,w,c
 11068  0079EC  0101               	movlb	1	; () banked
 11069  0079EE  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
 11070                           
 11071                           ; BSR set to: 1
 11072                           ;main.c: 577: UpF_updated = 0;
 11073  0079F0  0E00               	movlw	0
 11074  0079F2  0100               	movlb	0	; () banked
 11075  0079F4  6F9E               	movwf	_UpF_updated& (0+255),b
 11076  0079F6                     l21149:
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;main.c: 578: }
 11080                           ;main.c: 580: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
 11081  0079F6  0ED1               	movlw	low _m_buffer
 11082  0079F8  0101               	movlb	1	; () banked
 11083  0079FA  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
 11084  0079FC  0E02               	movlw	high _m_buffer
 11085  0079FE  0101               	movlb	1	; () banked
 11086  007A00  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
 11087  007A02  0ED1               	movlw	_m_buffer& (0+255)
 11088  007A04  0800               	sublw	0
 11089  007A06  0101               	movlb	1	; () banked
 11090  007A08  25B9               	addwf	_p_buffer& (0+255),w,b
 11091  007A0A  0101               	movlb	1	; () banked
 11092  007A0C  6F0C               	movwf	sendHIDBinary@length& (0+255),b
 11093  007A0E  EC7F  F055         	call	_sendHIDBinary	;wreg free
 11094                           
 11095                           ;main.c: 581: _delay((unsigned long)((20)*(16000000/4000.0)));
 11096  007A12  0E68               	movlw	104
 11097  007A14  0101               	movlb	1	; () banked
 11098  007A16  6F10               	movwf	??_send_answer_to_update& (0+255),b
 11099  007A18  0EE4               	movlw	228
 11100  007A1A                     u25277:
 11101  007A1A  2EE8               	decfsz	wreg,f,c
 11102  007A1C  D7FE               	goto	u25277
 11103  007A1E  2F10               	decfsz	??_send_answer_to_update& (0+255),f,b
 11104  007A20  D7FC               	goto	u25277
 11105  007A22  D000               	nop2	
 11106  007A24  0012               	return		;funcret
 11107  007A26                     __end_of_send_answer_to_update:
 11108                           	opt stack 0
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           prodh	equ	0xFF4
 11114                           prodl	equ	0xFF3
 11115                           postinc0	equ	0xFEE
 11116                           plusw0	equ	0xFEB
 11117                           wreg	equ	0xFE8
 11118                           postdec1	equ	0xFE5
 11119                           fsr1h	equ	0xFE2
 11120                           fsr1l	equ	0xFE1
 11121                           indf2	equ	0xFDF
 11122                           postinc2	equ	0xFDE
 11123                           postdec2	equ	0xFDD
 11124                           plusw2	equ	0xFDB
 11125                           fsr2h	equ	0xFDA
 11126                           fsr2l	equ	0xFD9
 11127                           status	equ	0xFD8
 11128                           
 11129 ;; *************** function _sendHIDBinary *****************
 11130 ;; Defined at:
 11131 ;;		line 687 in file "src/main.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
 11134 ;;		 -> m_buffer(32), 
 11135 ;;  length          1   12[BANK1 ] unsigned char 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      unsigned char 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11147 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;Total ram usage:        6 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:   17
 11154 ;; This function calls:
 11155 ;;		_USBTransferOnePacket
 11156 ;;		_memcpy
 11157 ;; This function is called by:
 11158 ;;		_main
 11159 ;;		_send_network_register
 11160 ;;		_send_complete_update
 11161 ;;		_send_answer_to_update
 11162 ;;		_send_periodic_update
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text25
 11167  00AAFE                     __ptext25:
 11168                           	opt stack 0
 11169  00AAFE                     _sendHIDBinary:
 11170                           	opt stack 12
 11171                           
 11172                           ;main.c: 689: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11173                           
 11174                           ;incstack = 0
 11175  00AAFE  0E1F               	movlw	31
 11176  00AB00  644B               	cpfsgt	_USBDeviceState,c	;volatile
 11177  00AB02  0012               	return	
 11178  00AB04  B265               	btfsc	3941,1,c	;volatile
 11179  00AB06  0012               	return	
 11180  00AB08                     l19191:
 11181                           
 11182                           ;main.c: 694: {
 11183                           ;main.c: 695: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
 11184  00AB08  0100               	movlb	0	; () banked
 11185  00AB0A  5193               	movf	_USBInHandle& (0+255),w,b
 11186  00AB0C  0100               	movlb	0	; () banked
 11187  00AB0E  1194               	iorwf	(_USBInHandle+1)& (0+255),w,b
 11188  00AB10  B4D8               	btfsc	status,2,c
 11189  00AB12  D013               	goto	l19195
 11190                           
 11191                           ; BSR set to: 0
 11192  00AB14  C093  FFD9         	movff	_USBInHandle,fsr2l
 11193  00AB18  C094  FFDA         	movff	_USBInHandle+1,fsr2h
 11194  00AB1C  0100               	movlb	0	; () banked
 11195  00AB1E  AEDF               	btfss	indf2,7,c
 11196  00AB20  D004               	goto	u21900
 11197  00AB22  0101               	movlb	1	; () banked
 11198  00AB24  6B0D               	clrf	??_sendHIDBinary& (0+255),b
 11199  00AB26  2B0D               	incf	??_sendHIDBinary& (0+255),f,b
 11200  00AB28  D002               	goto	u21908
 11201  00AB2A                     u21900:
 11202  00AB2A  0101               	movlb	1	; () banked
 11203  00AB2C  6B0D               	clrf	??_sendHIDBinary& (0+255),b
 11204  00AB2E                     u21908:
 11205  00AB2E  0101               	movlb	1	; () banked
 11206  00AB30  510D               	movf	??_sendHIDBinary& (0+255),w,b
 11207  00AB32  0101               	movlb	1	; () banked
 11208  00AB34  6F0E               	movwf	_sendHIDBinary$4975& (0+255),b
 11209  00AB36  6B0F               	clrf	(_sendHIDBinary$4975+1)& (0+255),b
 11210  00AB38  D005               	goto	l19197
 11211  00AB3A                     l19195:
 11212  00AB3A  0E00               	movlw	0
 11213  00AB3C  0101               	movlb	1	; () banked
 11214  00AB3E  6F0F               	movwf	(_sendHIDBinary$4975+1)& (0+255),b
 11215  00AB40  0E00               	movlw	0
 11216  00AB42  6F0E               	movwf	_sendHIDBinary$4975& (0+255),b
 11217  00AB44                     l19197:
 11218                           
 11219                           ; BSR set to: 1
 11220  00AB44  0101               	movlb	1	; () banked
 11221  00AB46  510E               	movf	_sendHIDBinary$4975& (0+255),w,b
 11222  00AB48  0101               	movlb	1	; () banked
 11223  00AB4A  110F               	iorwf	(_sendHIDBinary$4975+1)& (0+255),w,b
 11224  00AB4C  A4D8               	btfss	status,2,c
 11225  00AB4E  D7DC               	goto	l19191
 11226                           
 11227                           ; BSR set to: 1
 11228                           ;main.c: 696: {
 11229                           ;main.c: 697: memcpy(&ToSendDataBuffer[0], buffer, length);
 11230  00AB50  0E84               	movlw	low _ToSendDataBuffer
 11231  00AB52  0101               	movlb	1	; () banked
 11232  00AB54  6F00               	movwf	memcpy@d1& (0+255),b
 11233  00AB56  0E03               	movlw	high _ToSendDataBuffer
 11234  00AB58  0101               	movlb	1	; () banked
 11235  00AB5A  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 11236  00AB5C  C10A  F102         	movff	sendHIDBinary@buffer,memcpy@s1
 11237  00AB60  C10B  F103         	movff	sendHIDBinary@buffer+1,memcpy@s1+1
 11238  00AB64  C10C  F104         	movff	sendHIDBinary@length,memcpy@n
 11239  00AB68  0101               	movlb	1	; () banked
 11240  00AB6A  6B05               	clrf	(memcpy@n+1)& (0+255),b
 11241  00AB6C  EC96  F059         	call	_memcpy	;wreg free
 11242                           
 11243                           ;main.c: 698: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],length);
 11244  00AB70  0E01               	movlw	1
 11245  00AB72  0101               	movlb	1	; () banked
 11246  00AB74  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
 11247  00AB76  0E84               	movlw	low _ToSendDataBuffer
 11248  00AB78  0101               	movlb	1	; () banked
 11249  00AB7A  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
 11250  00AB7C  0E03               	movlw	high _ToSendDataBuffer
 11251  00AB7E  0101               	movlb	1	; () banked
 11252  00AB80  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11253  00AB82  C10C  F103         	movff	sendHIDBinary@length,USBTransferOnePacket@len
 11254  00AB86  0E01               	movlw	1
 11255  00AB88  ECA6  F04C         	call	_USBTransferOnePacket
 11256  00AB8C  C100  F093         	movff	?_USBTransferOnePacket,_USBInHandle
 11257  00AB90  C101  F094         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 11258                           
 11259                           ;main.c: 699: return 1;
 11260                           ;	Return value of _sendHIDBinary is never used
 11261  00AB94  0012               	return	
 11262  00AB96                     __end_of_sendHIDBinary:
 11263                           	opt stack 0
 11264                           tblptru	equ	0xFF8
 11265                           tblptrh	equ	0xFF7
 11266                           tblptrl	equ	0xFF6
 11267                           tablat	equ	0xFF5
 11268                           prodh	equ	0xFF4
 11269                           prodl	equ	0xFF3
 11270                           postinc0	equ	0xFEE
 11271                           plusw0	equ	0xFEB
 11272                           wreg	equ	0xFE8
 11273                           postdec1	equ	0xFE5
 11274                           fsr1h	equ	0xFE2
 11275                           fsr1l	equ	0xFE1
 11276                           indf2	equ	0xFDF
 11277                           postinc2	equ	0xFDE
 11278                           postdec2	equ	0xFDD
 11279                           plusw2	equ	0xFDB
 11280                           fsr2h	equ	0xFDA
 11281                           fsr2l	equ	0xFD9
 11282                           status	equ	0xFD8
 11283                           
 11284 ;; *************** function _encode_uint8_variable *****************
 11285 ;; Defined at:
 11286 ;;		line 118 in file "../../muta/muta_messages.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 11289 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 11290 ;;  var            10    2[BANK1 ] struct .
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  m_writable      1   14[BANK1 ] unsigned char 
 11293 ;;  m_signed        1   13[BANK1 ] unsigned char 
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  1    wreg      unsigned char 
 11296 ;; Registers used:
 11297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11303 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11306 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11307 ;;Total ram usage:       15 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; Hardware stack levels required when called:   16
 11310 ;; This function calls:
 11311 ;;		Nothing
 11312 ;; This function is called by:
 11313 ;;		_send_complete_update
 11314 ;;		_send_answer_to_update
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318                           	psect	text26
 11319  00A91C                     __ptext26:
 11320                           	opt stack 0
 11321  00A91C                     _encode_uint8_variable:
 11322                           	opt stack 13
 11323                           
 11324                           ;muta_messages.c: 120: *(buffer++) = var.label[0];
 11325                           
 11326                           ;incstack = 0
 11327  00A91C  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11328  00A920  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11329  00A924  C102  FFDF         	movff	encode_uint8_variable@var,indf2
 11330  00A928  0101               	movlb	1	; () banked
 11331  00A92A  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11332  00A92C  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11333                           
 11334                           ; BSR set to: 1
 11335                           ;muta_messages.c: 121: *(buffer++) = var.label[1];
 11336  00A92E  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11337  00A932  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11338  00A936  C103  FFDF         	movff	encode_uint8_variable@var+1,indf2
 11339  00A93A  0101               	movlb	1	; () banked
 11340  00A93C  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11341  00A93E  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11342                           
 11343                           ; BSR set to: 1
 11344                           ;muta_messages.c: 122: *(buffer++) = var.label[2];
 11345  00A940  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11346  00A944  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11347  00A948  C104  FFDF         	movff	encode_uint8_variable@var+2,indf2
 11348                           
 11349                           ; BSR set to: 1
 11350  00A94C  0101               	movlb	1	; () banked
 11351  00A94E  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11352  00A950  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11353                           
 11354                           ; BSR set to: 1
 11355                           ;muta_messages.c: 123: uint8_t m_signed = 0;
 11356  00A952  0E00               	movlw	0
 11357  00A954  0101               	movlb	1	; () banked
 11358  00A956  6F0D               	movwf	encode_uint8_variable@m_signed& (0+255),b
 11359                           
 11360                           ; BSR set to: 1
 11361                           ;muta_messages.c: 124: uint8_t m_writable = 0;
 11362  00A958  0E00               	movlw	0
 11363  00A95A  0101               	movlb	1	; () banked
 11364  00A95C  6F0E               	movwf	encode_uint8_variable@m_writable& (0+255),b
 11365                           
 11366                           ; BSR set to: 1
 11367                           ;muta_messages.c: 125: if (var._signed)
 11368  00A95E  0101               	movlb	1	; () banked
 11369  00A960  510A               	movf	(encode_uint8_variable@var+8)& (0+255),w,b
 11370  00A962  B4D8               	btfsc	status,2,c
 11371  00A964  D003               	goto	l2033
 11372                           
 11373                           ; BSR set to: 1
 11374                           ;muta_messages.c: 126: { m_signed = 1; }
 11375  00A966  0E01               	movlw	1
 11376  00A968  0101               	movlb	1	; () banked
 11377  00A96A  6F0D               	movwf	encode_uint8_variable@m_signed& (0+255),b
 11378  00A96C                     l2033:
 11379                           
 11380                           ; BSR set to: 1
 11381                           ;muta_messages.c: 127: if (var.writable)
 11382  00A96C  0101               	movlb	1	; () banked
 11383  00A96E  5109               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
 11384  00A970  B4D8               	btfsc	status,2,c
 11385  00A972  D003               	goto	l19287
 11386                           
 11387                           ; BSR set to: 1
 11388                           ;muta_messages.c: 128: { m_writable = 1; }
 11389  00A974  0E01               	movlw	1
 11390  00A976  0101               	movlb	1	; () banked
 11391  00A978  6F0E               	movwf	encode_uint8_variable@m_writable& (0+255),b
 11392  00A97A                     l19287:
 11393                           
 11394                           ; BSR set to: 1
 11395                           ;muta_messages.c: 129: var.type = (0 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
 11396  00A97A  C10E  F10C         	movff	encode_uint8_variable@m_writable,??_encode_uint8_variable
 11397  00A97E  0101               	movlb	1	; () banked
 11398  00A980  3B0C               	swapf	??_encode_uint8_variable& (0+255),f,b
 11399  00A982  0EF0               	movlw	240
 11400  00A984  170C               	andwf	??_encode_uint8_variable& (0+255),f,b
 11401  00A986  0101               	movlb	1	; () banked
 11402  00A988  390D               	swapf	encode_uint8_variable@m_signed& (0+255),w,b
 11403  00A98A  46E8               	rlncf	wreg,f,c
 11404  00A98C  0BE0               	andlw	224
 11405  00A98E  0101               	movlb	1	; () banked
 11406  00A990  250C               	addwf	??_encode_uint8_variable& (0+255),w,b
 11407  00A992  0101               	movlb	1	; () banked
 11408  00A994  2508               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
 11409  00A996  0101               	movlb	1	; () banked
 11410  00A998  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
 11411                           
 11412                           ; BSR set to: 1
 11413                           ;muta_messages.c: 130: *(buffer++) = var.type;
 11414  00A99A  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11415  00A99E  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11416  00A9A2  C105  FFDF         	movff	encode_uint8_variable@var+3,indf2
 11417                           
 11418                           ; BSR set to: 1
 11419  00A9A6  0101               	movlb	1	; () banked
 11420  00A9A8  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11421  00A9AA  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11422                           
 11423                           ; BSR set to: 1
 11424                           ;muta_messages.c: 131: *(buffer++) = var.value_byte1;
 11425  00A9AC  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11426  00A9B0  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11427  00A9B4  C106  FFDF         	movff	encode_uint8_variable@var+4,indf2
 11428                           
 11429                           ; BSR set to: 1
 11430  00A9B8  0101               	movlb	1	; () banked
 11431  00A9BA  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11432  00A9BC  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11433                           
 11434                           ; BSR set to: 1
 11435                           ;muta_messages.c: 132: return 5;
 11436  00A9BE  0E05               	movlw	5
 11437  00A9C0  0012               	return	
 11438  00A9C2                     __end_of_encode_uint8_variable:
 11439                           	opt stack 0
 11440                           tblptru	equ	0xFF8
 11441                           tblptrh	equ	0xFF7
 11442                           tblptrl	equ	0xFF6
 11443                           tablat	equ	0xFF5
 11444                           prodh	equ	0xFF4
 11445                           prodl	equ	0xFF3
 11446                           postinc0	equ	0xFEE
 11447                           plusw0	equ	0xFEB
 11448                           wreg	equ	0xFE8
 11449                           postdec1	equ	0xFE5
 11450                           fsr1h	equ	0xFE2
 11451                           fsr1l	equ	0xFE1
 11452                           indf2	equ	0xFDF
 11453                           postinc2	equ	0xFDE
 11454                           postdec2	equ	0xFDD
 11455                           plusw2	equ	0xFDB
 11456                           fsr2h	equ	0xFDA
 11457                           fsr2l	equ	0xFD9
 11458                           status	equ	0xFD8
 11459                           
 11460 ;; *************** function _encode_ufixed16_variable *****************
 11461 ;; Defined at:
 11462 ;;		line 153 in file "../../muta/muta_messages.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 11465 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 11466 ;;  var            10    2[BANK1 ] struct .
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;  m_writable      1   14[BANK1 ] unsigned char 
 11469 ;;  m_signed        1   13[BANK1 ] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      unsigned char 
 11472 ;; Registers used:
 11473 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11479 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;Total ram usage:       15 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:   16
 11486 ;; This function calls:
 11487 ;;		Nothing
 11488 ;; This function is called by:
 11489 ;;		_send_complete_update
 11490 ;;		_send_answer_to_update
 11491 ;;		_send_periodic_update
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           	psect	text27
 11496  00A200                     __ptext27:
 11497                           	opt stack 0
 11498  00A200                     _encode_ufixed16_variable:
 11499                           	opt stack 13
 11500                           
 11501                           ;muta_messages.c: 155: *(buffer++) = var.label[0];
 11502                           
 11503                           ; BSR set to: 1
 11504                           ;incstack = 0
 11505  00A200  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11506  00A204  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11507  00A208  C102  FFDF         	movff	encode_ufixed16_variable@var,indf2
 11508  00A20C  0101               	movlb	1	; () banked
 11509  00A20E  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11510  00A210  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 1
 11513                           ;muta_messages.c: 156: *(buffer++) = var.label[1];
 11514  00A212  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11515  00A216  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11516  00A21A  C103  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
 11517  00A21E  0101               	movlb	1	; () banked
 11518  00A220  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11519  00A222  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11520                           
 11521                           ; BSR set to: 1
 11522                           ;muta_messages.c: 157: *(buffer++) = var.label[2];
 11523  00A224  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11524  00A228  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11525  00A22C  C104  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
 11526                           
 11527                           ; BSR set to: 1
 11528  00A230  0101               	movlb	1	; () banked
 11529  00A232  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11530  00A234  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11531                           
 11532                           ; BSR set to: 1
 11533                           ;muta_messages.c: 158: uint8_t m_signed = 0;
 11534  00A236  0E00               	movlw	0
 11535  00A238  0101               	movlb	1	; () banked
 11536  00A23A  6F0D               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
 11537                           
 11538                           ; BSR set to: 1
 11539                           ;muta_messages.c: 159: uint8_t m_writable = 0;
 11540  00A23C  0E00               	movlw	0
 11541  00A23E  0101               	movlb	1	; () banked
 11542  00A240  6F0E               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
 11543                           
 11544                           ; BSR set to: 1
 11545                           ;muta_messages.c: 160: if (var._signed)
 11546  00A242  0101               	movlb	1	; () banked
 11547  00A244  510A               	movf	(encode_ufixed16_variable@var+8)& (0+255),w,b
 11548  00A246  B4D8               	btfsc	status,2,c
 11549  00A248  D003               	goto	l2043
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;muta_messages.c: 161: m_signed = 1;
 11553  00A24A  0E01               	movlw	1
 11554  00A24C  0101               	movlb	1	; () banked
 11555  00A24E  6F0D               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
 11556  00A250                     l2043:
 11557                           
 11558                           ; BSR set to: 1
 11559                           ;muta_messages.c: 162: if (var.writable)
 11560  00A250  0101               	movlb	1	; () banked
 11561  00A252  5109               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
 11562  00A254  B4D8               	btfsc	status,2,c
 11563  00A256  D003               	goto	l19249
 11564                           
 11565                           ; BSR set to: 1
 11566                           ;muta_messages.c: 163: m_writable = 1;
 11567  00A258  0E01               	movlw	1
 11568  00A25A  0101               	movlb	1	; () banked
 11569  00A25C  6F0E               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
 11570  00A25E                     l19249:
 11571                           
 11572                           ; BSR set to: 1
 11573                           ;muta_messages.c: 164: var.type = (2 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
 11574  00A25E  C10E  F10C         	movff	encode_ufixed16_variable@m_writable,??_encode_ufixed16_variable
 11575  00A262  0101               	movlb	1	; () banked
 11576  00A264  3B0C               	swapf	??_encode_ufixed16_variable& (0+255),f,b
 11577  00A266  0EF0               	movlw	240
 11578  00A268  170C               	andwf	??_encode_ufixed16_variable& (0+255),f,b
 11579  00A26A  0101               	movlb	1	; () banked
 11580  00A26C  390D               	swapf	encode_ufixed16_variable@m_signed& (0+255),w,b
 11581  00A26E  46E8               	rlncf	wreg,f,c
 11582  00A270  0BE0               	andlw	224
 11583  00A272  0101               	movlb	1	; () banked
 11584  00A274  250C               	addwf	??_encode_ufixed16_variable& (0+255),w,b
 11585  00A276  0101               	movlb	1	; () banked
 11586  00A278  2508               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
 11587  00A27A  0F80               	addlw	128
 11588  00A27C  0101               	movlb	1	; () banked
 11589  00A27E  6F05               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
 11590                           
 11591                           ; BSR set to: 1
 11592                           ;muta_messages.c: 165: *(buffer++) = var.type;
 11593  00A280  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11594  00A284  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11595  00A288  C105  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
 11596                           
 11597                           ; BSR set to: 1
 11598  00A28C  0101               	movlb	1	; () banked
 11599  00A28E  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11600  00A290  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11601                           
 11602                           ; BSR set to: 1
 11603                           ;muta_messages.c: 166: *(buffer++) = var.value_byte2;
 11604  00A292  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11605  00A296  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11606  00A29A  C107  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
 11607                           
 11608                           ; BSR set to: 1
 11609  00A29E  0101               	movlb	1	; () banked
 11610  00A2A0  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11611  00A2A2  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11612                           
 11613                           ; BSR set to: 1
 11614                           ;muta_messages.c: 167: *(buffer++) = var.value_byte1;
 11615  00A2A4  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11616  00A2A8  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11617  00A2AC  C106  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
 11618                           
 11619                           ; BSR set to: 1
 11620  00A2B0  0101               	movlb	1	; () banked
 11621  00A2B2  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11622  00A2B4  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11623                           
 11624                           ; BSR set to: 1
 11625                           ;muta_messages.c: 168: return 6;
 11626  00A2B6  0E06               	movlw	6
 11627  00A2B8  0012               	return	
 11628  00A2BA                     __end_of_encode_ufixed16_variable:
 11629                           	opt stack 0
 11630                           tblptru	equ	0xFF8
 11631                           tblptrh	equ	0xFF7
 11632                           tblptrl	equ	0xFF6
 11633                           tablat	equ	0xFF5
 11634                           prodh	equ	0xFF4
 11635                           prodl	equ	0xFF3
 11636                           postinc0	equ	0xFEE
 11637                           plusw0	equ	0xFEB
 11638                           wreg	equ	0xFE8
 11639                           postdec1	equ	0xFE5
 11640                           fsr1h	equ	0xFE2
 11641                           fsr1l	equ	0xFE1
 11642                           indf2	equ	0xFDF
 11643                           postinc2	equ	0xFDE
 11644                           postdec2	equ	0xFDD
 11645                           plusw2	equ	0xFDB
 11646                           fsr2h	equ	0xFDA
 11647                           fsr2l	equ	0xFD9
 11648                           status	equ	0xFD8
 11649                           
 11650 ;; *************** function _dBm_to_mW_ufixed16 *****************
 11651 ;; Defined at:
 11652 ;;		line 45 in file "../../muta/muta_messages.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;  power           1    wreg     unsigned char 
 11655 ;;  value1          2    0[BANK1 ] PTR unsigned char 
 11656 ;;		 -> m_var(10), 
 11657 ;;  value2          2    2[BANK1 ] PTR unsigned char 
 11658 ;;		 -> m_var(10), 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  power           1    4[BANK1 ] unsigned char 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;		None               void
 11663 ;; Registers used:
 11664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11670 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11671 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11673 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11674 ;;Total ram usage:        5 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:   16
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_send_complete_update
 11681 ;;		_send_answer_to_update
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text28
 11686  008B06                     __ptext28:
 11687                           	opt stack 0
 11688  008B06                     _dBm_to_mW_ufixed16:
 11689                           	opt stack 13
 11690                           
 11691                           ; BSR set to: 1
 11692                           ;incstack = 0
 11693                           ;dBm_to_mW_ufixed16@power stored from wreg
 11694  008B06  0101               	movlb	1	; () banked
 11695  008B08  6F04               	movwf	dBm_to_mW_ufixed16@power& (0+255),b
 11696                           
 11697                           ;muta_messages.c: 47: switch(power)
 11698  008B0A  D075               	goto	l19227
 11699  008B0C                     l19207:
 11700                           
 11701                           ;muta_messages.c: 50: *value1 = 20;
 11702  008B0C  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11703  008B10  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11704  008B14  0E14               	movlw	20
 11705  008B16  6EDF               	movwf	indf2,c
 11706                           
 11707                           ;muta_messages.c: 51: *value2 = 0;
 11708  008B18  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11709  008B1C  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11710  008B20  0E00               	movlw	0
 11711  008B22  6EDF               	movwf	indf2,c
 11712                           
 11713                           ;muta_messages.c: 52: break;
 11714  008B24  0012               	return	
 11715  008B26                     l19209:
 11716                           
 11717                           ;muta_messages.c: 54: *value1 = 10;
 11718  008B26  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11719  008B2A  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11720  008B2E  0E0A               	movlw	10
 11721  008B30  6EDF               	movwf	indf2,c
 11722                           
 11723                           ;muta_messages.c: 55: *value2 = 0;
 11724  008B32  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11725  008B36  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11726  008B3A  0E00               	movlw	0
 11727  008B3C  6EDF               	movwf	indf2,c
 11728                           
 11729                           ;muta_messages.c: 56: break;
 11730  008B3E  0012               	return	
 11731  008B40                     l19211:
 11732                           
 11733                           ;muta_messages.c: 58: *value1 = 5;
 11734  008B40  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11735  008B44  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11736  008B48  0E05               	movlw	5
 11737  008B4A  6EDF               	movwf	indf2,c
 11738                           
 11739                           ;muta_messages.c: 59: *value2 = 0;
 11740  008B4C  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11741  008B50  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11742  008B54  0E00               	movlw	0
 11743  008B56  6EDF               	movwf	indf2,c
 11744                           
 11745                           ;muta_messages.c: 60: break;
 11746  008B58  0012               	return	
 11747  008B5A                     l19213:
 11748                           
 11749                           ;muta_messages.c: 62: *value1 = 2;
 11750  008B5A  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11751  008B5E  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11752  008B62  0E02               	movlw	2
 11753  008B64  6EDF               	movwf	indf2,c
 11754                           
 11755                           ;muta_messages.c: 63: *value2 = 50;
 11756  008B66  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11757  008B6A  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11758  008B6E  0E32               	movlw	50
 11759  008B70  6EDF               	movwf	indf2,c
 11760                           
 11761                           ;muta_messages.c: 64: break;
 11762  008B72  0012               	return	
 11763  008B74                     l19215:
 11764                           
 11765                           ;muta_messages.c: 66: *value1 = 1;
 11766  008B74  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11767  008B78  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11768  008B7C  0E01               	movlw	1
 11769  008B7E  6EDF               	movwf	indf2,c
 11770                           
 11771                           ;muta_messages.c: 67: *value2 = 25;
 11772  008B80  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11773  008B84  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11774  008B88  0E19               	movlw	25
 11775  008B8A  6EDF               	movwf	indf2,c
 11776                           
 11777                           ;muta_messages.c: 68: break;
 11778  008B8C  0012               	return	
 11779  008B8E                     l19217:
 11780                           
 11781                           ;muta_messages.c: 70: *value1 = 0;
 11782  008B8E  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11783  008B92  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11784  008B96  0E00               	movlw	0
 11785  008B98  6EDF               	movwf	indf2,c
 11786                           
 11787                           ;muta_messages.c: 71: *value2 = 60;
 11788  008B9A  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11789  008B9E  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11790  008BA2  0E3C               	movlw	60
 11791  008BA4  6EDF               	movwf	indf2,c
 11792                           
 11793                           ;muta_messages.c: 72: break;
 11794  008BA6  0012               	return	
 11795  008BA8                     l19219:
 11796                           
 11797                           ;muta_messages.c: 74: *value1 = 0;
 11798  008BA8  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11799  008BAC  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11800  008BB0  0E00               	movlw	0
 11801  008BB2  6EDF               	movwf	indf2,c
 11802                           
 11803                           ;muta_messages.c: 75: *value2 = 30;
 11804  008BB4  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11805  008BB8  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11806  008BBC  0E1E               	movlw	30
 11807  008BBE  6EDF               	movwf	indf2,c
 11808                           
 11809                           ;muta_messages.c: 76: break;
 11810  008BC0  0012               	return	
 11811  008BC2                     l19221:
 11812                           
 11813                           ;muta_messages.c: 78: *value1 = 0;
 11814  008BC2  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11815  008BC6  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11816  008BCA  0E00               	movlw	0
 11817  008BCC  6EDF               	movwf	indf2,c
 11818                           
 11819                           ;muta_messages.c: 79: *value2 = 15;
 11820  008BCE  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11821  008BD2  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11822  008BD6  0E0F               	movlw	15
 11823  008BD8  6EDF               	movwf	indf2,c
 11824                           
 11825                           ;muta_messages.c: 80: break;
 11826  008BDA  0012               	return	
 11827  008BDC                     l19223:
 11828                           
 11829                           ;muta_messages.c: 82: *value1 = 0;
 11830  008BDC  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11831  008BE0  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11832  008BE4  0E00               	movlw	0
 11833  008BE6  6EDF               	movwf	indf2,c
 11834                           
 11835                           ;muta_messages.c: 83: *value2 = 0;
 11836  008BE8  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11837  008BEC  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11838  008BF0  0E00               	movlw	0
 11839  008BF2  6EDF               	movwf	indf2,c
 11840                           
 11841                           ;muta_messages.c: 85: }
 11842                           
 11843                           ;muta_messages.c: 84: break;
 11844  008BF4  0012               	return	
 11845  008BF6                     l19227:
 11846  008BF6  0101               	movlb	1	; () banked
 11847  008BF8  5104               	movf	dBm_to_mW_ufixed16@power& (0+255),w,b
 11848                           
 11849                           ; Switch size 1, requested type "space"
 11850                           ; Number of cases is 8, Range of values is 0 to 7
 11851                           ; switch strategies available:
 11852                           ; Name         Instructions Cycles
 11853                           ; simple_byte           25    13 (average)
 11854                           ;	Chosen strategy is simple_byte
 11855  008BFA  0A00               	xorlw	0	; case 0
 11856  008BFC  B4D8               	btfsc	status,2,c
 11857  008BFE  D786               	goto	l19207
 11858  008C00  0A01               	xorlw	1	; case 1
 11859  008C02  B4D8               	btfsc	status,2,c
 11860  008C04  D790               	goto	l19209
 11861  008C06  0A03               	xorlw	3	; case 2
 11862  008C08  B4D8               	btfsc	status,2,c
 11863  008C0A  D79A               	goto	l19211
 11864  008C0C  0A01               	xorlw	1	; case 3
 11865  008C0E  B4D8               	btfsc	status,2,c
 11866  008C10  D7A4               	goto	l19213
 11867  008C12  0A07               	xorlw	7	; case 4
 11868  008C14  B4D8               	btfsc	status,2,c
 11869  008C16  D7AE               	goto	l19215
 11870  008C18  0A01               	xorlw	1	; case 5
 11871  008C1A  B4D8               	btfsc	status,2,c
 11872  008C1C  D7B8               	goto	l19217
 11873  008C1E  0A03               	xorlw	3	; case 6
 11874  008C20  B4D8               	btfsc	status,2,c
 11875  008C22  D7C2               	goto	l19219
 11876  008C24  0A01               	xorlw	1	; case 7
 11877  008C26  B4D8               	btfsc	status,2,c
 11878  008C28  D7CC               	goto	l19221
 11879  008C2A  D7D8               	goto	l19223
 11880  008C2C                     __end_of_dBm_to_mW_ufixed16:
 11881                           	opt stack 0
 11882                           tblptru	equ	0xFF8
 11883                           tblptrh	equ	0xFF7
 11884                           tblptrl	equ	0xFF6
 11885                           tablat	equ	0xFF5
 11886                           prodh	equ	0xFF4
 11887                           prodl	equ	0xFF3
 11888                           postinc0	equ	0xFEE
 11889                           plusw0	equ	0xFEB
 11890                           wreg	equ	0xFE8
 11891                           postdec1	equ	0xFE5
 11892                           fsr1h	equ	0xFE2
 11893                           fsr1l	equ	0xFE1
 11894                           indf2	equ	0xFDF
 11895                           postinc2	equ	0xFDE
 11896                           postdec2	equ	0xFDD
 11897                           plusw2	equ	0xFDB
 11898                           fsr2h	equ	0xFDA
 11899                           fsr2l	equ	0xFD9
 11900                           status	equ	0xFD8
 11901                           
 11902 ;; *************** function _sendHIDText *****************
 11903 ;; Defined at:
 11904 ;;		line 707 in file "src/main.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;  str             2    7[BANK1 ] PTR unsigned char 
 11907 ;;		 -> ToSendDataBuffer(64), 
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  size            2   15[BANK1 ] int 
 11910 ;;  p               2   13[BANK1 ] PTR unsigned char 
 11911 ;;		 -> ToSendDataBuffer(64), 
 11912 ;;  c               1   10[BANK1 ] unsigned char 
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  1    wreg      unsigned char 
 11915 ;; Registers used:
 11916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11922 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11923 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11924 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11925 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11926 ;;Total ram usage:       10 bytes
 11927 ;; Hardware stack levels used:    1
 11928 ;; Hardware stack levels required when called:   17
 11929 ;; This function calls:
 11930 ;;		_USBTransferOnePacket
 11931 ;; This function is called by:
 11932 ;;		_main
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           	psect	text29
 11937  009EF6                     __ptext29:
 11938                           	opt stack 0
 11939  009EF6                     _sendHIDText:
 11940                           	opt stack 13
 11941                           
 11942                           ;main.c: 709: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11943                           
 11944                           ;incstack = 0
 11945  009EF6  0E1F               	movlw	31
 11946  009EF8  644B               	cpfsgt	_USBDeviceState,c	;volatile
 11947  009EFA  0012               	return	
 11948  009EFC  B265               	btfsc	3941,1,c	;volatile
 11949  009EFE  0012               	return	
 11950  009F00                     l20601:
 11951                           
 11952                           ;main.c: 714: {
 11953                           ;main.c: 715: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
 11954  009F00  0100               	movlb	0	; () banked
 11955  009F02  5193               	movf	_USBInHandle& (0+255),w,b
 11956  009F04  0100               	movlb	0	; () banked
 11957  009F06  1194               	iorwf	(_USBInHandle+1)& (0+255),w,b
 11958  009F08  B4D8               	btfsc	status,2,c
 11959  009F0A  D013               	goto	l20605
 11960                           
 11961                           ; BSR set to: 0
 11962  009F0C  C093  FFD9         	movff	_USBInHandle,fsr2l
 11963  009F10  C094  FFDA         	movff	_USBInHandle+1,fsr2h
 11964  009F14  0100               	movlb	0	; () banked
 11965  009F16  AEDF               	btfss	indf2,7,c
 11966  009F18  D004               	goto	u23450
 11967  009F1A  0101               	movlb	1	; () banked
 11968  009F1C  6B09               	clrf	??_sendHIDText& (0+255),b
 11969  009F1E  2B09               	incf	??_sendHIDText& (0+255),f,b
 11970  009F20  D002               	goto	u23458
 11971  009F22                     u23450:
 11972  009F22  0101               	movlb	1	; () banked
 11973  009F24  6B09               	clrf	??_sendHIDText& (0+255),b
 11974  009F26                     u23458:
 11975  009F26  0101               	movlb	1	; () banked
 11976  009F28  5109               	movf	??_sendHIDText& (0+255),w,b
 11977  009F2A  0101               	movlb	1	; () banked
 11978  009F2C  6F0B               	movwf	_sendHIDText$4978& (0+255),b
 11979  009F2E  6B0C               	clrf	(_sendHIDText$4978+1)& (0+255),b
 11980  009F30  D005               	goto	l20607
 11981  009F32                     l20605:
 11982  009F32  0E00               	movlw	0
 11983  009F34  0101               	movlb	1	; () banked
 11984  009F36  6F0C               	movwf	(_sendHIDText$4978+1)& (0+255),b
 11985  009F38  0E00               	movlw	0
 11986  009F3A  6F0B               	movwf	_sendHIDText$4978& (0+255),b
 11987  009F3C                     l20607:
 11988                           
 11989                           ; BSR set to: 1
 11990  009F3C  0101               	movlb	1	; () banked
 11991  009F3E  510B               	movf	_sendHIDText$4978& (0+255),w,b
 11992  009F40  0101               	movlb	1	; () banked
 11993  009F42  110C               	iorwf	(_sendHIDText$4978+1)& (0+255),w,b
 11994  009F44  A4D8               	btfss	status,2,c
 11995  009F46  D7DC               	goto	l20601
 11996                           
 11997                           ; BSR set to: 1
 11998                           ;main.c: 716: {
 11999                           ;main.c: 717: uint8_t* p = &ToSendDataBuffer[0];
 12000  009F48  0E84               	movlw	low _ToSendDataBuffer
 12001  009F4A  0101               	movlb	1	; () banked
 12002  009F4C  6F0D               	movwf	sendHIDText@p& (0+255),b
 12003  009F4E  0E03               	movlw	high _ToSendDataBuffer
 12004  009F50  0101               	movlb	1	; () banked
 12005  009F52  6F0E               	movwf	(sendHIDText@p+1)& (0+255),b
 12006                           
 12007                           ; BSR set to: 1
 12008                           ;main.c: 718: int size = 0;
 12009  009F54  0E00               	movlw	0
 12010  009F56  0101               	movlb	1	; () banked
 12011  009F58  6F10               	movwf	(sendHIDText@size+1)& (0+255),b
 12012  009F5A  0E00               	movlw	0
 12013  009F5C  6F0F               	movwf	sendHIDText@size& (0+255),b
 12014                           
 12015                           ;main.c: 719: uint8_t c;
 12016                           ;main.c: 720: while ( c = *str++ )
 12017  009F5E  D00C               	goto	l20619
 12018  009F60                     l20613:
 12019                           
 12020                           ; BSR set to: 1
 12021                           ;main.c: 721: {
 12022                           ;main.c: 722: *p = c;
 12023  009F60  C10D  FFD9         	movff	sendHIDText@p,fsr2l
 12024  009F64  C10E  FFDA         	movff	sendHIDText@p+1,fsr2h
 12025  009F68  C10A  FFDF         	movff	sendHIDText@c,indf2
 12026                           
 12027                           ; BSR set to: 1
 12028                           ;main.c: 723: p++;
 12029  009F6C  0101               	movlb	1	; () banked
 12030  009F6E  4B0D               	infsnz	sendHIDText@p& (0+255),f,b
 12031  009F70  2B0E               	incf	(sendHIDText@p+1)& (0+255),f,b
 12032                           
 12033                           ; BSR set to: 1
 12034                           ;main.c: 724: size++;
 12035  009F72  0101               	movlb	1	; () banked
 12036  009F74  4B0F               	infsnz	sendHIDText@size& (0+255),f,b
 12037  009F76  2B10               	incf	(sendHIDText@size+1)& (0+255),f,b
 12038  009F78                     l20619:
 12039                           
 12040                           ; BSR set to: 1
 12041  009F78  C107  FFD9         	movff	sendHIDText@str,fsr2l
 12042  009F7C  C108  FFDA         	movff	sendHIDText@str+1,fsr2h
 12043  009F80  0101               	movlb	1	; () banked
 12044  009F82  4B07               	infsnz	sendHIDText@str& (0+255),f,b
 12045  009F84  2B08               	incf	(sendHIDText@str+1)& (0+255),f,b
 12046  009F86  50DF               	movf	indf2,w,c
 12047  009F88  0101               	movlb	1	; () banked
 12048  009F8A  6F0A               	movwf	sendHIDText@c& (0+255),b
 12049  009F8C  0101               	movlb	1	; () banked
 12050  009F8E  510A               	movf	sendHIDText@c& (0+255),w,b
 12051  009F90  A4D8               	btfss	status,2,c
 12052  009F92  D7E6               	goto	l20613
 12053                           
 12054                           ; BSR set to: 1
 12055                           ;main.c: 725: }
 12056                           ;main.c: 726: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],size);
 12057                           
 12058                           ; BSR set to: 1
 12059  009F94  0E01               	movlw	1
 12060  009F96  0101               	movlb	1	; () banked
 12061  009F98  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
 12062  009F9A  0E84               	movlw	low _ToSendDataBuffer
 12063  009F9C  0101               	movlb	1	; () banked
 12064  009F9E  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
 12065  009FA0  0E03               	movlw	high _ToSendDataBuffer
 12066  009FA2  0101               	movlb	1	; () banked
 12067  009FA4  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12068  009FA6  C10F  F103         	movff	sendHIDText@size,USBTransferOnePacket@len
 12069  009FAA  0E01               	movlw	1
 12070  009FAC  ECA6  F04C         	call	_USBTransferOnePacket
 12071  009FB0  C100  F093         	movff	?_USBTransferOnePacket,_USBInHandle
 12072  009FB4  C101  F094         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 12073                           
 12074                           ;main.c: 727: return 1;
 12075                           ;	Return value of _sendHIDText is never used
 12076  009FB8  0012               	return	
 12077  009FBA                     __end_of_sendHIDText:
 12078                           	opt stack 0
 12079                           tblptru	equ	0xFF8
 12080                           tblptrh	equ	0xFF7
 12081                           tblptrl	equ	0xFF6
 12082                           tablat	equ	0xFF5
 12083                           prodh	equ	0xFF4
 12084                           prodl	equ	0xFF3
 12085                           postinc0	equ	0xFEE
 12086                           plusw0	equ	0xFEB
 12087                           wreg	equ	0xFE8
 12088                           postdec1	equ	0xFE5
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           indf2	equ	0xFDF
 12092                           postinc2	equ	0xFDE
 12093                           postdec2	equ	0xFDD
 12094                           plusw2	equ	0xFDB
 12095                           fsr2h	equ	0xFDA
 12096                           fsr2l	equ	0xFD9
 12097                           status	equ	0xFD8
 12098                           
 12099 ;; *************** function _USBTransferOnePacket *****************
 12100 ;; Defined at:
 12101 ;;		line 995 in file "src/usb/usb_device.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;  ep              1    wreg     unsigned char 
 12104 ;;  dir             1    0[BANK1 ] unsigned char 
 12105 ;;  data            2    1[BANK1 ] PTR unsigned char 
 12106 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 12107 ;;  len             1    3[BANK1 ] unsigned char 
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  ep              1    4[BANK1 ] unsigned char 
 12110 ;;  handle          2    5[BANK1 ] PTR volatile struct __BD
 12111 ;;		 -> BDT(32), NULL(0), 
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  2    0[BANK1 ] PTR void 
 12114 ;; Registers used:
 12115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12121 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12122 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12124 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12125 ;;Total ram usage:        7 bytes
 12126 ;; Hardware stack levels used:    1
 12127 ;; Hardware stack levels required when called:   16
 12128 ;; This function calls:
 12129 ;;		Nothing
 12130 ;; This function is called by:
 12131 ;;		_main
 12132 ;;		_sendHIDBinary
 12133 ;;		_sendHIDText
 12134 ;; This function uses a non-reentrant model
 12135 ;;
 12136                           
 12137                           	psect	text30
 12138  00994C                     __ptext30:
 12139                           	opt stack 0
 12140  00994C                     _USBTransferOnePacket:
 12141                           	opt stack 12
 12142                           
 12143                           ;incstack = 0
 12144                           ;USBTransferOnePacket@ep stored from wreg
 12145  00994C  0101               	movlb	1	; () banked
 12146  00994E  6F04               	movwf	USBTransferOnePacket@ep& (0+255),b
 12147                           
 12148                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12149                           ;usb_device.c: 1000: if(dir != 0)
 12150  009950  0101               	movlb	1	; () banked
 12151  009952  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12152  009954  0101               	movlb	1	; () banked
 12153  009956  B4D8               	btfsc	status,2,c
 12154  009958  D008               	goto	l18783
 12155                           
 12156                           ; BSR set to: 1
 12157                           ;usb_device.c: 1001: {
 12158                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12159  00995A  0101               	movlb	1	; () banked
 12160  00995C  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12161  00995E  0D02               	mullw	2
 12162  009960  0E8B               	movlw	low _pBDTEntryIn
 12163  009962  24F3               	addwf	prodl,w,c
 12164  009964  6ED9               	movwf	fsr2l,c
 12165  009966  0E00               	movlw	high _pBDTEntryIn
 12166  009968  D007               	goto	L1
 12167  00996A                     l18783:
 12168                           
 12169                           ; BSR set to: 1
 12170                           ;usb_device.c: 1005: else
 12171                           ;usb_device.c: 1006: {
 12172                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12173  00996A  0101               	movlb	1	; () banked
 12174  00996C  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12175  00996E  0D02               	mullw	2
 12176  009970  0E8F               	movlw	low _pBDTEntryOut
 12177  009972  24F3               	addwf	prodl,w,c
 12178  009974  6ED9               	movwf	fsr2l,c
 12179  009976  0E00               	movlw	high _pBDTEntryOut
 12180  009978                     L1:
 12181  009978  20F4               	addwfc	prodh,w,c
 12182  00997A  6EDA               	movwf	fsr2h,c
 12183  00997C  CFDE F105          	movff	postinc2,USBTransferOnePacket@handle
 12184  009980  CFDD F106          	movff	postdec2,USBTransferOnePacket@handle+1
 12185                           
 12186                           ; BSR set to: 1
 12187                           ;usb_device.c: 1009: }
 12188                           ;usb_device.c: 1013: if(handle == 0)
 12189                           
 12190                           ; BSR set to: 1
 12191  009984  0101               	movlb	1	; () banked
 12192  009986  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12193  009988  0101               	movlb	1	; () banked
 12194  00998A  1106               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12195  00998C  A4D8               	btfss	status,2,c
 12196  00998E  D007               	goto	l18791
 12197                           
 12198                           ; BSR set to: 1
 12199                           ;usb_device.c: 1014: {
 12200                           ;usb_device.c: 1015: return 0;
 12201  009990  0E00               	movlw	0
 12202  009992  0101               	movlb	1	; () banked
 12203  009994  6F00               	movwf	?_USBTransferOnePacket& (0+255),b
 12204  009996  0E00               	movlw	0
 12205  009998  0101               	movlb	1	; () banked
 12206  00999A  6F01               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12207                           
 12208                           ; BSR set to: 1
 12209  00999C  0012               	return	
 12210  00999E                     l18791:
 12211                           
 12212                           ; BSR set to: 1
 12213                           ;usb_device.c: 1016: }
 12214                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12215  00999E  0101               	movlb	1	; () banked
 12216  0099A0  EE20 F002          	lfsr	2,2
 12217  0099A4  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12218  0099A6  26D9               	addwf	fsr2l,f,c
 12219  0099A8  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12220  0099AA  22DA               	addwfc	fsr2h,f,c
 12221  0099AC  C101  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12222  0099B0  C102  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12223                           
 12224                           ;usb_device.c: 1030: handle->CNT = len;
 12225  0099B4  0101               	movlb	1	; () banked
 12226  0099B6  EE20 F001          	lfsr	2,1
 12227  0099BA  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12228  0099BC  26D9               	addwf	fsr2l,f,c
 12229  0099BE  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12230  0099C0  22DA               	addwfc	fsr2h,f,c
 12231  0099C2  C103  FFDF         	movff	USBTransferOnePacket@len,indf2
 12232                           
 12233                           ; BSR set to: 1
 12234                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12235  0099C6  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12236  0099CA  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12237  0099CE  0E40               	movlw	64
 12238  0099D0  16DF               	andwf	indf2,f,c
 12239                           
 12240                           ; BSR set to: 1
 12241                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12242  0099D2  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12243  0099D6  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12244  0099DA  0E00               	movlw	0
 12245  0099DC  86DB               	bsf	plusw2,3,c
 12246                           
 12247                           ; BSR set to: 1
 12248                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12249  0099DE  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12250  0099E2  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12251  0099E6  0E00               	movlw	0
 12252  0099E8  8EDB               	bsf	plusw2,7,c
 12253                           
 12254                           ; BSR set to: 1
 12255                           ;usb_device.c: 1036: if(dir != 0)
 12256  0099EA  0101               	movlb	1	; () banked
 12257  0099EC  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12258  0099EE  0101               	movlb	1	; () banked
 12259  0099F0  B4D8               	btfsc	status,2,c
 12260  0099F2  D008               	goto	l18803
 12261                           
 12262                           ; BSR set to: 1
 12263                           ;usb_device.c: 1037: {
 12264                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12265  0099F4  0101               	movlb	1	; () banked
 12266  0099F6  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12267  0099F8  0D02               	mullw	2
 12268  0099FA  0E8B               	movlw	low _pBDTEntryIn
 12269  0099FC  24F3               	addwf	prodl,w,c
 12270  0099FE  6ED9               	movwf	fsr2l,c
 12271  009A00  0E00               	movlw	high _pBDTEntryIn
 12272  009A02  D007               	goto	L2
 12273  009A04                     l18803:
 12274                           
 12275                           ; BSR set to: 1
 12276                           ;usb_device.c: 1041: else
 12277                           ;usb_device.c: 1042: {
 12278                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12279  009A04  0101               	movlb	1	; () banked
 12280  009A06  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12281  009A08  0D02               	mullw	2
 12282  009A0A  0E8F               	movlw	low _pBDTEntryOut
 12283  009A0C  24F3               	addwf	prodl,w,c
 12284  009A0E  6ED9               	movwf	fsr2l,c
 12285  009A10  0E00               	movlw	high _pBDTEntryOut
 12286  009A12                     L2:
 12287  009A12  20F4               	addwfc	prodh,w,c
 12288  009A14  6EDA               	movwf	fsr2h,c
 12289  009A16  0E04               	movlw	4
 12290  009A18  1ADF               	xorwf	indf2,f,c
 12291                           
 12292                           ; BSR set to: 1
 12293                           ;usb_device.c: 1045: }
 12294                           ;usb_device.c: 1046: return (void*)handle;
 12295                           
 12296                           ; BSR set to: 1
 12297  009A1A  C105  F100         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12298  009A1E  C106  F101         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12299  009A22  0012               	return	
 12300  009A24                     __end_of_USBTransferOnePacket:
 12301                           	opt stack 0
 12302                           tblptru	equ	0xFF8
 12303                           tblptrh	equ	0xFF7
 12304                           tblptrl	equ	0xFF6
 12305                           tablat	equ	0xFF5
 12306                           prodh	equ	0xFF4
 12307                           prodl	equ	0xFF3
 12308                           postinc0	equ	0xFEE
 12309                           plusw0	equ	0xFEB
 12310                           wreg	equ	0xFE8
 12311                           postdec1	equ	0xFE5
 12312                           fsr1h	equ	0xFE2
 12313                           fsr1l	equ	0xFE1
 12314                           indf2	equ	0xFDF
 12315                           postinc2	equ	0xFDE
 12316                           postdec2	equ	0xFDD
 12317                           plusw2	equ	0xFDB
 12318                           fsr2h	equ	0xFDA
 12319                           fsr2l	equ	0xFD9
 12320                           status	equ	0xFD8
 12321                           
 12322 ;; *************** function _decode_variable *****************
 12323 ;; Defined at:
 12324 ;;		line 195 in file "../../muta/muta_messages.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;  p_buffer        2   10[BANK1 ] PTR unsigned char 
 12327 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;  var            10   22[BANK1 ] struct .
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  10   10[BANK1 ] struct .
 12332 ;; Registers used:
 12333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12339 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12340 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12342 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12343 ;;Total ram usage:       22 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:   17
 12346 ;; This function calls:
 12347 ;;		_memcpy
 12348 ;; This function is called by:
 12349 ;;		_main
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	text31
 12354  0094A4                     __ptext31:
 12355                           	opt stack 0
 12356  0094A4                     _decode_variable:
 12357                           	opt stack 13
 12358                           
 12359                           ;muta_messages.c: 197: MUTA_VARIABLE var;
 12360                           ;muta_messages.c: 198: memcpy(var.label, p_buffer, 3);
 12361                           
 12362                           ; BSR set to: 1
 12363                           ;incstack = 0
 12364  0094A4  0E16               	movlw	low decode_variable@var
 12365  0094A6  0101               	movlb	1	; () banked
 12366  0094A8  6F00               	movwf	memcpy@d1& (0+255),b
 12367  0094AA  0E01               	movlw	high decode_variable@var
 12368  0094AC  0101               	movlb	1	; () banked
 12369  0094AE  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 12370  0094B0  C10A  F102         	movff	decode_variable@p_buffer,memcpy@s1
 12371  0094B4  C10B  F103         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 12372  0094B8  0E00               	movlw	0
 12373  0094BA  0101               	movlb	1	; () banked
 12374  0094BC  6F05               	movwf	(memcpy@n+1)& (0+255),b
 12375  0094BE  0E03               	movlw	3
 12376  0094C0  6F04               	movwf	memcpy@n& (0+255),b
 12377  0094C2  EC96  F059         	call	_memcpy	;wreg free
 12378                           
 12379                           ;muta_messages.c: 199: p_buffer += 3;
 12380  0094C6  0E03               	movlw	3
 12381  0094C8  0101               	movlb	1	; () banked
 12382  0094CA  270A               	addwf	decode_variable@p_buffer& (0+255),f,b
 12383  0094CC  0E00               	movlw	0
 12384  0094CE  230B               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 12385                           
 12386                           ; BSR set to: 1
 12387                           ;muta_messages.c: 201: var.unit = *p_buffer & 0b00001111;
 12388  0094D0  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12389  0094D4  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12390  0094D8  50DF               	movf	indf2,w,c
 12391  0094DA  0B0F               	andlw	15
 12392  0094DC  0101               	movlb	1	; () banked
 12393  0094DE  6F1C               	movwf	(decode_variable@var+6)& (0+255),b
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;muta_messages.c: 202: if (*p_buffer & 0b00010000)
 12397  0094E0  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12398  0094E4  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12399  0094E8  0101               	movlb	1	; () banked
 12400  0094EA  A8DF               	btfss	indf2,4,c
 12401  0094EC  D002               	goto	l21015
 12402                           
 12403                           ; BSR set to: 1
 12404                           ;muta_messages.c: 203: var.writable = 1;
 12405  0094EE  0E01               	movlw	1
 12406  0094F0  D001               	goto	L3
 12407  0094F2                     l21015:
 12408                           
 12409                           ; BSR set to: 1
 12410                           ;muta_messages.c: 204: else
 12411                           ;muta_messages.c: 205: var.writable = 0;
 12412  0094F2  0E00               	movlw	0
 12413  0094F4                     L3:
 12414  0094F4  0101               	movlb	1	; () banked
 12415  0094F6  6F1D               	movwf	(decode_variable@var+7)& (0+255),b
 12416                           
 12417                           ; BSR set to: 1
 12418                           ;muta_messages.c: 206: if (*p_buffer & 0b00100000)
 12419                           
 12420                           ; BSR set to: 1
 12421  0094F8  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12422  0094FC  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12423  009500  0101               	movlb	1	; () banked
 12424  009502  AADF               	btfss	indf2,5,c
 12425  009504  D002               	goto	l21021
 12426                           
 12427                           ; BSR set to: 1
 12428                           ;muta_messages.c: 207: var._signed = 1;
 12429  009506  0E01               	movlw	1
 12430  009508  D001               	goto	L4
 12431  00950A                     l21021:
 12432                           
 12433                           ; BSR set to: 1
 12434                           ;muta_messages.c: 208: else
 12435                           ;muta_messages.c: 209: var._signed = 0;
 12436  00950A  0E00               	movlw	0
 12437  00950C                     L4:
 12438  00950C  0101               	movlb	1	; () banked
 12439  00950E  6F1E               	movwf	(decode_variable@var+8)& (0+255),b
 12440                           
 12441                           ; BSR set to: 1
 12442                           ;muta_messages.c: 211: var.type = (*p_buffer++ & 0b11000000) >> 6;
 12443                           
 12444                           ; BSR set to: 1
 12445  009510  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12446  009514  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12447  009518  50DF               	movf	indf2,w,c
 12448  00951A  0101               	movlb	1	; () banked
 12449  00951C  6F14               	movwf	??_decode_variable& (0+255),b
 12450  00951E  0E06               	movlw	6
 12451  009520  0101               	movlb	1	; () banked
 12452  009522  6F15               	movwf	(??_decode_variable+1)& (0+255),b
 12453  009524                     u23845:
 12454  009524  0101               	movlb	1	; () banked
 12455  009526  90D8               	bcf	status,0,c
 12456  009528  3314               	rrcf	??_decode_variable& (0+255),f,b
 12457  00952A  0101               	movlb	1	; () banked
 12458  00952C  2F15               	decfsz	(??_decode_variable+1)& (0+255),f,b
 12459  00952E  D7FA               	goto	u23845
 12460  009530  0101               	movlb	1	; () banked
 12461  009532  5114               	movf	??_decode_variable& (0+255),w,b
 12462  009534  0B03               	andlw	3
 12463  009536  0101               	movlb	1	; () banked
 12464  009538  6F19               	movwf	(decode_variable@var+3)& (0+255),b
 12465                           
 12466                           ; BSR set to: 1
 12467  00953A  0101               	movlb	1	; () banked
 12468  00953C  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12469  00953E  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12470                           
 12471                           ; BSR set to: 1
 12472                           ;muta_messages.c: 212: var.value_byte1 = *p_buffer++;
 12473  009540  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12474  009544  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12475  009548  50DF               	movf	indf2,w,c
 12476  00954A  0101               	movlb	1	; () banked
 12477  00954C  6F1A               	movwf	(decode_variable@var+4)& (0+255),b
 12478                           
 12479                           ; BSR set to: 1
 12480  00954E  0101               	movlb	1	; () banked
 12481  009550  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12482  009552  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12483                           
 12484                           ;muta_messages.c: 213: if ((var.type == 1) || (var.type == 2))
 12485  009554  0101               	movlb	1	; () banked
 12486  009556  0519               	decf	(decode_variable@var+3)& (0+255),w,b
 12487  009558  B4D8               	btfsc	status,2,c
 12488  00955A  D005               	goto	l21033
 12489                           
 12490                           ; BSR set to: 1
 12491  00955C  0E02               	movlw	2
 12492  00955E  0101               	movlb	1	; () banked
 12493  009560  1919               	xorwf	(decode_variable@var+3)& (0+255),w,b
 12494  009562  A4D8               	btfss	status,2,c
 12495  009564  D00C               	goto	l21039
 12496  009566                     l21033:
 12497                           
 12498                           ; BSR set to: 1
 12499                           ;muta_messages.c: 214: {
 12500                           ;muta_messages.c: 215: var.value_byte2 = *p_buffer++;
 12501  009566  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12502  00956A  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12503  00956E  50DF               	movf	indf2,w,c
 12504  009570  0101               	movlb	1	; () banked
 12505  009572  6F1B               	movwf	(decode_variable@var+5)& (0+255),b
 12506                           
 12507                           ; BSR set to: 1
 12508  009574  0101               	movlb	1	; () banked
 12509  009576  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12510  009578  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12511                           
 12512                           ; BSR set to: 1
 12513                           ;muta_messages.c: 216: var.size = 6;
 12514  00957A  0E06               	movlw	6
 12515  00957C  D001               	goto	L5
 12516  00957E                     l21039:
 12517                           
 12518                           ; BSR set to: 1
 12519                           ;muta_messages.c: 218: else
 12520                           ;muta_messages.c: 219: var.size = 5;
 12521  00957E  0E05               	movlw	5
 12522  009580                     L5:
 12523  009580  0101               	movlb	1	; () banked
 12524  009582  6F1F               	movwf	(decode_variable@var+9)& (0+255),b
 12525                           
 12526                           ; BSR set to: 1
 12527                           ;muta_messages.c: 220: return var;
 12528                           
 12529                           ; BSR set to: 1
 12530  009584  EE21  F016         	lfsr	2,decode_variable@var
 12531  009588  EE01  F00A         	lfsr	0,?_decode_variable
 12532  00958C  0E09               	movlw	9
 12533  00958E                     u23871:
 12534  00958E  CFDB FFEB          	movff	plusw2,plusw0
 12535  009592  06E8               	decf	wreg,f,c
 12536  009594  E2FC               	bc	u23871
 12537  009596  0012               	return	
 12538  009598                     __end_of_decode_variable:
 12539                           	opt stack 0
 12540                           tblptru	equ	0xFF8
 12541                           tblptrh	equ	0xFF7
 12542                           tblptrl	equ	0xFF6
 12543                           tablat	equ	0xFF5
 12544                           prodh	equ	0xFF4
 12545                           prodl	equ	0xFF3
 12546                           postinc0	equ	0xFEE
 12547                           plusw0	equ	0xFEB
 12548                           wreg	equ	0xFE8
 12549                           postdec1	equ	0xFE5
 12550                           fsr1h	equ	0xFE2
 12551                           fsr1l	equ	0xFE1
 12552                           indf2	equ	0xFDF
 12553                           postinc2	equ	0xFDE
 12554                           postdec2	equ	0xFDD
 12555                           plusw2	equ	0xFDB
 12556                           fsr2h	equ	0xFDA
 12557                           fsr2l	equ	0xFD9
 12558                           status	equ	0xFD8
 12559                           
 12560 ;; *************** function _memcpy *****************
 12561 ;; Defined at:
 12562 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;  d1              2    0[BANK1 ] PTR void 
 12565 ;;		 -> decode_variable@var(10), m_var(10), m_buffer(32), ReceivedDataBuffer(64), 
 12566 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 12567 ;;  s1              2    2[BANK1 ] PTR const void 
 12568 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 12569 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 12570 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 12571 ;;  n               2    4[BANK1 ] unsigned int 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  s               2    8[BANK1 ] PTR const unsigned char 
 12574 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 12575 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 12576 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 12577 ;;  d               2    6[BANK1 ] PTR unsigned char 
 12578 ;;		 -> decode_variable@var(10), m_var(10), m_buffer(32), ReceivedDataBuffer(64), 
 12579 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  2    0[BANK1 ] PTR void 
 12582 ;; Registers used:
 12583 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12589 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12590 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12592 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12593 ;;Total ram usage:       10 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:   16
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_main
 12600 ;;		_send_network_register
 12601 ;;		_send_complete_update
 12602 ;;		_send_answer_to_update
 12603 ;;		_send_periodic_update
 12604 ;;		_sendHIDBinary
 12605 ;;		_decode_variable
 12606 ;;		_do_NETWORK_REGISTER
 12607 ;;		_do_PING
 12608 ;;		_do_UPDATE
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text32
 12613  00B32C                     __ptext32:
 12614                           	opt stack 0
 12615  00B32C                     _memcpy:
 12616                           	opt stack 12
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;incstack = 0
 12620  00B32C  C102  F108         	movff	memcpy@s1,memcpy@s
 12621  00B330  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
 12622  00B334  C100  F106         	movff	memcpy@d1,memcpy@d
 12623  00B338  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
 12624  00B33C  D01C               	goto	l18817
 12625  00B33E                     l18811:
 12626  00B33E  C108  FFF6         	movff	memcpy@s,tblptrl
 12627  00B342  C109  FFF7         	movff	memcpy@s+1,tblptrh
 12628  00B346  0E00               	movlw	low (__mediumconst shr (0+16))
 12629  00B348  6EF8               	movwf	tblptru,c
 12630  00B34A  C106  FFD9         	movff	memcpy@d,fsr2l
 12631  00B34E  C107  FFDA         	movff	memcpy@d+1,fsr2h
 12632  00B352  0E0E               	movlw	(high __ramtop+-1)
 12633  00B354  64F7               	cpfsgt	tblptrh,c
 12634  00B356  D003               	bra	u21257
 12635  00B358  0008               	tblrd		*
 12636  00B35A  50F5               	movf	tablat,w,c
 12637  00B35C  D005               	bra	u21250
 12638  00B35E                     u21257:
 12639  00B35E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12640  00B362  CFF7 FFEA          	movff	tblptrh,fsr0h
 12641  00B366  50EF               	movf	indf0,w,c
 12642  00B368                     u21250:
 12643  00B368  6EDF               	movwf	indf2,c
 12644  00B36A  0101               	movlb	1	; () banked
 12645  00B36C  4B08               	infsnz	memcpy@s& (0+255),f,b
 12646  00B36E  2B09               	incf	(memcpy@s+1)& (0+255),f,b
 12647                           
 12648                           ; BSR set to: 1
 12649  00B370  0101               	movlb	1	; () banked
 12650  00B372  4B06               	infsnz	memcpy@d& (0+255),f,b
 12651  00B374  2B07               	incf	(memcpy@d+1)& (0+255),f,b
 12652  00B376                     l18817:
 12653  00B376  0101               	movlb	1	; () banked
 12654  00B378  0704               	decf	memcpy@n& (0+255),f,b
 12655  00B37A  A0D8               	btfss	status,0,c
 12656  00B37C  0705               	decf	(memcpy@n+1)& (0+255),f,b
 12657  00B37E  0101               	movlb	1	; () banked
 12658  00B380  2904               	incf	memcpy@n& (0+255),w,b
 12659  00B382  E1DD               	bnz	l18811
 12660  00B384  0101               	movlb	1	; () banked
 12661  00B386  2905               	incf	(memcpy@n+1)& (0+255),w,b
 12662  00B388  B4D8               	btfsc	status,2,c
 12663  00B38A  0012               	return	
 12664  00B38C  D7D8               	goto	l18811
 12665  00B38E                     __end_of_memcpy:
 12666                           	opt stack 0
 12667                           tblptru	equ	0xFF8
 12668                           tblptrh	equ	0xFF7
 12669                           tblptrl	equ	0xFF6
 12670                           tablat	equ	0xFF5
 12671                           prodh	equ	0xFF4
 12672                           prodl	equ	0xFF3
 12673                           indf0	equ	0xFEF
 12674                           postinc0	equ	0xFEE
 12675                           plusw0	equ	0xFEB
 12676                           fsr0h	equ	0xFEA
 12677                           fsr0l	equ	0xFE9
 12678                           wreg	equ	0xFE8
 12679                           postdec1	equ	0xFE5
 12680                           fsr1h	equ	0xFE2
 12681                           fsr1l	equ	0xFE1
 12682                           indf2	equ	0xFDF
 12683                           postinc2	equ	0xFDE
 12684                           postdec2	equ	0xFDD
 12685                           plusw2	equ	0xFDB
 12686                           fsr2h	equ	0xFDA
 12687                           fsr2l	equ	0xFD9
 12688                           status	equ	0xFD8
 12689                           
 12690 ;; *************** function _dBm_to_mW *****************
 12691 ;; Defined at:
 12692 ;;		line 89 in file "../../muta/muta_messages.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;  power           1    wreg     unsigned char 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;  power           1    2[BANK1 ] unsigned char 
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  2    0[BANK1 ] PTR const unsigned char 
 12699 ;; Registers used:
 12700 ;;		wreg, status,2, status,0
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/0
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12706 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12710 ;;Total ram usage:        3 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:   16
 12713 ;; This function calls:
 12714 ;;		Nothing
 12715 ;; This function is called by:
 12716 ;;		_main
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720                           	psect	text33
 12721  00A2BA                     __ptext33:
 12722                           	opt stack 0
 12723  00A2BA                     _dBm_to_mW:
 12724                           	opt stack 14
 12725                           
 12726                           ; BSR set to: 1
 12727                           ;incstack = 0
 12728                           ;dBm_to_mW@power stored from wreg
 12729  00A2BA  0101               	movlb	1	; () banked
 12730  00A2BC  6F02               	movwf	dBm_to_mW@power& (0+255),b
 12731                           
 12732                           ;muta_messages.c: 91: switch(power)
 12733  00A2BE  D03F               	goto	l21003
 12734  00A2C0                     l20965:
 12735                           
 12736                           ;muta_messages.c: 94: return TX_POWER_13_DB_MW;
 12737  00A2C0  0EB4               	movlw	low _TX_POWER_13_DB_MW
 12738  00A2C2  0101               	movlb	1	; () banked
 12739  00A2C4  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12740  00A2C6  0E21               	movlw	high _TX_POWER_13_DB_MW
 12741  00A2C8  0101               	movlb	1	; () banked
 12742  00A2CA  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12743                           
 12744                           ; BSR set to: 1
 12745  00A2CC  0012               	return	
 12746  00A2CE                     l20969:
 12747                           
 12748                           ; BSR set to: 1
 12749                           ;muta_messages.c: 96: return TX_POWER_10_DB_MW;
 12750  00A2CE  0EAF               	movlw	low _TX_POWER_10_DB_MW
 12751  00A2D0  0101               	movlb	1	; () banked
 12752  00A2D2  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12753  00A2D4  0E21               	movlw	high _TX_POWER_10_DB_MW
 12754  00A2D6  0101               	movlb	1	; () banked
 12755  00A2D8  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12756                           
 12757                           ; BSR set to: 1
 12758  00A2DA  0012               	return	
 12759  00A2DC                     l20973:
 12760                           
 12761                           ; BSR set to: 1
 12762                           ;muta_messages.c: 98: return TX_POWER_7_DB_MW;
 12763  00A2DC  0EC5               	movlw	low _TX_POWER_7_DB_MW
 12764  00A2DE  0101               	movlb	1	; () banked
 12765  00A2E0  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12766  00A2E2  0E21               	movlw	high _TX_POWER_7_DB_MW
 12767  00A2E4  0101               	movlb	1	; () banked
 12768  00A2E6  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12769                           
 12770                           ; BSR set to: 1
 12771  00A2E8  0012               	return	
 12772  00A2EA                     l20977:
 12773                           
 12774                           ; BSR set to: 1
 12775                           ;muta_messages.c: 100: return TX_POWER_4_DB_MW;
 12776  00A2EA  0E97               	movlw	low _TX_POWER_4_DB_MW
 12777  00A2EC  0101               	movlb	1	; () banked
 12778  00A2EE  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12779  00A2F0  0E21               	movlw	high _TX_POWER_4_DB_MW
 12780  00A2F2  0101               	movlb	1	; () banked
 12781  00A2F4  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12782                           
 12783                           ; BSR set to: 1
 12784  00A2F6  0012               	return	
 12785  00A2F8                     l20981:
 12786                           
 12787                           ; BSR set to: 1
 12788                           ;muta_messages.c: 102: return TX_POWER_1_DB_MW;
 12789  00A2F8  0E89               	movlw	low _TX_POWER_1_DB_MW
 12790  00A2FA  0101               	movlb	1	; () banked
 12791  00A2FC  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12792  00A2FE  0E21               	movlw	high _TX_POWER_1_DB_MW
 12793  00A300  0101               	movlb	1	; () banked
 12794  00A302  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12795                           
 12796                           ; BSR set to: 1
 12797  00A304  0012               	return	
 12798  00A306                     l20985:
 12799                           
 12800                           ; BSR set to: 1
 12801                           ;muta_messages.c: 104: return TX_POWER_N_2_DB_MW;
 12802  00A306  0EA3               	movlw	low _TX_POWER_N_2_DB_MW
 12803  00A308  0101               	movlb	1	; () banked
 12804  00A30A  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12805  00A30C  0E21               	movlw	high _TX_POWER_N_2_DB_MW
 12806  00A30E  0101               	movlb	1	; () banked
 12807  00A310  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12808                           
 12809                           ; BSR set to: 1
 12810  00A312  0012               	return	
 12811  00A314                     l20989:
 12812                           
 12813                           ; BSR set to: 1
 12814                           ;muta_messages.c: 106: return TX_POWER_N_5_DB_MW;
 12815  00A314  0EA9               	movlw	low _TX_POWER_N_5_DB_MW
 12816  00A316  0101               	movlb	1	; () banked
 12817  00A318  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12818  00A31A  0E21               	movlw	high _TX_POWER_N_5_DB_MW
 12819  00A31C  0101               	movlb	1	; () banked
 12820  00A31E  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12821                           
 12822                           ; BSR set to: 1
 12823  00A320  0012               	return	
 12824  00A322                     l20993:
 12825                           
 12826                           ; BSR set to: 1
 12827                           ;muta_messages.c: 108: return TX_POWER_N_8_DB_MW;
 12828  00A322  0E90               	movlw	low _TX_POWER_N_8_DB_MW
 12829  00A324  0101               	movlb	1	; () banked
 12830  00A326  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12831  00A328  0E21               	movlw	high _TX_POWER_N_8_DB_MW
 12832  00A32A  0101               	movlb	1	; () banked
 12833  00A32C  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12834                           
 12835                           ; BSR set to: 1
 12836  00A32E  0012               	return	
 12837  00A330                     l20997:
 12838                           
 12839                           ; BSR set to: 1
 12840                           ;muta_messages.c: 110: return TX_POWER_INVALID;
 12841  00A330  0E9D               	movlw	low _TX_POWER_INVALID
 12842  00A332  0101               	movlb	1	; () banked
 12843  00A334  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12844  00A336  0E21               	movlw	high _TX_POWER_INVALID
 12845  00A338  0101               	movlb	1	; () banked
 12846  00A33A  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;muta_messages.c: 111: }
 12850                           
 12851                           ; BSR set to: 1
 12852  00A33C  0012               	return	
 12853  00A33E                     l21003:
 12854  00A33E  0101               	movlb	1	; () banked
 12855  00A340  5102               	movf	dBm_to_mW@power& (0+255),w,b
 12856                           
 12857                           ; Switch size 1, requested type "space"
 12858                           ; Number of cases is 8, Range of values is 0 to 7
 12859                           ; switch strategies available:
 12860                           ; Name         Instructions Cycles
 12861                           ; simple_byte           25    13 (average)
 12862                           ;	Chosen strategy is simple_byte
 12863  00A342  0A00               	xorlw	0	; case 0
 12864  00A344  B4D8               	btfsc	status,2,c
 12865  00A346  D7BC               	goto	l20965
 12866  00A348  0A01               	xorlw	1	; case 1
 12867  00A34A  B4D8               	btfsc	status,2,c
 12868  00A34C  D7C0               	goto	l20969
 12869  00A34E  0A03               	xorlw	3	; case 2
 12870  00A350  B4D8               	btfsc	status,2,c
 12871  00A352  D7C4               	goto	l20973
 12872  00A354  0A01               	xorlw	1	; case 3
 12873  00A356  B4D8               	btfsc	status,2,c
 12874  00A358  D7C8               	goto	l20977
 12875  00A35A  0A07               	xorlw	7	; case 4
 12876  00A35C  B4D8               	btfsc	status,2,c
 12877  00A35E  D7CC               	goto	l20981
 12878  00A360  0A01               	xorlw	1	; case 5
 12879  00A362  B4D8               	btfsc	status,2,c
 12880  00A364  D7D0               	goto	l20985
 12881  00A366  0A03               	xorlw	3	; case 6
 12882  00A368  B4D8               	btfsc	status,2,c
 12883  00A36A  D7D4               	goto	l20989
 12884  00A36C  0A01               	xorlw	1	; case 7
 12885  00A36E  B4D8               	btfsc	status,2,c
 12886  00A370  D7D8               	goto	l20993
 12887  00A372  D7DE               	goto	l20997
 12888  00A374                     __end_of_dBm_to_mW:
 12889                           	opt stack 0
 12890                           tblptru	equ	0xFF8
 12891                           tblptrh	equ	0xFF7
 12892                           tblptrl	equ	0xFF6
 12893                           tablat	equ	0xFF5
 12894                           prodh	equ	0xFF4
 12895                           prodl	equ	0xFF3
 12896                           indf0	equ	0xFEF
 12897                           postinc0	equ	0xFEE
 12898                           plusw0	equ	0xFEB
 12899                           fsr0h	equ	0xFEA
 12900                           fsr0l	equ	0xFE9
 12901                           wreg	equ	0xFE8
 12902                           postdec1	equ	0xFE5
 12903                           fsr1h	equ	0xFE2
 12904                           fsr1l	equ	0xFE1
 12905                           indf2	equ	0xFDF
 12906                           postinc2	equ	0xFDE
 12907                           postdec2	equ	0xFDD
 12908                           plusw2	equ	0xFDB
 12909                           fsr2h	equ	0xFDA
 12910                           fsr2l	equ	0xFD9
 12911                           status	equ	0xFD8
 12912                           
 12913 ;; *************** function _USBDeviceInit *****************
 12914 ;; Defined at:
 12915 ;;		line 298 in file "src/usb/usb_device.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;		None
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;  i               1    8[BANK1 ] unsigned char 
 12920 ;; Return value:  Size  Location     Type
 12921 ;;		None               void
 12922 ;; Registers used:
 12923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12932 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12933 ;;Total ram usage:        1 bytes
 12934 ;; Hardware stack levels used:    1
 12935 ;; Hardware stack levels required when called:   17
 12936 ;; This function calls:
 12937 ;;		_memset
 12938 ;; This function is called by:
 12939 ;;		_main
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           	psect	text34
 12944  007BB6                     __ptext34:
 12945                           	opt stack 0
 12946  007BB6                     _USBDeviceInit:
 12947                           	opt stack 13
 12948                           
 12949                           ;usb_device.c: 300: uint8_t i;
 12950                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 12951                           
 12952                           ; BSR set to: 1
 12953                           ;incstack = 0
 12954  007BB6  98A0               	bcf	4000,4,c	;volatile
 12955                           
 12956                           ;usb_device.c: 305: {UEIR = 0;};
 12957  007BB8  0E00               	movlw	0
 12958  007BBA  6E63               	movwf	3939,c	;volatile
 12959                           
 12960                           ;usb_device.c: 308: {UIR = 0;};
 12961  007BBC  0E00               	movlw	0
 12962  007BBE  6E62               	movwf	3938,c	;volatile
 12963                           
 12964                           ;usb_device.c: 311: UEP0 = 0;
 12965  007BC0  0E00               	movlw	0
 12966  007BC2  010F               	movlb	15	; () banked
 12967  007BC4  6F26               	movwf	38,b	;volatile
 12968                           
 12969                           ; BSR set to: 15
 12970                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 12971  007BC6  0E27               	movlw	39
 12972  007BC8  0101               	movlb	1	; () banked
 12973  007BCA  6F00               	movwf	memset@p1& (0+255),b
 12974  007BCC  0E0F               	movlw	15
 12975  007BCE  0101               	movlb	1	; () banked
 12976  007BD0  6F01               	movwf	(memset@p1+1)& (0+255),b
 12977  007BD2  0E00               	movlw	0
 12978  007BD4  0101               	movlb	1	; () banked
 12979  007BD6  6F03               	movwf	(memset@c+1)& (0+255),b
 12980  007BD8  0E00               	movlw	0
 12981  007BDA  6F02               	movwf	memset@c& (0+255),b
 12982  007BDC  0E00               	movlw	0
 12983  007BDE  0101               	movlb	1	; () banked
 12984  007BE0  6F05               	movwf	(memset@n+1)& (0+255),b
 12985  007BE2  0E01               	movlw	1
 12986  007BE4  6F04               	movwf	memset@n& (0+255),b
 12987  007BE6  ECBB  F05C         	call	_memset	;wreg free
 12988                           
 12989                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12990  007BEA  0E16               	movlw	22
 12991  007BEC  010F               	movlb	15	; () banked
 12992  007BEE  6F39               	movwf	57,b	;volatile
 12993                           
 12994                           ; BSR set to: 15
 12995  007BF0  0E9F               	movlw	159
 12996  007BF2  010F               	movlb	15	; () banked
 12997  007BF4  6F37               	movwf	55,b	;volatile
 12998                           
 12999                           ; BSR set to: 15
 13000  007BF6  0E7B               	movlw	123
 13001  007BF8  010F               	movlb	15	; () banked
 13002  007BFA  6F36               	movwf	54,b	;volatile
 13003                           
 13004                           ; BSR set to: 15
 13005                           ;usb_device.c: 318: ;
 13006                           ;usb_device.c: 321: ;
 13007                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13008  007BFC  0E00               	movlw	0
 13009  007BFE  0101               	movlb	1	; () banked
 13010  007C00  6F08               	movwf	USBDeviceInit@i& (0+255),b
 13011  007C02                     l20521:
 13012                           
 13013                           ; BSR set to: 1
 13014  007C02  0E07               	movlw	7
 13015  007C04  0101               	movlb	1	; () banked
 13016  007C06  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 13017  007C08  D001               	goto	l20525
 13018  007C0A  D010               	goto	l1222
 13019  007C0C                     l20525:
 13020                           
 13021                           ; BSR set to: 1
 13022                           ;usb_device.c: 325: {
 13023                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 13024  007C0C  0101               	movlb	1	; () banked
 13025  007C0E  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13026  007C10  0D04               	mullw	4
 13027  007C12  0E00               	movlw	0
 13028  007C14  24F3               	addwf	prodl,w,c
 13029  007C16  6ED9               	movwf	fsr2l,c
 13030  007C18  0E0D               	movlw	13
 13031  007C1A  20F4               	addwfc	prodh,w,c
 13032  007C1C  6EDA               	movwf	fsr2h,c
 13033  007C1E  6ADE               	clrf	postinc2,c
 13034  007C20  6ADE               	clrf	postinc2,c
 13035  007C22  6ADE               	clrf	postinc2,c
 13036  007C24  6ADD               	clrf	postdec2,c
 13037                           
 13038                           ; BSR set to: 1
 13039  007C26  0101               	movlb	1	; () banked
 13040  007C28  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 13041  007C2A  D7EB               	goto	l20521
 13042  007C2C                     l1222:
 13043                           
 13044                           ; BSR set to: 1
 13045                           ;usb_device.c: 327: }
 13046                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 13047  007C2C  8C65               	bsf	3941,6,c	;volatile
 13048                           
 13049                           ; BSR set to: 1
 13050                           ;usb_device.c: 333: UADDR = 0x00;
 13051  007C2E  0E00               	movlw	0
 13052  007C30  010F               	movlb	15	; () banked
 13053  007C32  6F38               	movwf	56,b	;volatile
 13054                           
 13055                           ; BSR set to: 15
 13056                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 13057  007C34  9865               	bcf	3941,4,c	;volatile
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 13061  007C36  9C65               	bcf	3941,6,c	;volatile
 13062                           
 13063                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 13064  007C38  D00C               	goto	l20545
 13065  007C3A                     l20537:
 13066                           
 13067                           ;usb_device.c: 343: {
 13068                           ;usb_device.c: 344: (UIR &= 0xF7);
 13069  007C3A  9662               	bcf	3938,3,c	;volatile
 13070                           
 13071                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 13072  007C3C  0E00               	movlw	0
 13073  007C3E  0100               	movlb	0	; () banked
 13074  007C40  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 13078  007C42  0E00               	movlw	0
 13079  007C44  0100               	movlb	0	; () banked
 13080  007C46  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 13084  007C48  0E00               	movlw	0
 13085  007C4A  0100               	movlb	0	; () banked
 13086  007C4C  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 13087  007C4E  0E00               	movlw	0
 13088  007C50  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 13089  007C52                     l20545:
 13090  007C52  B662               	btfsc	3938,3,c	;volatile
 13091  007C54  D7F2               	goto	l20537
 13092                           
 13093                           ;usb_device.c: 349: }
 13094                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 13095  007C56  0E01               	movlw	1
 13096  007C58  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13097                           
 13098                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 13099  007C5A  0E01               	movlw	1
 13100  007C5C  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13101                           
 13102                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 13103  007C5E  0E00               	movlw	0
 13104  007C60  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13105                           
 13106                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 13107  007C62  0E00               	movlw	0
 13108  007C64  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13109                           
 13110                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 13111  007C66  0E00               	movlw	0
 13112  007C68  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 13113                           
 13114                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 13115  007C6A  0E00               	movlw	0
 13116  007C6C  0101               	movlb	1	; () banked
 13117  007C6E  6F08               	movwf	USBDeviceInit@i& (0+255),b
 13118  007C70                     l20549:
 13119                           
 13120                           ; BSR set to: 1
 13121  007C70  0E01               	movlw	1
 13122  007C72  0101               	movlb	1	; () banked
 13123  007C74  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 13124  007C76  D001               	goto	l20553
 13125  007C78  D033               	goto	l20559
 13126  007C7A                     l20553:
 13127                           
 13128                           ; BSR set to: 1
 13129                           ;usb_device.c: 363: {
 13130                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 13131  007C7A  0101               	movlb	1	; () banked
 13132  007C7C  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13133  007C7E  0D02               	mullw	2
 13134  007C80  0E8B               	movlw	low _pBDTEntryIn
 13135  007C82  24F3               	addwf	prodl,w,c
 13136  007C84  6ED9               	movwf	fsr2l,c
 13137  007C86  0E00               	movlw	high _pBDTEntryIn
 13138  007C88  20F4               	addwfc	prodh,w,c
 13139  007C8A  6EDA               	movwf	fsr2h,c
 13140  007C8C  0E00               	movlw	0
 13141  007C8E  6EDE               	movwf	postinc2,c
 13142  007C90  0E00               	movlw	0
 13143  007C92  6EDD               	movwf	postdec2,c
 13144                           
 13145                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 13146  007C94  0101               	movlb	1	; () banked
 13147  007C96  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13148  007C98  0D02               	mullw	2
 13149  007C9A  0E8F               	movlw	low _pBDTEntryOut
 13150  007C9C  24F3               	addwf	prodl,w,c
 13151  007C9E  6ED9               	movwf	fsr2l,c
 13152  007CA0  0E00               	movlw	high _pBDTEntryOut
 13153  007CA2  20F4               	addwfc	prodh,w,c
 13154  007CA4  6EDA               	movwf	fsr2h,c
 13155  007CA6  0E00               	movlw	0
 13156  007CA8  6EDE               	movwf	postinc2,c
 13157  007CAA  0E00               	movlw	0
 13158  007CAC  6EDD               	movwf	postdec2,c
 13159                           
 13160                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 13161  007CAE  0101               	movlb	1	; () banked
 13162  007CB0  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13163  007CB2  0D01               	mullw	1
 13164  007CB4  0E95               	movlw	low _ep_data_in
 13165  007CB6  24F3               	addwf	prodl,w,c
 13166  007CB8  6ED9               	movwf	fsr2l,c
 13167  007CBA  0E00               	movlw	high _ep_data_in
 13168  007CBC  20F4               	addwfc	prodh,w,c
 13169  007CBE  6EDA               	movwf	fsr2h,c
 13170  007CC0  0E00               	movlw	0
 13171  007CC2  6EDF               	movwf	indf2,c
 13172                           
 13173                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 13174  007CC4  0101               	movlb	1	; () banked
 13175  007CC6  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13176  007CC8  0D01               	mullw	1
 13177  007CCA  0E97               	movlw	low _ep_data_out
 13178  007CCC  24F3               	addwf	prodl,w,c
 13179  007CCE  6ED9               	movwf	fsr2l,c
 13180  007CD0  0E00               	movlw	high _ep_data_out
 13181  007CD2  20F4               	addwfc	prodh,w,c
 13182  007CD4  6EDA               	movwf	fsr2h,c
 13183  007CD6  0E00               	movlw	0
 13184  007CD8  6EDF               	movwf	indf2,c
 13185                           
 13186                           ; BSR set to: 1
 13187  007CDA  0101               	movlb	1	; () banked
 13188  007CDC  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 13189  007CDE  D7C8               	goto	l20549
 13190  007CE0                     l20559:
 13191                           
 13192                           ; BSR set to: 1
 13193                           ;usb_device.c: 368: }
 13194                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13195  007CE0  0E08               	movlw	8
 13196  007CE2  0100               	movlb	0	; () banked
 13197  007CE4  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 13198  007CE6  0E0D               	movlw	13
 13199  007CE8  0100               	movlb	0	; () banked
 13200  007CEA  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 13204  007CEC  0E16               	movlw	22
 13205  007CEE  010F               	movlb	15	; () banked
 13206  007CF0  6F26               	movwf	38,b	;volatile
 13207                           
 13208                           ; BSR set to: 15
 13209                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13210  007CF2  0E0D               	movlw	13
 13211  007CF4  010D               	movlb	13	; () banked
 13212  007CF6  6F03               	movwf	3,b	;volatile
 13213  007CF8  0E20               	movlw	32
 13214  007CFA  6F02               	movwf	2,b	;volatile
 13215                           
 13216                           ; BSR set to: 13
 13217                           ;usb_device.c: 376: BDT[0].CNT = 8;
 13218  007CFC  0E08               	movlw	8
 13219  007CFE  010D               	movlb	13	; () banked
 13220  007D00  6F01               	movwf	1,b	;volatile
 13221                           
 13222                           ; BSR set to: 13
 13223                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 13224  007D02  0E04               	movlw	4
 13225  007D04  010D               	movlb	13	; () banked
 13226  007D06  6F00               	movwf	0,b	;volatile
 13227                           
 13228                           ; BSR set to: 13
 13229                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 13230  007D08  010D               	movlb	13	; () banked
 13231  007D0A  8F00               	bsf	0,7,b	;volatile
 13232                           
 13233                           ; BSR set to: 13
 13234                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 13235  007D0C  0E00               	movlw	0
 13236  007D0E  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 13237                           
 13238                           ; BSR set to: 13
 13239                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 13240  007D10  0E00               	movlw	0
 13241  007D12  6E4B               	movwf	_USBDeviceState,c	;volatile
 13242                           
 13243                           ; BSR set to: 13
 13244  007D14  0012               	return		;funcret
 13245  007D16                     __end_of_USBDeviceInit:
 13246                           	opt stack 0
 13247                           tblptru	equ	0xFF8
 13248                           tblptrh	equ	0xFF7
 13249                           tblptrl	equ	0xFF6
 13250                           tablat	equ	0xFF5
 13251                           prodh	equ	0xFF4
 13252                           prodl	equ	0xFF3
 13253                           indf0	equ	0xFEF
 13254                           postinc0	equ	0xFEE
 13255                           plusw0	equ	0xFEB
 13256                           fsr0h	equ	0xFEA
 13257                           fsr0l	equ	0xFE9
 13258                           wreg	equ	0xFE8
 13259                           postdec1	equ	0xFE5
 13260                           fsr1h	equ	0xFE2
 13261                           fsr1l	equ	0xFE1
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           postdec2	equ	0xFDD
 13265                           plusw2	equ	0xFDB
 13266                           fsr2h	equ	0xFDA
 13267                           fsr2l	equ	0xFD9
 13268                           status	equ	0xFD8
 13269                           
 13270 ;; *************** function _memset *****************
 13271 ;; Defined at:
 13272 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 13273 ;; Parameters:    Size  Location     Type
 13274 ;;  p1              2    0[BANK1 ] PTR void 
 13275 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 13276 ;;  c               2    2[BANK1 ] int 
 13277 ;;  n               2    4[BANK1 ] unsigned int 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  p               2    6[BANK1 ] PTR unsigned char 
 13280 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  2    0[BANK1 ] PTR void 
 13283 ;; Registers used:
 13284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13290 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13291 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13293 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13294 ;;Total ram usage:        8 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:   16
 13297 ;; This function calls:
 13298 ;;		Nothing
 13299 ;; This function is called by:
 13300 ;;		_USBDeviceInit
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           	psect	text35
 13305  00B976                     __ptext35:
 13306                           	opt stack 0
 13307  00B976                     _memset:
 13308                           	opt stack 13
 13309                           
 13310                           ; BSR set to: 13
 13311                           ;incstack = 0
 13312  00B976  C100  F106         	movff	memset@p1,memset@p
 13313  00B97A  C101  F107         	movff	memset@p1+1,memset@p+1
 13314  00B97E  D009               	goto	l19185
 13315  00B980                     l19181:
 13316  00B980  C106  FFD9         	movff	memset@p,fsr2l
 13317  00B984  C107  FFDA         	movff	memset@p+1,fsr2h
 13318  00B988  C102  FFDF         	movff	memset@c,indf2
 13319  00B98C  0101               	movlb	1	; () banked
 13320  00B98E  4B06               	infsnz	memset@p& (0+255),f,b
 13321  00B990  2B07               	incf	(memset@p+1)& (0+255),f,b
 13322  00B992                     l19185:
 13323  00B992  0101               	movlb	1	; () banked
 13324  00B994  0704               	decf	memset@n& (0+255),f,b
 13325  00B996  A0D8               	btfss	status,0,c
 13326  00B998  0705               	decf	(memset@n+1)& (0+255),f,b
 13327  00B99A  0101               	movlb	1	; () banked
 13328  00B99C  2904               	incf	memset@n& (0+255),w,b
 13329  00B99E  E1F0               	bnz	l19181
 13330  00B9A0  0101               	movlb	1	; () banked
 13331  00B9A2  2905               	incf	(memset@n+1)& (0+255),w,b
 13332  00B9A4  B4D8               	btfsc	status,2,c
 13333  00B9A6  0012               	return	
 13334  00B9A8  D7EB               	goto	l19181
 13335  00B9AA                     __end_of_memset:
 13336                           	opt stack 0
 13337                           tblptru	equ	0xFF8
 13338                           tblptrh	equ	0xFF7
 13339                           tblptrl	equ	0xFF6
 13340                           tablat	equ	0xFF5
 13341                           prodh	equ	0xFF4
 13342                           prodl	equ	0xFF3
 13343                           indf0	equ	0xFEF
 13344                           postinc0	equ	0xFEE
 13345                           plusw0	equ	0xFEB
 13346                           fsr0h	equ	0xFEA
 13347                           fsr0l	equ	0xFE9
 13348                           wreg	equ	0xFE8
 13349                           postdec1	equ	0xFE5
 13350                           fsr1h	equ	0xFE2
 13351                           fsr1l	equ	0xFE1
 13352                           indf2	equ	0xFDF
 13353                           postinc2	equ	0xFDE
 13354                           postdec2	equ	0xFDD
 13355                           plusw2	equ	0xFDB
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function _USBDeviceAttach *****************
 13361 ;; Defined at:
 13362 ;;		line 1352 in file "src/usb/usb_device.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;		None               void
 13369 ;; Registers used:
 13370 ;;		wreg, status,2
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13380 ;;Total ram usage:        0 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:   16
 13383 ;; This function calls:
 13384 ;;		Nothing
 13385 ;; This function is called by:
 13386 ;;		_main
 13387 ;; This function uses a non-reentrant model
 13388 ;;
 13389                           
 13390                           	psect	text36
 13391  00B898                     __ptext36:
 13392                           	opt stack 0
 13393  00B898                     _USBDeviceAttach:
 13394                           	opt stack 14
 13395                           
 13396                           ;usb_device.c: 1356: {
 13397                           ;usb_device.c: 1357: if(1 == 1)
 13398                           
 13399                           ; BSR set to: 1
 13400                           ;incstack = 0
 13401  00B898  504B               	movf	_USBDeviceState,w,c	;volatile
 13402  00B89A  A4D8               	btfss	status,2,c
 13403  00B89C  0012               	return	
 13404                           
 13405                           ;usb_device.c: 1358: {
 13406                           ;usb_device.c: 1360: UCON = 0;
 13407  00B89E  0E00               	movlw	0
 13408  00B8A0  6E65               	movwf	3941,c	;volatile
 13409                           
 13410                           ;usb_device.c: 1363: UIE = 0;
 13411  00B8A2  0E00               	movlw	0
 13412  00B8A4  010F               	movlb	15	; () banked
 13413  00B8A6  6F36               	movwf	54,b	;volatile
 13414                           
 13415                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 13416  00B8A8  0E16               	movlw	22
 13417  00B8AA  010F               	movlb	15	; () banked
 13418  00B8AC  6F39               	movwf	57,b	;volatile
 13419  00B8AE  0E9F               	movlw	159
 13420  00B8B0  010F               	movlb	15	; () banked
 13421  00B8B2  6F37               	movwf	55,b	;volatile
 13422  00B8B4  0E7B               	movlw	123
 13423  00B8B6  010F               	movlb	15	; () banked
 13424  00B8B8  6F36               	movwf	54,b	;volatile
 13425                           
 13426                           ; BSR set to: 15
 13427                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 0; PIE2bits.USBIE = 1;INTCONbit
      +                          s.GIEL = 1;INTCONbits.GIEH = 1;};
 13428  00B8BA  8ED0               	bsf	4048,7,c	;volatile
 13429                           
 13430                           ; BSR set to: 15
 13431  00B8BC  98A2               	bcf	4002,4,c	;volatile
 13432                           
 13433                           ; BSR set to: 15
 13434  00B8BE  88A0               	bsf	4000,4,c	;volatile
 13435                           
 13436                           ; BSR set to: 15
 13437  00B8C0  8CF2               	bsf	intcon,6,c	;volatile
 13438                           
 13439                           ; BSR set to: 15
 13440  00B8C2  8EF2               	bsf	intcon,7,c	;volatile
 13441                           
 13442                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 13443  00B8C4  D001               	goto	l1283
 13444  00B8C6                     l1284:
 13445  00B8C6  8665               	bsf	3941,3,c	;volatile
 13446  00B8C8                     l1283:
 13447  00B8C8  A665               	btfss	3941,3,c	;volatile
 13448  00B8CA  D7FD               	goto	l1284
 13449                           
 13450                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 13451  00B8CC  0E01               	movlw	1
 13452  00B8CE  6E4B               	movwf	_USBDeviceState,c	;volatile
 13453  00B8D0  0012               	return	
 13454  00B8D2                     __end_of_USBDeviceAttach:
 13455                           	opt stack 0
 13456                           tblptru	equ	0xFF8
 13457                           tblptrh	equ	0xFF7
 13458                           tblptrl	equ	0xFF6
 13459                           tablat	equ	0xFF5
 13460                           prodh	equ	0xFF4
 13461                           prodl	equ	0xFF3
 13462                           intcon	equ	0xFF2
 13463                           indf0	equ	0xFEF
 13464                           postinc0	equ	0xFEE
 13465                           plusw0	equ	0xFEB
 13466                           fsr0h	equ	0xFEA
 13467                           fsr0l	equ	0xFE9
 13468                           wreg	equ	0xFE8
 13469                           postdec1	equ	0xFE5
 13470                           fsr1h	equ	0xFE2
 13471                           fsr1l	equ	0xFE1
 13472                           indf2	equ	0xFDF
 13473                           postinc2	equ	0xFDE
 13474                           postdec2	equ	0xFDD
 13475                           plusw2	equ	0xFDB
 13476                           fsr2h	equ	0xFDA
 13477                           fsr2l	equ	0xFD9
 13478                           status	equ	0xFD8
 13479                           
 13480 ;; *************** function _SYSTEM_Initialize *****************
 13481 ;; Defined at:
 13482 ;;		line 60 in file "src/18F27J53/system.c"
 13483 ;; Parameters:    Size  Location     Type
 13484 ;;		None
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;  pll_startup_    2    0[BANK1 ] unsigned int 
 13487 ;; Return value:  Size  Location     Type
 13488 ;;		None               void
 13489 ;; Registers used:
 13490 ;;		wreg, status,2, status,0, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 0/0
 13493 ;;		On exit  : 0/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13497 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13499 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13500 ;;Total ram usage:        2 bytes
 13501 ;; Hardware stack levels used:    1
 13502 ;; Hardware stack levels required when called:   17
 13503 ;; This function calls:
 13504 ;;		_RtccWrOn
 13505 ;; This function is called by:
 13506 ;;		_main
 13507 ;; This function uses a non-reentrant model
 13508 ;;
 13509                           
 13510                           	psect	text37
 13511  008628                     __ptext37:
 13512                           	opt stack 0
 13513  008628                     _SYSTEM_Initialize:
 13514                           	opt stack 13
 13515                           
 13516                           ;system.c: 64: unsigned int pll_startup_counter = 600;
 13517                           
 13518                           ;incstack = 0
 13519  008628  0E02               	movlw	2
 13520  00862A  0101               	movlb	1	; () banked
 13521  00862C  6F01               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 13522  00862E  0E58               	movlw	88
 13523  008630  6F00               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 13524                           
 13525                           ; BSR set to: 1
 13526                           ;system.c: 65: OSCTUNEbits.PLLEN = 1;
 13527  008632  8C9B               	bsf	3995,6,c	;volatile
 13528  008634                     l19585:
 13529                           
 13530                           ; BSR set to: 1
 13531  008634  0101               	movlb	1	; () banked
 13532  008636  0700               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 13533  008638  A0D8               	btfss	status,0,c
 13534  00863A  0701               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 13535  00863C  0101               	movlb	1	; () banked
 13536  00863E  2900               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 13537  008640  E1F9               	bnz	l19585
 13538  008642  0101               	movlb	1	; () banked
 13539  008644  2901               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 13540  008646  A4D8               	btfss	status,2,c
 13541  008648  D7F5               	goto	l19585
 13542                           
 13543                           ; BSR set to: 1
 13544                           ;system.c: 74: TRISA = 0;
 13545                           
 13546                           ; BSR set to: 1
 13547  00864A  0E00               	movlw	0
 13548  00864C  6E92               	movwf	3986,c	;volatile
 13549                           
 13550                           ;system.c: 75: TRISB = 0;
 13551  00864E  0E00               	movlw	0
 13552  008650  6E93               	movwf	3987,c	;volatile
 13553                           
 13554                           ;system.c: 76: TRISC = 0;
 13555  008652  0E00               	movlw	0
 13556  008654  6E94               	movwf	3988,c	;volatile
 13557                           
 13558                           ; BSR set to: 1
 13559                           ;system.c: 78: LATCbits.LATC0 = 1;
 13560  008656  808B               	bsf	3979,0,c	;volatile
 13561                           
 13562                           ;system.c: 83: RTCCFG = 0x0;
 13563  008658  0E00               	movlw	0
 13564  00865A  010F               	movlb	15	; () banked
 13565  00865C  6F3F               	movwf	63,b	;volatile
 13566                           
 13567                           ;system.c: 84: RTCCAL = 0x00;
 13568  00865E  0E00               	movlw	0
 13569  008660  010F               	movlb	15	; () banked
 13570  008662  6F3E               	movwf	62,b	;volatile
 13571                           
 13572                           ; BSR set to: 15
 13573                           ;system.c: 93: (RTCCFGbits.RTCWREN = 0);
 13574  008664  010F               	movlb	15	; () banked
 13575  008666  9B3F               	bcf	63,5,b	;volatile
 13576                           
 13577                           ; BSR set to: 15
 13578                           ;system.c: 94: RtccWrOn();
 13579  008668  ECC3  F05D         	call	_RtccWrOn	;wreg free
 13580                           
 13581                           ;system.c: 95: (RTCCFGbits.RTCEN=1);
 13582  00866C  010F               	movlb	15	; () banked
 13583  00866E  8F3F               	bsf	63,7,b	;volatile
 13584                           
 13585                           ; BSR set to: 15
 13586                           ;system.c: 96: (ALRMCFGbits.ALRMEN=1);
 13587  008670  010F               	movlb	15	; () banked
 13588  008672  8F47               	bsf	71,7,b	;volatile
 13589                           
 13590                           ; BSR set to: 15
 13591                           ;system.c: 97: RTCCFGbits.RTCPTR0 = 0;
 13592  008674  010F               	movlb	15	; () banked
 13593  008676  913F               	bcf	63,0,b	;volatile
 13594                           
 13595                           ; BSR set to: 15
 13596                           ;system.c: 98: RTCCFGbits.RTCPTR1 = 0;
 13597  008678  010F               	movlb	15	; () banked
 13598  00867A  933F               	bcf	63,1,b	;volatile
 13599                           
 13600                           ; BSR set to: 15
 13601                           ;system.c: 99: RTCVALHbits.RTCVALH = 0x00;
 13602  00867C  0E00               	movlw	0
 13603  00867E  010F               	movlb	15	; () banked
 13604  008680  6F3B               	movwf	59,b	;volatile
 13605                           
 13606                           ; BSR set to: 15
 13607                           ;system.c: 100: RTCVALLbits.RTCVALL = 0x00;
 13608  008682  0E00               	movlw	0
 13609  008684  010F               	movlb	15	; () banked
 13610  008686  6F3A               	movwf	58,b	;volatile
 13611                           
 13612                           ; BSR set to: 15
 13613                           ;system.c: 102: ALRMCFGbits.AMASK = 0b0011;
 13614  008688  010F               	movlb	15	; () banked
 13615  00868A  5147               	movf	71,w,b	;volatile
 13616  00868C  0BC3               	andlw	-61
 13617  00868E  090C               	iorlw	12
 13618  008690  6F47               	movwf	71,b	;volatile
 13619                           
 13620                           ; BSR set to: 15
 13621                           ;system.c: 104: ALRMCFGbits.CHIME = 1;
 13622  008692  010F               	movlb	15	; () banked
 13623  008694  8D47               	bsf	71,6,b	;volatile
 13624                           
 13625                           ; BSR set to: 15
 13626                           ;system.c: 105: ALRMCFGbits.ALRMEN = 1;
 13627  008696  010F               	movlb	15	; () banked
 13628  008698  8F47               	bsf	71,7,b	;volatile
 13629                           
 13630                           ; BSR set to: 15
 13631                           ;system.c: 106: (RTCCFGbits.RTCWREN = 0);
 13632  00869A  010F               	movlb	15	; () banked
 13633  00869C  9B3F               	bcf	63,5,b	;volatile
 13634                           
 13635                           ; BSR set to: 15
 13636                           ;system.c: 109: IPR3bits.RTCCIP = 0;
 13637  00869E  90A5               	bcf	4005,0,c	;volatile
 13638                           
 13639                           ; BSR set to: 15
 13640                           ;system.c: 110: PIR3bits.RTCCIF = 0;
 13641  0086A0  90A4               	bcf	4004,0,c	;volatile
 13642                           
 13643                           ; BSR set to: 15
 13644                           ;system.c: 111: PIE3bits.RTCCIE = 1;
 13645  0086A2  80A3               	bsf	4003,0,c	;volatile
 13646                           
 13647                           ; BSR set to: 15
 13648                           ;system.c: 117: EECON2 = 0x55;
 13649  0086A4  0E55               	movlw	85
 13650  0086A6  6EA7               	movwf	4007,c	;volatile
 13651                           
 13652                           ; BSR set to: 15
 13653                           ;system.c: 118: EECON2 = 0xAA;
 13654  0086A8  0EAA               	movlw	170
 13655  0086AA  6EA7               	movwf	4007,c	;volatile
 13656                           
 13657                           ; BSR set to: 15
 13658                           ;system.c: 119: PPSCONbits.IOLOCK = 0;
 13659  0086AC  010E               	movlb	14	; () banked
 13660  0086AE  91BF               	bcf	191,0,b	;volatile
 13661                           
 13662                           ; BSR set to: 14
 13663                           ;system.c: 122: RPINR1 = 13;
 13664  0086B0  0E0D               	movlw	13
 13665  0086B2  010E               	movlb	14	; () banked
 13666  0086B4  6FE1               	movwf	225,b	;volatile
 13667                           
 13668                           ; BSR set to: 14
 13669                           ;system.c: 123: RPINR21 = 12;
 13670  0086B6  0E0C               	movlw	12
 13671  0086B8  010E               	movlb	14	; () banked
 13672  0086BA  6FFC               	movwf	252,b	;volatile
 13673                           
 13674                           ; BSR set to: 14
 13675                           ;system.c: 124: RPINR22 = 5;
 13676  0086BC  0E05               	movlw	5
 13677  0086BE  010E               	movlb	14	; () banked
 13678  0086C0  6FFD               	movwf	253,b	;volatile
 13679                           
 13680                           ; BSR set to: 14
 13681                           ;system.c: 127: RPOR4 = 10;
 13682  0086C2  0E0A               	movlw	10
 13683  0086C4  010E               	movlb	14	; () banked
 13684  0086C6  6FC4               	movwf	196,b	;volatile
 13685                           
 13686                           ; BSR set to: 14
 13687                           ;system.c: 128: RPOR5 = 11;
 13688  0086C8  0E0B               	movlw	11
 13689  0086CA  010E               	movlb	14	; () banked
 13690  0086CC  6FC5               	movwf	197,b	;volatile
 13691                           
 13692                           ; BSR set to: 14
 13693                           ;system.c: 132: RPOR11 = 14;
 13694  0086CE  0E0E               	movlw	14
 13695  0086D0  010E               	movlb	14	; () banked
 13696  0086D2  6FCB               	movwf	203,b	;volatile
 13697                           
 13698                           ; BSR set to: 14
 13699                           ;system.c: 136: EECON2 = 0x55;
 13700  0086D4  0E55               	movlw	85
 13701  0086D6  6EA7               	movwf	4007,c	;volatile
 13702                           
 13703                           ; BSR set to: 14
 13704                           ;system.c: 137: EECON2 = 0xAA;
 13705  0086D8  0EAA               	movlw	170
 13706  0086DA  6EA7               	movwf	4007,c	;volatile
 13707                           
 13708                           ; BSR set to: 14
 13709                           ;system.c: 138: PPSCONbits.IOLOCK = 1;
 13710  0086DC  010E               	movlb	14	; () banked
 13711  0086DE  81BF               	bsf	191,0,b	;volatile
 13712                           
 13713                           ; BSR set to: 14
 13714                           ;system.c: 147: ANCON0 = 0xFF;
 13715  0086E0  010F               	movlb	15	; () banked
 13716  0086E2  6948               	setf	72,b	;volatile
 13717                           
 13718                           ; BSR set to: 15
 13719                           ;system.c: 148: ANCON1 = 0x1F;
 13720  0086E4  0E1F               	movlw	31
 13721  0086E6  010F               	movlb	15	; () banked
 13722  0086E8  6F49               	movwf	73,b	;volatile
 13723                           
 13724                           ; BSR set to: 15
 13725                           ;system.c: 151: RTCEN = 0;
 13726  0086EA  010F               	movlb	15	; () banked
 13727  0086EC  9F3F               	bcf	63,7,b	;volatile
 13728                           
 13729                           ; BSR set to: 15
 13730                           ;system.c: 152: RTCOE = 0;
 13731  0086EE  010F               	movlb	15	; () banked
 13732  0086F0  953F               	bcf	63,2,b	;volatile
 13733                           
 13734                           ; BSR set to: 15
 13735                           ;system.c: 158: RCONbits.IPEN = 1;
 13736  0086F2  8ED0               	bsf	4048,7,c	;volatile
 13737                           
 13738                           ; BSR set to: 15
 13739                           ;system.c: 164: LATCbits.LATC6 = 1;
 13740  0086F4  8C8B               	bsf	3979,6,c	;volatile
 13741                           
 13742                           ; BSR set to: 15
 13743                           ;system.c: 165: LATBbits.LATB3 = 1;
 13744  0086F6  868A               	bsf	3978,3,c	;volatile
 13745                           
 13746                           ; BSR set to: 15
 13747                           ;system.c: 167: TRISCbits.TRISC6 = 0;
 13748  0086F8  9C94               	bcf	3988,6,c	;volatile
 13749                           
 13750                           ; BSR set to: 15
 13751                           ;system.c: 168: TRISBbits.TRISB3 = 0;
 13752  0086FA  9693               	bcf	3987,3,c	;volatile
 13753                           
 13754                           ; BSR set to: 15
 13755                           ;system.c: 171: TRISBbits.TRISB0 = 1;
 13756  0086FC  8093               	bsf	3987,0,c	;volatile
 13757                           
 13758                           ; BSR set to: 15
 13759                           ;system.c: 172: TRISCbits.TRISC2 = 1;
 13760  0086FE  8494               	bsf	3988,2,c	;volatile
 13761                           
 13762                           ; BSR set to: 15
 13763                           ;system.c: 175: INTCON2bits.INTEDG1 = 1;
 13764  008700  8AF1               	bsf	intcon2,5,c	;volatile
 13765                           
 13766                           ; BSR set to: 15
 13767                           ;system.c: 178: INTCON2bits.INTEDG0 = 1;
 13768  008702  8CF1               	bsf	intcon2,6,c	;volatile
 13769                           
 13770                           ; BSR set to: 15
 13771                           ;system.c: 180: INTCONbits.INT0IF = 0;
 13772  008704  92F2               	bcf	intcon,1,c	;volatile
 13773                           
 13774                           ; BSR set to: 15
 13775                           ;system.c: 181: INTCONbits.INT0IE = 1;
 13776  008706  88F2               	bsf	intcon,4,c	;volatile
 13777                           
 13778                           ; BSR set to: 15
 13779                           ;system.c: 183: INTCON3bits.INT1IF = 0;
 13780  008708  90F0               	bcf	intcon3,0,c	;volatile
 13781                           
 13782                           ; BSR set to: 15
 13783                           ;system.c: 184: INTCON3bits.INT1IP = 1;
 13784  00870A  8CF0               	bsf	intcon3,6,c	;volatile
 13785                           
 13786                           ; BSR set to: 15
 13787                           ;system.c: 185: INTCON3bits.INT1IE = 1;
 13788  00870C  86F0               	bsf	intcon3,3,c	;volatile
 13789                           
 13790                           ; BSR set to: 15
 13791                           ;system.c: 191: TRISCbits.TRISC1 = 1;
 13792  00870E  8294               	bsf	3988,1,c	;volatile
 13793                           
 13794                           ; BSR set to: 15
 13795                           ;system.c: 192: TRISBbits.TRISB1 = 0;
 13796  008710  9293               	bcf	3987,1,c	;volatile
 13797                           
 13798                           ; BSR set to: 15
 13799                           ;system.c: 193: TRISBbits.TRISB2 = 0;
 13800  008712  9493               	bcf	3987,2,c	;volatile
 13801                           
 13802                           ; BSR set to: 15
 13803                           ;system.c: 195: SSP2STAT = 0xC0;
 13804  008714  0EC0               	movlw	192
 13805  008716  6E73               	movwf	3955,c	;volatile
 13806                           
 13807                           ; BSR set to: 15
 13808                           ;system.c: 196: SSP2CON1 = 0x21;
 13809  008718  0E21               	movlw	33
 13810  00871A  6E72               	movwf	3954,c	;volatile
 13811                           
 13812                           ; BSR set to: 15
 13813                           ;system.c: 199: LATAbits.LATA5 = 0;
 13814  00871C  9A89               	bcf	3977,5,c	;volatile
 13815                           
 13816                           ; BSR set to: 15
 13817                           ;system.c: 200: TRISAbits.TRISA5 = 1;
 13818  00871E  8A92               	bsf	3986,5,c	;volatile
 13819                           
 13820                           ; BSR set to: 15
 13821                           ;system.c: 205: INTCONbits.GIEH = 1;
 13822  008720  8EF2               	bsf	intcon,7,c	;volatile
 13823                           
 13824                           ; BSR set to: 15
 13825                           ;system.c: 206: INTCONbits.GIEL = 1;
 13826  008722  8CF2               	bsf	intcon,6,c	;volatile
 13827                           
 13828                           ; BSR set to: 15
 13829                           ;system.c: 217: TRISCbits.TRISC0 = 1;
 13830  008724  8094               	bsf	3988,0,c	;volatile
 13831                           
 13832                           ; BSR set to: 15
 13833                           ;system.c: 220: CCPTMRS0 = 0x00;
 13834  008726  0E00               	movlw	0
 13835  008728  010F               	movlb	15	; () banked
 13836  00872A  6F52               	movwf	82,b	;volatile
 13837                           
 13838                           ; BSR set to: 15
 13839                           ;system.c: 222: PR2 = 0xF9;
 13840  00872C  0EF9               	movlw	249
 13841  00872E  6ECB               	movwf	4043,c	;volatile
 13842                           
 13843                           ; BSR set to: 15
 13844                           ;system.c: 223: CCP1CONbits.DC1B = 0b00;
 13845  008730  0ECF               	movlw	-49
 13846  008732  16BA               	andwf	4026,f,c	;volatile
 13847                           
 13848                           ; BSR set to: 15
 13849                           ;system.c: 224: CCP1CONbits.CCP1M = 0b1100;
 13850  008734  50BA               	movf	4026,w,c	;volatile
 13851  008736  0BF0               	andlw	-16
 13852  008738  090C               	iorlw	12
 13853  00873A  6EBA               	movwf	4026,c	;volatile
 13854                           
 13855                           ; BSR set to: 15
 13856                           ;system.c: 225: CCPR1L = 0x00;
 13857  00873C  0E00               	movlw	0
 13858  00873E  6EBB               	movwf	4027,c	;volatile
 13859                           
 13860                           ; BSR set to: 15
 13861                           ;system.c: 227: T2CONbits.T2CKPS = 0b10;
 13862  008740  50CA               	movf	4042,w,c	;volatile
 13863  008742  0BFC               	andlw	-4
 13864  008744  0902               	iorlw	2
 13865  008746  6ECA               	movwf	4042,c	;volatile
 13866                           
 13867                           ; BSR set to: 15
 13868                           ;system.c: 228: T2CONbits.TMR2ON = 0b1;
 13869  008748  84CA               	bsf	4042,2,c	;volatile
 13870                           
 13871                           ; BSR set to: 15
 13872                           ;system.c: 233: TRISCbits.TRISC0 = 0;
 13873  00874A  9094               	bcf	3988,0,c	;volatile
 13874                           
 13875                           ; BSR set to: 15
 13876                           ;system.c: 238: T4CONbits.T4OUTPS = 0b1111;
 13877  00874C  8676               	bsf	3958,3,c	;volatile
 13878  00874E  8876               	bsf	3958,4,c	;volatile
 13879  008750  8A76               	bsf	3958,5,c	;volatile
 13880  008752  8C76               	bsf	3958,6,c	;volatile
 13881                           
 13882                           ; BSR set to: 15
 13883                           ;system.c: 239: T4CONbits.T4CKPS = 0b11;
 13884  008754  0E03               	movlw	3
 13885  008756  1276               	iorwf	3958,f,c	;volatile
 13886                           
 13887                           ; BSR set to: 15
 13888                           ;system.c: 240: PR4 = 234;
 13889  008758  0EEA               	movlw	234
 13890  00875A  6E77               	movwf	3959,c	;volatile
 13891                           
 13892                           ; BSR set to: 15
 13893                           ;system.c: 241: IPR3bits.TMR4IP = 0;
 13894  00875C  96A5               	bcf	4005,3,c	;volatile
 13895                           
 13896                           ; BSR set to: 15
 13897                           ;system.c: 242: PIR3bits.TMR4IF = 0;
 13898  00875E  96A4               	bcf	4004,3,c	;volatile
 13899                           
 13900                           ; BSR set to: 15
 13901                           ;system.c: 243: PIE3bits.TMR4IE = 1;
 13902  008760  86A3               	bsf	4003,3,c	;volatile
 13903                           
 13904                           ; BSR set to: 15
 13905                           ;system.c: 244: T4CONbits.TMR4ON = 1;
 13906  008762  8476               	bsf	3958,2,c	;volatile
 13907                           
 13908                           ; BSR set to: 15
 13909  008764  0012               	return		;funcret
 13910  008766                     __end_of_SYSTEM_Initialize:
 13911                           	opt stack 0
 13912                           tblptru	equ	0xFF8
 13913                           tblptrh	equ	0xFF7
 13914                           tblptrl	equ	0xFF6
 13915                           tablat	equ	0xFF5
 13916                           prodh	equ	0xFF4
 13917                           prodl	equ	0xFF3
 13918                           intcon	equ	0xFF2
 13919                           intcon2	equ	0xFF1
 13920                           intcon3	equ	0xFF0
 13921                           indf0	equ	0xFEF
 13922                           postinc0	equ	0xFEE
 13923                           plusw0	equ	0xFEB
 13924                           fsr0h	equ	0xFEA
 13925                           fsr0l	equ	0xFE9
 13926                           wreg	equ	0xFE8
 13927                           postdec1	equ	0xFE5
 13928                           fsr1h	equ	0xFE2
 13929                           fsr1l	equ	0xFE1
 13930                           indf2	equ	0xFDF
 13931                           postinc2	equ	0xFDE
 13932                           postdec2	equ	0xFDD
 13933                           plusw2	equ	0xFDB
 13934                           fsr2h	equ	0xFDA
 13935                           fsr2l	equ	0xFD9
 13936                           status	equ	0xFD8
 13937                           
 13938 ;; *************** function _RTCC_reset *****************
 13939 ;; Defined at:
 13940 ;;		line 651 in file "src/main.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;		None
 13943 ;; Auto vars:     Size  Location     Type
 13944 ;;		None
 13945 ;; Return value:  Size  Location     Type
 13946 ;;		None               void
 13947 ;; Registers used:
 13948 ;;		wreg, status,2, cstack
 13949 ;; Tracked objects:
 13950 ;;		On entry : 0/0
 13951 ;;		On exit  : 0/0
 13952 ;;		Unchanged: 0/0
 13953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13958 ;;Total ram usage:        0 bytes
 13959 ;; Hardware stack levels used:    1
 13960 ;; Hardware stack levels required when called:   17
 13961 ;; This function calls:
 13962 ;;		_RtccWrOn
 13963 ;; This function is called by:
 13964 ;;		_main
 13965 ;; This function uses a non-reentrant model
 13966 ;;
 13967                           
 13968                           	psect	text38
 13969  00BAFE                     __ptext38:
 13970                           	opt stack 0
 13971  00BAFE                     _RTCC_reset:
 13972                           	opt stack 13
 13973                           
 13974                           ;main.c: 653: RtccWrOn();
 13975                           
 13976                           ; BSR set to: 15
 13977                           ;incstack = 0
 13978  00BAFE  ECC3  F05D         	call	_RtccWrOn	;wreg free
 13979                           
 13980                           ;main.c: 654: RTCCFGbits.RTCPTR0 = 0;
 13981  00BB02  010F               	movlb	15	; () banked
 13982  00BB04  913F               	bcf	63,0,b	;volatile
 13983                           
 13984                           ; BSR set to: 15
 13985                           ;main.c: 655: RTCCFGbits.RTCPTR1 = 0;
 13986  00BB06  010F               	movlb	15	; () banked
 13987  00BB08  933F               	bcf	63,1,b	;volatile
 13988                           
 13989                           ; BSR set to: 15
 13990                           ;main.c: 656: RTCVALHbits.RTCVALH = 0x00;
 13991  00BB0A  0E00               	movlw	0
 13992  00BB0C  010F               	movlb	15	; () banked
 13993  00BB0E  6F3B               	movwf	59,b	;volatile
 13994                           
 13995                           ; BSR set to: 15
 13996                           ;main.c: 657: RTCVALLbits.RTCVALL = 0x00;
 13997  00BB10  0E00               	movlw	0
 13998  00BB12  010F               	movlb	15	; () banked
 13999  00BB14  6F3A               	movwf	58,b	;volatile
 14000                           
 14001                           ; BSR set to: 15
 14002                           ;main.c: 658: (RTCCFGbits.RTCWREN = 0);
 14003  00BB16  010F               	movlb	15	; () banked
 14004  00BB18  9B3F               	bcf	63,5,b	;volatile
 14005                           
 14006                           ; BSR set to: 15
 14007  00BB1A  0012               	return		;funcret
 14008  00BB1C                     __end_of_RTCC_reset:
 14009                           	opt stack 0
 14010                           tblptru	equ	0xFF8
 14011                           tblptrh	equ	0xFF7
 14012                           tblptrl	equ	0xFF6
 14013                           tablat	equ	0xFF5
 14014                           prodh	equ	0xFF4
 14015                           prodl	equ	0xFF3
 14016                           intcon	equ	0xFF2
 14017                           intcon2	equ	0xFF1
 14018                           intcon3	equ	0xFF0
 14019                           indf0	equ	0xFEF
 14020                           postinc0	equ	0xFEE
 14021                           plusw0	equ	0xFEB
 14022                           fsr0h	equ	0xFEA
 14023                           fsr0l	equ	0xFE9
 14024                           wreg	equ	0xFE8
 14025                           postdec1	equ	0xFE5
 14026                           fsr1h	equ	0xFE2
 14027                           fsr1l	equ	0xFE1
 14028                           indf2	equ	0xFDF
 14029                           postinc2	equ	0xFDE
 14030                           postdec2	equ	0xFDD
 14031                           plusw2	equ	0xFDB
 14032                           fsr2h	equ	0xFDA
 14033                           fsr2l	equ	0xFD9
 14034                           status	equ	0xFD8
 14035                           
 14036 ;; *************** function _RtccWrOn *****************
 14037 ;; Defined at:
 14038 ;;		line 21 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\rtcc\RtccWrOn.c"
 14039 ;; Parameters:    Size  Location     Type
 14040 ;;		None
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;  data            2    0        unsigned int 
 14043 ;; Return value:  Size  Location     Type
 14044 ;;		None               void
 14045 ;; Registers used:
 14046 ;;		wreg, status,2
 14047 ;; Tracked objects:
 14048 ;;		On entry : 0/0
 14049 ;;		On exit  : 0/0
 14050 ;;		Unchanged: 0/0
 14051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14056 ;;Total ram usage:        0 bytes
 14057 ;; Hardware stack levels used:    1
 14058 ;; Hardware stack levels required when called:   16
 14059 ;; This function calls:
 14060 ;;		Nothing
 14061 ;; This function is called by:
 14062 ;;		_SYSTEM_Initialize
 14063 ;;		_update_variable
 14064 ;;		_RTCC_reset
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text39
 14069  00BB86                     __ptext39:
 14070                           	opt stack 0
 14071  00BB86                     _RtccWrOn:
 14072                           	opt stack 13
 14073                           
 14074                           ; BSR set to: 15
 14075                           ;incstack = 0
 14076  00BB86  9CF2               	bcf	intcon,6,c	;volatile
 14077  00BB88  0E55               	movlw	85
 14078  00BB8A  6EA7               	movwf	4007,c	;volatile
 14079  00BB8C  0EAA               	movlw	170
 14080  00BB8E  6EA7               	movwf	4007,c	;volatile
 14081  00BB90  010F               	movlb	15	; () banked
 14082  00BB92  8B3F               	bsf	63,5,b	;volatile
 14083                           
 14084                           ; BSR set to: 15
 14085  00BB94  8CF2               	bsf	intcon,6,c	;volatile
 14086                           
 14087                           ; BSR set to: 15
 14088  00BB96  0012               	return		;funcret
 14089  00BB98                     __end_of_RtccWrOn:
 14090                           	opt stack 0
 14091                           tblptru	equ	0xFF8
 14092                           tblptrh	equ	0xFF7
 14093                           tblptrl	equ	0xFF6
 14094                           tablat	equ	0xFF5
 14095                           prodh	equ	0xFF4
 14096                           prodl	equ	0xFF3
 14097                           intcon	equ	0xFF2
 14098                           intcon2	equ	0xFF1
 14099                           intcon3	equ	0xFF0
 14100                           indf0	equ	0xFEF
 14101                           postinc0	equ	0xFEE
 14102                           plusw0	equ	0xFEB
 14103                           fsr0h	equ	0xFEA
 14104                           fsr0l	equ	0xFE9
 14105                           wreg	equ	0xFE8
 14106                           postdec1	equ	0xFE5
 14107                           fsr1h	equ	0xFE2
 14108                           fsr1l	equ	0xFE1
 14109                           indf2	equ	0xFDF
 14110                           postinc2	equ	0xFDE
 14111                           postdec2	equ	0xFDD
 14112                           plusw2	equ	0xFDB
 14113                           fsr2h	equ	0xFDA
 14114                           fsr2l	equ	0xFD9
 14115                           status	equ	0xFD8
 14116                           
 14117 ;; *************** function _MiApp_UnicastAddress *****************
 14118 ;; Defined at:
 14119 ;;		line 4566 in file "src/miwi/miwi_mesh.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;  DestAddress     2  125[BANK1 ] PTR unsigned char 
 14122 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), main@shortaddress
      +(2), 
 14123 ;;		 -> openSocketInfo.ShortAddress1(2), openSocketInfo(18), tempShortAddress(2), 
 14124 ;;  PermanentAdd    1  127[BANK1 ] unsigned char 
 14125 ;;  SecEn           1  128[BANK1 ] unsigned char 
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  t2              4    4[BANK3 ] struct _MIWI_TICK
 14128 ;;  t1              4    0[BANK3 ] struct _MIWI_TICK
 14129 ;;  t2              4   12[BANK3 ] struct _MIWI_TICK
 14130 ;;  t1              4    8[BANK3 ] struct _MIWI_TICK
 14131 ;;  handle          1   18[BANK3 ] unsigned char 
 14132 ;;  i               1   17[BANK3 ] unsigned char 
 14133 ;;  MiWiFrameCon    1   16[BANK3 ] unsigned char 
 14134 ;; Return value:  Size  Location     Type
 14135 ;;                  1    wreg      unsigned char 
 14136 ;; Registers used:
 14137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14138 ;; Tracked objects:
 14139 ;;		On entry : 0/0
 14140 ;;		On exit  : 0/0
 14141 ;;		Unchanged: 0/0
 14142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14143 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;      Locals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14145 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14146 ;;      Totals:         0       0      12       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14147 ;;Total ram usage:       31 bytes
 14148 ;; Hardware stack levels used:    1
 14149 ;; Hardware stack levels required when called:   27
 14150 ;; This function calls:
 14151 ;;		_MiApp_DiscardMessage
 14152 ;;		_MiApp_MessageAvailable
 14153 ;;		_MiMAC_SendPacket
 14154 ;;		_MiWi_TickGet
 14155 ;;		_RouteMessage
 14156 ;;		_SearchForLongAddress
 14157 ;; This function is called by:
 14158 ;;		_main
 14159 ;;		_OpenSocket
 14160 ;;		_do_NETWORK_REGISTER
 14161 ;;		_do_POWER_TEST
 14162 ;;		_do_PING
 14163 ;;		_do_UPDATE
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text40
 14168  005DC0                     __ptext40:
 14169                           	opt stack 0
 14170  005DC0                     _MiApp_UnicastAddress:
 14171                           	opt stack 3
 14172                           
 14173                           ;miwi_mesh.c: 4568: uint8_t handle;
 14174                           ;miwi_mesh.c: 4569: uint8_t i;
 14175                           ;miwi_mesh.c: 4570: uint8_t MiWiFrameControl;
 14176                           ;miwi_mesh.c: 4572: if( MiWiAckRequired && TxBuffer[11])
 14177                           
 14178                           ; BSR set to: 15
 14179                           ;incstack = 0
 14180  005DC0  0101               	movlb	1	; () banked
 14181  005DC2  51C1               	movf	_MiWiAckRequired& (0+255),w,b
 14182  005DC4  B4D8               	btfsc	status,2,c
 14183  005DC6  D00C               	goto	l20131
 14184                           
 14185                           ; BSR set to: 1
 14186  005DC8  0102               	movlb	2	; () banked
 14187  005DCA  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 14188  005DCC  B4D8               	btfsc	status,2,c
 14189  005DCE  D008               	goto	l20131
 14190                           
 14191                           ; BSR set to: 2
 14192                           ;miwi_mesh.c: 4573: {
 14193                           ;miwi_mesh.c: 4574: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 14194  005DD0  0101               	movlb	1	; () banked
 14195  005DD2  87B5               	bsf	_MiWiStateMachine& (0+255),3,b
 14196                           
 14197                           ;miwi_mesh.c: 4575: AcknowledgementSeq = MiWiSeqNum;
 14198  005DD4  C1C3  F1F8         	movff	_MiWiSeqNum,_AcknowledgementSeq
 14199                           
 14200                           ; BSR set to: 1
 14201                           ;miwi_mesh.c: 4576: MiWiFrameControl = 0x06;
 14202  005DD8  0E06               	movlw	6
 14203  005DDA  0103               	movlb	3	; () banked
 14204  005DDC  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14205                           
 14206                           ;miwi_mesh.c: 4577: }
 14207  005DDE  D005               	goto	l1014
 14208  005DE0                     l20131:
 14209                           
 14210                           ;miwi_mesh.c: 4578: else
 14211                           ;miwi_mesh.c: 4579: {
 14212                           ;miwi_mesh.c: 4580: MiWiFrameControl = 0x02;
 14213  005DE0  0E02               	movlw	2
 14214  005DE2  0103               	movlb	3	; () banked
 14215  005DE4  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14216                           
 14217                           ; BSR set to: 3
 14218                           ;miwi_mesh.c: 4581: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14219  005DE6  0101               	movlb	1	; () banked
 14220  005DE8  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14221  005DEA                     l1014:
 14222                           
 14223                           ;miwi_mesh.c: 4582: }
 14224                           ;miwi_mesh.c: 4584: if( PermanentAddr )
 14225  005DEA  0101               	movlb	1	; () banked
 14226  005DEC  517F               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 14227  005DEE  0101               	movlb	1	; () banked
 14228  005DF0  B4D8               	btfsc	status,2,c
 14229  005DF2  D160               	goto	l20255
 14230                           
 14231                           ; BSR set to: 1
 14232                           ;miwi_mesh.c: 4585: {
 14233                           ;miwi_mesh.c: 4586: for(i = 0; i < 4; i++)
 14234  005DF4  0E00               	movlw	0
 14235  005DF6  0103               	movlb	3	; () banked
 14236  005DF8  6FD5               	movwf	MiApp_UnicastAddress@i& (0+255),b
 14237  005DFA                     l20137:
 14238                           
 14239                           ; BSR set to: 3
 14240  005DFA  0E03               	movlw	3
 14241  005DFC  0103               	movlb	3	; () banked
 14242  005DFE  65D5               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 14243  005E00  D001               	goto	l20141
 14244  005E02  D019               	goto	l20147
 14245  005E04                     l20141:
 14246                           
 14247                           ; BSR set to: 3
 14248                           ;miwi_mesh.c: 4587: {
 14249                           ;miwi_mesh.c: 4588: tempLongAddress[i] = DestAddress[i];
 14250  005E04  0103               	movlb	3	; () banked
 14251  005E06  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14252  005E08  0D01               	mullw	1
 14253  005E0A  50F3               	movf	prodl,w,c
 14254  005E0C  0101               	movlb	1	; () banked
 14255  005E0E  257D               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14256  005E10  6ED9               	movwf	fsr2l,c
 14257  005E12  50F4               	movf	prodh,w,c
 14258  005E14  0101               	movlb	1	; () banked
 14259  005E16  217E               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14260  005E18  6EDA               	movwf	fsr2h,c
 14261  005E1A  0103               	movlb	3	; () banked
 14262  005E1C  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14263  005E1E  0D01               	mullw	1
 14264  005E20  0EA6               	movlw	low _tempLongAddress
 14265  005E22  24F3               	addwf	prodl,w,c
 14266  005E24  6EE1               	movwf	fsr1l,c
 14267  005E26  0E01               	movlw	high _tempLongAddress
 14268  005E28  20F4               	addwfc	prodh,w,c
 14269  005E2A  6EE2               	movwf	fsr1h,c
 14270  005E2C  CFDF FFE7          	movff	indf2,indf1
 14271                           
 14272                           ; BSR set to: 3
 14273  005E30  0103               	movlb	3	; () banked
 14274  005E32  2BD5               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 14275  005E34  D7E2               	goto	l20137
 14276  005E36                     l20147:
 14277                           
 14278                           ; BSR set to: 3
 14279                           ;miwi_mesh.c: 4589: }
 14280                           ;miwi_mesh.c: 4590: if( (handle = SearchForLongAddress()) == 0xFF )
 14281  005E36  ECB4  F04E         	call	_SearchForLongAddress	;wreg free
 14282  005E3A  0103               	movlb	3	; () banked
 14283  005E3C  6FD6               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 14284  005E3E  0103               	movlb	3	; () banked
 14285  005E40  29D6               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 14286  005E42  A4D8               	btfss	status,2,c
 14287  005E44  D03D               	goto	l20187
 14288  005E46                     l1019:
 14289                           
 14290                           ; BSR set to: 3
 14291                           ;miwi_mesh.c: 4594: TxBuffer[0] = defaultHops;
 14292  005E46  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 14293                           
 14294                           ; BSR set to: 3
 14295                           ;miwi_mesh.c: 4595: TxBuffer[1] = 0x02;
 14296  005E4A  0E02               	movlw	2
 14297  005E4C  0102               	movlb	2	; () banked
 14298  005E4E  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 14299                           
 14300                           ; BSR set to: 2
 14301                           ;miwi_mesh.c: 4596: TxBuffer[2] = 0xFF;
 14302  005E50  0102               	movlb	2	; () banked
 14303  005E52  69A8               	setf	(_TxBuffer+2)& (0+255),b
 14304                           
 14305                           ; BSR set to: 2
 14306                           ;miwi_mesh.c: 4597: TxBuffer[3] = 0xFF;
 14307  005E54  0102               	movlb	2	; () banked
 14308  005E56  69A9               	setf	(_TxBuffer+3)& (0+255),b
 14309                           
 14310                           ; BSR set to: 2
 14311                           ;miwi_mesh.c: 4598: TxBuffer[4] = 0xFF;
 14312  005E58  0102               	movlb	2	; () banked
 14313  005E5A  69AA               	setf	(_TxBuffer+4)& (0+255),b
 14314                           
 14315                           ; BSR set to: 2
 14316                           ;miwi_mesh.c: 4599: TxBuffer[5] = 0xFF;
 14317  005E5C  0102               	movlb	2	; () banked
 14318  005E5E  69AB               	setf	(_TxBuffer+5)& (0+255),b
 14319                           
 14320                           ; BSR set to: 2
 14321                           ;miwi_mesh.c: 4600: TxBuffer[6] = myPANID.v[0];
 14322  005E60  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14323                           
 14324                           ; BSR set to: 2
 14325                           ;miwi_mesh.c: 4601: TxBuffer[7] = myPANID.v[1];
 14326  005E64  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14327                           
 14328                           ; BSR set to: 2
 14329                           ;miwi_mesh.c: 4602: TxBuffer[8] = myShortAddress.v[0];
 14330  005E68  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14331                           
 14332                           ; BSR set to: 2
 14333                           ;miwi_mesh.c: 4603: TxBuffer[9] = myShortAddress.v[1];
 14334  005E6C  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14335                           
 14336                           ; BSR set to: 2
 14337                           ;miwi_mesh.c: 4604: TxBuffer[10] = MiWiSeqNum++;
 14338  005E70  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14339                           
 14340                           ; BSR set to: 2
 14341  005E74  0101               	movlb	1	; () banked
 14342  005E76  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14343                           
 14344                           ; BSR set to: 1
 14345                           ;miwi_mesh.c: 4617: MTP.flags.Val = 0;
 14346  005E78  0E00               	movlw	0
 14347  005E7A  0101               	movlb	1	; () banked
 14348  005E7C  6FAD               	movwf	_MTP& (0+255),b
 14349                           
 14350                           ; BSR set to: 1
 14351                           ;miwi_mesh.c: 4618: MTP.flags.bits.ackReq = 1;
 14352  005E7E  0101               	movlb	1	; () banked
 14353  005E80  8BAD               	bsf	_MTP& (0+255),5,b
 14354                           
 14355                           ; BSR set to: 1
 14356                           ;miwi_mesh.c: 4619: MTP.flags.bits.secEn = SecEn;
 14357  005E82  0101               	movlb	1	; () banked
 14358  005E84  B180               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14359  005E86  D003               	bra	u23065
 14360  005E88  0101               	movlb	1	; () banked
 14361  005E8A  97AD               	bcf	_MTP& (0+255),3,b
 14362  005E8C  D002               	bra	u23066
 14363  005E8E                     u23065:
 14364  005E8E  0101               	movlb	1	; () banked
 14365  005E90  87AD               	bsf	_MTP& (0+255),3,b
 14366  005E92                     u23066:
 14367                           
 14368                           ; BSR set to: 1
 14369                           ;miwi_mesh.c: 4620: MTP.DestAddress = DestAddress;
 14370  005E92  C17D  F1AE         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 14371  005E96  C17E  F1AF         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 14372                           
 14373                           ; BSR set to: 1
 14374                           ;miwi_mesh.c: 4626: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14375  005E9A  0101               	movlb	1	; () banked
 14376  005E9C  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14377                           
 14378                           ; BSR set to: 1
 14379                           ;miwi_mesh.c: 4628: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 14380  005E9E  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 14381  005EA2  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14382  005EA6  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14383  005EAA  0EA6               	movlw	low _TxBuffer
 14384  005EAC  0101               	movlb	1	; () banked
 14385  005EAE  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14386  005EB0  0E02               	movlw	high _TxBuffer
 14387  005EB2  0101               	movlb	1	; () banked
 14388  005EB4  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14389  005EB6  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14390  005EBA  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 14391  005EBE  0012               	return	
 14392  005EC0                     l20187:
 14393                           
 14394                           ;miwi_mesh.c: 4630: else
 14395                           ;miwi_mesh.c: 4631: {
 14396                           ;miwi_mesh.c: 4632: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 14397  005EC0  0103               	movlb	3	; () banked
 14398  005EC2  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14399  005EC4  0D09               	mullw	9
 14400  005EC6  0E08               	movlw	8
 14401  005EC8  26F3               	addwf	prodl,f,c
 14402  005ECA  0E00               	movlw	0
 14403  005ECC  22F4               	addwfc	prodh,f,c
 14404  005ECE  0E00               	movlw	low _ConnectionTable
 14405  005ED0  24F3               	addwf	prodl,w,c
 14406  005ED2  6ED9               	movwf	fsr2l,c
 14407  005ED4  0E06               	movlw	high _ConnectionTable
 14408  005ED6  20F4               	addwfc	prodh,w,c
 14409  005ED8  6EDA               	movwf	fsr2h,c
 14410  005EDA  A6DF               	btfss	indf2,3,c
 14411  005EDC  D7B4               	goto	l1019
 14412                           
 14413                           ; BSR set to: 3
 14414                           ;miwi_mesh.c: 4635: }
 14415                           ;miwi_mesh.c: 4637: if( MiWiAckRequired )
 14416                           
 14417                           ; BSR set to: 3
 14418                           
 14419                           ; BSR set to: 3
 14420                           ;miwi_mesh.c: 4633: {
 14421                           ;miwi_mesh.c: 4634: goto DIRECT_LONG_ADDRESS;
 14422  005EDE  0101               	movlb	1	; () banked
 14423  005EE0  51C1               	movf	_MiWiAckRequired& (0+255),w,b
 14424  005EE2  B4D8               	btfsc	status,2,c
 14425  005EE4  D011               	goto	l20195
 14426                           
 14427                           ; BSR set to: 1
 14428                           ;miwi_mesh.c: 4638: {
 14429                           ;miwi_mesh.c: 4639: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 14430  005EE6  0103               	movlb	3	; () banked
 14431  005EE8  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14432  005EEA  0D09               	mullw	9
 14433  005EEC  0E02               	movlw	2
 14434  005EEE  26F3               	addwf	prodl,f,c
 14435  005EF0  0E00               	movlw	0
 14436  005EF2  22F4               	addwfc	prodh,f,c
 14437  005EF4  0E00               	movlw	low _ConnectionTable
 14438  005EF6  24F3               	addwf	prodl,w,c
 14439  005EF8  6ED9               	movwf	fsr2l,c
 14440  005EFA  0E06               	movlw	high _ConnectionTable
 14441  005EFC  20F4               	addwfc	prodh,w,c
 14442  005EFE  6EDA               	movwf	fsr2h,c
 14443  005F00  CFDE F1B3          	movff	postinc2,_AcknowledgementAddr
 14444  005F04  CFDD F1B4          	movff	postdec2,_AcknowledgementAddr+1
 14445  005F08                     l20195:
 14446                           
 14447                           ;miwi_mesh.c: 4640: }
 14448                           ;miwi_mesh.c: 4642: TxBuffer[0] = 4;
 14449  005F08  0E04               	movlw	4
 14450  005F0A  0102               	movlb	2	; () banked
 14451  005F0C  6FA6               	movwf	_TxBuffer& (0+255),b
 14452                           
 14453                           ; BSR set to: 2
 14454                           ;miwi_mesh.c: 4643: TxBuffer[1] = MiWiFrameControl;
 14455  005F0E  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14456                           
 14457                           ; BSR set to: 2
 14458                           ;miwi_mesh.c: 4644: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 14459  005F12  0103               	movlb	3	; () banked
 14460  005F14  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14461  005F16  0D09               	mullw	9
 14462  005F18  0E00               	movlw	low _ConnectionTable
 14463  005F1A  24F3               	addwf	prodl,w,c
 14464  005F1C  6ED9               	movwf	fsr2l,c
 14465  005F1E  0E06               	movlw	high _ConnectionTable
 14466  005F20  20F4               	addwfc	prodh,w,c
 14467  005F22  6EDA               	movwf	fsr2h,c
 14468  005F24  50DF               	movf	indf2,w,c
 14469  005F26  0102               	movlb	2	; () banked
 14470  005F28  6FA8               	movwf	(_TxBuffer+2)& (0+255),b
 14471                           
 14472                           ; BSR set to: 2
 14473                           ;miwi_mesh.c: 4645: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 14474  005F2A  0103               	movlb	3	; () banked
 14475  005F2C  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14476  005F2E  0D09               	mullw	9
 14477  005F30  0E01               	movlw	1
 14478  005F32  26F3               	addwf	prodl,f,c
 14479  005F34  0E00               	movlw	0
 14480  005F36  22F4               	addwfc	prodh,f,c
 14481  005F38  0E00               	movlw	low _ConnectionTable
 14482  005F3A  24F3               	addwf	prodl,w,c
 14483  005F3C  6ED9               	movwf	fsr2l,c
 14484  005F3E  0E06               	movlw	high _ConnectionTable
 14485  005F40  20F4               	addwfc	prodh,w,c
 14486  005F42  6EDA               	movwf	fsr2h,c
 14487  005F44  50DF               	movf	indf2,w,c
 14488  005F46  0102               	movlb	2	; () banked
 14489  005F48  6FA9               	movwf	(_TxBuffer+3)& (0+255),b
 14490                           
 14491                           ; BSR set to: 2
 14492                           ;miwi_mesh.c: 4646: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 14493  005F4A  0103               	movlb	3	; () banked
 14494  005F4C  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14495  005F4E  0D09               	mullw	9
 14496  005F50  0E02               	movlw	2
 14497  005F52  26F3               	addwf	prodl,f,c
 14498  005F54  0E00               	movlw	0
 14499  005F56  22F4               	addwfc	prodh,f,c
 14500  005F58  0E00               	movlw	low _ConnectionTable
 14501  005F5A  24F3               	addwf	prodl,w,c
 14502  005F5C  6ED9               	movwf	fsr2l,c
 14503  005F5E  0E06               	movlw	high _ConnectionTable
 14504  005F60  20F4               	addwfc	prodh,w,c
 14505  005F62  6EDA               	movwf	fsr2h,c
 14506  005F64  50DF               	movf	indf2,w,c
 14507  005F66  0102               	movlb	2	; () banked
 14508  005F68  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 14509                           
 14510                           ; BSR set to: 2
 14511                           ;miwi_mesh.c: 4647: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 14512  005F6A  0103               	movlb	3	; () banked
 14513  005F6C  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14514  005F6E  0D09               	mullw	9
 14515  005F70  0E03               	movlw	3
 14516  005F72  26F3               	addwf	prodl,f,c
 14517  005F74  0E00               	movlw	0
 14518  005F76  22F4               	addwfc	prodh,f,c
 14519  005F78  0E00               	movlw	low _ConnectionTable
 14520  005F7A  24F3               	addwf	prodl,w,c
 14521  005F7C  6ED9               	movwf	fsr2l,c
 14522  005F7E  0E06               	movlw	high _ConnectionTable
 14523  005F80  20F4               	addwfc	prodh,w,c
 14524  005F82  6EDA               	movwf	fsr2h,c
 14525  005F84  50DF               	movf	indf2,w,c
 14526  005F86  0102               	movlb	2	; () banked
 14527  005F88  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 14528                           
 14529                           ; BSR set to: 2
 14530                           ;miwi_mesh.c: 4648: TxBuffer[6] = myPANID.v[0];
 14531  005F8A  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14532                           
 14533                           ; BSR set to: 2
 14534                           ;miwi_mesh.c: 4649: TxBuffer[7] = myPANID.v[1];
 14535  005F8E  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14536                           
 14537                           ; BSR set to: 2
 14538                           ;miwi_mesh.c: 4650: TxBuffer[8] = myShortAddress.v[0];
 14539  005F92  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14540                           
 14541                           ; BSR set to: 2
 14542                           ;miwi_mesh.c: 4651: TxBuffer[9] = myShortAddress.v[1];
 14543  005F96  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14544                           
 14545                           ; BSR set to: 2
 14546                           ;miwi_mesh.c: 4652: TxBuffer[10] = MiWiSeqNum++;
 14547  005F9A  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14548                           
 14549                           ; BSR set to: 2
 14550  005F9E  0101               	movlb	1	; () banked
 14551  005FA0  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14552                           
 14553                           ; BSR set to: 1
 14554                           ;miwi_mesh.c: 4654: if( 0 == RouteMessage(ConnectionTable[handle].PANID, ConnectionTable
      +                          [handle].AltAddress, SecEn) )
 14555  005FA2  0103               	movlb	3	; () banked
 14556  005FA4  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14557  005FA6  0D09               	mullw	9
 14558  005FA8  0E00               	movlw	low _ConnectionTable
 14559  005FAA  24F3               	addwf	prodl,w,c
 14560  005FAC  6ED9               	movwf	fsr2l,c
 14561  005FAE  0E06               	movlw	high _ConnectionTable
 14562  005FB0  20F4               	addwfc	prodh,w,c
 14563  005FB2  6EDA               	movwf	fsr2h,c
 14564  005FB4  CFDE F13D          	movff	postinc2,RouteMessage@PANID
 14565  005FB8  CFDD F13E          	movff	postdec2,RouteMessage@PANID+1
 14566  005FBC  0103               	movlb	3	; () banked
 14567  005FBE  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14568  005FC0  0D09               	mullw	9
 14569  005FC2  0E02               	movlw	2
 14570  005FC4  26F3               	addwf	prodl,f,c
 14571  005FC6  0E00               	movlw	0
 14572  005FC8  22F4               	addwfc	prodh,f,c
 14573  005FCA  0E00               	movlw	low _ConnectionTable
 14574  005FCC  24F3               	addwf	prodl,w,c
 14575  005FCE  6ED9               	movwf	fsr2l,c
 14576  005FD0  0E06               	movlw	high _ConnectionTable
 14577  005FD2  20F4               	addwfc	prodh,w,c
 14578  005FD4  6EDA               	movwf	fsr2h,c
 14579  005FD6  CFDE F13F          	movff	postinc2,RouteMessage@ShortAddress
 14580  005FDA  CFDD F140          	movff	postdec2,RouteMessage@ShortAddress+1
 14581  005FDE  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 14582  005FE2  EC09  F024         	call	_RouteMessage	;wreg free
 14583  005FE6  0900               	iorlw	0
 14584  005FE8  A4D8               	btfss	status,2,c
 14585  005FEA  D004               	goto	l1024
 14586                           
 14587                           ;miwi_mesh.c: 4655: {
 14588                           ;miwi_mesh.c: 4656: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14589  005FEC  0101               	movlb	1	; () banked
 14590  005FEE  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14591                           
 14592                           ; BSR set to: 1
 14593                           ;miwi_mesh.c: 4657: return 0;
 14594  005FF0  0E00               	movlw	0
 14595                           
 14596                           ; BSR set to: 1
 14597  005FF2  0012               	return	
 14598  005FF4                     l1024:
 14599                           
 14600                           ;miwi_mesh.c: 4659: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14601  005FF4  0101               	movlb	1	; () banked
 14602  005FF6  A7B5               	btfss	_MiWiStateMachine& (0+255),3,b
 14603  005FF8  D05B               	goto	l20251
 14604                           
 14605                           ; BSR set to: 1
 14606                           ;miwi_mesh.c: 4660: {
 14607                           ;miwi_mesh.c: 4661: MIWI_TICK t1, t2;
 14608                           ;miwi_mesh.c: 4662: t1 = MiWi_TickGet();
 14609  005FFA  EC80  F058         	call	_MiWi_TickGet	;wreg free
 14610  005FFE  C100  F3C4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 14611  006002  C101  F3C5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 14612  006006  C102  F3C6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 14613  00600A  C103  F3C7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 14614  00600E                     l20231:
 14615                           
 14616                           ;miwi_mesh.c: 4664: {
 14617                           ;miwi_mesh.c: 4665: if( MiApp_MessageAvailable())
 14618  00600E  ECCC  F05D         	call	_MiApp_MessageAvailable	;wreg free
 14619  006012  0900               	iorlw	0
 14620  006014  A4D8               	btfss	status,2,c
 14621                           
 14622                           ;miwi_mesh.c: 4666: {
 14623                           ;miwi_mesh.c: 4667: MiApp_DiscardMessage();
 14624  006016  ECD5  F05D         	call	_MiApp_DiscardMessage	;wreg free
 14625                           
 14626                           ;miwi_mesh.c: 4668: }
 14627                           ;miwi_mesh.c: 4670: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14628  00601A  0101               	movlb	1	; () banked
 14629  00601C  B7B5               	btfsc	_MiWiStateMachine& (0+255),3,b
 14630  00601E  D002               	goto	l20241
 14631                           
 14632                           ; BSR set to: 1
 14633                           ;miwi_mesh.c: 4671: {
 14634                           ;miwi_mesh.c: 4672: return 1;
 14635  006020  0E01               	movlw	1
 14636                           
 14637                           ; BSR set to: 1
 14638  006022  0012               	return	
 14639  006024                     l20241:
 14640                           
 14641                           ; BSR set to: 1
 14642                           ;miwi_mesh.c: 4673: }
 14643                           ;miwi_mesh.c: 4674: t2 = MiWi_TickGet();
 14644  006024  EC80  F058         	call	_MiWi_TickGet	;wreg free
 14645  006028  C100  F3C8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 14646  00602C  C101  F3C9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 14647  006030  C102  F3CA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 14648  006034  C103  F3CB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 14649                           
 14650                           ;miwi_mesh.c: 4675: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 14651  006038  C3C4  F181         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 14652  00603C  C3C5  F182         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 14653  006040  C3C6  F183         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 14654  006044  C3C7  F184         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 14655  006048  0101               	movlb	1	; () banked
 14656  00604A  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 14657  00604C  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14658  00604E  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14659  006050  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14660  006052  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 14661  006054  0E00               	movlw	0
 14662  006056  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14663  006058  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14664  00605A  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14665  00605C  0103               	movlb	3	; () banked
 14666  00605E  51C8               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 14667  006060  0101               	movlb	1	; () banked
 14668  006062  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 14669  006064  0101               	movlb	1	; () banked
 14670  006066  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 14671  006068  0103               	movlb	3	; () banked
 14672  00606A  51C9               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 14673  00606C  0101               	movlb	1	; () banked
 14674  00606E  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 14675  006070  0101               	movlb	1	; () banked
 14676  006072  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 14677  006074  0103               	movlb	3	; () banked
 14678  006076  51CA               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 14679  006078  0101               	movlb	1	; () banked
 14680  00607A  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 14681  00607C  0101               	movlb	1	; () banked
 14682  00607E  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 14683  006080  0103               	movlb	3	; () banked
 14684  006082  51CB               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 14685  006084  0101               	movlb	1	; () banked
 14686  006086  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 14687  006088  0101               	movlb	1	; () banked
 14688  00608A  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 14689  00608C  0101               	movlb	1	; () banked
 14690  00608E  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 14691  006090  E10B               	bnz	u23130
 14692  006092  0E21               	movlw	33
 14693  006094  0101               	movlb	1	; () banked
 14694  006096  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 14695  006098  0EA1               	movlw	161
 14696  00609A  0101               	movlb	1	; () banked
 14697  00609C  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 14698  00609E  0E07               	movlw	7
 14699  0060A0  0101               	movlb	1	; () banked
 14700  0060A2  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 14701  0060A4  A0D8               	btfss	status,0,c
 14702  0060A6  D7B3               	goto	l20231
 14703  0060A8                     u23130:
 14704                           
 14705                           ; BSR set to: 1
 14706                           ;miwi_mesh.c: 4676: {
 14707                           ;miwi_mesh.c: 4677: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14708  0060A8  0101               	movlb	1	; () banked
 14709  0060AA  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14710                           
 14711                           ; BSR set to: 1
 14712                           ;miwi_mesh.c: 4678: return 0;
 14713  0060AC  0E00               	movlw	0
 14714                           
 14715                           ; BSR set to: 1
 14716  0060AE  0012               	return	
 14717  0060B0                     l20251:
 14718                           
 14719                           ; BSR set to: 1
 14720                           ;miwi_mesh.c: 4679: }
 14721                           ;miwi_mesh.c: 4680: }
 14722                           ;miwi_mesh.c: 4681: }
 14723                           ;miwi_mesh.c: 4682: return 1;
 14724  0060B0  0E01               	movlw	1
 14725                           
 14726                           ; BSR set to: 1
 14727  0060B2  0012               	return	
 14728  0060B4                     l20255:
 14729                           
 14730                           ;miwi_mesh.c: 4740: }
 14731                           ;miwi_mesh.c: 4741: }
 14732                           ;miwi_mesh.c: 4743: TxBuffer[0] = 4;
 14733  0060B4  0E04               	movlw	4
 14734  0060B6  0102               	movlb	2	; () banked
 14735  0060B8  6FA6               	movwf	_TxBuffer& (0+255),b
 14736                           
 14737                           ; BSR set to: 2
 14738                           ;miwi_mesh.c: 4744: TxBuffer[1] = MiWiFrameControl;
 14739  0060BA  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14740                           
 14741                           ; BSR set to: 2
 14742                           ;miwi_mesh.c: 4745: TxBuffer[2] = myPANID.v[0];
 14743  0060BE  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 14744                           
 14745                           ; BSR set to: 2
 14746                           ;miwi_mesh.c: 4746: TxBuffer[3] = myPANID.v[1];
 14747  0060C2  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 14748                           
 14749                           ; BSR set to: 2
 14750                           ;miwi_mesh.c: 4747: TxBuffer[4] = DestAddress[0];
 14751  0060C6  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14752  0060CA  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14753  0060CE  50DF               	movf	indf2,w,c
 14754  0060D0  0102               	movlb	2	; () banked
 14755  0060D2  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 14756                           
 14757                           ; BSR set to: 2
 14758                           ;miwi_mesh.c: 4748: TxBuffer[5] = DestAddress[1];
 14759  0060D4  0101               	movlb	1	; () banked
 14760  0060D6  EE20 F001          	lfsr	2,1
 14761  0060DA  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14762  0060DC  26D9               	addwf	fsr2l,f,c
 14763  0060DE  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14764  0060E0  22DA               	addwfc	fsr2h,f,c
 14765  0060E2  50DF               	movf	indf2,w,c
 14766  0060E4  0102               	movlb	2	; () banked
 14767  0060E6  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 14768                           
 14769                           ; BSR set to: 2
 14770                           ;miwi_mesh.c: 4749: TxBuffer[6] = myPANID.v[0];
 14771  0060E8  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14772                           
 14773                           ; BSR set to: 2
 14774                           ;miwi_mesh.c: 4750: TxBuffer[7] = myPANID.v[1];
 14775  0060EC  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14776                           
 14777                           ; BSR set to: 2
 14778                           ;miwi_mesh.c: 4751: TxBuffer[8] = myShortAddress.v[0];
 14779  0060F0  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14780                           
 14781                           ; BSR set to: 2
 14782                           ;miwi_mesh.c: 4752: TxBuffer[9] = myShortAddress.v[1];
 14783  0060F4  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14784                           
 14785                           ; BSR set to: 2
 14786                           ;miwi_mesh.c: 4753: TxBuffer[10] = MiWiSeqNum++;
 14787  0060F8  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14788                           
 14789                           ; BSR set to: 2
 14790  0060FC  0101               	movlb	1	; () banked
 14791  0060FE  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14792                           
 14793                           ; BSR set to: 1
 14794                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[0] = DestAddress[0];
 14795  006100  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14796  006104  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14797  006108  50DF               	movf	indf2,w,c
 14798  00610A  0101               	movlb	1	; () banked
 14799  00610C  6FB3               	movwf	_AcknowledgementAddr& (0+255),b
 14800                           
 14801                           ; BSR set to: 1
 14802                           ;miwi_mesh.c: 4756: AcknowledgementAddr.v[1] = DestAddress[1];
 14803  00610E  0101               	movlb	1	; () banked
 14804  006110  EE20 F001          	lfsr	2,1
 14805  006114  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14806  006116  26D9               	addwf	fsr2l,f,c
 14807  006118  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14808  00611A  22DA               	addwfc	fsr2h,f,c
 14809  00611C  50DF               	movf	indf2,w,c
 14810  00611E  0101               	movlb	1	; () banked
 14811  006120  6FB4               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 14812                           
 14813                           ; BSR set to: 1
 14814                           ;miwi_mesh.c: 4759: tempShortAddress.v[0] = DestAddress[0];
 14815  006122  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14816  006126  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14817  00612A  50DF               	movf	indf2,w,c
 14818  00612C  0101               	movlb	1	; () banked
 14819  00612E  6FF4               	movwf	_tempShortAddress& (0+255),b
 14820                           
 14821                           ; BSR set to: 1
 14822                           ;miwi_mesh.c: 4760: tempShortAddress.v[1] = DestAddress[1];
 14823  006130  0101               	movlb	1	; () banked
 14824  006132  EE20 F001          	lfsr	2,1
 14825  006136  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14826  006138  26D9               	addwf	fsr2l,f,c
 14827  00613A  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14828  00613C  22DA               	addwfc	fsr2h,f,c
 14829  00613E  50DF               	movf	indf2,w,c
 14830  006140  0101               	movlb	1	; () banked
 14831  006142  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 14832                           
 14833                           ; BSR set to: 1
 14834                           ;miwi_mesh.c: 4761: if( 0 == RouteMessage(myPANID, tempShortAddress, SecEn) )
 14835  006144  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 14836  006148  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 14837  00614C  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 14838  006150  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 14839  006154  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 14840  006158  EC09  F024         	call	_RouteMessage	;wreg free
 14841  00615C  0900               	iorlw	0
 14842  00615E  A4D8               	btfss	status,2,c
 14843  006160  D004               	goto	l1033
 14844                           
 14845                           ;miwi_mesh.c: 4762: {
 14846                           ;miwi_mesh.c: 4763: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14847  006162  0101               	movlb	1	; () banked
 14848  006164  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14849                           
 14850                           ; BSR set to: 1
 14851                           ;miwi_mesh.c: 4764: return 0;
 14852  006166  0E00               	movlw	0
 14853                           
 14854                           ; BSR set to: 1
 14855  006168  0012               	return	
 14856  00616A                     l1033:
 14857                           
 14858                           ;miwi_mesh.c: 4766: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14859  00616A  0101               	movlb	1	; () banked
 14860  00616C  A7B5               	btfss	_MiWiStateMachine& (0+255),3,b
 14861  00616E  D05B               	goto	l20319
 14862                           
 14863                           ; BSR set to: 1
 14864                           ;miwi_mesh.c: 4767: {
 14865                           ;miwi_mesh.c: 4768: MIWI_TICK t1, t2;
 14866                           ;miwi_mesh.c: 4769: t1 = MiWi_TickGet();
 14867  006170  EC80  F058         	call	_MiWi_TickGet	;wreg free
 14868  006174  C100  F3CC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2749
 14869  006178  C101  F3CD         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2749+1
 14870  00617C  C102  F3CE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2749+2
 14871  006180  C103  F3CF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2749+3
 14872  006184                     l20299:
 14873                           
 14874                           ;miwi_mesh.c: 4771: {
 14875                           ;miwi_mesh.c: 4772: if( MiApp_MessageAvailable())
 14876  006184  ECCC  F05D         	call	_MiApp_MessageAvailable	;wreg free
 14877  006188  0900               	iorlw	0
 14878  00618A  A4D8               	btfss	status,2,c
 14879                           
 14880                           ;miwi_mesh.c: 4773: {
 14881                           ;miwi_mesh.c: 4774: MiApp_DiscardMessage();
 14882  00618C  ECD5  F05D         	call	_MiApp_DiscardMessage	;wreg free
 14883                           
 14884                           ;miwi_mesh.c: 4775: }
 14885                           ;miwi_mesh.c: 4776: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14886  006190  0101               	movlb	1	; () banked
 14887  006192  B7B5               	btfsc	_MiWiStateMachine& (0+255),3,b
 14888  006194  D002               	goto	l20309
 14889                           
 14890                           ; BSR set to: 1
 14891                           ;miwi_mesh.c: 4777: {
 14892                           ;miwi_mesh.c: 4778: return 1;
 14893  006196  0E01               	movlw	1
 14894                           
 14895                           ; BSR set to: 1
 14896  006198  0012               	return	
 14897  00619A                     l20309:
 14898                           
 14899                           ; BSR set to: 1
 14900                           ;miwi_mesh.c: 4779: }
 14901                           ;miwi_mesh.c: 4780: t2 = MiWi_TickGet();
 14902  00619A  EC80  F058         	call	_MiWi_TickGet	;wreg free
 14903  00619E  C100  F3D0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2760
 14904  0061A2  C101  F3D1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2760+1
 14905  0061A6  C102  F3D2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2760+2
 14906  0061AA  C103  F3D3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2760+3
 14907                           
 14908                           ;miwi_mesh.c: 4781: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 14909  0061AE  C3CC  F181         	movff	MiApp_UnicastAddress@t1_2749,??_MiApp_UnicastAddress
 14910  0061B2  C3CD  F182         	movff	MiApp_UnicastAddress@t1_2749+1,??_MiApp_UnicastAddress+1
 14911  0061B6  C3CE  F183         	movff	MiApp_UnicastAddress@t1_2749+2,??_MiApp_UnicastAddress+2
 14912  0061BA  C3CF  F184         	movff	MiApp_UnicastAddress@t1_2749+3,??_MiApp_UnicastAddress+3
 14913  0061BE  0101               	movlb	1	; () banked
 14914  0061C0  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 14915  0061C2  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14916  0061C4  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14917  0061C6  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14918  0061C8  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 14919  0061CA  0E00               	movlw	0
 14920  0061CC  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14921  0061CE  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14922  0061D0  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14923  0061D2  0103               	movlb	3	; () banked
 14924  0061D4  51D0               	movf	MiApp_UnicastAddress@t2_2760& (0+255),w,b
 14925  0061D6  0101               	movlb	1	; () banked
 14926  0061D8  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 14927  0061DA  0101               	movlb	1	; () banked
 14928  0061DC  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 14929  0061DE  0103               	movlb	3	; () banked
 14930  0061E0  51D1               	movf	(MiApp_UnicastAddress@t2_2760+1)& (0+255),w,b
 14931  0061E2  0101               	movlb	1	; () banked
 14932  0061E4  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 14933  0061E6  0101               	movlb	1	; () banked
 14934  0061E8  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 14935  0061EA  0103               	movlb	3	; () banked
 14936  0061EC  51D2               	movf	(MiApp_UnicastAddress@t2_2760+2)& (0+255),w,b
 14937  0061EE  0101               	movlb	1	; () banked
 14938  0061F0  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 14939  0061F2  0101               	movlb	1	; () banked
 14940  0061F4  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 14941  0061F6  0103               	movlb	3	; () banked
 14942  0061F8  51D3               	movf	(MiApp_UnicastAddress@t2_2760+3)& (0+255),w,b
 14943  0061FA  0101               	movlb	1	; () banked
 14944  0061FC  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 14945  0061FE  0101               	movlb	1	; () banked
 14946  006200  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 14947  006202  0101               	movlb	1	; () banked
 14948  006204  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 14949  006206  E10B               	bnz	u23180
 14950  006208  0E21               	movlw	33
 14951  00620A  0101               	movlb	1	; () banked
 14952  00620C  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 14953  00620E  0EA1               	movlw	161
 14954  006210  0101               	movlb	1	; () banked
 14955  006212  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 14956  006214  0E07               	movlw	7
 14957  006216  0101               	movlb	1	; () banked
 14958  006218  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 14959  00621A  A0D8               	btfss	status,0,c
 14960  00621C  D7B3               	goto	l20299
 14961  00621E                     u23180:
 14962                           
 14963                           ; BSR set to: 1
 14964                           ;miwi_mesh.c: 4782: {
 14965                           ;miwi_mesh.c: 4783: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14966  00621E  0101               	movlb	1	; () banked
 14967  006220  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14968                           
 14969                           ; BSR set to: 1
 14970                           ;miwi_mesh.c: 4784: return 0;
 14971  006222  0E00               	movlw	0
 14972                           
 14973                           ; BSR set to: 1
 14974  006224  0012               	return	
 14975  006226                     l20319:
 14976                           
 14977                           ; BSR set to: 1
 14978                           ;miwi_mesh.c: 4785: }
 14979                           ;miwi_mesh.c: 4786: }
 14980                           ;miwi_mesh.c: 4787: }
 14981                           ;miwi_mesh.c: 4788: return 1;
 14982  006226  0E01               	movlw	1
 14983  006228  0012               	return	
 14984  00622A                     __end_of_MiApp_UnicastAddress:
 14985                           	opt stack 0
 14986                           tblptru	equ	0xFF8
 14987                           tblptrh	equ	0xFF7
 14988                           tblptrl	equ	0xFF6
 14989                           tablat	equ	0xFF5
 14990                           prodh	equ	0xFF4
 14991                           prodl	equ	0xFF3
 14992                           intcon	equ	0xFF2
 14993                           intcon2	equ	0xFF1
 14994                           intcon3	equ	0xFF0
 14995                           indf0	equ	0xFEF
 14996                           postinc0	equ	0xFEE
 14997                           plusw0	equ	0xFEB
 14998                           fsr0h	equ	0xFEA
 14999                           fsr0l	equ	0xFE9
 15000                           wreg	equ	0xFE8
 15001                           indf1	equ	0xFE7
 15002                           postdec1	equ	0xFE5
 15003                           fsr1h	equ	0xFE2
 15004                           fsr1l	equ	0xFE1
 15005                           indf2	equ	0xFDF
 15006                           postinc2	equ	0xFDE
 15007                           postdec2	equ	0xFDD
 15008                           plusw2	equ	0xFDB
 15009                           fsr2h	equ	0xFDA
 15010                           fsr2l	equ	0xFD9
 15011                           status	equ	0xFD8
 15012                           
 15013 ;; *************** function _MiApp_MessageAvailable *****************
 15014 ;; Defined at:
 15015 ;;		line 4237 in file "src/miwi/miwi_mesh.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;		None
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;		None
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  1    wreg      unsigned char 
 15022 ;; Registers used:
 15023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15033 ;;Total ram usage:        0 bytes
 15034 ;; Hardware stack levels used:    1
 15035 ;; Hardware stack levels required when called:   26
 15036 ;; This function calls:
 15037 ;;		_MiWiTasks
 15038 ;; This function is called by:
 15039 ;;		_MiApp_UnicastAddress
 15040 ;;		_main
 15041 ;;		_MiApp_SearchConnection
 15042 ;;		_MiApp_EstablishConnection
 15043 ;;		_MiApp_UnicastConnection
 15044 ;;		_do_NETWORK_REGISTER
 15045 ;;		_do_POWER_TEST
 15046 ;;		_do_PING
 15047 ;;		_do_UPDATE
 15048 ;; This function uses a non-reentrant model
 15049 ;;
 15050                           
 15051                           	psect	text41
 15052  00BB98                     __ptext41:
 15053                           	opt stack 0
 15054  00BB98                     _MiApp_MessageAvailable:
 15055                           	opt stack 3
 15056                           
 15057                           ;miwi_mesh.c: 4239: MiWiTasks();
 15058                           
 15059                           ;incstack = 0
 15060  00BB98  ECE3  F011         	call	_MiWiTasks	;wreg free
 15061                           
 15062                           ;miwi_mesh.c: 4240: return MiWiStateMachine.bits.RxHasUserData;
 15063  00BB9C  0101               	movlb	1	; () banked
 15064  00BB9E  A5B5               	btfss	_MiWiStateMachine& (0+255),2,b
 15065  00BBA0  D002               	goto	u21760
 15066  00BBA2  0E01               	movlw	1
 15067  00BBA4  0012               	return	
 15068  00BBA6                     u21760:
 15069  00BBA6  0E00               	movlw	0
 15070  00BBA8  0012               	return	
 15071  00BBAA                     __end_of_MiApp_MessageAvailable:
 15072                           	opt stack 0
 15073                           tblptru	equ	0xFF8
 15074                           tblptrh	equ	0xFF7
 15075                           tblptrl	equ	0xFF6
 15076                           tablat	equ	0xFF5
 15077                           prodh	equ	0xFF4
 15078                           prodl	equ	0xFF3
 15079                           intcon	equ	0xFF2
 15080                           intcon2	equ	0xFF1
 15081                           intcon3	equ	0xFF0
 15082                           indf0	equ	0xFEF
 15083                           postinc0	equ	0xFEE
 15084                           plusw0	equ	0xFEB
 15085                           fsr0h	equ	0xFEA
 15086                           fsr0l	equ	0xFE9
 15087                           wreg	equ	0xFE8
 15088                           indf1	equ	0xFE7
 15089                           postdec1	equ	0xFE5
 15090                           fsr1h	equ	0xFE2
 15091                           fsr1l	equ	0xFE1
 15092                           indf2	equ	0xFDF
 15093                           postinc2	equ	0xFDE
 15094                           postdec2	equ	0xFDD
 15095                           plusw2	equ	0xFDB
 15096                           fsr2h	equ	0xFDA
 15097                           fsr2l	equ	0xFD9
 15098                           status	equ	0xFD8
 15099                           
 15100 ;; *************** function _MiWiTasks *****************
 15101 ;; Defined at:
 15102 ;;		line 283 in file "src/miwi/miwi_mesh.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;		None
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;  j               2  105[BANK1 ] unsigned int 
 15107 ;;  j               1  113[BANK1 ] unsigned char 
 15108 ;;  j               1  123[BANK1 ] unsigned char 
 15109 ;;  t2              4   90[BANK1 ] struct _MIWI_TICK
 15110 ;;  t1              4   86[BANK1 ] struct _MIWI_TICK
 15111 ;;  jitter          1   98[BANK1 ] unsigned char 
 15112 ;;  CoordAddress    2   94[BANK1 ] struct .
 15113 ;;  j               1  114[BANK1 ] unsigned char 
 15114 ;;  entry           1   97[BANK1 ] unsigned char 
 15115 ;;  CapacityByte    1  112[BANK1 ] struct .
 15116 ;;  cIndex          1  107[BANK1 ] unsigned char 
 15117 ;;  handle          1  119[BANK1 ] unsigned char 
 15118 ;;  associateSta    1   99[BANK1 ] unsigned char 
 15119 ;;  entry           1  122[BANK1 ] unsigned char 
 15120 ;;  coordinatorN    1  104[BANK1 ] unsigned char 
 15121 ;;  mask            1   96[BANK1 ] unsigned char 
 15122 ;;  rxIndex         1  111[BANK1 ] unsigned char 
 15123 ;;  sourceShortA    2  120[BANK1 ] struct .
 15124 ;;  sourcePANID     2  117[BANK1 ] struct .
 15125 ;;  destShortAdd    2  115[BANK1 ] struct .
 15126 ;;  destPANID       2  109[BANK1 ] struct .
 15127 ;;  j               1  108[BANK1 ] unsigned char 
 15128 ;;  t1              4  100[BANK1 ] struct _MIWI_TICK
 15129 ;;  t2              4   82[BANK1 ] struct _MIWI_TICK
 15130 ;;  i               1  124[BANK1 ] unsigned char 
 15131 ;; Return value:  Size  Location     Type
 15132 ;;		None               void
 15133 ;; Registers used:
 15134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15141 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15142 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15143 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15144 ;;Total ram usage:       51 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:   25
 15147 ;; This function calls:
 15148 ;;		_AddNodeToNetworkTable
 15149 ;;		_BroadcastJitter
 15150 ;;		_MiMAC_DiscardPacket
 15151 ;;		_MiMAC_ReceivedPacket
 15152 ;;		_MiMAC_SendPacket
 15153 ;;		_MiMAC_SetAltAddress
 15154 ;;		_MiWi_TickGet
 15155 ;;		_RouteMessage
 15156 ;;		_SearchForLongAddress
 15157 ;;		_SearchForShortAddress
 15158 ;;		_SendBeacon
 15159 ;;		_SendMACPacket
 15160 ;;		_UnicastShortAddress
 15161 ;;		_findNextNetworkEntry
 15162 ;; This function is called by:
 15163 ;;		_MiApp_MessageAvailable
 15164 ;;		_main
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           	psect	text42
 15169  0023C6                     __ptext42:
 15170                           	opt stack 0
 15171  0023C6                     _MiWiTasks:
 15172                           	opt stack 5
 15173                           
 15174                           ;miwi_mesh.c: 285: uint8_t i;
 15175                           ;miwi_mesh.c: 286: MIWI_TICK t1, t2;
 15176                           ;miwi_mesh.c: 288: if( MiMAC_ReceivedPacket() )
 15177                           
 15178                           ; BSR set to: 1
 15179                           ;incstack = 0
 15180  0023C6  EC84  F02C         	call	_MiMAC_ReceivedPacket	;wreg free
 15181  0023CA  0900               	iorlw	0
 15182  0023CC  B4D8               	btfsc	status,2,c
 15183  0023CE  EF88  F01D         	goto	l18711
 15184                           
 15185                           ;miwi_mesh.c: 289: {
 15186                           ;miwi_mesh.c: 290: if( MiWiStateMachine.bits.RxHasUserData )
 15187  0023D2  0101               	movlb	1	; () banked
 15188  0023D4  B5B5               	btfsc	_MiWiStateMachine& (0+255),2,b
 15189  0023D6  0012               	return	
 15190                           
 15191                           ; BSR set to: 1
 15192                           ;miwi_mesh.c: 293: }
 15193                           ;miwi_mesh.c: 295: rxMessage.flags.Val = 0;
 15194                           
 15195                           ; BSR set to: 1
 15196                           
 15197                           ; BSR set to: 1
 15198                           ;miwi_mesh.c: 291: {
 15199                           ;miwi_mesh.c: 292: return;
 15200  0023D8  0E00               	movlw	0
 15201  0023DA  0101               	movlb	1	; () banked
 15202  0023DC  6F90               	movwf	_rxMessage& (0+255),b
 15203                           
 15204                           ; BSR set to: 1
 15205                           ;miwi_mesh.c: 296: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 15206  0023DE  0101               	movlb	1	; () banked
 15207  0023E0  A59A               	btfss	_MACRxPacket& (0+255),2,b
 15208  0023E2  D004               	goto	u19900
 15209  0023E4  0101               	movlb	1	; () banked
 15210  0023E6  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15211  0023E8  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15212  0023EA  D002               	goto	u19908
 15213  0023EC                     u19900:
 15214  0023EC  0101               	movlb	1	; () banked
 15215  0023EE  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15216  0023F0                     u19908:
 15217  0023F0  0101               	movlb	1	; () banked
 15218  0023F2  5190               	movf	_rxMessage& (0+255),w,b
 15219  0023F4  0101               	movlb	1	; () banked
 15220  0023F6  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15221  0023F8  0BFC               	andlw	-4
 15222  0023FA  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15223  0023FC  0101               	movlb	1	; () banked
 15224  0023FE  6F90               	movwf	_rxMessage& (0+255),b
 15225                           
 15226                           ; BSR set to: 1
 15227                           ;miwi_mesh.c: 297: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15228  002400  0101               	movlb	1	; () banked
 15229  002402  A79A               	btfss	_MACRxPacket& (0+255),3,b
 15230  002404  D003               	bra	u19915
 15231  002406  0101               	movlb	1	; () banked
 15232  002408  8790               	bsf	_rxMessage& (0+255),3,b
 15233  00240A  D002               	bra	u19917
 15234  00240C                     u19915:
 15235  00240C  0101               	movlb	1	; () banked
 15236  00240E  9790               	bcf	_rxMessage& (0+255),3,b
 15237  002410                     u19917:
 15238                           
 15239                           ; BSR set to: 1
 15240                           ;miwi_mesh.c: 298: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 15241  002410  0101               	movlb	1	; () banked
 15242  002412  519A               	movf	_MACRxPacket& (0+255),w,b
 15243  002414  0B03               	andlw	3
 15244  002416  06E8               	decf	wreg,f,c
 15245  002418  A4D8               	btfss	status,2,c
 15246  00241A  D004               	goto	u19920
 15247  00241C  0101               	movlb	1	; () banked
 15248  00241E  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15249  002420  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15250  002422  D002               	goto	u19938
 15251  002424                     u19920:
 15252  002424  0101               	movlb	1	; () banked
 15253  002426  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15254  002428                     u19938:
 15255  002428  0101               	movlb	1	; () banked
 15256  00242A  3B4A               	swapf	??_MiWiTasks& (0+255),f,b
 15257  00242C  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 15258  00242E  0101               	movlb	1	; () banked
 15259  002430  5190               	movf	_rxMessage& (0+255),w,b
 15260  002432  0101               	movlb	1	; () banked
 15261  002434  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15262  002436  0BDF               	andlw	-33
 15263  002438  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15264  00243A  0101               	movlb	1	; () banked
 15265  00243C  6F90               	movwf	_rxMessage& (0+255),b
 15266                           
 15267                           ; BSR set to: 1
 15268                           ;miwi_mesh.c: 299: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 15269  00243E  0101               	movlb	1	; () banked
 15270  002440  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 15271  002442  D003               	bra	u19945
 15272  002444  0101               	movlb	1	; () banked
 15273  002446  8D90               	bsf	_rxMessage& (0+255),6,b
 15274  002448  D002               	bra	u19947
 15275  00244A                     u19945:
 15276  00244A  0101               	movlb	1	; () banked
 15277  00244C  9D90               	bcf	_rxMessage& (0+255),6,b
 15278  00244E                     u19947:
 15279                           
 15280                           ; BSR set to: 1
 15281                           ;miwi_mesh.c: 300: if( MACRxPacket.flags.bits.sourcePrsnt )
 15282  00244E  0101               	movlb	1	; () banked
 15283  002450  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 15284  002452  D006               	goto	l17973
 15285                           
 15286                           ; BSR set to: 1
 15287                           ;miwi_mesh.c: 301: {
 15288                           ;miwi_mesh.c: 305: rxMessage.flags.bits.altSrcAddr = 1;
 15289  002454  0101               	movlb	1	; () banked
 15290  002456  8F90               	bsf	_rxMessage& (0+255),7,b
 15291                           
 15292                           ; BSR set to: 1
 15293                           ;miwi_mesh.c: 307: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 15294  002458  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 15295  00245C  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 15296  002460                     l17973:
 15297                           
 15298                           ; BSR set to: 1
 15299                           ;miwi_mesh.c: 308: }
 15300                           ;miwi_mesh.c: 312: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 15301  002460  C1A1  F199         	movff	_MACRxPacket+7,_rxMessage+9
 15302                           
 15303                           ; BSR set to: 1
 15304                           ;miwi_mesh.c: 313: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 15305  002464  C1A0  F198         	movff	_MACRxPacket+6,_rxMessage+8
 15306                           
 15307                           ; BSR set to: 1
 15308                           ;miwi_mesh.c: 315: MiWiStateMachine.bits.RxHasUserData = 0;
 15309  002468  0101               	movlb	1	; () banked
 15310  00246A  95B5               	bcf	_MiWiStateMachine& (0+255),2,b
 15311                           
 15312                           ;miwi_mesh.c: 318: switch(MACRxPacket.flags.bits.packetType)
 15313  00246C  EF76  F01D         	goto	l18707
 15314  002470                     l17979:
 15315                           
 15316                           ; BSR set to: 1
 15317                           ;miwi_mesh.c: 348: if( MACRxPacket.PayloadLen < 10 )
 15318  002470  0E0A               	movlw	10
 15319  002472  0101               	movlb	1	; () banked
 15320  002474  619F               	cpfslt	(_MACRxPacket+5)& (0+255),b
 15321  002476  D002               	goto	l17983
 15322  002478  EF84  F01D         	goto	l641
 15323  00247C                     l17983:
 15324                           
 15325                           ; BSR set to: 1
 15326                           ;miwi_mesh.c: 351: }
 15327                           ;miwi_mesh.c: 354: destPANID.v[0] = MACRxPacket.Payload[2];
 15328  00247C  0101               	movlb	1	; () banked
 15329  00247E  EE20 F002          	lfsr	2,2
 15330  002482  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15331  002484  26D9               	addwf	fsr2l,f,c
 15332  002486  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15333  002488  22DA               	addwfc	fsr2h,f,c
 15334  00248A  50DF               	movf	indf2,w,c
 15335  00248C  0101               	movlb	1	; () banked
 15336  00248E  6F6D               	movwf	MiWiTasks@destPANID& (0+255),b
 15337                           
 15338                           ;miwi_mesh.c: 355: destPANID.v[1] = MACRxPacket.Payload[3];
 15339  002490  0101               	movlb	1	; () banked
 15340  002492  EE20 F003          	lfsr	2,3
 15341  002496  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15342  002498  26D9               	addwf	fsr2l,f,c
 15343  00249A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15344  00249C  22DA               	addwfc	fsr2h,f,c
 15345  00249E  50DF               	movf	indf2,w,c
 15346  0024A0  0101               	movlb	1	; () banked
 15347  0024A2  6F6E               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 15348                           
 15349                           ;miwi_mesh.c: 356: destShortAddress.v[0] = MACRxPacket.Payload[4];
 15350  0024A4  0101               	movlb	1	; () banked
 15351  0024A6  EE20 F004          	lfsr	2,4
 15352  0024AA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15353  0024AC  26D9               	addwf	fsr2l,f,c
 15354  0024AE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15355  0024B0  22DA               	addwfc	fsr2h,f,c
 15356  0024B2  50DF               	movf	indf2,w,c
 15357  0024B4  0101               	movlb	1	; () banked
 15358  0024B6  6F73               	movwf	MiWiTasks@destShortAddress& (0+255),b
 15359                           
 15360                           ;miwi_mesh.c: 357: destShortAddress.v[1] = MACRxPacket.Payload[5];
 15361  0024B8  0101               	movlb	1	; () banked
 15362  0024BA  EE20 F005          	lfsr	2,5
 15363  0024BE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15364  0024C0  26D9               	addwf	fsr2l,f,c
 15365  0024C2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15366  0024C4  22DA               	addwfc	fsr2h,f,c
 15367  0024C6  50DF               	movf	indf2,w,c
 15368  0024C8  0101               	movlb	1	; () banked
 15369  0024CA  6F74               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 15370                           
 15371                           ;miwi_mesh.c: 358: sourcePANID.v[0] = MACRxPacket.Payload[6];
 15372  0024CC  0101               	movlb	1	; () banked
 15373  0024CE  EE20 F006          	lfsr	2,6
 15374  0024D2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15375  0024D4  26D9               	addwf	fsr2l,f,c
 15376  0024D6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15377  0024D8  22DA               	addwfc	fsr2h,f,c
 15378  0024DA  50DF               	movf	indf2,w,c
 15379  0024DC  0101               	movlb	1	; () banked
 15380  0024DE  6F75               	movwf	MiWiTasks@sourcePANID& (0+255),b
 15381                           
 15382                           ;miwi_mesh.c: 359: sourcePANID.v[1] = MACRxPacket.Payload[7];
 15383  0024E0  0101               	movlb	1	; () banked
 15384  0024E2  EE20 F007          	lfsr	2,7
 15385  0024E6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15386  0024E8  26D9               	addwf	fsr2l,f,c
 15387  0024EA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15388  0024EC  22DA               	addwfc	fsr2h,f,c
 15389  0024EE  50DF               	movf	indf2,w,c
 15390  0024F0  0101               	movlb	1	; () banked
 15391  0024F2  6F76               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 15392                           
 15393                           ;miwi_mesh.c: 360: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 15394  0024F4  0101               	movlb	1	; () banked
 15395  0024F6  EE20 F008          	lfsr	2,8
 15396  0024FA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15397  0024FC  26D9               	addwf	fsr2l,f,c
 15398  0024FE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15399  002500  22DA               	addwfc	fsr2h,f,c
 15400  002502  50DF               	movf	indf2,w,c
 15401  002504  0101               	movlb	1	; () banked
 15402  002506  6F78               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 15403                           
 15404                           ;miwi_mesh.c: 361: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 15405  002508  0101               	movlb	1	; () banked
 15406  00250A  EE20 F009          	lfsr	2,9
 15407  00250E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15408  002510  26D9               	addwf	fsr2l,f,c
 15409  002512  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15410  002514  22DA               	addwfc	fsr2h,f,c
 15411  002516  50DF               	movf	indf2,w,c
 15412  002518  0101               	movlb	1	; () banked
 15413  00251A  6F79               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 15414                           
 15415                           ; BSR set to: 1
 15416                           ;miwi_mesh.c: 363: rxMessage.flags.Val = 0;
 15417  00251C  0E00               	movlw	0
 15418  00251E  0101               	movlb	1	; () banked
 15419  002520  6F90               	movwf	_rxMessage& (0+255),b
 15420                           
 15421                           ; BSR set to: 1
 15422                           ;miwi_mesh.c: 364: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15423  002522  0101               	movlb	1	; () banked
 15424  002524  A79A               	btfss	_MACRxPacket& (0+255),3,b
 15425  002526  D003               	bra	u19975
 15426  002528  0101               	movlb	1	; () banked
 15427  00252A  8790               	bsf	_rxMessage& (0+255),3,b
 15428  00252C  D002               	bra	u19977
 15429  00252E                     u19975:
 15430  00252E  0101               	movlb	1	; () banked
 15431  002530  9790               	bcf	_rxMessage& (0+255),3,b
 15432  002532                     u19977:
 15433                           
 15434                           ; BSR set to: 1
 15435                           ;miwi_mesh.c: 366: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 15436  002532  0101               	movlb	1	; () banked
 15437  002534  5190               	movf	_rxMessage& (0+255),w,b
 15438  002536  0B03               	andlw	3
 15439  002538  0900               	iorlw	0
 15440  00253A  A4D8               	btfss	status,2,c
 15441  00253C  D007               	goto	l17993
 15442                           
 15443                           ; BSR set to: 1
 15444  00253E  0101               	movlb	1	; () banked
 15445  002540  2973               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 15446  002542  E103               	bnz	u19991
 15447  002544  0101               	movlb	1	; () banked
 15448  002546  2974               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 15449  002548  A4D8               	btfss	status,2,c
 15450  00254A                     u19991:
 15451  00254A  D11C               	goto	l18067
 15452  00254C                     l17993:
 15453                           
 15454                           ; BSR set to: 1
 15455                           ;miwi_mesh.c: 367: {
 15456                           ;miwi_mesh.c: 369: if( sourceShortAddress.Val == myShortAddress.Val &&
 15457                           ;miwi_mesh.c: 370: sourcePANID.Val == myPANID.Val )
 15458  00254C  0101               	movlb	1	; () banked
 15459  00254E  51F2               	movf	_myShortAddress& (0+255),w,b
 15460  002550  0101               	movlb	1	; () banked
 15461  002552  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 15462  002554  E112               	bnz	l17999
 15463  002556  0101               	movlb	1	; () banked
 15464  002558  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15465  00255A  0101               	movlb	1	; () banked
 15466  00255C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15467  00255E  A4D8               	btfss	status,2,c
 15468  002560  D00C               	goto	l17999
 15469                           
 15470                           ; BSR set to: 1
 15471  002562  0101               	movlb	1	; () banked
 15472  002564  51F0               	movf	_myPANID& (0+255),w,b
 15473  002566  0101               	movlb	1	; () banked
 15474  002568  1975               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 15475  00256A  E107               	bnz	l17999
 15476  00256C  0101               	movlb	1	; () banked
 15477  00256E  51F1               	movf	(_myPANID+1)& (0+255),w,b
 15478  002570  0101               	movlb	1	; () banked
 15479  002572  1976               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 15480  002574  B4D8               	btfsc	status,2,c
 15481  002576  EF84  F01D         	goto	l641
 15482  00257A                     l17999:
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;miwi_mesh.c: 373: }
 15486                           ;miwi_mesh.c: 377: if(MACRxPacket.Payload[0]>1)
 15487  00257A  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15488  00257E  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15489  002582  0E01               	movlw	1
 15490  002584  64DF               	cpfsgt	indf2,c
 15491  002586  D041               	goto	l18019
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;miwi_mesh.c: 378: {
 15495                           ;miwi_mesh.c: 379: MACRxPacket.Payload[0]--;
 15496  002588  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15497  00258C  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15498  002590  06DF               	decf	indf2,f,c
 15499                           
 15500                           ; BSR set to: 1
 15501                           ;miwi_mesh.c: 380: {TxData = 0;};
 15502  002592  0E00               	movlw	0
 15503  002594  0101               	movlb	1	; () banked
 15504  002596  6FC6               	movwf	_TxData& (0+255),b
 15505                           
 15506                           ; BSR set to: 1
 15507                           ;miwi_mesh.c: 381: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 15508  002598  0E00               	movlw	0
 15509  00259A  0101               	movlb	1	; () banked
 15510  00259C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15511  00259E  D01A               	goto	l18013
 15512  0025A0                     l18007:
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;miwi_mesh.c: 382: {
 15516                           ;miwi_mesh.c: 383: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 15517  0025A0  0101               	movlb	1	; () banked
 15518  0025A2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15519  0025A4  0D01               	mullw	1
 15520  0025A6  50F3               	movf	prodl,w,c
 15521  0025A8  0101               	movlb	1	; () banked
 15522  0025AA  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 15523  0025AC  6ED9               	movwf	fsr2l,c
 15524  0025AE  50F4               	movf	prodh,w,c
 15525  0025B0  0101               	movlb	1	; () banked
 15526  0025B2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 15527  0025B4  6EDA               	movwf	fsr2h,c
 15528  0025B6  0101               	movlb	1	; () banked
 15529  0025B8  51C6               	movf	_TxData& (0+255),w,b
 15530  0025BA  0D01               	mullw	1
 15531  0025BC  0EA6               	movlw	low _TxBuffer
 15532  0025BE  24F3               	addwf	prodl,w,c
 15533  0025C0  6EE1               	movwf	fsr1l,c
 15534  0025C2  0E02               	movlw	high _TxBuffer
 15535  0025C4  20F4               	addwfc	prodh,w,c
 15536  0025C6  6EE2               	movwf	fsr1h,c
 15537  0025C8  CFDF FFE7          	movff	indf2,indf1
 15538                           
 15539                           ; BSR set to: 1
 15540  0025CC  0101               	movlb	1	; () banked
 15541  0025CE  2BC6               	incf	_TxData& (0+255),f,b
 15542                           
 15543                           ; BSR set to: 1
 15544  0025D0  0101               	movlb	1	; () banked
 15545  0025D2  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15546  0025D4                     l18013:
 15547                           
 15548                           ; BSR set to: 1
 15549  0025D4  0101               	movlb	1	; () banked
 15550  0025D6  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 15551  0025D8  0101               	movlb	1	; () banked
 15552  0025DA  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 15553  0025DC  A0D8               	btfss	status,0,c
 15554  0025DE  D7E0               	goto	l18007
 15555                           
 15556                           ; BSR set to: 1
 15557                           ;miwi_mesh.c: 384: }
 15558                           ;miwi_mesh.c: 386: MTP.flags.Val = MACRxPacket.flags.Val;
 15559  0025E0  C19A  F1AD         	movff	_MACRxPacket,_MTP
 15560                           
 15561                           ; BSR set to: 1
 15562                           ;miwi_mesh.c: 395: BroadcastJitter(20);
 15563  0025E4  0E14               	movlw	20
 15564  0025E6  ECBA  F051         	call	_BroadcastJitter
 15565                           
 15566                           ;miwi_mesh.c: 398: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15567  0025EA  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 15568  0025EE  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15569  0025F2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15570  0025F6  0EA6               	movlw	low _TxBuffer
 15571  0025F8  0101               	movlb	1	; () banked
 15572  0025FA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15573  0025FC  0E02               	movlw	high _TxBuffer
 15574  0025FE  0101               	movlb	1	; () banked
 15575  002600  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15576  002602  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15577  002606  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 15578  00260A                     l18019:
 15579                           
 15580                           ;miwi_mesh.c: 417: }
 15581                           ;miwi_mesh.c: 421: for(i = 0; i < 4; i++)
 15582  00260A  0E00               	movlw	0
 15583  00260C  0101               	movlb	1	; () banked
 15584  00260E  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15585  002610                     l18021:
 15586                           
 15587                           ; BSR set to: 1
 15588  002610  0E03               	movlw	3
 15589  002612  0101               	movlb	1	; () banked
 15590  002614  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15591  002616  D001               	goto	l18025
 15592  002618  D03D               	goto	l18037
 15593  00261A                     l18025:
 15594                           
 15595                           ; BSR set to: 1
 15596                           ;miwi_mesh.c: 422: {
 15597                           ;miwi_mesh.c: 423: if( BroadcastRecords[i].RxCounter &&
 15598                           ;miwi_mesh.c: 424: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 15599                           ;miwi_mesh.c: 425: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 15600  00261A  0101               	movlb	1	; () banked
 15601  00261C  517C               	movf	MiWiTasks@i& (0+255),w,b
 15602  00261E  0D08               	mullw	8
 15603  002620  0E03               	movlw	3
 15604  002622  26F3               	addwf	prodl,f,c
 15605  002624  0E00               	movlw	0
 15606  002626  22F4               	addwfc	prodh,f,c
 15607  002628  0E28               	movlw	low _BroadcastRecords
 15608  00262A  24F3               	addwf	prodl,w,c
 15609  00262C  6ED9               	movwf	fsr2l,c
 15610  00262E  0E02               	movlw	high _BroadcastRecords
 15611  002630  20F4               	addwfc	prodh,w,c
 15612  002632  6EDA               	movwf	fsr2h,c
 15613  002634  50DF               	movf	indf2,w,c
 15614  002636  B4D8               	btfsc	status,2,c
 15615  002638  D02A               	goto	l18033
 15616                           
 15617                           ; BSR set to: 1
 15618  00263A  0101               	movlb	1	; () banked
 15619  00263C  517C               	movf	MiWiTasks@i& (0+255),w,b
 15620  00263E  0D08               	mullw	8
 15621  002640  0E28               	movlw	low _BroadcastRecords
 15622  002642  24F3               	addwf	prodl,w,c
 15623  002644  6ED9               	movwf	fsr2l,c
 15624  002646  0E02               	movlw	high _BroadcastRecords
 15625  002648  20F4               	addwfc	prodh,w,c
 15626  00264A  6EDA               	movwf	fsr2h,c
 15627  00264C  0101               	movlb	1	; () banked
 15628  00264E  5178               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 15629  002650  18DE               	xorwf	postinc2,w,c
 15630  002652  E11D               	bnz	l18033
 15631  002654  0101               	movlb	1	; () banked
 15632  002656  5179               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15633  002658  18DE               	xorwf	postinc2,w,c
 15634  00265A  A4D8               	btfss	status,2,c
 15635  00265C  D018               	goto	l18033
 15636                           
 15637                           ; BSR set to: 1
 15638  00265E  0101               	movlb	1	; () banked
 15639  002660  EE20 F00A          	lfsr	2,10
 15640  002664  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15641  002666  26D9               	addwf	fsr2l,f,c
 15642  002668  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15643  00266A  22DA               	addwfc	fsr2h,f,c
 15644  00266C  0101               	movlb	1	; () banked
 15645  00266E  517C               	movf	MiWiTasks@i& (0+255),w,b
 15646  002670  0D08               	mullw	8
 15647  002672  0E02               	movlw	2
 15648  002674  26F3               	addwf	prodl,f,c
 15649  002676  0E00               	movlw	0
 15650  002678  22F4               	addwfc	prodh,f,c
 15651  00267A  0E28               	movlw	low _BroadcastRecords
 15652  00267C  24F3               	addwf	prodl,w,c
 15653  00267E  6EE1               	movwf	fsr1l,c
 15654  002680  0E02               	movlw	high _BroadcastRecords
 15655  002682  20F4               	addwfc	prodh,w,c
 15656  002684  6EE2               	movwf	fsr1h,c
 15657  002686  50DE               	movf	postinc2,w,c
 15658  002688  18E6               	xorwf	postinc1,w,c
 15659  00268A  B4D8               	btfsc	status,2,c
 15660  00268C  D003               	goto	l18037
 15661  00268E                     l18033:
 15662                           
 15663                           ; BSR set to: 1
 15664  00268E  0101               	movlb	1	; () banked
 15665  002690  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15666  002692  D7BE               	goto	l18021
 15667  002694                     l18037:
 15668                           
 15669                           ; BSR set to: 1
 15670                           ;miwi_mesh.c: 428: }
 15671                           ;miwi_mesh.c: 429: }
 15672                           ;miwi_mesh.c: 432: if( i < 4 )
 15673  002694  0E04               	movlw	4
 15674  002696  0101               	movlb	1	; () banked
 15675  002698  617C               	cpfslt	MiWiTasks@i& (0+255),b
 15676  00269A  D002               	goto	l18041
 15677  00269C  EF84  F01D         	goto	l641
 15678  0026A0                     l18041:
 15679                           
 15680                           ; BSR set to: 1
 15681                           ;miwi_mesh.c: 438: }
 15682                           ;miwi_mesh.c: 442: for(i = 0; i < 4; i++)
 15683  0026A0  0E00               	movlw	0
 15684  0026A2  0101               	movlb	1	; () banked
 15685  0026A4  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15686  0026A6                     l18043:
 15687                           
 15688                           ; BSR set to: 1
 15689  0026A6  0E03               	movlw	3
 15690  0026A8  0101               	movlb	1	; () banked
 15691  0026AA  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15692  0026AC  D001               	goto	l18047
 15693  0026AE  D013               	goto	l18055
 15694  0026B0                     l18047:
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;miwi_mesh.c: 443: {
 15698                           ;miwi_mesh.c: 444: if( BroadcastRecords[i].RxCounter == 0 )
 15699  0026B0  0101               	movlb	1	; () banked
 15700  0026B2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15701  0026B4  0D08               	mullw	8
 15702  0026B6  0E03               	movlw	3
 15703  0026B8  26F3               	addwf	prodl,f,c
 15704  0026BA  0E00               	movlw	0
 15705  0026BC  22F4               	addwfc	prodh,f,c
 15706  0026BE  0E28               	movlw	low _BroadcastRecords
 15707  0026C0  24F3               	addwf	prodl,w,c
 15708  0026C2  6ED9               	movwf	fsr2l,c
 15709  0026C4  0E02               	movlw	high _BroadcastRecords
 15710  0026C6  20F4               	addwfc	prodh,w,c
 15711  0026C8  6EDA               	movwf	fsr2h,c
 15712  0026CA  50DF               	movf	indf2,w,c
 15713  0026CC  B4D8               	btfsc	status,2,c
 15714  0026CE  D003               	goto	l18055
 15715                           
 15716                           ; BSR set to: 1
 15717                           
 15718                           ; BSR set to: 1
 15719                           
 15720                           ; BSR set to: 1
 15721                           ;miwi_mesh.c: 445: {
 15722                           ;miwi_mesh.c: 446: break;
 15723  0026D0  0101               	movlb	1	; () banked
 15724  0026D2  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15725  0026D4  D7E8               	goto	l18043
 15726  0026D6                     l18055:
 15727                           
 15728                           ; BSR set to: 1
 15729                           ;miwi_mesh.c: 447: }
 15730                           ;miwi_mesh.c: 448: }
 15731                           ;miwi_mesh.c: 450: if( i < 4 )
 15732  0026D6  0E04               	movlw	4
 15733  0026D8  0101               	movlb	1	; () banked
 15734  0026DA  617C               	cpfslt	MiWiTasks@i& (0+255),b
 15735  0026DC  D04D               	goto	l18065
 15736                           
 15737                           ; BSR set to: 1
 15738                           ;miwi_mesh.c: 451: {
 15739                           ;miwi_mesh.c: 452: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 15740  0026DE  0101               	movlb	1	; () banked
 15741  0026E0  517C               	movf	MiWiTasks@i& (0+255),w,b
 15742  0026E2  0D08               	mullw	8
 15743  0026E4  0E28               	movlw	low _BroadcastRecords
 15744  0026E6  24F3               	addwf	prodl,w,c
 15745  0026E8  6ED9               	movwf	fsr2l,c
 15746  0026EA  0E02               	movlw	high _BroadcastRecords
 15747  0026EC  20F4               	addwfc	prodh,w,c
 15748  0026EE  6EDA               	movwf	fsr2h,c
 15749  0026F0  C178  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 15750  0026F4  C179  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 15751                           
 15752                           ; BSR set to: 1
 15753                           ;miwi_mesh.c: 453: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 15754  0026F8  0101               	movlb	1	; () banked
 15755  0026FA  EE20 F00A          	lfsr	2,10
 15756  0026FE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15757  002700  26D9               	addwf	fsr2l,f,c
 15758  002702  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15759  002704  22DA               	addwfc	fsr2h,f,c
 15760  002706  0101               	movlb	1	; () banked
 15761  002708  517C               	movf	MiWiTasks@i& (0+255),w,b
 15762  00270A  0D08               	mullw	8
 15763  00270C  0E02               	movlw	2
 15764  00270E  26F3               	addwf	prodl,f,c
 15765  002710  0E00               	movlw	0
 15766  002712  22F4               	addwfc	prodh,f,c
 15767  002714  0E28               	movlw	low _BroadcastRecords
 15768  002716  24F3               	addwf	prodl,w,c
 15769  002718  6EE1               	movwf	fsr1l,c
 15770  00271A  0E02               	movlw	high _BroadcastRecords
 15771  00271C  20F4               	addwfc	prodh,w,c
 15772  00271E  6EE2               	movwf	fsr1h,c
 15773  002720  CFDF FFE7          	movff	indf2,indf1
 15774                           
 15775                           ; BSR set to: 1
 15776                           ;miwi_mesh.c: 454: BroadcastRecords[i].RxCounter = 2 + 1;
 15777  002724  0101               	movlb	1	; () banked
 15778  002726  517C               	movf	MiWiTasks@i& (0+255),w,b
 15779  002728  0D08               	mullw	8
 15780  00272A  0E03               	movlw	3
 15781  00272C  26F3               	addwf	prodl,f,c
 15782  00272E  0E00               	movlw	0
 15783  002730  22F4               	addwfc	prodh,f,c
 15784  002732  0E28               	movlw	low _BroadcastRecords
 15785  002734  24F3               	addwf	prodl,w,c
 15786  002736  6ED9               	movwf	fsr2l,c
 15787  002738  0E02               	movlw	high _BroadcastRecords
 15788  00273A  20F4               	addwfc	prodh,w,c
 15789  00273C  6EDA               	movwf	fsr2h,c
 15790  00273E  0E03               	movlw	3
 15791  002740  6EDF               	movwf	indf2,c
 15792                           
 15793                           ; BSR set to: 1
 15794                           ;miwi_mesh.c: 456: BroadcastRecords[i].StartTick = MiWi_TickGet();
 15795  002742  EC80  F058         	call	_MiWi_TickGet	;wreg free
 15796  002746  0101               	movlb	1	; () banked
 15797  002748  517C               	movf	MiWiTasks@i& (0+255),w,b
 15798  00274A  0D08               	mullw	8
 15799  00274C  0E04               	movlw	4
 15800  00274E  26F3               	addwf	prodl,f,c
 15801  002750  0E00               	movlw	0
 15802  002752  22F4               	addwfc	prodh,f,c
 15803  002754  0E28               	movlw	low _BroadcastRecords
 15804  002756  24F3               	addwf	prodl,w,c
 15805  002758  6ED9               	movwf	fsr2l,c
 15806  00275A  0E02               	movlw	high _BroadcastRecords
 15807  00275C  20F4               	addwfc	prodh,w,c
 15808  00275E  6EDA               	movwf	fsr2h,c
 15809  002760  0101               	movlb	1	; () banked
 15810  002762  C100  FFDE         	movff	?_MiWi_TickGet,postinc2
 15811  002766  0101               	movlb	1	; () banked
 15812  002768  C101  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 15813  00276C  0101               	movlb	1	; () banked
 15814  00276E  C102  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 15815  002772  0101               	movlb	1	; () banked
 15816  002774  C103  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 15817  002778                     l18065:
 15818                           
 15819                           ; BSR set to: 1
 15820                           ;miwi_mesh.c: 458: }
 15821                           ;miwi_mesh.c: 460: rxMessage.flags.bits.broadcast = 1;
 15822  002778  0101               	movlb	1	; () banked
 15823  00277A  5190               	movf	_rxMessage& (0+255),w,b
 15824  00277C  0BFC               	andlw	-4
 15825  00277E  0901               	iorlw	1
 15826  002780  6F90               	movwf	_rxMessage& (0+255),b
 15827                           
 15828                           ;miwi_mesh.c: 461: goto ThisPacketIsForMe;
 15829  002782  D092               	goto	l18121
 15830  002784                     l18067:
 15831                           
 15832                           ; BSR set to: 1
 15833                           ;miwi_mesh.c: 462: }
 15834                           ;miwi_mesh.c: 465: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 15835  002784  0101               	movlb	1	; () banked
 15836  002786  51F0               	movf	_myPANID& (0+255),w,b
 15837  002788  0101               	movlb	1	; () banked
 15838  00278A  196D               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 15839  00278C  E105               	bnz	u20141
 15840  00278E  0101               	movlb	1	; () banked
 15841  002790  51F1               	movf	(_myPANID+1)& (0+255),w,b
 15842  002792  0101               	movlb	1	; () banked
 15843  002794  196E               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 15844  002796  A4D8               	btfss	status,2,c
 15845  002798                     u20141:
 15846  002798  D30F               	goto	l18301
 15847                           
 15848                           ; BSR set to: 1
 15849  00279A  0101               	movlb	1	; () banked
 15850  00279C  51F2               	movf	_myShortAddress& (0+255),w,b
 15851  00279E  0101               	movlb	1	; () banked
 15852  0027A0  1973               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 15853  0027A2  E105               	bnz	u20151
 15854  0027A4  0101               	movlb	1	; () banked
 15855  0027A6  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15856  0027A8  0101               	movlb	1	; () banked
 15857  0027AA  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 15858  0027AC  A4D8               	btfss	status,2,c
 15859  0027AE                     u20151:
 15860  0027AE  D304               	goto	l18301
 15861                           
 15862                           ; BSR set to: 1
 15863                           ;miwi_mesh.c: 466: {
 15864                           ;miwi_mesh.c: 468: if(MACRxPacket.Payload[1] & 0x04)
 15865  0027B0  0101               	movlb	1	; () banked
 15866  0027B2  EE20 F001          	lfsr	2,1
 15867  0027B6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15868  0027B8  26D9               	addwf	fsr2l,f,c
 15869  0027BA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15870  0027BC  22DA               	addwfc	fsr2h,f,c
 15871  0027BE  0101               	movlb	1	; () banked
 15872  0027C0  A4DF               	btfss	indf2,2,c
 15873  0027C2  D072               	goto	l18121
 15874                           
 15875                           ; BSR set to: 1
 15876                           ;miwi_mesh.c: 469: {
 15877                           ;miwi_mesh.c: 470: TxBuffer[0] = defaultHops;
 15878  0027C4  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 15879                           
 15880                           ; BSR set to: 1
 15881                           ;miwi_mesh.c: 471: TxBuffer[1] = 0x02;
 15882  0027C8  0E02               	movlw	2
 15883  0027CA  0102               	movlb	2	; () banked
 15884  0027CC  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 15885                           
 15886                           ; BSR set to: 2
 15887                           ;miwi_mesh.c: 472: TxBuffer[2] = sourcePANID.v[0];
 15888  0027CE  C175  F2A8         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 15889                           
 15890                           ; BSR set to: 2
 15891                           ;miwi_mesh.c: 473: TxBuffer[3] = sourcePANID.v[1];
 15892  0027D2  C176  F2A9         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 15893                           
 15894                           ; BSR set to: 2
 15895                           ;miwi_mesh.c: 474: TxBuffer[4] = sourceShortAddress.v[0];
 15896  0027D6  C178  F2AA         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 15897                           
 15898                           ; BSR set to: 2
 15899                           ;miwi_mesh.c: 475: TxBuffer[5] = sourceShortAddress.v[1];
 15900  0027DA  C179  F2AB         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 15901                           
 15902                           ; BSR set to: 2
 15903                           ;miwi_mesh.c: 476: TxBuffer[6] = myPANID.v[0];
 15904  0027DE  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 15905                           
 15906                           ; BSR set to: 2
 15907                           ;miwi_mesh.c: 477: TxBuffer[7] = myPANID.v[1];
 15908  0027E2  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 15909                           
 15910                           ; BSR set to: 2
 15911                           ;miwi_mesh.c: 478: TxBuffer[8] = myShortAddress.v[0];
 15912  0027E6  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 15913                           
 15914                           ; BSR set to: 2
 15915                           ;miwi_mesh.c: 479: TxBuffer[9] = myShortAddress.v[1];
 15916  0027EA  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 15917                           
 15918                           ; BSR set to: 2
 15919                           ;miwi_mesh.c: 480: TxBuffer[10] = MACRxPacket.Payload[11-1];
 15920  0027EE  0101               	movlb	1	; () banked
 15921  0027F0  EE20 F00A          	lfsr	2,10
 15922  0027F4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15923  0027F6  26D9               	addwf	fsr2l,f,c
 15924  0027F8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15925  0027FA  22DA               	addwfc	fsr2h,f,c
 15926  0027FC  50DF               	movf	indf2,w,c
 15927  0027FE  0102               	movlb	2	; () banked
 15928  002800  6FB0               	movwf	(_TxBuffer+10)& (0+255),b
 15929                           
 15930                           ; BSR set to: 2
 15931                           ;miwi_mesh.c: 481: TxBuffer[11] = 0x00;
 15932  002802  0E00               	movlw	0
 15933  002804  0102               	movlb	2	; () banked
 15934  002806  6FB1               	movwf	(_TxBuffer+11)& (0+255),b
 15935                           
 15936                           ; BSR set to: 2
 15937                           ;miwi_mesh.c: 482: TxBuffer[12] = 0x30;
 15938  002808  0E30               	movlw	48
 15939  00280A  0102               	movlb	2	; () banked
 15940  00280C  6FB2               	movwf	(_TxBuffer+12)& (0+255),b
 15941                           
 15942                           ; BSR set to: 2
 15943                           ;miwi_mesh.c: 483: TxData = 13;
 15944  00280E  0E0D               	movlw	13
 15945  002810  0101               	movlb	1	; () banked
 15946  002812  6FC6               	movwf	_TxData& (0+255),b
 15947                           
 15948                           ; BSR set to: 1
 15949                           ;miwi_mesh.c: 486: if( sourceShortAddress.v[1] != myShortAddress.v[1] )
 15950  002814  0101               	movlb	1	; () banked
 15951  002816  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15952  002818  0101               	movlb	1	; () banked
 15953  00281A  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15954  00281C  B4D8               	btfsc	status,2,c
 15955  00281E  D00E               	goto	l18105
 15956                           
 15957                           ; BSR set to: 1
 15958                           ;miwi_mesh.c: 487: {
 15959                           ;miwi_mesh.c: 488: RouteMessage(sourcePANID, sourceShortAddress, 0);
 15960  002820  C175  F13D         	movff	MiWiTasks@sourcePANID,RouteMessage@PANID
 15961  002824  C176  F13E         	movff	MiWiTasks@sourcePANID+1,RouteMessage@PANID+1
 15962  002828  C178  F13F         	movff	MiWiTasks@sourceShortAddress,RouteMessage@ShortAddress
 15963  00282C  C179  F140         	movff	MiWiTasks@sourceShortAddress+1,RouteMessage@ShortAddress+1
 15964  002830  0E00               	movlw	0
 15965  002832  0101               	movlb	1	; () banked
 15966  002834  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 15967  002836  EC09  F024         	call	_RouteMessage	;wreg free
 15968                           
 15969                           ;miwi_mesh.c: 489: }
 15970  00283A  D034               	goto	l18119
 15971  00283C                     l18105:
 15972                           
 15973                           ;miwi_mesh.c: 490: else
 15974                           ;miwi_mesh.c: 491: {
 15975                           ;miwi_mesh.c: 492: MTP.flags.Val = 0;
 15976  00283C  0E00               	movlw	0
 15977  00283E  0101               	movlb	1	; () banked
 15978  002840  6FAD               	movwf	_MTP& (0+255),b
 15979                           
 15980                           ; BSR set to: 1
 15981                           ;miwi_mesh.c: 493: MTP.flags.bits.ackReq = 1;
 15982  002842  0101               	movlb	1	; () banked
 15983  002844  8BAD               	bsf	_MTP& (0+255),5,b
 15984                           
 15985                           ; BSR set to: 1
 15986                           ;miwi_mesh.c: 501: tempShortAddress.Val = sourceShortAddress.Val;
 15987  002846  C178  F1F4         	movff	MiWiTasks@sourceShortAddress,_tempShortAddress
 15988  00284A  C179  F1F5         	movff	MiWiTasks@sourceShortAddress+1,_tempShortAddress+1
 15989                           
 15990                           ; BSR set to: 1
 15991                           ;miwi_mesh.c: 502: tempPANID.Val = sourcePANID.Val;
 15992  00284E  C175  F1BB         	movff	MiWiTasks@sourcePANID,_tempPANID
 15993  002852  C176  F1BC         	movff	MiWiTasks@sourcePANID+1,_tempPANID+1
 15994                           
 15995                           ; BSR set to: 1
 15996                           ;miwi_mesh.c: 503: if( (i = SearchForShortAddress()) != 0xFF )
 15997  002856  EC87  F057         	call	_SearchForShortAddress	;wreg free
 15998  00285A  0101               	movlb	1	; () banked
 15999  00285C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 16000  00285E  0101               	movlb	1	; () banked
 16001  002860  297C               	incf	MiWiTasks@i& (0+255),w,b
 16002  002862  B4D8               	btfsc	status,2,c
 16003  002864  D00F               	goto	l18117
 16004                           
 16005                           ; BSR set to: 1
 16006                           ;miwi_mesh.c: 504: {
 16007                           ;miwi_mesh.c: 505: MTP.DestAddress = ConnectionTable[i].Address;
 16008  002866  0101               	movlb	1	; () banked
 16009  002868  517C               	movf	MiWiTasks@i& (0+255),w,b
 16010  00286A  0D09               	mullw	9
 16011  00286C  0E04               	movlw	4
 16012  00286E  26F3               	addwf	prodl,f,c
 16013  002870  0E00               	movlw	0
 16014  002872  22F4               	addwfc	prodh,f,c
 16015  002874  0E00               	movlw	low _ConnectionTable
 16016  002876  24F3               	addwf	prodl,w,c
 16017  002878  0101               	movlb	1	; () banked
 16018  00287A  6FAE               	movwf	(_MTP+1)& (0+255),b
 16019  00287C  0E06               	movlw	high _ConnectionTable
 16020  00287E  20F4               	addwfc	prodh,w,c
 16021  002880  0101               	movlb	1	; () banked
 16022  002882  6FAF               	movwf	(_MTP+2)& (0+255),b
 16023  002884                     l18117:
 16024                           
 16025                           ; BSR set to: 1
 16026                           ;miwi_mesh.c: 506: }
 16027                           ;miwi_mesh.c: 509: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 16028  002884  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 16029  002888  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 16030  00288C  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 16031  002890  0EA6               	movlw	low _TxBuffer
 16032  002892  0101               	movlb	1	; () banked
 16033  002894  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 16034  002896  0E02               	movlw	high _TxBuffer
 16035  002898  0101               	movlb	1	; () banked
 16036  00289A  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 16037  00289C  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 16038  0028A0  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 16039  0028A4                     l18119:
 16040                           
 16041                           ;miwi_mesh.c: 510: }
 16042                           ;miwi_mesh.c: 527: rxMessage.flags.bits.ackReq = 1;
 16043  0028A4  0101               	movlb	1	; () banked
 16044  0028A6  8590               	bsf	_rxMessage& (0+255),2,b
 16045  0028A8                     l18121:
 16046                           
 16047                           ; BSR set to: 1
 16048                           ;miwi_mesh.c: 532: if(MACRxPacket.Payload[11] == 0x00)
 16049  0028A8  0101               	movlb	1	; () banked
 16050  0028AA  EE20 F00B          	lfsr	2,11
 16051  0028AE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16052  0028B0  26D9               	addwf	fsr2l,f,c
 16053  0028B2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16054  0028B4  22DA               	addwfc	fsr2h,f,c
 16055  0028B6  50DF               	movf	indf2,w,c
 16056  0028B8  A4D8               	btfss	status,2,c
 16057  0028BA  D238               	goto	l18279
 16058                           
 16059                           ; BSR set to: 1
 16060                           ;miwi_mesh.c: 533: {
 16061                           ;miwi_mesh.c: 534: if( MACRxPacket.Payload[11+1] != 0x30)
 16062  0028BC  0101               	movlb	1	; () banked
 16063  0028BE  EE20 F00C          	lfsr	2,12
 16064  0028C2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16065  0028C4  26D9               	addwf	fsr2l,f,c
 16066  0028C6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16067  0028C8  22DA               	addwfc	fsr2h,f,c
 16068  0028CA  0E30               	movlw	48
 16069  0028CC  18DE               	xorwf	postinc2,w,c
 16070  0028CE  A4D8               	btfss	status,2,c
 16071  0028D0  D200               	goto	l18271
 16072  0028D2  D20F               	goto	l18273
 16073  0028D4                     l667:
 16074                           
 16075                           ; BSR set to: 1
 16076                           ;miwi_mesh.c: 688: {
 16077                           ;miwi_mesh.c: 689: uint8_t j;
 16078                           ;miwi_mesh.c: 692: if(openSocketInfo.status.bits.requestIsOpen == 0)
 16079  0028D4  0101               	movlb	1	; () banked
 16080  0028D6  B3CC               	btfsc	_openSocketInfo& (0+255),1,b
 16081  0028D8  D04E               	goto	l18145
 16082                           
 16083                           ; BSR set to: 1
 16084                           ;miwi_mesh.c: 693: {
 16085                           ;miwi_mesh.c: 696: openSocketInfo.socketStart = MiWi_TickGet();
 16086  0028DA  EC80  F058         	call	_MiWi_TickGet	;wreg free
 16087  0028DE  C100  F1DA         	movff	?_MiWi_TickGet,_openSocketInfo+14
 16088  0028E2  C101  F1DB         	movff	?_MiWi_TickGet+1,_openSocketInfo+15
 16089  0028E6  C102  F1DC         	movff	?_MiWi_TickGet+2,_openSocketInfo+16
 16090  0028EA  C103  F1DD         	movff	?_MiWi_TickGet+3,_openSocketInfo+17
 16091                           
 16092                           ;miwi_mesh.c: 697: openSocketInfo.ShortAddress1.v[0] = MACRxPacket.Payload[11-3];
 16093  0028EE  0101               	movlb	1	; () banked
 16094  0028F0  EE20 F008          	lfsr	2,8
 16095  0028F4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16096  0028F6  26D9               	addwf	fsr2l,f,c
 16097  0028F8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16098  0028FA  22DA               	addwfc	fsr2h,f,c
 16099  0028FC  50DF               	movf	indf2,w,c
 16100  0028FE  0101               	movlb	1	; () banked
 16101  002900  6FCE               	movwf	(_openSocketInfo+2)& (0+255),b
 16102                           
 16103                           ; BSR set to: 1
 16104                           ;miwi_mesh.c: 698: openSocketInfo.ShortAddress1.v[1] = MACRxPacket.Payload[11-2];
 16105  002902  0101               	movlb	1	; () banked
 16106  002904  EE20 F009          	lfsr	2,9
 16107  002908  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16108  00290A  26D9               	addwf	fsr2l,f,c
 16109  00290C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16110  00290E  22DA               	addwfc	fsr2h,f,c
 16111  002910  50DF               	movf	indf2,w,c
 16112  002912  0101               	movlb	1	; () banked
 16113  002914  6FCF               	movwf	(_openSocketInfo+3)& (0+255),b
 16114                           
 16115                           ; BSR set to: 1
 16116                           ;miwi_mesh.c: 701: for(j=0;j<4;j++)
 16117  002916  0E00               	movlw	0
 16118  002918  0101               	movlb	1	; () banked
 16119  00291A  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16120  00291C                     l18135:
 16121                           
 16122                           ; BSR set to: 1
 16123  00291C  0E03               	movlw	3
 16124  00291E  0101               	movlb	1	; () banked
 16125  002920  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16126  002922  D001               	goto	l18139
 16127  002924  D022               	goto	l670
 16128  002926                     l18139:
 16129                           
 16130                           ; BSR set to: 1
 16131                           ;miwi_mesh.c: 702: {
 16132                           ;miwi_mesh.c: 703: openSocketInfo.LongAddress1[j] = MACRxPacket.Payload[j+2+11];
 16133  002926  0101               	movlb	1	; () banked
 16134  002928  517B               	movf	MiWiTasks@j& (0+255),w,b
 16135  00292A  0101               	movlb	1	; () banked
 16136  00292C  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16137  00292E  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16138  002930  0E0D               	movlw	13
 16139  002932  0101               	movlb	1	; () banked
 16140  002934  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16141  002936  0E00               	movlw	0
 16142  002938  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16143  00293A  0101               	movlb	1	; () banked
 16144  00293C  514A               	movf	??_MiWiTasks& (0+255),w,b
 16145  00293E  0101               	movlb	1	; () banked
 16146  002940  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16147  002942  6ED9               	movwf	fsr2l,c
 16148  002944  0101               	movlb	1	; () banked
 16149  002946  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16150  002948  0101               	movlb	1	; () banked
 16151  00294A  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16152  00294C  6EDA               	movwf	fsr2h,c
 16153  00294E  0101               	movlb	1	; () banked
 16154  002950  517B               	movf	MiWiTasks@j& (0+255),w,b
 16155  002952  0D01               	mullw	1
 16156  002954  0ED0               	movlw	low (_openSocketInfo+4)
 16157  002956  24F3               	addwf	prodl,w,c
 16158  002958  6EE1               	movwf	fsr1l,c
 16159  00295A  0E01               	movlw	high (_openSocketInfo+4)
 16160  00295C  20F4               	addwfc	prodh,w,c
 16161  00295E  6EE2               	movwf	fsr1h,c
 16162  002960  CFDF FFE7          	movff	indf2,indf1
 16163                           
 16164                           ; BSR set to: 1
 16165  002964  0101               	movlb	1	; () banked
 16166  002966  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16167  002968  D7D9               	goto	l18135
 16168  00296A                     l670:
 16169                           
 16170                           ; BSR set to: 1
 16171                           ;miwi_mesh.c: 704: }
 16172                           ;miwi_mesh.c: 706: openSocketInfo.status.bits.requestIsOpen = 1;
 16173  00296A  0101               	movlb	1	; () banked
 16174  00296C  83CC               	bsf	_openSocketInfo& (0+255),1,b
 16175                           
 16176                           ;miwi_mesh.c: 707: openSocketInfo.status.bits.matchFound = 0;
 16177  00296E  0101               	movlb	1	; () banked
 16178  002970  91CC               	bcf	_openSocketInfo& (0+255),0,b
 16179                           
 16180                           ;miwi_mesh.c: 715: }
 16181  002972  EF84  F01D         	goto	l641
 16182  002976                     l18145:
 16183                           
 16184                           ; BSR set to: 1
 16185                           ;miwi_mesh.c: 716: else
 16186                           ;miwi_mesh.c: 717: {
 16187                           ;miwi_mesh.c: 720: if( (MACRxPacket.Payload[11-3] == openSocketInfo.ShortAddress1.v[0]) 
      +                          &&
 16188                           ;miwi_mesh.c: 721: (MACRxPacket.Payload[11-2] == openSocketInfo.ShortAddress1.v[1]))
 16189  002976  0101               	movlb	1	; () banked
 16190  002978  EE20 F008          	lfsr	2,8
 16191  00297C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16192  00297E  26D9               	addwf	fsr2l,f,c
 16193  002980  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16194  002982  22DA               	addwfc	fsr2h,f,c
 16195  002984  0101               	movlb	1	; () banked
 16196  002986  51CE               	movf	(_openSocketInfo+2)& (0+255),w,b
 16197  002988  18DE               	xorwf	postinc2,w,c
 16198  00298A  A4D8               	btfss	status,2,c
 16199  00298C  D00D               	goto	l18151
 16200                           
 16201                           ; BSR set to: 1
 16202  00298E  0101               	movlb	1	; () banked
 16203  002990  EE20 F009          	lfsr	2,9
 16204  002994  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16205  002996  26D9               	addwf	fsr2l,f,c
 16206  002998  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16207  00299A  22DA               	addwfc	fsr2h,f,c
 16208  00299C  0101               	movlb	1	; () banked
 16209  00299E  51CF               	movf	(_openSocketInfo+3)& (0+255),w,b
 16210  0029A0  18DE               	xorwf	postinc2,w,c
 16211  0029A2  B4D8               	btfsc	status,2,c
 16212  0029A4  EF84  F01D         	goto	l641
 16213  0029A8                     l18151:
 16214                           
 16215                           ; BSR set to: 1
 16216                           ;miwi_mesh.c: 727: else if(openSocketInfo.ShortAddress1.Val == 0x0000)
 16217  0029A8  0101               	movlb	1	; () banked
 16218  0029AA  51CE               	movf	(_openSocketInfo+2)& (0+255),w,b
 16219  0029AC  0101               	movlb	1	; () banked
 16220  0029AE  11CF               	iorwf	(_openSocketInfo+3)& (0+255),w,b
 16221  0029B0  A4D8               	btfss	status,2,c
 16222  0029B2  D06F               	goto	l18187
 16223                           
 16224                           ; BSR set to: 1
 16225                           ;miwi_mesh.c: 728: {
 16226                           ;miwi_mesh.c: 731: for(j=0;j<4;j++)
 16227  0029B4  0E00               	movlw	0
 16228  0029B6  0101               	movlb	1	; () banked
 16229  0029B8  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16230  0029BA                     l18155:
 16231                           
 16232                           ; BSR set to: 1
 16233  0029BA  0E03               	movlw	3
 16234  0029BC  0101               	movlb	1	; () banked
 16235  0029BE  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16236  0029C0  D001               	goto	l18159
 16237  0029C2  D036               	goto	l18165
 16238  0029C4                     l18159:
 16239                           
 16240                           ; BSR set to: 1
 16241                           ;miwi_mesh.c: 732: {
 16242                           ;miwi_mesh.c: 733: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 16243  0029C4  0101               	movlb	1	; () banked
 16244  0029C6  517B               	movf	MiWiTasks@j& (0+255),w,b
 16245  0029C8  0101               	movlb	1	; () banked
 16246  0029CA  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16247  0029CC  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16248  0029CE  0E0D               	movlw	13
 16249  0029D0  0101               	movlb	1	; () banked
 16250  0029D2  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16251  0029D4  0E00               	movlw	0
 16252  0029D6  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16253  0029D8  0101               	movlb	1	; () banked
 16254  0029DA  514A               	movf	??_MiWiTasks& (0+255),w,b
 16255  0029DC  0101               	movlb	1	; () banked
 16256  0029DE  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16257  0029E0  6ED9               	movwf	fsr2l,c
 16258  0029E2  0101               	movlb	1	; () banked
 16259  0029E4  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16260  0029E6  0101               	movlb	1	; () banked
 16261  0029E8  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16262  0029EA  6EDA               	movwf	fsr2h,c
 16263  0029EC  0101               	movlb	1	; () banked
 16264  0029EE  517B               	movf	MiWiTasks@j& (0+255),w,b
 16265  0029F0  0D01               	mullw	1
 16266  0029F2  0ED6               	movlw	low (_openSocketInfo+10)
 16267  0029F4  24F3               	addwf	prodl,w,c
 16268  0029F6  6EE1               	movwf	fsr1l,c
 16269  0029F8  0E01               	movlw	high (_openSocketInfo+10)
 16270  0029FA  20F4               	addwfc	prodh,w,c
 16271  0029FC  6EE2               	movwf	fsr1h,c
 16272  0029FE  CFDF FFE7          	movff	indf2,indf1
 16273                           
 16274                           ;miwi_mesh.c: 734: tempLongAddress[j] = openSocketInfo.LongAddress2[j];
 16275  002A02  0101               	movlb	1	; () banked
 16276  002A04  517B               	movf	MiWiTasks@j& (0+255),w,b
 16277  002A06  0D01               	mullw	1
 16278  002A08  0ED6               	movlw	low (_openSocketInfo+10)
 16279  002A0A  24F3               	addwf	prodl,w,c
 16280  002A0C  6ED9               	movwf	fsr2l,c
 16281  002A0E  0E01               	movlw	high (_openSocketInfo+10)
 16282  002A10  20F4               	addwfc	prodh,w,c
 16283  002A12  6EDA               	movwf	fsr2h,c
 16284  002A14  0101               	movlb	1	; () banked
 16285  002A16  517B               	movf	MiWiTasks@j& (0+255),w,b
 16286  002A18  0D01               	mullw	1
 16287  002A1A  0EA6               	movlw	low _tempLongAddress
 16288  002A1C  24F3               	addwf	prodl,w,c
 16289  002A1E  6EE1               	movwf	fsr1l,c
 16290  002A20  0E01               	movlw	high _tempLongAddress
 16291  002A22  20F4               	addwfc	prodh,w,c
 16292  002A24  6EE2               	movwf	fsr1h,c
 16293  002A26  CFDF FFE7          	movff	indf2,indf1
 16294                           
 16295                           ; BSR set to: 1
 16296  002A2A  0101               	movlb	1	; () banked
 16297  002A2C  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16298  002A2E  D7C5               	goto	l18155
 16299  002A30                     l18165:
 16300                           
 16301                           ; BSR set to: 1
 16302                           ;miwi_mesh.c: 735: }
 16303                           ;miwi_mesh.c: 739: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 16304  002A30  0101               	movlb	1	; () banked
 16305  002A32  EE20 F008          	lfsr	2,8
 16306  002A36  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16307  002A38  26D9               	addwf	fsr2l,f,c
 16308  002A3A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16309  002A3C  22DA               	addwfc	fsr2h,f,c
 16310  002A3E  50DF               	movf	indf2,w,c
 16311  002A40  0101               	movlb	1	; () banked
 16312  002A42  6FD4               	movwf	(_openSocketInfo+8)& (0+255),b
 16313                           
 16314                           ;miwi_mesh.c: 740: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 16315  002A44  0101               	movlb	1	; () banked
 16316  002A46  EE20 F009          	lfsr	2,9
 16317  002A4A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16318  002A4C  26D9               	addwf	fsr2l,f,c
 16319  002A4E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16320  002A50  22DA               	addwfc	fsr2h,f,c
 16321  002A52  50DF               	movf	indf2,w,c
 16322  002A54  0101               	movlb	1	; () banked
 16323  002A56  6FD5               	movwf	(_openSocketInfo+9)& (0+255),b
 16324                           
 16325                           ; BSR set to: 1
 16326                           ;miwi_mesh.c: 742: tempShortAddress.v[0] = openSocketInfo.ShortAddress2.v[0];
 16327  002A58  C1D4  F1F4         	movff	_openSocketInfo+8,_tempShortAddress
 16328                           
 16329                           ; BSR set to: 1
 16330                           ;miwi_mesh.c: 743: tempShortAddress.v[1] = openSocketInfo.ShortAddress2.v[1];
 16331  002A5C  C1D5  F1F5         	movff	_openSocketInfo+9,_tempShortAddress+1
 16332                           
 16333                           ; BSR set to: 1
 16334                           ;miwi_mesh.c: 744: tempPANID.Val = myPANID.Val;
 16335  002A60  C1F0  F1BB         	movff	_myPANID,_tempPANID
 16336  002A64  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 16337                           
 16338                           ; BSR set to: 1
 16339                           ;miwi_mesh.c: 747: openSocketInfo.socketHandle = SearchForShortAddress();
 16340  002A68  EC87  F057         	call	_SearchForShortAddress	;wreg free
 16341  002A6C  0101               	movlb	1	; () banked
 16342  002A6E  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16343                           
 16344                           ; BSR set to: 1
 16345                           ;miwi_mesh.c: 749: if(openSocketInfo.socketHandle == 0xFF)
 16346  002A70  0101               	movlb	1	; () banked
 16347  002A72  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16348  002A74  A4D8               	btfss	status,2,c
 16349  002A76  D0A0               	goto	l18221
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;miwi_mesh.c: 750: {
 16353                           ;miwi_mesh.c: 753: tempNodeStatus.Val = 0x8D;
 16354  002A78  0E8D               	movlw	141
 16355  002A7A  0100               	movlb	0	; () banked
 16356  002A7C  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;miwi_mesh.c: 754: if(tempShortAddress.v[0] & 0x80)
 16360  002A7E  0101               	movlb	1	; () banked
 16361  002A80  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 16362  002A82  D002               	goto	l18183
 16363                           
 16364                           ; BSR set to: 1
 16365                           ;miwi_mesh.c: 755: {
 16366                           ;miwi_mesh.c: 756: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16367  002A84  0100               	movlb	0	; () banked
 16368  002A86  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16369  002A88                     l18183:
 16370                           
 16371                           ;miwi_mesh.c: 757: }
 16372                           ;miwi_mesh.c: 759: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 16373  002A88  EC16  F046         	call	_AddNodeToNetworkTable	;wreg free
 16374  002A8C  0101               	movlb	1	; () banked
 16375  002A8E  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16376                           
 16377                           ; BSR set to: 1
 16378  002A90  D093               	goto	l18221
 16379  002A92                     l18187:
 16380                           
 16381                           ; BSR set to: 1
 16382                           ;miwi_mesh.c: 778: else
 16383                           ;miwi_mesh.c: 779: {
 16384                           ;miwi_mesh.c: 780: ;
 16385                           ;miwi_mesh.c: 784: {TxData = 11;};
 16386  002A92  0E0B               	movlw	11
 16387  002A94  0101               	movlb	1	; () banked
 16388  002A96  6FC6               	movwf	_TxData& (0+255),b
 16389                           
 16390                           ; BSR set to: 1
 16391                           ;miwi_mesh.c: 785: TxBuffer[TxData++] = 0x00;
 16392  002A98  0101               	movlb	1	; () banked
 16393  002A9A  51C6               	movf	_TxData& (0+255),w,b
 16394  002A9C  0D01               	mullw	1
 16395  002A9E  0EA6               	movlw	low _TxBuffer
 16396  002AA0  24F3               	addwf	prodl,w,c
 16397  002AA2  6ED9               	movwf	fsr2l,c
 16398  002AA4  0E02               	movlw	high _TxBuffer
 16399  002AA6  20F4               	addwfc	prodh,w,c
 16400  002AA8  6EDA               	movwf	fsr2h,c
 16401  002AAA  0E00               	movlw	0
 16402  002AAC  6EDF               	movwf	indf2,c
 16403                           
 16404                           ; BSR set to: 1
 16405  002AAE  0101               	movlb	1	; () banked
 16406  002AB0  2BC6               	incf	_TxData& (0+255),f,b
 16407                           
 16408                           ; BSR set to: 1
 16409                           ;miwi_mesh.c: 786: TxBuffer[TxData++] = 0x11;
 16410  002AB2  0101               	movlb	1	; () banked
 16411  002AB4  51C6               	movf	_TxData& (0+255),w,b
 16412  002AB6  0D01               	mullw	1
 16413  002AB8  0EA6               	movlw	low _TxBuffer
 16414  002ABA  24F3               	addwf	prodl,w,c
 16415  002ABC  6ED9               	movwf	fsr2l,c
 16416  002ABE  0E02               	movlw	high _TxBuffer
 16417  002AC0  20F4               	addwfc	prodh,w,c
 16418  002AC2  6EDA               	movwf	fsr2h,c
 16419  002AC4  0E11               	movlw	17
 16420  002AC6  6EDF               	movwf	indf2,c
 16421                           
 16422                           ; BSR set to: 1
 16423  002AC8  0101               	movlb	1	; () banked
 16424  002ACA  2BC6               	incf	_TxData& (0+255),f,b
 16425                           
 16426                           ;miwi_mesh.c: 789: for(j=0;j<4;j++)
 16427  002ACC  0E00               	movlw	0
 16428  002ACE  0101               	movlb	1	; () banked
 16429  002AD0  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16430  002AD2                     l18197:
 16431                           
 16432                           ; BSR set to: 1
 16433  002AD2  0E03               	movlw	3
 16434  002AD4  0101               	movlb	1	; () banked
 16435  002AD6  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16436  002AD8  D001               	goto	l18201
 16437  002ADA  D038               	goto	l18209
 16438  002ADC                     l18201:
 16439                           
 16440                           ; BSR set to: 1
 16441                           ;miwi_mesh.c: 790: {
 16442                           ;miwi_mesh.c: 791: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 16443  002ADC  0101               	movlb	1	; () banked
 16444  002ADE  517B               	movf	MiWiTasks@j& (0+255),w,b
 16445  002AE0  0101               	movlb	1	; () banked
 16446  002AE2  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16447  002AE4  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16448  002AE6  0E0D               	movlw	13
 16449  002AE8  0101               	movlb	1	; () banked
 16450  002AEA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16451  002AEC  0E00               	movlw	0
 16452  002AEE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16453  002AF0  0101               	movlb	1	; () banked
 16454  002AF2  514A               	movf	??_MiWiTasks& (0+255),w,b
 16455  002AF4  0101               	movlb	1	; () banked
 16456  002AF6  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16457  002AF8  6ED9               	movwf	fsr2l,c
 16458  002AFA  0101               	movlb	1	; () banked
 16459  002AFC  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16460  002AFE  0101               	movlb	1	; () banked
 16461  002B00  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16462  002B02  6EDA               	movwf	fsr2h,c
 16463  002B04  0101               	movlb	1	; () banked
 16464  002B06  517B               	movf	MiWiTasks@j& (0+255),w,b
 16465  002B08  0D01               	mullw	1
 16466  002B0A  0ED6               	movlw	low (_openSocketInfo+10)
 16467  002B0C  24F3               	addwf	prodl,w,c
 16468  002B0E  6EE1               	movwf	fsr1l,c
 16469  002B10  0E01               	movlw	high (_openSocketInfo+10)
 16470  002B12  20F4               	addwfc	prodh,w,c
 16471  002B14  6EE2               	movwf	fsr1h,c
 16472  002B16  CFDF FFE7          	movff	indf2,indf1
 16473                           
 16474                           ;miwi_mesh.c: 792: TxBuffer[TxData++] = openSocketInfo.LongAddress2[j];
 16475  002B1A  0101               	movlb	1	; () banked
 16476  002B1C  517B               	movf	MiWiTasks@j& (0+255),w,b
 16477  002B1E  0D01               	mullw	1
 16478  002B20  0ED6               	movlw	low (_openSocketInfo+10)
 16479  002B22  24F3               	addwf	prodl,w,c
 16480  002B24  6ED9               	movwf	fsr2l,c
 16481  002B26  0E01               	movlw	high (_openSocketInfo+10)
 16482  002B28  20F4               	addwfc	prodh,w,c
 16483  002B2A  6EDA               	movwf	fsr2h,c
 16484  002B2C  0101               	movlb	1	; () banked
 16485  002B2E  51C6               	movf	_TxData& (0+255),w,b
 16486  002B30  0D01               	mullw	1
 16487  002B32  0EA6               	movlw	low _TxBuffer
 16488  002B34  24F3               	addwf	prodl,w,c
 16489  002B36  6EE1               	movwf	fsr1l,c
 16490  002B38  0E02               	movlw	high _TxBuffer
 16491  002B3A  20F4               	addwfc	prodh,w,c
 16492  002B3C  6EE2               	movwf	fsr1h,c
 16493  002B3E  CFDF FFE7          	movff	indf2,indf1
 16494                           
 16495                           ; BSR set to: 1
 16496  002B42  0101               	movlb	1	; () banked
 16497  002B44  2BC6               	incf	_TxData& (0+255),f,b
 16498                           
 16499                           ; BSR set to: 1
 16500  002B46  0101               	movlb	1	; () banked
 16501  002B48  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16502  002B4A  D7C3               	goto	l18197
 16503  002B4C                     l18209:
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;miwi_mesh.c: 793: }
 16507                           ;miwi_mesh.c: 795: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 16508  002B4C  0101               	movlb	1	; () banked
 16509  002B4E  EE20 F008          	lfsr	2,8
 16510  002B52  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16511  002B54  26D9               	addwf	fsr2l,f,c
 16512  002B56  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16513  002B58  22DA               	addwfc	fsr2h,f,c
 16514  002B5A  50DF               	movf	indf2,w,c
 16515  002B5C  0101               	movlb	1	; () banked
 16516  002B5E  6FD4               	movwf	(_openSocketInfo+8)& (0+255),b
 16517                           
 16518                           ;miwi_mesh.c: 796: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 16519  002B60  0101               	movlb	1	; () banked
 16520  002B62  EE20 F009          	lfsr	2,9
 16521  002B66  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16522  002B68  26D9               	addwf	fsr2l,f,c
 16523  002B6A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16524  002B6C  22DA               	addwfc	fsr2h,f,c
 16525  002B6E  50DF               	movf	indf2,w,c
 16526  002B70  0101               	movlb	1	; () banked
 16527  002B72  6FD5               	movwf	(_openSocketInfo+9)& (0+255),b
 16528                           
 16529                           ; BSR set to: 1
 16530                           ;miwi_mesh.c: 805: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[0];
 16531  002B74  0101               	movlb	1	; () banked
 16532  002B76  51C6               	movf	_TxData& (0+255),w,b
 16533  002B78  0D01               	mullw	1
 16534  002B7A  0EA6               	movlw	low _TxBuffer
 16535  002B7C  24F3               	addwf	prodl,w,c
 16536  002B7E  6ED9               	movwf	fsr2l,c
 16537  002B80  0E02               	movlw	high _TxBuffer
 16538  002B82  20F4               	addwfc	prodh,w,c
 16539  002B84  6EDA               	movwf	fsr2h,c
 16540  002B86  C1D4  FFDF         	movff	_openSocketInfo+8,indf2
 16541                           
 16542                           ; BSR set to: 1
 16543  002B8A  0101               	movlb	1	; () banked
 16544  002B8C  2BC6               	incf	_TxData& (0+255),f,b
 16545                           
 16546                           ; BSR set to: 1
 16547                           ;miwi_mesh.c: 806: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[1];
 16548  002B8E  0101               	movlb	1	; () banked
 16549  002B90  51C6               	movf	_TxData& (0+255),w,b
 16550  002B92  0D01               	mullw	1
 16551  002B94  0EA6               	movlw	low _TxBuffer
 16552  002B96  24F3               	addwf	prodl,w,c
 16553  002B98  6ED9               	movwf	fsr2l,c
 16554  002B9A  0E02               	movlw	high _TxBuffer
 16555  002B9C  20F4               	addwfc	prodh,w,c
 16556  002B9E  6EDA               	movwf	fsr2h,c
 16557  002BA0  C1D5  FFDF         	movff	_openSocketInfo+9,indf2
 16558                           
 16559                           ; BSR set to: 1
 16560  002BA4  0101               	movlb	1	; () banked
 16561  002BA6  2BC6               	incf	_TxData& (0+255),f,b
 16562                           
 16563                           ; BSR set to: 1
 16564                           ;miwi_mesh.c: 816: UnicastShortAddress(openSocketInfo.ShortAddress1.v);
 16565  002BA8  0ECE               	movlw	low (_openSocketInfo+2)
 16566  002BAA  0101               	movlb	1	; () banked
 16567  002BAC  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 16568  002BAE  0E01               	movlw	high (_openSocketInfo+2)
 16569  002BB0  0101               	movlb	1	; () banked
 16570  002BB2  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 16571  002BB4  EC63  F056         	call	_UnicastShortAddress	;wreg free
 16572  002BB8                     l18221:
 16573                           
 16574                           ;miwi_mesh.c: 817: openSocketInfo.status.bits.requestIsOpen = 1;
 16575  002BB8  0101               	movlb	1	; () banked
 16576  002BBA  83CC               	bsf	_openSocketInfo& (0+255),1,b
 16577                           
 16578                           ; BSR set to: 1
 16579                           ;miwi_mesh.c: 818: openSocketInfo.status.bits.matchFound = 1;
 16580  002BBC  0101               	movlb	1	; () banked
 16581  002BBE  81CC               	bsf	_openSocketInfo& (0+255),0,b
 16582                           
 16583                           ; BSR set to: 1
 16584                           ;miwi_mesh.c: 819: }
 16585                           ;miwi_mesh.c: 821: }
 16586                           ;miwi_mesh.c: 822: }
 16587                           ;miwi_mesh.c: 823: break;
 16588                           
 16589                           ; BSR set to: 1
 16590                           
 16591                           ; BSR set to: 1
 16592  002BC0  EF84  F01D         	goto	l641
 16593  002BC4                     l18225:
 16594                           
 16595                           ; BSR set to: 1
 16596                           ;miwi_mesh.c: 827: {
 16597                           ;miwi_mesh.c: 828: uint8_t j;
 16598                           ;miwi_mesh.c: 831: for(j=0;j<4;j++)
 16599  002BC4  0E00               	movlw	0
 16600  002BC6  0101               	movlb	1	; () banked
 16601  002BC8  6F71               	movwf	MiWiTasks@j_2488& (0+255),b
 16602  002BCA                     l18227:
 16603                           
 16604                           ; BSR set to: 1
 16605  002BCA  0E03               	movlw	3
 16606  002BCC  0101               	movlb	1	; () banked
 16607  002BCE  6571               	cpfsgt	MiWiTasks@j_2488& (0+255),b
 16608  002BD0  D001               	goto	l18231
 16609  002BD2  D022               	goto	l18237
 16610  002BD4                     l18231:
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;miwi_mesh.c: 832: {
 16614                           ;miwi_mesh.c: 833: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 16615  002BD4  0101               	movlb	1	; () banked
 16616  002BD6  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 16617  002BD8  0101               	movlb	1	; () banked
 16618  002BDA  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16619  002BDC  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16620  002BDE  0E0D               	movlw	13
 16621  002BE0  0101               	movlb	1	; () banked
 16622  002BE2  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16623  002BE4  0E00               	movlw	0
 16624  002BE6  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16625  002BE8  0101               	movlb	1	; () banked
 16626  002BEA  514A               	movf	??_MiWiTasks& (0+255),w,b
 16627  002BEC  0101               	movlb	1	; () banked
 16628  002BEE  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16629  002BF0  6ED9               	movwf	fsr2l,c
 16630  002BF2  0101               	movlb	1	; () banked
 16631  002BF4  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16632  002BF6  0101               	movlb	1	; () banked
 16633  002BF8  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16634  002BFA  6EDA               	movwf	fsr2h,c
 16635  002BFC  0101               	movlb	1	; () banked
 16636  002BFE  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 16637  002C00  0D01               	mullw	1
 16638  002C02  0EA6               	movlw	low _tempLongAddress
 16639  002C04  24F3               	addwf	prodl,w,c
 16640  002C06  6EE1               	movwf	fsr1l,c
 16641  002C08  0E01               	movlw	high _tempLongAddress
 16642  002C0A  20F4               	addwfc	prodh,w,c
 16643  002C0C  6EE2               	movwf	fsr1h,c
 16644  002C0E  CFDF FFE7          	movff	indf2,indf1
 16645                           
 16646                           ; BSR set to: 1
 16647  002C12  0101               	movlb	1	; () banked
 16648  002C14  2B71               	incf	MiWiTasks@j_2488& (0+255),f,b
 16649  002C16  D7D9               	goto	l18227
 16650  002C18                     l18237:
 16651                           
 16652                           ; BSR set to: 1
 16653                           ;miwi_mesh.c: 834: }
 16654                           ;miwi_mesh.c: 837: tempNodeStatus.Val = 0x8D;
 16655  002C18  0E8D               	movlw	141
 16656  002C1A  0100               	movlb	0	; () banked
 16657  002C1C  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;miwi_mesh.c: 839: if(MACRxPacket.Payload[13+4] & 0x80)
 16661  002C1E  0101               	movlb	1	; () banked
 16662  002C20  EE20 F011          	lfsr	2,17
 16663  002C24  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16664  002C26  26D9               	addwf	fsr2l,f,c
 16665  002C28  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16666  002C2A  22DA               	addwfc	fsr2h,f,c
 16667  002C2C  0101               	movlb	1	; () banked
 16668  002C2E  AEDF               	btfss	indf2,7,c
 16669  002C30  D002               	goto	l18243
 16670                           
 16671                           ; BSR set to: 1
 16672                           ;miwi_mesh.c: 840: {
 16673                           ;miwi_mesh.c: 841: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16674  002C32  0100               	movlb	0	; () banked
 16675  002C34  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16676  002C36                     l18243:
 16677                           
 16678                           ;miwi_mesh.c: 842: }
 16679                           ;miwi_mesh.c: 845: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 16680  002C36  0101               	movlb	1	; () banked
 16681  002C38  EE20 F011          	lfsr	2,17
 16682  002C3C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16683  002C3E  26D9               	addwf	fsr2l,f,c
 16684  002C40  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16685  002C42  22DA               	addwfc	fsr2h,f,c
 16686  002C44  50DF               	movf	indf2,w,c
 16687  002C46  0101               	movlb	1	; () banked
 16688  002C48  6FF4               	movwf	_tempShortAddress& (0+255),b
 16689                           
 16690                           ;miwi_mesh.c: 846: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 16691  002C4A  0101               	movlb	1	; () banked
 16692  002C4C  EE20 F012          	lfsr	2,18
 16693  002C50  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16694  002C52  26D9               	addwf	fsr2l,f,c
 16695  002C54  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16696  002C56  22DA               	addwfc	fsr2h,f,c
 16697  002C58  50DF               	movf	indf2,w,c
 16698  002C5A  0101               	movlb	1	; () banked
 16699  002C5C  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 16700                           
 16701                           ; BSR set to: 1
 16702                           ;miwi_mesh.c: 849: tempPANID.Val = myPANID.Val;
 16703  002C5E  C1F0  F1BB         	movff	_myPANID,_tempPANID
 16704  002C62  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 16705                           
 16706                           ; BSR set to: 1
 16707                           ;miwi_mesh.c: 852: openSocketInfo.socketHandle = SearchForShortAddress();
 16708  002C66  EC87  F057         	call	_SearchForShortAddress	;wreg free
 16709  002C6A  0101               	movlb	1	; () banked
 16710  002C6C  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16711                           
 16712                           ; BSR set to: 1
 16713                           ;miwi_mesh.c: 854: if(openSocketInfo.socketHandle != 0xFF)
 16714  002C6E  0101               	movlb	1	; () banked
 16715  002C70  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16716  002C72  B4D8               	btfsc	status,2,c
 16717  002C74  D015               	goto	l18257
 16718                           
 16719                           ; BSR set to: 1
 16720                           ;miwi_mesh.c: 855: {
 16721                           ;miwi_mesh.c: 857: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 16722  002C76  0101               	movlb	1	; () banked
 16723  002C78  51CD               	movf	(_openSocketInfo+1)& (0+255),w,b
 16724  002C7A  0D09               	mullw	9
 16725  002C7C  0E08               	movlw	8
 16726  002C7E  26F3               	addwf	prodl,f,c
 16727  002C80  0E00               	movlw	0
 16728  002C82  22F4               	addwfc	prodh,f,c
 16729  002C84  0E00               	movlw	low _ConnectionTable
 16730  002C86  24F3               	addwf	prodl,w,c
 16731  002C88  6ED9               	movwf	fsr2l,c
 16732  002C8A  0E06               	movlw	high _ConnectionTable
 16733  002C8C  20F4               	addwfc	prodh,w,c
 16734  002C8E  6EDA               	movwf	fsr2h,c
 16735  002C90  50DF               	movf	indf2,w,c
 16736  002C92  0100               	movlb	0	; () banked
 16737  002C94  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16738                           
 16739                           ; BSR set to: 0
 16740                           ;miwi_mesh.c: 858: tempNodeStatus.bits.longAddressValid = 1;
 16741  002C96  0100               	movlb	0	; () banked
 16742  002C98  85A0               	bsf	_tempNodeStatus& (0+255),2,b
 16743                           
 16744                           ; BSR set to: 0
 16745                           ;miwi_mesh.c: 859: tempNodeStatus.bits.shortAddressValid = 1;
 16746  002C9A  0100               	movlb	0	; () banked
 16747  002C9C  87A0               	bsf	_tempNodeStatus& (0+255),3,b
 16748                           
 16749                           ;miwi_mesh.c: 860: }
 16750  002C9E  D008               	goto	l18263
 16751  002CA0                     l18257:
 16752                           
 16753                           ;miwi_mesh.c: 861: else
 16754                           ;miwi_mesh.c: 862: {
 16755                           ;miwi_mesh.c: 864: tempNodeStatus.Val = 0x8D;
 16756  002CA0  0E8D               	movlw	141
 16757  002CA2  0100               	movlb	0	; () banked
 16758  002CA4  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;miwi_mesh.c: 865: if(tempShortAddress.v[0] & 0x80)
 16762  002CA6  0101               	movlb	1	; () banked
 16763  002CA8  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 16764  002CAA  D002               	goto	l18263
 16765                           
 16766                           ; BSR set to: 1
 16767                           ;miwi_mesh.c: 866: {
 16768                           ;miwi_mesh.c: 867: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16769  002CAC  0100               	movlb	0	; () banked
 16770  002CAE  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16771  002CB0                     l18263:
 16772                           
 16773                           ;miwi_mesh.c: 868: }
 16774                           ;miwi_mesh.c: 869: }
 16775                           ;miwi_mesh.c: 871: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 16776  002CB0  EC16  F046         	call	_AddNodeToNetworkTable	;wreg free
 16777  002CB4  0101               	movlb	1	; () banked
 16778  002CB6  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16779                           
 16780                           ; BSR set to: 1
 16781                           ;miwi_mesh.c: 872: if( openSocketInfo.socketHandle < 0xFF )
 16782  002CB8  0101               	movlb	1	; () banked
 16783  002CBA  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16784  002CBC  B4D8               	btfsc	status,2,c
 16785  002CBE  D003               	goto	l691
 16786                           
 16787                           ; BSR set to: 1
 16788                           ;miwi_mesh.c: 873: {
 16789                           ;miwi_mesh.c: 883: openSocketInfo.status.bits.matchFound = 1;
 16790  002CC0  0101               	movlb	1	; () banked
 16791  002CC2  81CC               	bsf	_openSocketInfo& (0+255),0,b
 16792                           
 16793                           ;miwi_mesh.c: 884: }
 16794  002CC4  D002               	goto	l692
 16795  002CC6                     l691:
 16796                           
 16797                           ; BSR set to: 1
 16798                           ;miwi_mesh.c: 885: else
 16799                           ;miwi_mesh.c: 886: {
 16800                           ;miwi_mesh.c: 887: openSocketInfo.status.bits.matchFound = 0;
 16801  002CC6  0101               	movlb	1	; () banked
 16802  002CC8  91CC               	bcf	_openSocketInfo& (0+255),0,b
 16803  002CCA                     l692:
 16804                           
 16805                           ; BSR set to: 1
 16806                           ;miwi_mesh.c: 888: }
 16807                           ;miwi_mesh.c: 891: openSocketInfo.status.bits.requestIsOpen = 0;
 16808  002CCA  0101               	movlb	1	; () banked
 16809  002CCC  93CC               	bcf	_openSocketInfo& (0+255),1,b
 16810                           
 16811                           ; BSR set to: 1
 16812                           ;miwi_mesh.c: 969: }
 16813                           
 16814                           ; BSR set to: 1
 16815                           ;miwi_mesh.c: 968: break;
 16816                           
 16817                           ;miwi_mesh.c: 965: default:
 16818                           
 16819                           ;miwi_mesh.c: 893: }
 16820                           ;miwi_mesh.c: 894: break;
 16821  002CCE  EF84  F01D         	goto	l641
 16822  002CD2                     l18271:
 16823                           
 16824                           ; BSR set to: 1
 16825  002CD2  0101               	movlb	1	; () banked
 16826  002CD4  EE20 F00C          	lfsr	2,12
 16827  002CD8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16828  002CDA  26D9               	addwf	fsr2l,f,c
 16829  002CDC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16830  002CDE  22DA               	addwfc	fsr2h,f,c
 16831  002CE0  50DF               	movf	indf2,w,c
 16832                           
 16833                           ; Switch size 1, requested type "space"
 16834                           ; Number of cases is 2, Range of values is 16 to 17
 16835                           ; switch strategies available:
 16836                           ; Name         Instructions Cycles
 16837                           ; simple_byte            7     4 (average)
 16838                           ;	Chosen strategy is simple_byte
 16839  002CE2  0A10               	xorlw	16	; case 16
 16840  002CE4  B4D8               	btfsc	status,2,c
 16841  002CE6  D5F6               	goto	l667
 16842  002CE8  0A01               	xorlw	1	; case 17
 16843  002CEA  B4D8               	btfsc	status,2,c
 16844  002CEC  D76B               	goto	l18225
 16845                           
 16846                           ; BSR set to: 1
 16847                           ;miwi_mesh.c: 970: }
 16848  002CEE  EF84  F01D         	goto	l641
 16849  002CF2                     l18273:
 16850                           
 16851                           ; BSR set to: 1
 16852                           ;miwi_mesh.c: 971: else
 16853                           ;miwi_mesh.c: 972: {
 16854                           ;miwi_mesh.c: 974: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 16855                           ;miwi_mesh.c: 975: sourceShortAddress.Val == AcknowledgementAddr.Val)
 16856  002CF2  0101               	movlb	1	; () banked
 16857  002CF4  EE20 F00A          	lfsr	2,10
 16858  002CF8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16859  002CFA  26D9               	addwf	fsr2l,f,c
 16860  002CFC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16861  002CFE  22DA               	addwfc	fsr2h,f,c
 16862  002D00  0101               	movlb	1	; () banked
 16863  002D02  51F8               	movf	_AcknowledgementSeq& (0+255),w,b
 16864  002D04  18DE               	xorwf	postinc2,w,c
 16865  002D06  A4D8               	btfss	status,2,c
 16866  002D08  EF84  F01D         	goto	l641
 16867                           
 16868                           ; BSR set to: 1
 16869  002D0C  0101               	movlb	1	; () banked
 16870  002D0E  51B3               	movf	_AcknowledgementAddr& (0+255),w,b
 16871  002D10  0101               	movlb	1	; () banked
 16872  002D12  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16873  002D14  E105               	bnz	u20401
 16874  002D16  0101               	movlb	1	; () banked
 16875  002D18  51B4               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 16876  002D1A  0101               	movlb	1	; () banked
 16877  002D1C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16878  002D1E  A4D8               	btfss	status,2,c
 16879  002D20                     u20401:
 16880  002D20  EF84  F01D         	goto	l641
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;miwi_mesh.c: 976: {
 16884                           ;miwi_mesh.c: 977: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 16885  002D24  0101               	movlb	1	; () banked
 16886  002D26  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 16887                           
 16888                           ; BSR set to: 1
 16889                           ;miwi_mesh.c: 981: }
 16890                           ;miwi_mesh.c: 982: }
 16891                           
 16892                           ; BSR set to: 1
 16893                           ;miwi_mesh.c: 978: }
 16894                           ;miwi_mesh.c: 980: break;
 16895  002D28  EF84  F01D         	goto	l641
 16896  002D2C                     l18279:
 16897                           
 16898                           ; BSR set to: 1
 16899                           ;miwi_mesh.c: 983: else
 16900                           ;miwi_mesh.c: 984: {
 16901                           ;miwi_mesh.c: 989: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 16902  002D2C  0101               	movlb	1	; () banked
 16903  002D2E  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 16904  002D30  0FF5               	addlw	245
 16905  002D32  0101               	movlb	1	; () banked
 16906  002D34  6F97               	movwf	(_rxMessage+7)& (0+255),b
 16907                           
 16908                           ;miwi_mesh.c: 990: rxMessage.Payload = &MACRxPacket.Payload[11];
 16909  002D36  0E0B               	movlw	11
 16910  002D38  0101               	movlb	1	; () banked
 16911  002D3A  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16912  002D3C  0101               	movlb	1	; () banked
 16913  002D3E  6F95               	movwf	(_rxMessage+5)& (0+255),b
 16914  002D40  0E00               	movlw	0
 16915  002D42  0101               	movlb	1	; () banked
 16916  002D44  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16917  002D46  0101               	movlb	1	; () banked
 16918  002D48  6F96               	movwf	(_rxMessage+6)& (0+255),b
 16919                           
 16920                           ; BSR set to: 1
 16921                           ;miwi_mesh.c: 991: rxMessage.SourcePANID.Val = sourcePANID.Val;
 16922  002D4A  C175  F191         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 16923  002D4E  C176  F192         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 16924                           
 16925                           ; BSR set to: 1
 16926                           ;miwi_mesh.c: 992: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 16927  002D52  0101               	movlb	1	; () banked
 16928  002D54  EE20 F008          	lfsr	2,8
 16929  002D58  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16930  002D5A  26D9               	addwf	fsr2l,f,c
 16931  002D5C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16932  002D5E  22DA               	addwfc	fsr2h,f,c
 16933  002D60  28DE               	incf	postinc2,w,c
 16934  002D62  A4D8               	btfss	status,2,c
 16935  002D64  D012               	goto	l697
 16936                           
 16937                           ; BSR set to: 1
 16938  002D66  0101               	movlb	1	; () banked
 16939  002D68  EE20 F009          	lfsr	2,9
 16940  002D6C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16941  002D6E  26D9               	addwf	fsr2l,f,c
 16942  002D70  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16943  002D72  22DA               	addwfc	fsr2h,f,c
 16944  002D74  28DE               	incf	postinc2,w,c
 16945  002D76  A4D8               	btfss	status,2,c
 16946  002D78  D008               	goto	l697
 16947                           
 16948                           ; BSR set to: 1
 16949                           ;miwi_mesh.c: 993: {
 16950                           ;miwi_mesh.c: 998: if( MACRxPacket.flags.bits.sourcePrsnt )
 16951  002D7A  0101               	movlb	1	; () banked
 16952  002D7C  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 16953  002D7E  D005               	goto	l697
 16954                           
 16955                           ; BSR set to: 1
 16956                           ;miwi_mesh.c: 999: {
 16957                           ;miwi_mesh.c: 1000: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16958  002D80  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 16959  002D84  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 16960                           
 16961                           ;miwi_mesh.c: 1001: }
 16962  002D88  D00C               	goto	l18295
 16963  002D8A                     l697:
 16964                           
 16965                           ; BSR set to: 1
 16966                           ;miwi_mesh.c: 1010: else
 16967                           ;miwi_mesh.c: 1011: {
 16968                           ;miwi_mesh.c: 1012: rxMessage.flags.bits.altSrcAddr = 1;
 16969  002D8A  0101               	movlb	1	; () banked
 16970  002D8C  8F90               	bsf	_rxMessage& (0+255),7,b
 16971                           
 16972                           ; BSR set to: 1
 16973                           ;miwi_mesh.c: 1013: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 16974  002D8E  0E08               	movlw	8
 16975  002D90  0101               	movlb	1	; () banked
 16976  002D92  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16977  002D94  0101               	movlb	1	; () banked
 16978  002D96  6F93               	movwf	(_rxMessage+3)& (0+255),b
 16979  002D98  0E00               	movlw	0
 16980  002D9A  0101               	movlb	1	; () banked
 16981  002D9C  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16982  002D9E  0101               	movlb	1	; () banked
 16983  002DA0  6F94               	movwf	(_rxMessage+4)& (0+255),b
 16984  002DA2                     l18295:
 16985                           
 16986                           ; BSR set to: 1
 16987                           ;miwi_mesh.c: 1014: }
 16988                           ;miwi_mesh.c: 1015: rxMessage.flags.bits.srcPrsnt = 1;
 16989  002DA2  0101               	movlb	1	; () banked
 16990  002DA4  8D90               	bsf	_rxMessage& (0+255),6,b
 16991                           
 16992                           ; BSR set to: 1
 16993                           ;miwi_mesh.c: 1017: if( rxMessage.PayloadSize > 0 )
 16994  002DA6  0101               	movlb	1	; () banked
 16995  002DA8  5197               	movf	(_rxMessage+7)& (0+255),w,b
 16996  002DAA  B4D8               	btfsc	status,2,c
 16997  002DAC  EF84  F01D         	goto	l641
 16998                           
 16999                           ; BSR set to: 1
 17000                           ;miwi_mesh.c: 1018: {
 17001                           ;miwi_mesh.c: 1019: MiWiStateMachine.bits.RxHasUserData = 1;
 17002  002DB0  0101               	movlb	1	; () banked
 17003  002DB2  85B5               	bsf	_MiWiStateMachine& (0+255),2,b
 17004                           
 17005                           ; BSR set to: 1
 17006                           ;miwi_mesh.c: 1020: }
 17007                           ;miwi_mesh.c: 1022: }
 17008                           ;miwi_mesh.c: 1023: }
 17009                           
 17010                           ; BSR set to: 1
 17011  002DB4  EF84  F01D         	goto	l641
 17012  002DB8                     l18301:
 17013                           
 17014                           ; BSR set to: 1
 17015                           ;miwi_mesh.c: 1024: else
 17016                           ;miwi_mesh.c: 1025: {
 17017                           ;miwi_mesh.c: 1030: if( MACRxPacket.Payload[0] > 0 )
 17018  002DB8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17019  002DBC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17020  002DC0  50DF               	movf	indf2,w,c
 17021  002DC2  B4D8               	btfsc	status,2,c
 17022  002DC4  EF84  F01D         	goto	l641
 17023                           
 17024                           ; BSR set to: 1
 17025                           ;miwi_mesh.c: 1031: {
 17026                           ;miwi_mesh.c: 1032: MACRxPacket.Payload[0]--;
 17027  002DC8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17028  002DCC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17029  002DD0  06DF               	decf	indf2,f,c
 17030                           
 17031                           ; BSR set to: 1
 17032                           ;miwi_mesh.c: 1033: {TxData = 0;};
 17033  002DD2  0E00               	movlw	0
 17034  002DD4  0101               	movlb	1	; () banked
 17035  002DD6  6FC6               	movwf	_TxData& (0+255),b
 17036                           
 17037                           ; BSR set to: 1
 17038                           ;miwi_mesh.c: 1034: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 17039  002DD8  0E00               	movlw	0
 17040  002DDA  0101               	movlb	1	; () banked
 17041  002DDC  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17042  002DDE  D01A               	goto	l18315
 17043  002DE0                     l18309:
 17044                           
 17045                           ; BSR set to: 1
 17046                           ;miwi_mesh.c: 1035: {
 17047                           ;miwi_mesh.c: 1036: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 17048  002DE0  0101               	movlb	1	; () banked
 17049  002DE2  517C               	movf	MiWiTasks@i& (0+255),w,b
 17050  002DE4  0D01               	mullw	1
 17051  002DE6  50F3               	movf	prodl,w,c
 17052  002DE8  0101               	movlb	1	; () banked
 17053  002DEA  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17054  002DEC  6ED9               	movwf	fsr2l,c
 17055  002DEE  50F4               	movf	prodh,w,c
 17056  002DF0  0101               	movlb	1	; () banked
 17057  002DF2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17058  002DF4  6EDA               	movwf	fsr2h,c
 17059  002DF6  0101               	movlb	1	; () banked
 17060  002DF8  51C6               	movf	_TxData& (0+255),w,b
 17061  002DFA  0D01               	mullw	1
 17062  002DFC  0EA6               	movlw	low _TxBuffer
 17063  002DFE  24F3               	addwf	prodl,w,c
 17064  002E00  6EE1               	movwf	fsr1l,c
 17065  002E02  0E02               	movlw	high _TxBuffer
 17066  002E04  20F4               	addwfc	prodh,w,c
 17067  002E06  6EE2               	movwf	fsr1h,c
 17068  002E08  CFDF FFE7          	movff	indf2,indf1
 17069                           
 17070                           ; BSR set to: 1
 17071  002E0C  0101               	movlb	1	; () banked
 17072  002E0E  2BC6               	incf	_TxData& (0+255),f,b
 17073                           
 17074                           ; BSR set to: 1
 17075  002E10  0101               	movlb	1	; () banked
 17076  002E12  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17077  002E14                     l18315:
 17078                           
 17079                           ; BSR set to: 1
 17080  002E14  0101               	movlb	1	; () banked
 17081  002E16  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 17082  002E18  0101               	movlb	1	; () banked
 17083  002E1A  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 17084  002E1C  A0D8               	btfss	status,0,c
 17085  002E1E  D7E0               	goto	l18309
 17086                           
 17087                           ; BSR set to: 1
 17088                           ;miwi_mesh.c: 1037: }
 17089                           ;miwi_mesh.c: 1039: if( (destShortAddress.v[1] == myShortAddress.v[1]) &&
 17090                           ;miwi_mesh.c: 1040: (TxBuffer[11] == 0x00) &&
 17091                           ;miwi_mesh.c: 1041: (TxBuffer[12] == 0x30) )
 17092                           
 17093                           ; BSR set to: 1
 17094  002E20  0101               	movlb	1	; () banked
 17095  002E22  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 17096  002E24  0101               	movlb	1	; () banked
 17097  002E26  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 17098  002E28  A4D8               	btfss	status,2,c
 17099  002E2A  D03C               	goto	l18335
 17100                           
 17101                           ; BSR set to: 1
 17102  002E2C  0102               	movlb	2	; () banked
 17103  002E2E  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 17104  002E30  A4D8               	btfss	status,2,c
 17105  002E32  D038               	goto	l18335
 17106                           
 17107                           ; BSR set to: 2
 17108  002E34  0E30               	movlw	48
 17109  002E36  0102               	movlb	2	; () banked
 17110  002E38  19B2               	xorwf	(_TxBuffer+12)& (0+255),w,b
 17111  002E3A  A4D8               	btfss	status,2,c
 17112  002E3C  D033               	goto	l18335
 17113                           
 17114                           ; BSR set to: 2
 17115                           ;miwi_mesh.c: 1042: {
 17116                           ;miwi_mesh.c: 1043: MTP.flags.Val = 0;
 17117  002E3E  0E00               	movlw	0
 17118  002E40  0101               	movlb	1	; () banked
 17119  002E42  6FAD               	movwf	_MTP& (0+255),b
 17120                           
 17121                           ; BSR set to: 1
 17122                           ;miwi_mesh.c: 1044: MTP.flags.bits.ackReq = 1;
 17123  002E44  0101               	movlb	1	; () banked
 17124  002E46  8BAD               	bsf	_MTP& (0+255),5,b
 17125                           
 17126                           ; BSR set to: 1
 17127                           ;miwi_mesh.c: 1053: tempShortAddress.Val = destShortAddress.Val;
 17128  002E48  C173  F1F4         	movff	MiWiTasks@destShortAddress,_tempShortAddress
 17129  002E4C  C174  F1F5         	movff	MiWiTasks@destShortAddress+1,_tempShortAddress+1
 17130                           
 17131                           ; BSR set to: 1
 17132                           ;miwi_mesh.c: 1054: if( (i = SearchForShortAddress()) != 0xFF )
 17133  002E50  EC87  F057         	call	_SearchForShortAddress	;wreg free
 17134  002E54  0101               	movlb	1	; () banked
 17135  002E56  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17136  002E58  0101               	movlb	1	; () banked
 17137  002E5A  297C               	incf	MiWiTasks@i& (0+255),w,b
 17138  002E5C  B4D8               	btfsc	status,2,c
 17139  002E5E  EF84  F01D         	goto	l641
 17140                           
 17141                           ; BSR set to: 1
 17142                           ;miwi_mesh.c: 1055: {
 17143                           ;miwi_mesh.c: 1056: MTP.DestAddress = ConnectionTable[i].Address;
 17144  002E62  0101               	movlb	1	; () banked
 17145  002E64  517C               	movf	MiWiTasks@i& (0+255),w,b
 17146  002E66  0D09               	mullw	9
 17147  002E68  0E04               	movlw	4
 17148  002E6A  26F3               	addwf	prodl,f,c
 17149  002E6C  0E00               	movlw	0
 17150  002E6E  22F4               	addwfc	prodh,f,c
 17151  002E70  0E00               	movlw	low _ConnectionTable
 17152  002E72  24F3               	addwf	prodl,w,c
 17153  002E74  0101               	movlb	1	; () banked
 17154  002E76  6FAE               	movwf	(_MTP+1)& (0+255),b
 17155  002E78  0E06               	movlw	high _ConnectionTable
 17156  002E7A  20F4               	addwfc	prodh,w,c
 17157  002E7C  0101               	movlb	1	; () banked
 17158  002E7E  6FAF               	movwf	(_MTP+2)& (0+255),b
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;miwi_mesh.c: 1057: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17162  002E80  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 17163  002E84  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17164  002E88  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17165  002E8C  0EA6               	movlw	low _TxBuffer
 17166  002E8E  0101               	movlb	1	; () banked
 17167  002E90  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17168  002E92  0E02               	movlw	high _TxBuffer
 17169  002E94  0101               	movlb	1	; () banked
 17170  002E96  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17171  002E98  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17172  002E9C  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 17173                           
 17174                           ;miwi_mesh.c: 1058: }
 17175                           ;miwi_mesh.c: 1060: }
 17176  002EA0  EF84  F01D         	goto	l641
 17177  002EA4                     l18335:
 17178                           
 17179                           ;miwi_mesh.c: 1061: else
 17180                           ;miwi_mesh.c: 1062: {
 17181                           ;miwi_mesh.c: 1063: RouteMessage(destPANID, destShortAddress, MACRxPacket.flags.bits.sec
      +                          En);
 17182  002EA4  C16D  F13D         	movff	MiWiTasks@destPANID,RouteMessage@PANID
 17183  002EA8  C16E  F13E         	movff	MiWiTasks@destPANID+1,RouteMessage@PANID+1
 17184  002EAC  C173  F13F         	movff	MiWiTasks@destShortAddress,RouteMessage@ShortAddress
 17185  002EB0  C174  F140         	movff	MiWiTasks@destShortAddress+1,RouteMessage@ShortAddress+1
 17186  002EB4  0E00               	movlw	0
 17187  002EB6  B79A               	btfsc	_MACRxPacket& (0+255),3,b
 17188  002EB8  0E01               	movlw	1
 17189  002EBA  0101               	movlb	1	; () banked
 17190  002EBC  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 17191  002EBE  EC09  F024         	call	_RouteMessage	;wreg free
 17192                           
 17193                           ;miwi_mesh.c: 1064: }
 17194                           ;miwi_mesh.c: 1065: }
 17195                           ;miwi_mesh.c: 1067: }
 17196                           ;miwi_mesh.c: 1069: }
 17197                           ;miwi_mesh.c: 1070: break;
 17198  002EC2  EF84  F01D         	goto	l641
 17199  002EC6                     l18337:
 17200                           
 17201                           ;miwi_mesh.c: 1074: {
 17202                           ;miwi_mesh.c: 1075: uint8_t rxIndex;
 17203                           ;miwi_mesh.c: 1080: rxIndex = 4;
 17204  002EC6  0E04               	movlw	4
 17205  002EC8  0101               	movlb	1	; () banked
 17206  002ECA  6F6F               	movwf	MiWiTasks@rxIndex& (0+255),b
 17207                           
 17208                           ; BSR set to: 1
 17209                           ;miwi_mesh.c: 1084: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 17210  002ECC  0101               	movlb	1	; () banked
 17211  002ECE  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17212  002ED0  0101               	movlb	1	; () banked
 17213  002ED2  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17214  002ED4  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17215  002ED6  0E04               	movlw	4
 17216  002ED8  0101               	movlb	1	; () banked
 17217  002EDA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17218  002EDC  0E00               	movlw	0
 17219  002EDE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17220  002EE0  0101               	movlb	1	; () banked
 17221  002EE2  514A               	movf	??_MiWiTasks& (0+255),w,b
 17222  002EE4  0101               	movlb	1	; () banked
 17223  002EE6  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17224  002EE8  6ED9               	movwf	fsr2l,c
 17225  002EEA  0101               	movlb	1	; () banked
 17226  002EEC  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17227  002EEE  0101               	movlb	1	; () banked
 17228  002EF0  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17229  002EF2  6EDA               	movwf	fsr2h,c
 17230  002EF4  0E4D               	movlw	77
 17231  002EF6  18DE               	xorwf	postinc2,w,c
 17232  002EF8  A4D8               	btfss	status,2,c
 17233  002EFA  EF84  F01D         	goto	l641
 17234                           
 17235                           ; BSR set to: 1
 17236                           ;miwi_mesh.c: 1091: }
 17237                           ;miwi_mesh.c: 1092: }
 17238                           ;miwi_mesh.c: 1095: {
 17239                           ;miwi_mesh.c: 1101: uint8_t coordinatorNumber = MACRxPacket.Payload[3];
 17240                           
 17241                           ; BSR set to: 1
 17242                           
 17243                           ; BSR set to: 1
 17244                           ;miwi_mesh.c: 1085: {
 17245                           ;miwi_mesh.c: 1089: {
 17246                           ;miwi_mesh.c: 1090: break;
 17247  002EFE  0101               	movlb	1	; () banked
 17248  002F00  EE20 F003          	lfsr	2,3
 17249  002F04  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17250  002F06  26D9               	addwf	fsr2l,f,c
 17251  002F08  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17252  002F0A  22DA               	addwfc	fsr2h,f,c
 17253  002F0C  50DF               	movf	indf2,w,c
 17254  002F0E  0101               	movlb	1	; () banked
 17255  002F10  6F68               	movwf	MiWiTasks@coordinatorNumber& (0+255),b
 17256                           
 17257                           ; BSR set to: 1
 17258                           ;miwi_mesh.c: 1103: uint8_t mask = 1<<(coordinatorNumber);
 17259  002F12  C168  F14A         	movff	MiWiTasks@coordinatorNumber,??_MiWiTasks
 17260  002F16  0E01               	movlw	1
 17261  002F18  0101               	movlb	1	; () banked
 17262  002F1A  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17263  002F1C  0101               	movlb	1	; () banked
 17264  002F1E  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 17265  002F20  D003               	goto	u20524
 17266  002F22                     u20525:
 17267  002F22  0101               	movlb	1	; () banked
 17268  002F24  90D8               	bcf	status,0,c
 17269  002F26  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 17270  002F28                     u20524:
 17271  002F28  0101               	movlb	1	; () banked
 17272  002F2A  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 17273  002F2C  D7FA               	goto	u20525
 17274  002F2E  0101               	movlb	1	; () banked
 17275  002F30  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17276  002F32  0101               	movlb	1	; () banked
 17277  002F34  6F60               	movwf	MiWiTasks@mask& (0+255),b
 17278                           
 17279                           ; BSR set to: 1
 17280                           ;miwi_mesh.c: 1109: if(MACRxPacket.Payload[2] == 0x00)
 17281  002F36  0101               	movlb	1	; () banked
 17282  002F38  EE20 F002          	lfsr	2,2
 17283  002F3C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17284  002F3E  26D9               	addwf	fsr2l,f,c
 17285  002F40  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17286  002F42  22DA               	addwfc	fsr2h,f,c
 17287  002F44  50DF               	movf	indf2,w,c
 17288  002F46  A4D8               	btfss	status,2,c
 17289  002F48  D004               	goto	l18351
 17290                           
 17291                           ; BSR set to: 1
 17292                           ;miwi_mesh.c: 1111: {
 17293                           ;miwi_mesh.c: 1113: knownCoordinators |= mask;
 17294  002F4A  0101               	movlb	1	; () banked
 17295  002F4C  5160               	movf	MiWiTasks@mask& (0+255),w,b
 17296  002F4E  0101               	movlb	1	; () banked
 17297  002F50  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 17298  002F52                     l18351:
 17299                           
 17300                           ; BSR set to: 1
 17301                           ;miwi_mesh.c: 1114: }
 17302                           ;miwi_mesh.c: 1116: RoutingTable[coordinatorNumber] = MACRxPacket.Payload[rxIndex+6];
 17303  002F52  0101               	movlb	1	; () banked
 17304  002F54  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17305  002F56  0101               	movlb	1	; () banked
 17306  002F58  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17307  002F5A  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17308  002F5C  0E06               	movlw	6
 17309  002F5E  0101               	movlb	1	; () banked
 17310  002F60  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17311  002F62  0E00               	movlw	0
 17312  002F64  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17313  002F66  0101               	movlb	1	; () banked
 17314  002F68  514A               	movf	??_MiWiTasks& (0+255),w,b
 17315  002F6A  0101               	movlb	1	; () banked
 17316  002F6C  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17317  002F6E  6ED9               	movwf	fsr2l,c
 17318  002F70  0101               	movlb	1	; () banked
 17319  002F72  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17320  002F74  0101               	movlb	1	; () banked
 17321  002F76  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17322  002F78  6EDA               	movwf	fsr2h,c
 17323  002F7A  0101               	movlb	1	; () banked
 17324  002F7C  5168               	movf	MiWiTasks@coordinatorNumber& (0+255),w,b
 17325  002F7E  0D01               	mullw	1
 17326  002F80  0E71               	movlw	low _RoutingTable
 17327  002F82  24F3               	addwf	prodl,w,c
 17328  002F84  6EE1               	movwf	fsr1l,c
 17329  002F86  0E00               	movlw	high _RoutingTable
 17330  002F88  20F4               	addwfc	prodh,w,c
 17331  002F8A  6EE2               	movwf	fsr1h,c
 17332  002F8C  CFDF FFE7          	movff	indf2,indf1
 17333                           
 17334                           ; BSR set to: 1
 17335                           ;miwi_mesh.c: 1120: }
 17336                           ;miwi_mesh.c: 1124: {
 17337                           ;miwi_mesh.c: 1125: uint8_t entry;
 17338                           ;miwi_mesh.c: 1127: tempPANID.v[0] = MACRxPacket.Payload[0];
 17339  002F90  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17340  002F94  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17341  002F98  50DF               	movf	indf2,w,c
 17342  002F9A  0101               	movlb	1	; () banked
 17343  002F9C  6FBB               	movwf	_tempPANID& (0+255),b
 17344                           
 17345                           ; BSR set to: 1
 17346                           ;miwi_mesh.c: 1128: tempPANID.v[1] = MACRxPacket.Payload[1];
 17347  002F9E  0101               	movlb	1	; () banked
 17348  002FA0  EE20 F001          	lfsr	2,1
 17349  002FA4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17350  002FA6  26D9               	addwf	fsr2l,f,c
 17351  002FA8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17352  002FAA  22DA               	addwfc	fsr2h,f,c
 17353  002FAC  50DF               	movf	indf2,w,c
 17354  002FAE  0101               	movlb	1	; () banked
 17355  002FB0  6FBC               	movwf	(_tempPANID+1)& (0+255),b
 17356                           
 17357                           ; BSR set to: 1
 17358                           ;miwi_mesh.c: 1129: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17359  002FB2  0101               	movlb	1	; () banked
 17360  002FB4  EE20 F002          	lfsr	2,2
 17361  002FB8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17362  002FBA  26D9               	addwf	fsr2l,f,c
 17363  002FBC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17364  002FBE  22DA               	addwfc	fsr2h,f,c
 17365  002FC0  50DF               	movf	indf2,w,c
 17366  002FC2  0101               	movlb	1	; () banked
 17367  002FC4  6FF4               	movwf	_tempShortAddress& (0+255),b
 17368                           
 17369                           ; BSR set to: 1
 17370                           ;miwi_mesh.c: 1130: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17371  002FC6  0101               	movlb	1	; () banked
 17372  002FC8  EE20 F003          	lfsr	2,3
 17373  002FCC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17374  002FCE  26D9               	addwf	fsr2l,f,c
 17375  002FD0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17376  002FD2  22DA               	addwfc	fsr2h,f,c
 17377  002FD4  50DF               	movf	indf2,w,c
 17378  002FD6  0101               	movlb	1	; () banked
 17379  002FD8  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17380                           
 17381                           ; BSR set to: 1
 17382                           ;miwi_mesh.c: 1132: entry = SearchForShortAddress();
 17383  002FDA  EC87  F057         	call	_SearchForShortAddress	;wreg free
 17384  002FDE  0101               	movlb	1	; () banked
 17385  002FE0  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 17386                           
 17387                           ; BSR set to: 1
 17388                           ;miwi_mesh.c: 1133: if(entry == 0xFF)
 17389  002FE2  0101               	movlb	1	; () banked
 17390  002FE4  297A               	incf	MiWiTasks@entry& (0+255),w,b
 17391  002FE6  A4D8               	btfss	status,2,c
 17392  002FE8  D005               	goto	l18367
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;miwi_mesh.c: 1134: {
 17396                           ;miwi_mesh.c: 1137: entry = findNextNetworkEntry();
 17397  002FEA  ECD3  F05B         	call	_findNextNetworkEntry	;wreg free
 17398  002FEE  0101               	movlb	1	; () banked
 17399  002FF0  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 17400                           
 17401                           ;miwi_mesh.c: 1138: }
 17402  002FF2  D03E               	goto	l18385
 17403  002FF4                     l18367:
 17404                           
 17405                           ; BSR set to: 1
 17406                           ;miwi_mesh.c: 1139: else
 17407                           ;miwi_mesh.c: 1140: {
 17408                           ;miwi_mesh.c: 1141: for(i = 0; i < 4; i++)
 17409  002FF4  0E00               	movlw	0
 17410  002FF6  0101               	movlb	1	; () banked
 17411  002FF8  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17412  002FFA                     l18369:
 17413                           
 17414                           ; BSR set to: 1
 17415  002FFA  0E03               	movlw	3
 17416  002FFC  0101               	movlb	1	; () banked
 17417  002FFE  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17418  003000  D001               	goto	l18373
 17419  003002  D030               	goto	l18381
 17420  003004                     l18373:
 17421                           
 17422                           ; BSR set to: 1
 17423                           ;miwi_mesh.c: 1142: {
 17424                           ;miwi_mesh.c: 1143: if( ConnectionTable[entry].Address[i] != MACRxPacket.SourceAddress[i
      +                          ] )
 17425  003004  0101               	movlb	1	; () banked
 17426  003006  517C               	movf	MiWiTasks@i& (0+255),w,b
 17427  003008  0D01               	mullw	1
 17428  00300A  50F3               	movf	prodl,w,c
 17429  00300C  0101               	movlb	1	; () banked
 17430  00300E  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 17431  003010  6ED9               	movwf	fsr2l,c
 17432  003012  50F4               	movf	prodh,w,c
 17433  003014  0101               	movlb	1	; () banked
 17434  003016  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 17435  003018  6EDA               	movwf	fsr2h,c
 17436  00301A  0101               	movlb	1	; () banked
 17437  00301C  517C               	movf	MiWiTasks@i& (0+255),w,b
 17438  00301E  0D01               	mullw	1
 17439  003020  0E04               	movlw	4
 17440  003022  26F3               	addwf	prodl,f,c
 17441  003024  0E00               	movlw	0
 17442  003026  22F4               	addwfc	prodh,f,c
 17443  003028  0E00               	movlw	low _ConnectionTable
 17444  00302A  0101               	movlb	1	; () banked
 17445  00302C  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17446  00302E  0E06               	movlw	high _ConnectionTable
 17447  003030  0101               	movlb	1	; () banked
 17448  003032  6F4C               	movwf	(??_MiWiTasks+2)& (0+255),b
 17449  003034  50F3               	movf	prodl,w,c
 17450  003036  0101               	movlb	1	; () banked
 17451  003038  274B               	addwf	(??_MiWiTasks+1)& (0+255),f,b
 17452  00303A  50F4               	movf	prodh,w,c
 17453  00303C  0101               	movlb	1	; () banked
 17454  00303E  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 17455  003040  0101               	movlb	1	; () banked
 17456  003042  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17457  003044  0D09               	mullw	9
 17458  003046  50F3               	movf	prodl,w,c
 17459  003048  0101               	movlb	1	; () banked
 17460  00304A  254B               	addwf	(??_MiWiTasks+1)& (0+255),w,b
 17461  00304C  6EE1               	movwf	fsr1l,c
 17462  00304E  50F4               	movf	prodh,w,c
 17463  003050  0101               	movlb	1	; () banked
 17464  003052  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 17465  003054  6EE2               	movwf	fsr1h,c
 17466  003056  50DE               	movf	postinc2,w,c
 17467  003058  18E6               	xorwf	postinc1,w,c
 17468  00305A  A4D8               	btfss	status,2,c
 17469  00305C  D003               	goto	l18381
 17470                           
 17471                           ; BSR set to: 1
 17472                           
 17473                           ; BSR set to: 1
 17474                           
 17475                           ; BSR set to: 1
 17476                           ;miwi_mesh.c: 1144: {
 17477                           ;miwi_mesh.c: 1145: break;
 17478  00305E  0101               	movlb	1	; () banked
 17479  003060  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17480  003062  D7CB               	goto	l18369
 17481  003064                     l18381:
 17482                           
 17483                           ; BSR set to: 1
 17484                           ;miwi_mesh.c: 1146: }
 17485                           ;miwi_mesh.c: 1147: }
 17486                           ;miwi_mesh.c: 1148: if( i >= 4 )
 17487  003064  0E03               	movlw	3
 17488  003066  0101               	movlb	1	; () banked
 17489  003068  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17490  00306A  D002               	goto	l18385
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;miwi_mesh.c: 1149: {
 17494                           ;miwi_mesh.c: 1150: entry = 0xFF;
 17495  00306C  0101               	movlb	1	; () banked
 17496  00306E  697A               	setf	MiWiTasks@entry& (0+255),b
 17497  003070                     l18385:
 17498                           
 17499                           ; BSR set to: 1
 17500                           ;miwi_mesh.c: 1151: }
 17501                           ;miwi_mesh.c: 1152: }
 17502                           ;miwi_mesh.c: 1154: if( entry < 0xFF )
 17503  003070  0101               	movlb	1	; () banked
 17504  003072  297A               	incf	MiWiTasks@entry& (0+255),w,b
 17505  003074  B4D8               	btfsc	status,2,c
 17506  003076  D0A9               	goto	l18403
 17507                           
 17508                           ; BSR set to: 1
 17509                           ;miwi_mesh.c: 1155: {
 17510                           ;miwi_mesh.c: 1156: ConnectionTable[entry].PANID.Val = tempPANID.Val;
 17511  003078  0101               	movlb	1	; () banked
 17512  00307A  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17513  00307C  0D09               	mullw	9
 17514  00307E  0E00               	movlw	low _ConnectionTable
 17515  003080  24F3               	addwf	prodl,w,c
 17516  003082  6ED9               	movwf	fsr2l,c
 17517  003084  0E06               	movlw	high _ConnectionTable
 17518  003086  20F4               	addwfc	prodh,w,c
 17519  003088  6EDA               	movwf	fsr2h,c
 17520  00308A  C1BB  FFDE         	movff	_tempPANID,postinc2
 17521  00308E  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 17522                           
 17523                           ;miwi_mesh.c: 1157: ConnectionTable[entry].AltAddress.Val = tempShortAddress.Val;
 17524  003092  0101               	movlb	1	; () banked
 17525  003094  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17526  003096  0D09               	mullw	9
 17527  003098  0E02               	movlw	2
 17528  00309A  26F3               	addwf	prodl,f,c
 17529  00309C  0E00               	movlw	0
 17530  00309E  22F4               	addwfc	prodh,f,c
 17531  0030A0  0E00               	movlw	low _ConnectionTable
 17532  0030A2  24F3               	addwf	prodl,w,c
 17533  0030A4  6ED9               	movwf	fsr2l,c
 17534  0030A6  0E06               	movlw	high _ConnectionTable
 17535  0030A8  20F4               	addwfc	prodh,w,c
 17536  0030AA  6EDA               	movwf	fsr2h,c
 17537  0030AC  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 17538  0030B0  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 17539                           
 17540                           ; BSR set to: 1
 17541                           ;miwi_mesh.c: 1159: for(i = 0; i < 4; i++)
 17542  0030B4  0E00               	movlw	0
 17543  0030B6  0101               	movlb	1	; () banked
 17544  0030B8  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17545  0030BA                     l18391:
 17546                           
 17547                           ; BSR set to: 1
 17548  0030BA  0E03               	movlw	3
 17549  0030BC  0101               	movlb	1	; () banked
 17550  0030BE  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17551  0030C0  D001               	goto	l18395
 17552  0030C2  D02E               	goto	l18401
 17553  0030C4                     l18395:
 17554                           
 17555                           ; BSR set to: 1
 17556                           ;miwi_mesh.c: 1160: {
 17557                           ;miwi_mesh.c: 1161: ConnectionTable[entry].Address[i] = MACRxPacket.SourceAddress[i];
 17558  0030C4  0101               	movlb	1	; () banked
 17559  0030C6  517C               	movf	MiWiTasks@i& (0+255),w,b
 17560  0030C8  0D01               	mullw	1
 17561  0030CA  50F3               	movf	prodl,w,c
 17562  0030CC  0101               	movlb	1	; () banked
 17563  0030CE  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 17564  0030D0  6ED9               	movwf	fsr2l,c
 17565  0030D2  50F4               	movf	prodh,w,c
 17566  0030D4  0101               	movlb	1	; () banked
 17567  0030D6  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 17568  0030D8  6EDA               	movwf	fsr2h,c
 17569  0030DA  0101               	movlb	1	; () banked
 17570  0030DC  517C               	movf	MiWiTasks@i& (0+255),w,b
 17571  0030DE  0D01               	mullw	1
 17572  0030E0  0E04               	movlw	4
 17573  0030E2  26F3               	addwf	prodl,f,c
 17574  0030E4  0E00               	movlw	0
 17575  0030E6  22F4               	addwfc	prodh,f,c
 17576  0030E8  0E00               	movlw	low _ConnectionTable
 17577  0030EA  0101               	movlb	1	; () banked
 17578  0030EC  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17579  0030EE  0E06               	movlw	high _ConnectionTable
 17580  0030F0  0101               	movlb	1	; () banked
 17581  0030F2  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17582  0030F4  50F3               	movf	prodl,w,c
 17583  0030F6  0101               	movlb	1	; () banked
 17584  0030F8  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17585  0030FA  50F4               	movf	prodh,w,c
 17586  0030FC  0101               	movlb	1	; () banked
 17587  0030FE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17588  003100  0101               	movlb	1	; () banked
 17589  003102  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17590  003104  0D09               	mullw	9
 17591  003106  50F3               	movf	prodl,w,c
 17592  003108  0101               	movlb	1	; () banked
 17593  00310A  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17594  00310C  6EE1               	movwf	fsr1l,c
 17595  00310E  50F4               	movf	prodh,w,c
 17596  003110  0101               	movlb	1	; () banked
 17597  003112  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17598  003114  6EE2               	movwf	fsr1h,c
 17599  003116  CFDF FFE7          	movff	indf2,indf1
 17600                           
 17601                           ; BSR set to: 1
 17602  00311A  0101               	movlb	1	; () banked
 17603  00311C  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17604  00311E  D7CD               	goto	l18391
 17605  003120                     l18401:
 17606                           
 17607                           ; BSR set to: 1
 17608                           ;miwi_mesh.c: 1162: }
 17609                           ;miwi_mesh.c: 1165: ConnectionTable[entry].status.Val = 0;
 17610  003120  0101               	movlb	1	; () banked
 17611  003122  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17612  003124  0D09               	mullw	9
 17613  003126  0E08               	movlw	8
 17614  003128  26F3               	addwf	prodl,f,c
 17615  00312A  0E00               	movlw	0
 17616  00312C  22F4               	addwfc	prodh,f,c
 17617  00312E  0E00               	movlw	low _ConnectionTable
 17618  003130  24F3               	addwf	prodl,w,c
 17619  003132  6ED9               	movwf	fsr2l,c
 17620  003134  0E06               	movlw	high _ConnectionTable
 17621  003136  20F4               	addwfc	prodh,w,c
 17622  003138  6EDA               	movwf	fsr2h,c
 17623  00313A  0E00               	movlw	0
 17624  00313C  6EDF               	movwf	indf2,c
 17625                           
 17626                           ;miwi_mesh.c: 1166: ConnectionTable[entry].status.bits.directConnection = 1;
 17627  00313E  0101               	movlb	1	; () banked
 17628  003140  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17629  003142  0D09               	mullw	9
 17630  003144  0E08               	movlw	8
 17631  003146  26F3               	addwf	prodl,f,c
 17632  003148  0E00               	movlw	0
 17633  00314A  22F4               	addwfc	prodh,f,c
 17634  00314C  0E00               	movlw	low _ConnectionTable
 17635  00314E  24F3               	addwf	prodl,w,c
 17636  003150  6ED9               	movwf	fsr2l,c
 17637  003152  0E06               	movlw	high _ConnectionTable
 17638  003154  20F4               	addwfc	prodh,w,c
 17639  003156  6EDA               	movwf	fsr2h,c
 17640  003158  82DF               	bsf	indf2,1,c
 17641                           
 17642                           ;miwi_mesh.c: 1167: ConnectionTable[entry].status.bits.RXOnWhenIdle = 1;
 17643  00315A  0101               	movlb	1	; () banked
 17644  00315C  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17645  00315E  0D09               	mullw	9
 17646  003160  0E08               	movlw	8
 17647  003162  26F3               	addwf	prodl,f,c
 17648  003164  0E00               	movlw	0
 17649  003166  22F4               	addwfc	prodh,f,c
 17650  003168  0E00               	movlw	low _ConnectionTable
 17651  00316A  24F3               	addwf	prodl,w,c
 17652  00316C  6ED9               	movwf	fsr2l,c
 17653  00316E  0E06               	movlw	high _ConnectionTable
 17654  003170  20F4               	addwfc	prodh,w,c
 17655  003172  6EDA               	movwf	fsr2h,c
 17656  003174  80DF               	bsf	indf2,0,c
 17657                           
 17658                           ;miwi_mesh.c: 1168: ConnectionTable[entry].status.bits.longAddressValid = 1;
 17659  003176  0101               	movlb	1	; () banked
 17660  003178  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17661  00317A  0D09               	mullw	9
 17662  00317C  0E08               	movlw	8
 17663  00317E  26F3               	addwf	prodl,f,c
 17664  003180  0E00               	movlw	0
 17665  003182  22F4               	addwfc	prodh,f,c
 17666  003184  0E00               	movlw	low _ConnectionTable
 17667  003186  24F3               	addwf	prodl,w,c
 17668  003188  6ED9               	movwf	fsr2l,c
 17669  00318A  0E06               	movlw	high _ConnectionTable
 17670  00318C  20F4               	addwfc	prodh,w,c
 17671  00318E  6EDA               	movwf	fsr2h,c
 17672  003190  84DF               	bsf	indf2,2,c
 17673                           
 17674                           ;miwi_mesh.c: 1169: ConnectionTable[entry].status.bits.shortAddressValid = 1;
 17675  003192  0101               	movlb	1	; () banked
 17676  003194  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17677  003196  0D09               	mullw	9
 17678  003198  0E08               	movlw	8
 17679  00319A  26F3               	addwf	prodl,f,c
 17680  00319C  0E00               	movlw	0
 17681  00319E  22F4               	addwfc	prodh,f,c
 17682  0031A0  0E00               	movlw	low _ConnectionTable
 17683  0031A2  24F3               	addwf	prodl,w,c
 17684  0031A4  6ED9               	movwf	fsr2l,c
 17685  0031A6  0E06               	movlw	high _ConnectionTable
 17686  0031A8  20F4               	addwfc	prodh,w,c
 17687  0031AA  6EDA               	movwf	fsr2h,c
 17688  0031AC  86DF               	bsf	indf2,3,c
 17689                           
 17690                           ;miwi_mesh.c: 1170: ConnectionTable[entry].status.bits.isValid = 1;
 17691  0031AE  0101               	movlb	1	; () banked
 17692  0031B0  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17693  0031B2  0D09               	mullw	9
 17694  0031B4  0E08               	movlw	8
 17695  0031B6  26F3               	addwf	prodl,f,c
 17696  0031B8  0E00               	movlw	0
 17697  0031BA  22F4               	addwfc	prodh,f,c
 17698  0031BC  0E00               	movlw	low _ConnectionTable
 17699  0031BE  24F3               	addwf	prodl,w,c
 17700  0031C0  6ED9               	movwf	fsr2l,c
 17701  0031C2  0E06               	movlw	high _ConnectionTable
 17702  0031C4  20F4               	addwfc	prodh,w,c
 17703  0031C6  6EDA               	movwf	fsr2h,c
 17704  0031C8  8EDF               	bsf	indf2,7,c
 17705  0031CA                     l18403:
 17706                           
 17707                           ; BSR set to: 1
 17708                           ;miwi_mesh.c: 1175: }
 17709                           ;miwi_mesh.c: 1176: }
 17710                           ;miwi_mesh.c: 1187: if(MiWiStateMachine.bits.searchingForNetwork)
 17711  0031CA  0101               	movlb	1	; () banked
 17712  0031CC  A1B5               	btfss	_MiWiStateMachine& (0+255),0,b
 17713  0031CE  EF84  F01D         	goto	l641
 17714                           
 17715                           ; BSR set to: 1
 17716                           ;miwi_mesh.c: 1188: {
 17717                           ;miwi_mesh.c: 1194: tempPANID.v[0] = MACRxPacket.Payload[0];
 17718  0031D2  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17719  0031D6  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17720  0031DA  50DF               	movf	indf2,w,c
 17721  0031DC  0101               	movlb	1	; () banked
 17722  0031DE  6FBB               	movwf	_tempPANID& (0+255),b
 17723                           
 17724                           ; BSR set to: 1
 17725                           ;miwi_mesh.c: 1195: tempPANID.v[1] = MACRxPacket.Payload[1];
 17726  0031E0  0101               	movlb	1	; () banked
 17727  0031E2  EE20 F001          	lfsr	2,1
 17728  0031E6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17729  0031E8  26D9               	addwf	fsr2l,f,c
 17730  0031EA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17731  0031EC  22DA               	addwfc	fsr2h,f,c
 17732  0031EE  50DF               	movf	indf2,w,c
 17733  0031F0  0101               	movlb	1	; () banked
 17734  0031F2  6FBC               	movwf	(_tempPANID+1)& (0+255),b
 17735                           
 17736                           ; BSR set to: 1
 17737                           ;miwi_mesh.c: 1196: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17738  0031F4  0101               	movlb	1	; () banked
 17739  0031F6  EE20 F002          	lfsr	2,2
 17740  0031FA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17741  0031FC  26D9               	addwf	fsr2l,f,c
 17742  0031FE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17743  003200  22DA               	addwfc	fsr2h,f,c
 17744  003202  50DF               	movf	indf2,w,c
 17745  003204  0101               	movlb	1	; () banked
 17746  003206  6FF4               	movwf	_tempShortAddress& (0+255),b
 17747                           
 17748                           ; BSR set to: 1
 17749                           ;miwi_mesh.c: 1197: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17750  003208  0101               	movlb	1	; () banked
 17751  00320A  EE20 F003          	lfsr	2,3
 17752  00320E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17753  003210  26D9               	addwf	fsr2l,f,c
 17754  003212  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17755  003214  22DA               	addwfc	fsr2h,f,c
 17756  003216  50DF               	movf	indf2,w,c
 17757  003218  0101               	movlb	1	; () banked
 17758  00321A  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17759                           
 17760                           ; BSR set to: 1
 17761                           ;miwi_mesh.c: 1201: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 17762  00321C  0101               	movlb	1	; () banked
 17763  00321E  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17764  003220  0D01               	mullw	1
 17765  003222  50F3               	movf	prodl,w,c
 17766  003224  0101               	movlb	1	; () banked
 17767  003226  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17768  003228  6ED9               	movwf	fsr2l,c
 17769  00322A  50F4               	movf	prodh,w,c
 17770  00322C  0101               	movlb	1	; () banked
 17771  00322E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17772  003230  6EDA               	movwf	fsr2h,c
 17773  003232  28DE               	incf	postinc2,w,c
 17774  003234  A4D8               	btfss	status,2,c
 17775  003236  EF84  F01D         	goto	l641
 17776                           
 17777                           ; BSR set to: 1
 17778                           ;miwi_mesh.c: 1202: {
 17779                           ;miwi_mesh.c: 1203: MIWI_CAPACITY_INFO CapacityByte;
 17780                           ;miwi_mesh.c: 1204: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 17781  00323A  0101               	movlb	1	; () banked
 17782  00323C  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17783  00323E  0101               	movlb	1	; () banked
 17784  003240  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17785  003242  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17786  003244  0E01               	movlw	1
 17787  003246  0101               	movlb	1	; () banked
 17788  003248  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17789  00324A  0E00               	movlw	0
 17790  00324C  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17791  00324E  0101               	movlb	1	; () banked
 17792  003250  514A               	movf	??_MiWiTasks& (0+255),w,b
 17793  003252  0101               	movlb	1	; () banked
 17794  003254  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17795  003256  6ED9               	movwf	fsr2l,c
 17796  003258  0101               	movlb	1	; () banked
 17797  00325A  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17798  00325C  0101               	movlb	1	; () banked
 17799  00325E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17800  003260  6EDA               	movwf	fsr2h,c
 17801  003262  50DF               	movf	indf2,w,c
 17802  003264  0101               	movlb	1	; () banked
 17803  003266  6F70               	movwf	MiWiTasks@CapacityByte& (0+255),b
 17804                           
 17805                           ; BSR set to: 1
 17806                           ;miwi_mesh.c: 1205: if( (ActiveScanResultIndex < 4) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 17807  003268  0E04               	movlw	4
 17808  00326A  0101               	movlb	1	; () banked
 17809  00326C  61BD               	cpfslt	_ActiveScanResultIndex& (0+255),b
 17810  00326E  EF84  F01D         	goto	l641
 17811                           
 17812                           ; BSR set to: 1
 17813  003272  0101               	movlb	1	; () banked
 17814  003274  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17815  003276  0B03               	andlw	3
 17816  003278  0101               	movlb	1	; () banked
 17817  00327A  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17818  00327C  0E02               	movlw	2
 17819  00327E  0101               	movlb	1	; () banked
 17820  003280  614A               	cpfslt	??_MiWiTasks& (0+255),b
 17821  003282  EF84  F01D         	goto	l641
 17822                           
 17823                           ; BSR set to: 1
 17824                           ;miwi_mesh.c: 1206: {
 17825                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 17826  003286  0101               	movlb	1	; () banked
 17827  003288  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17828  00328A  0D0A               	mullw	10
 17829  00328C  0E00               	movlw	low _ActiveScanResults
 17830  00328E  24F3               	addwf	prodl,w,c
 17831  003290  6ED9               	movwf	fsr2l,c
 17832  003292  0E02               	movlw	high _ActiveScanResults
 17833  003294  20F4               	addwfc	prodh,w,c
 17834  003296  6EDA               	movwf	fsr2h,c
 17835  003298  C1F6  FFDF         	movff	_currentChannel,indf2
 17836                           
 17837                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 17838  00329C  0101               	movlb	1	; () banked
 17839  00329E  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17840  0032A0  0D0A               	mullw	10
 17841  0032A2  0E07               	movlw	7
 17842  0032A4  26F3               	addwf	prodl,f,c
 17843  0032A6  0E00               	movlw	0
 17844  0032A8  22F4               	addwfc	prodh,f,c
 17845  0032AA  0E00               	movlw	low _ActiveScanResults
 17846  0032AC  24F3               	addwf	prodl,w,c
 17847  0032AE  6ED9               	movwf	fsr2l,c
 17848  0032B0  0E02               	movlw	high _ActiveScanResults
 17849  0032B2  20F4               	addwfc	prodh,w,c
 17850  0032B4  6EDA               	movwf	fsr2h,c
 17851  0032B6  C198  FFDF         	movff	_rxMessage+8,indf2
 17852                           
 17853                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 17854  0032BA  0101               	movlb	1	; () banked
 17855  0032BC  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17856  0032BE  0D0A               	mullw	10
 17857  0032C0  0E08               	movlw	8
 17858  0032C2  26F3               	addwf	prodl,f,c
 17859  0032C4  0E00               	movlw	0
 17860  0032C6  22F4               	addwfc	prodh,f,c
 17861  0032C8  0E00               	movlw	low _ActiveScanResults
 17862  0032CA  24F3               	addwf	prodl,w,c
 17863  0032CC  6ED9               	movwf	fsr2l,c
 17864  0032CE  0E02               	movlw	high _ActiveScanResults
 17865  0032D0  20F4               	addwfc	prodh,w,c
 17866  0032D2  6EDA               	movwf	fsr2h,c
 17867  0032D4  C199  FFDF         	movff	_rxMessage+9,indf2
 17868                           
 17869                           ;miwi_mesh.c: 1211: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 17870  0032D8  0101               	movlb	1	; () banked
 17871  0032DA  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17872  0032DC  0D0A               	mullw	10
 17873  0032DE  0E05               	movlw	5
 17874  0032E0  26F3               	addwf	prodl,f,c
 17875  0032E2  0E00               	movlw	0
 17876  0032E4  22F4               	addwfc	prodh,f,c
 17877  0032E6  0E00               	movlw	low _ActiveScanResults
 17878  0032E8  24F3               	addwf	prodl,w,c
 17879  0032EA  6ED9               	movwf	fsr2l,c
 17880  0032EC  0E02               	movlw	high _ActiveScanResults
 17881  0032EE  20F4               	addwfc	prodh,w,c
 17882  0032F0  6EDA               	movwf	fsr2h,c
 17883  0032F2  C1BB  FFDE         	movff	_tempPANID,postinc2
 17884  0032F6  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 17885                           
 17886                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 17887  0032FA  0101               	movlb	1	; () banked
 17888  0032FC  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17889  0032FE  0D0A               	mullw	10
 17890  003300  0E09               	movlw	9
 17891  003302  26F3               	addwf	prodl,f,c
 17892  003304  0E00               	movlw	0
 17893  003306  22F4               	addwfc	prodh,f,c
 17894  003308  0E00               	movlw	low _ActiveScanResults
 17895  00330A  24F3               	addwf	prodl,w,c
 17896  00330C  6ED9               	movwf	fsr2l,c
 17897  00330E  0E02               	movlw	high _ActiveScanResults
 17898  003310  20F4               	addwfc	prodh,w,c
 17899  003312  6EDA               	movwf	fsr2h,c
 17900  003314  0E00               	movlw	0
 17901  003316  6EDF               	movwf	indf2,c
 17902                           
 17903                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 17904  003318  0101               	movlb	1	; () banked
 17905  00331A  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17906  00331C  0D0A               	mullw	10
 17907  00331E  0E09               	movlw	9
 17908  003320  26F3               	addwf	prodl,f,c
 17909  003322  0E00               	movlw	0
 17910  003324  22F4               	addwfc	prodh,f,c
 17911  003326  0E00               	movlw	low _ActiveScanResults
 17912  003328  24F3               	addwf	prodl,w,c
 17913  00332A  6ED9               	movwf	fsr2l,c
 17914  00332C  0E02               	movlw	high _ActiveScanResults
 17915  00332E  20F4               	addwfc	prodh,w,c
 17916  003330  6EDA               	movwf	fsr2h,c
 17917  003332  0102               	movlb	2	; () banked
 17918  003334  8CDF               	bsf	indf2,6,c
 17919                           
 17920                           ;miwi_mesh.c: 1215: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 17921  003336  0101               	movlb	1	; () banked
 17922  003338  3170               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 17923  00333A  0B03               	andlw	3
 17924  00333C  0101               	movlb	1	; () banked
 17925  00333E  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17926  003340  0101               	movlb	1	; () banked
 17927  003342  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17928  003344  0D0A               	mullw	10
 17929  003346  0E09               	movlw	9
 17930  003348  26F3               	addwf	prodl,f,c
 17931  00334A  0E00               	movlw	0
 17932  00334C  22F4               	addwfc	prodh,f,c
 17933  00334E  0E00               	movlw	low _ActiveScanResults
 17934  003350  24F3               	addwf	prodl,w,c
 17935  003352  6ED9               	movwf	fsr2l,c
 17936  003354  0E02               	movlw	high _ActiveScanResults
 17937  003356  20F4               	addwfc	prodh,w,c
 17938  003358  6EDA               	movwf	fsr2h,c
 17939  00335A  0102               	movlb	2	; () banked
 17940  00335C  50DF               	movf	223,w,c
 17941  00335E  0101               	movlb	1	; () banked
 17942  003360  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 17943  003362  0BFC               	andlw	-4
 17944  003364  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 17945  003366  0102               	movlb	2	; () banked
 17946  003368  6EDF               	movwf	223,c
 17947                           
 17948                           ; BSR set to: 2
 17949                           ;miwi_mesh.c: 1216: if( CapacityByte.bits.Security )
 17950  00336A  0101               	movlb	1	; () banked
 17951  00336C  A770               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 17952  00336E  D00F               	goto	l18427
 17953                           
 17954                           ; BSR set to: 1
 17955                           ;miwi_mesh.c: 1217: {
 17956                           ;miwi_mesh.c: 1218: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 17957  003370  0101               	movlb	1	; () banked
 17958  003372  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17959  003374  0D0A               	mullw	10
 17960  003376  0E09               	movlw	9
 17961  003378  26F3               	addwf	prodl,f,c
 17962  00337A  0E00               	movlw	0
 17963  00337C  22F4               	addwfc	prodh,f,c
 17964  00337E  0E00               	movlw	low _ActiveScanResults
 17965  003380  24F3               	addwf	prodl,w,c
 17966  003382  6ED9               	movwf	fsr2l,c
 17967  003384  0E02               	movlw	high _ActiveScanResults
 17968  003386  20F4               	addwfc	prodh,w,c
 17969  003388  6EDA               	movwf	fsr2h,c
 17970  00338A  0102               	movlb	2	; () banked
 17971  00338C  86DF               	bsf	indf2,3,c
 17972  00338E                     l18427:
 17973                           
 17974                           ;miwi_mesh.c: 1219: }
 17975                           ;miwi_mesh.c: 1220: if( CapacityByte.bits.ConnMode <= 0x01 )
 17976  00338E  0101               	movlb	1	; () banked
 17977  003390  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17978  003392  0B03               	andlw	3
 17979  003394  0101               	movlb	1	; () banked
 17980  003396  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17981  003398  0E02               	movlw	2
 17982  00339A  0101               	movlb	1	; () banked
 17983  00339C  614A               	cpfslt	??_MiWiTasks& (0+255),b
 17984  00339E  D00F               	goto	l18431
 17985                           
 17986                           ; BSR set to: 1
 17987                           ;miwi_mesh.c: 1221: {
 17988                           ;miwi_mesh.c: 1222: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 17989  0033A0  0101               	movlb	1	; () banked
 17990  0033A2  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17991  0033A4  0D0A               	mullw	10
 17992  0033A6  0E09               	movlw	9
 17993  0033A8  26F3               	addwf	prodl,f,c
 17994  0033AA  0E00               	movlw	0
 17995  0033AC  22F4               	addwfc	prodh,f,c
 17996  0033AE  0E00               	movlw	low _ActiveScanResults
 17997  0033B0  24F3               	addwf	prodl,w,c
 17998  0033B2  6ED9               	movwf	fsr2l,c
 17999  0033B4  0E02               	movlw	high _ActiveScanResults
 18000  0033B6  20F4               	addwfc	prodh,w,c
 18001  0033B8  6EDA               	movwf	fsr2h,c
 18002  0033BA  0102               	movlb	2	; () banked
 18003  0033BC  8ADF               	bsf	indf2,5,c
 18004  0033BE                     l18431:
 18005                           
 18006                           ;miwi_mesh.c: 1223: }
 18007                           ;miwi_mesh.c: 1231: for(i = 0; i < 4; i++)
 18008  0033BE  0E00               	movlw	0
 18009  0033C0  0101               	movlb	1	; () banked
 18010  0033C2  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18011  0033C4                     l18433:
 18012                           
 18013                           ; BSR set to: 1
 18014  0033C4  0E03               	movlw	3
 18015  0033C6  0101               	movlb	1	; () banked
 18016  0033C8  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18017  0033CA  D001               	goto	l18437
 18018  0033CC  D02E               	goto	l18443
 18019  0033CE                     l18437:
 18020                           
 18021                           ; BSR set to: 1
 18022                           ;miwi_mesh.c: 1232: {
 18023                           ;miwi_mesh.c: 1233: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 18024  0033CE  0101               	movlb	1	; () banked
 18025  0033D0  517C               	movf	MiWiTasks@i& (0+255),w,b
 18026  0033D2  0D01               	mullw	1
 18027  0033D4  50F3               	movf	prodl,w,c
 18028  0033D6  0101               	movlb	1	; () banked
 18029  0033D8  2593               	addwf	(_rxMessage+3)& (0+255),w,b
 18030  0033DA  6ED9               	movwf	fsr2l,c
 18031  0033DC  50F4               	movf	prodh,w,c
 18032  0033DE  0101               	movlb	1	; () banked
 18033  0033E0  2194               	addwfc	(_rxMessage+4)& (0+255),w,b
 18034  0033E2  6EDA               	movwf	fsr2h,c
 18035  0033E4  0101               	movlb	1	; () banked
 18036  0033E6  517C               	movf	MiWiTasks@i& (0+255),w,b
 18037  0033E8  0D01               	mullw	1
 18038  0033EA  0E01               	movlw	1
 18039  0033EC  26F3               	addwf	prodl,f,c
 18040  0033EE  0E00               	movlw	0
 18041  0033F0  22F4               	addwfc	prodh,f,c
 18042  0033F2  0E00               	movlw	low _ActiveScanResults
 18043  0033F4  0101               	movlb	1	; () banked
 18044  0033F6  6F4A               	movwf	??_MiWiTasks& (0+255),b
 18045  0033F8  0E02               	movlw	high _ActiveScanResults
 18046  0033FA  0101               	movlb	1	; () banked
 18047  0033FC  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18048  0033FE  50F3               	movf	prodl,w,c
 18049  003400  0101               	movlb	1	; () banked
 18050  003402  274A               	addwf	??_MiWiTasks& (0+255),f,b
 18051  003404  50F4               	movf	prodh,w,c
 18052  003406  0101               	movlb	1	; () banked
 18053  003408  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 18054  00340A  0101               	movlb	1	; () banked
 18055  00340C  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 18056  00340E  0D0A               	mullw	10
 18057  003410  50F3               	movf	prodl,w,c
 18058  003412  0101               	movlb	1	; () banked
 18059  003414  254A               	addwf	??_MiWiTasks& (0+255),w,b
 18060  003416  6EE1               	movwf	fsr1l,c
 18061  003418  50F4               	movf	prodh,w,c
 18062  00341A  0101               	movlb	1	; () banked
 18063  00341C  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 18064  00341E  6EE2               	movwf	fsr1h,c
 18065  003420  CFDF FFE7          	movff	indf2,indf1
 18066                           
 18067                           ; BSR set to: 1
 18068  003424  0101               	movlb	1	; () banked
 18069  003426  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18070  003428  D7CD               	goto	l18433
 18071  00342A                     l18443:
 18072                           
 18073                           ; BSR set to: 1
 18074                           ;miwi_mesh.c: 1234: }
 18075                           ;miwi_mesh.c: 1242: ActiveScanResultIndex++;
 18076  00342A  0101               	movlb	1	; () banked
 18077  00342C  2BBD               	incf	_ActiveScanResultIndex& (0+255),f,b
 18078                           
 18079                           ; BSR set to: 1
 18080                           ;miwi_mesh.c: 1243: }
 18081                           ;miwi_mesh.c: 1244: }
 18082                           ;miwi_mesh.c: 1245: }
 18083                           ;miwi_mesh.c: 1246: }
 18084                           ;miwi_mesh.c: 1247: break;
 18085                           
 18086                           ; BSR set to: 1
 18087                           
 18088                           ; BSR set to: 1
 18089  00342E  D36C               	goto	l641
 18090  003430                     l18445:
 18091                           
 18092                           ;miwi_mesh.c: 1258: {
 18093                           ;miwi_mesh.c: 1259: uint8_t handle;
 18094                           ;miwi_mesh.c: 1260: uint8_t associateStatus = 0x00;
 18095  003430  0E00               	movlw	0
 18096  003432  0101               	movlb	1	; () banked
 18097  003434  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 18098                           
 18099                           ; BSR set to: 1
 18100                           ;miwi_mesh.c: 1262: if( ConnMode > 0x01 )
 18101  003436  0E01               	movlw	1
 18102  003438  0101               	movlb	1	; () banked
 18103  00343A  65BF               	cpfsgt	_ConnMode& (0+255),b
 18104  00343C  D001               	goto	l18451
 18105  00343E  D364               	goto	l641
 18106  003440                     l18451:
 18107                           
 18108                           ; BSR set to: 1
 18109                           ;miwi_mesh.c: 1265: }
 18110                           ;miwi_mesh.c: 1268: for(i = 0; i < 4; i++)
 18111  003440  0E00               	movlw	0
 18112  003442  0101               	movlb	1	; () banked
 18113  003444  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18114  003446                     l18453:
 18115                           
 18116                           ; BSR set to: 1
 18117  003446  0E03               	movlw	3
 18118  003448  0101               	movlb	1	; () banked
 18119  00344A  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18120  00344C  D001               	goto	l18457
 18121  00344E  D019               	goto	l18463
 18122  003450                     l18457:
 18123                           
 18124                           ; BSR set to: 1
 18125                           ;miwi_mesh.c: 1269: {
 18126                           ;miwi_mesh.c: 1270: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18127  003450  0101               	movlb	1	; () banked
 18128  003452  517C               	movf	MiWiTasks@i& (0+255),w,b
 18129  003454  0D01               	mullw	1
 18130  003456  50F3               	movf	prodl,w,c
 18131  003458  0101               	movlb	1	; () banked
 18132  00345A  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18133  00345C  6ED9               	movwf	fsr2l,c
 18134  00345E  50F4               	movf	prodh,w,c
 18135  003460  0101               	movlb	1	; () banked
 18136  003462  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18137  003464  6EDA               	movwf	fsr2h,c
 18138  003466  0101               	movlb	1	; () banked
 18139  003468  517C               	movf	MiWiTasks@i& (0+255),w,b
 18140  00346A  0D01               	mullw	1
 18141  00346C  0EA6               	movlw	low _tempLongAddress
 18142  00346E  24F3               	addwf	prodl,w,c
 18143  003470  6EE1               	movwf	fsr1l,c
 18144  003472  0E01               	movlw	high _tempLongAddress
 18145  003474  20F4               	addwfc	prodh,w,c
 18146  003476  6EE2               	movwf	fsr1h,c
 18147  003478  CFDF FFE7          	movff	indf2,indf1
 18148                           
 18149                           ; BSR set to: 1
 18150  00347C  0101               	movlb	1	; () banked
 18151  00347E  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18152  003480  D7E2               	goto	l18453
 18153  003482                     l18463:
 18154                           
 18155                           ; BSR set to: 1
 18156                           ;miwi_mesh.c: 1271: }
 18157                           ;miwi_mesh.c: 1273: handle = SearchForLongAddress();
 18158  003482  ECB4  F04E         	call	_SearchForLongAddress	;wreg free
 18159  003486  0101               	movlb	1	; () banked
 18160  003488  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18161                           
 18162                           ; BSR set to: 1
 18163                           ;miwi_mesh.c: 1274: if( handle == 0xFF )
 18164  00348A  0101               	movlb	1	; () banked
 18165  00348C  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18166  00348E  A4D8               	btfss	status,2,c
 18167  003490  D01C               	goto	l18481
 18168                           
 18169                           ; BSR set to: 1
 18170                           ;miwi_mesh.c: 1275: {
 18171                           ;miwi_mesh.c: 1276: if( ConnMode > 0x00 )
 18172  003492  0101               	movlb	1	; () banked
 18173  003494  51BF               	movf	_ConnMode& (0+255),w,b
 18174  003496  A4D8               	btfss	status,2,c
 18175  003498  D337               	goto	l641
 18176                           
 18177                           ; BSR set to: 1
 18178                           ;miwi_mesh.c: 1279: }
 18179                           ;miwi_mesh.c: 1280: tempNodeStatus.Val = 0xB7;
 18180                           
 18181                           ; BSR set to: 1
 18182                           
 18183                           ; BSR set to: 1
 18184                           ;miwi_mesh.c: 1277: {
 18185                           ;miwi_mesh.c: 1278: break;
 18186  00349A  0EB7               	movlw	183
 18187  00349C  0100               	movlb	0	; () banked
 18188  00349E  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;miwi_mesh.c: 1281: tempPANID.Val = myPANID.Val;
 18192  0034A0  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18193  0034A4  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;miwi_mesh.c: 1284: handle = AddNodeToNetworkTable();
 18197  0034A8  EC16  F046         	call	_AddNodeToNetworkTable	;wreg free
 18198  0034AC  0101               	movlb	1	; () banked
 18199  0034AE  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18200                           
 18201                           ; BSR set to: 1
 18202                           ;miwi_mesh.c: 1285: if( handle == 0xFF )
 18203  0034B0  0101               	movlb	1	; () banked
 18204  0034B2  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18205  0034B4  A4D8               	btfss	status,2,c
 18206  0034B6  D02A               	goto	l18485
 18207                           
 18208                           ; BSR set to: 1
 18209                           ;miwi_mesh.c: 1286: {
 18210                           ;miwi_mesh.c: 1287: associateStatus = 0x01;
 18211  0034B8  0E01               	movlw	1
 18212  0034BA  0101               	movlb	1	; () banked
 18213  0034BC  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 18214                           
 18215                           ;miwi_mesh.c: 1288: tempShortAddress.Val = 0xFFFE;
 18216  0034BE  0EFF               	movlw	255
 18217  0034C0  0101               	movlb	1	; () banked
 18218  0034C2  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18219  0034C4  0EFE               	movlw	254
 18220  0034C6  6FF4               	movwf	_tempShortAddress& (0+255),b
 18221                           
 18222                           ;miwi_mesh.c: 1289: goto START_ASSOCIATION_RESPONSE;
 18223  0034C8  D09E               	goto	l18537
 18224  0034CA                     l18481:
 18225                           
 18226                           ; BSR set to: 1
 18227                           ;miwi_mesh.c: 1295: else
 18228                           ;miwi_mesh.c: 1296: {
 18229                           ;miwi_mesh.c: 1297: if( ConnectionTable[handle].status.bits.shortAddressValid )
 18230  0034CA  0101               	movlb	1	; () banked
 18231  0034CC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18232  0034CE  0D09               	mullw	9
 18233  0034D0  0E08               	movlw	8
 18234  0034D2  26F3               	addwf	prodl,f,c
 18235  0034D4  0E00               	movlw	0
 18236  0034D6  22F4               	addwfc	prodh,f,c
 18237  0034D8  0E00               	movlw	low _ConnectionTable
 18238  0034DA  24F3               	addwf	prodl,w,c
 18239  0034DC  6ED9               	movwf	fsr2l,c
 18240  0034DE  0E06               	movlw	high _ConnectionTable
 18241  0034E0  20F4               	addwfc	prodh,w,c
 18242  0034E2  6EDA               	movwf	fsr2h,c
 18243  0034E4  A6DF               	btfss	indf2,3,c
 18244  0034E6  D012               	goto	l18485
 18245                           
 18246                           ; BSR set to: 1
 18247                           ;miwi_mesh.c: 1298: {
 18248                           ;miwi_mesh.c: 1299: tempShortAddress.Val = ConnectionTable[handle].AltAddress.Val;
 18249  0034E8  0101               	movlb	1	; () banked
 18250  0034EA  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18251  0034EC  0D09               	mullw	9
 18252  0034EE  0E02               	movlw	2
 18253  0034F0  26F3               	addwf	prodl,f,c
 18254  0034F2  0E00               	movlw	0
 18255  0034F4  22F4               	addwfc	prodh,f,c
 18256  0034F6  0E00               	movlw	low _ConnectionTable
 18257  0034F8  24F3               	addwf	prodl,w,c
 18258  0034FA  6ED9               	movwf	fsr2l,c
 18259  0034FC  0E06               	movlw	high _ConnectionTable
 18260  0034FE  20F4               	addwfc	prodh,w,c
 18261  003500  6EDA               	movwf	fsr2h,c
 18262  003502  CFDE F1F4          	movff	postinc2,_tempShortAddress
 18263  003506  CFDD F1F5          	movff	postdec2,_tempShortAddress+1
 18264                           
 18265                           ;miwi_mesh.c: 1300: goto START_ASSOCIATION_RESPONSE;
 18266  00350A  D07D               	goto	l18537
 18267  00350C                     l18485:
 18268                           
 18269                           ; BSR set to: 1
 18270                           ;miwi_mesh.c: 1301: }
 18271                           ;miwi_mesh.c: 1302: }
 18272                           ;miwi_mesh.c: 1305: if(handle != 0xFF)
 18273  00350C  0101               	movlb	1	; () banked
 18274  00350E  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18275  003510  B4D8               	btfsc	status,2,c
 18276  003512  D079               	goto	l18537
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;miwi_mesh.c: 1306: {
 18280                           ;miwi_mesh.c: 1308: tempShortAddress.v[0] = handle + 1;
 18281  003514  0101               	movlb	1	; () banked
 18282  003516  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18283  003518  0101               	movlb	1	; () banked
 18284  00351A  6FF4               	movwf	_tempShortAddress& (0+255),b
 18285                           
 18286                           ; BSR set to: 1
 18287                           ;miwi_mesh.c: 1309: tempShortAddress.v[1] = myShortAddress.v[1];
 18288  00351C  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 18289                           
 18290                           ; BSR set to: 1
 18291                           ;miwi_mesh.c: 1310: tempPANID.Val = myPANID.Val;
 18292  003520  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18293  003524  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18294                           
 18295                           ;miwi_mesh.c: 1313: if(role == 0x02)
 18296  003528  0E02               	movlw	2
 18297  00352A  0101               	movlb	1	; () banked
 18298  00352C  19CA               	xorwf	_role& (0+255),w,b
 18299  00352E  A4D8               	btfss	status,2,c
 18300  003530  D047               	goto	l18521
 18301                           
 18302                           ; BSR set to: 1
 18303                           ;miwi_mesh.c: 1314: {
 18304                           ;miwi_mesh.c: 1315: if(MACRxPacket.Payload[1] & 0x40)
 18305  003532  0101               	movlb	1	; () banked
 18306  003534  EE20 F001          	lfsr	2,1
 18307  003538  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18308  00353A  26D9               	addwf	fsr2l,f,c
 18309  00353C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18310  00353E  22DA               	addwfc	fsr2h,f,c
 18311  003540  0101               	movlb	1	; () banked
 18312  003542  ACDF               	btfss	indf2,6,c
 18313  003544  D03D               	goto	l18521
 18314                           
 18315                           ; BSR set to: 1
 18316                           ;miwi_mesh.c: 1316: {
 18317                           ;miwi_mesh.c: 1318: uint8_t j;
 18318                           ;miwi_mesh.c: 1319: API_UINT16_UNION CoordAddress;
 18319                           ;miwi_mesh.c: 1320: uint8_t entry;
 18320                           ;miwi_mesh.c: 1322: CoordAddress.Val = tempShortAddress.Val;
 18321  003546  C1F4  F15E         	movff	_tempShortAddress,MiWiTasks@CoordAddress
 18322  00354A  C1F5  F15F         	movff	_tempShortAddress+1,MiWiTasks@CoordAddress+1
 18323                           
 18324                           ; BSR set to: 1
 18325                           ;miwi_mesh.c: 1323: tempShortAddress.v[0] = 0;
 18326  00354E  0E00               	movlw	0
 18327  003550  0101               	movlb	1	; () banked
 18328  003552  6FF4               	movwf	_tempShortAddress& (0+255),b
 18329                           
 18330                           ;miwi_mesh.c: 1326: for(j=1;j<8;j++)
 18331  003554  0E01               	movlw	1
 18332  003556  0101               	movlb	1	; () banked
 18333  003558  6F72               	movwf	MiWiTasks@j_2532& (0+255),b
 18334  00355A                     l18499:
 18335                           
 18336                           ; BSR set to: 1
 18337  00355A  0E07               	movlw	7
 18338  00355C  0101               	movlb	1	; () banked
 18339  00355E  6572               	cpfsgt	MiWiTasks@j_2532& (0+255),b
 18340  003560  D001               	goto	l746
 18341  003562  D025               	goto	l18517
 18342  003564                     l746:
 18343                           
 18344                           ; BSR set to: 1
 18345                           ;miwi_mesh.c: 1327: {
 18346                           ;miwi_mesh.c: 1328: tempShortAddress.v[1] = j;
 18347  003564  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 18348                           
 18349                           ; BSR set to: 1
 18350                           ;miwi_mesh.c: 1329: entry = SearchForShortAddress();
 18351  003568  EC87  F057         	call	_SearchForShortAddress	;wreg free
 18352  00356C  0101               	movlb	1	; () banked
 18353  00356E  6F61               	movwf	MiWiTasks@entry_2536& (0+255),b
 18354                           
 18355                           ; BSR set to: 1
 18356                           ;miwi_mesh.c: 1331: if(entry == 0xFF)
 18357  003570  0101               	movlb	1	; () banked
 18358  003572  2961               	incf	MiWiTasks@entry_2536& (0+255),w,b
 18359  003574  A4D8               	btfss	status,2,c
 18360  003576  D018               	goto	l18513
 18361                           
 18362                           ; BSR set to: 1
 18363                           ;miwi_mesh.c: 1332: {
 18364                           ;miwi_mesh.c: 1333: tempShortAddress.v[0] = 0x00;
 18365  003578  0E00               	movlw	0
 18366  00357A  0101               	movlb	1	; () banked
 18367  00357C  6FF4               	movwf	_tempShortAddress& (0+255),b
 18368                           
 18369                           ; BSR set to: 1
 18370                           ;miwi_mesh.c: 1334: tempShortAddress.v[1] = j;
 18371  00357E  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 18372                           
 18373                           ; BSR set to: 1
 18374                           ;miwi_mesh.c: 1335: knownCoordinators |= (1<<j);
 18375  003582  C172  F14A         	movff	MiWiTasks@j_2532,??_MiWiTasks
 18376  003586  0E01               	movlw	1
 18377  003588  0101               	movlb	1	; () banked
 18378  00358A  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18379  00358C  0101               	movlb	1	; () banked
 18380  00358E  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 18381  003590  D003               	goto	u20824
 18382  003592                     u20825:
 18383  003592  0101               	movlb	1	; () banked
 18384  003594  90D8               	bcf	status,0,c
 18385  003596  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 18386  003598                     u20824:
 18387  003598  0101               	movlb	1	; () banked
 18388  00359A  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 18389  00359C  D7FA               	goto	u20825
 18390  00359E  0101               	movlb	1	; () banked
 18391  0035A0  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18392  0035A2  0101               	movlb	1	; () banked
 18393  0035A4  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 18394                           
 18395                           ;miwi_mesh.c: 1339: break;
 18396  0035A6  D003               	goto	l18517
 18397  0035A8                     l18513:
 18398                           
 18399                           ; BSR set to: 1
 18400  0035A8  0101               	movlb	1	; () banked
 18401  0035AA  2B72               	incf	MiWiTasks@j_2532& (0+255),f,b
 18402  0035AC  D7D6               	goto	l18499
 18403  0035AE                     l18517:
 18404                           
 18405                           ; BSR set to: 1
 18406                           ;miwi_mesh.c: 1340: }
 18407                           ;miwi_mesh.c: 1341: }
 18408                           ;miwi_mesh.c: 1343: if(j==8)
 18409  0035AE  0E08               	movlw	8
 18410  0035B0  0101               	movlb	1	; () banked
 18411  0035B2  1972               	xorwf	MiWiTasks@j_2532& (0+255),w,b
 18412  0035B4  A4D8               	btfss	status,2,c
 18413  0035B6  D004               	goto	l18521
 18414                           
 18415                           ; BSR set to: 1
 18416                           ;miwi_mesh.c: 1344: {
 18417                           ;miwi_mesh.c: 1345: tempShortAddress.Val= CoordAddress.Val;
 18418  0035B8  C15E  F1F4         	movff	MiWiTasks@CoordAddress,_tempShortAddress
 18419  0035BC  C15F  F1F5         	movff	MiWiTasks@CoordAddress+1,_tempShortAddress+1
 18420  0035C0                     l18521:
 18421                           
 18422                           ; BSR set to: 1
 18423                           ;miwi_mesh.c: 1346: }
 18424                           ;miwi_mesh.c: 1348: }
 18425                           ;miwi_mesh.c: 1349: }
 18426                           ;miwi_mesh.c: 1352: tempNodeStatus.Val = 0xBF;
 18427  0035C0  0EBF               	movlw	191
 18428  0035C2  0100               	movlb	0	; () banked
 18429  0035C4  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;miwi_mesh.c: 1355: if((MACRxPacket.Payload[1] & 0x01) == 0)
 18433  0035C6  0101               	movlb	1	; () banked
 18434  0035C8  EE20 F001          	lfsr	2,1
 18435  0035CC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18436  0035CE  26D9               	addwf	fsr2l,f,c
 18437  0035D0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18438  0035D2  22DA               	addwfc	fsr2h,f,c
 18439  0035D4  0101               	movlb	1	; () banked
 18440  0035D6  B0DF               	btfsc	indf2,0,c
 18441  0035D8  D004               	goto	l18529
 18442                           
 18443                           ; BSR set to: 1
 18444                           ;miwi_mesh.c: 1356: {
 18445                           ;miwi_mesh.c: 1357: tempNodeStatus.bits.RXOnWhenIdle = 0;
 18446  0035DA  0100               	movlb	0	; () banked
 18447  0035DC  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;miwi_mesh.c: 1358: tempShortAddress.v[0] |= 0x80;
 18451  0035DE  0101               	movlb	1	; () banked
 18452  0035E0  8FF4               	bsf	_tempShortAddress& (0+255),7,b
 18453  0035E2                     l18529:
 18454                           
 18455                           ; BSR set to: 1
 18456                           ;miwi_mesh.c: 1359: }
 18457                           ;miwi_mesh.c: 1362: handle = AddNodeToNetworkTable();
 18458  0035E2  EC16  F046         	call	_AddNodeToNetworkTable	;wreg free
 18459  0035E6  0101               	movlb	1	; () banked
 18460  0035E8  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18461                           
 18462                           ; BSR set to: 1
 18463                           ;miwi_mesh.c: 1364: ConnectionTable[handle].status.bits.FinishJoin = 1;
 18464  0035EA  0101               	movlb	1	; () banked
 18465  0035EC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18466  0035EE  0D09               	mullw	9
 18467  0035F0  0E08               	movlw	8
 18468  0035F2  26F3               	addwf	prodl,f,c
 18469  0035F4  0E00               	movlw	0
 18470  0035F6  22F4               	addwfc	prodh,f,c
 18471  0035F8  0E00               	movlw	low _ConnectionTable
 18472  0035FA  24F3               	addwf	prodl,w,c
 18473  0035FC  6ED9               	movwf	fsr2l,c
 18474  0035FE  0E06               	movlw	high _ConnectionTable
 18475  003600  20F4               	addwfc	prodh,w,c
 18476  003602  6EDA               	movwf	fsr2h,c
 18477  003604  88DF               	bsf	indf2,4,c
 18478  003606                     l18537:
 18479                           
 18480                           ; BSR set to: 1
 18481                           ;miwi_mesh.c: 1387: TxBuffer[0] = 0x02;
 18482  003606  0E02               	movlw	2
 18483  003608  0102               	movlb	2	; () banked
 18484  00360A  6FA6               	movwf	_TxBuffer& (0+255),b
 18485                           
 18486                           ; BSR set to: 2
 18487                           ;miwi_mesh.c: 1388: TxBuffer[1] = tempShortAddress.v[0];
 18488  00360C  C1F4  F2A7         	movff	_tempShortAddress,_TxBuffer+1
 18489                           
 18490                           ; BSR set to: 2
 18491                           ;miwi_mesh.c: 1389: TxBuffer[2] = tempShortAddress.v[1];
 18492  003610  C1F5  F2A8         	movff	_tempShortAddress+1,_TxBuffer+2
 18493                           
 18494                           ; BSR set to: 2
 18495                           ;miwi_mesh.c: 1390: TxBuffer[3] = associateStatus;
 18496  003614  C163  F2A9         	movff	MiWiTasks@associateStatus,_TxBuffer+3
 18497                           
 18498                           ; BSR set to: 2
 18499                           ;miwi_mesh.c: 1397: TxData = 4+0;
 18500  003618  0E04               	movlw	4
 18501  00361A  0101               	movlb	1	; () banked
 18502  00361C  6FC6               	movwf	_TxData& (0+255),b
 18503                           
 18504                           ; BSR set to: 1
 18505                           ;miwi_mesh.c: 1400: IncomingFrameCounter[handle].Val = 0;
 18506  00361E  0101               	movlb	1	; () banked
 18507  003620  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18508  003622  0D04               	mullw	4
 18509  003624  0E00               	movlw	low _IncomingFrameCounter
 18510  003626  24F3               	addwf	prodl,w,c
 18511  003628  6ED9               	movwf	fsr2l,c
 18512  00362A  0E05               	movlw	high _IncomingFrameCounter
 18513  00362C  20F4               	addwfc	prodh,w,c
 18514  00362E  6EDA               	movwf	fsr2h,c
 18515  003630  6ADE               	clrf	postinc2,c
 18516  003632  6ADE               	clrf	postinc2,c
 18517  003634  6ADE               	clrf	postinc2,c
 18518  003636  6ADD               	clrf	postdec2,c
 18519                           
 18520                           ; BSR set to: 1
 18521                           ;miwi_mesh.c: 1406: SendMACPacket(ConnectionTable[handle].Address, 0x01);
 18522  003638  0101               	movlb	1	; () banked
 18523  00363A  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18524  00363C  0D09               	mullw	9
 18525  00363E  0E04               	movlw	4
 18526  003640  26F3               	addwf	prodl,f,c
 18527  003642  0E00               	movlw	0
 18528  003644  22F4               	addwfc	prodh,f,c
 18529  003646  0E00               	movlw	low _ConnectionTable
 18530  003648  24F3               	addwf	prodl,w,c
 18531  00364A  0101               	movlb	1	; () banked
 18532  00364C  6F39               	movwf	SendMACPacket@Address& (0+255),b
 18533  00364E  0E06               	movlw	high _ConnectionTable
 18534  003650  20F4               	addwfc	prodh,w,c
 18535  003652  0101               	movlb	1	; () banked
 18536  003654  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 18537  003656  0E01               	movlw	1
 18538  003658  0101               	movlb	1	; () banked
 18539  00365A  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 18540  00365C  ECCB  F057         	call	_SendMACPacket	;wreg free
 18541                           
 18542                           ;miwi_mesh.c: 1408: }
 18543                           ;miwi_mesh.c: 1409: break;
 18544  003660  D253               	goto	l641
 18545  003662                     l18551:
 18546                           
 18547                           ;miwi_mesh.c: 1413: {
 18548                           ;miwi_mesh.c: 1414: if(MACRxPacket.Payload[3] == 0x00)
 18549  003662  0101               	movlb	1	; () banked
 18550  003664  EE20 F003          	lfsr	2,3
 18551  003668  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18552  00366A  26D9               	addwf	fsr2l,f,c
 18553  00366C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18554  00366E  22DA               	addwfc	fsr2h,f,c
 18555  003670  50DF               	movf	indf2,w,c
 18556  003672  A4D8               	btfss	status,2,c
 18557  003674  D0A4               	goto	l753
 18558                           
 18559                           ; BSR set to: 1
 18560                           ;miwi_mesh.c: 1415: {
 18561                           ;miwi_mesh.c: 1418: myShortAddress.v[0] = MACRxPacket.Payload[1];
 18562  003676  0101               	movlb	1	; () banked
 18563  003678  EE20 F001          	lfsr	2,1
 18564  00367C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18565  00367E  26D9               	addwf	fsr2l,f,c
 18566  003680  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18567  003682  22DA               	addwfc	fsr2h,f,c
 18568  003684  50DF               	movf	indf2,w,c
 18569  003686  0101               	movlb	1	; () banked
 18570  003688  6FF2               	movwf	_myShortAddress& (0+255),b
 18571                           
 18572                           ;miwi_mesh.c: 1419: myShortAddress.v[1] = MACRxPacket.Payload[2];
 18573  00368A  0101               	movlb	1	; () banked
 18574  00368C  EE20 F002          	lfsr	2,2
 18575  003690  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18576  003692  26D9               	addwf	fsr2l,f,c
 18577  003694  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18578  003696  22DA               	addwfc	fsr2h,f,c
 18579  003698  50DF               	movf	indf2,w,c
 18580  00369A  0101               	movlb	1	; () banked
 18581  00369C  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 18582                           
 18583                           ; BSR set to: 1
 18584                           ;miwi_mesh.c: 1422: if(myShortAddress.v[0] == 0x00)
 18585  00369E  0101               	movlb	1	; () banked
 18586  0036A0  51F2               	movf	_myShortAddress& (0+255),w,b
 18587  0036A2  A4D8               	btfss	status,2,c
 18588  0036A4  D025               	goto	l18563
 18589                           
 18590                           ; BSR set to: 1
 18591                           ;miwi_mesh.c: 1423: {
 18592                           ;miwi_mesh.c: 1424: ;
 18593                           ;miwi_mesh.c: 1425: role = 0x01;
 18594  0036A6  0E01               	movlw	1
 18595  0036A8  0101               	movlb	1	; () banked
 18596  0036AA  6FCA               	movwf	_role& (0+255),b
 18597                           
 18598                           ; BSR set to: 1
 18599                           ;miwi_mesh.c: 1426: MiWiCapacityInfo.bits.Role = role;
 18600  0036AC  C1CA  F14A         	movff	_role,??_MiWiTasks
 18601  0036B0  0101               	movlb	1	; () banked
 18602  0036B2  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 18603  0036B4  0101               	movlb	1	; () banked
 18604  0036B6  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 18605  0036B8  0101               	movlb	1	; () banked
 18606  0036BA  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18607  0036BC  0BF9               	andlw	-7
 18608  0036BE  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18609  0036C0  0101               	movlb	1	; () banked
 18610  0036C2  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 18611                           
 18612                           ; BSR set to: 1
 18613                           ;miwi_mesh.c: 1427: knownCoordinators |= ((1<<(myShortAddress.v[1] & 0x07)) + 1);
 18614  0036C4  C1F3  F14A         	movff	_myShortAddress+1,??_MiWiTasks
 18615  0036C8  0E07               	movlw	7
 18616  0036CA  0101               	movlb	1	; () banked
 18617  0036CC  174A               	andwf	??_MiWiTasks& (0+255),f,b
 18618  0036CE  0E01               	movlw	1
 18619  0036D0  0101               	movlb	1	; () banked
 18620  0036D2  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18621  0036D4  0101               	movlb	1	; () banked
 18622  0036D6  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 18623  0036D8  D003               	goto	u20884
 18624  0036DA                     u20885:
 18625  0036DA  0101               	movlb	1	; () banked
 18626  0036DC  90D8               	bcf	status,0,c
 18627  0036DE  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 18628  0036E0                     u20884:
 18629  0036E0  0101               	movlb	1	; () banked
 18630  0036E2  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 18631  0036E4  D7FA               	goto	u20885
 18632  0036E6  0101               	movlb	1	; () banked
 18633  0036E8  294B               	incf	(??_MiWiTasks+1)& (0+255),w,b
 18634  0036EA  0101               	movlb	1	; () banked
 18635  0036EC  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 18636                           
 18637                           ;miwi_mesh.c: 1429: }
 18638  0036EE  D00F               	goto	l18567
 18639  0036F0                     l18563:
 18640                           
 18641                           ; BSR set to: 1
 18642                           ;miwi_mesh.c: 1430: else
 18643                           ;miwi_mesh.c: 1431: {
 18644                           ;miwi_mesh.c: 1432: ;
 18645                           ;miwi_mesh.c: 1433: role = 0x00;
 18646  0036F0  0E00               	movlw	0
 18647  0036F2  0101               	movlb	1	; () banked
 18648  0036F4  6FCA               	movwf	_role& (0+255),b
 18649                           
 18650                           ; BSR set to: 1
 18651                           ;miwi_mesh.c: 1434: MiWiCapacityInfo.bits.Role = role;
 18652  0036F6  C1CA  F14A         	movff	_role,??_MiWiTasks
 18653  0036FA  0101               	movlb	1	; () banked
 18654  0036FC  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 18655  0036FE  0101               	movlb	1	; () banked
 18656  003700  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 18657  003702  0101               	movlb	1	; () banked
 18658  003704  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18659  003706  0BF9               	andlw	-7
 18660  003708  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18661  00370A  0101               	movlb	1	; () banked
 18662  00370C  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 18663  00370E                     l18567:
 18664                           
 18665                           ; BSR set to: 1
 18666                           ;miwi_mesh.c: 1435: }
 18667                           ;miwi_mesh.c: 1442: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18668  00370E  0EF2               	movlw	low _myShortAddress
 18669  003710  0101               	movlb	1	; () banked
 18670  003712  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18671  003714  0E01               	movlw	high _myShortAddress
 18672  003716  0101               	movlb	1	; () banked
 18673  003718  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18674  00371A  0EF0               	movlw	low _myPANID
 18675  00371C  0101               	movlb	1	; () banked
 18676  00371E  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18677  003720  0E01               	movlw	high _myPANID
 18678  003722  0101               	movlb	1	; () banked
 18679  003724  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18680  003726  ECEA  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 18681                           
 18682                           ;miwi_mesh.c: 1445: MiWiStateMachine.bits.memberOfNetwork = 1;
 18683  00372A  0101               	movlb	1	; () banked
 18684  00372C  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 18685                           
 18686                           ; BSR set to: 1
 18687                           ;miwi_mesh.c: 1448: tempNodeStatus.Val = 0xBF;
 18688  00372E  0EBF               	movlw	191
 18689  003730  0100               	movlb	0	; () banked
 18690  003732  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;miwi_mesh.c: 1449: for(i = 0; i < 4; i++)
 18694  003734  0E00               	movlw	0
 18695  003736  0101               	movlb	1	; () banked
 18696  003738  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18697  00373A                     l18575:
 18698                           
 18699                           ; BSR set to: 1
 18700  00373A  0E03               	movlw	3
 18701  00373C  0101               	movlb	1	; () banked
 18702  00373E  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18703  003740  D001               	goto	l18579
 18704  003742  D019               	goto	l18585
 18705  003744                     l18579:
 18706                           
 18707                           ; BSR set to: 1
 18708                           ;miwi_mesh.c: 1450: {
 18709                           ;miwi_mesh.c: 1451: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18710  003744  0101               	movlb	1	; () banked
 18711  003746  517C               	movf	MiWiTasks@i& (0+255),w,b
 18712  003748  0D01               	mullw	1
 18713  00374A  50F3               	movf	prodl,w,c
 18714  00374C  0101               	movlb	1	; () banked
 18715  00374E  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18716  003750  6ED9               	movwf	fsr2l,c
 18717  003752  50F4               	movf	prodh,w,c
 18718  003754  0101               	movlb	1	; () banked
 18719  003756  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18720  003758  6EDA               	movwf	fsr2h,c
 18721  00375A  0101               	movlb	1	; () banked
 18722  00375C  517C               	movf	MiWiTasks@i& (0+255),w,b
 18723  00375E  0D01               	mullw	1
 18724  003760  0EA6               	movlw	low _tempLongAddress
 18725  003762  24F3               	addwf	prodl,w,c
 18726  003764  6EE1               	movwf	fsr1l,c
 18727  003766  0E01               	movlw	high _tempLongAddress
 18728  003768  20F4               	addwfc	prodh,w,c
 18729  00376A  6EE2               	movwf	fsr1h,c
 18730  00376C  CFDF FFE7          	movff	indf2,indf1
 18731                           
 18732                           ; BSR set to: 1
 18733  003770  0101               	movlb	1	; () banked
 18734  003772  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18735  003774  D7E2               	goto	l18575
 18736  003776                     l18585:
 18737                           
 18738                           ; BSR set to: 1
 18739                           ;miwi_mesh.c: 1452: }
 18740                           ;miwi_mesh.c: 1454: if(myShortAddress.v[0] == 0x00)
 18741  003776  0101               	movlb	1	; () banked
 18742  003778  51F2               	movf	_myShortAddress& (0+255),w,b
 18743  00377A  A4D8               	btfss	status,2,c
 18744  00377C  D005               	goto	l758
 18745                           
 18746                           ; BSR set to: 1
 18747                           ;miwi_mesh.c: 1455: {
 18748                           ;miwi_mesh.c: 1458: tempShortAddress.Val = 0x0000;
 18749  00377E  0E00               	movlw	0
 18750  003780  0101               	movlb	1	; () banked
 18751  003782  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18752  003784  0E00               	movlw	0
 18753  003786  D004               	goto	L6
 18754  003788                     l758:
 18755                           
 18756                           ; BSR set to: 1
 18757                           ;miwi_mesh.c: 1460: else
 18758                           ;miwi_mesh.c: 1461: {
 18759                           ;miwi_mesh.c: 1462: tempShortAddress.v[1] = myShortAddress.v[1];
 18760  003788  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 18761                           
 18762                           ; BSR set to: 1
 18763                           ;miwi_mesh.c: 1463: tempShortAddress.v[0] = 0x00;
 18764  00378C  0E00               	movlw	0
 18765  00378E  0101               	movlb	1	; () banked
 18766  003790                     L6:
 18767  003790  6FF4               	movwf	_tempShortAddress& (0+255),b
 18768                           
 18769                           ; BSR set to: 1
 18770                           ;miwi_mesh.c: 1464: }
 18771                           ;miwi_mesh.c: 1466: tempPANID.Val = myPANID.Val;
 18772                           
 18773                           ; BSR set to: 1
 18774  003792  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18775  003796  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18776                           
 18777                           ; BSR set to: 1
 18778                           ;miwi_mesh.c: 1469: myParent = AddNodeToNetworkTable();
 18779  00379A  EC16  F046         	call	_AddNodeToNetworkTable	;wreg free
 18780  00379E  0101               	movlb	1	; () banked
 18781  0037A0  6FC9               	movwf	_myParent& (0+255),b
 18782                           
 18783                           ; BSR set to: 1
 18784                           ;miwi_mesh.c: 1471: IncomingFrameCounter[myParent].Val = 0;
 18785  0037A2  0101               	movlb	1	; () banked
 18786  0037A4  51C9               	movf	_myParent& (0+255),w,b
 18787  0037A6  0D04               	mullw	4
 18788  0037A8  0E00               	movlw	low _IncomingFrameCounter
 18789  0037AA  24F3               	addwf	prodl,w,c
 18790  0037AC  6ED9               	movwf	fsr2l,c
 18791  0037AE  0E05               	movlw	high _IncomingFrameCounter
 18792  0037B0  20F4               	addwfc	prodh,w,c
 18793  0037B2  6EDA               	movwf	fsr2h,c
 18794  0037B4  6ADE               	clrf	postinc2,c
 18795  0037B6  6ADE               	clrf	postinc2,c
 18796  0037B8  6ADE               	clrf	postinc2,c
 18797  0037BA  6ADD               	clrf	postdec2,c
 18798                           
 18799                           ;miwi_mesh.c: 1491: ;
 18800                           ;miwi_mesh.c: 1492: }
 18801  0037BC  D1A5               	goto	l641
 18802  0037BE                     l753:
 18803                           
 18804                           ; BSR set to: 1
 18805                           ;miwi_mesh.c: 1493: else
 18806                           ;miwi_mesh.c: 1494: {
 18807                           ;miwi_mesh.c: 1496: myParent = 0xFF;
 18808  0037BE  0101               	movlb	1	; () banked
 18809  0037C0  69C9               	setf	_myParent& (0+255),b
 18810                           
 18811                           ;miwi_mesh.c: 1497: myPANID.Val = 0xFFFF;
 18812  0037C2  0101               	movlb	1	; () banked
 18813  0037C4  69F0               	setf	_myPANID& (0+255),b
 18814  0037C6  69F1               	setf	(_myPANID+1)& (0+255),b
 18815                           
 18816                           ;miwi_mesh.c: 1498: tempShortAddress.Val = 0xFFFF;
 18817  0037C8  0101               	movlb	1	; () banked
 18818  0037CA  69F4               	setf	_tempShortAddress& (0+255),b
 18819  0037CC  69F5               	setf	(_tempShortAddress+1)& (0+255),b
 18820                           
 18821                           ; BSR set to: 1
 18822                           ;miwi_mesh.c: 1499: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18823  0037CE  0EF4               	movlw	low _tempShortAddress
 18824  0037D0  0101               	movlb	1	; () banked
 18825  0037D2  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18826  0037D4  0E01               	movlw	high _tempShortAddress
 18827  0037D6  0101               	movlb	1	; () banked
 18828  0037D8  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18829  0037DA  0EF0               	movlw	low _myPANID
 18830  0037DC  0101               	movlb	1	; () banked
 18831  0037DE  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18832  0037E0  0E01               	movlw	high _myPANID
 18833  0037E2  0101               	movlb	1	; () banked
 18834  0037E4  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18835  0037E6  ECEA  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 18836                           
 18837                           ;miwi_mesh.c: 1505: }
 18838                           ;miwi_mesh.c: 1506: }
 18839                           ;miwi_mesh.c: 1507: break;
 18840  0037EA  D18E               	goto	l641
 18841  0037EC                     l18599:
 18842                           
 18843                           ;miwi_mesh.c: 1511: {
 18844                           ;miwi_mesh.c: 1512: uint8_t cIndex;
 18845                           ;miwi_mesh.c: 1527: {
 18846                           ;miwi_mesh.c: 1528: for(i = 0; i < 4; i++)
 18847  0037EC  0E00               	movlw	0
 18848  0037EE  0101               	movlb	1	; () banked
 18849  0037F0  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18850  0037F2                     l18601:
 18851                           
 18852                           ; BSR set to: 1
 18853  0037F2  0E03               	movlw	3
 18854  0037F4  0101               	movlb	1	; () banked
 18855  0037F6  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18856  0037F8  D001               	goto	l18605
 18857  0037FA  D019               	goto	l18611
 18858  0037FC                     l18605:
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;miwi_mesh.c: 1529: {
 18862                           ;miwi_mesh.c: 1530: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18863  0037FC  0101               	movlb	1	; () banked
 18864  0037FE  517C               	movf	MiWiTasks@i& (0+255),w,b
 18865  003800  0D01               	mullw	1
 18866  003802  50F3               	movf	prodl,w,c
 18867  003804  0101               	movlb	1	; () banked
 18868  003806  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18869  003808  6ED9               	movwf	fsr2l,c
 18870  00380A  50F4               	movf	prodh,w,c
 18871  00380C  0101               	movlb	1	; () banked
 18872  00380E  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18873  003810  6EDA               	movwf	fsr2h,c
 18874  003812  0101               	movlb	1	; () banked
 18875  003814  517C               	movf	MiWiTasks@i& (0+255),w,b
 18876  003816  0D01               	mullw	1
 18877  003818  0EA6               	movlw	low _tempLongAddress
 18878  00381A  24F3               	addwf	prodl,w,c
 18879  00381C  6EE1               	movwf	fsr1l,c
 18880  00381E  0E01               	movlw	high _tempLongAddress
 18881  003820  20F4               	addwfc	prodh,w,c
 18882  003822  6EE2               	movwf	fsr1h,c
 18883  003824  CFDF FFE7          	movff	indf2,indf1
 18884                           
 18885                           ; BSR set to: 1
 18886  003828  0101               	movlb	1	; () banked
 18887  00382A  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18888  00382C  D7E2               	goto	l18601
 18889  00382E                     l18611:
 18890                           
 18891                           ; BSR set to: 1
 18892                           ;miwi_mesh.c: 1531: }
 18893                           ;miwi_mesh.c: 1532: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18894  00382E  ECB4  F04E         	call	_SearchForLongAddress	;wreg free
 18895  003832  0101               	movlb	1	; () banked
 18896  003834  6F6B               	movwf	MiWiTasks@cIndex& (0+255),b
 18897  003836  0101               	movlb	1	; () banked
 18898  003838  296B               	incf	MiWiTasks@cIndex& (0+255),w,b
 18899  00383A  B4D8               	btfsc	status,2,c
 18900  00383C  D165               	goto	l641
 18901                           
 18902                           ; BSR set to: 1
 18903                           ;miwi_mesh.c: 1535: }
 18904                           ;miwi_mesh.c: 1536: }
 18905                           ;miwi_mesh.c: 1539: if( ConnectionTable[cIndex].status.bits.isFamily )
 18906                           
 18907                           ; BSR set to: 1
 18908                           
 18909                           ; BSR set to: 1
 18910                           ;miwi_mesh.c: 1533: {
 18911                           ;miwi_mesh.c: 1534: break;
 18912  00383E  0101               	movlb	1	; () banked
 18913  003840  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 18914  003842  0D09               	mullw	9
 18915  003844  0E08               	movlw	8
 18916  003846  26F3               	addwf	prodl,f,c
 18917  003848  0E00               	movlw	0
 18918  00384A  22F4               	addwfc	prodh,f,c
 18919  00384C  0E00               	movlw	low _ConnectionTable
 18920  00384E  24F3               	addwf	prodl,w,c
 18921  003850  6ED9               	movwf	fsr2l,c
 18922  003852  0E06               	movlw	high _ConnectionTable
 18923  003854  20F4               	addwfc	prodh,w,c
 18924  003856  6EDA               	movwf	fsr2h,c
 18925  003858  AADF               	btfss	indf2,5,c
 18926  00385A  D156               	goto	l641
 18927                           
 18928                           ; BSR set to: 1
 18929                           ;miwi_mesh.c: 1540: {
 18930                           ;miwi_mesh.c: 1541: if( cIndex != myParent )
 18931  00385C  0101               	movlb	1	; () banked
 18932  00385E  51C9               	movf	_myParent& (0+255),w,b
 18933  003860  0101               	movlb	1	; () banked
 18934  003862  196B               	xorwf	MiWiTasks@cIndex& (0+255),w,b
 18935  003864  B4D8               	btfsc	status,2,c
 18936  003866  D010               	goto	l18621
 18937                           
 18938                           ; BSR set to: 1
 18939                           ;miwi_mesh.c: 1542: {
 18940                           ;miwi_mesh.c: 1543: ConnectionTable[cIndex].status.Val = 0;
 18941  003868  0101               	movlb	1	; () banked
 18942  00386A  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 18943  00386C  0D09               	mullw	9
 18944  00386E  0E08               	movlw	8
 18945  003870  26F3               	addwf	prodl,f,c
 18946  003872  0E00               	movlw	0
 18947  003874  22F4               	addwfc	prodh,f,c
 18948  003876  0E00               	movlw	low _ConnectionTable
 18949  003878  24F3               	addwf	prodl,w,c
 18950  00387A  6ED9               	movwf	fsr2l,c
 18951  00387C  0E06               	movlw	high _ConnectionTable
 18952  00387E  20F4               	addwfc	prodh,w,c
 18953  003880  6EDA               	movwf	fsr2h,c
 18954  003882  0E00               	movlw	0
 18955  003884  6EDF               	movwf	indf2,c
 18956                           
 18957                           ;miwi_mesh.c: 1547: }
 18958  003886  D140               	goto	l641
 18959  003888                     l18621:
 18960                           
 18961                           ; BSR set to: 1
 18962                           ;miwi_mesh.c: 1548: else
 18963                           ;miwi_mesh.c: 1549: {
 18964                           ;miwi_mesh.c: 1551: for(i = 0; i < 64; i++)
 18965  003888  0E00               	movlw	0
 18966  00388A  0101               	movlb	1	; () banked
 18967  00388C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18968  00388E                     l18623:
 18969                           
 18970                           ; BSR set to: 1
 18971  00388E  0E3F               	movlw	63
 18972  003890  0101               	movlb	1	; () banked
 18973  003892  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18974  003894  D001               	goto	l18627
 18975  003896  D081               	goto	l769
 18976  003898                     l18627:
 18977                           
 18978                           ; BSR set to: 1
 18979                           ;miwi_mesh.c: 1552: {
 18980                           ;miwi_mesh.c: 1553: if( ConnectionTable[i].status.bits.isValid &&
 18981                           ;miwi_mesh.c: 1554: ConnectionTable[i].status.bits.isFamily && (i != myParent ))
 18982  003898  0101               	movlb	1	; () banked
 18983  00389A  517C               	movf	MiWiTasks@i& (0+255),w,b
 18984  00389C  0D09               	mullw	9
 18985  00389E  0E08               	movlw	8
 18986  0038A0  26F3               	addwf	prodl,f,c
 18987  0038A2  0E00               	movlw	0
 18988  0038A4  22F4               	addwfc	prodh,f,c
 18989  0038A6  0E00               	movlw	low _ConnectionTable
 18990  0038A8  24F3               	addwf	prodl,w,c
 18991  0038AA  6ED9               	movwf	fsr2l,c
 18992  0038AC  0E06               	movlw	high _ConnectionTable
 18993  0038AE  20F4               	addwfc	prodh,w,c
 18994  0038B0  6EDA               	movwf	fsr2h,c
 18995  0038B2  AEDF               	btfss	indf2,7,c
 18996  0038B4  D060               	goto	l18661
 18997                           
 18998                           ; BSR set to: 1
 18999  0038B6  0101               	movlb	1	; () banked
 19000  0038B8  517C               	movf	MiWiTasks@i& (0+255),w,b
 19001  0038BA  0D09               	mullw	9
 19002  0038BC  0E08               	movlw	8
 19003  0038BE  26F3               	addwf	prodl,f,c
 19004  0038C0  0E00               	movlw	0
 19005  0038C2  22F4               	addwfc	prodh,f,c
 19006  0038C4  0E00               	movlw	low _ConnectionTable
 19007  0038C6  24F3               	addwf	prodl,w,c
 19008  0038C8  6ED9               	movwf	fsr2l,c
 19009  0038CA  0E06               	movlw	high _ConnectionTable
 19010  0038CC  20F4               	addwfc	prodh,w,c
 19011  0038CE  6EDA               	movwf	fsr2h,c
 19012  0038D0  AADF               	btfss	indf2,5,c
 19013  0038D2  D051               	goto	l18661
 19014                           
 19015                           ; BSR set to: 1
 19016  0038D4  0101               	movlb	1	; () banked
 19017  0038D6  51C9               	movf	_myParent& (0+255),w,b
 19018  0038D8  0101               	movlb	1	; () banked
 19019  0038DA  197C               	xorwf	MiWiTasks@i& (0+255),w,b
 19020  0038DC  B4D8               	btfsc	status,2,c
 19021  0038DE  D04B               	goto	l18661
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;miwi_mesh.c: 1555: {
 19025                           ;miwi_mesh.c: 1556: uint16_t j;
 19026                           ;miwi_mesh.c: 1558: {TxData = 0;};
 19027  0038E0  0E00               	movlw	0
 19028  0038E2  0101               	movlb	1	; () banked
 19029  0038E4  6FC6               	movwf	_TxData& (0+255),b
 19030                           
 19031                           ; BSR set to: 1
 19032                           ;miwi_mesh.c: 1559: TxBuffer[TxData++] = 0x03;
 19033  0038E6  0101               	movlb	1	; () banked
 19034  0038E8  51C6               	movf	_TxData& (0+255),w,b
 19035  0038EA  0D01               	mullw	1
 19036  0038EC  0EA6               	movlw	low _TxBuffer
 19037  0038EE  24F3               	addwf	prodl,w,c
 19038  0038F0  6ED9               	movwf	fsr2l,c
 19039  0038F2  0E02               	movlw	high _TxBuffer
 19040  0038F4  20F4               	addwfc	prodh,w,c
 19041  0038F6  6EDA               	movwf	fsr2h,c
 19042  0038F8  0E03               	movlw	3
 19043  0038FA  6EDF               	movwf	indf2,c
 19044                           
 19045                           ; BSR set to: 1
 19046  0038FC  0101               	movlb	1	; () banked
 19047  0038FE  2BC6               	incf	_TxData& (0+255),f,b
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;miwi_mesh.c: 1560: MTP.flags.Val = 0;
 19051  003900  0E00               	movlw	0
 19052  003902  0101               	movlb	1	; () banked
 19053  003904  6FAD               	movwf	_MTP& (0+255),b
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;miwi_mesh.c: 1561: MTP.flags.bits.ackReq = 1;
 19057  003906  0101               	movlb	1	; () banked
 19058  003908  8BAD               	bsf	_MTP& (0+255),5,b
 19059                           
 19060                           ; BSR set to: 1
 19061                           ;miwi_mesh.c: 1562: MTP.flags.bits.packetType = 0x01;
 19062  00390A  0101               	movlb	1	; () banked
 19063  00390C  51AD               	movf	_MTP& (0+255),w,b
 19064  00390E  0BFC               	andlw	-4
 19065  003910  0901               	iorlw	1
 19066  003912  6FAD               	movwf	_MTP& (0+255),b
 19067                           
 19068                           ; BSR set to: 1
 19069                           ;miwi_mesh.c: 1569: MTP.flags.bits.sourcePrsnt = 1;
 19070  003914  0101               	movlb	1	; () banked
 19071  003916  8FAD               	bsf	_MTP& (0+255),7,b
 19072                           
 19073                           ; BSR set to: 1
 19074                           ;miwi_mesh.c: 1570: MTP.DestAddress = ConnectionTable[i].Address;
 19075  003918  0101               	movlb	1	; () banked
 19076  00391A  517C               	movf	MiWiTasks@i& (0+255),w,b
 19077  00391C  0D09               	mullw	9
 19078  00391E  0E04               	movlw	4
 19079  003920  26F3               	addwf	prodl,f,c
 19080  003922  0E00               	movlw	0
 19081  003924  22F4               	addwfc	prodh,f,c
 19082  003926  0E00               	movlw	low _ConnectionTable
 19083  003928  24F3               	addwf	prodl,w,c
 19084  00392A  0101               	movlb	1	; () banked
 19085  00392C  6FAE               	movwf	(_MTP+1)& (0+255),b
 19086  00392E  0E06               	movlw	high _ConnectionTable
 19087  003930  20F4               	addwfc	prodh,w,c
 19088  003932  0101               	movlb	1	; () banked
 19089  003934  6FAF               	movwf	(_MTP+2)& (0+255),b
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;miwi_mesh.c: 1572: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 19093  003936  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 19094  00393A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 19095  00393E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 19096  003942  0EA6               	movlw	low _TxBuffer
 19097  003944  0101               	movlb	1	; () banked
 19098  003946  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 19099  003948  0E02               	movlw	high _TxBuffer
 19100  00394A  0101               	movlb	1	; () banked
 19101  00394C  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 19102  00394E  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 19103  003952  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 19104                           
 19105                           ;miwi_mesh.c: 1573: for(j = 0; j < 0xFFF; j++) {}
 19106  003956  0E00               	movlw	0
 19107  003958  0101               	movlb	1	; () banked
 19108  00395A  6F6A               	movwf	(MiWiTasks@j_2544+1)& (0+255),b
 19109  00395C  0E00               	movlw	0
 19110  00395E  6F69               	movwf	MiWiTasks@j_2544& (0+255),b
 19111  003960                     l18653:
 19112                           
 19113                           ; BSR set to: 1
 19114  003960  0101               	movlb	1	; () banked
 19115  003962  2969               	incf	MiWiTasks@j_2544& (0+255),w,b
 19116  003964  0E0F               	movlw	15
 19117  003966  0101               	movlb	1	; () banked
 19118  003968  596A               	subwfb	(MiWiTasks@j_2544+1)& (0+255),w,b
 19119  00396A  B0D8               	btfsc	status,0,c
 19120  00396C  D004               	goto	l18661
 19121                           
 19122                           ; BSR set to: 1
 19123                           
 19124                           ; BSR set to: 1
 19125                           
 19126                           ; BSR set to: 1
 19127  00396E  0101               	movlb	1	; () banked
 19128  003970  4B69               	infsnz	MiWiTasks@j_2544& (0+255),f,b
 19129  003972  2B6A               	incf	(MiWiTasks@j_2544+1)& (0+255),f,b
 19130  003974  D7F5               	goto	l18653
 19131  003976                     l18661:
 19132                           
 19133                           ; BSR set to: 1
 19134                           ;miwi_mesh.c: 1574: }
 19135                           ;miwi_mesh.c: 1575: ConnectionTable[i].status.Val = 0;
 19136  003976  0101               	movlb	1	; () banked
 19137  003978  517C               	movf	MiWiTasks@i& (0+255),w,b
 19138  00397A  0D09               	mullw	9
 19139  00397C  0E08               	movlw	8
 19140  00397E  26F3               	addwf	prodl,f,c
 19141  003980  0E00               	movlw	0
 19142  003982  22F4               	addwfc	prodh,f,c
 19143  003984  0E00               	movlw	low _ConnectionTable
 19144  003986  24F3               	addwf	prodl,w,c
 19145  003988  6ED9               	movwf	fsr2l,c
 19146  00398A  0E06               	movlw	high _ConnectionTable
 19147  00398C  20F4               	addwfc	prodh,w,c
 19148  00398E  6EDA               	movwf	fsr2h,c
 19149  003990  0E00               	movlw	0
 19150  003992  6EDF               	movwf	indf2,c
 19151                           
 19152                           ; BSR set to: 1
 19153  003994  0101               	movlb	1	; () banked
 19154  003996  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 19155  003998  D77A               	goto	l18623
 19156  00399A                     l769:
 19157                           
 19158                           ; BSR set to: 1
 19159                           ;miwi_mesh.c: 1576: }
 19160                           ;miwi_mesh.c: 1577: myParent = 0xFF;
 19161  00399A  0101               	movlb	1	; () banked
 19162  00399C  69C9               	setf	_myParent& (0+255),b
 19163                           
 19164                           ;miwi_mesh.c: 1578: myShortAddress.Val = 0xFFFF;
 19165  00399E  0101               	movlb	1	; () banked
 19166  0039A0  69F2               	setf	_myShortAddress& (0+255),b
 19167  0039A2  69F3               	setf	(_myShortAddress+1)& (0+255),b
 19168                           
 19169                           ;miwi_mesh.c: 1579: myPANID.Val = 0xFFFF;
 19170  0039A4  0101               	movlb	1	; () banked
 19171  0039A6  69F0               	setf	_myPANID& (0+255),b
 19172  0039A8  69F1               	setf	(_myPANID+1)& (0+255),b
 19173                           
 19174                           ; BSR set to: 1
 19175                           ;miwi_mesh.c: 1580: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 19176  0039AA  0EF2               	movlw	low _myShortAddress
 19177  0039AC  0101               	movlb	1	; () banked
 19178  0039AE  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 19179  0039B0  0E01               	movlw	high _myShortAddress
 19180  0039B2  0101               	movlb	1	; () banked
 19181  0039B4  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 19182  0039B6  0EF0               	movlw	low _myPANID
 19183  0039B8  0101               	movlb	1	; () banked
 19184  0039BA  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 19185  0039BC  0E01               	movlw	high _myPANID
 19186  0039BE  0101               	movlb	1	; () banked
 19187  0039C0  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 19188  0039C2  ECEA  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 19189                           
 19190                           ;miwi_mesh.c: 1581: MiWiStateMachine.bits.memberOfNetwork = 0;
 19191  0039C6  0101               	movlb	1	; () banked
 19192  0039C8  93B5               	bcf	_MiWiStateMachine& (0+255),1,b
 19193                           
 19194                           ; BSR set to: 1
 19195                           ;miwi_mesh.c: 1588: }
 19196                           ;miwi_mesh.c: 1589: }
 19197                           ;miwi_mesh.c: 1610: }
 19198                           ;miwi_mesh.c: 1611: break;
 19199                           
 19200                           ; BSR set to: 1
 19201  0039CA  D09E               	goto	l641
 19202  0039CC                     l18671:
 19203                           
 19204                           ;miwi_mesh.c: 1665: {
 19205                           ;miwi_mesh.c: 1666: if( ConnMode > 0x02 )
 19206  0039CC  0E02               	movlw	2
 19207  0039CE  0101               	movlb	1	; () banked
 19208  0039D0  65BF               	cpfsgt	_ConnMode& (0+255),b
 19209  0039D2  D001               	goto	l774
 19210  0039D4  D099               	goto	l641
 19211  0039D6                     l774:
 19212                           
 19213                           ; BSR set to: 1
 19214                           ;miwi_mesh.c: 1669: }
 19215                           ;miwi_mesh.c: 1672: if(MiWiStateMachine.bits.memberOfNetwork)
 19216  0039D6  0101               	movlb	1	; () banked
 19217  0039D8  A3B5               	btfss	_MiWiStateMachine& (0+255),1,b
 19218  0039DA  D096               	goto	l641
 19219                           
 19220                           ; BSR set to: 1
 19221                           ;miwi_mesh.c: 1673: {
 19222                           ;miwi_mesh.c: 1674: if( MACRxPacket.Payload[1] != currentChannel )
 19223  0039DC  0101               	movlb	1	; () banked
 19224  0039DE  EE20 F001          	lfsr	2,1
 19225  0039E2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 19226  0039E4  26D9               	addwf	fsr2l,f,c
 19227  0039E6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 19228  0039E8  22DA               	addwfc	fsr2h,f,c
 19229  0039EA  0101               	movlb	1	; () banked
 19230  0039EC  51F6               	movf	_currentChannel& (0+255),w,b
 19231  0039EE  18DE               	xorwf	postinc2,w,c
 19232  0039F0  A4D8               	btfss	status,2,c
 19233  0039F2  D08A               	goto	l641
 19234                           
 19235                           ; BSR set to: 1
 19236                           ;miwi_mesh.c: 1677: }
 19237                           ;miwi_mesh.c: 1681: if(role != 0x00)
 19238                           
 19239                           ; BSR set to: 1
 19240                           
 19241                           ; BSR set to: 1
 19242                           ;miwi_mesh.c: 1675: {
 19243                           ;miwi_mesh.c: 1676: break;
 19244  0039F4  0101               	movlb	1	; () banked
 19245  0039F6  51CA               	movf	_role& (0+255),w,b
 19246  0039F8  B4D8               	btfsc	status,2,c
 19247  0039FA  D086               	goto	l641
 19248                           
 19249                           ; BSR set to: 1
 19250                           ;miwi_mesh.c: 1682: {
 19251                           ;miwi_mesh.c: 1685: if (role == 0x01)
 19252  0039FC  0101               	movlb	1	; () banked
 19253  0039FE  05CA               	decf	_role& (0+255),w,b
 19254  003A00  A4D8               	btfss	status,2,c
 19255  003A02  D05F               	goto	l18699
 19256                           
 19257                           ; BSR set to: 1
 19258                           ;miwi_mesh.c: 1687: {
 19259                           ;miwi_mesh.c: 1691: uint8_t jitter = 20;
 19260  003A04  0E14               	movlw	20
 19261  003A06  0101               	movlb	1	; () banked
 19262  003A08  6F62               	movwf	MiWiTasks@jitter& (0+255),b
 19263                           
 19264                           ;miwi_mesh.c: 1692: MIWI_TICK t1, t2;
 19265                           ;miwi_mesh.c: 1693: while( jitter > 0 )
 19266  003A0A  D04D               	goto	l18695
 19267  003A0C                     l18685:
 19268                           
 19269                           ; BSR set to: 1
 19270                           ;miwi_mesh.c: 1694: {
 19271                           ;miwi_mesh.c: 1695: jitter--;
 19272  003A0C  0101               	movlb	1	; () banked
 19273  003A0E  0762               	decf	MiWiTasks@jitter& (0+255),f,b
 19274                           
 19275                           ; BSR set to: 1
 19276                           ;miwi_mesh.c: 1696: t1 = MiWi_TickGet();
 19277  003A10  EC80  F058         	call	_MiWi_TickGet	;wreg free
 19278  003A14  C100  F156         	movff	?_MiWi_TickGet,MiWiTasks@t1_2546
 19279  003A18  C101  F157         	movff	?_MiWi_TickGet+1,MiWiTasks@t1_2546+1
 19280  003A1C  C102  F158         	movff	?_MiWi_TickGet+2,MiWiTasks@t1_2546+2
 19281  003A20  C103  F159         	movff	?_MiWi_TickGet+3,MiWiTasks@t1_2546+3
 19282  003A24                     l18689:
 19283                           
 19284                           ;miwi_mesh.c: 1698: {
 19285                           ;miwi_mesh.c: 1699: t2 = MiWi_TickGet();
 19286  003A24  EC80  F058         	call	_MiWi_TickGet	;wreg free
 19287  003A28  C100  F15A         	movff	?_MiWi_TickGet,MiWiTasks@t2_2557
 19288  003A2C  C101  F15B         	movff	?_MiWi_TickGet+1,MiWiTasks@t2_2557+1
 19289  003A30  C102  F15C         	movff	?_MiWi_TickGet+2,MiWiTasks@t2_2557+2
 19290  003A34  C103  F15D         	movff	?_MiWi_TickGet+3,MiWiTasks@t2_2557+3
 19291                           
 19292                           ;miwi_mesh.c: 1700: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 19293  003A38  C156  F14A         	movff	MiWiTasks@t1_2546,??_MiWiTasks
 19294  003A3C  C157  F14B         	movff	MiWiTasks@t1_2546+1,??_MiWiTasks+1
 19295  003A40  C158  F14C         	movff	MiWiTasks@t1_2546+2,??_MiWiTasks+2
 19296  003A44  C159  F14D         	movff	MiWiTasks@t1_2546+3,??_MiWiTasks+3
 19297  003A48  0101               	movlb	1	; () banked
 19298  003A4A  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19299  003A4C  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19300  003A4E  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19301  003A50  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19302  003A52  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19303  003A54  0E00               	movlw	0
 19304  003A56  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19305  003A58  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19306  003A5A  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19307  003A5C  0101               	movlb	1	; () banked
 19308  003A5E  515A               	movf	MiWiTasks@t2_2557& (0+255),w,b
 19309  003A60  0101               	movlb	1	; () banked
 19310  003A62  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19311  003A64  0101               	movlb	1	; () banked
 19312  003A66  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 19313  003A68  0101               	movlb	1	; () banked
 19314  003A6A  515B               	movf	(MiWiTasks@t2_2557+1)& (0+255),w,b
 19315  003A6C  0101               	movlb	1	; () banked
 19316  003A6E  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19317  003A70  0101               	movlb	1	; () banked
 19318  003A72  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 19319  003A74  0101               	movlb	1	; () banked
 19320  003A76  515C               	movf	(MiWiTasks@t2_2557+2)& (0+255),w,b
 19321  003A78  0101               	movlb	1	; () banked
 19322  003A7A  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19323  003A7C  0101               	movlb	1	; () banked
 19324  003A7E  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 19325  003A80  0101               	movlb	1	; () banked
 19326  003A82  515D               	movf	(MiWiTasks@t2_2557+3)& (0+255),w,b
 19327  003A84  0101               	movlb	1	; () banked
 19328  003A86  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19329  003A88  0101               	movlb	1	; () banked
 19330  003A8A  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 19331  003A8C  0101               	movlb	1	; () banked
 19332  003A8E  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19333  003A90  0101               	movlb	1	; () banked
 19334  003A92  1150               	iorwf	(??_MiWiTasks+6)& (0+255),w,b
 19335  003A94  E108               	bnz	l18695
 19336  003A96  0EF5               	movlw	245
 19337  003A98  0101               	movlb	1	; () banked
 19338  003A9A  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19339  003A9C  0E01               	movlw	1
 19340  003A9E  0101               	movlb	1	; () banked
 19341  003AA0  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19342  003AA2  A0D8               	btfss	status,0,c
 19343  003AA4  D7BF               	goto	l18689
 19344  003AA6                     l18695:
 19345                           
 19346                           ; BSR set to: 1
 19347  003AA6  0101               	movlb	1	; () banked
 19348  003AA8  5162               	movf	MiWiTasks@jitter& (0+255),w,b
 19349  003AAA  0101               	movlb	1	; () banked
 19350  003AAC  A4D8               	btfss	status,2,c
 19351  003AAE  D7AE               	goto	l18685
 19352                           
 19353                           ; BSR set to: 1
 19354                           ;miwi_mesh.c: 1703: }
 19355                           ;miwi_mesh.c: 1704: }
 19356                           ;miwi_mesh.c: 1705: }
 19357                           ;miwi_mesh.c: 1709: BroadcastJitter(20);
 19358                           
 19359                           ; BSR set to: 1
 19360  003AB0  0E14               	movlw	20
 19361  003AB2  ECBA  F051         	call	_BroadcastJitter
 19362                           
 19363                           ;miwi_mesh.c: 1710: BroadcastJitter(20);
 19364  003AB6  0E14               	movlw	20
 19365  003AB8  ECBA  F051         	call	_BroadcastJitter
 19366                           
 19367                           ;miwi_mesh.c: 1711: BroadcastJitter(20);
 19368  003ABC  0E14               	movlw	20
 19369  003ABE  ECBA  F051         	call	_BroadcastJitter
 19370  003AC2                     l18699:
 19371                           
 19372                           ;miwi_mesh.c: 1712: }
 19373                           ;miwi_mesh.c: 1714: SendBeacon();
 19374  003AC2  ECB3  F043         	call	_SendBeacon	;wreg free
 19375                           
 19376                           ;miwi_mesh.c: 1764: }
 19377                           
 19378                           ;miwi_mesh.c: 1763: break;
 19379                           
 19380                           ;miwi_mesh.c: 1762: default:
 19381                           
 19382                           ;miwi_mesh.c: 1715: }
 19383                           ;miwi_mesh.c: 1716: }
 19384                           ;miwi_mesh.c: 1717: }
 19385                           ;miwi_mesh.c: 1718: break;
 19386  003AC6  D020               	goto	l641
 19387  003AC8                     l18703:
 19388  003AC8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 19389  003ACC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 19390  003AD0  50DF               	movf	indf2,w,c
 19391                           
 19392                           ; Switch size 1, requested type "space"
 19393                           ; Number of cases is 4, Range of values is 1 to 7
 19394                           ; switch strategies available:
 19395                           ; Name         Instructions Cycles
 19396                           ; simple_byte           13     7 (average)
 19397                           ;	Chosen strategy is simple_byte
 19398  003AD2  0A01               	xorlw	1	; case 1
 19399  003AD4  B4D8               	btfsc	status,2,c
 19400  003AD6  D4AC               	goto	l18445
 19401  003AD8  0A03               	xorlw	3	; case 2
 19402  003ADA  B4D8               	btfsc	status,2,c
 19403  003ADC  D5C2               	goto	l18551
 19404  003ADE  0A01               	xorlw	1	; case 3
 19405  003AE0  B4D8               	btfsc	status,2,c
 19406  003AE2  D684               	goto	l18599
 19407  003AE4  0A04               	xorlw	4	; case 7
 19408  003AE6  B4D8               	btfsc	status,2,c
 19409  003AE8  D771               	goto	l18671
 19410                           
 19411                           ;miwi_mesh.c: 1770: }
 19412                           
 19413                           ;miwi_mesh.c: 1768: break;
 19414                           
 19415                           ;miwi_mesh.c: 1767: default:
 19416                           
 19417                           ;miwi_mesh.c: 1765: break;
 19418  003AEA  D00E               	goto	l641
 19419  003AEC                     l18707:
 19420  003AEC  0101               	movlb	1	; () banked
 19421  003AEE  519A               	movf	_MACRxPacket& (0+255),w,b
 19422  003AF0  0B03               	andlw	3
 19423                           
 19424                           ; Switch size 1, requested type "space"
 19425                           ; Number of cases is 3, Range of values is 0 to 3
 19426                           ; switch strategies available:
 19427                           ; Name         Instructions Cycles
 19428                           ; simple_byte           10     6 (average)
 19429                           ;	Chosen strategy is simple_byte
 19430  003AF2  0A00               	xorlw	0	; case 0
 19431  003AF4  B4D8               	btfsc	status,2,c
 19432  003AF6  EF38  F012         	goto	l17979
 19433  003AFA  0A01               	xorlw	1	; case 1
 19434  003AFC  B4D8               	btfsc	status,2,c
 19435  003AFE  D7E4               	goto	l18703
 19436  003B00  0A02               	xorlw	2	; case 3
 19437  003B02  B4D8               	btfsc	status,2,c
 19438  003B04  EF63  F017         	goto	l18337
 19439  003B08                     l641:
 19440                           
 19441                           ;miwi_mesh.c: 1772: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 19442  003B08  0101               	movlb	1	; () banked
 19443  003B0A  A5B5               	btfss	_MiWiStateMachine& (0+255),2,b
 19444                           
 19445                           ; BSR set to: 1
 19446                           ;miwi_mesh.c: 1773: {
 19447                           ;miwi_mesh.c: 1774: MiMAC_DiscardPacket();
 19448  003B0C  EC5B  F05D         	call	_MiMAC_DiscardPacket	;wreg free
 19449  003B10                     l18711:
 19450                           
 19451                           ;miwi_mesh.c: 1775: }
 19452                           ;miwi_mesh.c: 1776: }
 19453                           ;miwi_mesh.c: 1778: t1 = MiWi_TickGet();
 19454  003B10  EC80  F058         	call	_MiWi_TickGet	;wreg free
 19455  003B14  C100  F164         	movff	?_MiWi_TickGet,MiWiTasks@t1
 19456  003B18  C101  F165         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 19457  003B1C  C102  F166         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 19458  003B20  C103  F167         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 19459                           
 19460                           ;miwi_mesh.c: 1845: for(i = 0; i < 4; i++)
 19461  003B24  0E00               	movlw	0
 19462  003B26  0101               	movlb	1	; () banked
 19463  003B28  6F7C               	movwf	MiWiTasks@i& (0+255),b
 19464  003B2A                     l18715:
 19465                           
 19466                           ; BSR set to: 1
 19467  003B2A  0E03               	movlw	3
 19468  003B2C  0101               	movlb	1	; () banked
 19469  003B2E  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 19470  003B30  D001               	goto	l18719
 19471  003B32  D067               	goto	l790
 19472  003B34                     l18719:
 19473                           
 19474                           ; BSR set to: 1
 19475                           ;miwi_mesh.c: 1846: {
 19476                           ;miwi_mesh.c: 1847: if( BroadcastRecords[i].RxCounter > 0 )
 19477  003B34  0101               	movlb	1	; () banked
 19478  003B36  517C               	movf	MiWiTasks@i& (0+255),w,b
 19479  003B38  0D08               	mullw	8
 19480  003B3A  0E03               	movlw	3
 19481  003B3C  26F3               	addwf	prodl,f,c
 19482  003B3E  0E00               	movlw	0
 19483  003B40  22F4               	addwfc	prodh,f,c
 19484  003B42  0E28               	movlw	low _BroadcastRecords
 19485  003B44  24F3               	addwf	prodl,w,c
 19486  003B46  6ED9               	movwf	fsr2l,c
 19487  003B48  0E02               	movlw	high _BroadcastRecords
 19488  003B4A  20F4               	addwfc	prodh,w,c
 19489  003B4C  6EDA               	movwf	fsr2h,c
 19490  003B4E  50DF               	movf	indf2,w,c
 19491  003B50  B4D8               	btfsc	status,2,c
 19492  003B52  D054               	goto	l18725
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;miwi_mesh.c: 1848: {
 19496                           ;miwi_mesh.c: 1849: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 19497  003B54  0101               	movlb	1	; () banked
 19498  003B56  517C               	movf	MiWiTasks@i& (0+255),w,b
 19499  003B58  0D08               	mullw	8
 19500  003B5A  0E04               	movlw	4
 19501  003B5C  26F3               	addwf	prodl,f,c
 19502  003B5E  0E00               	movlw	0
 19503  003B60  22F4               	addwfc	prodh,f,c
 19504  003B62  0E28               	movlw	low _BroadcastRecords
 19505  003B64  24F3               	addwf	prodl,w,c
 19506  003B66  6ED9               	movwf	fsr2l,c
 19507  003B68  0E02               	movlw	high _BroadcastRecords
 19508  003B6A  20F4               	addwfc	prodh,w,c
 19509  003B6C  6EDA               	movwf	fsr2h,c
 19510  003B6E  CFDE F14A          	movff	postinc2,??_MiWiTasks
 19511  003B72  CFDE F14B          	movff	postinc2,??_MiWiTasks+1
 19512  003B76  CFDE F14C          	movff	postinc2,??_MiWiTasks+2
 19513  003B7A  CFDE F14D          	movff	postinc2,??_MiWiTasks+3
 19514  003B7E  0101               	movlb	1	; () banked
 19515  003B80  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19516  003B82  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19517  003B84  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19518  003B86  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19519  003B88  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19520  003B8A  0E00               	movlw	0
 19521  003B8C  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19522  003B8E  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19523  003B90  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19524  003B92  0101               	movlb	1	; () banked
 19525  003B94  5164               	movf	MiWiTasks@t1& (0+255),w,b
 19526  003B96  0101               	movlb	1	; () banked
 19527  003B98  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19528  003B9A  0101               	movlb	1	; () banked
 19529  003B9C  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 19530  003B9E  0101               	movlb	1	; () banked
 19531  003BA0  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19532  003BA2  0101               	movlb	1	; () banked
 19533  003BA4  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19534  003BA6  0101               	movlb	1	; () banked
 19535  003BA8  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 19536  003BAA  0101               	movlb	1	; () banked
 19537  003BAC  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19538  003BAE  0101               	movlb	1	; () banked
 19539  003BB0  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19540  003BB2  0101               	movlb	1	; () banked
 19541  003BB4  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 19542  003BB6  0101               	movlb	1	; () banked
 19543  003BB8  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19544  003BBA  0101               	movlb	1	; () banked
 19545  003BBC  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19546  003BBE  0101               	movlb	1	; () banked
 19547  003BC0  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 19548  003BC2  0101               	movlb	1	; () banked
 19549  003BC4  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19550  003BC6  E10B               	bnz	u21140
 19551  003BC8  0E21               	movlw	33
 19552  003BCA  0101               	movlb	1	; () banked
 19553  003BCC  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19554  003BCE  0EA1               	movlw	161
 19555  003BD0  0101               	movlb	1	; () banked
 19556  003BD2  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19557  003BD4  0E07               	movlw	7
 19558  003BD6  0101               	movlb	1	; () banked
 19559  003BD8  5950               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 19560  003BDA  A0D8               	btfss	status,0,c
 19561  003BDC  D00F               	goto	l18725
 19562  003BDE                     u21140:
 19563                           
 19564                           ; BSR set to: 1
 19565                           ;miwi_mesh.c: 1850: {
 19566                           ;miwi_mesh.c: 1851: BroadcastRecords[i].RxCounter = 0;
 19567  003BDE  0101               	movlb	1	; () banked
 19568  003BE0  517C               	movf	MiWiTasks@i& (0+255),w,b
 19569  003BE2  0D08               	mullw	8
 19570  003BE4  0E03               	movlw	3
 19571  003BE6  26F3               	addwf	prodl,f,c
 19572  003BE8  0E00               	movlw	0
 19573  003BEA  22F4               	addwfc	prodh,f,c
 19574  003BEC  0E28               	movlw	low _BroadcastRecords
 19575  003BEE  24F3               	addwf	prodl,w,c
 19576  003BF0  6ED9               	movwf	fsr2l,c
 19577  003BF2  0E02               	movlw	high _BroadcastRecords
 19578  003BF4  20F4               	addwfc	prodh,w,c
 19579  003BF6  6EDA               	movwf	fsr2h,c
 19580  003BF8  0E00               	movlw	0
 19581  003BFA  6EDF               	movwf	indf2,c
 19582  003BFC                     l18725:
 19583                           
 19584                           ; BSR set to: 1
 19585  003BFC  0101               	movlb	1	; () banked
 19586  003BFE  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 19587  003C00  D794               	goto	l18715
 19588  003C02                     l790:
 19589                           
 19590                           ; BSR set to: 1
 19591                           ;miwi_mesh.c: 1852: }
 19592                           ;miwi_mesh.c: 1853: }
 19593                           ;miwi_mesh.c: 1854: }
 19594                           ;miwi_mesh.c: 1858: if(openSocketInfo.status.bits.requestIsOpen)
 19595  003C02  0101               	movlb	1	; () banked
 19596  003C04  A3CC               	btfss	_openSocketInfo& (0+255),1,b
 19597  003C06  0012               	return	
 19598                           
 19599                           ; BSR set to: 1
 19600                           ;miwi_mesh.c: 1859: {
 19601                           ;miwi_mesh.c: 1860: if(openSocketInfo.status.bits.matchFound)
 19602  003C08  0101               	movlb	1	; () banked
 19603  003C0A  A1CC               	btfss	_openSocketInfo& (0+255),0,b
 19604  003C0C  D063               	goto	l18763
 19605                           
 19606                           ; BSR set to: 1
 19607                           ;miwi_mesh.c: 1861: {
 19608                           ;miwi_mesh.c: 1863: uint8_t j;
 19609                           ;miwi_mesh.c: 1865: ;
 19610                           ;miwi_mesh.c: 1867: {TxData = 11;};
 19611  003C0E  0E0B               	movlw	11
 19612  003C10  0101               	movlb	1	; () banked
 19613  003C12  6FC6               	movwf	_TxData& (0+255),b
 19614                           
 19615                           ; BSR set to: 1
 19616                           ;miwi_mesh.c: 1868: TxBuffer[TxData++] = 0x00;
 19617  003C14  0101               	movlb	1	; () banked
 19618  003C16  51C6               	movf	_TxData& (0+255),w,b
 19619  003C18  0D01               	mullw	1
 19620  003C1A  0EA6               	movlw	low _TxBuffer
 19621  003C1C  24F3               	addwf	prodl,w,c
 19622  003C1E  6ED9               	movwf	fsr2l,c
 19623  003C20  0E02               	movlw	high _TxBuffer
 19624  003C22  20F4               	addwfc	prodh,w,c
 19625  003C24  6EDA               	movwf	fsr2h,c
 19626  003C26  0E00               	movlw	0
 19627  003C28  6EDF               	movwf	indf2,c
 19628                           
 19629                           ; BSR set to: 1
 19630  003C2A  0101               	movlb	1	; () banked
 19631  003C2C  2BC6               	incf	_TxData& (0+255),f,b
 19632                           
 19633                           ; BSR set to: 1
 19634                           ;miwi_mesh.c: 1869: TxBuffer[TxData++] = 0x11;
 19635  003C2E  0101               	movlb	1	; () banked
 19636  003C30  51C6               	movf	_TxData& (0+255),w,b
 19637  003C32  0D01               	mullw	1
 19638  003C34  0EA6               	movlw	low _TxBuffer
 19639  003C36  24F3               	addwf	prodl,w,c
 19640  003C38  6ED9               	movwf	fsr2l,c
 19641  003C3A  0E02               	movlw	high _TxBuffer
 19642  003C3C  20F4               	addwfc	prodh,w,c
 19643  003C3E  6EDA               	movwf	fsr2h,c
 19644  003C40  0E11               	movlw	17
 19645  003C42  6EDF               	movwf	indf2,c
 19646                           
 19647                           ; BSR set to: 1
 19648  003C44  0101               	movlb	1	; () banked
 19649  003C46  2BC6               	incf	_TxData& (0+255),f,b
 19650                           
 19651                           ;miwi_mesh.c: 1873: for(j=0;j<4;j++)
 19652  003C48  0E00               	movlw	0
 19653  003C4A  0101               	movlb	1	; () banked
 19654  003C4C  6F6C               	movwf	MiWiTasks@j_2569& (0+255),b
 19655  003C4E                     l18741:
 19656                           
 19657                           ; BSR set to: 1
 19658  003C4E  0E03               	movlw	3
 19659  003C50  0101               	movlb	1	; () banked
 19660  003C52  656C               	cpfsgt	MiWiTasks@j_2569& (0+255),b
 19661  003C54  D001               	goto	l18745
 19662  003C56  D019               	goto	l18753
 19663  003C58                     l18745:
 19664                           
 19665                           ; BSR set to: 1
 19666                           ;miwi_mesh.c: 1874: {
 19667                           ;miwi_mesh.c: 1875: TxBuffer[TxData++] = openSocketInfo.LongAddress1[j];
 19668  003C58  0101               	movlb	1	; () banked
 19669  003C5A  516C               	movf	MiWiTasks@j_2569& (0+255),w,b
 19670  003C5C  0D01               	mullw	1
 19671  003C5E  0ED0               	movlw	low (_openSocketInfo+4)
 19672  003C60  24F3               	addwf	prodl,w,c
 19673  003C62  6ED9               	movwf	fsr2l,c
 19674  003C64  0E01               	movlw	high (_openSocketInfo+4)
 19675  003C66  20F4               	addwfc	prodh,w,c
 19676  003C68  6EDA               	movwf	fsr2h,c
 19677  003C6A  0101               	movlb	1	; () banked
 19678  003C6C  51C6               	movf	_TxData& (0+255),w,b
 19679  003C6E  0D01               	mullw	1
 19680  003C70  0EA6               	movlw	low _TxBuffer
 19681  003C72  24F3               	addwf	prodl,w,c
 19682  003C74  6EE1               	movwf	fsr1l,c
 19683  003C76  0E02               	movlw	high _TxBuffer
 19684  003C78  20F4               	addwfc	prodh,w,c
 19685  003C7A  6EE2               	movwf	fsr1h,c
 19686  003C7C  CFDF FFE7          	movff	indf2,indf1
 19687                           
 19688                           ; BSR set to: 1
 19689  003C80  0101               	movlb	1	; () banked
 19690  003C82  2BC6               	incf	_TxData& (0+255),f,b
 19691                           
 19692                           ; BSR set to: 1
 19693  003C84  0101               	movlb	1	; () banked
 19694  003C86  2B6C               	incf	MiWiTasks@j_2569& (0+255),f,b
 19695  003C88  D7E2               	goto	l18741
 19696  003C8A                     l18753:
 19697                           
 19698                           ; BSR set to: 1
 19699                           ;miwi_mesh.c: 1876: }
 19700                           ;miwi_mesh.c: 1878: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[0];
 19701  003C8A  0101               	movlb	1	; () banked
 19702  003C8C  51C6               	movf	_TxData& (0+255),w,b
 19703  003C8E  0D01               	mullw	1
 19704  003C90  0EA6               	movlw	low _TxBuffer
 19705  003C92  24F3               	addwf	prodl,w,c
 19706  003C94  6ED9               	movwf	fsr2l,c
 19707  003C96  0E02               	movlw	high _TxBuffer
 19708  003C98  20F4               	addwfc	prodh,w,c
 19709  003C9A  6EDA               	movwf	fsr2h,c
 19710  003C9C  C1CE  FFDF         	movff	_openSocketInfo+2,indf2
 19711                           
 19712                           ; BSR set to: 1
 19713  003CA0  0101               	movlb	1	; () banked
 19714  003CA2  2BC6               	incf	_TxData& (0+255),f,b
 19715                           
 19716                           ; BSR set to: 1
 19717                           ;miwi_mesh.c: 1879: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[1];
 19718  003CA4  0101               	movlb	1	; () banked
 19719  003CA6  51C6               	movf	_TxData& (0+255),w,b
 19720  003CA8  0D01               	mullw	1
 19721  003CAA  0EA6               	movlw	low _TxBuffer
 19722  003CAC  24F3               	addwf	prodl,w,c
 19723  003CAE  6ED9               	movwf	fsr2l,c
 19724  003CB0  0E02               	movlw	high _TxBuffer
 19725  003CB2  20F4               	addwfc	prodh,w,c
 19726  003CB4  6EDA               	movwf	fsr2h,c
 19727  003CB6  C1CF  FFDF         	movff	_openSocketInfo+3,indf2
 19728  003CBA  0101               	movlb	1	; () banked
 19729  003CBC  2BC6               	incf	_TxData& (0+255),f,b
 19730                           
 19731                           ; BSR set to: 1
 19732                           ;miwi_mesh.c: 1889: UnicastShortAddress(openSocketInfo.ShortAddress2.v);
 19733  003CBE  0ED4               	movlw	low (_openSocketInfo+8)
 19734  003CC0  0101               	movlb	1	; () banked
 19735  003CC2  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 19736  003CC4  0E01               	movlw	high (_openSocketInfo+8)
 19737  003CC6  0101               	movlb	1	; () banked
 19738  003CC8  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 19739  003CCA  EC63  F056         	call	_UnicastShortAddress	;wreg free
 19740                           
 19741                           ;miwi_mesh.c: 1890: openSocketInfo.status.bits.requestIsOpen = 0;
 19742  003CCE  0101               	movlb	1	; () banked
 19743  003CD0  93CC               	bcf	_openSocketInfo& (0+255),1,b
 19744                           
 19745                           ;miwi_mesh.c: 1894: }
 19746  003CD2  0012               	return	
 19747  003CD4                     l18763:
 19748                           
 19749                           ; BSR set to: 1
 19750                           ;miwi_mesh.c: 1895: else
 19751                           ;miwi_mesh.c: 1896: {
 19752                           ;miwi_mesh.c: 1897: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 19753  003CD4  C1DA  F14A         	movff	_openSocketInfo+14,??_MiWiTasks
 19754  003CD8  C1DB  F14B         	movff	_openSocketInfo+15,??_MiWiTasks+1
 19755  003CDC  C1DC  F14C         	movff	_openSocketInfo+16,??_MiWiTasks+2
 19756  003CE0  C1DD  F14D         	movff	_openSocketInfo+17,??_MiWiTasks+3
 19757  003CE4  0101               	movlb	1	; () banked
 19758  003CE6  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19759  003CE8  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19760  003CEA  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19761  003CEC  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19762  003CEE  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19763  003CF0  0E00               	movlw	0
 19764  003CF2  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19765  003CF4  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19766  003CF6  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19767  003CF8  0101               	movlb	1	; () banked
 19768  003CFA  5164               	movf	MiWiTasks@t1& (0+255),w,b
 19769  003CFC  0101               	movlb	1	; () banked
 19770  003CFE  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19771  003D00  0101               	movlb	1	; () banked
 19772  003D02  6F52               	movwf	MiWiTasks@t2& (0+255),b
 19773  003D04  0101               	movlb	1	; () banked
 19774  003D06  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19775  003D08  0101               	movlb	1	; () banked
 19776  003D0A  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19777  003D0C  0101               	movlb	1	; () banked
 19778  003D0E  6F53               	movwf	(MiWiTasks@t2+1)& (0+255),b
 19779  003D10  0101               	movlb	1	; () banked
 19780  003D12  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19781  003D14  0101               	movlb	1	; () banked
 19782  003D16  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19783  003D18  0101               	movlb	1	; () banked
 19784  003D1A  6F54               	movwf	(MiWiTasks@t2+2)& (0+255),b
 19785  003D1C  0101               	movlb	1	; () banked
 19786  003D1E  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19787  003D20  0101               	movlb	1	; () banked
 19788  003D22  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19789  003D24  0101               	movlb	1	; () banked
 19790  003D26  6F55               	movwf	(MiWiTasks@t2+3)& (0+255),b
 19791                           
 19792                           ;miwi_mesh.c: 1899: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 19793  003D28  0101               	movlb	1	; () banked
 19794  003D2A  5155               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 19795  003D2C  E10B               	bnz	u21200
 19796  003D2E  0E61               	movlw	97
 19797  003D30  0101               	movlb	1	; () banked
 19798  003D32  5D52               	subwf	MiWiTasks@t2& (0+255),w,b
 19799  003D34  0EE3               	movlw	227
 19800  003D36  0101               	movlb	1	; () banked
 19801  003D38  5953               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 19802  003D3A  0E16               	movlw	22
 19803  003D3C  0101               	movlb	1	; () banked
 19804  003D3E  5954               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 19805  003D40  A0D8               	btfss	status,0,c
 19806  003D42  0012               	return	
 19807  003D44                     u21200:
 19808                           
 19809                           ; BSR set to: 1
 19810                           ;miwi_mesh.c: 1900: {
 19811                           ;miwi_mesh.c: 1902: openSocketInfo.status.bits.requestIsOpen = 0;
 19812  003D44  0101               	movlb	1	; () banked
 19813  003D46  93CC               	bcf	_openSocketInfo& (0+255),1,b
 19814                           
 19815                           ; BSR set to: 1
 19816                           
 19817                           ; BSR set to: 1
 19818  003D48  0012               	return	
 19819  003D4A                     __end_of_MiWiTasks:
 19820                           	opt stack 0
 19821                           tblptru	equ	0xFF8
 19822                           tblptrh	equ	0xFF7
 19823                           tblptrl	equ	0xFF6
 19824                           tablat	equ	0xFF5
 19825                           prodh	equ	0xFF4
 19826                           prodl	equ	0xFF3
 19827                           intcon	equ	0xFF2
 19828                           intcon2	equ	0xFF1
 19829                           intcon3	equ	0xFF0
 19830                           indf0	equ	0xFEF
 19831                           postinc0	equ	0xFEE
 19832                           plusw0	equ	0xFEB
 19833                           fsr0h	equ	0xFEA
 19834                           fsr0l	equ	0xFE9
 19835                           wreg	equ	0xFE8
 19836                           indf1	equ	0xFE7
 19837                           postinc1	equ	0xFE6
 19838                           postdec1	equ	0xFE5
 19839                           fsr1h	equ	0xFE2
 19840                           fsr1l	equ	0xFE1
 19841                           indf2	equ	0xFDF
 19842                           postinc2	equ	0xFDE
 19843                           postdec2	equ	0xFDD
 19844                           plusw2	equ	0xFDB
 19845                           fsr2h	equ	0xFDA
 19846                           fsr2l	equ	0xFD9
 19847                           status	equ	0xFD8
 19848                           
 19849 ;; *************** function _UnicastShortAddress *****************
 19850 ;; Defined at:
 19851 ;;		line 4508 in file "src/miwi/miwi_mesh.c"
 19852 ;; Parameters:    Size  Location     Type
 19853 ;;  DestAddress     2   72[BANK1 ] PTR unsigned char 
 19854 ;;		 -> openSocketInfo.ShortAddress2(2), openSocketInfo.ShortAddress1(2), openSocketInfo(18), 
 19855 ;; Auto vars:     Size  Location     Type
 19856 ;;		None
 19857 ;; Return value:  Size  Location     Type
 19858 ;;                  1    wreg      unsigned char 
 19859 ;; Registers used:
 19860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19861 ;; Tracked objects:
 19862 ;;		On entry : 0/0
 19863 ;;		On exit  : 0/0
 19864 ;;		Unchanged: 0/0
 19865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19866 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19869 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19870 ;;Total ram usage:        2 bytes
 19871 ;; Hardware stack levels used:    1
 19872 ;; Hardware stack levels required when called:   24
 19873 ;; This function calls:
 19874 ;;		_RouteMessage
 19875 ;; This function is called by:
 19876 ;;		_MiWiTasks
 19877 ;; This function uses a non-reentrant model
 19878 ;;
 19879                           
 19880                           	psect	text43
 19881  00ACC6                     __ptext43:
 19882                           	opt stack 0
 19883  00ACC6                     _UnicastShortAddress:
 19884                           	opt stack 5
 19885                           
 19886                           ;miwi_mesh.c: 4510: TxBuffer[0] = 4;
 19887                           
 19888                           ; BSR set to: 1
 19889                           ;incstack = 0
 19890  00ACC6  0E04               	movlw	4
 19891  00ACC8  0102               	movlb	2	; () banked
 19892  00ACCA  6FA6               	movwf	_TxBuffer& (0+255),b
 19893                           
 19894                           ;miwi_mesh.c: 4511: TxBuffer[1] = 0x02;
 19895  00ACCC  0E02               	movlw	2
 19896  00ACCE  0102               	movlb	2	; () banked
 19897  00ACD0  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 19898                           
 19899                           ; BSR set to: 2
 19900                           ;miwi_mesh.c: 4512: TxBuffer[2] = myPANID.v[0];
 19901  00ACD2  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 19902                           
 19903                           ; BSR set to: 2
 19904                           ;miwi_mesh.c: 4513: TxBuffer[3] = myPANID.v[1];
 19905  00ACD6  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 19906                           
 19907                           ; BSR set to: 2
 19908                           ;miwi_mesh.c: 4514: TxBuffer[4] = DestAddress[0];
 19909  00ACDA  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 19910  00ACDE  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 19911  00ACE2  50DF               	movf	indf2,w,c
 19912  00ACE4  0102               	movlb	2	; () banked
 19913  00ACE6  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 19914                           
 19915                           ; BSR set to: 2
 19916                           ;miwi_mesh.c: 4515: TxBuffer[5] = DestAddress[1];
 19917  00ACE8  0101               	movlb	1	; () banked
 19918  00ACEA  EE20 F001          	lfsr	2,1
 19919  00ACEE  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 19920  00ACF0  26D9               	addwf	fsr2l,f,c
 19921  00ACF2  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 19922  00ACF4  22DA               	addwfc	fsr2h,f,c
 19923  00ACF6  50DF               	movf	indf2,w,c
 19924  00ACF8  0102               	movlb	2	; () banked
 19925  00ACFA  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 19926                           
 19927                           ; BSR set to: 2
 19928                           ;miwi_mesh.c: 4516: TxBuffer[6] = myPANID.v[0];
 19929  00ACFC  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 19930                           
 19931                           ; BSR set to: 2
 19932                           ;miwi_mesh.c: 4517: TxBuffer[7] = myPANID.v[1];
 19933  00AD00  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 19934                           
 19935                           ; BSR set to: 2
 19936                           ;miwi_mesh.c: 4518: TxBuffer[8] = myShortAddress.v[0];
 19937  00AD04  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 19938                           
 19939                           ; BSR set to: 2
 19940                           ;miwi_mesh.c: 4519: TxBuffer[9] = myShortAddress.v[1];
 19941  00AD08  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 19942                           
 19943                           ; BSR set to: 2
 19944                           ;miwi_mesh.c: 4520: TxBuffer[10] = MiWiSeqNum++;
 19945  00AD0C  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 19946                           
 19947                           ; BSR set to: 2
 19948  00AD10  0101               	movlb	1	; () banked
 19949  00AD12  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 19950                           
 19951                           ; BSR set to: 1
 19952                           ;miwi_mesh.c: 4523: tempShortAddress.v[0] = DestAddress[0];
 19953  00AD14  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 19954  00AD18  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 19955  00AD1C  50DF               	movf	indf2,w,c
 19956  00AD1E  0101               	movlb	1	; () banked
 19957  00AD20  6FF4               	movwf	_tempShortAddress& (0+255),b
 19958                           
 19959                           ; BSR set to: 1
 19960                           ;miwi_mesh.c: 4524: tempShortAddress.v[1] = DestAddress[1];
 19961  00AD22  0101               	movlb	1	; () banked
 19962  00AD24  EE20 F001          	lfsr	2,1
 19963  00AD28  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 19964  00AD2A  26D9               	addwf	fsr2l,f,c
 19965  00AD2C  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 19966  00AD2E  22DA               	addwfc	fsr2h,f,c
 19967  00AD30  50DF               	movf	indf2,w,c
 19968  00AD32  0101               	movlb	1	; () banked
 19969  00AD34  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 19970                           
 19971                           ; BSR set to: 1
 19972                           ;miwi_mesh.c: 4525: if( 0 == RouteMessage(myPANID, tempShortAddress, 0) )
 19973  00AD36  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 19974  00AD3A  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 19975  00AD3E  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 19976  00AD42  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 19977  00AD46  0E00               	movlw	0
 19978  00AD48  0101               	movlb	1	; () banked
 19979  00AD4A  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 19980  00AD4C  EC09  F024         	call	_RouteMessage	;wreg free
 19981  00AD50  0900               	iorlw	0
 19982  00AD52  A4D8               	btfss	status,2,c
 19983  00AD54  0012               	return	
 19984                           
 19985                           ;miwi_mesh.c: 4526: {
 19986                           ;miwi_mesh.c: 4527: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 19987  00AD56  0101               	movlb	1	; () banked
 19988  00AD58  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 19989                           
 19990                           ;miwi_mesh.c: 4528: return 0;
 19991                           ;	Return value of _UnicastShortAddress is never used
 19992  00AD5A  0012               	return	
 19993  00AD5C                     __end_of_UnicastShortAddress:
 19994                           	opt stack 0
 19995                           tblptru	equ	0xFF8
 19996                           tblptrh	equ	0xFF7
 19997                           tblptrl	equ	0xFF6
 19998                           tablat	equ	0xFF5
 19999                           prodh	equ	0xFF4
 20000                           prodl	equ	0xFF3
 20001                           intcon	equ	0xFF2
 20002                           intcon2	equ	0xFF1
 20003                           intcon3	equ	0xFF0
 20004                           indf0	equ	0xFEF
 20005                           postinc0	equ	0xFEE
 20006                           plusw0	equ	0xFEB
 20007                           fsr0h	equ	0xFEA
 20008                           fsr0l	equ	0xFE9
 20009                           wreg	equ	0xFE8
 20010                           indf1	equ	0xFE7
 20011                           postinc1	equ	0xFE6
 20012                           postdec1	equ	0xFE5
 20013                           fsr1h	equ	0xFE2
 20014                           fsr1l	equ	0xFE1
 20015                           indf2	equ	0xFDF
 20016                           postinc2	equ	0xFDE
 20017                           postdec2	equ	0xFDD
 20018                           plusw2	equ	0xFDB
 20019                           fsr2h	equ	0xFDA
 20020                           fsr2l	equ	0xFD9
 20021                           status	equ	0xFD8
 20022                           
 20023 ;; *************** function _RouteMessage *****************
 20024 ;; Defined at:
 20025 ;;		line 1932 in file "src/miwi/miwi_mesh.c"
 20026 ;; Parameters:    Size  Location     Type
 20027 ;;  PANID           2   61[BANK1 ] struct .
 20028 ;;  ShortAddress    2   63[BANK1 ] struct .
 20029 ;;  SecEn           1   65[BANK1 ] unsigned char 
 20030 ;; Auto vars:     Size  Location     Type
 20031 ;;  j               1   69[BANK1 ] unsigned char 
 20032 ;;  i               1   71[BANK1 ] unsigned char 
 20033 ;;  parentNode      1   70[BANK1 ] unsigned char 
 20034 ;; Return value:  Size  Location     Type
 20035 ;;                  1    wreg      unsigned char 
 20036 ;; Registers used:
 20037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20038 ;; Tracked objects:
 20039 ;;		On entry : 0/0
 20040 ;;		On exit  : 0/0
 20041 ;;		Unchanged: 0/0
 20042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20043 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20044 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20045 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20046 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20047 ;;Total ram usage:       11 bytes
 20048 ;; Hardware stack levels used:    1
 20049 ;; Hardware stack levels required when called:   23
 20050 ;; This function calls:
 20051 ;;		_MiMAC_SendPacket
 20052 ;;		_SearchForShortAddress
 20053 ;;		_SendBeacon
 20054 ;;		_SendMACPacket
 20055 ;; This function is called by:
 20056 ;;		_MiWiTasks
 20057 ;;		_UnicastShortAddress
 20058 ;;		_MiApp_UnicastAddress
 20059 ;;		_MiApp_UnicastConnection
 20060 ;; This function uses a non-reentrant model
 20061 ;;
 20062                           
 20063                           	psect	text44
 20064  004812                     __ptext44:
 20065                           	opt stack 0
 20066  004812                     _RouteMessage:
 20067                           	opt stack 5
 20068                           
 20069                           ;miwi_mesh.c: 1934: uint8_t parentNode = (ShortAddress.v[1] & 0x07);
 20070                           
 20071                           ;incstack = 0
 20072  004812  0101               	movlb	1	; () banked
 20073  004814  5140               	movf	(RouteMessage@ShortAddress+1)& (0+255),w,b
 20074  004816  0B07               	andlw	7
 20075  004818  0101               	movlb	1	; () banked
 20076  00481A  6F46               	movwf	RouteMessage@parentNode& (0+255),b
 20077                           
 20078                           ;miwi_mesh.c: 1935: uint8_t i;
 20079                           ;miwi_mesh.c: 1937: if( parentNode == myShortAddress.v[1] )
 20080  00481C  0101               	movlb	1	; () banked
 20081  00481E  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20082  004820  0101               	movlb	1	; () banked
 20083  004822  19F3               	xorwf	(_myShortAddress+1)& (0+255),w,b
 20084  004824  A4D8               	btfss	status,2,c
 20085  004826  D042               	goto	l17279
 20086                           
 20087                           ; BSR set to: 1
 20088                           ;miwi_mesh.c: 1938: {
 20089                           ;miwi_mesh.c: 1940: if( ShortAddress.v[0] > 0x80 )
 20090  004828  0E80               	movlw	128
 20091  00482A  0101               	movlb	1	; () banked
 20092  00482C  653F               	cpfsgt	RouteMessage@ShortAddress& (0+255),b
 20093  00482E  D002               	goto	l17259
 20094                           
 20095                           ; BSR set to: 1
 20096                           ;miwi_mesh.c: 1941: {
 20097                           ;miwi_mesh.c: 1956: return 0;
 20098  004830  0E00               	movlw	0
 20099                           
 20100                           ; BSR set to: 1
 20101  004832  0012               	return	
 20102  004834                     l17259:
 20103                           
 20104                           ; BSR set to: 1
 20105                           ;miwi_mesh.c: 1959: else
 20106                           ;miwi_mesh.c: 1960: {
 20107                           ;miwi_mesh.c: 1961: MTP.flags.Val = 0;
 20108  004834  0E00               	movlw	0
 20109  004836  0101               	movlb	1	; () banked
 20110  004838  6FAD               	movwf	_MTP& (0+255),b
 20111                           
 20112                           ; BSR set to: 1
 20113                           ;miwi_mesh.c: 1962: MTP.flags.bits.ackReq = 1;
 20114  00483A  0101               	movlb	1	; () banked
 20115  00483C  8BAD               	bsf	_MTP& (0+255),5,b
 20116                           
 20117                           ; BSR set to: 1
 20118                           ;miwi_mesh.c: 1963: MTP.flags.bits.secEn = SecEn;
 20119  00483E  0101               	movlb	1	; () banked
 20120  004840  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20121  004842  D003               	bra	u18795
 20122  004844  0101               	movlb	1	; () banked
 20123  004846  97AD               	bcf	_MTP& (0+255),3,b
 20124  004848  D002               	bra	u18796
 20125  00484A                     u18795:
 20126  00484A  0101               	movlb	1	; () banked
 20127  00484C  87AD               	bsf	_MTP& (0+255),3,b
 20128  00484E                     u18796:
 20129                           
 20130                           ; BSR set to: 1
 20131                           ;miwi_mesh.c: 1965: tempShortAddress.Val = ShortAddress.Val;
 20132  00484E  C13F  F1F4         	movff	RouteMessage@ShortAddress,_tempShortAddress
 20133  004852  C140  F1F5         	movff	RouteMessage@ShortAddress+1,_tempShortAddress+1
 20134                           
 20135                           ; BSR set to: 1
 20136                           ;miwi_mesh.c: 1973: if( (i = SearchForShortAddress()) != 0xFF )
 20137  004856  EC87  F057         	call	_SearchForShortAddress	;wreg free
 20138  00485A  0101               	movlb	1	; () banked
 20139  00485C  6F47               	movwf	RouteMessage@i& (0+255),b
 20140  00485E  0101               	movlb	1	; () banked
 20141  004860  2947               	incf	RouteMessage@i& (0+255),w,b
 20142  004862  B4D8               	btfsc	status,2,c
 20143  004864  D010               	goto	l17271
 20144                           
 20145                           ; BSR set to: 1
 20146                           ;miwi_mesh.c: 1974: {
 20147                           ;miwi_mesh.c: 1975: MTP.DestAddress = ConnectionTable[i].Address;
 20148  004866  0101               	movlb	1	; () banked
 20149  004868  5147               	movf	RouteMessage@i& (0+255),w,b
 20150  00486A  0D09               	mullw	9
 20151  00486C  0E04               	movlw	4
 20152  00486E  26F3               	addwf	prodl,f,c
 20153  004870  0E00               	movlw	0
 20154  004872  22F4               	addwfc	prodh,f,c
 20155  004874  0E00               	movlw	low _ConnectionTable
 20156  004876  24F3               	addwf	prodl,w,c
 20157  004878  0101               	movlb	1	; () banked
 20158  00487A  6FAE               	movwf	(_MTP+1)& (0+255),b
 20159  00487C  0E06               	movlw	high _ConnectionTable
 20160  00487E  20F4               	addwfc	prodh,w,c
 20161  004880  0101               	movlb	1	; () banked
 20162  004882  6FAF               	movwf	(_MTP+2)& (0+255),b
 20163                           
 20164                           ;miwi_mesh.c: 1976: }
 20165  004884  D002               	goto	l17275
 20166  004886                     l17271:
 20167                           
 20168                           ; BSR set to: 1
 20169                           ;miwi_mesh.c: 1977: else
 20170                           ;miwi_mesh.c: 1978: {
 20171                           ;miwi_mesh.c: 1981: return 0;
 20172  004886  0E00               	movlw	0
 20173                           
 20174                           ; BSR set to: 1
 20175  004888  0012               	return	
 20176  00488A                     l17275:
 20177                           
 20178                           ; BSR set to: 1
 20179                           ;miwi_mesh.c: 1982: }
 20180                           ;miwi_mesh.c: 1984: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 20181  00488A  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20182  00488E  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20183  004892  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20184  004896  0EA6               	movlw	low _TxBuffer
 20185  004898  0101               	movlb	1	; () banked
 20186  00489A  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20187  00489C  0E02               	movlw	high _TxBuffer
 20188  00489E  0101               	movlb	1	; () banked
 20189  0048A0  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20190  0048A2  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20191  0048A6  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 20192  0048AA  0012               	return	
 20193  0048AC                     l17279:
 20194                           
 20195                           ;miwi_mesh.c: 1985: }
 20196                           ;miwi_mesh.c: 1986: }
 20197                           ;miwi_mesh.c: 1988: if( (knownCoordinators & (1 << parentNode) ) > 0 )
 20198  0048AC  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 20199  0048B0  0E01               	movlw	1
 20200  0048B2  0101               	movlb	1	; () banked
 20201  0048B4  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20202  0048B6  0101               	movlb	1	; () banked
 20203  0048B8  2B42               	incf	??_RouteMessage& (0+255),f,b
 20204  0048BA  D003               	goto	u18814
 20205  0048BC                     u18815:
 20206  0048BC  0101               	movlb	1	; () banked
 20207  0048BE  90D8               	bcf	status,0,c
 20208  0048C0  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20209  0048C2                     u18814:
 20210  0048C2  0101               	movlb	1	; () banked
 20211  0048C4  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20212  0048C6  D7FA               	goto	u18815
 20213  0048C8  0101               	movlb	1	; () banked
 20214  0048CA  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20215  0048CC  0101               	movlb	1	; () banked
 20216  0048CE  15C7               	andwf	_knownCoordinators& (0+255),w,b
 20217  0048D0  0900               	iorlw	0
 20218  0048D2  B4D8               	btfsc	status,2,c
 20219  0048D4  D08D               	goto	l17325
 20220                           
 20221                           ; BSR set to: 1
 20222                           ;miwi_mesh.c: 1989: {
 20223                           ;miwi_mesh.c: 1990: if( RouterFailures[parentNode] >= 3 )
 20224  0048D6  0101               	movlb	1	; () banked
 20225  0048D8  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20226  0048DA  0D01               	mullw	1
 20227  0048DC  0E69               	movlw	low _RouterFailures
 20228  0048DE  24F3               	addwf	prodl,w,c
 20229  0048E0  6ED9               	movwf	fsr2l,c
 20230  0048E2  0E00               	movlw	high _RouterFailures
 20231  0048E4  20F4               	addwfc	prodh,w,c
 20232  0048E6  6EDA               	movwf	fsr2h,c
 20233  0048E8  0E02               	movlw	2
 20234  0048EA  64DF               	cpfsgt	indf2,c
 20235  0048EC  D02D               	goto	l17297
 20236                           
 20237                           ; BSR set to: 1
 20238                           ;miwi_mesh.c: 1991: {
 20239                           ;miwi_mesh.c: 1992: RouterFailures[parentNode] = 0;
 20240  0048EE  0101               	movlb	1	; () banked
 20241  0048F0  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20242  0048F2  0D01               	mullw	1
 20243  0048F4  0E69               	movlw	low _RouterFailures
 20244  0048F6  24F3               	addwf	prodl,w,c
 20245  0048F8  6ED9               	movwf	fsr2l,c
 20246  0048FA  0E00               	movlw	high _RouterFailures
 20247  0048FC  20F4               	addwfc	prodh,w,c
 20248  0048FE  6EDA               	movwf	fsr2h,c
 20249  004900  0E00               	movlw	0
 20250  004902  6EDF               	movwf	indf2,c
 20251                           
 20252                           ; BSR set to: 1
 20253                           ;miwi_mesh.c: 1993: knownCoordinators &= ((1<<parentNode) ^ 0xFF);
 20254  004904  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 20255  004908  0E01               	movlw	1
 20256  00490A  0101               	movlb	1	; () banked
 20257  00490C  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20258  00490E  0101               	movlb	1	; () banked
 20259  004910  2B42               	incf	??_RouteMessage& (0+255),f,b
 20260  004912  D003               	goto	u18844
 20261  004914                     u18845:
 20262  004914  0101               	movlb	1	; () banked
 20263  004916  90D8               	bcf	status,0,c
 20264  004918  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20265  00491A                     u18844:
 20266  00491A  0101               	movlb	1	; () banked
 20267  00491C  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20268  00491E  D7FA               	goto	u18845
 20269  004920  0101               	movlb	1	; () banked
 20270  004922  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20271  004924  0AFF               	xorlw	255
 20272  004926  0101               	movlb	1	; () banked
 20273  004928  17C7               	andwf	_knownCoordinators& (0+255),f,b
 20274                           
 20275                           ; BSR set to: 1
 20276                           ;miwi_mesh.c: 1994: RoutingTable[parentNode] = 0;
 20277  00492A  0101               	movlb	1	; () banked
 20278  00492C  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20279  00492E  0D01               	mullw	1
 20280  004930  0E71               	movlw	low _RoutingTable
 20281  004932  24F3               	addwf	prodl,w,c
 20282  004934  6ED9               	movwf	fsr2l,c
 20283  004936  0E00               	movlw	high _RoutingTable
 20284  004938  20F4               	addwfc	prodh,w,c
 20285  00493A  6EDA               	movwf	fsr2h,c
 20286  00493C  0E00               	movlw	0
 20287  00493E  6EDF               	movwf	indf2,c
 20288                           
 20289                           ; BSR set to: 1
 20290                           ;miwi_mesh.c: 1999: SendBeacon();
 20291  004940  ECB3  F043         	call	_SendBeacon	;wreg free
 20292  004944                     l17291:
 20293                           
 20294                           ;miwi_mesh.c: 2000: return 0;
 20295  004944  0E00               	movlw	0
 20296  004946  0012               	return	
 20297  004948                     l17297:
 20298                           
 20299                           ;miwi_mesh.c: 2002: else
 20300                           ;miwi_mesh.c: 2003: {
 20301                           ;miwi_mesh.c: 2005: MTP.flags.Val = 0;
 20302  004948  0E00               	movlw	0
 20303  00494A  0101               	movlb	1	; () banked
 20304  00494C  6FAD               	movwf	_MTP& (0+255),b
 20305                           
 20306                           ; BSR set to: 1
 20307                           ;miwi_mesh.c: 2006: MTP.flags.bits.ackReq = 1;
 20308  00494E  0101               	movlb	1	; () banked
 20309  004950  8BAD               	bsf	_MTP& (0+255),5,b
 20310                           
 20311                           ; BSR set to: 1
 20312                           ;miwi_mesh.c: 2007: MTP.flags.bits.secEn = SecEn;
 20313  004952  0101               	movlb	1	; () banked
 20314  004954  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20315  004956  D003               	bra	u18855
 20316  004958  0101               	movlb	1	; () banked
 20317  00495A  97AD               	bcf	_MTP& (0+255),3,b
 20318  00495C  D002               	bra	u18856
 20319  00495E                     u18855:
 20320  00495E  0101               	movlb	1	; () banked
 20321  004960  87AD               	bsf	_MTP& (0+255),3,b
 20322  004962                     u18856:
 20323                           
 20324                           ;miwi_mesh.c: 2008: tempShortAddress.v[0] = 0;
 20325  004962  0E00               	movlw	0
 20326  004964  0101               	movlb	1	; () banked
 20327  004966  6FF4               	movwf	_tempShortAddress& (0+255),b
 20328                           
 20329                           ; BSR set to: 1
 20330                           ;miwi_mesh.c: 2009: tempShortAddress.v[1] = parentNode;
 20331  004968  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 20332                           
 20333                           ; BSR set to: 1
 20334                           ;miwi_mesh.c: 2017: if( (i = SearchForShortAddress()) != 0xFF )
 20335  00496C  EC87  F057         	call	_SearchForShortAddress	;wreg free
 20336  004970  0101               	movlb	1	; () banked
 20337  004972  6F47               	movwf	RouteMessage@i& (0+255),b
 20338  004974  0101               	movlb	1	; () banked
 20339  004976  2947               	incf	RouteMessage@i& (0+255),w,b
 20340  004978  B4D8               	btfsc	status,2,c
 20341  00497A  D03A               	goto	l17325
 20342                           
 20343                           ; BSR set to: 1
 20344                           ;miwi_mesh.c: 2018: {
 20345                           ;miwi_mesh.c: 2019: MTP.DestAddress = ConnectionTable[i].Address;
 20346  00497C  0101               	movlb	1	; () banked
 20347  00497E  5147               	movf	RouteMessage@i& (0+255),w,b
 20348  004980  0D09               	mullw	9
 20349  004982  0E04               	movlw	4
 20350  004984  26F3               	addwf	prodl,f,c
 20351  004986  0E00               	movlw	0
 20352  004988  22F4               	addwfc	prodh,f,c
 20353  00498A  0E00               	movlw	low _ConnectionTable
 20354  00498C  24F3               	addwf	prodl,w,c
 20355  00498E  0101               	movlb	1	; () banked
 20356  004990  6FAE               	movwf	(_MTP+1)& (0+255),b
 20357  004992  0E06               	movlw	high _ConnectionTable
 20358  004994  20F4               	addwfc	prodh,w,c
 20359  004996  0101               	movlb	1	; () banked
 20360  004998  6FAF               	movwf	(_MTP+2)& (0+255),b
 20361                           
 20362                           ; BSR set to: 1
 20363                           ;miwi_mesh.c: 2026: }
 20364                           ;miwi_mesh.c: 2028: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 20365                           
 20366                           ; BSR set to: 1
 20367                           
 20368                           ; BSR set to: 1
 20369                           ;miwi_mesh.c: 2021: else
 20370                           ;miwi_mesh.c: 2022: {
 20371                           ;miwi_mesh.c: 2025: goto ROUTE_THROUGH_NEIGHBOR;
 20372                           
 20373                           ;miwi_mesh.c: 2020: }
 20374  00499A  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20375  00499E  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20376  0049A2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20377  0049A6  0EA6               	movlw	low _TxBuffer
 20378  0049A8  0101               	movlb	1	; () banked
 20379  0049AA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20380  0049AC  0E02               	movlw	high _TxBuffer
 20381  0049AE  0101               	movlb	1	; () banked
 20382  0049B0  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20383  0049B2  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20384  0049B6  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 20385  0049BA  0900               	iorlw	0
 20386  0049BC  A4D8               	btfss	status,2,c
 20387  0049BE  D00B               	goto	l17319
 20388                           
 20389                           ;miwi_mesh.c: 2029: {
 20390                           ;miwi_mesh.c: 2030: RouterFailures[parentNode]++;
 20391  0049C0  0101               	movlb	1	; () banked
 20392  0049C2  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20393  0049C4  0D01               	mullw	1
 20394  0049C6  0E69               	movlw	low _RouterFailures
 20395  0049C8  24F3               	addwf	prodl,w,c
 20396  0049CA  6ED9               	movwf	fsr2l,c
 20397  0049CC  0E00               	movlw	high _RouterFailures
 20398  0049CE  20F4               	addwfc	prodh,w,c
 20399  0049D0  6EDA               	movwf	fsr2h,c
 20400  0049D2  2ADF               	incf	indf2,f,c
 20401  0049D4  D7B7               	goto	l17291
 20402  0049D6                     l17319:
 20403                           
 20404                           ;miwi_mesh.c: 2033: else
 20405                           ;miwi_mesh.c: 2034: {
 20406                           ;miwi_mesh.c: 2035: RouterFailures[parentNode] = 0;
 20407  0049D6  0101               	movlb	1	; () banked
 20408  0049D8  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20409  0049DA  0D01               	mullw	1
 20410  0049DC  0E69               	movlw	low _RouterFailures
 20411  0049DE  24F3               	addwf	prodl,w,c
 20412  0049E0  6ED9               	movwf	fsr2l,c
 20413  0049E2  0E00               	movlw	high _RouterFailures
 20414  0049E4  20F4               	addwfc	prodh,w,c
 20415  0049E6  6EDA               	movwf	fsr2h,c
 20416  0049E8  0E00               	movlw	0
 20417  0049EA  6EDF               	movwf	indf2,c
 20418                           
 20419                           ; BSR set to: 1
 20420                           ;miwi_mesh.c: 2036: return 1;
 20421  0049EC  0E01               	movlw	1
 20422                           
 20423                           ; BSR set to: 1
 20424  0049EE  0012               	return	
 20425  0049F0                     l17325:
 20426                           
 20427                           ;miwi_mesh.c: 2042: for(i = 0; i < 8; i++)
 20428  0049F0  0E00               	movlw	0
 20429  0049F2  0101               	movlb	1	; () banked
 20430  0049F4  6F47               	movwf	RouteMessage@i& (0+255),b
 20431  0049F6                     l17327:
 20432                           
 20433                           ; BSR set to: 1
 20434  0049F6  0E07               	movlw	7
 20435  0049F8  0101               	movlb	1	; () banked
 20436  0049FA  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20437  0049FC  D001               	goto	l17331
 20438  0049FE  D0DF               	goto	l17393
 20439  004A00                     l17331:
 20440                           
 20441                           ; BSR set to: 1
 20442                           ;miwi_mesh.c: 2043: {
 20443                           ;miwi_mesh.c: 2044: if( (RoutingTable[i] & (1 << parentNode) ) > 0 )
 20444  004A00  0101               	movlb	1	; () banked
 20445  004A02  5147               	movf	RouteMessage@i& (0+255),w,b
 20446  004A04  0D01               	mullw	1
 20447  004A06  0E71               	movlw	low _RoutingTable
 20448  004A08  24F3               	addwf	prodl,w,c
 20449  004A0A  6ED9               	movwf	fsr2l,c
 20450  004A0C  0E00               	movlw	high _RoutingTable
 20451  004A0E  20F4               	addwfc	prodh,w,c
 20452  004A10  6EDA               	movwf	fsr2h,c
 20453  004A12  50DF               	movf	indf2,w,c
 20454  004A14  0101               	movlb	1	; () banked
 20455  004A16  6F42               	movwf	??_RouteMessage& (0+255),b
 20456  004A18  C146  F143         	movff	RouteMessage@parentNode,??_RouteMessage+1
 20457  004A1C  0E01               	movlw	1
 20458  004A1E  0101               	movlb	1	; () banked
 20459  004A20  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 20460  004A22  0101               	movlb	1	; () banked
 20461  004A24  2B43               	incf	(??_RouteMessage+1)& (0+255),f,b
 20462  004A26  D003               	goto	u18894
 20463  004A28                     u18895:
 20464  004A28  0101               	movlb	1	; () banked
 20465  004A2A  90D8               	bcf	status,0,c
 20466  004A2C  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 20467  004A2E                     u18894:
 20468  004A2E  0101               	movlb	1	; () banked
 20469  004A30  2F43               	decfsz	(??_RouteMessage+1)& (0+255),f,b
 20470  004A32  D7FA               	goto	u18895
 20471  004A34  0101               	movlb	1	; () banked
 20472  004A36  5144               	movf	(??_RouteMessage+2)& (0+255),w,b
 20473  004A38  0101               	movlb	1	; () banked
 20474  004A3A  1542               	andwf	??_RouteMessage& (0+255),w,b
 20475  004A3C  0900               	iorlw	0
 20476  004A3E  B4D8               	btfsc	status,2,c
 20477  004A40  D0BB               	goto	l17389
 20478                           
 20479                           ; BSR set to: 1
 20480                           ;miwi_mesh.c: 2045: {
 20481                           ;miwi_mesh.c: 2046: if( RouterFailures[i] >= 3 )
 20482  004A42  0101               	movlb	1	; () banked
 20483  004A44  5147               	movf	RouteMessage@i& (0+255),w,b
 20484  004A46  0D01               	mullw	1
 20485  004A48  0E69               	movlw	low _RouterFailures
 20486  004A4A  24F3               	addwf	prodl,w,c
 20487  004A4C  6ED9               	movwf	fsr2l,c
 20488  004A4E  0E00               	movlw	high _RouterFailures
 20489  004A50  20F4               	addwfc	prodh,w,c
 20490  004A52  6EDA               	movwf	fsr2h,c
 20491  004A54  0E02               	movlw	2
 20492  004A56  64DF               	cpfsgt	indf2,c
 20493  004A58  D05A               	goto	l17363
 20494                           
 20495                           ; BSR set to: 1
 20496                           ;miwi_mesh.c: 2047: {
 20497                           ;miwi_mesh.c: 2048: RouterFailures[i] = 0;
 20498  004A5A  0101               	movlb	1	; () banked
 20499  004A5C  5147               	movf	RouteMessage@i& (0+255),w,b
 20500  004A5E  0D01               	mullw	1
 20501  004A60  0E69               	movlw	low _RouterFailures
 20502  004A62  24F3               	addwf	prodl,w,c
 20503  004A64  6ED9               	movwf	fsr2l,c
 20504  004A66  0E00               	movlw	high _RouterFailures
 20505  004A68  20F4               	addwfc	prodh,w,c
 20506  004A6A  6EDA               	movwf	fsr2h,c
 20507  004A6C  0E00               	movlw	0
 20508  004A6E  6EDF               	movwf	indf2,c
 20509                           
 20510                           ; BSR set to: 1
 20511                           ;miwi_mesh.c: 2049: knownCoordinators &= ((1<<i) ^ 0xFF);
 20512  004A70  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 20513  004A74  0E01               	movlw	1
 20514  004A76  0101               	movlb	1	; () banked
 20515  004A78  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20516  004A7A  0101               	movlb	1	; () banked
 20517  004A7C  2B42               	incf	??_RouteMessage& (0+255),f,b
 20518  004A7E  D003               	goto	u18924
 20519  004A80                     u18925:
 20520  004A80  0101               	movlb	1	; () banked
 20521  004A82  90D8               	bcf	status,0,c
 20522  004A84  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20523  004A86                     u18924:
 20524  004A86  0101               	movlb	1	; () banked
 20525  004A88  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20526  004A8A  D7FA               	goto	u18925
 20527  004A8C  0101               	movlb	1	; () banked
 20528  004A8E  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20529  004A90  0AFF               	xorlw	255
 20530  004A92  0101               	movlb	1	; () banked
 20531  004A94  17C7               	andwf	_knownCoordinators& (0+255),f,b
 20532                           
 20533                           ; BSR set to: 1
 20534                           ;miwi_mesh.c: 2050: RoutingTable[i] = 0;
 20535  004A96  0101               	movlb	1	; () banked
 20536  004A98  5147               	movf	RouteMessage@i& (0+255),w,b
 20537  004A9A  0D01               	mullw	1
 20538  004A9C  0E71               	movlw	low _RoutingTable
 20539  004A9E  24F3               	addwf	prodl,w,c
 20540  004AA0  6ED9               	movwf	fsr2l,c
 20541  004AA2  0E00               	movlw	high _RoutingTable
 20542  004AA4  20F4               	addwfc	prodh,w,c
 20543  004AA6  6EDA               	movwf	fsr2h,c
 20544  004AA8  0E00               	movlw	0
 20545  004AAA  6EDF               	movwf	indf2,c
 20546                           
 20547                           ; BSR set to: 1
 20548                           ;miwi_mesh.c: 2055: if( role != 0x00 )
 20549  004AAC  0101               	movlb	1	; () banked
 20550  004AAE  51CA               	movf	_role& (0+255),w,b
 20551  004AB0  B4D8               	btfsc	status,2,c
 20552  004AB2  D003               	goto	l17345
 20553                           
 20554                           ; BSR set to: 1
 20555                           ;miwi_mesh.c: 2056: {
 20556                           ;miwi_mesh.c: 2057: SendBeacon();
 20557  004AB4  ECB3  F043         	call	_SendBeacon	;wreg free
 20558                           
 20559                           ;miwi_mesh.c: 2058: }
 20560  004AB8  D028               	goto	l17357
 20561  004ABA                     l17345:
 20562                           
 20563                           ;miwi_mesh.c: 2059: else
 20564                           ;miwi_mesh.c: 2060: {
 20565                           ;miwi_mesh.c: 2062: {TxData = 0;};
 20566  004ABA  0E00               	movlw	0
 20567  004ABC  0101               	movlb	1	; () banked
 20568  004ABE  6FC6               	movwf	_TxData& (0+255),b
 20569                           
 20570                           ; BSR set to: 1
 20571                           ;miwi_mesh.c: 2063: TxBuffer[TxData++] = 0x07;
 20572  004AC0  0101               	movlb	1	; () banked
 20573  004AC2  51C6               	movf	_TxData& (0+255),w,b
 20574  004AC4  0D01               	mullw	1
 20575  004AC6  0EA6               	movlw	low _TxBuffer
 20576  004AC8  24F3               	addwf	prodl,w,c
 20577  004ACA  6ED9               	movwf	fsr2l,c
 20578  004ACC  0E02               	movlw	high _TxBuffer
 20579  004ACE  20F4               	addwfc	prodh,w,c
 20580  004AD0  6EDA               	movwf	fsr2h,c
 20581  004AD2  0E07               	movlw	7
 20582  004AD4  6EDF               	movwf	indf2,c
 20583                           
 20584                           ; BSR set to: 1
 20585  004AD6  0101               	movlb	1	; () banked
 20586  004AD8  2BC6               	incf	_TxData& (0+255),f,b
 20587                           
 20588                           ; BSR set to: 1
 20589                           ;miwi_mesh.c: 2064: TxBuffer[TxData++] = currentChannel;
 20590  004ADA  0101               	movlb	1	; () banked
 20591  004ADC  51C6               	movf	_TxData& (0+255),w,b
 20592  004ADE  0D01               	mullw	1
 20593  004AE0  0EA6               	movlw	low _TxBuffer
 20594  004AE2  24F3               	addwf	prodl,w,c
 20595  004AE4  6ED9               	movwf	fsr2l,c
 20596  004AE6  0E02               	movlw	high _TxBuffer
 20597  004AE8  20F4               	addwfc	prodh,w,c
 20598  004AEA  6EDA               	movwf	fsr2h,c
 20599  004AEC  C1F6  FFDF         	movff	_currentChannel,indf2
 20600                           
 20601                           ; BSR set to: 1
 20602  004AF0  0101               	movlb	1	; () banked
 20603  004AF2  2BC6               	incf	_TxData& (0+255),f,b
 20604                           
 20605                           ; BSR set to: 1
 20606                           ;miwi_mesh.c: 2069: SendMACPacket((0), 0x01);
 20607  004AF4  0E00               	movlw	0
 20608  004AF6  0101               	movlb	1	; () banked
 20609  004AF8  6F39               	movwf	SendMACPacket@Address& (0+255),b
 20610  004AFA  0E00               	movlw	0
 20611  004AFC  0101               	movlb	1	; () banked
 20612  004AFE  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 20613  004B00  0E01               	movlw	1
 20614  004B02  0101               	movlb	1	; () banked
 20615  004B04  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 20616  004B06  ECCB  F057         	call	_SendMACPacket	;wreg free
 20617  004B0A                     l17357:
 20618                           
 20619                           ;miwi_mesh.c: 2071: }
 20620                           ;miwi_mesh.c: 2072: return 0;
 20621  004B0A  0E00               	movlw	0
 20622  004B0C  0012               	return	
 20623  004B0E                     l17363:
 20624                           
 20625                           ;miwi_mesh.c: 2074: else
 20626                           ;miwi_mesh.c: 2075: {
 20627                           ;miwi_mesh.c: 2077: MTP.flags.Val = 0;
 20628  004B0E  0E00               	movlw	0
 20629  004B10  0101               	movlb	1	; () banked
 20630  004B12  6FAD               	movwf	_MTP& (0+255),b
 20631                           
 20632                           ; BSR set to: 1
 20633                           ;miwi_mesh.c: 2078: MTP.flags.bits.ackReq = 1;
 20634  004B14  0101               	movlb	1	; () banked
 20635  004B16  8BAD               	bsf	_MTP& (0+255),5,b
 20636                           
 20637                           ; BSR set to: 1
 20638                           ;miwi_mesh.c: 2079: MTP.flags.bits.secEn = SecEn;
 20639  004B18  0101               	movlb	1	; () banked
 20640  004B1A  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20641  004B1C  D003               	bra	u18945
 20642  004B1E  0101               	movlb	1	; () banked
 20643  004B20  97AD               	bcf	_MTP& (0+255),3,b
 20644  004B22  D002               	bra	u18946
 20645  004B24                     u18945:
 20646  004B24  0101               	movlb	1	; () banked
 20647  004B26  87AD               	bsf	_MTP& (0+255),3,b
 20648  004B28                     u18946:
 20649                           
 20650                           ;miwi_mesh.c: 2080: tempShortAddress.v[0] = 0;
 20651  004B28  0E00               	movlw	0
 20652  004B2A  0101               	movlb	1	; () banked
 20653  004B2C  6FF4               	movwf	_tempShortAddress& (0+255),b
 20654                           
 20655                           ; BSR set to: 1
 20656                           ;miwi_mesh.c: 2081: tempShortAddress.v[1] = i;
 20657  004B2E  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 20658                           
 20659                           ; BSR set to: 1
 20660                           ;miwi_mesh.c: 2089: if( (i = SearchForShortAddress()) != 0xFF )
 20661  004B32  EC87  F057         	call	_SearchForShortAddress	;wreg free
 20662  004B36  0101               	movlb	1	; () banked
 20663  004B38  6F47               	movwf	RouteMessage@i& (0+255),b
 20664  004B3A  0101               	movlb	1	; () banked
 20665  004B3C  2947               	incf	RouteMessage@i& (0+255),w,b
 20666  004B3E  B4D8               	btfsc	status,2,c
 20667  004B40  D03E               	goto	l17393
 20668                           
 20669                           ; BSR set to: 1
 20670                           ;miwi_mesh.c: 2090: {
 20671                           ;miwi_mesh.c: 2091: MTP.DestAddress = ConnectionTable[i].Address;
 20672  004B42  0101               	movlb	1	; () banked
 20673  004B44  5147               	movf	RouteMessage@i& (0+255),w,b
 20674  004B46  0D09               	mullw	9
 20675  004B48  0E04               	movlw	4
 20676  004B4A  26F3               	addwf	prodl,f,c
 20677  004B4C  0E00               	movlw	0
 20678  004B4E  22F4               	addwfc	prodh,f,c
 20679  004B50  0E00               	movlw	low _ConnectionTable
 20680  004B52  24F3               	addwf	prodl,w,c
 20681  004B54  0101               	movlb	1	; () banked
 20682  004B56  6FAE               	movwf	(_MTP+1)& (0+255),b
 20683  004B58  0E06               	movlw	high _ConnectionTable
 20684  004B5A  20F4               	addwfc	prodh,w,c
 20685  004B5C  0101               	movlb	1	; () banked
 20686  004B5E  6FAF               	movwf	(_MTP+2)& (0+255),b
 20687                           
 20688                           ; BSR set to: 1
 20689                           ;miwi_mesh.c: 2098: }
 20690                           ;miwi_mesh.c: 2100: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 20691                           
 20692                           ; BSR set to: 1
 20693                           
 20694                           ; BSR set to: 1
 20695                           ;miwi_mesh.c: 2093: else
 20696                           ;miwi_mesh.c: 2094: {
 20697                           ;miwi_mesh.c: 2097: goto ROUTE_THROUGH_TREE;
 20698                           
 20699                           ;miwi_mesh.c: 2092: }
 20700  004B60  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20701  004B64  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20702  004B68  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20703  004B6C  0EA6               	movlw	low _TxBuffer
 20704  004B6E  0101               	movlb	1	; () banked
 20705  004B70  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20706  004B72  0E02               	movlw	high _TxBuffer
 20707  004B74  0101               	movlb	1	; () banked
 20708  004B76  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20709  004B78  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20710  004B7C  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 20711  004B80  0900               	iorlw	0
 20712  004B82  A4D8               	btfss	status,2,c
 20713  004B84  D00C               	goto	l17383
 20714                           
 20715                           ;miwi_mesh.c: 2101: {
 20716                           ;miwi_mesh.c: 2102: RouterFailures[i]++;
 20717  004B86  0101               	movlb	1	; () banked
 20718  004B88  5147               	movf	RouteMessage@i& (0+255),w,b
 20719  004B8A  0D01               	mullw	1
 20720  004B8C  0E69               	movlw	low _RouterFailures
 20721  004B8E  24F3               	addwf	prodl,w,c
 20722  004B90  6ED9               	movwf	fsr2l,c
 20723  004B92  0E00               	movlw	high _RouterFailures
 20724  004B94  20F4               	addwfc	prodh,w,c
 20725  004B96  6EDA               	movwf	fsr2h,c
 20726  004B98  2ADF               	incf	indf2,f,c
 20727                           
 20728                           ; BSR set to: 1
 20729                           ;miwi_mesh.c: 2103: return 0;
 20730  004B9A  0E00               	movlw	0
 20731                           
 20732                           ; BSR set to: 1
 20733  004B9C  0012               	return	
 20734  004B9E                     l17383:
 20735                           
 20736                           ;miwi_mesh.c: 2104: }
 20737                           ;miwi_mesh.c: 2105: RouterFailures[i] = 0;
 20738  004B9E  0101               	movlb	1	; () banked
 20739  004BA0  5147               	movf	RouteMessage@i& (0+255),w,b
 20740  004BA2  0D01               	mullw	1
 20741  004BA4  0E69               	movlw	low _RouterFailures
 20742  004BA6  24F3               	addwf	prodl,w,c
 20743  004BA8  6ED9               	movwf	fsr2l,c
 20744  004BAA  0E00               	movlw	high _RouterFailures
 20745  004BAC  20F4               	addwfc	prodh,w,c
 20746  004BAE  6EDA               	movwf	fsr2h,c
 20747  004BB0  0E00               	movlw	0
 20748  004BB2  6EDF               	movwf	indf2,c
 20749                           
 20750                           ; BSR set to: 1
 20751                           ;miwi_mesh.c: 2106: return 1;
 20752  004BB4  0E01               	movlw	1
 20753                           
 20754                           ; BSR set to: 1
 20755  004BB6  0012               	return	
 20756  004BB8                     l17389:
 20757  004BB8  0101               	movlb	1	; () banked
 20758  004BBA  2B47               	incf	RouteMessage@i& (0+255),f,b
 20759  004BBC  D71C               	goto	l17327
 20760  004BBE                     l17393:
 20761                           
 20762                           ; BSR set to: 1
 20763                           ;miwi_mesh.c: 2112: if( role != 0x02 )
 20764  004BBE  0E02               	movlw	2
 20765  004BC0  0101               	movlb	1	; () banked
 20766  004BC2  19CA               	xorwf	_role& (0+255),w,b
 20767  004BC4  B4D8               	btfsc	status,2,c
 20768  004BC6  D115               	goto	l17481
 20769                           
 20770                           ; BSR set to: 1
 20771                           ;miwi_mesh.c: 2113: {
 20772                           ;miwi_mesh.c: 2114: MTP.flags.Val = 0;
 20773  004BC8  0E00               	movlw	0
 20774  004BCA  0101               	movlb	1	; () banked
 20775  004BCC  6FAD               	movwf	_MTP& (0+255),b
 20776                           
 20777                           ; BSR set to: 1
 20778                           ;miwi_mesh.c: 2115: MTP.flags.bits.ackReq = 1;
 20779  004BCE  0101               	movlb	1	; () banked
 20780  004BD0  8BAD               	bsf	_MTP& (0+255),5,b
 20781                           
 20782                           ; BSR set to: 1
 20783                           ;miwi_mesh.c: 2116: MTP.flags.bits.secEn = SecEn;
 20784  004BD2  0101               	movlb	1	; () banked
 20785  004BD4  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20786  004BD6  D003               	bra	u18995
 20787  004BD8  0101               	movlb	1	; () banked
 20788  004BDA  97AD               	bcf	_MTP& (0+255),3,b
 20789  004BDC  D002               	bra	u18996
 20790  004BDE                     u18995:
 20791  004BDE  0101               	movlb	1	; () banked
 20792  004BE0  87AD               	bsf	_MTP& (0+255),3,b
 20793  004BE2                     u18996:
 20794                           
 20795                           ; BSR set to: 1
 20796                           ;miwi_mesh.c: 2118: if( role == 0x01)
 20797  004BE2  0101               	movlb	1	; () banked
 20798  004BE4  05CA               	decf	_role& (0+255),w,b
 20799  004BE6  A4D8               	btfss	status,2,c
 20800  004BE8  D034               	goto	l17415
 20801                           
 20802                           ; BSR set to: 1
 20803                           ;miwi_mesh.c: 2119: {
 20804                           ;miwi_mesh.c: 2123: for(i = 0; i < 4; i++)
 20805  004BEA  0E00               	movlw	0
 20806  004BEC  0101               	movlb	1	; () banked
 20807  004BEE  6F47               	movwf	RouteMessage@i& (0+255),b
 20808  004BF0                     l17405:
 20809                           
 20810                           ; BSR set to: 1
 20811  004BF0  0E03               	movlw	3
 20812  004BF2  0101               	movlb	1	; () banked
 20813  004BF4  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20814  004BF6  D001               	goto	l17409
 20815  004BF8  D0D1               	goto	l17465
 20816  004BFA                     l17409:
 20817                           
 20818                           ; BSR set to: 1
 20819                           ;miwi_mesh.c: 2124: {
 20820                           ;miwi_mesh.c: 2125: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 20821  004BFA  0101               	movlb	1	; () banked
 20822  004BFC  5147               	movf	RouteMessage@i& (0+255),w,b
 20823  004BFE  0D01               	mullw	1
 20824  004C00  0E04               	movlw	4
 20825  004C02  26F3               	addwf	prodl,f,c
 20826  004C04  0E00               	movlw	0
 20827  004C06  22F4               	addwfc	prodh,f,c
 20828  004C08  0E00               	movlw	low _ConnectionTable
 20829  004C0A  0101               	movlb	1	; () banked
 20830  004C0C  6F42               	movwf	??_RouteMessage& (0+255),b
 20831  004C0E  0E06               	movlw	high _ConnectionTable
 20832  004C10  0101               	movlb	1	; () banked
 20833  004C12  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20834  004C14  50F3               	movf	prodl,w,c
 20835  004C16  0101               	movlb	1	; () banked
 20836  004C18  2742               	addwf	??_RouteMessage& (0+255),f,b
 20837  004C1A  50F4               	movf	prodh,w,c
 20838  004C1C  0101               	movlb	1	; () banked
 20839  004C1E  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20840  004C20  0101               	movlb	1	; () banked
 20841  004C22  51C9               	movf	_myParent& (0+255),w,b
 20842  004C24  0D09               	mullw	9
 20843  004C26  50F3               	movf	prodl,w,c
 20844  004C28  0101               	movlb	1	; () banked
 20845  004C2A  2542               	addwf	??_RouteMessage& (0+255),w,b
 20846  004C2C  6ED9               	movwf	fsr2l,c
 20847  004C2E  50F4               	movf	prodh,w,c
 20848  004C30  0101               	movlb	1	; () banked
 20849  004C32  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20850  004C34  6EDA               	movwf	fsr2h,c
 20851  004C36  0101               	movlb	1	; () banked
 20852  004C38  5147               	movf	RouteMessage@i& (0+255),w,b
 20853  004C3A  0D01               	mullw	1
 20854  004C3C  0EA6               	movlw	low _tempLongAddress
 20855  004C3E  24F3               	addwf	prodl,w,c
 20856  004C40  6EE1               	movwf	fsr1l,c
 20857  004C42  0E01               	movlw	high _tempLongAddress
 20858  004C44  20F4               	addwfc	prodh,w,c
 20859  004C46  6EE2               	movwf	fsr1h,c
 20860  004C48  CFDF FFE7          	movff	indf2,indf1
 20861                           
 20862                           ; BSR set to: 1
 20863  004C4C  0101               	movlb	1	; () banked
 20864  004C4E  2B47               	incf	RouteMessage@i& (0+255),f,b
 20865  004C50  D7CF               	goto	l17405
 20866  004C52                     l17415:
 20867                           
 20868                           ; BSR set to: 1
 20869                           ;miwi_mesh.c: 2129: else
 20870                           ;miwi_mesh.c: 2130: {
 20871                           ;miwi_mesh.c: 2131: for(i = 0; i < 8; i++)
 20872  004C52  0E00               	movlw	0
 20873  004C54  0101               	movlb	1	; () banked
 20874  004C56  6F47               	movwf	RouteMessage@i& (0+255),b
 20875  004C58                     l17417:
 20876                           
 20877                           ; BSR set to: 1
 20878  004C58  0E07               	movlw	7
 20879  004C5A  0101               	movlb	1	; () banked
 20880  004C5C  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20881  004C5E  D001               	goto	l17421
 20882  004C60  D01F               	goto	l17431
 20883  004C62                     l17421:
 20884                           
 20885                           ; BSR set to: 1
 20886                           ;miwi_mesh.c: 2132: {
 20887                           ;miwi_mesh.c: 2133: if( knownCoordinators && (0x01 << i) )
 20888  004C62  0101               	movlb	1	; () banked
 20889  004C64  51C7               	movf	_knownCoordinators& (0+255),w,b
 20890  004C66  B4D8               	btfsc	status,2,c
 20891  004C68  D018               	goto	l17427
 20892                           
 20893                           ; BSR set to: 1
 20894  004C6A  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 20895  004C6E  0E01               	movlw	1
 20896  004C70  0101               	movlb	1	; () banked
 20897  004C72  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20898  004C74  0E00               	movlw	0
 20899  004C76  0101               	movlb	1	; () banked
 20900  004C78  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 20901  004C7A  0101               	movlb	1	; () banked
 20902  004C7C  2B42               	incf	??_RouteMessage& (0+255),f,b
 20903  004C7E  D004               	goto	u19054
 20904  004C80                     u19055:
 20905  004C80  90D8               	bcf	status,0,c
 20906  004C82  0101               	movlb	1	; () banked
 20907  004C84  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20908  004C86  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 20909  004C88                     u19054:
 20910  004C88  0101               	movlb	1	; () banked
 20911  004C8A  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20912  004C8C  D7F9               	goto	u19055
 20913  004C8E  0101               	movlb	1	; () banked
 20914  004C90  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20915  004C92  0101               	movlb	1	; () banked
 20916  004C94  1144               	iorwf	(??_RouteMessage+2)& (0+255),w,b
 20917  004C96  A4D8               	btfss	status,2,c
 20918  004C98  D003               	goto	l17431
 20919  004C9A                     l17427:
 20920                           
 20921                           ; BSR set to: 1
 20922  004C9A  0101               	movlb	1	; () banked
 20923  004C9C  2B47               	incf	RouteMessage@i& (0+255),f,b
 20924  004C9E  D7DC               	goto	l17417
 20925  004CA0                     l17431:
 20926                           
 20927                           ; BSR set to: 1
 20928                           ;miwi_mesh.c: 2136: }
 20929                           ;miwi_mesh.c: 2137: }
 20930                           ;miwi_mesh.c: 2138: if( i < 8 )
 20931  004CA0  0E08               	movlw	8
 20932  004CA2  0101               	movlb	1	; () banked
 20933  004CA4  6147               	cpfslt	RouteMessage@i& (0+255),b
 20934  004CA6  D005               	goto	l17437
 20935                           
 20936                           ; BSR set to: 1
 20937                           ;miwi_mesh.c: 2139: {
 20938                           ;miwi_mesh.c: 2140: tempShortAddress.v[1] = i;
 20939  004CA8  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 20940                           
 20941                           ; BSR set to: 1
 20942                           ;miwi_mesh.c: 2141: tempShortAddress.v[0] = 0;
 20943  004CAC  0E00               	movlw	0
 20944  004CAE  0101               	movlb	1	; () banked
 20945  004CB0  D004               	goto	L7
 20946  004CB2                     l17437:
 20947                           
 20948                           ; BSR set to: 1
 20949                           ;miwi_mesh.c: 2143: else
 20950                           ;miwi_mesh.c: 2144: {
 20951                           ;miwi_mesh.c: 2146: tempShortAddress.Val = 0;
 20952  004CB2  0E00               	movlw	0
 20953  004CB4  0101               	movlb	1	; () banked
 20954  004CB6  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 20955  004CB8  0E00               	movlw	0
 20956  004CBA                     L7:
 20957  004CBA  6FF4               	movwf	_tempShortAddress& (0+255),b
 20958                           
 20959                           ; BSR set to: 1
 20960                           ;miwi_mesh.c: 2147: }
 20961                           ;miwi_mesh.c: 2150: {
 20962                           ;miwi_mesh.c: 2151: uint8_t j;
 20963                           ;miwi_mesh.c: 2153: if( (j = SearchForShortAddress()) < 64 )
 20964                           
 20965                           ; BSR set to: 1
 20966  004CBC  EC87  F057         	call	_SearchForShortAddress	;wreg free
 20967  004CC0  0101               	movlb	1	; () banked
 20968  004CC2  6F45               	movwf	RouteMessage@j& (0+255),b
 20969  004CC4  0E40               	movlw	64
 20970  004CC6  0101               	movlb	1	; () banked
 20971  004CC8  6145               	cpfslt	RouteMessage@j& (0+255),b
 20972  004CCA  D034               	goto	l17453
 20973                           
 20974                           ; BSR set to: 1
 20975                           ;miwi_mesh.c: 2154: {
 20976                           ;miwi_mesh.c: 2155: for(i = 0; i < 4; i++)
 20977  004CCC  0E00               	movlw	0
 20978  004CCE  0101               	movlb	1	; () banked
 20979  004CD0  6F47               	movwf	RouteMessage@i& (0+255),b
 20980  004CD2                     l17443:
 20981                           
 20982                           ; BSR set to: 1
 20983  004CD2  0E03               	movlw	3
 20984  004CD4  0101               	movlb	1	; () banked
 20985  004CD6  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20986  004CD8  D001               	goto	l17447
 20987  004CDA  D060               	goto	l17465
 20988  004CDC                     l17447:
 20989                           
 20990                           ; BSR set to: 1
 20991                           ;miwi_mesh.c: 2156: {
 20992                           ;miwi_mesh.c: 2157: tempLongAddress[i] = ConnectionTable[j].Address[i];
 20993  004CDC  0101               	movlb	1	; () banked
 20994  004CDE  5147               	movf	RouteMessage@i& (0+255),w,b
 20995  004CE0  0D01               	mullw	1
 20996  004CE2  0E04               	movlw	4
 20997  004CE4  26F3               	addwf	prodl,f,c
 20998  004CE6  0E00               	movlw	0
 20999  004CE8  22F4               	addwfc	prodh,f,c
 21000  004CEA  0E00               	movlw	low _ConnectionTable
 21001  004CEC  0101               	movlb	1	; () banked
 21002  004CEE  6F42               	movwf	??_RouteMessage& (0+255),b
 21003  004CF0  0E06               	movlw	high _ConnectionTable
 21004  004CF2  0101               	movlb	1	; () banked
 21005  004CF4  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 21006  004CF6  50F3               	movf	prodl,w,c
 21007  004CF8  0101               	movlb	1	; () banked
 21008  004CFA  2742               	addwf	??_RouteMessage& (0+255),f,b
 21009  004CFC  50F4               	movf	prodh,w,c
 21010  004CFE  0101               	movlb	1	; () banked
 21011  004D00  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 21012  004D02  0101               	movlb	1	; () banked
 21013  004D04  5145               	movf	RouteMessage@j& (0+255),w,b
 21014  004D06  0D09               	mullw	9
 21015  004D08  50F3               	movf	prodl,w,c
 21016  004D0A  0101               	movlb	1	; () banked
 21017  004D0C  2542               	addwf	??_RouteMessage& (0+255),w,b
 21018  004D0E  6ED9               	movwf	fsr2l,c
 21019  004D10  50F4               	movf	prodh,w,c
 21020  004D12  0101               	movlb	1	; () banked
 21021  004D14  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 21022  004D16  6EDA               	movwf	fsr2h,c
 21023  004D18  0101               	movlb	1	; () banked
 21024  004D1A  5147               	movf	RouteMessage@i& (0+255),w,b
 21025  004D1C  0D01               	mullw	1
 21026  004D1E  0EA6               	movlw	low _tempLongAddress
 21027  004D20  24F3               	addwf	prodl,w,c
 21028  004D22  6EE1               	movwf	fsr1l,c
 21029  004D24  0E01               	movlw	high _tempLongAddress
 21030  004D26  20F4               	addwfc	prodh,w,c
 21031  004D28  6EE2               	movwf	fsr1h,c
 21032  004D2A  CFDF FFE7          	movff	indf2,indf1
 21033                           
 21034                           ; BSR set to: 1
 21035  004D2E  0101               	movlb	1	; () banked
 21036  004D30  2B47               	incf	RouteMessage@i& (0+255),f,b
 21037  004D32  D7CF               	goto	l17443
 21038  004D34                     l17453:
 21039                           
 21040                           ; BSR set to: 1
 21041                           ;miwi_mesh.c: 2160: else
 21042                           ;miwi_mesh.c: 2161: {
 21043                           ;miwi_mesh.c: 2162: for(i = 0; i < 4; i++)
 21044  004D34  0E00               	movlw	0
 21045  004D36  0101               	movlb	1	; () banked
 21046  004D38  6F47               	movwf	RouteMessage@i& (0+255),b
 21047  004D3A                     l17455:
 21048                           
 21049                           ; BSR set to: 1
 21050  004D3A  0E03               	movlw	3
 21051  004D3C  0101               	movlb	1	; () banked
 21052  004D3E  6547               	cpfsgt	RouteMessage@i& (0+255),b
 21053  004D40  D001               	goto	l17459
 21054  004D42  D02C               	goto	l17465
 21055  004D44                     l17459:
 21056                           
 21057                           ; BSR set to: 1
 21058                           ;miwi_mesh.c: 2163: {
 21059                           ;miwi_mesh.c: 2164: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 21060  004D44  0101               	movlb	1	; () banked
 21061  004D46  5147               	movf	RouteMessage@i& (0+255),w,b
 21062  004D48  0D01               	mullw	1
 21063  004D4A  0E04               	movlw	4
 21064  004D4C  26F3               	addwf	prodl,f,c
 21065  004D4E  0E00               	movlw	0
 21066  004D50  22F4               	addwfc	prodh,f,c
 21067  004D52  0E00               	movlw	low _ConnectionTable
 21068  004D54  0101               	movlb	1	; () banked
 21069  004D56  6F42               	movwf	??_RouteMessage& (0+255),b
 21070  004D58  0E06               	movlw	high _ConnectionTable
 21071  004D5A  0101               	movlb	1	; () banked
 21072  004D5C  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 21073  004D5E  50F3               	movf	prodl,w,c
 21074  004D60  0101               	movlb	1	; () banked
 21075  004D62  2742               	addwf	??_RouteMessage& (0+255),f,b
 21076  004D64  50F4               	movf	prodh,w,c
 21077  004D66  0101               	movlb	1	; () banked
 21078  004D68  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 21079  004D6A  0101               	movlb	1	; () banked
 21080  004D6C  51C9               	movf	_myParent& (0+255),w,b
 21081  004D6E  0D09               	mullw	9
 21082  004D70  50F3               	movf	prodl,w,c
 21083  004D72  0101               	movlb	1	; () banked
 21084  004D74  2542               	addwf	??_RouteMessage& (0+255),w,b
 21085  004D76  6ED9               	movwf	fsr2l,c
 21086  004D78  50F4               	movf	prodh,w,c
 21087  004D7A  0101               	movlb	1	; () banked
 21088  004D7C  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 21089  004D7E  6EDA               	movwf	fsr2h,c
 21090  004D80  0101               	movlb	1	; () banked
 21091  004D82  5147               	movf	RouteMessage@i& (0+255),w,b
 21092  004D84  0D01               	mullw	1
 21093  004D86  0EA6               	movlw	low _tempLongAddress
 21094  004D88  24F3               	addwf	prodl,w,c
 21095  004D8A  6EE1               	movwf	fsr1l,c
 21096  004D8C  0E01               	movlw	high _tempLongAddress
 21097  004D8E  20F4               	addwfc	prodh,w,c
 21098  004D90  6EE2               	movwf	fsr1h,c
 21099  004D92  CFDF FFE7          	movff	indf2,indf1
 21100                           
 21101                           ; BSR set to: 1
 21102  004D96  0101               	movlb	1	; () banked
 21103  004D98  2B47               	incf	RouteMessage@i& (0+255),f,b
 21104  004D9A  D7CF               	goto	l17455
 21105  004D9C                     l17465:
 21106                           
 21107                           ; BSR set to: 1
 21108                           ;miwi_mesh.c: 2165: }
 21109                           ;miwi_mesh.c: 2166: }
 21110                           ;miwi_mesh.c: 2167: }
 21111                           ;miwi_mesh.c: 2170: }
 21112                           ;miwi_mesh.c: 2178: MTP.DestAddress = ConnectionTable[myParent].Address;
 21113  004D9C  0101               	movlb	1	; () banked
 21114  004D9E  51C9               	movf	_myParent& (0+255),w,b
 21115  004DA0  0D09               	mullw	9
 21116  004DA2  0E04               	movlw	4
 21117  004DA4  26F3               	addwf	prodl,f,c
 21118  004DA6  0E00               	movlw	0
 21119  004DA8  22F4               	addwfc	prodh,f,c
 21120  004DAA  0E00               	movlw	low _ConnectionTable
 21121  004DAC  24F3               	addwf	prodl,w,c
 21122  004DAE  0101               	movlb	1	; () banked
 21123  004DB0  6FAE               	movwf	(_MTP+1)& (0+255),b
 21124  004DB2  0E06               	movlw	high _ConnectionTable
 21125  004DB4  20F4               	addwfc	prodh,w,c
 21126  004DB6  0101               	movlb	1	; () banked
 21127  004DB8  6FAF               	movwf	(_MTP+2)& (0+255),b
 21128                           
 21129                           ; BSR set to: 1
 21130                           ;miwi_mesh.c: 2181: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 21131  004DBA  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21132  004DBE  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21133  004DC2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21134  004DC6  0EA6               	movlw	low _TxBuffer
 21135  004DC8  0101               	movlb	1	; () banked
 21136  004DCA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21137  004DCC  0E02               	movlw	high _TxBuffer
 21138  004DCE  0101               	movlb	1	; () banked
 21139  004DD0  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21140  004DD2  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21141  004DD6  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 21142  004DDA  0900               	iorlw	0
 21143  004DDC  A4D8               	btfss	status,2,c
 21144  004DDE  D004               	goto	l17475
 21145                           
 21146                           ;miwi_mesh.c: 2182: {
 21147                           ;miwi_mesh.c: 2183: RouterFailures[0]++;
 21148  004DE0  0100               	movlb	0	; () banked
 21149  004DE2  2B69               	incf	_RouterFailures& (0+255),f,b
 21150                           
 21151                           ; BSR set to: 0
 21152                           ;miwi_mesh.c: 2184: return 0;
 21153  004DE4  0E00               	movlw	0
 21154                           
 21155                           ; BSR set to: 0
 21156  004DE6  0012               	return	
 21157  004DE8                     l17475:
 21158                           
 21159                           ;miwi_mesh.c: 2185: }
 21160                           ;miwi_mesh.c: 2186: RouterFailures[0] = 0;
 21161  004DE8  0E00               	movlw	0
 21162  004DEA  0100               	movlb	0	; () banked
 21163  004DEC  6F69               	movwf	_RouterFailures& (0+255),b
 21164                           
 21165                           ; BSR set to: 0
 21166                           ;miwi_mesh.c: 2187: return 1;
 21167  004DEE  0E01               	movlw	1
 21168                           
 21169                           ; BSR set to: 0
 21170  004DF0  0012               	return	
 21171  004DF2                     l17481:
 21172                           
 21173                           ;miwi_mesh.c: 2188: }
 21174                           ;miwi_mesh.c: 2192: MTP.flags.Val = 0;
 21175  004DF2  0E00               	movlw	0
 21176  004DF4  0101               	movlb	1	; () banked
 21177  004DF6  6FAD               	movwf	_MTP& (0+255),b
 21178                           
 21179                           ; BSR set to: 1
 21180                           ;miwi_mesh.c: 2193: MTP.flags.bits.ackReq = 1;
 21181  004DF8  0101               	movlb	1	; () banked
 21182  004DFA  8BAD               	bsf	_MTP& (0+255),5,b
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;miwi_mesh.c: 2194: MTP.flags.bits.secEn = SecEn;
 21186  004DFC  0101               	movlb	1	; () banked
 21187  004DFE  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 21188  004E00  D003               	bra	u19155
 21189  004E02  0101               	movlb	1	; () banked
 21190  004E04  97AD               	bcf	_MTP& (0+255),3,b
 21191  004E06  D002               	bra	u19156
 21192  004E08                     u19155:
 21193  004E08  0101               	movlb	1	; () banked
 21194  004E0A  87AD               	bsf	_MTP& (0+255),3,b
 21195  004E0C                     u19156:
 21196                           
 21197                           ; BSR set to: 1
 21198                           ;miwi_mesh.c: 2196: tempShortAddress.v[1] = parentNode;
 21199  004E0C  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 21200                           
 21201                           ;miwi_mesh.c: 2197: tempShortAddress.v[0] = 0;
 21202  004E10  0E00               	movlw	0
 21203  004E12  0101               	movlb	1	; () banked
 21204  004E14  6FF4               	movwf	_tempShortAddress& (0+255),b
 21205                           
 21206                           ; BSR set to: 1
 21207                           ;miwi_mesh.c: 2205: MTP.DestAddress = ConnectionTable[myParent].Address;
 21208  004E16  0101               	movlb	1	; () banked
 21209  004E18  51C9               	movf	_myParent& (0+255),w,b
 21210  004E1A  0D09               	mullw	9
 21211  004E1C  0E04               	movlw	4
 21212  004E1E  26F3               	addwf	prodl,f,c
 21213  004E20  0E00               	movlw	0
 21214  004E22  22F4               	addwfc	prodh,f,c
 21215  004E24  0E00               	movlw	low _ConnectionTable
 21216  004E26  24F3               	addwf	prodl,w,c
 21217  004E28  0101               	movlb	1	; () banked
 21218  004E2A  6FAE               	movwf	(_MTP+1)& (0+255),b
 21219  004E2C  0E06               	movlw	high _ConnectionTable
 21220  004E2E  20F4               	addwfc	prodh,w,c
 21221  004E30  0101               	movlb	1	; () banked
 21222  004E32  6FAF               	movwf	(_MTP+2)& (0+255),b
 21223                           
 21224                           ; BSR set to: 1
 21225                           ;miwi_mesh.c: 2208: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 21226  004E34  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21227  004E38  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21228  004E3C  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21229  004E40  0EA6               	movlw	low _TxBuffer
 21230  004E42  0101               	movlb	1	; () banked
 21231  004E44  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21232  004E46  0E02               	movlw	high _TxBuffer
 21233  004E48  0101               	movlb	1	; () banked
 21234  004E4A  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21235  004E4C  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21236  004E50  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 21237  004E54  0900               	iorlw	0
 21238  004E56  A4D8               	btfss	status,2,c
 21239  004E58  D004               	goto	l17499
 21240                           
 21241                           ;miwi_mesh.c: 2209: {
 21242                           ;miwi_mesh.c: 2210: RouterFailures[0]++;
 21243  004E5A  0100               	movlb	0	; () banked
 21244  004E5C  2B69               	incf	_RouterFailures& (0+255),f,b
 21245                           
 21246                           ; BSR set to: 0
 21247                           ;miwi_mesh.c: 2211: return 0;
 21248  004E5E  0E00               	movlw	0
 21249                           
 21250                           ; BSR set to: 0
 21251  004E60  0012               	return	
 21252  004E62                     l17499:
 21253                           
 21254                           ;miwi_mesh.c: 2212: }
 21255                           ;miwi_mesh.c: 2213: RouterFailures[0] = 0;
 21256  004E62  0E00               	movlw	0
 21257  004E64  0100               	movlb	0	; () banked
 21258  004E66  6F69               	movwf	_RouterFailures& (0+255),b
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;miwi_mesh.c: 2214: return 1;
 21262  004E68  0E01               	movlw	1
 21263  004E6A  0012               	return	
 21264  004E6C                     __end_of_RouteMessage:
 21265                           	opt stack 0
 21266                           tblptru	equ	0xFF8
 21267                           tblptrh	equ	0xFF7
 21268                           tblptrl	equ	0xFF6
 21269                           tablat	equ	0xFF5
 21270                           prodh	equ	0xFF4
 21271                           prodl	equ	0xFF3
 21272                           intcon	equ	0xFF2
 21273                           intcon2	equ	0xFF1
 21274                           intcon3	equ	0xFF0
 21275                           indf0	equ	0xFEF
 21276                           postinc0	equ	0xFEE
 21277                           plusw0	equ	0xFEB
 21278                           fsr0h	equ	0xFEA
 21279                           fsr0l	equ	0xFE9
 21280                           wreg	equ	0xFE8
 21281                           indf1	equ	0xFE7
 21282                           postinc1	equ	0xFE6
 21283                           postdec1	equ	0xFE5
 21284                           fsr1h	equ	0xFE2
 21285                           fsr1l	equ	0xFE1
 21286                           indf2	equ	0xFDF
 21287                           postinc2	equ	0xFDE
 21288                           postdec2	equ	0xFDD
 21289                           plusw2	equ	0xFDB
 21290                           fsr2h	equ	0xFDA
 21291                           fsr2l	equ	0xFD9
 21292                           status	equ	0xFD8
 21293                           
 21294 ;; *************** function _SendBeacon *****************
 21295 ;; Defined at:
 21296 ;;		line 3277 in file "src/miwi/miwi_mesh.c"
 21297 ;; Parameters:    Size  Location     Type
 21298 ;;		None
 21299 ;; Auto vars:     Size  Location     Type
 21300 ;;  i               1    0        unsigned char 
 21301 ;; Return value:  Size  Location     Type
 21302 ;;		None               void
 21303 ;; Registers used:
 21304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21305 ;; Tracked objects:
 21306 ;;		On entry : 0/0
 21307 ;;		On exit  : 0/0
 21308 ;;		Unchanged: 0/0
 21309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21314 ;;Total ram usage:        0 bytes
 21315 ;; Hardware stack levels used:    1
 21316 ;; Hardware stack levels required when called:   22
 21317 ;; This function calls:
 21318 ;;		_SendMACPacket
 21319 ;; This function is called by:
 21320 ;;		_MiWiTasks
 21321 ;;		_RouteMessage
 21322 ;; This function uses a non-reentrant model
 21323 ;;
 21324                           
 21325                           	psect	text45
 21326  008766                     __ptext45:
 21327                           	opt stack 0
 21328  008766                     _SendBeacon:
 21329                           	opt stack 5
 21330                           
 21331                           ;miwi_mesh.c: 3279: uint8_t i;
 21332                           ;miwi_mesh.c: 3281: {TxData = 0;};
 21333                           
 21334                           ;incstack = 0
 21335  008766  0E00               	movlw	0
 21336  008768  0101               	movlb	1	; () banked
 21337  00876A  6FC6               	movwf	_TxData& (0+255),b
 21338                           
 21339                           ; BSR set to: 1
 21340                           ;miwi_mesh.c: 3283: TxBuffer[TxData++] = myPANID.v[0];
 21341  00876C  0101               	movlb	1	; () banked
 21342  00876E  51C6               	movf	_TxData& (0+255),w,b
 21343  008770  0D01               	mullw	1
 21344  008772  0EA6               	movlw	low _TxBuffer
 21345  008774  24F3               	addwf	prodl,w,c
 21346  008776  6ED9               	movwf	fsr2l,c
 21347  008778  0E02               	movlw	high _TxBuffer
 21348  00877A  20F4               	addwfc	prodh,w,c
 21349  00877C  6EDA               	movwf	fsr2h,c
 21350  00877E  C1F0  FFDF         	movff	_myPANID,indf2
 21351                           
 21352                           ; BSR set to: 1
 21353  008782  0101               	movlb	1	; () banked
 21354  008784  2BC6               	incf	_TxData& (0+255),f,b
 21355                           
 21356                           ; BSR set to: 1
 21357                           ;miwi_mesh.c: 3284: TxBuffer[TxData++] = myPANID.v[1];
 21358  008786  0101               	movlb	1	; () banked
 21359  008788  51C6               	movf	_TxData& (0+255),w,b
 21360  00878A  0D01               	mullw	1
 21361  00878C  0EA6               	movlw	low _TxBuffer
 21362  00878E  24F3               	addwf	prodl,w,c
 21363  008790  6ED9               	movwf	fsr2l,c
 21364  008792  0E02               	movlw	high _TxBuffer
 21365  008794  20F4               	addwfc	prodh,w,c
 21366  008796  6EDA               	movwf	fsr2h,c
 21367  008798  C1F1  FFDF         	movff	_myPANID+1,indf2
 21368                           
 21369                           ; BSR set to: 1
 21370  00879C  0101               	movlb	1	; () banked
 21371  00879E  2BC6               	incf	_TxData& (0+255),f,b
 21372                           
 21373                           ; BSR set to: 1
 21374                           ;miwi_mesh.c: 3285: TxBuffer[TxData++] = myShortAddress.v[0];
 21375  0087A0  0101               	movlb	1	; () banked
 21376  0087A2  51C6               	movf	_TxData& (0+255),w,b
 21377  0087A4  0D01               	mullw	1
 21378  0087A6  0EA6               	movlw	low _TxBuffer
 21379  0087A8  24F3               	addwf	prodl,w,c
 21380  0087AA  6ED9               	movwf	fsr2l,c
 21381  0087AC  0E02               	movlw	high _TxBuffer
 21382  0087AE  20F4               	addwfc	prodh,w,c
 21383  0087B0  6EDA               	movwf	fsr2h,c
 21384  0087B2  C1F2  FFDF         	movff	_myShortAddress,indf2
 21385                           
 21386                           ; BSR set to: 1
 21387  0087B6  0101               	movlb	1	; () banked
 21388  0087B8  2BC6               	incf	_TxData& (0+255),f,b
 21389                           
 21390                           ; BSR set to: 1
 21391                           ;miwi_mesh.c: 3286: TxBuffer[TxData++] = myShortAddress.v[1];
 21392  0087BA  0101               	movlb	1	; () banked
 21393  0087BC  51C6               	movf	_TxData& (0+255),w,b
 21394  0087BE  0D01               	mullw	1
 21395  0087C0  0EA6               	movlw	low _TxBuffer
 21396  0087C2  24F3               	addwf	prodl,w,c
 21397  0087C4  6ED9               	movwf	fsr2l,c
 21398  0087C6  0E02               	movlw	high _TxBuffer
 21399  0087C8  20F4               	addwfc	prodh,w,c
 21400  0087CA  6EDA               	movwf	fsr2h,c
 21401  0087CC  C1F3  FFDF         	movff	_myShortAddress+1,indf2
 21402                           
 21403                           ; BSR set to: 1
 21404  0087D0  0101               	movlb	1	; () banked
 21405  0087D2  2BC6               	incf	_TxData& (0+255),f,b
 21406                           
 21407                           ; BSR set to: 1
 21408                           ;miwi_mesh.c: 3288: TxBuffer[TxData++] = 0xFF;
 21409  0087D4  0101               	movlb	1	; () banked
 21410  0087D6  51C6               	movf	_TxData& (0+255),w,b
 21411  0087D8  0D01               	mullw	1
 21412  0087DA  0EA6               	movlw	low _TxBuffer
 21413  0087DC  24F3               	addwf	prodl,w,c
 21414  0087DE  6ED9               	movwf	fsr2l,c
 21415  0087E0  0E02               	movlw	high _TxBuffer
 21416  0087E2  20F4               	addwfc	prodh,w,c
 21417  0087E4  6EDA               	movwf	fsr2h,c
 21418  0087E6  0EFF               	movlw	255
 21419  0087E8  6EDF               	movwf	indf2,c
 21420                           
 21421                           ; BSR set to: 1
 21422  0087EA  0101               	movlb	1	; () banked
 21423  0087EC  2BC6               	incf	_TxData& (0+255),f,b
 21424                           
 21425                           ; BSR set to: 1
 21426                           ;miwi_mesh.c: 3289: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 21427  0087EE  0101               	movlb	1	; () banked
 21428  0087F0  51C6               	movf	_TxData& (0+255),w,b
 21429  0087F2  0D01               	mullw	1
 21430  0087F4  0EA6               	movlw	low _TxBuffer
 21431  0087F6  24F3               	addwf	prodl,w,c
 21432  0087F8  6ED9               	movwf	fsr2l,c
 21433  0087FA  0E02               	movlw	high _TxBuffer
 21434  0087FC  20F4               	addwfc	prodh,w,c
 21435  0087FE  6EDA               	movwf	fsr2h,c
 21436  008800  C1C2  FFDF         	movff	_MiWiCapacityInfo,indf2
 21437                           
 21438                           ; BSR set to: 1
 21439  008804  0101               	movlb	1	; () banked
 21440  008806  2BC6               	incf	_TxData& (0+255),f,b
 21441                           
 21442                           ; BSR set to: 1
 21443                           ;miwi_mesh.c: 3290: TxBuffer[TxData++] = 0x00;
 21444  008808  0101               	movlb	1	; () banked
 21445  00880A  51C6               	movf	_TxData& (0+255),w,b
 21446  00880C  0D01               	mullw	1
 21447  00880E  0EA6               	movlw	low _TxBuffer
 21448  008810  24F3               	addwf	prodl,w,c
 21449  008812  6ED9               	movwf	fsr2l,c
 21450  008814  0E02               	movlw	high _TxBuffer
 21451  008816  20F4               	addwfc	prodh,w,c
 21452  008818  6EDA               	movwf	fsr2h,c
 21453  00881A  0E00               	movlw	0
 21454  00881C  6EDF               	movwf	indf2,c
 21455                           
 21456                           ; BSR set to: 1
 21457  00881E  0101               	movlb	1	; () banked
 21458  008820  2BC6               	incf	_TxData& (0+255),f,b
 21459                           
 21460                           ; BSR set to: 1
 21461                           ;miwi_mesh.c: 3291: TxBuffer[TxData++] = 0x00;
 21462  008822  0101               	movlb	1	; () banked
 21463  008824  51C6               	movf	_TxData& (0+255),w,b
 21464  008826  0D01               	mullw	1
 21465  008828  0EA6               	movlw	low _TxBuffer
 21466  00882A  24F3               	addwf	prodl,w,c
 21467  00882C  6ED9               	movwf	fsr2l,c
 21468  00882E  0E02               	movlw	high _TxBuffer
 21469  008830  20F4               	addwfc	prodh,w,c
 21470  008832  6EDA               	movwf	fsr2h,c
 21471  008834  0E00               	movlw	0
 21472  008836  6EDF               	movwf	indf2,c
 21473                           
 21474                           ; BSR set to: 1
 21475  008838  0101               	movlb	1	; () banked
 21476  00883A  2BC6               	incf	_TxData& (0+255),f,b
 21477                           
 21478                           ; BSR set to: 1
 21479                           ;miwi_mesh.c: 3292: TxBuffer[TxData++] = 0x4D;
 21480  00883C  0101               	movlb	1	; () banked
 21481  00883E  51C6               	movf	_TxData& (0+255),w,b
 21482  008840  0D01               	mullw	1
 21483  008842  0EA6               	movlw	low _TxBuffer
 21484  008844  24F3               	addwf	prodl,w,c
 21485  008846  6ED9               	movwf	fsr2l,c
 21486  008848  0E02               	movlw	high _TxBuffer
 21487  00884A  20F4               	addwfc	prodh,w,c
 21488  00884C  6EDA               	movwf	fsr2h,c
 21489  00884E  0E4D               	movlw	77
 21490  008850  6EDF               	movwf	indf2,c
 21491                           
 21492                           ; BSR set to: 1
 21493  008852  0101               	movlb	1	; () banked
 21494  008854  2BC6               	incf	_TxData& (0+255),f,b
 21495                           
 21496                           ; BSR set to: 1
 21497                           ;miwi_mesh.c: 3293: TxBuffer[TxData++] = 0x41;
 21498  008856  0101               	movlb	1	; () banked
 21499  008858  51C6               	movf	_TxData& (0+255),w,b
 21500  00885A  0D01               	mullw	1
 21501  00885C  0EA6               	movlw	low _TxBuffer
 21502  00885E  24F3               	addwf	prodl,w,c
 21503  008860  6ED9               	movwf	fsr2l,c
 21504  008862  0E02               	movlw	high _TxBuffer
 21505  008864  20F4               	addwfc	prodh,w,c
 21506  008866  6EDA               	movwf	fsr2h,c
 21507  008868  0E41               	movlw	65
 21508  00886A  6EDF               	movwf	indf2,c
 21509                           
 21510                           ; BSR set to: 1
 21511  00886C  0101               	movlb	1	; () banked
 21512  00886E  2BC6               	incf	_TxData& (0+255),f,b
 21513                           
 21514                           ; BSR set to: 1
 21515                           ;miwi_mesh.c: 3294: TxBuffer[TxData++] = knownCoordinators;
 21516  008870  0101               	movlb	1	; () banked
 21517  008872  51C6               	movf	_TxData& (0+255),w,b
 21518  008874  0D01               	mullw	1
 21519  008876  0EA6               	movlw	low _TxBuffer
 21520  008878  24F3               	addwf	prodl,w,c
 21521  00887A  6ED9               	movwf	fsr2l,c
 21522  00887C  0E02               	movlw	high _TxBuffer
 21523  00887E  20F4               	addwfc	prodh,w,c
 21524  008880  6EDA               	movwf	fsr2h,c
 21525  008882  C1C7  FFDF         	movff	_knownCoordinators,indf2
 21526                           
 21527                           ; BSR set to: 1
 21528  008886  0101               	movlb	1	; () banked
 21529  008888  2BC6               	incf	_TxData& (0+255),f,b
 21530                           
 21531                           ; BSR set to: 1
 21532                           ;miwi_mesh.c: 3305: SendMACPacket((0), 0x03);
 21533  00888A  0E00               	movlw	0
 21534  00888C  0101               	movlb	1	; () banked
 21535  00888E  6F39               	movwf	SendMACPacket@Address& (0+255),b
 21536  008890  0E00               	movlw	0
 21537  008892  0101               	movlb	1	; () banked
 21538  008894  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 21539  008896  0E03               	movlw	3
 21540  008898  0101               	movlb	1	; () banked
 21541  00889A  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 21542  00889C  ECCB  F057         	call	_SendMACPacket	;wreg free
 21543  0088A0  0012               	return		;funcret
 21544  0088A2                     __end_of_SendBeacon:
 21545                           	opt stack 0
 21546                           tblptru	equ	0xFF8
 21547                           tblptrh	equ	0xFF7
 21548                           tblptrl	equ	0xFF6
 21549                           tablat	equ	0xFF5
 21550                           prodh	equ	0xFF4
 21551                           prodl	equ	0xFF3
 21552                           intcon	equ	0xFF2
 21553                           intcon2	equ	0xFF1
 21554                           intcon3	equ	0xFF0
 21555                           indf0	equ	0xFEF
 21556                           postinc0	equ	0xFEE
 21557                           plusw0	equ	0xFEB
 21558                           fsr0h	equ	0xFEA
 21559                           fsr0l	equ	0xFE9
 21560                           wreg	equ	0xFE8
 21561                           indf1	equ	0xFE7
 21562                           postinc1	equ	0xFE6
 21563                           postdec1	equ	0xFE5
 21564                           fsr1h	equ	0xFE2
 21565                           fsr1l	equ	0xFE1
 21566                           indf2	equ	0xFDF
 21567                           postinc2	equ	0xFDE
 21568                           postdec2	equ	0xFDD
 21569                           plusw2	equ	0xFDB
 21570                           fsr2h	equ	0xFDA
 21571                           fsr2l	equ	0xFD9
 21572                           status	equ	0xFD8
 21573                           
 21574 ;; *************** function _SendMACPacket *****************
 21575 ;; Defined at:
 21576 ;;		line 2252 in file "src/miwi/miwi_mesh.c"
 21577 ;; Parameters:    Size  Location     Type
 21578 ;;  Address         2   57[BANK1 ] PTR unsigned char 
 21579 ;;		 -> ConnectionTable(576), NULL(0), 
 21580 ;;  PacketType      1   59[BANK1 ] unsigned char 
 21581 ;; Auto vars:     Size  Location     Type
 21582 ;;		None
 21583 ;; Return value:  Size  Location     Type
 21584 ;;                  1    wreg      unsigned char 
 21585 ;; Registers used:
 21586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21587 ;; Tracked objects:
 21588 ;;		On entry : 0/0
 21589 ;;		On exit  : 0/0
 21590 ;;		Unchanged: 0/0
 21591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21592 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21594 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21595 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21596 ;;Total ram usage:        4 bytes
 21597 ;; Hardware stack levels used:    1
 21598 ;; Hardware stack levels required when called:   21
 21599 ;; This function calls:
 21600 ;;		_MiMAC_SendPacket
 21601 ;; This function is called by:
 21602 ;;		_MiWiTasks
 21603 ;;		_RouteMessage
 21604 ;;		_SendBeacon
 21605 ;;		_MiApp_SearchConnection
 21606 ;;		_MiApp_EstablishConnection
 21607 ;; This function uses a non-reentrant model
 21608 ;;
 21609                           
 21610                           	psect	text46
 21611  00AF96                     __ptext46:
 21612                           	opt stack 0
 21613  00AF96                     _SendMACPacket:
 21614                           	opt stack 6
 21615                           
 21616                           ;miwi_mesh.c: 2255: MTP.flags.Val = 0;
 21617                           
 21618                           ;incstack = 0
 21619  00AF96  0E00               	movlw	0
 21620  00AF98  0101               	movlb	1	; () banked
 21621  00AF9A  6FAD               	movwf	_MTP& (0+255),b
 21622                           
 21623                           ; BSR set to: 1
 21624                           ;miwi_mesh.c: 2257: MTP.flags.bits.packetType = PacketType;
 21625  00AF9C  0101               	movlb	1	; () banked
 21626  00AF9E  51AD               	movf	_MTP& (0+255),w,b
 21627  00AFA0  0101               	movlb	1	; () banked
 21628  00AFA2  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 21629  00AFA4  0BFC               	andlw	-4
 21630  00AFA6  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 21631  00AFA8  0101               	movlb	1	; () banked
 21632  00AFAA  6FAD               	movwf	_MTP& (0+255),b
 21633                           
 21634                           ; BSR set to: 1
 21635                           ;miwi_mesh.c: 2258: if( Address == (0) )
 21636  00AFAC  0101               	movlb	1	; () banked
 21637  00AFAE  5139               	movf	SendMACPacket@Address& (0+255),w,b
 21638  00AFB0  0101               	movlb	1	; () banked
 21639  00AFB2  113A               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 21640  00AFB4  A4D8               	btfss	status,2,c
 21641  00AFB6  D002               	goto	l17109
 21642                           
 21643                           ; BSR set to: 1
 21644                           ;miwi_mesh.c: 2259: {
 21645                           ;miwi_mesh.c: 2260: MTP.flags.bits.broadcast = 1;
 21646  00AFB8  0101               	movlb	1	; () banked
 21647  00AFBA  85AD               	bsf	_MTP& (0+255),2,b
 21648  00AFBC                     l17109:
 21649                           
 21650                           ; BSR set to: 1
 21651                           ;miwi_mesh.c: 2261: }
 21652                           ;miwi_mesh.c: 2262: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 21653  00AFBC  0101               	movlb	1	; () banked
 21654  00AFBE  B5AD               	btfsc	_MTP& (0+255),2,b
 21655  00AFC0  D004               	goto	u18610
 21656  00AFC2  0101               	movlb	1	; () banked
 21657  00AFC4  6B3C               	clrf	??_SendMACPacket& (0+255),b
 21658  00AFC6  2B3C               	incf	??_SendMACPacket& (0+255),f,b
 21659  00AFC8  D002               	goto	u18628
 21660  00AFCA                     u18610:
 21661  00AFCA  0101               	movlb	1	; () banked
 21662  00AFCC  6B3C               	clrf	??_SendMACPacket& (0+255),b
 21663  00AFCE                     u18628:
 21664  00AFCE  0101               	movlb	1	; () banked
 21665  00AFD0  3B3C               	swapf	??_SendMACPacket& (0+255),f,b
 21666  00AFD2  473C               	rlncf	??_SendMACPacket& (0+255),f,b
 21667  00AFD4  0101               	movlb	1	; () banked
 21668  00AFD6  51AD               	movf	_MTP& (0+255),w,b
 21669  00AFD8  0101               	movlb	1	; () banked
 21670  00AFDA  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 21671  00AFDC  0BDF               	andlw	-33
 21672  00AFDE  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 21673  00AFE0  0101               	movlb	1	; () banked
 21674  00AFE2  6FAD               	movwf	_MTP& (0+255),b
 21675                           
 21676                           ; BSR set to: 1
 21677                           ;miwi_mesh.c: 2263: MTP.flags.bits.sourcePrsnt = 1;
 21678  00AFE4  0101               	movlb	1	; () banked
 21679  00AFE6  8FAD               	bsf	_MTP& (0+255),7,b
 21680                           
 21681                           ;miwi_mesh.c: 2265: MTP.DestAddress = Address;
 21682  00AFE8  C139  F1AE         	movff	SendMACPacket@Address,_MTP+1
 21683  00AFEC  C13A  F1AF         	movff	SendMACPacket@Address+1,_MTP+2
 21684                           
 21685                           ; BSR set to: 1
 21686                           ;miwi_mesh.c: 2288: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 21687                           ;	Return value of _SendMACPacket is never used
 21688  00AFF0  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21689  00AFF4  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21690  00AFF8  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21691  00AFFC  0EA6               	movlw	low _TxBuffer
 21692  00AFFE  0101               	movlb	1	; () banked
 21693  00B000  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21694  00B002  0E02               	movlw	high _TxBuffer
 21695  00B004  0101               	movlb	1	; () banked
 21696  00B006  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21697  00B008  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21698  00B00C  ECA4  F035         	call	_MiMAC_SendPacket	;wreg free
 21699  00B010  0012               	return	
 21700  00B012                     __end_of_SendMACPacket:
 21701                           	opt stack 0
 21702                           tblptru	equ	0xFF8
 21703                           tblptrh	equ	0xFF7
 21704                           tblptrl	equ	0xFF6
 21705                           tablat	equ	0xFF5
 21706                           prodh	equ	0xFF4
 21707                           prodl	equ	0xFF3
 21708                           intcon	equ	0xFF2
 21709                           intcon2	equ	0xFF1
 21710                           intcon3	equ	0xFF0
 21711                           indf0	equ	0xFEF
 21712                           postinc0	equ	0xFEE
 21713                           plusw0	equ	0xFEB
 21714                           fsr0h	equ	0xFEA
 21715                           fsr0l	equ	0xFE9
 21716                           wreg	equ	0xFE8
 21717                           indf1	equ	0xFE7
 21718                           postinc1	equ	0xFE6
 21719                           postdec1	equ	0xFE5
 21720                           fsr1h	equ	0xFE2
 21721                           fsr1l	equ	0xFE1
 21722                           indf2	equ	0xFDF
 21723                           postinc2	equ	0xFDE
 21724                           postdec2	equ	0xFDD
 21725                           plusw2	equ	0xFDB
 21726                           fsr2h	equ	0xFDA
 21727                           fsr2l	equ	0xFD9
 21728                           status	equ	0xFD8
 21729                           
 21730 ;; *************** function _MiMAC_SendPacket *****************
 21731 ;; Defined at:
 21732 ;;		line 727 in file "src/miwi/drv_mrf_miwi_89xa.c"
 21733 ;; Parameters:    Size  Location     Type
 21734 ;;  transParam      3   47[BANK1 ] struct .
 21735 ;;  MACPayload      2   50[BANK1 ] PTR unsigned char 
 21736 ;;		 -> TxBuffer(43), 
 21737 ;;  MACPayloadLe    1   52[BANK1 ] unsigned char 
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;  headerLen       1   54[BANK1 ] unsigned char 
 21740 ;;  i               1   56[BANK1 ] unsigned char 
 21741 ;;  TxIndex         1   55[BANK1 ] unsigned char 
 21742 ;; Return value:  Size  Location     Type
 21743 ;;                  1    wreg      unsigned char 
 21744 ;; Registers used:
 21745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21746 ;; Tracked objects:
 21747 ;;		On entry : 0/0
 21748 ;;		On exit  : 0/0
 21749 ;;		Unchanged: 0/0
 21750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21751 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21752 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21753 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21754 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21755 ;;Total ram usage:       10 bytes
 21756 ;; Hardware stack levels used:    1
 21757 ;; Hardware stack levels required when called:   20
 21758 ;; This function calls:
 21759 ;;		_CCM_Enc
 21760 ;;		_TxPacket
 21761 ;; This function is called by:
 21762 ;;		_MiWiTasks
 21763 ;;		_RouteMessage
 21764 ;;		_SendMACPacket
 21765 ;;		_MiApp_UnicastAddress
 21766 ;;		_MiApp_BroadcastPacket
 21767 ;;		_MiApp_RemoveConnection
 21768 ;; This function uses a non-reentrant model
 21769 ;;
 21770                           
 21771                           	psect	text47
 21772  006B48                     __ptext47:
 21773                           	opt stack 0
 21774  006B48                     _MiMAC_SendPacket:
 21775                           	opt stack 6
 21776                           
 21777                           ;drv_mrf_miwi_89xa.c: 731: uint8_t i;
 21778                           ;drv_mrf_miwi_89xa.c: 732: uint8_t TxIndex;
 21779                           ;drv_mrf_miwi_89xa.c: 734: if( MACPayloadLen > 32 )
 21780                           
 21781                           ;incstack = 0
 21782  006B48  0E20               	movlw	32
 21783  006B4A  0101               	movlb	1	; () banked
 21784  006B4C  6534               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 21785  006B4E  D002               	goto	l17021
 21786                           
 21787                           ; BSR set to: 1
 21788                           ;drv_mrf_miwi_89xa.c: 735: {
 21789                           ;drv_mrf_miwi_89xa.c: 736: return 0;
 21790  006B50  0E00               	movlw	0
 21791                           
 21792                           ; BSR set to: 1
 21793  006B52  0012               	return	
 21794  006B54                     l17021:
 21795                           
 21796                           ; BSR set to: 1
 21797                           ;drv_mrf_miwi_89xa.c: 737: }
 21798                           ;drv_mrf_miwi_89xa.c: 742: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 21799  006B54  0101               	movlb	1	; () banked
 21800  006B56  B52F               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 21801  006B58  D004               	goto	u18480
 21802  006B5A  0101               	movlb	1	; () banked
 21803  006B5C  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 21804  006B5E  2B35               	incf	??_MiMAC_SendPacket& (0+255),f,b
 21805  006B60  D002               	goto	u18498
 21806  006B62                     u18480:
 21807  006B62  0101               	movlb	1	; () banked
 21808  006B64  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 21809  006B66                     u18498:
 21810  006B66  0101               	movlb	1	; () banked
 21811  006B68  3B35               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 21812  006B6A  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 21813  006B6C  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 21814  006B6E  0101               	movlb	1	; () banked
 21815  006B70  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 21816  006B72  0101               	movlb	1	; () banked
 21817  006B74  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 21818  006B76  0BBF               	andlw	-65
 21819  006B78  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 21820  006B7A  0101               	movlb	1	; () banked
 21821  006B7C  6F2F               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 21822                           
 21823                           ;drv_mrf_miwi_89xa.c: 749: if( transParam.flags.bits.packetType == 0x01 )
 21824  006B7E  0101               	movlb	1	; () banked
 21825  006B80  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 21826  006B82  0B03               	andlw	3
 21827  006B84  06E8               	decf	wreg,f,c
 21828  006B86  A4D8               	btfss	status,2,c
 21829  006B88  D002               	goto	l322
 21830                           
 21831                           ; BSR set to: 1
 21832                           ;drv_mrf_miwi_89xa.c: 750: {
 21833                           ;drv_mrf_miwi_89xa.c: 751: transParam.flags.bits.sourcePrsnt = 1;
 21834  006B8A  0101               	movlb	1	; () banked
 21835  006B8C  8F2F               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 21836  006B8E                     l322:
 21837                           
 21838                           ; BSR set to: 1
 21839                           ;drv_mrf_miwi_89xa.c: 752: }
 21840                           ;drv_mrf_miwi_89xa.c: 754: MACTxBuffer[0] = transParam.flags.Val;
 21841  006B8E  C12F  F266         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 21842                           
 21843                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[1] = MACSeq++;
 21844  006B92  C1C0  F267         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 21845                           
 21846                           ; BSR set to: 1
 21847  006B96  0101               	movlb	1	; () banked
 21848  006B98  2BC0               	incf	_MACSeq& (0+255),f,b
 21849                           
 21850                           ; BSR set to: 1
 21851                           ;drv_mrf_miwi_89xa.c: 758: TxIndex = 2;
 21852  006B9A  0E02               	movlw	2
 21853  006B9C  0101               	movlb	1	; () banked
 21854  006B9E  6F37               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 21855                           
 21856                           ; BSR set to: 1
 21857                           ;drv_mrf_miwi_89xa.c: 760: if( transParam.flags.bits.destPrsnt )
 21858  006BA0  0101               	movlb	1	; () banked
 21859  006BA2  AD2F               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 21860  006BA4  D02B               	goto	l327
 21861                           
 21862                           ; BSR set to: 1
 21863                           ;drv_mrf_miwi_89xa.c: 761: {
 21864                           ;drv_mrf_miwi_89xa.c: 762: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 21865  006BA6  0E00               	movlw	0
 21866  006BA8  0101               	movlb	1	; () banked
 21867  006BAA  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21868  006BAC  D01A               	goto	l17039
 21869  006BAE                     l17033:
 21870                           
 21871                           ; BSR set to: 1
 21872                           ;drv_mrf_miwi_89xa.c: 763: {
 21873                           ;drv_mrf_miwi_89xa.c: 764: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 21874  006BAE  0101               	movlb	1	; () banked
 21875  006BB0  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21876  006BB2  0D01               	mullw	1
 21877  006BB4  50F3               	movf	prodl,w,c
 21878  006BB6  0101               	movlb	1	; () banked
 21879  006BB8  2530               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 21880  006BBA  6ED9               	movwf	fsr2l,c
 21881  006BBC  50F4               	movf	prodh,w,c
 21882  006BBE  0101               	movlb	1	; () banked
 21883  006BC0  2131               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 21884  006BC2  6EDA               	movwf	fsr2h,c
 21885  006BC4  0101               	movlb	1	; () banked
 21886  006BC6  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21887  006BC8  0D01               	mullw	1
 21888  006BCA  0E66               	movlw	low _MACTxBuffer
 21889  006BCC  24F3               	addwf	prodl,w,c
 21890  006BCE  6EE1               	movwf	fsr1l,c
 21891  006BD0  0E02               	movlw	high _MACTxBuffer
 21892  006BD2  20F4               	addwfc	prodh,w,c
 21893  006BD4  6EE2               	movwf	fsr1h,c
 21894  006BD6  CFDF FFE7          	movff	indf2,indf1
 21895                           
 21896                           ; BSR set to: 1
 21897  006BDA  0101               	movlb	1	; () banked
 21898  006BDC  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21899                           
 21900                           ; BSR set to: 1
 21901  006BDE  0101               	movlb	1	; () banked
 21902  006BE0  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21903  006BE2                     l17039:
 21904                           
 21905                           ; BSR set to: 1
 21906  006BE2  0101               	movlb	1	; () banked
 21907  006BE4  31AA               	rrcf	_MACInitParams& (0+255),w,b
 21908  006BE6  32E8               	rrcf	wreg,f,c
 21909  006BE8  32E8               	rrcf	wreg,f,c
 21910  006BEA  0B0F               	andlw	15
 21911  006BEC  0101               	movlb	1	; () banked
 21912  006BEE  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 21913  006BF0  0101               	movlb	1	; () banked
 21914  006BF2  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 21915  006BF4  0101               	movlb	1	; () banked
 21916  006BF6  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21917  006BF8  A0D8               	btfss	status,0,c
 21918  006BFA  D7D9               	goto	l17033
 21919  006BFC                     l327:
 21920                           
 21921                           ; BSR set to: 1
 21922                           ;drv_mrf_miwi_89xa.c: 770: }
 21923                           ;drv_mrf_miwi_89xa.c: 772: if( transParam.flags.bits.sourcePrsnt )
 21924  006BFC  0101               	movlb	1	; () banked
 21925  006BFE  AF2F               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 21926  006C00  D02B               	goto	l328
 21927                           
 21928                           ; BSR set to: 1
 21929                           ;drv_mrf_miwi_89xa.c: 773: {
 21930                           ;drv_mrf_miwi_89xa.c: 774: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 21931  006C02  0E00               	movlw	0
 21932  006C04  0101               	movlb	1	; () banked
 21933  006C06  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21934  006C08  D01A               	goto	l17049
 21935  006C0A                     l17043:
 21936                           
 21937                           ; BSR set to: 1
 21938                           ;drv_mrf_miwi_89xa.c: 775: {
 21939                           ;drv_mrf_miwi_89xa.c: 776: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 21940  006C0A  0101               	movlb	1	; () banked
 21941  006C0C  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21942  006C0E  0D01               	mullw	1
 21943  006C10  50F3               	movf	prodl,w,c
 21944  006C12  0101               	movlb	1	; () banked
 21945  006C14  25AB               	addwf	(_MACInitParams+1)& (0+255),w,b
 21946  006C16  6ED9               	movwf	fsr2l,c
 21947  006C18  50F4               	movf	prodh,w,c
 21948  006C1A  0101               	movlb	1	; () banked
 21949  006C1C  21AC               	addwfc	(_MACInitParams+2)& (0+255),w,b
 21950  006C1E  6EDA               	movwf	fsr2h,c
 21951  006C20  0101               	movlb	1	; () banked
 21952  006C22  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21953  006C24  0D01               	mullw	1
 21954  006C26  0E66               	movlw	low _MACTxBuffer
 21955  006C28  24F3               	addwf	prodl,w,c
 21956  006C2A  6EE1               	movwf	fsr1l,c
 21957  006C2C  0E02               	movlw	high _MACTxBuffer
 21958  006C2E  20F4               	addwfc	prodh,w,c
 21959  006C30  6EE2               	movwf	fsr1h,c
 21960  006C32  CFDF FFE7          	movff	indf2,indf1
 21961                           
 21962                           ; BSR set to: 1
 21963  006C36  0101               	movlb	1	; () banked
 21964  006C38  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21965                           
 21966                           ; BSR set to: 1
 21967  006C3A  0101               	movlb	1	; () banked
 21968  006C3C  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21969  006C3E                     l17049:
 21970                           
 21971                           ; BSR set to: 1
 21972  006C3E  0101               	movlb	1	; () banked
 21973  006C40  31AA               	rrcf	_MACInitParams& (0+255),w,b
 21974  006C42  32E8               	rrcf	wreg,f,c
 21975  006C44  32E8               	rrcf	wreg,f,c
 21976  006C46  0B0F               	andlw	15
 21977  006C48  0101               	movlb	1	; () banked
 21978  006C4A  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 21979  006C4C  0101               	movlb	1	; () banked
 21980  006C4E  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 21981  006C50  0101               	movlb	1	; () banked
 21982  006C52  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21983  006C54  A0D8               	btfss	status,0,c
 21984  006C56  D7D9               	goto	l17043
 21985  006C58                     l328:
 21986                           
 21987                           ; BSR set to: 1
 21988                           ;drv_mrf_miwi_89xa.c: 777: }
 21989                           ;drv_mrf_miwi_89xa.c: 779: }
 21990                           ;drv_mrf_miwi_89xa.c: 782: if( transParam.flags.bits.secEn )
 21991  006C58  0101               	movlb	1	; () banked
 21992  006C5A  A72F               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 21993  006C5C  D071               	goto	l17087
 21994                           
 21995                           ; BSR set to: 1
 21996                           ;drv_mrf_miwi_89xa.c: 783: {
 21997                           ;drv_mrf_miwi_89xa.c: 785: for(i = 0; i < 4; i++)
 21998  006C5E  0E00               	movlw	0
 21999  006C60  0101               	movlb	1	; () banked
 22000  006C62  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 22001  006C64                     l17053:
 22002                           
 22003                           ; BSR set to: 1
 22004  006C64  0E03               	movlw	3
 22005  006C66  0101               	movlb	1	; () banked
 22006  006C68  6538               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 22007  006C6A  D001               	goto	l17057
 22008  006C6C  D019               	goto	l17065
 22009  006C6E                     l17057:
 22010                           
 22011                           ; BSR set to: 1
 22012                           ;drv_mrf_miwi_89xa.c: 786: {
 22013                           ;drv_mrf_miwi_89xa.c: 787: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 22014  006C6E  0101               	movlb	1	; () banked
 22015  006C70  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22016  006C72  0D01               	mullw	1
 22017  006C74  0EA2               	movlw	low _OutgoingFrameCounter
 22018  006C76  24F3               	addwf	prodl,w,c
 22019  006C78  6ED9               	movwf	fsr2l,c
 22020  006C7A  0E01               	movlw	high _OutgoingFrameCounter
 22021  006C7C  20F4               	addwfc	prodh,w,c
 22022  006C7E  6EDA               	movwf	fsr2h,c
 22023  006C80  0101               	movlb	1	; () banked
 22024  006C82  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22025  006C84  0D01               	mullw	1
 22026  006C86  0E66               	movlw	low _MACTxBuffer
 22027  006C88  24F3               	addwf	prodl,w,c
 22028  006C8A  6EE1               	movwf	fsr1l,c
 22029  006C8C  0E02               	movlw	high _MACTxBuffer
 22030  006C8E  20F4               	addwfc	prodh,w,c
 22031  006C90  6EE2               	movwf	fsr1h,c
 22032  006C92  CFDF FFE7          	movff	indf2,indf1
 22033                           
 22034                           ; BSR set to: 1
 22035  006C96  0101               	movlb	1	; () banked
 22036  006C98  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22037                           
 22038                           ; BSR set to: 1
 22039  006C9A  0101               	movlb	1	; () banked
 22040  006C9C  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22041  006C9E  D7E2               	goto	l17053
 22042  006CA0                     l17065:
 22043                           
 22044                           ; BSR set to: 1
 22045                           ;drv_mrf_miwi_89xa.c: 788: }
 22046                           ;drv_mrf_miwi_89xa.c: 789: OutgoingFrameCounter.Val++;
 22047  006CA0  0E01               	movlw	1
 22048  006CA2  0101               	movlb	1	; () banked
 22049  006CA4  27A2               	addwf	_OutgoingFrameCounter& (0+255),f,b
 22050  006CA6  0E00               	movlw	0
 22051  006CA8  23A3               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 22052  006CAA  23A4               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 22053  006CAC  23A5               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 22054                           
 22055                           ; BSR set to: 1
 22056                           ;drv_mrf_miwi_89xa.c: 796: MACTxBuffer[TxIndex++] = 0x00;
 22057  006CAE  0101               	movlb	1	; () banked
 22058  006CB0  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22059  006CB2  0D01               	mullw	1
 22060  006CB4  0E66               	movlw	low _MACTxBuffer
 22061  006CB6  24F3               	addwf	prodl,w,c
 22062  006CB8  6ED9               	movwf	fsr2l,c
 22063  006CBA  0E02               	movlw	high _MACTxBuffer
 22064  006CBC  20F4               	addwfc	prodh,w,c
 22065  006CBE  6EDA               	movwf	fsr2h,c
 22066  006CC0  0E00               	movlw	0
 22067  006CC2  6EDF               	movwf	indf2,c
 22068                           
 22069                           ; BSR set to: 1
 22070  006CC4  0101               	movlb	1	; () banked
 22071  006CC6  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22072                           
 22073                           ; BSR set to: 1
 22074                           ;drv_mrf_miwi_89xa.c: 798: {
 22075                           ;drv_mrf_miwi_89xa.c: 799: uint8_t headerLen;
 22076                           ;drv_mrf_miwi_89xa.c: 801: headerLen = TxIndex;
 22077  006CC8  C137  F136         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 22078                           
 22079                           ; BSR set to: 1
 22080                           ;drv_mrf_miwi_89xa.c: 803: for(i = 0; i < MACPayloadLen; i++)
 22081  006CCC  0E00               	movlw	0
 22082  006CCE  0101               	movlb	1	; () banked
 22083  006CD0  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 22084  006CD2  D01A               	goto	l17081
 22085  006CD4                     l17075:
 22086                           
 22087                           ; BSR set to: 1
 22088                           ;drv_mrf_miwi_89xa.c: 804: {
 22089                           ;drv_mrf_miwi_89xa.c: 805: MACTxBuffer[TxIndex++] = MACPayload[i];
 22090  006CD4  0101               	movlb	1	; () banked
 22091  006CD6  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22092  006CD8  0D01               	mullw	1
 22093  006CDA  50F3               	movf	prodl,w,c
 22094  006CDC  0101               	movlb	1	; () banked
 22095  006CDE  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 22096  006CE0  6ED9               	movwf	fsr2l,c
 22097  006CE2  50F4               	movf	prodh,w,c
 22098  006CE4  0101               	movlb	1	; () banked
 22099  006CE6  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 22100  006CE8  6EDA               	movwf	fsr2h,c
 22101  006CEA  0101               	movlb	1	; () banked
 22102  006CEC  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22103  006CEE  0D01               	mullw	1
 22104  006CF0  0E66               	movlw	low _MACTxBuffer
 22105  006CF2  24F3               	addwf	prodl,w,c
 22106  006CF4  6EE1               	movwf	fsr1l,c
 22107  006CF6  0E02               	movlw	high _MACTxBuffer
 22108  006CF8  20F4               	addwfc	prodh,w,c
 22109  006CFA  6EE2               	movwf	fsr1h,c
 22110  006CFC  CFDF FFE7          	movff	indf2,indf1
 22111                           
 22112                           ; BSR set to: 1
 22113  006D00  0101               	movlb	1	; () banked
 22114  006D02  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22115                           
 22116                           ; BSR set to: 1
 22117  006D04  0101               	movlb	1	; () banked
 22118  006D06  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22119  006D08                     l17081:
 22120                           
 22121                           ; BSR set to: 1
 22122  006D08  0101               	movlb	1	; () banked
 22123  006D0A  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22124  006D0C  0101               	movlb	1	; () banked
 22125  006D0E  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22126  006D10  A0D8               	btfss	status,0,c
 22127  006D12  D7E0               	goto	l17075
 22128                           
 22129                           ; BSR set to: 1
 22130                           ;drv_mrf_miwi_89xa.c: 806: }
 22131                           ;drv_mrf_miwi_89xa.c: 826: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 22132                           
 22133                           ; BSR set to: 1
 22134  006D14  0E66               	movlw	low _MACTxBuffer
 22135  006D16  0101               	movlb	1	; () banked
 22136  006D18  6F24               	movwf	CCM_Enc@text& (0+255),b
 22137  006D1A  0E02               	movlw	high _MACTxBuffer
 22138  006D1C  0101               	movlb	1	; () banked
 22139  006D1E  6F25               	movwf	(CCM_Enc@text+1)& (0+255),b
 22140  006D20  C136  F126         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 22141  006D24  C134  F127         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 22142  006D28  0EF1               	movlw	low _key
 22143  006D2A  0101               	movlb	1	; () banked
 22144  006D2C  6F28               	movwf	CCM_Enc@key& (0+255),b
 22145  006D2E  0E02               	movlw	high _key
 22146  006D30  0101               	movlb	1	; () banked
 22147  006D32  6F29               	movwf	(CCM_Enc@key+1)& (0+255),b
 22148  006D34  EC51  F044         	call	_CCM_Enc	;wreg free
 22149                           
 22150                           ;drv_mrf_miwi_89xa.c: 827: TxIndex += 2;
 22151  006D38  0E02               	movlw	2
 22152  006D3A  0101               	movlb	1	; () banked
 22153  006D3C  2737               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22154                           
 22155                           ;drv_mrf_miwi_89xa.c: 834: }
 22156                           ;drv_mrf_miwi_89xa.c: 835: }
 22157  006D3E  D024               	goto	l17097
 22158  006D40                     l17087:
 22159                           
 22160                           ; BSR set to: 1
 22161                           ;drv_mrf_miwi_89xa.c: 836: else
 22162                           ;drv_mrf_miwi_89xa.c: 840: for(i = 0; i < MACPayloadLen; i++)
 22163  006D40  0E00               	movlw	0
 22164  006D42  0101               	movlb	1	; () banked
 22165  006D44  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 22166  006D46  D01A               	goto	l17095
 22167  006D48                     l17089:
 22168                           
 22169                           ; BSR set to: 1
 22170                           ;drv_mrf_miwi_89xa.c: 841: {
 22171                           ;drv_mrf_miwi_89xa.c: 842: MACTxBuffer[TxIndex++] = MACPayload[i];
 22172  006D48  0101               	movlb	1	; () banked
 22173  006D4A  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22174  006D4C  0D01               	mullw	1
 22175  006D4E  50F3               	movf	prodl,w,c
 22176  006D50  0101               	movlb	1	; () banked
 22177  006D52  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 22178  006D54  6ED9               	movwf	fsr2l,c
 22179  006D56  50F4               	movf	prodh,w,c
 22180  006D58  0101               	movlb	1	; () banked
 22181  006D5A  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 22182  006D5C  6EDA               	movwf	fsr2h,c
 22183  006D5E  0101               	movlb	1	; () banked
 22184  006D60  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22185  006D62  0D01               	mullw	1
 22186  006D64  0E66               	movlw	low _MACTxBuffer
 22187  006D66  24F3               	addwf	prodl,w,c
 22188  006D68  6EE1               	movwf	fsr1l,c
 22189  006D6A  0E02               	movlw	high _MACTxBuffer
 22190  006D6C  20F4               	addwfc	prodh,w,c
 22191  006D6E  6EE2               	movwf	fsr1h,c
 22192  006D70  CFDF FFE7          	movff	indf2,indf1
 22193                           
 22194                           ; BSR set to: 1
 22195  006D74  0101               	movlb	1	; () banked
 22196  006D76  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22197                           
 22198                           ; BSR set to: 1
 22199  006D78  0101               	movlb	1	; () banked
 22200  006D7A  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22201  006D7C                     l17095:
 22202                           
 22203                           ; BSR set to: 1
 22204  006D7C  0101               	movlb	1	; () banked
 22205  006D7E  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22206  006D80  0101               	movlb	1	; () banked
 22207  006D82  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22208  006D84  A0D8               	btfss	status,0,c
 22209  006D86  D7E0               	goto	l17089
 22210  006D88                     l17097:
 22211                           
 22212                           ; BSR set to: 1
 22213                           ;drv_mrf_miwi_89xa.c: 843: }
 22214                           ;drv_mrf_miwi_89xa.c: 845: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 22215  006D88  0E00               	movlw	0
 22216  006D8A  B3AA               	btfsc	_MACInitParams& (0+255),1,b
 22217  006D8C  0E01               	movlw	1
 22218  006D8E  0101               	movlb	1	; () banked
 22219  006D90  6F0A               	movwf	TxPacket@CCA& (0+255),b
 22220  006D92  0101               	movlb	1	; () banked
 22221  006D94  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22222  006D96  EC6D  F03B         	call	_TxPacket
 22223  006D9A  0012               	return	
 22224  006D9C                     __end_of_MiMAC_SendPacket:
 22225                           	opt stack 0
 22226                           tblptru	equ	0xFF8
 22227                           tblptrh	equ	0xFF7
 22228                           tblptrl	equ	0xFF6
 22229                           tablat	equ	0xFF5
 22230                           prodh	equ	0xFF4
 22231                           prodl	equ	0xFF3
 22232                           intcon	equ	0xFF2
 22233                           intcon2	equ	0xFF1
 22234                           intcon3	equ	0xFF0
 22235                           indf0	equ	0xFEF
 22236                           postinc0	equ	0xFEE
 22237                           plusw0	equ	0xFEB
 22238                           fsr0h	equ	0xFEA
 22239                           fsr0l	equ	0xFE9
 22240                           wreg	equ	0xFE8
 22241                           indf1	equ	0xFE7
 22242                           postinc1	equ	0xFE6
 22243                           postdec1	equ	0xFE5
 22244                           fsr1h	equ	0xFE2
 22245                           fsr1l	equ	0xFE1
 22246                           indf2	equ	0xFDF
 22247                           postinc2	equ	0xFDE
 22248                           postdec2	equ	0xFDD
 22249                           plusw2	equ	0xFDB
 22250                           fsr2h	equ	0xFDA
 22251                           fsr2l	equ	0xFD9
 22252                           status	equ	0xFD8
 22253                           
 22254 ;; *************** function _TxPacket *****************
 22255 ;; Defined at:
 22256 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;  TxPacketLen     1    wreg     unsigned char 
 22259 ;;  CCA             1   10[BANK1 ] unsigned char 
 22260 ;; Auto vars:     Size  Location     Type
 22261 ;;  TxPacketLen     1   31[BANK1 ] unsigned char 
 22262 ;;  allowedTxFai    1   29[BANK1 ] unsigned char 
 22263 ;;  t2              4   23[BANK1 ] struct _MIWI_TICK
 22264 ;;  t1              4   19[BANK1 ] struct _MIWI_TICK
 22265 ;;  rssival         1   33[BANK1 ] unsigned char 
 22266 ;;  i               1   32[BANK1 ] unsigned char 
 22267 ;;  status          1   30[BANK1 ] unsigned char 
 22268 ;;  reTry           1   28[BANK1 ] unsigned char 
 22269 ;;  CCARetries      1   27[BANK1 ] unsigned char 
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  1    wreg      unsigned char 
 22272 ;; Registers used:
 22273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/0
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22279 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22280 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22281 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22282 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22283 ;;Total ram usage:       24 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:   19
 22286 ;; This function calls:
 22287 ;;		_MiWi_TickGet
 22288 ;;		_RegisterRead
 22289 ;;		_RegisterSet
 22290 ;;		_SetRFMode
 22291 ;;		_WriteFIFO
 22292 ;; This function is called by:
 22293 ;;		_MiMAC_SendPacket
 22294 ;; This function uses a non-reentrant model
 22295 ;;
 22296                           
 22297                           	psect	text48
 22298  0076DA                     __ptext48:
 22299                           	opt stack 0
 22300  0076DA                     _TxPacket:
 22301                           	opt stack 6
 22302                           
 22303                           ;incstack = 0
 22304                           ;TxPacket@TxPacketLen stored from wreg
 22305  0076DA  0101               	movlb	1	; () banked
 22306  0076DC  6F1F               	movwf	TxPacket@TxPacketLen& (0+255),b
 22307                           
 22308                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 22309                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 22310                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 22311                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 22312                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 22313                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 22314  0076DE  0E03               	movlw	3
 22315  0076E0  0101               	movlb	1	; () banked
 22316  0076E2  6F1C               	movwf	TxPacket@reTry& (0+255),b
 22317                           
 22318                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 22319  0076E4  D0C3               	goto	l16977
 22320  0076E6                     l16909:
 22321                           
 22322                           ; BSR set to: 1
 22323                           ;drv_mrf_miwi_89xa.c: 305: {
 22324                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 22325                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 22326  0076E6  0E00               	movlw	0
 22327  0076E8  0101               	movlb	1	; () banked
 22328  0076EA  6F1D               	movwf	TxPacket@allowedTxFailure& (0+255),b
 22329  0076EC                     l262:
 22330                           
 22331                           ; BSR set to: 1
 22332                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 22333  0076EC  0E00               	movlw	0
 22334  0076EE  0100               	movlb	0	; () banked
 22335  0076F0  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 22336                           
 22337                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 22338  0076F2  0E00               	movlw	0
 22339  0076F4  0101               	movlb	1	; () banked
 22340  0076F6  6F1B               	movwf	TxPacket@CCARetries& (0+255),b
 22341                           
 22342                           ; BSR set to: 1
 22343                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 22344  0076F8  0101               	movlb	1	; () banked
 22345  0076FA  510A               	movf	TxPacket@CCA& (0+255),w,b
 22346  0076FC  0101               	movlb	1	; () banked
 22347  0076FE  B4D8               	btfsc	status,2,c
 22348  007700  D019               	goto	l263
 22349  007702                     l16913:
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 22353  007702  0E28               	movlw	40
 22354  007704  EC85  F05A         	call	_RegisterRead
 22355  007708  0101               	movlb	1	; () banked
 22356  00770A  6F21               	movwf	TxPacket@rssival& (0+255),b
 22357                           
 22358                           ; BSR set to: 1
 22359                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 22360  00770C  0101               	movlb	1	; () banked
 22361  00770E  90D8               	bcf	status,0,c
 22362  007710  3121               	rrcf	TxPacket@rssival& (0+255),w,b
 22363  007712  0101               	movlb	1	; () banked
 22364  007714  6F21               	movwf	TxPacket@rssival& (0+255),b
 22365                           
 22366                           ; BSR set to: 1
 22367                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 22368  007716  0E41               	movlw	65
 22369  007718  0101               	movlb	1	; () banked
 22370  00771A  6521               	cpfsgt	TxPacket@rssival& (0+255),b
 22371  00771C  D00B               	goto	l263
 22372                           
 22373                           ; BSR set to: 1
 22374                           ;drv_mrf_miwi_89xa.c: 326: {
 22375                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 22376  00771E  0101               	movlb	1	; () banked
 22377  007720  2B1B               	incf	TxPacket@CCARetries& (0+255),f,b
 22378  007722  051B               	decf	TxPacket@CCARetries& (0+255),w,b
 22379  007724  0101               	movlb	1	; () banked
 22380  007726  6F0B               	movwf	??_TxPacket& (0+255),b
 22381  007728  0E04               	movlw	4
 22382  00772A  0101               	movlb	1	; () banked
 22383  00772C  650B               	cpfsgt	??_TxPacket& (0+255),b
 22384  00772E  D7E9               	goto	l16913
 22385                           
 22386                           ; BSR set to: 1
 22387                           ;drv_mrf_miwi_89xa.c: 328: {
 22388                           ;drv_mrf_miwi_89xa.c: 329: return 0;
 22389  007730  0E00               	movlw	0
 22390                           
 22391                           ; BSR set to: 1
 22392  007732  0012               	return	
 22393  007734                     l263:
 22394                           
 22395                           ; BSR set to: 1
 22396                           ;drv_mrf_miwi_89xa.c: 333: }
 22397                           ;drv_mrf_miwi_89xa.c: 334: }
 22398                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 22399  007734  98F2               	bcf	intcon,4,c	;volatile
 22400                           
 22401                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 22402  007736  96F0               	bcf	intcon3,3,c	;volatile
 22403                           
 22404                           ; BSR set to: 1
 22405                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 22406  007738  0E20               	movlw	32
 22407  00773A  ECCB  F055         	call	_SetRFMode
 22408                           
 22409                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 22410  00773E  0E1A               	movlw	26
 22411  007740  0101               	movlb	1	; () banked
 22412  007742  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 22413  007744  0EC9               	movlw	201
 22414  007746  6F02               	movwf	RegisterSet@setting& (0+255),b
 22415  007748  EC06  F05B         	call	_RegisterSet	;wreg free
 22416                           
 22417                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 22418  00774C  0101               	movlb	1	; () banked
 22419  00774E  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 22420  007750  EC91  F05B         	call	_WriteFIFO
 22421                           
 22422                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 22423  007754  0E00               	movlw	0
 22424  007756  0101               	movlb	1	; () banked
 22425  007758  6F20               	movwf	TxPacket@i& (0+255),b
 22426  00775A  D00E               	goto	l16937
 22427  00775C                     l16933:
 22428                           
 22429                           ; BSR set to: 1
 22430                           ;drv_mrf_miwi_89xa.c: 346: {
 22431                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 22432  00775C  0101               	movlb	1	; () banked
 22433  00775E  5120               	movf	TxPacket@i& (0+255),w,b
 22434  007760  0D01               	mullw	1
 22435  007762  0E66               	movlw	low _MACTxBuffer
 22436  007764  24F3               	addwf	prodl,w,c
 22437  007766  6ED9               	movwf	fsr2l,c
 22438  007768  0E02               	movlw	high _MACTxBuffer
 22439  00776A  20F4               	addwfc	prodh,w,c
 22440  00776C  6EDA               	movwf	fsr2h,c
 22441  00776E  50DF               	movf	indf2,w,c
 22442  007770  EC91  F05B         	call	_WriteFIFO
 22443  007774  0101               	movlb	1	; () banked
 22444  007776  2B20               	incf	TxPacket@i& (0+255),f,b
 22445  007778                     l16937:
 22446                           
 22447                           ; BSR set to: 1
 22448  007778  0101               	movlb	1	; () banked
 22449  00777A  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 22450  00777C  0101               	movlb	1	; () banked
 22451  00777E  5D20               	subwf	TxPacket@i& (0+255),w,b
 22452  007780  A0D8               	btfss	status,0,c
 22453  007782  D7EC               	goto	l16933
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;drv_mrf_miwi_89xa.c: 348: }
 22457                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 22458                           
 22459                           ; BSR set to: 1
 22460  007784  0E80               	movlw	128
 22461  007786  ECCB  F055         	call	_SetRFMode
 22462                           
 22463                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 22464  00778A  88F2               	bsf	intcon,4,c	;volatile
 22465                           
 22466                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 22467  00778C  86F0               	bsf	intcon3,3,c	;volatile
 22468  00778E                     l16945:
 22469  00778E  0100               	movlb	0	; () banked
 22470  007790  5199               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 22471  007792  B4D8               	btfsc	status,2,c
 22472                           
 22473                           ; BSR set to: 0
 22474  007794  B0F0               	btfsc	intcon3,0,c	;volatile
 22475  007796  D001               	goto	l16949
 22476  007798  D7FA               	goto	l16945
 22477  00779A                     l16949:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;drv_mrf_miwi_89xa.c: 357: };
 22481                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 22482  00779A  0E00               	movlw	0
 22483  00779C  0100               	movlb	0	; () banked
 22484  00779E  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 22488  0077A0  0E20               	movlw	32
 22489  0077A2  ECCB  F055         	call	_SetRFMode
 22490                           
 22491                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 22492  0077A6  0E60               	movlw	96
 22493  0077A8  ECCB  F055         	call	_SetRFMode
 22494                           
 22495                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 22496  0077AC  0102               	movlb	2	; () banked
 22497  0077AE  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 22498  0077B0  D05B               	goto	l16975
 22499                           
 22500                           ; BSR set to: 2
 22501                           ;drv_mrf_miwi_89xa.c: 367: {
 22502                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 22503  0077B2  C267  F09D         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 22504                           
 22505                           ; BSR set to: 2
 22506                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 22507  0077B6  EC80  F058         	call	_MiWi_TickGet	;wreg free
 22508  0077BA  C100  F113         	movff	?_MiWi_TickGet,TxPacket@t1
 22509  0077BE  C101  F114         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 22510  0077C2  C102  F115         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 22511  0077C6  C103  F116         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 22512  0077CA                     l16961:
 22513                           
 22514                           ;drv_mrf_miwi_89xa.c: 371: {
 22515                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 22516  0077CA  0100               	movlb	0	; () banked
 22517  0077CC  519F               	movf	_hasAck& (0+255),w,b	;volatile
 22518  0077CE  A4D8               	btfss	status,2,c
 22519  0077D0  D04B               	goto	l16975
 22520                           
 22521                           ;drv_mrf_miwi_89xa.c: 376: }
 22522                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 22523                           
 22524                           ; BSR set to: 1
 22525                           
 22526                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 22527                           
 22528                           ; BSR set to: 0
 22529                           ;drv_mrf_miwi_89xa.c: 373: {
 22530                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 22531  0077D2  EC80  F058         	call	_MiWi_TickGet	;wreg free
 22532  0077D6  C100  F117         	movff	?_MiWi_TickGet,TxPacket@t2
 22533  0077DA  C101  F118         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 22534  0077DE  C102  F119         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 22535  0077E2  C103  F11A         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 22536                           
 22537                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 22538  0077E6  C113  F10B         	movff	TxPacket@t1,??_TxPacket
 22539  0077EA  C114  F10C         	movff	TxPacket@t1+1,??_TxPacket+1
 22540  0077EE  C115  F10D         	movff	TxPacket@t1+2,??_TxPacket+2
 22541  0077F2  C116  F10E         	movff	TxPacket@t1+3,??_TxPacket+3
 22542  0077F6  0101               	movlb	1	; () banked
 22543  0077F8  1F0B               	comf	??_TxPacket& (0+255),f,b
 22544  0077FA  1F0C               	comf	(??_TxPacket+1)& (0+255),f,b
 22545  0077FC  1F0D               	comf	(??_TxPacket+2)& (0+255),f,b
 22546  0077FE  1F0E               	comf	(??_TxPacket+3)& (0+255),f,b
 22547  007800  2B0B               	incf	??_TxPacket& (0+255),f,b
 22548  007802  0E00               	movlw	0
 22549  007804  230C               	addwfc	(??_TxPacket+1)& (0+255),f,b
 22550  007806  230D               	addwfc	(??_TxPacket+2)& (0+255),f,b
 22551  007808  230E               	addwfc	(??_TxPacket+3)& (0+255),f,b
 22552  00780A  0101               	movlb	1	; () banked
 22553  00780C  5117               	movf	TxPacket@t2& (0+255),w,b
 22554  00780E  0101               	movlb	1	; () banked
 22555  007810  250B               	addwf	??_TxPacket& (0+255),w,b
 22556  007812  0101               	movlb	1	; () banked
 22557  007814  6F0F               	movwf	(??_TxPacket+4)& (0+255),b
 22558  007816  0101               	movlb	1	; () banked
 22559  007818  5118               	movf	(TxPacket@t2+1)& (0+255),w,b
 22560  00781A  0101               	movlb	1	; () banked
 22561  00781C  210C               	addwfc	(??_TxPacket+1)& (0+255),w,b
 22562  00781E  0101               	movlb	1	; () banked
 22563  007820  6F10               	movwf	(??_TxPacket+5)& (0+255),b
 22564  007822  0101               	movlb	1	; () banked
 22565  007824  5119               	movf	(TxPacket@t2+2)& (0+255),w,b
 22566  007826  0101               	movlb	1	; () banked
 22567  007828  210D               	addwfc	(??_TxPacket+2)& (0+255),w,b
 22568  00782A  0101               	movlb	1	; () banked
 22569  00782C  6F11               	movwf	(??_TxPacket+6)& (0+255),b
 22570  00782E  0101               	movlb	1	; () banked
 22571  007830  511A               	movf	(TxPacket@t2+3)& (0+255),w,b
 22572  007832  0101               	movlb	1	; () banked
 22573  007834  210E               	addwfc	(??_TxPacket+3)& (0+255),w,b
 22574  007836  0101               	movlb	1	; () banked
 22575  007838  6F12               	movwf	(??_TxPacket+7)& (0+255),b
 22576  00783A  0101               	movlb	1	; () banked
 22577  00783C  5112               	movf	(??_TxPacket+7)& (0+255),w,b
 22578  00783E  0101               	movlb	1	; () banked
 22579  007840  1111               	iorwf	(??_TxPacket+6)& (0+255),w,b
 22580  007842  E108               	bnz	l16971
 22581  007844  0EA9               	movlw	169
 22582  007846  0101               	movlb	1	; () banked
 22583  007848  5D0F               	subwf	(??_TxPacket+4)& (0+255),w,b
 22584  00784A  0E61               	movlw	97
 22585  00784C  0101               	movlb	1	; () banked
 22586  00784E  5910               	subwfb	(??_TxPacket+5)& (0+255),w,b
 22587  007850  A0D8               	btfss	status,0,c
 22588  007852  D7BB               	goto	l16961
 22589  007854                     l16971:
 22590                           
 22591                           ; BSR set to: 1
 22592                           ;drv_mrf_miwi_89xa.c: 381: }
 22593                           ;drv_mrf_miwi_89xa.c: 382: }
 22594                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 22595  007854  0101               	movlb	1	; () banked
 22596  007856  2B1D               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 22597  007858  051D               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 22598  00785A  0101               	movlb	1	; () banked
 22599  00785C  6F0B               	movwf	??_TxPacket& (0+255),b
 22600  00785E  0E04               	movlw	4
 22601  007860  0101               	movlb	1	; () banked
 22602  007862  610B               	cpfslt	??_TxPacket& (0+255),b
 22603  007864  D003               	goto	l16977
 22604  007866  D742               	goto	l262
 22605  007868                     l16975:
 22606                           
 22607                           ;drv_mrf_miwi_89xa.c: 388: else
 22608                           ;drv_mrf_miwi_89xa.c: 390: {
 22609                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 22610  007868  0E01               	movlw	1
 22611  00786A  D007               	goto	L8
 22612  00786C                     l16977:
 22613                           
 22614                           ; BSR set to: 1
 22615  00786C  0101               	movlb	1	; () banked
 22616  00786E  071C               	decf	TxPacket@reTry& (0+255),f,b
 22617  007870  0101               	movlb	1	; () banked
 22618  007872  291C               	incf	TxPacket@reTry& (0+255),w,b
 22619  007874  A4D8               	btfss	status,2,c
 22620  007876  D737               	goto	l16909
 22621                           
 22622                           ; BSR set to: 1
 22623                           ;drv_mrf_miwi_89xa.c: 393: }
 22624                           ;drv_mrf_miwi_89xa.c: 394: }
 22625                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 22626                           
 22627                           ; BSR set to: 1
 22628  007878  0E00               	movlw	0
 22629  00787A                     L8:
 22630  00787A  0101               	movlb	1	; () banked
 22631  00787C  6F1E               	movwf	TxPacket@status& (0+255),b
 22632                           
 22633                           ; BSR set to: 1
 22634                           ;drv_mrf_miwi_89xa.c: 398: return status;
 22635                           
 22636                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 22637  00787E  0101               	movlb	1	; () banked
 22638  007880  511E               	movf	TxPacket@status& (0+255),w,b
 22639  007882  0012               	return	
 22640  007884                     __end_of_TxPacket:
 22641                           	opt stack 0
 22642                           tblptru	equ	0xFF8
 22643                           tblptrh	equ	0xFF7
 22644                           tblptrl	equ	0xFF6
 22645                           tablat	equ	0xFF5
 22646                           prodh	equ	0xFF4
 22647                           prodl	equ	0xFF3
 22648                           intcon	equ	0xFF2
 22649                           intcon2	equ	0xFF1
 22650                           intcon3	equ	0xFF0
 22651                           indf0	equ	0xFEF
 22652                           postinc0	equ	0xFEE
 22653                           plusw0	equ	0xFEB
 22654                           fsr0h	equ	0xFEA
 22655                           fsr0l	equ	0xFE9
 22656                           wreg	equ	0xFE8
 22657                           indf1	equ	0xFE7
 22658                           postinc1	equ	0xFE6
 22659                           postdec1	equ	0xFE5
 22660                           fsr1h	equ	0xFE2
 22661                           fsr1l	equ	0xFE1
 22662                           indf2	equ	0xFDF
 22663                           postinc2	equ	0xFDE
 22664                           postdec2	equ	0xFDD
 22665                           plusw2	equ	0xFDB
 22666                           fsr2h	equ	0xFDA
 22667                           fsr2l	equ	0xFD9
 22668                           status	equ	0xFD8
 22669                           
 22670 ;; *************** function _WriteFIFO *****************
 22671 ;; Defined at:
 22672 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22673 ;; Parameters:    Size  Location     Type
 22674 ;;  Data            1    wreg     unsigned char 
 22675 ;; Auto vars:     Size  Location     Type
 22676 ;;  Data            1    2[BANK1 ] unsigned char 
 22677 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 22678 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 22679 ;; Return value:  Size  Location     Type
 22680 ;;		None               void
 22681 ;; Registers used:
 22682 ;;		wreg, status,2, cstack
 22683 ;; Tracked objects:
 22684 ;;		On entry : 0/0
 22685 ;;		On exit  : 0/0
 22686 ;;		Unchanged: 0/0
 22687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22689 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22691 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22692 ;;Total ram usage:        3 bytes
 22693 ;; Hardware stack levels used:    1
 22694 ;; Hardware stack levels required when called:   17
 22695 ;; This function calls:
 22696 ;;		_SPIPut
 22697 ;; This function is called by:
 22698 ;;		_TxPacket
 22699 ;; This function uses a non-reentrant model
 22700 ;;
 22701                           
 22702                           	psect	text49
 22703  00B722                     __ptext49:
 22704                           	opt stack 0
 22705  00B722                     _WriteFIFO:
 22706                           	opt stack 7
 22707                           
 22708                           ; BSR set to: 1
 22709                           ;incstack = 0
 22710                           ;WriteFIFO@Data stored from wreg
 22711  00B722  0101               	movlb	1	; () banked
 22712  00B724  6F02               	movwf	WriteFIFO@Data& (0+255),b
 22713                           
 22714                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 22715  00B726  0E00               	movlw	0
 22716  00B728  B6F0               	btfsc	intcon3,3,c	;volatile
 22717  00B72A  0E01               	movlw	1
 22718  00B72C  0101               	movlb	1	; () banked
 22719  00B72E  6F03               	movwf	WriteFIFO@IRQ1select& (0+255),b
 22720                           
 22721                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 22722  00B730  0E00               	movlw	0
 22723  00B732  B8F2               	btfsc	intcon,4,c	;volatile
 22724  00B734  0E01               	movlw	1
 22725  00B736  0101               	movlb	1	; () banked
 22726  00B738  6F04               	movwf	WriteFIFO@IRQ0select& (0+255),b
 22727                           
 22728                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 22729  00B73A  98F2               	bcf	intcon,4,c	;volatile
 22730                           
 22731                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 22732  00B73C  96F0               	bcf	intcon3,3,c	;volatile
 22733                           
 22734                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 22735  00B73E  9C8B               	bcf	3979,6,c	;volatile
 22736                           
 22737                           ; BSR set to: 1
 22738                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 22739  00B740  0101               	movlb	1	; () banked
 22740  00B742  5102               	movf	WriteFIFO@Data& (0+255),w,b
 22741  00B744  EC8E  F05D         	call	_SPIPut
 22742                           
 22743                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 22744  00B748  8C8B               	bsf	3979,6,c	;volatile
 22745                           
 22746                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 22747  00B74A  0101               	movlb	1	; () banked
 22748  00B74C  B103               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 22749  00B74E  D002               	bra	u18175
 22750  00B750  96F0               	bcf	intcon3,3,c	;volatile
 22751  00B752  D001               	bra	u18176
 22752  00B754                     u18175:
 22753  00B754  86F0               	bsf	intcon3,3,c	;volatile
 22754  00B756                     u18176:
 22755                           
 22756                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 22757  00B756  0101               	movlb	1	; () banked
 22758  00B758  B104               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 22759  00B75A  D002               	bra	u18185
 22760  00B75C  98F2               	bcf	intcon,4,c	;volatile
 22761  00B75E  D001               	bra	u18186
 22762  00B760                     u18185:
 22763  00B760  88F2               	bsf	intcon,4,c	;volatile
 22764  00B762                     u18186:
 22765  00B762  0012               	return		;funcret
 22766  00B764                     __end_of_WriteFIFO:
 22767                           	opt stack 0
 22768                           tblptru	equ	0xFF8
 22769                           tblptrh	equ	0xFF7
 22770                           tblptrl	equ	0xFF6
 22771                           tablat	equ	0xFF5
 22772                           prodh	equ	0xFF4
 22773                           prodl	equ	0xFF3
 22774                           intcon	equ	0xFF2
 22775                           intcon2	equ	0xFF1
 22776                           intcon3	equ	0xFF0
 22777                           indf0	equ	0xFEF
 22778                           postinc0	equ	0xFEE
 22779                           plusw0	equ	0xFEB
 22780                           fsr0h	equ	0xFEA
 22781                           fsr0l	equ	0xFE9
 22782                           wreg	equ	0xFE8
 22783                           indf1	equ	0xFE7
 22784                           postinc1	equ	0xFE6
 22785                           postdec1	equ	0xFE5
 22786                           fsr1h	equ	0xFE2
 22787                           fsr1l	equ	0xFE1
 22788                           indf2	equ	0xFDF
 22789                           postinc2	equ	0xFDE
 22790                           postdec2	equ	0xFDD
 22791                           plusw2	equ	0xFDB
 22792                           fsr2h	equ	0xFDA
 22793                           fsr2l	equ	0xFD9
 22794                           status	equ	0xFD8
 22795                           
 22796 ;; *************** function _CCM_Enc *****************
 22797 ;; Defined at:
 22798 ;;		line 239 in file "src/miwi/drv_mrf_miwi_security.c"
 22799 ;; Parameters:    Size  Location     Type
 22800 ;;  text            2   36[BANK1 ] PTR unsigned char 
 22801 ;;		 -> MACTxBuffer(64), 
 22802 ;;  headerLen       1   38[BANK1 ] unsigned char 
 22803 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 22804 ;;  key             2   40[BANK1 ] PTR unsigned char 
 22805 ;;		 -> key(8), 
 22806 ;; Auto vars:     Size  Location     Type
 22807 ;;  i               1   46[BANK1 ] unsigned char 
 22808 ;; Return value:  Size  Location     Type
 22809 ;;		None               void
 22810 ;; Registers used:
 22811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22812 ;; Tracked objects:
 22813 ;;		On entry : 0/0
 22814 ;;		On exit  : 0/0
 22815 ;;		Unchanged: 0/0
 22816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22817 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22818 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22819 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22820 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22821 ;;Total ram usage:       11 bytes
 22822 ;; Hardware stack levels used:    1
 22823 ;; Hardware stack levels required when called:   18
 22824 ;; This function calls:
 22825 ;;		_CBC_MAC
 22826 ;;		_CTR
 22827 ;; This function is called by:
 22828 ;;		_MiMAC_SendPacket
 22829 ;; This function uses a non-reentrant model
 22830 ;;
 22831                           
 22832                           	psect	text50
 22833  0088A2                     __ptext50:
 22834                           	opt stack 0
 22835  0088A2                     _CCM_Enc:
 22836                           	opt stack 7
 22837                           
 22838                           ;drv_mrf_miwi_security.c: 244: uint8_t i;
 22839                           ;drv_mrf_miwi_security.c: 251: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 22840                           
 22841                           ;incstack = 0
 22842  0088A2  C124  F117         	movff	CCM_Enc@text,CBC_MAC@text
 22843  0088A6  C125  F118         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 22844  0088AA  0101               	movlb	1	; () banked
 22845  0088AC  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22846  0088AE  0101               	movlb	1	; () banked
 22847  0088B0  2527               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 22848  0088B2  0101               	movlb	1	; () banked
 22849  0088B4  6F19               	movwf	CBC_MAC@len& (0+255),b
 22850  0088B6  C128  F11A         	movff	CCM_Enc@key,CBC_MAC@key
 22851  0088BA  C129  F11B         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 22852  0088BE  0EEC               	movlw	low _tmpBlock
 22853  0088C0  0101               	movlb	1	; () banked
 22854  0088C2  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 22855  0088C4  0E01               	movlw	high _tmpBlock
 22856  0088C6  0101               	movlb	1	; () banked
 22857  0088C8  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22858  0088CA  ECD0  F048         	call	_CBC_MAC	;wreg free
 22859                           
 22860                           ;drv_mrf_miwi_security.c: 253: for(i = 0; i < 4; i++)
 22861  0088CE  0E00               	movlw	0
 22862  0088D0  0101               	movlb	1	; () banked
 22863  0088D2  6F2E               	movwf	CCM_Enc@i& (0+255),b
 22864  0088D4                     l16987:
 22865                           
 22866                           ; BSR set to: 1
 22867  0088D4  0E03               	movlw	3
 22868  0088D6  0101               	movlb	1	; () banked
 22869  0088D8  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 22870  0088DA  D001               	goto	l16991
 22871  0088DC  D028               	goto	l16997
 22872  0088DE                     l16991:
 22873                           
 22874                           ; BSR set to: 1
 22875                           ;drv_mrf_miwi_security.c: 254: {
 22876                           ;drv_mrf_miwi_security.c: 255: text[headerLen + payloadLen + i] = tmpBlock[i];
 22877  0088DE  0101               	movlb	1	; () banked
 22878  0088E0  512E               	movf	CCM_Enc@i& (0+255),w,b
 22879  0088E2  0D01               	mullw	1
 22880  0088E4  0EEC               	movlw	low _tmpBlock
 22881  0088E6  24F3               	addwf	prodl,w,c
 22882  0088E8  6ED9               	movwf	fsr2l,c
 22883  0088EA  0E01               	movlw	high _tmpBlock
 22884  0088EC  20F4               	addwfc	prodh,w,c
 22885  0088EE  6EDA               	movwf	fsr2h,c
 22886  0088F0  0101               	movlb	1	; () banked
 22887  0088F2  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 22888  0088F4  C126  F12A         	movff	CCM_Enc@headerLen,??_CCM_Enc
 22889  0088F8  0101               	movlb	1	; () banked
 22890  0088FA  6B2B               	clrf	(??_CCM_Enc+1)& (0+255),b
 22891  0088FC  0101               	movlb	1	; () banked
 22892  0088FE  272A               	addwf	??_CCM_Enc& (0+255),f,b
 22893  008900  0E00               	movlw	0
 22894  008902  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 22895  008904  0101               	movlb	1	; () banked
 22896  008906  512E               	movf	CCM_Enc@i& (0+255),w,b
 22897  008908  0101               	movlb	1	; () banked
 22898  00890A  272A               	addwf	??_CCM_Enc& (0+255),f,b
 22899  00890C  0E00               	movlw	0
 22900  00890E  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 22901  008910  0101               	movlb	1	; () banked
 22902  008912  512A               	movf	??_CCM_Enc& (0+255),w,b
 22903  008914  0101               	movlb	1	; () banked
 22904  008916  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22905  008918  6EE1               	movwf	fsr1l,c
 22906  00891A  0101               	movlb	1	; () banked
 22907  00891C  512B               	movf	(??_CCM_Enc+1)& (0+255),w,b
 22908  00891E  0101               	movlb	1	; () banked
 22909  008920  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22910  008922  6EE2               	movwf	fsr1h,c
 22911  008924  CFDF FFE7          	movff	indf2,indf1
 22912                           
 22913                           ; BSR set to: 1
 22914  008928  0101               	movlb	1	; () banked
 22915  00892A  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 22916  00892C  D7D3               	goto	l16987
 22917  00892E                     l16997:
 22918                           
 22919                           ; BSR set to: 1
 22920                           ;drv_mrf_miwi_security.c: 256: }
 22921                           ;drv_mrf_miwi_security.c: 258: for(i = 0; i < 4-1; i++)
 22922  00892E  0E00               	movlw	0
 22923  008930  0101               	movlb	1	; () banked
 22924  008932  6F2E               	movwf	CCM_Enc@i& (0+255),b
 22925  008934                     l16999:
 22926                           
 22927                           ; BSR set to: 1
 22928  008934  0E02               	movlw	2
 22929  008936  0101               	movlb	1	; () banked
 22930  008938  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 22931  00893A  D001               	goto	l17003
 22932  00893C  D02D               	goto	l17013
 22933  00893E                     l17003:
 22934                           
 22935                           ; BSR set to: 1
 22936                           ;drv_mrf_miwi_security.c: 259: {
 22937                           ;drv_mrf_miwi_security.c: 260: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 22938  00893E  0101               	movlb	1	; () banked
 22939  008940  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22940  008942  0101               	movlb	1	; () banked
 22941  008944  5D2E               	subwf	CCM_Enc@i& (0+255),w,b
 22942  008946  A0D8               	btfss	status,0,c
 22943  008948  D006               	goto	l17007
 22944                           
 22945                           ; BSR set to: 1
 22946  00894A  0E00               	movlw	0
 22947  00894C  0101               	movlb	1	; () banked
 22948  00894E  6F2D               	movwf	(_CCM_Enc$1978+1)& (0+255),b
 22949  008950  0E00               	movlw	0
 22950  008952  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 22951  008954  D013               	goto	l486
 22952  008956                     l17007:
 22953                           
 22954                           ; BSR set to: 1
 22955  008956  0101               	movlb	1	; () banked
 22956  008958  512E               	movf	CCM_Enc@i& (0+255),w,b
 22957  00895A  0D01               	mullw	1
 22958  00895C  50F3               	movf	prodl,w,c
 22959  00895E  0101               	movlb	1	; () banked
 22960  008960  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22961  008962  6ED9               	movwf	fsr2l,c
 22962  008964  50F4               	movf	prodh,w,c
 22963  008966  0101               	movlb	1	; () banked
 22964  008968  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22965  00896A  6EDA               	movwf	fsr2h,c
 22966  00896C  50DF               	movf	indf2,w,c
 22967  00896E  0101               	movlb	1	; () banked
 22968  008970  6F2A               	movwf	??_CCM_Enc& (0+255),b
 22969  008972  0101               	movlb	1	; () banked
 22970  008974  512A               	movf	??_CCM_Enc& (0+255),w,b
 22971  008976  0101               	movlb	1	; () banked
 22972  008978  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 22973  00897A  6B2D               	clrf	(_CCM_Enc$1978+1)& (0+255),b
 22974  00897C                     l486:
 22975                           
 22976                           ; BSR set to: 1
 22977  00897C  0101               	movlb	1	; () banked
 22978  00897E  512E               	movf	CCM_Enc@i& (0+255),w,b
 22979  008980  0D01               	mullw	1
 22980  008982  0EEC               	movlw	low _tmpBlock
 22981  008984  24F3               	addwf	prodl,w,c
 22982  008986  6ED9               	movwf	fsr2l,c
 22983  008988  0E01               	movlw	high _tmpBlock
 22984  00898A  20F4               	addwfc	prodh,w,c
 22985  00898C  6EDA               	movwf	fsr2h,c
 22986  00898E  C12C  FFDF         	movff	_CCM_Enc$1978,indf2
 22987                           
 22988                           ; BSR set to: 1
 22989  008992  0101               	movlb	1	; () banked
 22990  008994  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 22991  008996  D7CE               	goto	l16999
 22992  008998                     l17013:
 22993                           
 22994                           ; BSR set to: 1
 22995                           ;drv_mrf_miwi_security.c: 261: }
 22996                           ;drv_mrf_miwi_security.c: 263: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 22997  008998  0101               	movlb	1	; () banked
 22998  00899A  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22999  00899C  0D01               	mullw	1
 23000  00899E  50F3               	movf	prodl,w,c
 23001  0089A0  0101               	movlb	1	; () banked
 23002  0089A2  2524               	addwf	CCM_Enc@text& (0+255),w,b
 23003  0089A4  0101               	movlb	1	; () banked
 23004  0089A6  6F17               	movwf	CTR@text& (0+255),b
 23005  0089A8  50F4               	movf	prodh,w,c
 23006  0089AA  0101               	movlb	1	; () banked
 23007  0089AC  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 23008  0089AE  0101               	movlb	1	; () banked
 23009  0089B0  6F18               	movwf	(CTR@text+1)& (0+255),b
 23010  0089B2  0101               	movlb	1	; () banked
 23011  0089B4  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 23012  0089B6  0F04               	addlw	4
 23013  0089B8  0101               	movlb	1	; () banked
 23014  0089BA  6F19               	movwf	CTR@len& (0+255),b
 23015  0089BC  C128  F11A         	movff	CCM_Enc@key,CTR@key
 23016  0089C0  C129  F11B         	movff	CCM_Enc@key+1,CTR@key+1
 23017  0089C4  0EEC               	movlw	low _tmpBlock
 23018  0089C6  0101               	movlb	1	; () banked
 23019  0089C8  6F1C               	movwf	CTR@nounce& (0+255),b
 23020  0089CA  0E01               	movlw	high _tmpBlock
 23021  0089CC  0101               	movlb	1	; () banked
 23022  0089CE  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 23023  0089D0  ECA8  F046         	call	_CTR	;wreg free
 23024  0089D4  0012               	return		;funcret
 23025  0089D6                     __end_of_CCM_Enc:
 23026                           	opt stack 0
 23027                           tblptru	equ	0xFF8
 23028                           tblptrh	equ	0xFF7
 23029                           tblptrl	equ	0xFF6
 23030                           tablat	equ	0xFF5
 23031                           prodh	equ	0xFF4
 23032                           prodl	equ	0xFF3
 23033                           intcon	equ	0xFF2
 23034                           intcon2	equ	0xFF1
 23035                           intcon3	equ	0xFF0
 23036                           indf0	equ	0xFEF
 23037                           postinc0	equ	0xFEE
 23038                           plusw0	equ	0xFEB
 23039                           fsr0h	equ	0xFEA
 23040                           fsr0l	equ	0xFE9
 23041                           wreg	equ	0xFE8
 23042                           indf1	equ	0xFE7
 23043                           postinc1	equ	0xFE6
 23044                           postdec1	equ	0xFE5
 23045                           fsr1h	equ	0xFE2
 23046                           fsr1l	equ	0xFE1
 23047                           indf2	equ	0xFDF
 23048                           postinc2	equ	0xFDE
 23049                           postdec2	equ	0xFDD
 23050                           plusw2	equ	0xFDB
 23051                           fsr2h	equ	0xFDA
 23052                           fsr2l	equ	0xFD9
 23053                           status	equ	0xFD8
 23054                           
 23055 ;; *************** function _MiMAC_ReceivedPacket *****************
 23056 ;; Defined at:
 23057 ;;		line 850 in file "src/miwi/drv_mrf_miwi_89xa.c"
 23058 ;; Parameters:    Size  Location     Type
 23059 ;;		None
 23060 ;; Auto vars:     Size  Location     Type
 23061 ;;  FrameCounter    4   63[BANK1 ] struct .
 23062 ;;  k               1   67[BANK1 ] unsigned char 
 23063 ;;  PayloadIndex    1   69[BANK1 ] unsigned char 
 23064 ;;  j               1   68[BANK1 ] unsigned char 
 23065 ;;  currentTick     4   59[BANK1 ] struct _MIWI_TICK
 23066 ;;  i               1   70[BANK1 ] unsigned char 
 23067 ;; Return value:  Size  Location     Type
 23068 ;;                  1    wreg      unsigned char 
 23069 ;; Registers used:
 23070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23071 ;; Tracked objects:
 23072 ;;		On entry : 0/0
 23073 ;;		On exit  : 0/0
 23074 ;;		Unchanged: 0/0
 23075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23077 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23078 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23079 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23080 ;;Total ram usage:       20 bytes
 23081 ;; Hardware stack levels used:    1
 23082 ;; Hardware stack levels required when called:   19
 23083 ;; This function calls:
 23084 ;;		_CCM_Dec
 23085 ;;		_MiWi_TickGet
 23086 ;;		_isSameAddress
 23087 ;; This function is called by:
 23088 ;;		_MiWiTasks
 23089 ;; This function uses a non-reentrant model
 23090 ;;
 23091                           
 23092                           	psect	text51
 23093  005908                     __ptext51:
 23094                           	opt stack 0
 23095  005908                     _MiMAC_ReceivedPacket:
 23096                           	opt stack 10
 23097                           
 23098                           ;drv_mrf_miwi_89xa.c: 852: uint8_t i;
 23099                           ;drv_mrf_miwi_89xa.c: 853: MIWI_TICK currentTick;
 23100                           ;drv_mrf_miwi_89xa.c: 857: for(i = 0; i < 5; i++)
 23101                           
 23102                           ;incstack = 0
 23103  005908  0E00               	movlw	0
 23104  00590A  0101               	movlb	1	; () banked
 23105  00590C  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 23106  00590E                     l17607:
 23107                           
 23108                           ; BSR set to: 1
 23109  00590E  0E04               	movlw	4
 23110  005910  0101               	movlb	1	; () banked
 23111  005912  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23112  005914  D001               	goto	l17611
 23113  005916  D084               	goto	l17625
 23114  005918                     l17611:
 23115                           
 23116                           ; BSR set to: 1
 23117                           ;drv_mrf_miwi_89xa.c: 858: {
 23118                           ;drv_mrf_miwi_89xa.c: 859: currentTick = MiWi_TickGet();
 23119  005918  EC80  F058         	call	_MiWi_TickGet	;wreg free
 23120  00591C  C100  F13B         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 23121  005920  C101  F13C         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 23122  005924  C102  F13D         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 23123  005928  C103  F13E         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 23124                           
 23125                           ;drv_mrf_miwi_89xa.c: 860: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 23126                           ;drv_mrf_miwi_89xa.c: 861: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 23127  00592C  0101               	movlb	1	; () banked
 23128  00592E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23129  005930  0D06               	mullw	6
 23130  005932  0E48               	movlw	low _AckInfo
 23131  005934  24F3               	addwf	prodl,w,c
 23132  005936  6ED9               	movwf	fsr2l,c
 23133  005938  0E02               	movlw	high _AckInfo
 23134  00593A  20F4               	addwfc	prodh,w,c
 23135  00593C  6EDA               	movwf	fsr2h,c
 23136  00593E  50DF               	movf	indf2,w,c
 23137  005940  B4D8               	btfsc	status,2,c
 23138  005942  D06B               	goto	l17621
 23139                           
 23140                           ; BSR set to: 1
 23141  005944  0101               	movlb	1	; () banked
 23142  005946  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23143  005948  0D06               	mullw	6
 23144  00594A  0E02               	movlw	2
 23145  00594C  26F3               	addwf	prodl,f,c
 23146  00594E  0E00               	movlw	0
 23147  005950  22F4               	addwfc	prodh,f,c
 23148  005952  0E48               	movlw	low _AckInfo
 23149  005954  24F3               	addwf	prodl,w,c
 23150  005956  6ED9               	movwf	fsr2l,c
 23151  005958  0E02               	movlw	high _AckInfo
 23152  00595A  20F4               	addwfc	prodh,w,c
 23153  00595C  6EDA               	movwf	fsr2h,c
 23154  00595E  0101               	movlb	1	; () banked
 23155  005960  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23156  005962  5CDE               	subwf	postinc2,w,c
 23157  005964  0101               	movlb	1	; () banked
 23158  005966  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23159  005968  58DE               	subwfb	postinc2,w,c
 23160  00596A  0101               	movlb	1	; () banked
 23161  00596C  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23162  00596E  58DE               	subwfb	postinc2,w,c
 23163  005970  0101               	movlb	1	; () banked
 23164  005972  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23165  005974  58DE               	subwfb	postinc2,w,c
 23166  005976  B0D8               	btfsc	status,0,c
 23167  005978  D050               	goto	l17621
 23168                           
 23169                           ; BSR set to: 1
 23170  00597A  0101               	movlb	1	; () banked
 23171  00597C  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23172  00597E  0D06               	mullw	6
 23173  005980  0E02               	movlw	2
 23174  005982  26F3               	addwf	prodl,f,c
 23175  005984  0E00               	movlw	0
 23176  005986  22F4               	addwfc	prodh,f,c
 23177  005988  0E48               	movlw	low _AckInfo
 23178  00598A  24F3               	addwf	prodl,w,c
 23179  00598C  6ED9               	movwf	fsr2l,c
 23180  00598E  0E02               	movlw	high _AckInfo
 23181  005990  20F4               	addwfc	prodh,w,c
 23182  005992  6EDA               	movwf	fsr2h,c
 23183  005994  CFDE F133          	movff	postinc2,??_MiMAC_ReceivedPacket
 23184  005998  CFDE F134          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 23185  00599C  CFDE F135          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 23186  0059A0  CFDE F136          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 23187  0059A4  0101               	movlb	1	; () banked
 23188  0059A6  1F33               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23189  0059A8  1F34               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23190  0059AA  1F35               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23191  0059AC  1F36               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23192  0059AE  2B33               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23193  0059B0  0E00               	movlw	0
 23194  0059B2  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23195  0059B4  2335               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23196  0059B6  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23197  0059B8  0101               	movlb	1	; () banked
 23198  0059BA  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23199  0059BC  0101               	movlb	1	; () banked
 23200  0059BE  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23201  0059C0  0101               	movlb	1	; () banked
 23202  0059C2  6F37               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 23203  0059C4  0101               	movlb	1	; () banked
 23204  0059C6  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23205  0059C8  0101               	movlb	1	; () banked
 23206  0059CA  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23207  0059CC  0101               	movlb	1	; () banked
 23208  0059CE  6F38               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 23209  0059D0  0101               	movlb	1	; () banked
 23210  0059D2  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23211  0059D4  0101               	movlb	1	; () banked
 23212  0059D6  2135               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23213  0059D8  0101               	movlb	1	; () banked
 23214  0059DA  6F39               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 23215  0059DC  0101               	movlb	1	; () banked
 23216  0059DE  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23217  0059E0  0101               	movlb	1	; () banked
 23218  0059E2  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23219  0059E4  0101               	movlb	1	; () banked
 23220  0059E6  6F3A               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 23221  0059E8  0101               	movlb	1	; () banked
 23222  0059EA  513A               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 23223  0059EC  E10B               	bnz	u19320
 23224  0059EE  0E21               	movlw	33
 23225  0059F0  0101               	movlb	1	; () banked
 23226  0059F2  5D37               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 23227  0059F4  0EA1               	movlw	161
 23228  0059F6  0101               	movlb	1	; () banked
 23229  0059F8  5938               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 23230  0059FA  0E07               	movlw	7
 23231  0059FC  0101               	movlb	1	; () banked
 23232  0059FE  5939               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 23233  005A00  A0D8               	btfss	status,0,c
 23234  005A02  D00B               	goto	l17621
 23235  005A04                     u19320:
 23236                           
 23237                           ; BSR set to: 1
 23238                           ;drv_mrf_miwi_89xa.c: 862: {
 23239                           ;drv_mrf_miwi_89xa.c: 863: AckInfo[i].Valid = 0;
 23240  005A04  0101               	movlb	1	; () banked
 23241  005A06  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23242  005A08  0D06               	mullw	6
 23243  005A0A  0E48               	movlw	low _AckInfo
 23244  005A0C  24F3               	addwf	prodl,w,c
 23245  005A0E  6ED9               	movwf	fsr2l,c
 23246  005A10  0E02               	movlw	high _AckInfo
 23247  005A12  20F4               	addwfc	prodh,w,c
 23248  005A14  6EDA               	movwf	fsr2h,c
 23249  005A16  0E00               	movlw	0
 23250  005A18  6EDF               	movwf	indf2,c
 23251  005A1A                     l17621:
 23252                           
 23253                           ; BSR set to: 1
 23254  005A1A  0101               	movlb	1	; () banked
 23255  005A1C  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23256  005A1E  D777               	goto	l17607
 23257  005A20                     l17625:
 23258                           
 23259                           ; BSR set to: 1
 23260                           ;drv_mrf_miwi_89xa.c: 864: }
 23261                           ;drv_mrf_miwi_89xa.c: 865: }
 23262                           ;drv_mrf_miwi_89xa.c: 868: if( ReceivedBankIndex != 0xFF )
 23263  005A20  0101               	movlb	1	; () banked
 23264  005A22  29C5               	incf	_ReceivedBankIndex& (0+255),w,b
 23265  005A24  B4D8               	btfsc	status,2,c
 23266  005A26  D002               	goto	l17631
 23267                           
 23268                           ; BSR set to: 1
 23269                           ;drv_mrf_miwi_89xa.c: 869: {
 23270                           ;drv_mrf_miwi_89xa.c: 870: return 0;
 23271  005A28  0E00               	movlw	0
 23272                           
 23273                           ; BSR set to: 1
 23274  005A2A  0012               	return	
 23275  005A2C                     l17631:
 23276                           
 23277                           ; BSR set to: 1
 23278                           ;drv_mrf_miwi_89xa.c: 871: }
 23279                           ;drv_mrf_miwi_89xa.c: 873: for(i = 0; i < 2; i++)
 23280  005A2C  0E00               	movlw	0
 23281  005A2E  0101               	movlb	1	; () banked
 23282  005A30  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 23283  005A32                     l17633:
 23284                           
 23285                           ; BSR set to: 1
 23286  005A32  0E01               	movlw	1
 23287  005A34  0101               	movlb	1	; () banked
 23288  005A36  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23289  005A38  D001               	goto	l17637
 23290  005A3A  D1C0               	goto	l17735
 23291  005A3C                     l17637:
 23292                           
 23293                           ; BSR set to: 1
 23294                           ;drv_mrf_miwi_89xa.c: 874: {
 23295                           ;drv_mrf_miwi_89xa.c: 875: if( RxPacket[i].flags.bits.Valid )
 23296  005A3C  0101               	movlb	1	; () banked
 23297  005A3E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23298  005A40  0D42               	mullw	66
 23299  005A42  0E00               	movlw	low _RxPacket
 23300  005A44  24F3               	addwf	prodl,w,c
 23301  005A46  6ED9               	movwf	fsr2l,c
 23302  005A48  0E03               	movlw	high _RxPacket
 23303  005A4A  20F4               	addwfc	prodh,w,c
 23304  005A4C  6EDA               	movwf	fsr2h,c
 23305  005A4E  0103               	movlb	3	; () banked
 23306  005A50  A0DF               	btfss	indf2,0,c
 23307  005A52  D1B1               	goto	l17731
 23308                           
 23309                           ; BSR set to: 3
 23310                           ;drv_mrf_miwi_89xa.c: 876: {
 23311                           ;drv_mrf_miwi_89xa.c: 877: uint8_t PayloadIndex;
 23312                           ;drv_mrf_miwi_89xa.c: 878: uint8_t j;
 23313                           ;drv_mrf_miwi_89xa.c: 880: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 23314  005A54  0101               	movlb	1	; () banked
 23315  005A56  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23316  005A58  0D42               	mullw	66
 23317  005A5A  0E01               	movlw	1
 23318  005A5C  26F3               	addwf	prodl,f,c
 23319  005A5E  0E00               	movlw	0
 23320  005A60  22F4               	addwfc	prodh,f,c
 23321  005A62  0E00               	movlw	low _RxPacket
 23322  005A64  24F3               	addwf	prodl,w,c
 23323  005A66  6ED9               	movwf	fsr2l,c
 23324  005A68  0E03               	movlw	high _RxPacket
 23325  005A6A  20F4               	addwfc	prodh,w,c
 23326  005A6C  6EDA               	movwf	fsr2h,c
 23327  005A6E  50DF               	movf	indf2,w,c
 23328  005A70  0101               	movlb	1	; () banked
 23329  005A72  6F9A               	movwf	_MACRxPacket& (0+255),b
 23330                           
 23331                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 23332  005A74  0101               	movlb	1	; () banked
 23333  005A76  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23334  005A78  0D42               	mullw	66
 23335  005A7A  0E41               	movlw	65
 23336  005A7C  26F3               	addwf	prodl,f,c
 23337  005A7E  0E00               	movlw	0
 23338  005A80  22F4               	addwfc	prodh,f,c
 23339  005A82  0E00               	movlw	low _RxPacket
 23340  005A84  24F3               	addwf	prodl,w,c
 23341  005A86  6ED9               	movwf	fsr2l,c
 23342  005A88  0E03               	movlw	high _RxPacket
 23343  005A8A  20F4               	addwfc	prodh,w,c
 23344  005A8C  6EDA               	movwf	fsr2h,c
 23345  005A8E  50DF               	movf	indf2,w,c
 23346  005A90  0101               	movlb	1	; () banked
 23347  005A92  6F9F               	movwf	(_MACRxPacket+5)& (0+255),b
 23348                           
 23349                           ; BSR set to: 1
 23350                           ;drv_mrf_miwi_89xa.c: 882: PayloadIndex = 2;
 23351  005A94  0E02               	movlw	2
 23352  005A96  0101               	movlb	1	; () banked
 23353  005A98  6F45               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;drv_mrf_miwi_89xa.c: 884: if( MACRxPacket.flags.bits.destPrsnt )
 23357  005A9A  0101               	movlb	1	; () banked
 23358  005A9C  AD9A               	btfss	_MACRxPacket& (0+255),6,b
 23359  005A9E  D007               	goto	l17647
 23360                           
 23361                           ; BSR set to: 1
 23362                           ;drv_mrf_miwi_89xa.c: 885: {
 23363                           ;drv_mrf_miwi_89xa.c: 886: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 23364  005AA0  0101               	movlb	1	; () banked
 23365  005AA2  31AA               	rrcf	_MACInitParams& (0+255),w,b
 23366  005AA4  32E8               	rrcf	wreg,f,c
 23367  005AA6  32E8               	rrcf	wreg,f,c
 23368  005AA8  0B0F               	andlw	15
 23369  005AAA  0101               	movlb	1	; () banked
 23370  005AAC  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23371  005AAE                     l17647:
 23372                           
 23373                           ; BSR set to: 1
 23374                           ;drv_mrf_miwi_89xa.c: 887: }
 23375                           ;drv_mrf_miwi_89xa.c: 889: if( MACRxPacket.flags.bits.sourcePrsnt )
 23376  005AAE  0101               	movlb	1	; () banked
 23377  005AB0  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 23378  005AB2  D028               	goto	l17653
 23379                           
 23380                           ; BSR set to: 1
 23381                           ;drv_mrf_miwi_89xa.c: 890: {
 23382                           ;drv_mrf_miwi_89xa.c: 891: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 23383  005AB4  0101               	movlb	1	; () banked
 23384  005AB6  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23385  005AB8  0D01               	mullw	1
 23386  005ABA  0E01               	movlw	1
 23387  005ABC  26F3               	addwf	prodl,f,c
 23388  005ABE  0E00               	movlw	0
 23389  005AC0  22F4               	addwfc	prodh,f,c
 23390  005AC2  0E00               	movlw	low _RxPacket
 23391  005AC4  0101               	movlb	1	; () banked
 23392  005AC6  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23393  005AC8  0E03               	movlw	high _RxPacket
 23394  005ACA  0101               	movlb	1	; () banked
 23395  005ACC  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23396  005ACE  50F3               	movf	prodl,w,c
 23397  005AD0  0101               	movlb	1	; () banked
 23398  005AD2  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23399  005AD4  50F4               	movf	prodh,w,c
 23400  005AD6  0101               	movlb	1	; () banked
 23401  005AD8  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23402  005ADA  0101               	movlb	1	; () banked
 23403  005ADC  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23404  005ADE  0D42               	mullw	66
 23405  005AE0  50F3               	movf	prodl,w,c
 23406  005AE2  0101               	movlb	1	; () banked
 23407  005AE4  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23408  005AE6  0101               	movlb	1	; () banked
 23409  005AE8  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 23410  005AEA  50F4               	movf	prodh,w,c
 23411  005AEC  0101               	movlb	1	; () banked
 23412  005AEE  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23413  005AF0  0101               	movlb	1	; () banked
 23414  005AF2  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 23415                           
 23416                           ; BSR set to: 1
 23417                           ;drv_mrf_miwi_89xa.c: 892: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 23418  005AF4  0101               	movlb	1	; () banked
 23419  005AF6  31AA               	rrcf	_MACInitParams& (0+255),w,b
 23420  005AF8  32E8               	rrcf	wreg,f,c
 23421  005AFA  32E8               	rrcf	wreg,f,c
 23422  005AFC  0B0F               	andlw	15
 23423  005AFE  0101               	movlb	1	; () banked
 23424  005B00  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23425                           
 23426                           ;drv_mrf_miwi_89xa.c: 893: }
 23427  005B02  D006               	goto	l17655
 23428  005B04                     l17653:
 23429                           
 23430                           ; BSR set to: 1
 23431                           ;drv_mrf_miwi_89xa.c: 894: else
 23432                           ;drv_mrf_miwi_89xa.c: 895: {
 23433                           ;drv_mrf_miwi_89xa.c: 896: MACRxPacket.SourceAddress = (0);
 23434  005B04  0E00               	movlw	0
 23435  005B06  0101               	movlb	1	; () banked
 23436  005B08  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 23437  005B0A  0E00               	movlw	0
 23438  005B0C  0101               	movlb	1	; () banked
 23439  005B0E  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 23440  005B10                     l17655:
 23441                           
 23442                           ; BSR set to: 1
 23443                           ;drv_mrf_miwi_89xa.c: 897: }
 23444                           ;drv_mrf_miwi_89xa.c: 901: if( MACRxPacket.flags.bits.secEn )
 23445  005B10  0101               	movlb	1	; () banked
 23446  005B12  A79A               	btfss	_MACRxPacket& (0+255),3,b
 23447  005B14  D126               	goto	l17719
 23448                           
 23449                           ; BSR set to: 1
 23450                           ;drv_mrf_miwi_89xa.c: 902: {
 23451                           ;drv_mrf_miwi_89xa.c: 904: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 23452  005B16  0101               	movlb	1	; () banked
 23453  005B18  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23454  005B1A  0D42               	mullw	66
 23455  005B1C  0101               	movlb	1	; () banked
 23456  005B1E  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23457  005B20  0101               	movlb	1	; () banked
 23458  005B22  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23459  005B24  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23460  005B26  0E05               	movlw	5
 23461  005B28  0101               	movlb	1	; () banked
 23462  005B2A  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23463  005B2C  0E00               	movlw	0
 23464  005B2E  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23465  005B30  0E00               	movlw	low _RxPacket
 23466  005B32  0101               	movlb	1	; () banked
 23467  005B34  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 23468  005B36  0E03               	movlw	high _RxPacket
 23469  005B38  0101               	movlb	1	; () banked
 23470  005B3A  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 23471  005B3C  0101               	movlb	1	; () banked
 23472  005B3E  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23473  005B40  0101               	movlb	1	; () banked
 23474  005B42  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23475  005B44  0101               	movlb	1	; () banked
 23476  005B46  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23477  005B48  0101               	movlb	1	; () banked
 23478  005B4A  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23479  005B4C  50F3               	movf	prodl,w,c
 23480  005B4E  0101               	movlb	1	; () banked
 23481  005B50  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23482  005B52  6ED9               	movwf	fsr2l,c
 23483  005B54  50F4               	movf	prodh,w,c
 23484  005B56  0101               	movlb	1	; () banked
 23485  005B58  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23486  005B5A  6EDA               	movwf	fsr2h,c
 23487  005B5C  50DF               	movf	indf2,w,c
 23488  005B5E  B4D8               	btfsc	status,2,c
 23489  005B60  D00D               	goto	l356
 23490                           
 23491                           ; BSR set to: 1
 23492                           ;drv_mrf_miwi_89xa.c: 905: {
 23493                           ;drv_mrf_miwi_89xa.c: 906: RxPacket[i].flags.Val = 0;
 23494  005B62  0101               	movlb	1	; () banked
 23495  005B64  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23496  005B66  0D42               	mullw	66
 23497  005B68  0E00               	movlw	low _RxPacket
 23498  005B6A  24F3               	addwf	prodl,w,c
 23499  005B6C  6ED9               	movwf	fsr2l,c
 23500  005B6E  0E03               	movlw	high _RxPacket
 23501  005B70  20F4               	addwfc	prodh,w,c
 23502  005B72  6EDA               	movwf	fsr2h,c
 23503  005B74  0E00               	movlw	0
 23504  005B76  6EDF               	movwf	indf2,c
 23505                           
 23506                           ; BSR set to: 1
 23507                           ;drv_mrf_miwi_89xa.c: 907: return 0;
 23508  005B78  0E00               	movlw	0
 23509                           
 23510                           ; BSR set to: 1
 23511  005B7A  0012               	return	
 23512  005B7C                     l356:
 23513                           
 23514                           ; BSR set to: 1
 23515                           ;drv_mrf_miwi_89xa.c: 908: }
 23516                           ;drv_mrf_miwi_89xa.c: 911: if( MACRxPacket.flags.bits.sourcePrsnt )
 23517  005B7C  0101               	movlb	1	; () banked
 23518  005B7E  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 23519  005B80  D0A9               	goto	l17707
 23520                           
 23521                           ; BSR set to: 1
 23522                           ;drv_mrf_miwi_89xa.c: 912: {
 23523                           ;drv_mrf_miwi_89xa.c: 913: for(j = 0; j < 64; j++)
 23524  005B82  0E00               	movlw	0
 23525  005B84  0101               	movlb	1	; () banked
 23526  005B86  6F44               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 23527  005B88                     l17667:
 23528                           
 23529                           ; BSR set to: 1
 23530  005B88  0E3F               	movlw	63
 23531  005B8A  0101               	movlb	1	; () banked
 23532  005B8C  6544               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 23533  005B8E  D001               	goto	l17671
 23534  005B90  D02A               	goto	l17681
 23535  005B92                     l17671:
 23536                           
 23537                           ; BSR set to: 1
 23538                           ;drv_mrf_miwi_89xa.c: 914: {
 23539                           ;drv_mrf_miwi_89xa.c: 915: if( (ConnectionTable[j].status.bits.isValid) &&
 23540                           ;drv_mrf_miwi_89xa.c: 916: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 23541  005B92  0101               	movlb	1	; () banked
 23542  005B94  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23543  005B96  0D09               	mullw	9
 23544  005B98  0E08               	movlw	8
 23545  005B9A  26F3               	addwf	prodl,f,c
 23546  005B9C  0E00               	movlw	0
 23547  005B9E  22F4               	addwfc	prodh,f,c
 23548  005BA0  0E00               	movlw	low _ConnectionTable
 23549  005BA2  24F3               	addwf	prodl,w,c
 23550  005BA4  6ED9               	movwf	fsr2l,c
 23551  005BA6  0E06               	movlw	high _ConnectionTable
 23552  005BA8  20F4               	addwfc	prodh,w,c
 23553  005BAA  6EDA               	movwf	fsr2h,c
 23554  005BAC  AEDF               	btfss	indf2,7,c
 23555  005BAE  D018               	goto	l17677
 23556                           
 23557                           ; BSR set to: 1
 23558  005BB0  0101               	movlb	1	; () banked
 23559  005BB2  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23560  005BB4  0D09               	mullw	9
 23561  005BB6  0E04               	movlw	4
 23562  005BB8  26F3               	addwf	prodl,f,c
 23563  005BBA  0E00               	movlw	0
 23564  005BBC  22F4               	addwfc	prodh,f,c
 23565  005BBE  0E00               	movlw	low _ConnectionTable
 23566  005BC0  24F3               	addwf	prodl,w,c
 23567  005BC2  0101               	movlb	1	; () banked
 23568  005BC4  6F00               	movwf	isSameAddress@Address1& (0+255),b
 23569  005BC6  0E06               	movlw	high _ConnectionTable
 23570  005BC8  20F4               	addwfc	prodh,w,c
 23571  005BCA  0101               	movlb	1	; () banked
 23572  005BCC  6F01               	movwf	(isSameAddress@Address1+1)& (0+255),b
 23573  005BCE  C19B  F102         	movff	_MACRxPacket+1,isSameAddress@Address2
 23574  005BD2  C19C  F103         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 23575  005BD6  ECDD  F05A         	call	_isSameAddress	;wreg free
 23576  005BDA  0900               	iorlw	0
 23577  005BDC  A4D8               	btfss	status,2,c
 23578  005BDE  D003               	goto	l17681
 23579  005BE0                     l17677:
 23580  005BE0  0101               	movlb	1	; () banked
 23581  005BE2  2B44               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 23582  005BE4  D7D1               	goto	l17667
 23583  005BE6                     l17681:
 23584                           
 23585                           ;drv_mrf_miwi_89xa.c: 919: }
 23586                           ;drv_mrf_miwi_89xa.c: 920: }
 23587                           ;drv_mrf_miwi_89xa.c: 921: if( j < 64 )
 23588  005BE6  0E40               	movlw	64
 23589  005BE8  0101               	movlb	1	; () banked
 23590  005BEA  6144               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 23591  005BEC  D073               	goto	l17707
 23592                           
 23593                           ; BSR set to: 1
 23594                           ;drv_mrf_miwi_89xa.c: 922: {
 23595                           ;drv_mrf_miwi_89xa.c: 923: API_UINT32_UNION FrameCounter;
 23596                           ;drv_mrf_miwi_89xa.c: 924: uint8_t k;
 23597                           ;drv_mrf_miwi_89xa.c: 926: for(k = 0; k < 4; k++)
 23598  005BEE  0E00               	movlw	0
 23599  005BF0  0101               	movlb	1	; () banked
 23600  005BF2  6F43               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 23601  005BF4                     l17685:
 23602                           
 23603                           ; BSR set to: 1
 23604  005BF4  0E03               	movlw	3
 23605  005BF6  0101               	movlb	1	; () banked
 23606  005BF8  6543               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 23607  005BFA  D001               	goto	l17689
 23608  005BFC  D036               	goto	l17695
 23609  005BFE                     l17689:
 23610                           
 23611                           ; BSR set to: 1
 23612                           ;drv_mrf_miwi_89xa.c: 927: {
 23613                           ;drv_mrf_miwi_89xa.c: 928: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 23614  005BFE  0101               	movlb	1	; () banked
 23615  005C00  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23616  005C02  0D42               	mullw	66
 23617  005C04  0101               	movlb	1	; () banked
 23618  005C06  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 23619  005C08  C145  F133         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 23620  005C0C  0101               	movlb	1	; () banked
 23621  005C0E  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23622  005C10  0101               	movlb	1	; () banked
 23623  005C12  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23624  005C14  0E00               	movlw	0
 23625  005C16  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23626  005C18  0E01               	movlw	1
 23627  005C1A  0101               	movlb	1	; () banked
 23628  005C1C  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23629  005C1E  0E00               	movlw	0
 23630  005C20  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23631  005C22  0E00               	movlw	low _RxPacket
 23632  005C24  0101               	movlb	1	; () banked
 23633  005C26  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 23634  005C28  0E03               	movlw	high _RxPacket
 23635  005C2A  0101               	movlb	1	; () banked
 23636  005C2C  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 23637  005C2E  0101               	movlb	1	; () banked
 23638  005C30  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23639  005C32  0101               	movlb	1	; () banked
 23640  005C34  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23641  005C36  0101               	movlb	1	; () banked
 23642  005C38  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23643  005C3A  0101               	movlb	1	; () banked
 23644  005C3C  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23645  005C3E  50F3               	movf	prodl,w,c
 23646  005C40  0101               	movlb	1	; () banked
 23647  005C42  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23648  005C44  6ED9               	movwf	fsr2l,c
 23649  005C46  50F4               	movf	prodh,w,c
 23650  005C48  0101               	movlb	1	; () banked
 23651  005C4A  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23652  005C4C  6EDA               	movwf	fsr2h,c
 23653  005C4E  0101               	movlb	1	; () banked
 23654  005C50  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 23655  005C52  0D01               	mullw	1
 23656  005C54  0E3F               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 23657  005C56  24F3               	addwf	prodl,w,c
 23658  005C58  6EE1               	movwf	fsr1l,c
 23659  005C5A  0E01               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 23660  005C5C  20F4               	addwfc	prodh,w,c
 23661  005C5E  6EE2               	movwf	fsr1h,c
 23662  005C60  CFDF FFE7          	movff	indf2,indf1
 23663                           
 23664                           ; BSR set to: 1
 23665  005C64  0101               	movlb	1	; () banked
 23666  005C66  2B43               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 23667  005C68  D7C5               	goto	l17685
 23668  005C6A                     l17695:
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;drv_mrf_miwi_89xa.c: 929: }
 23672                           ;drv_mrf_miwi_89xa.c: 931: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 23673  005C6A  0101               	movlb	1	; () banked
 23674  005C6C  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23675  005C6E  0D04               	mullw	4
 23676  005C70  0E00               	movlw	low _IncomingFrameCounter
 23677  005C72  24F3               	addwf	prodl,w,c
 23678  005C74  6ED9               	movwf	fsr2l,c
 23679  005C76  0E05               	movlw	high _IncomingFrameCounter
 23680  005C78  20F4               	addwfc	prodh,w,c
 23681  005C7A  6EDA               	movwf	fsr2h,c
 23682  005C7C  50DE               	movf	postinc2,w,c
 23683  005C7E  0101               	movlb	1	; () banked
 23684  005C80  5D3F               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 23685  005C82  50DE               	movf	postinc2,w,c
 23686  005C84  0101               	movlb	1	; () banked
 23687  005C86  5940               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 23688  005C88  50DE               	movf	postinc2,w,c
 23689  005C8A  0101               	movlb	1	; () banked
 23690  005C8C  5941               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 23691  005C8E  50DE               	movf	postinc2,w,c
 23692  005C90  0101               	movlb	1	; () banked
 23693  005C92  5942               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 23694  005C94  B0D8               	btfsc	status,0,c
 23695  005C96  D00D               	goto	l17705
 23696                           
 23697                           ; BSR set to: 1
 23698                           ;drv_mrf_miwi_89xa.c: 932: {
 23699                           ;drv_mrf_miwi_89xa.c: 933: RxPacket[i].flags.Val = 0;
 23700  005C98  0101               	movlb	1	; () banked
 23701  005C9A  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23702  005C9C  0D42               	mullw	66
 23703  005C9E  0E00               	movlw	low _RxPacket
 23704  005CA0  24F3               	addwf	prodl,w,c
 23705  005CA2  6ED9               	movwf	fsr2l,c
 23706  005CA4  0E03               	movlw	high _RxPacket
 23707  005CA6  20F4               	addwfc	prodh,w,c
 23708  005CA8  6EDA               	movwf	fsr2h,c
 23709  005CAA  0E00               	movlw	0
 23710  005CAC  6EDF               	movwf	indf2,c
 23711                           
 23712                           ; BSR set to: 1
 23713                           ;drv_mrf_miwi_89xa.c: 934: return 0;
 23714  005CAE  0E00               	movlw	0
 23715                           
 23716                           ; BSR set to: 1
 23717  005CB0  0012               	return	
 23718  005CB2                     l17705:
 23719                           
 23720                           ; BSR set to: 1
 23721                           ;drv_mrf_miwi_89xa.c: 936: else
 23722                           ;drv_mrf_miwi_89xa.c: 937: {
 23723                           ;drv_mrf_miwi_89xa.c: 938: IncomingFrameCounter[j].Val = FrameCounter.Val;
 23724  005CB2  0101               	movlb	1	; () banked
 23725  005CB4  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23726  005CB6  0D04               	mullw	4
 23727  005CB8  0E00               	movlw	low _IncomingFrameCounter
 23728  005CBA  24F3               	addwf	prodl,w,c
 23729  005CBC  6ED9               	movwf	fsr2l,c
 23730  005CBE  0E05               	movlw	high _IncomingFrameCounter
 23731  005CC0  20F4               	addwfc	prodh,w,c
 23732  005CC2  6EDA               	movwf	fsr2h,c
 23733  005CC4  C13F  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 23734  005CC8  C140  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 23735  005CCC  C141  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 23736  005CD0  C142  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 23737  005CD4                     l17707:
 23738                           
 23739                           ; BSR set to: 1
 23740                           ;drv_mrf_miwi_89xa.c: 939: }
 23741                           ;drv_mrf_miwi_89xa.c: 940: }
 23742                           ;drv_mrf_miwi_89xa.c: 941: }
 23743                           ;drv_mrf_miwi_89xa.c: 944: PayloadIndex += 5;
 23744  005CD4  0E05               	movlw	5
 23745  005CD6  0101               	movlb	1	; () banked
 23746  005CD8  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23747                           
 23748                           ; BSR set to: 1
 23749                           ;drv_mrf_miwi_89xa.c: 966: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 23750  005CDA  0101               	movlb	1	; () banked
 23751  005CDC  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23752  005CDE  0D42               	mullw	66
 23753  005CE0  0E01               	movlw	1
 23754  005CE2  26F3               	addwf	prodl,f,c
 23755  005CE4  0E00               	movlw	0
 23756  005CE6  22F4               	addwfc	prodh,f,c
 23757  005CE8  0E00               	movlw	low _RxPacket
 23758  005CEA  24F3               	addwf	prodl,w,c
 23759  005CEC  0101               	movlb	1	; () banked
 23760  005CEE  6F24               	movwf	CCM_Dec@text& (0+255),b
 23761  005CF0  0E03               	movlw	high _RxPacket
 23762  005CF2  20F4               	addwfc	prodh,w,c
 23763  005CF4  0101               	movlb	1	; () banked
 23764  005CF6  6F25               	movwf	(CCM_Dec@text+1)& (0+255),b
 23765  005CF8  C145  F126         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 23766  005CFC  0101               	movlb	1	; () banked
 23767  005CFE  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23768  005D00  0D42               	mullw	66
 23769  005D02  0E41               	movlw	65
 23770  005D04  26F3               	addwf	prodl,f,c
 23771  005D06  0E00               	movlw	0
 23772  005D08  22F4               	addwfc	prodh,f,c
 23773  005D0A  0E00               	movlw	low _RxPacket
 23774  005D0C  24F3               	addwf	prodl,w,c
 23775  005D0E  6ED9               	movwf	fsr2l,c
 23776  005D10  0E03               	movlw	high _RxPacket
 23777  005D12  20F4               	addwfc	prodh,w,c
 23778  005D14  6EDA               	movwf	fsr2h,c
 23779  005D16  50DF               	movf	indf2,w,c
 23780  005D18  0101               	movlb	1	; () banked
 23781  005D1A  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23782  005D1C  0101               	movlb	1	; () banked
 23783  005D1E  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23784  005D20  0800               	sublw	0
 23785  005D22  0101               	movlb	1	; () banked
 23786  005D24  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23787  005D26  0101               	movlb	1	; () banked
 23788  005D28  6F27               	movwf	CCM_Dec@payloadLen& (0+255),b
 23789  005D2A  0EF1               	movlw	low _key
 23790  005D2C  0101               	movlb	1	; () banked
 23791  005D2E  6F28               	movwf	CCM_Dec@key& (0+255),b
 23792  005D30  0E02               	movlw	high _key
 23793  005D32  0101               	movlb	1	; () banked
 23794  005D34  6F29               	movwf	(CCM_Dec@key+1)& (0+255),b
 23795  005D36  EC3A  F03F         	call	_CCM_Dec	;wreg free
 23796  005D3A  0900               	iorlw	0
 23797  005D3C  A4D8               	btfss	status,2,c
 23798  005D3E  D00D               	goto	l17717
 23799                           
 23800                           ;drv_mrf_miwi_89xa.c: 967: {
 23801                           ;drv_mrf_miwi_89xa.c: 968: RxPacket[i].flags.Val = 0;
 23802  005D40  0101               	movlb	1	; () banked
 23803  005D42  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23804  005D44  0D42               	mullw	66
 23805  005D46  0E00               	movlw	low _RxPacket
 23806  005D48  24F3               	addwf	prodl,w,c
 23807  005D4A  6ED9               	movwf	fsr2l,c
 23808  005D4C  0E03               	movlw	high _RxPacket
 23809  005D4E  20F4               	addwfc	prodh,w,c
 23810  005D50  6EDA               	movwf	fsr2h,c
 23811  005D52  0E00               	movlw	0
 23812  005D54  6EDF               	movwf	indf2,c
 23813                           
 23814                           ; BSR set to: 1
 23815                           ;drv_mrf_miwi_89xa.c: 969: return 0;
 23816  005D56  0E00               	movlw	0
 23817                           
 23818                           ; BSR set to: 1
 23819  005D58  0012               	return	
 23820  005D5A                     l17717:
 23821                           
 23822                           ;drv_mrf_miwi_89xa.c: 970: }
 23823                           ;drv_mrf_miwi_89xa.c: 987: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 23824  005D5A  0101               	movlb	1	; () banked
 23825  005D5C  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23826  005D5E  0F02               	addlw	2
 23827  005D60  D002               	goto	L9
 23828  005D62                     l17719:
 23829                           
 23830                           ; BSR set to: 1
 23831                           ;drv_mrf_miwi_89xa.c: 989: else
 23832                           ;drv_mrf_miwi_89xa.c: 990: {
 23833                           ;drv_mrf_miwi_89xa.c: 991: MACRxPacket.PayloadLen -= PayloadIndex;
 23834  005D62  0101               	movlb	1	; () banked
 23835  005D64  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23836  005D66                     L9:
 23837  005D66  0101               	movlb	1	; () banked
 23838  005D68  5F9F               	subwf	(_MACRxPacket+5)& (0+255),f,b
 23839                           
 23840                           ; BSR set to: 1
 23841                           ;drv_mrf_miwi_89xa.c: 992: }
 23842                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 23843                           
 23844                           ; BSR set to: 1
 23845  005D6A  0101               	movlb	1	; () banked
 23846  005D6C  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23847  005D6E  0D01               	mullw	1
 23848  005D70  0E01               	movlw	1
 23849  005D72  26F3               	addwf	prodl,f,c
 23850  005D74  0E00               	movlw	0
 23851  005D76  22F4               	addwfc	prodh,f,c
 23852  005D78  0E00               	movlw	low _RxPacket
 23853  005D7A  0101               	movlb	1	; () banked
 23854  005D7C  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23855  005D7E  0E03               	movlw	high _RxPacket
 23856  005D80  0101               	movlb	1	; () banked
 23857  005D82  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23858  005D84  50F3               	movf	prodl,w,c
 23859  005D86  0101               	movlb	1	; () banked
 23860  005D88  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23861  005D8A  50F4               	movf	prodh,w,c
 23862  005D8C  0101               	movlb	1	; () banked
 23863  005D8E  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23864  005D90  0101               	movlb	1	; () banked
 23865  005D92  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23866  005D94  0D42               	mullw	66
 23867  005D96  50F3               	movf	prodl,w,c
 23868  005D98  0101               	movlb	1	; () banked
 23869  005D9A  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23870  005D9C  0101               	movlb	1	; () banked
 23871  005D9E  6F9D               	movwf	(_MACRxPacket+3)& (0+255),b
 23872  005DA0  50F4               	movf	prodh,w,c
 23873  005DA2  0101               	movlb	1	; () banked
 23874  005DA4  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23875  005DA6  0101               	movlb	1	; () banked
 23876  005DA8  6F9E               	movwf	(_MACRxPacket+4)& (0+255),b
 23877                           
 23878                           ; BSR set to: 1
 23879                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.RSSIValue = RSSILock;
 23880  005DAA  C1C4  F1A0         	movff	_RSSILock,_MACRxPacket+6
 23881                           
 23882                           ; BSR set to: 1
 23883                           ;drv_mrf_miwi_89xa.c: 1005: ReceivedBankIndex = i;
 23884  005DAE  C146  F1C5         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 23885                           
 23886                           ; BSR set to: 1
 23887                           ;drv_mrf_miwi_89xa.c: 1006: return 1;
 23888  005DB2  0E01               	movlw	1
 23889                           
 23890                           ; BSR set to: 1
 23891  005DB4  0012               	return	
 23892  005DB6                     l17731:
 23893  005DB6  0101               	movlb	1	; () banked
 23894  005DB8  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23895  005DBA  D63B               	goto	l17633
 23896  005DBC                     l17735:
 23897                           
 23898                           ; BSR set to: 1
 23899                           ;drv_mrf_miwi_89xa.c: 1007: }
 23900                           ;drv_mrf_miwi_89xa.c: 1008: }
 23901                           ;drv_mrf_miwi_89xa.c: 1010: return 0;
 23902  005DBC  0E00               	movlw	0
 23903  005DBE  0012               	return	
 23904  005DC0                     __end_of_MiMAC_ReceivedPacket:
 23905                           	opt stack 0
 23906                           tblptru	equ	0xFF8
 23907                           tblptrh	equ	0xFF7
 23908                           tblptrl	equ	0xFF6
 23909                           tablat	equ	0xFF5
 23910                           prodh	equ	0xFF4
 23911                           prodl	equ	0xFF3
 23912                           intcon	equ	0xFF2
 23913                           intcon2	equ	0xFF1
 23914                           intcon3	equ	0xFF0
 23915                           indf0	equ	0xFEF
 23916                           postinc0	equ	0xFEE
 23917                           plusw0	equ	0xFEB
 23918                           fsr0h	equ	0xFEA
 23919                           fsr0l	equ	0xFE9
 23920                           wreg	equ	0xFE8
 23921                           indf1	equ	0xFE7
 23922                           postinc1	equ	0xFE6
 23923                           postdec1	equ	0xFE5
 23924                           fsr1h	equ	0xFE2
 23925                           fsr1l	equ	0xFE1
 23926                           indf2	equ	0xFDF
 23927                           postinc2	equ	0xFDE
 23928                           postdec2	equ	0xFDD
 23929                           plusw2	equ	0xFDB
 23930                           fsr2h	equ	0xFDA
 23931                           fsr2l	equ	0xFD9
 23932                           status	equ	0xFD8
 23933                           
 23934 ;; *************** function _isSameAddress *****************
 23935 ;; Defined at:
 23936 ;;		line 3443 in file "src/miwi/miwi_mesh.c"
 23937 ;; Parameters:    Size  Location     Type
 23938 ;;  Address1        2    0[BANK1 ] PTR unsigned char 
 23939 ;;		 -> ConnectionTable(576), 
 23940 ;;  Address2        2    2[BANK1 ] PTR unsigned char 
 23941 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 23942 ;; Auto vars:     Size  Location     Type
 23943 ;;  i               1    6[BANK1 ] unsigned char 
 23944 ;; Return value:  Size  Location     Type
 23945 ;;                  1    wreg      unsigned char 
 23946 ;; Registers used:
 23947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23948 ;; Tracked objects:
 23949 ;;		On entry : 0/0
 23950 ;;		On exit  : 0/0
 23951 ;;		Unchanged: 0/0
 23952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23953 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23954 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23955 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23956 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23957 ;;Total ram usage:        7 bytes
 23958 ;; Hardware stack levels used:    1
 23959 ;; Hardware stack levels required when called:   16
 23960 ;; This function calls:
 23961 ;;		Nothing
 23962 ;; This function is called by:
 23963 ;;		_MiMAC_ReceivedPacket
 23964 ;; This function uses a non-reentrant model
 23965 ;;
 23966                           
 23967                           	psect	text52
 23968  00B5BA                     __ptext52:
 23969                           	opt stack 0
 23970  00B5BA                     _isSameAddress:
 23971                           	opt stack 12
 23972                           
 23973                           ;miwi_mesh.c: 3445: uint8_t i;
 23974                           ;miwi_mesh.c: 3447: for(i = 0; i < 4; i++)
 23975                           
 23976                           ; BSR set to: 1
 23977                           ;incstack = 0
 23978  00B5BA  0E00               	movlw	0
 23979  00B5BC  0101               	movlb	1	; () banked
 23980  00B5BE  6F06               	movwf	isSameAddress@i& (0+255),b
 23981  00B5C0                     l17191:
 23982                           
 23983                           ; BSR set to: 1
 23984  00B5C0  0E03               	movlw	3
 23985  00B5C2  0101               	movlb	1	; () banked
 23986  00B5C4  6506               	cpfsgt	isSameAddress@i& (0+255),b
 23987  00B5C6  D001               	goto	l17195
 23988  00B5C8  D01F               	goto	l17205
 23989  00B5CA                     l17195:
 23990                           
 23991                           ; BSR set to: 1
 23992                           ;miwi_mesh.c: 3448: {
 23993                           ;miwi_mesh.c: 3449: if( Address1[i] != Address2[i] )
 23994  00B5CA  0101               	movlb	1	; () banked
 23995  00B5CC  5106               	movf	isSameAddress@i& (0+255),w,b
 23996  00B5CE  0D01               	mullw	1
 23997  00B5D0  50F3               	movf	prodl,w,c
 23998  00B5D2  0101               	movlb	1	; () banked
 23999  00B5D4  2502               	addwf	isSameAddress@Address2& (0+255),w,b
 24000  00B5D6  6ED9               	movwf	fsr2l,c
 24001  00B5D8  50F4               	movf	prodh,w,c
 24002  00B5DA  0101               	movlb	1	; () banked
 24003  00B5DC  2103               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 24004  00B5DE  6EDA               	movwf	fsr2h,c
 24005  00B5E0  0101               	movlb	1	; () banked
 24006  00B5E2  5106               	movf	isSameAddress@i& (0+255),w,b
 24007  00B5E4  0D01               	mullw	1
 24008  00B5E6  50F3               	movf	prodl,w,c
 24009  00B5E8  0101               	movlb	1	; () banked
 24010  00B5EA  2500               	addwf	isSameAddress@Address1& (0+255),w,b
 24011  00B5EC  6EE1               	movwf	fsr1l,c
 24012  00B5EE  50F4               	movf	prodh,w,c
 24013  00B5F0  0101               	movlb	1	; () banked
 24014  00B5F2  2101               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 24015  00B5F4  6EE2               	movwf	fsr1h,c
 24016  00B5F6  50DE               	movf	postinc2,w,c
 24017  00B5F8  18E6               	xorwf	postinc1,w,c
 24018  00B5FA  B4D8               	btfsc	status,2,c
 24019  00B5FC  D002               	goto	l17201
 24020                           
 24021                           ; BSR set to: 1
 24022                           ;miwi_mesh.c: 3450: {
 24023                           ;miwi_mesh.c: 3451: return 0;
 24024  00B5FE  0E00               	movlw	0
 24025                           
 24026                           ; BSR set to: 1
 24027  00B600  0012               	return	
 24028  00B602                     l17201:
 24029                           
 24030                           ; BSR set to: 1
 24031  00B602  0101               	movlb	1	; () banked
 24032  00B604  2B06               	incf	isSameAddress@i& (0+255),f,b
 24033  00B606  D7DC               	goto	l17191
 24034  00B608                     l17205:
 24035                           
 24036                           ; BSR set to: 1
 24037                           ;miwi_mesh.c: 3452: }
 24038                           ;miwi_mesh.c: 3453: }
 24039                           ;miwi_mesh.c: 3454: return 1;
 24040  00B608  0E01               	movlw	1
 24041  00B60A  0012               	return	
 24042  00B60C                     __end_of_isSameAddress:
 24043                           	opt stack 0
 24044                           tblptru	equ	0xFF8
 24045                           tblptrh	equ	0xFF7
 24046                           tblptrl	equ	0xFF6
 24047                           tablat	equ	0xFF5
 24048                           prodh	equ	0xFF4
 24049                           prodl	equ	0xFF3
 24050                           intcon	equ	0xFF2
 24051                           intcon2	equ	0xFF1
 24052                           intcon3	equ	0xFF0
 24053                           indf0	equ	0xFEF
 24054                           postinc0	equ	0xFEE
 24055                           plusw0	equ	0xFEB
 24056                           fsr0h	equ	0xFEA
 24057                           fsr0l	equ	0xFE9
 24058                           wreg	equ	0xFE8
 24059                           indf1	equ	0xFE7
 24060                           postinc1	equ	0xFE6
 24061                           postdec1	equ	0xFE5
 24062                           fsr1h	equ	0xFE2
 24063                           fsr1l	equ	0xFE1
 24064                           indf2	equ	0xFDF
 24065                           postinc2	equ	0xFDE
 24066                           postdec2	equ	0xFDD
 24067                           plusw2	equ	0xFDB
 24068                           fsr2h	equ	0xFDA
 24069                           fsr2l	equ	0xFD9
 24070                           status	equ	0xFD8
 24071                           
 24072 ;; *************** function _CCM_Dec *****************
 24073 ;; Defined at:
 24074 ;;		line 298 in file "src/miwi/drv_mrf_miwi_security.c"
 24075 ;; Parameters:    Size  Location     Type
 24076 ;;  text            2   36[BANK1 ] PTR unsigned char 
 24077 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 24078 ;;  headerLen       1   38[BANK1 ] unsigned char 
 24079 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 24080 ;;  key             2   40[BANK1 ] PTR unsigned char 
 24081 ;;		 -> key(8), 
 24082 ;; Auto vars:     Size  Location     Type
 24083 ;;  i               1   50[BANK1 ] unsigned char 
 24084 ;; Return value:  Size  Location     Type
 24085 ;;                  1    wreg      unsigned char 
 24086 ;; Registers used:
 24087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24088 ;; Tracked objects:
 24089 ;;		On entry : 0/0
 24090 ;;		On exit  : 0/0
 24091 ;;		Unchanged: 0/0
 24092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24093 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24094 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24095 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24096 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24097 ;;Total ram usage:       15 bytes
 24098 ;; Hardware stack levels used:    1
 24099 ;; Hardware stack levels required when called:   18
 24100 ;; This function calls:
 24101 ;;		_CBC_MAC
 24102 ;;		_CTR
 24103 ;; This function is called by:
 24104 ;;		_MiMAC_ReceivedPacket
 24105 ;; This function uses a non-reentrant model
 24106 ;;
 24107                           
 24108                           	psect	text53
 24109  007E74                     __ptext53:
 24110                           	opt stack 0
 24111  007E74                     _CCM_Dec:
 24112                           	opt stack 10
 24113                           
 24114                           ;drv_mrf_miwi_security.c: 300: uint8_t i;
 24115                           ;drv_mrf_miwi_security.c: 307: for(i = 0; i < 4-1; i++)
 24116                           
 24117                           ; BSR set to: 1
 24118                           ;incstack = 0
 24119  007E74  0E00               	movlw	0
 24120  007E76  0101               	movlb	1	; () banked
 24121  007E78  6F32               	movwf	CCM_Dec@i& (0+255),b
 24122  007E7A                     l17211:
 24123                           
 24124                           ; BSR set to: 1
 24125  007E7A  0E02               	movlw	2
 24126  007E7C  0101               	movlb	1	; () banked
 24127  007E7E  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 24128  007E80  D001               	goto	l17215
 24129  007E82  D02D               	goto	l17225
 24130  007E84                     l17215:
 24131                           
 24132                           ; BSR set to: 1
 24133                           ;drv_mrf_miwi_security.c: 308: {
 24134                           ;drv_mrf_miwi_security.c: 309: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 24135  007E84  0101               	movlb	1	; () banked
 24136  007E86  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24137  007E88  0101               	movlb	1	; () banked
 24138  007E8A  5D32               	subwf	CCM_Dec@i& (0+255),w,b
 24139  007E8C  A0D8               	btfss	status,0,c
 24140  007E8E  D006               	goto	l17219
 24141                           
 24142                           ; BSR set to: 1
 24143  007E90  0E00               	movlw	0
 24144  007E92  0101               	movlb	1	; () banked
 24145  007E94  6F31               	movwf	(_CCM_Dec$1986+1)& (0+255),b
 24146  007E96  0E00               	movlw	0
 24147  007E98  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 24148  007E9A  D013               	goto	l495
 24149  007E9C                     l17219:
 24150                           
 24151                           ; BSR set to: 1
 24152  007E9C  0101               	movlb	1	; () banked
 24153  007E9E  5132               	movf	CCM_Dec@i& (0+255),w,b
 24154  007EA0  0D01               	mullw	1
 24155  007EA2  50F3               	movf	prodl,w,c
 24156  007EA4  0101               	movlb	1	; () banked
 24157  007EA6  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24158  007EA8  6ED9               	movwf	fsr2l,c
 24159  007EAA  50F4               	movf	prodh,w,c
 24160  007EAC  0101               	movlb	1	; () banked
 24161  007EAE  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24162  007EB0  6EDA               	movwf	fsr2h,c
 24163  007EB2  50DF               	movf	indf2,w,c
 24164  007EB4  0101               	movlb	1	; () banked
 24165  007EB6  6F2A               	movwf	??_CCM_Dec& (0+255),b
 24166  007EB8  0101               	movlb	1	; () banked
 24167  007EBA  512A               	movf	??_CCM_Dec& (0+255),w,b
 24168  007EBC  0101               	movlb	1	; () banked
 24169  007EBE  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 24170  007EC0  6B31               	clrf	(_CCM_Dec$1986+1)& (0+255),b
 24171  007EC2                     l495:
 24172                           
 24173                           ; BSR set to: 1
 24174  007EC2  0101               	movlb	1	; () banked
 24175  007EC4  5132               	movf	CCM_Dec@i& (0+255),w,b
 24176  007EC6  0D01               	mullw	1
 24177  007EC8  0EEC               	movlw	low _tmpBlock
 24178  007ECA  24F3               	addwf	prodl,w,c
 24179  007ECC  6ED9               	movwf	fsr2l,c
 24180  007ECE  0E01               	movlw	high _tmpBlock
 24181  007ED0  20F4               	addwfc	prodh,w,c
 24182  007ED2  6EDA               	movwf	fsr2h,c
 24183  007ED4  C130  FFDF         	movff	_CCM_Dec$1986,indf2
 24184                           
 24185                           ; BSR set to: 1
 24186  007ED8  0101               	movlb	1	; () banked
 24187  007EDA  2B32               	incf	CCM_Dec@i& (0+255),f,b
 24188  007EDC  D7CE               	goto	l17211
 24189  007EDE                     l17225:
 24190                           
 24191                           ; BSR set to: 1
 24192                           ;drv_mrf_miwi_security.c: 310: }
 24193                           ;drv_mrf_miwi_security.c: 311: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 24194  007EDE  0101               	movlb	1	; () banked
 24195  007EE0  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24196  007EE2  0D01               	mullw	1
 24197  007EE4  50F3               	movf	prodl,w,c
 24198  007EE6  0101               	movlb	1	; () banked
 24199  007EE8  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24200  007EEA  0101               	movlb	1	; () banked
 24201  007EEC  6F17               	movwf	CTR@text& (0+255),b
 24202  007EEE  50F4               	movf	prodh,w,c
 24203  007EF0  0101               	movlb	1	; () banked
 24204  007EF2  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24205  007EF4  0101               	movlb	1	; () banked
 24206  007EF6  6F18               	movwf	(CTR@text+1)& (0+255),b
 24207  007EF8  C127  F119         	movff	CCM_Dec@payloadLen,CTR@len
 24208  007EFC  C128  F11A         	movff	CCM_Dec@key,CTR@key
 24209  007F00  C129  F11B         	movff	CCM_Dec@key+1,CTR@key+1
 24210  007F04  0EEC               	movlw	low _tmpBlock
 24211  007F06  0101               	movlb	1	; () banked
 24212  007F08  6F1C               	movwf	CTR@nounce& (0+255),b
 24213  007F0A  0E01               	movlw	high _tmpBlock
 24214  007F0C  0101               	movlb	1	; () banked
 24215  007F0E  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 24216  007F10  ECA8  F046         	call	_CTR	;wreg free
 24217                           
 24218                           ;drv_mrf_miwi_security.c: 313: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 24219  007F14  C124  F117         	movff	CCM_Dec@text,CBC_MAC@text
 24220  007F18  C125  F118         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 24221  007F1C  0101               	movlb	1	; () banked
 24222  007F1E  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24223  007F20  0101               	movlb	1	; () banked
 24224  007F22  2527               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 24225  007F24  0FFE               	addlw	254
 24226  007F26  0101               	movlb	1	; () banked
 24227  007F28  6F19               	movwf	CBC_MAC@len& (0+255),b
 24228  007F2A  C128  F11A         	movff	CCM_Dec@key,CBC_MAC@key
 24229  007F2E  C129  F11B         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 24230  007F32  0EEC               	movlw	low _tmpBlock
 24231  007F34  0101               	movlb	1	; () banked
 24232  007F36  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 24233  007F38  0E01               	movlw	high _tmpBlock
 24234  007F3A  0101               	movlb	1	; () banked
 24235  007F3C  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 24236  007F3E  ECD0  F048         	call	_CBC_MAC	;wreg free
 24237                           
 24238                           ;drv_mrf_miwi_security.c: 314: for(i = 0; i < 2; i++)
 24239  007F42  0E00               	movlw	0
 24240  007F44  0101               	movlb	1	; () banked
 24241  007F46  6F32               	movwf	CCM_Dec@i& (0+255),b
 24242  007F48                     l17231:
 24243                           
 24244                           ; BSR set to: 1
 24245  007F48  0E01               	movlw	1
 24246  007F4A  0101               	movlb	1	; () banked
 24247  007F4C  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 24248  007F4E  D001               	goto	l17235
 24249  007F50  D03A               	goto	l17245
 24250  007F52                     l17235:
 24251                           
 24252                           ; BSR set to: 1
 24253                           ;drv_mrf_miwi_security.c: 315: {
 24254                           ;drv_mrf_miwi_security.c: 316: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 24255  007F52  0EFE               	movlw	254
 24256  007F54  0101               	movlb	1	; () banked
 24257  007F56  6F2A               	movwf	??_CCM_Dec& (0+255),b
 24258  007F58  0EFF               	movlw	255
 24259  007F5A  0101               	movlb	1	; () banked
 24260  007F5C  6F2B               	movwf	(??_CCM_Dec+1)& (0+255),b
 24261  007F5E  0101               	movlb	1	; () banked
 24262  007F60  5127               	movf	CCM_Dec@payloadLen& (0+255),w,b
 24263  007F62  C126  F12C         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 24264  007F66  0101               	movlb	1	; () banked
 24265  007F68  6B2D               	clrf	(??_CCM_Dec+3)& (0+255),b
 24266  007F6A  0101               	movlb	1	; () banked
 24267  007F6C  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24268  007F6E  0E00               	movlw	0
 24269  007F70  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24270  007F72  0101               	movlb	1	; () banked
 24271  007F74  5132               	movf	CCM_Dec@i& (0+255),w,b
 24272  007F76  0101               	movlb	1	; () banked
 24273  007F78  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24274  007F7A  0E00               	movlw	0
 24275  007F7C  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24276  007F7E  0101               	movlb	1	; () banked
 24277  007F80  512A               	movf	??_CCM_Dec& (0+255),w,b
 24278  007F82  0101               	movlb	1	; () banked
 24279  007F84  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24280  007F86  0101               	movlb	1	; () banked
 24281  007F88  512B               	movf	(??_CCM_Dec+1)& (0+255),w,b
 24282  007F8A  0101               	movlb	1	; () banked
 24283  007F8C  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24284  007F8E  0101               	movlb	1	; () banked
 24285  007F90  512C               	movf	(??_CCM_Dec+2)& (0+255),w,b
 24286  007F92  0101               	movlb	1	; () banked
 24287  007F94  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24288  007F96  6ED9               	movwf	fsr2l,c
 24289  007F98  0101               	movlb	1	; () banked
 24290  007F9A  512D               	movf	(??_CCM_Dec+3)& (0+255),w,b
 24291  007F9C  0101               	movlb	1	; () banked
 24292  007F9E  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24293  007FA0  6EDA               	movwf	fsr2h,c
 24294  007FA2  0101               	movlb	1	; () banked
 24295  007FA4  5132               	movf	CCM_Dec@i& (0+255),w,b
 24296  007FA6  0D01               	mullw	1
 24297  007FA8  0EEC               	movlw	low _tmpBlock
 24298  007FAA  24F3               	addwf	prodl,w,c
 24299  007FAC  6EE1               	movwf	fsr1l,c
 24300  007FAE  0E01               	movlw	high _tmpBlock
 24301  007FB0  20F4               	addwfc	prodh,w,c
 24302  007FB2  6EE2               	movwf	fsr1h,c
 24303  007FB4  50DE               	movf	postinc2,w,c
 24304  007FB6  18E6               	xorwf	postinc1,w,c
 24305  007FB8  B4D8               	btfsc	status,2,c
 24306  007FBA  D002               	goto	l17241
 24307                           
 24308                           ; BSR set to: 1
 24309                           ;drv_mrf_miwi_security.c: 317: {
 24310                           ;drv_mrf_miwi_security.c: 321: return 0;
 24311  007FBC  0E00               	movlw	0
 24312                           
 24313                           ; BSR set to: 1
 24314  007FBE  0012               	return	
 24315  007FC0                     l17241:
 24316                           
 24317                           ; BSR set to: 1
 24318  007FC0  0101               	movlb	1	; () banked
 24319  007FC2  2B32               	incf	CCM_Dec@i& (0+255),f,b
 24320  007FC4  D7C1               	goto	l17231
 24321  007FC6                     l17245:
 24322                           
 24323                           ; BSR set to: 1
 24324                           ;drv_mrf_miwi_security.c: 322: }
 24325                           ;drv_mrf_miwi_security.c: 323: }
 24326                           ;drv_mrf_miwi_security.c: 327: return 1;
 24327  007FC6  0E01               	movlw	1
 24328  007FC8  0012               	return	
 24329  007FCA                     __end_of_CCM_Dec:
 24330                           	opt stack 0
 24331                           tblptru	equ	0xFF8
 24332                           tblptrh	equ	0xFF7
 24333                           tblptrl	equ	0xFF6
 24334                           tablat	equ	0xFF5
 24335                           prodh	equ	0xFF4
 24336                           prodl	equ	0xFF3
 24337                           intcon	equ	0xFF2
 24338                           intcon2	equ	0xFF1
 24339                           intcon3	equ	0xFF0
 24340                           indf0	equ	0xFEF
 24341                           postinc0	equ	0xFEE
 24342                           plusw0	equ	0xFEB
 24343                           fsr0h	equ	0xFEA
 24344                           fsr0l	equ	0xFE9
 24345                           wreg	equ	0xFE8
 24346                           indf1	equ	0xFE7
 24347                           postinc1	equ	0xFE6
 24348                           postdec1	equ	0xFE5
 24349                           fsr1h	equ	0xFE2
 24350                           fsr1l	equ	0xFE1
 24351                           indf2	equ	0xFDF
 24352                           postinc2	equ	0xFDE
 24353                           postdec2	equ	0xFDD
 24354                           plusw2	equ	0xFDB
 24355                           fsr2h	equ	0xFDA
 24356                           fsr2l	equ	0xFD9
 24357                           status	equ	0xFD8
 24358                           
 24359 ;; *************** function _CTR *****************
 24360 ;; Defined at:
 24361 ;;		line 117 in file "src/miwi/drv_mrf_miwi_security.c"
 24362 ;; Parameters:    Size  Location     Type
 24363 ;;  text            2   23[BANK1 ] PTR unsigned char 
 24364 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 24365 ;;  len             1   25[BANK1 ] unsigned char 
 24366 ;;  key             2   26[BANK1 ] PTR unsigned char 
 24367 ;;		 -> key(8), 
 24368 ;;  nounce          2   28[BANK1 ] PTR unsigned char 
 24369 ;;		 -> tmpBlock(4), 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;  j               1   35[BANK1 ] unsigned char 
 24372 ;;  i               1   34[BANK1 ] unsigned char 
 24373 ;;  block           1   33[BANK1 ] unsigned char 
 24374 ;; Return value:  Size  Location     Type
 24375 ;;		None               void
 24376 ;; Registers used:
 24377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24378 ;; Tracked objects:
 24379 ;;		On entry : 0/0
 24380 ;;		On exit  : 0/0
 24381 ;;		Unchanged: 0/0
 24382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24383 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24384 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24385 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24386 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24387 ;;Total ram usage:       13 bytes
 24388 ;; Hardware stack levels used:    1
 24389 ;; Hardware stack levels required when called:   17
 24390 ;; This function calls:
 24391 ;;		___awdiv
 24392 ;;		_encode
 24393 ;; This function is called by:
 24394 ;;		_CCM_Enc
 24395 ;;		_CCM_Dec
 24396 ;; This function uses a non-reentrant model
 24397 ;;
 24398                           
 24399                           	psect	text54
 24400  008D50                     __ptext54:
 24401                           	opt stack 0
 24402  008D50                     _CTR:
 24403                           	opt stack 7
 24404                           
 24405                           ;drv_mrf_miwi_security.c: 119: uint8_t block = len/4+1;
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;incstack = 0
 24409  008D50  C119  F106         	movff	CTR@len,___awdiv@dividend
 24410  008D54  0101               	movlb	1	; () banked
 24411  008D56  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24412  008D58  0E00               	movlw	0
 24413  008D5A  0101               	movlb	1	; () banked
 24414  008D5C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24415  008D5E  0E04               	movlw	4
 24416  008D60  6F08               	movwf	___awdiv@divisor& (0+255),b
 24417  008D62  ECA1  F050         	call	___awdiv	;wreg free
 24418  008D66  0101               	movlb	1	; () banked
 24419  008D68  2906               	incf	?___awdiv& (0+255),w,b
 24420  008D6A  0101               	movlb	1	; () banked
 24421  008D6C  6F21               	movwf	CTR@block& (0+255),b
 24422                           
 24423                           ; BSR set to: 1
 24424                           ;drv_mrf_miwi_security.c: 120: uint8_t i, j;
 24425                           ;drv_mrf_miwi_security.c: 127: for(i = 0; i < block; i++)
 24426  008D6E  0E00               	movlw	0
 24427  008D70  0101               	movlb	1	; () banked
 24428  008D72  6F22               	movwf	CTR@i& (0+255),b
 24429  008D74  D076               	goto	l16867
 24430  008D76                     l16835:
 24431                           
 24432                           ; BSR set to: 1
 24433                           ;drv_mrf_miwi_security.c: 128: {
 24434                           ;drv_mrf_miwi_security.c: 129: for(j = 0; j < 4-1; j++)
 24435  008D76  0E00               	movlw	0
 24436  008D78  0101               	movlb	1	; () banked
 24437  008D7A  6F23               	movwf	CTR@j& (0+255),b
 24438  008D7C                     l16837:
 24439                           
 24440                           ; BSR set to: 1
 24441  008D7C  0E02               	movlw	2
 24442  008D7E  0101               	movlb	1	; () banked
 24443  008D80  6523               	cpfsgt	CTR@j& (0+255),b
 24444  008D82  D001               	goto	l16841
 24445  008D84  D019               	goto	l460
 24446  008D86                     l16841:
 24447                           
 24448                           ; BSR set to: 1
 24449                           ;drv_mrf_miwi_security.c: 130: {
 24450                           ;drv_mrf_miwi_security.c: 131: tmpBlock[j] = nounce[j];
 24451  008D86  0101               	movlb	1	; () banked
 24452  008D88  5123               	movf	CTR@j& (0+255),w,b
 24453  008D8A  0D01               	mullw	1
 24454  008D8C  50F3               	movf	prodl,w,c
 24455  008D8E  0101               	movlb	1	; () banked
 24456  008D90  251C               	addwf	CTR@nounce& (0+255),w,b
 24457  008D92  6ED9               	movwf	fsr2l,c
 24458  008D94  50F4               	movf	prodh,w,c
 24459  008D96  0101               	movlb	1	; () banked
 24460  008D98  211D               	addwfc	(CTR@nounce+1)& (0+255),w,b
 24461  008D9A  6EDA               	movwf	fsr2h,c
 24462  008D9C  0101               	movlb	1	; () banked
 24463  008D9E  5123               	movf	CTR@j& (0+255),w,b
 24464  008DA0  0D01               	mullw	1
 24465  008DA2  0EEC               	movlw	low _tmpBlock
 24466  008DA4  24F3               	addwf	prodl,w,c
 24467  008DA6  6EE1               	movwf	fsr1l,c
 24468  008DA8  0E01               	movlw	high _tmpBlock
 24469  008DAA  20F4               	addwfc	prodh,w,c
 24470  008DAC  6EE2               	movwf	fsr1h,c
 24471  008DAE  CFDF FFE7          	movff	indf2,indf1
 24472                           
 24473                           ; BSR set to: 1
 24474  008DB2  0101               	movlb	1	; () banked
 24475  008DB4  2B23               	incf	CTR@j& (0+255),f,b
 24476  008DB6  D7E2               	goto	l16837
 24477  008DB8                     l460:
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;drv_mrf_miwi_security.c: 132: }
 24481                           ;drv_mrf_miwi_security.c: 133: tmpBlock[4-1] = i;
 24482  008DB8  C122  F1EF         	movff	CTR@i,_tmpBlock+3
 24483                           
 24484                           ; BSR set to: 1
 24485                           ;drv_mrf_miwi_security.c: 134: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 24486  008DBC  0EEC               	movlw	low _tmpBlock
 24487  008DBE  0101               	movlb	1	; () banked
 24488  008DC0  6F00               	movwf	encode@text& (0+255),b
 24489  008DC2  0E01               	movlw	high _tmpBlock
 24490  008DC4  0101               	movlb	1	; () banked
 24491  008DC6  6F01               	movwf	(encode@text+1)& (0+255),b
 24492  008DC8  C11A  F102         	movff	CTR@key,encode@key
 24493  008DCC  C11B  F103         	movff	CTR@key+1,encode@key+1
 24494  008DD0  ECCE  F036         	call	_encode	;wreg free
 24495                           
 24496                           ;drv_mrf_miwi_security.c: 135: for(j = 0; j < 4; j++)
 24497  008DD4  0E00               	movlw	0
 24498  008DD6  0101               	movlb	1	; () banked
 24499  008DD8  6F23               	movwf	CTR@j& (0+255),b
 24500  008DDA                     l16851:
 24501                           
 24502                           ; BSR set to: 1
 24503  008DDA  0E03               	movlw	3
 24504  008DDC  0101               	movlb	1	; () banked
 24505  008DDE  6523               	cpfsgt	CTR@j& (0+255),b
 24506  008DE0  D001               	goto	l16855
 24507  008DE2  D03D               	goto	l16865
 24508  008DE4                     l16855:
 24509                           
 24510                           ; BSR set to: 1
 24511                           ;drv_mrf_miwi_security.c: 136: {
 24512                           ;drv_mrf_miwi_security.c: 137: if( (i * 4 + j) >= len )
 24513  008DE4  0101               	movlb	1	; () banked
 24514  008DE6  5119               	movf	CTR@len& (0+255),w,b
 24515  008DE8  0101               	movlb	1	; () banked
 24516  008DEA  6F1E               	movwf	??_CTR& (0+255),b
 24517  008DEC  6B1F               	clrf	(??_CTR+1)& (0+255),b
 24518  008DEE  0101               	movlb	1	; () banked
 24519  008DF0  5122               	movf	CTR@i& (0+255),w,b
 24520  008DF2  0D04               	mullw	4
 24521  008DF4  0101               	movlb	1	; () banked
 24522  008DF6  5123               	movf	CTR@j& (0+255),w,b
 24523  008DF8  26F3               	addwf	prodl,f,c
 24524  008DFA  0E00               	movlw	0
 24525  008DFC  22F4               	addwfc	prodh,f,c
 24526  008DFE  0101               	movlb	1	; () banked
 24527  008E00  511E               	movf	??_CTR& (0+255),w,b
 24528  008E02  5CF3               	subwf	prodl,w,c
 24529  008E04  50F4               	movf	prodh,w,c
 24530  008E06  0A80               	xorlw	128
 24531  008E08  0101               	movlb	1	; () banked
 24532  008E0A  6F20               	movwf	(??_CTR+2)& (0+255),b
 24533  008E0C  0101               	movlb	1	; () banked
 24534  008E0E  511F               	movf	(??_CTR+1)& (0+255),w,b
 24535  008E10  0A80               	xorlw	128
 24536  008E12  0101               	movlb	1	; () banked
 24537  008E14  5920               	subwfb	(??_CTR+2)& (0+255),w,b
 24538  008E16  B0D8               	btfsc	status,0,c
 24539  008E18  D022               	goto	l16865
 24540                           
 24541                           ; BSR set to: 1
 24542                           ;drv_mrf_miwi_security.c: 140: }
 24543                           ;drv_mrf_miwi_security.c: 141: text[i * 4 + j] ^= tmpBlock[j];
 24544                           
 24545                           ; BSR set to: 1
 24546                           
 24547                           ; BSR set to: 1
 24548                           ;drv_mrf_miwi_security.c: 138: {
 24549                           ;drv_mrf_miwi_security.c: 139: break;
 24550  008E1A  0101               	movlb	1	; () banked
 24551  008E1C  5123               	movf	CTR@j& (0+255),w,b
 24552  008E1E  0D01               	mullw	1
 24553  008E20  0EEC               	movlw	low _tmpBlock
 24554  008E22  24F3               	addwf	prodl,w,c
 24555  008E24  6ED9               	movwf	fsr2l,c
 24556  008E26  0E01               	movlw	high _tmpBlock
 24557  008E28  20F4               	addwfc	prodh,w,c
 24558  008E2A  6EDA               	movwf	fsr2h,c
 24559  008E2C  50DF               	movf	indf2,w,c
 24560  008E2E  0101               	movlb	1	; () banked
 24561  008E30  6F1E               	movwf	??_CTR& (0+255),b
 24562  008E32  0101               	movlb	1	; () banked
 24563  008E34  5122               	movf	CTR@i& (0+255),w,b
 24564  008E36  0D04               	mullw	4
 24565  008E38  0101               	movlb	1	; () banked
 24566  008E3A  5123               	movf	CTR@j& (0+255),w,b
 24567  008E3C  26F3               	addwf	prodl,f,c
 24568  008E3E  0E00               	movlw	0
 24569  008E40  22F4               	addwfc	prodh,f,c
 24570  008E42  50F3               	movf	prodl,w,c
 24571  008E44  0101               	movlb	1	; () banked
 24572  008E46  2517               	addwf	CTR@text& (0+255),w,b
 24573  008E48  6ED9               	movwf	fsr2l,c
 24574  008E4A  50F4               	movf	prodh,w,c
 24575  008E4C  0101               	movlb	1	; () banked
 24576  008E4E  2118               	addwfc	(CTR@text+1)& (0+255),w,b
 24577  008E50  6EDA               	movwf	fsr2h,c
 24578  008E52  0101               	movlb	1	; () banked
 24579  008E54  511E               	movf	??_CTR& (0+255),w,b
 24580  008E56  1ADF               	xorwf	indf2,f,c
 24581                           
 24582                           ; BSR set to: 1
 24583  008E58  0101               	movlb	1	; () banked
 24584  008E5A  2B23               	incf	CTR@j& (0+255),f,b
 24585  008E5C  D7BE               	goto	l16851
 24586  008E5E                     l16865:
 24587                           
 24588                           ; BSR set to: 1
 24589  008E5E  0101               	movlb	1	; () banked
 24590  008E60  2B22               	incf	CTR@i& (0+255),f,b
 24591  008E62                     l16867:
 24592                           
 24593                           ; BSR set to: 1
 24594  008E62  0101               	movlb	1	; () banked
 24595  008E64  5121               	movf	CTR@block& (0+255),w,b
 24596  008E66  0101               	movlb	1	; () banked
 24597  008E68  5D22               	subwf	CTR@i& (0+255),w,b
 24598  008E6A  B0D8               	btfsc	status,0,c
 24599  008E6C  0012               	return	
 24600  008E6E  D783               	goto	l16835
 24601  008E70                     __end_of_CTR:
 24602                           	opt stack 0
 24603                           tblptru	equ	0xFF8
 24604                           tblptrh	equ	0xFF7
 24605                           tblptrl	equ	0xFF6
 24606                           tablat	equ	0xFF5
 24607                           prodh	equ	0xFF4
 24608                           prodl	equ	0xFF3
 24609                           intcon	equ	0xFF2
 24610                           intcon2	equ	0xFF1
 24611                           intcon3	equ	0xFF0
 24612                           indf0	equ	0xFEF
 24613                           postinc0	equ	0xFEE
 24614                           plusw0	equ	0xFEB
 24615                           fsr0h	equ	0xFEA
 24616                           fsr0l	equ	0xFE9
 24617                           wreg	equ	0xFE8
 24618                           indf1	equ	0xFE7
 24619                           postinc1	equ	0xFE6
 24620                           postdec1	equ	0xFE5
 24621                           fsr1h	equ	0xFE2
 24622                           fsr1l	equ	0xFE1
 24623                           indf2	equ	0xFDF
 24624                           postinc2	equ	0xFDE
 24625                           postdec2	equ	0xFDD
 24626                           plusw2	equ	0xFDB
 24627                           fsr2h	equ	0xFDA
 24628                           fsr2l	equ	0xFD9
 24629                           status	equ	0xFD8
 24630                           
 24631 ;; *************** function _CBC_MAC *****************
 24632 ;; Defined at:
 24633 ;;		line 174 in file "src/miwi/drv_mrf_miwi_security.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;  text            2   23[BANK1 ] PTR unsigned char 
 24636 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 24637 ;;  len             1   25[BANK1 ] unsigned char 
 24638 ;;  key             2   26[BANK1 ] PTR unsigned char 
 24639 ;;		 -> key(8), 
 24640 ;;  MIC             2   28[BANK1 ] PTR unsigned char 
 24641 ;;		 -> tmpBlock(4), 
 24642 ;; Auto vars:     Size  Location     Type
 24643 ;;  i               1   35[BANK1 ] unsigned char 
 24644 ;;  j               1   34[BANK1 ] unsigned char 
 24645 ;;  block           1   33[BANK1 ] unsigned char 
 24646 ;; Return value:  Size  Location     Type
 24647 ;;		None               void
 24648 ;; Registers used:
 24649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24650 ;; Tracked objects:
 24651 ;;		On entry : 0/0
 24652 ;;		On exit  : 0/0
 24653 ;;		Unchanged: 0/0
 24654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24655 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;Total ram usage:       13 bytes
 24660 ;; Hardware stack levels used:    1
 24661 ;; Hardware stack levels required when called:   17
 24662 ;; This function calls:
 24663 ;;		___awdiv
 24664 ;;		_encode
 24665 ;; This function is called by:
 24666 ;;		_CCM_Enc
 24667 ;;		_CCM_Dec
 24668 ;; This function uses a non-reentrant model
 24669 ;;
 24670                           
 24671                           	psect	text55
 24672  0091A0                     __ptext55:
 24673                           	opt stack 0
 24674  0091A0                     _CBC_MAC:
 24675                           	opt stack 7
 24676                           
 24677                           ;drv_mrf_miwi_security.c: 179: uint8_t block = len / 4 + 1;
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;incstack = 0
 24681  0091A0  C119  F106         	movff	CBC_MAC@len,___awdiv@dividend
 24682  0091A4  0101               	movlb	1	; () banked
 24683  0091A6  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24684  0091A8  0E00               	movlw	0
 24685  0091AA  0101               	movlb	1	; () banked
 24686  0091AC  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24687  0091AE  0E04               	movlw	4
 24688  0091B0  6F08               	movwf	___awdiv@divisor& (0+255),b
 24689  0091B2  ECA1  F050         	call	___awdiv	;wreg free
 24690  0091B6  0101               	movlb	1	; () banked
 24691  0091B8  2906               	incf	?___awdiv& (0+255),w,b
 24692  0091BA  0101               	movlb	1	; () banked
 24693  0091BC  6F21               	movwf	CBC_MAC@block& (0+255),b
 24694                           
 24695                           ; BSR set to: 1
 24696                           ;drv_mrf_miwi_security.c: 180: uint8_t i, j;
 24697                           ;drv_mrf_miwi_security.c: 187: for(i = 0; i < 4; i++)
 24698  0091BE  0E00               	movlw	0
 24699  0091C0  0101               	movlb	1	; () banked
 24700  0091C2  6F23               	movwf	CBC_MAC@i& (0+255),b
 24701  0091C4                     l16873:
 24702                           
 24703                           ; BSR set to: 1
 24704  0091C4  0E03               	movlw	3
 24705  0091C6  0101               	movlb	1	; () banked
 24706  0091C8  6523               	cpfsgt	CBC_MAC@i& (0+255),b
 24707  0091CA  D001               	goto	l16877
 24708  0091CC  D010               	goto	l16883
 24709  0091CE                     l16877:
 24710                           
 24711                           ; BSR set to: 1
 24712                           ;drv_mrf_miwi_security.c: 188: {
 24713                           ;drv_mrf_miwi_security.c: 189: MIC[i] = 0;
 24714  0091CE  0101               	movlb	1	; () banked
 24715  0091D0  5123               	movf	CBC_MAC@i& (0+255),w,b
 24716  0091D2  0D01               	mullw	1
 24717  0091D4  50F3               	movf	prodl,w,c
 24718  0091D6  0101               	movlb	1	; () banked
 24719  0091D8  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 24720  0091DA  6ED9               	movwf	fsr2l,c
 24721  0091DC  50F4               	movf	prodh,w,c
 24722  0091DE  0101               	movlb	1	; () banked
 24723  0091E0  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24724  0091E2  6EDA               	movwf	fsr2h,c
 24725  0091E4  0E00               	movlw	0
 24726  0091E6  6EDF               	movwf	indf2,c
 24727                           
 24728                           ; BSR set to: 1
 24729  0091E8  0101               	movlb	1	; () banked
 24730  0091EA  2B23               	incf	CBC_MAC@i& (0+255),f,b
 24731  0091EC  D7EB               	goto	l16873
 24732  0091EE                     l16883:
 24733                           
 24734                           ; BSR set to: 1
 24735                           ;drv_mrf_miwi_security.c: 190: }
 24736                           ;drv_mrf_miwi_security.c: 192: for(i = 0; i < block; i++)
 24737  0091EE  0E00               	movlw	0
 24738  0091F0  0101               	movlb	1	; () banked
 24739  0091F2  6F23               	movwf	CBC_MAC@i& (0+255),b
 24740  0091F4  D053               	goto	l16905
 24741  0091F6                     l16885:
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;drv_mrf_miwi_security.c: 193: {
 24745                           ;drv_mrf_miwi_security.c: 194: for(j = 0; j < 4; j++)
 24746  0091F6  0E00               	movlw	0
 24747  0091F8  0101               	movlb	1	; () banked
 24748  0091FA  6F22               	movwf	CBC_MAC@j& (0+255),b
 24749  0091FC                     l16887:
 24750                           
 24751                           ; BSR set to: 1
 24752  0091FC  0E03               	movlw	3
 24753  0091FE  0101               	movlb	1	; () banked
 24754  009200  6522               	cpfsgt	CBC_MAC@j& (0+255),b
 24755  009202  D001               	goto	l16891
 24756  009204  D03F               	goto	l16901
 24757  009206                     l16891:
 24758                           
 24759                           ; BSR set to: 1
 24760                           ;drv_mrf_miwi_security.c: 195: {
 24761                           ;drv_mrf_miwi_security.c: 196: if( (i * 4 + j) >= len )
 24762  009206  0101               	movlb	1	; () banked
 24763  009208  5119               	movf	CBC_MAC@len& (0+255),w,b
 24764  00920A  0101               	movlb	1	; () banked
 24765  00920C  6F1E               	movwf	??_CBC_MAC& (0+255),b
 24766  00920E  6B1F               	clrf	(??_CBC_MAC+1)& (0+255),b
 24767  009210  0101               	movlb	1	; () banked
 24768  009212  5123               	movf	CBC_MAC@i& (0+255),w,b
 24769  009214  0D04               	mullw	4
 24770  009216  0101               	movlb	1	; () banked
 24771  009218  5122               	movf	CBC_MAC@j& (0+255),w,b
 24772  00921A  26F3               	addwf	prodl,f,c
 24773  00921C  0E00               	movlw	0
 24774  00921E  22F4               	addwfc	prodh,f,c
 24775  009220  0101               	movlb	1	; () banked
 24776  009222  511E               	movf	??_CBC_MAC& (0+255),w,b
 24777  009224  5CF3               	subwf	prodl,w,c
 24778  009226  50F4               	movf	prodh,w,c
 24779  009228  0A80               	xorlw	128
 24780  00922A  0101               	movlb	1	; () banked
 24781  00922C  6F20               	movwf	(??_CBC_MAC+2)& (0+255),b
 24782  00922E  0101               	movlb	1	; () banked
 24783  009230  511F               	movf	(??_CBC_MAC+1)& (0+255),w,b
 24784  009232  0A80               	xorlw	128
 24785  009234  0101               	movlb	1	; () banked
 24786  009236  5920               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 24787  009238  B0D8               	btfsc	status,0,c
 24788  00923A  D024               	goto	l16901
 24789                           
 24790                           ; BSR set to: 1
 24791                           ;drv_mrf_miwi_security.c: 199: }
 24792                           ;drv_mrf_miwi_security.c: 200: MIC[j] ^= text[i * 4 + j];
 24793                           
 24794                           ; BSR set to: 1
 24795                           
 24796                           ; BSR set to: 1
 24797                           ;drv_mrf_miwi_security.c: 197: {
 24798                           ;drv_mrf_miwi_security.c: 198: break;
 24799  00923C  0101               	movlb	1	; () banked
 24800  00923E  5123               	movf	CBC_MAC@i& (0+255),w,b
 24801  009240  0D04               	mullw	4
 24802  009242  0101               	movlb	1	; () banked
 24803  009244  5122               	movf	CBC_MAC@j& (0+255),w,b
 24804  009246  26F3               	addwf	prodl,f,c
 24805  009248  0E00               	movlw	0
 24806  00924A  22F4               	addwfc	prodh,f,c
 24807  00924C  50F3               	movf	prodl,w,c
 24808  00924E  0101               	movlb	1	; () banked
 24809  009250  2517               	addwf	CBC_MAC@text& (0+255),w,b
 24810  009252  6ED9               	movwf	fsr2l,c
 24811  009254  50F4               	movf	prodh,w,c
 24812  009256  0101               	movlb	1	; () banked
 24813  009258  2118               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 24814  00925A  6EDA               	movwf	fsr2h,c
 24815  00925C  50DF               	movf	indf2,w,c
 24816  00925E  0101               	movlb	1	; () banked
 24817  009260  6F1E               	movwf	??_CBC_MAC& (0+255),b
 24818  009262  0101               	movlb	1	; () banked
 24819  009264  5122               	movf	CBC_MAC@j& (0+255),w,b
 24820  009266  0D01               	mullw	1
 24821  009268  50F3               	movf	prodl,w,c
 24822  00926A  0101               	movlb	1	; () banked
 24823  00926C  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 24824  00926E  6ED9               	movwf	fsr2l,c
 24825  009270  50F4               	movf	prodh,w,c
 24826  009272  0101               	movlb	1	; () banked
 24827  009274  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24828  009276  6EDA               	movwf	fsr2h,c
 24829  009278  0101               	movlb	1	; () banked
 24830  00927A  511E               	movf	??_CBC_MAC& (0+255),w,b
 24831  00927C  1ADF               	xorwf	indf2,f,c
 24832                           
 24833                           ; BSR set to: 1
 24834  00927E  0101               	movlb	1	; () banked
 24835  009280  2B22               	incf	CBC_MAC@j& (0+255),f,b
 24836  009282  D7BC               	goto	l16887
 24837  009284                     l16901:
 24838                           
 24839                           ; BSR set to: 1
 24840                           ;drv_mrf_miwi_security.c: 201: }
 24841                           ;drv_mrf_miwi_security.c: 202: encode((uint16_t *)MIC, (uint16_t *)key);
 24842  009284  C11C  F100         	movff	CBC_MAC@MIC,encode@text
 24843  009288  C11D  F101         	movff	CBC_MAC@MIC+1,encode@text+1
 24844  00928C  C11A  F102         	movff	CBC_MAC@key,encode@key
 24845  009290  C11B  F103         	movff	CBC_MAC@key+1,encode@key+1
 24846  009294  ECCE  F036         	call	_encode	;wreg free
 24847  009298  0101               	movlb	1	; () banked
 24848  00929A  2B23               	incf	CBC_MAC@i& (0+255),f,b
 24849  00929C                     l16905:
 24850                           
 24851                           ; BSR set to: 1
 24852  00929C  0101               	movlb	1	; () banked
 24853  00929E  5121               	movf	CBC_MAC@block& (0+255),w,b
 24854  0092A0  0101               	movlb	1	; () banked
 24855  0092A2  5D23               	subwf	CBC_MAC@i& (0+255),w,b
 24856  0092A4  B0D8               	btfsc	status,0,c
 24857  0092A6  0012               	return	
 24858  0092A8  D7A6               	goto	l16885
 24859  0092AA                     __end_of_CBC_MAC:
 24860                           	opt stack 0
 24861                           tblptru	equ	0xFF8
 24862                           tblptrh	equ	0xFF7
 24863                           tblptrl	equ	0xFF6
 24864                           tablat	equ	0xFF5
 24865                           prodh	equ	0xFF4
 24866                           prodl	equ	0xFF3
 24867                           intcon	equ	0xFF2
 24868                           intcon2	equ	0xFF1
 24869                           intcon3	equ	0xFF0
 24870                           indf0	equ	0xFEF
 24871                           postinc0	equ	0xFEE
 24872                           plusw0	equ	0xFEB
 24873                           fsr0h	equ	0xFEA
 24874                           fsr0l	equ	0xFE9
 24875                           wreg	equ	0xFE8
 24876                           indf1	equ	0xFE7
 24877                           postinc1	equ	0xFE6
 24878                           postdec1	equ	0xFE5
 24879                           fsr1h	equ	0xFE2
 24880                           fsr1l	equ	0xFE1
 24881                           indf2	equ	0xFDF
 24882                           postinc2	equ	0xFDE
 24883                           postdec2	equ	0xFDD
 24884                           plusw2	equ	0xFDB
 24885                           fsr2h	equ	0xFDA
 24886                           fsr2l	equ	0xFD9
 24887                           status	equ	0xFD8
 24888                           
 24889 ;; *************** function _encode *****************
 24890 ;; Defined at:
 24891 ;;		line 76 in file "src/miwi/drv_mrf_miwi_security.c"
 24892 ;; Parameters:    Size  Location     Type
 24893 ;;  text            2    0[BANK1 ] PTR unsigned int 
 24894 ;;		 -> tmpBlock(4), 
 24895 ;;  key             2    2[BANK1 ] PTR unsigned int 
 24896 ;;		 -> key(8), 
 24897 ;; Auto vars:     Size  Location     Type
 24898 ;;  sum             2   21[BANK1 ] unsigned int 
 24899 ;;  part2           2   19[BANK1 ] unsigned int 
 24900 ;;  part1           2   17[BANK1 ] unsigned int 
 24901 ;;  delta           2   14[BANK1 ] unsigned int 
 24902 ;;  i               1   16[BANK1 ] unsigned char 
 24903 ;; Return value:  Size  Location     Type
 24904 ;;		None               void
 24905 ;; Registers used:
 24906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24907 ;; Tracked objects:
 24908 ;;		On entry : 0/0
 24909 ;;		On exit  : 0/0
 24910 ;;		Unchanged: 0/0
 24911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24912 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24913 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24914 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24915 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24916 ;;Total ram usage:       23 bytes
 24917 ;; Hardware stack levels used:    1
 24918 ;; Hardware stack levels required when called:   16
 24919 ;; This function calls:
 24920 ;;		Nothing
 24921 ;; This function is called by:
 24922 ;;		_CTR
 24923 ;;		_CBC_MAC
 24924 ;; This function uses a non-reentrant model
 24925 ;;
 24926                           
 24927                           	psect	text56
 24928  006D9C                     __ptext56:
 24929                           	opt stack 0
 24930  006D9C                     _encode:
 24931                           	opt stack 7
 24932                           
 24933                           ;drv_mrf_miwi_security.c: 78: uint16_t part1=text[0], part2=text[1];
 24934                           
 24935                           ; BSR set to: 1
 24936                           ;incstack = 0
 24937  006D9C  C100  FFD9         	movff	encode@text,fsr2l
 24938  006DA0  C101  FFDA         	movff	encode@text+1,fsr2h
 24939  006DA4  CFDE F111          	movff	postinc2,encode@part1
 24940  006DA8  CFDD F112          	movff	postdec2,encode@part1+1
 24941  006DAC  0101               	movlb	1	; () banked
 24942  006DAE  EE20 F002          	lfsr	2,2
 24943  006DB2  5100               	movf	encode@text& (0+255),w,b
 24944  006DB4  26D9               	addwf	fsr2l,f,c
 24945  006DB6  5101               	movf	(encode@text+1)& (0+255),w,b
 24946  006DB8  22DA               	addwfc	fsr2h,f,c
 24947  006DBA  CFDE F113          	movff	postinc2,encode@part2
 24948  006DBE  CFDD F114          	movff	postdec2,encode@part2+1
 24949                           
 24950                           ; BSR set to: 1
 24951                           ;drv_mrf_miwi_security.c: 79: uint16_t sum=0, delta=0x9E37;
 24952  006DC2  0E00               	movlw	0
 24953  006DC4  0101               	movlb	1	; () banked
 24954  006DC6  6F16               	movwf	(encode@sum+1)& (0+255),b
 24955  006DC8  0E00               	movlw	0
 24956  006DCA  6F15               	movwf	encode@sum& (0+255),b
 24957                           
 24958                           ; BSR set to: 1
 24959  006DCC  0E9E               	movlw	158
 24960  006DCE  0101               	movlb	1	; () banked
 24961  006DD0  6F0F               	movwf	(encode@delta+1)& (0+255),b
 24962  006DD2  0E37               	movlw	55
 24963  006DD4  6F0E               	movwf	encode@delta& (0+255),b
 24964                           
 24965                           ; BSR set to: 1
 24966                           ;drv_mrf_miwi_security.c: 80: uint8_t i;
 24967                           ;drv_mrf_miwi_security.c: 82: for(i=0; i<32; i++)
 24968  006DD6  0E00               	movlw	0
 24969  006DD8  0101               	movlb	1	; () banked
 24970  006DDA  6F10               	movwf	encode@i& (0+255),b
 24971  006DDC                     l16687:
 24972                           
 24973                           ; BSR set to: 1
 24974  006DDC  0E1F               	movlw	31
 24975  006DDE  0101               	movlb	1	; () banked
 24976  006DE0  6510               	cpfsgt	encode@i& (0+255),b
 24977  006DE2  D001               	goto	l16691
 24978  006DE4  D0D4               	goto	l16701
 24979  006DE6                     l16691:
 24980                           
 24981                           ; BSR set to: 1
 24982                           ;drv_mrf_miwi_security.c: 83: {
 24983                           ;drv_mrf_miwi_security.c: 84: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 24984  006DE6  0E03               	movlw	3
 24985  006DE8  0101               	movlb	1	; () banked
 24986  006DEA  1515               	andwf	encode@sum& (0+255),w,b
 24987  006DEC  0101               	movlb	1	; () banked
 24988  006DEE  6F04               	movwf	??_encode& (0+255),b
 24989  006DF0  0E00               	movlw	0
 24990  006DF2  0101               	movlb	1	; () banked
 24991  006DF4  1516               	andwf	(encode@sum+1)& (0+255),w,b
 24992  006DF6  0101               	movlb	1	; () banked
 24993  006DF8  6F05               	movwf	(??_encode+1)& (0+255),b
 24994  006DFA  90D8               	bcf	status,0,c
 24995  006DFC  0101               	movlb	1	; () banked
 24996  006DFE  3704               	rlcf	??_encode& (0+255),f,b
 24997  006E00  3705               	rlcf	(??_encode+1)& (0+255),f,b
 24998  006E02  0101               	movlb	1	; () banked
 24999  006E04  5104               	movf	??_encode& (0+255),w,b
 25000  006E06  0101               	movlb	1	; () banked
 25001  006E08  2502               	addwf	encode@key& (0+255),w,b
 25002  006E0A  6ED9               	movwf	fsr2l,c
 25003  006E0C  0101               	movlb	1	; () banked
 25004  006E0E  5105               	movf	(??_encode+1)& (0+255),w,b
 25005  006E10  0101               	movlb	1	; () banked
 25006  006E12  2103               	addwfc	(encode@key+1)& (0+255),w,b
 25007  006E14  6EDA               	movwf	fsr2h,c
 25008  006E16  CFDE F106          	movff	postinc2,??_encode+2
 25009  006E1A  CFDD F107          	movff	postdec2,??_encode+3
 25010  006E1E  0101               	movlb	1	; () banked
 25011  006E20  5115               	movf	encode@sum& (0+255),w,b
 25012  006E22  0101               	movlb	1	; () banked
 25013  006E24  2706               	addwf	(??_encode+2)& (0+255),f,b
 25014  006E26  0101               	movlb	1	; () banked
 25015  006E28  5116               	movf	(encode@sum+1)& (0+255),w,b
 25016  006E2A  0101               	movlb	1	; () banked
 25017  006E2C  2307               	addwfc	(??_encode+3)& (0+255),f,b
 25018  006E2E  C113  F108         	movff	encode@part2,??_encode+4
 25019  006E32  C114  F109         	movff	encode@part2+1,??_encode+5
 25020  006E36  0E05               	movlw	5
 25021  006E38  0101               	movlb	1	; () banked
 25022  006E3A  6F0A               	movwf	(??_encode+6)& (0+255),b
 25023  006E3C                     u18015:
 25024  006E3C  0101               	movlb	1	; () banked
 25025  006E3E  90D8               	bcf	status,0,c
 25026  006E40  3309               	rrcf	(??_encode+5)& (0+255),f,b
 25027  006E42  3308               	rrcf	(??_encode+4)& (0+255),f,b
 25028  006E44  0101               	movlb	1	; () banked
 25029  006E46  2F0A               	decfsz	(??_encode+6)& (0+255),f,b
 25030  006E48  D7F9               	goto	u18015
 25031  006E4A  C113  F10B         	movff	encode@part2,??_encode+7
 25032  006E4E  C114  F10C         	movff	encode@part2+1,??_encode+8
 25033  006E52  0101               	movlb	1	; () banked
 25034  006E54  3B0B               	swapf	(??_encode+7)& (0+255),f,b
 25035  006E56  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 25036  006E58  0EF0               	movlw	240
 25037  006E5A  170C               	andwf	(??_encode+8)& (0+255),f,b
 25038  006E5C  510B               	movf	(??_encode+7)& (0+255),w,b
 25039  006E5E  0B0F               	andlw	15
 25040  006E60  130C               	iorwf	(??_encode+8)& (0+255),f,b
 25041  006E62  0EF0               	movlw	240
 25042  006E64  170B               	andwf	(??_encode+7)& (0+255),f,b
 25043  006E66  0101               	movlb	1	; () banked
 25044  006E68  5108               	movf	(??_encode+4)& (0+255),w,b
 25045  006E6A  0101               	movlb	1	; () banked
 25046  006E6C  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 25047  006E6E  0101               	movlb	1	; () banked
 25048  006E70  5109               	movf	(??_encode+5)& (0+255),w,b
 25049  006E72  0101               	movlb	1	; () banked
 25050  006E74  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25051  006E76  0101               	movlb	1	; () banked
 25052  006E78  5113               	movf	encode@part2& (0+255),w,b
 25053  006E7A  0101               	movlb	1	; () banked
 25054  006E7C  270B               	addwf	(??_encode+7)& (0+255),f,b
 25055  006E7E  0101               	movlb	1	; () banked
 25056  006E80  5114               	movf	(encode@part2+1)& (0+255),w,b
 25057  006E82  0101               	movlb	1	; () banked
 25058  006E84  230C               	addwfc	(??_encode+8)& (0+255),f,b
 25059  006E86  0101               	movlb	1	; () banked
 25060  006E88  5106               	movf	(??_encode+2)& (0+255),w,b
 25061  006E8A  0101               	movlb	1	; () banked
 25062  006E8C  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 25063  006E8E  0101               	movlb	1	; () banked
 25064  006E90  5107               	movf	(??_encode+3)& (0+255),w,b
 25065  006E92  0101               	movlb	1	; () banked
 25066  006E94  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25067  006E96  0101               	movlb	1	; () banked
 25068  006E98  510B               	movf	(??_encode+7)& (0+255),w,b
 25069  006E9A  0101               	movlb	1	; () banked
 25070  006E9C  2711               	addwf	encode@part1& (0+255),f,b
 25071  006E9E  0101               	movlb	1	; () banked
 25072  006EA0  510C               	movf	(??_encode+8)& (0+255),w,b
 25073  006EA2  0101               	movlb	1	; () banked
 25074  006EA4  2312               	addwfc	(encode@part1+1)& (0+255),f,b
 25075                           
 25076                           ; BSR set to: 1
 25077                           ;drv_mrf_miwi_security.c: 85: sum += delta;
 25078  006EA6  0101               	movlb	1	; () banked
 25079  006EA8  510E               	movf	encode@delta& (0+255),w,b
 25080  006EAA  0101               	movlb	1	; () banked
 25081  006EAC  2715               	addwf	encode@sum& (0+255),f,b
 25082  006EAE  0101               	movlb	1	; () banked
 25083  006EB0  510F               	movf	(encode@delta+1)& (0+255),w,b
 25084  006EB2  0101               	movlb	1	; () banked
 25085  006EB4  2316               	addwfc	(encode@sum+1)& (0+255),f,b
 25086                           
 25087                           ; BSR set to: 1
 25088                           ;drv_mrf_miwi_security.c: 86: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 25089  006EB6  C115  F104         	movff	encode@sum,??_encode
 25090  006EBA  C116  F105         	movff	encode@sum+1,??_encode+1
 25091  006EBE  0E0B               	movlw	11
 25092  006EC0  0101               	movlb	1	; () banked
 25093  006EC2  6F06               	movwf	(??_encode+2)& (0+255),b
 25094  006EC4                     u18025:
 25095  006EC4  0101               	movlb	1	; () banked
 25096  006EC6  90D8               	bcf	status,0,c
 25097  006EC8  3305               	rrcf	(??_encode+1)& (0+255),f,b
 25098  006ECA  3304               	rrcf	??_encode& (0+255),f,b
 25099  006ECC  0101               	movlb	1	; () banked
 25100  006ECE  2F06               	decfsz	(??_encode+2)& (0+255),f,b
 25101  006ED0  D7F9               	goto	u18025
 25102  006ED2  0E03               	movlw	3
 25103  006ED4  0101               	movlb	1	; () banked
 25104  006ED6  1704               	andwf	??_encode& (0+255),f,b
 25105  006ED8  0E00               	movlw	0
 25106  006EDA  1705               	andwf	(??_encode+1)& (0+255),f,b
 25107  006EDC  90D8               	bcf	status,0,c
 25108  006EDE  0101               	movlb	1	; () banked
 25109  006EE0  3704               	rlcf	??_encode& (0+255),f,b
 25110  006EE2  3705               	rlcf	(??_encode+1)& (0+255),f,b
 25111  006EE4  0101               	movlb	1	; () banked
 25112  006EE6  5104               	movf	??_encode& (0+255),w,b
 25113  006EE8  0101               	movlb	1	; () banked
 25114  006EEA  2502               	addwf	encode@key& (0+255),w,b
 25115  006EEC  6ED9               	movwf	fsr2l,c
 25116  006EEE  0101               	movlb	1	; () banked
 25117  006EF0  5105               	movf	(??_encode+1)& (0+255),w,b
 25118  006EF2  0101               	movlb	1	; () banked
 25119  006EF4  2103               	addwfc	(encode@key+1)& (0+255),w,b
 25120  006EF6  6EDA               	movwf	fsr2h,c
 25121  006EF8  CFDE F107          	movff	postinc2,??_encode+3
 25122  006EFC  CFDD F108          	movff	postdec2,??_encode+4
 25123  006F00  0101               	movlb	1	; () banked
 25124  006F02  5115               	movf	encode@sum& (0+255),w,b
 25125  006F04  0101               	movlb	1	; () banked
 25126  006F06  2707               	addwf	(??_encode+3)& (0+255),f,b
 25127  006F08  0101               	movlb	1	; () banked
 25128  006F0A  5116               	movf	(encode@sum+1)& (0+255),w,b
 25129  006F0C  0101               	movlb	1	; () banked
 25130  006F0E  2308               	addwfc	(??_encode+4)& (0+255),f,b
 25131  006F10  C111  F109         	movff	encode@part1,??_encode+5
 25132  006F14  C112  F10A         	movff	encode@part1+1,??_encode+6
 25133  006F18  0E05               	movlw	5
 25134  006F1A  0101               	movlb	1	; () banked
 25135  006F1C  6F0B               	movwf	(??_encode+7)& (0+255),b
 25136  006F1E                     u18035:
 25137  006F1E  0101               	movlb	1	; () banked
 25138  006F20  90D8               	bcf	status,0,c
 25139  006F22  330A               	rrcf	(??_encode+6)& (0+255),f,b
 25140  006F24  3309               	rrcf	(??_encode+5)& (0+255),f,b
 25141  006F26  0101               	movlb	1	; () banked
 25142  006F28  2F0B               	decfsz	(??_encode+7)& (0+255),f,b
 25143  006F2A  D7F9               	goto	u18035
 25144  006F2C  C111  F10C         	movff	encode@part1,??_encode+8
 25145  006F30  C112  F10D         	movff	encode@part1+1,??_encode+9
 25146  006F34  0101               	movlb	1	; () banked
 25147  006F36  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 25148  006F38  3B0D               	swapf	(??_encode+9)& (0+255),f,b
 25149  006F3A  0EF0               	movlw	240
 25150  006F3C  170D               	andwf	(??_encode+9)& (0+255),f,b
 25151  006F3E  510C               	movf	(??_encode+8)& (0+255),w,b
 25152  006F40  0B0F               	andlw	15
 25153  006F42  130D               	iorwf	(??_encode+9)& (0+255),f,b
 25154  006F44  0EF0               	movlw	240
 25155  006F46  170C               	andwf	(??_encode+8)& (0+255),f,b
 25156  006F48  0101               	movlb	1	; () banked
 25157  006F4A  5109               	movf	(??_encode+5)& (0+255),w,b
 25158  006F4C  0101               	movlb	1	; () banked
 25159  006F4E  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25160  006F50  0101               	movlb	1	; () banked
 25161  006F52  510A               	movf	(??_encode+6)& (0+255),w,b
 25162  006F54  0101               	movlb	1	; () banked
 25163  006F56  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 25164  006F58  0101               	movlb	1	; () banked
 25165  006F5A  5111               	movf	encode@part1& (0+255),w,b
 25166  006F5C  0101               	movlb	1	; () banked
 25167  006F5E  270C               	addwf	(??_encode+8)& (0+255),f,b
 25168  006F60  0101               	movlb	1	; () banked
 25169  006F62  5112               	movf	(encode@part1+1)& (0+255),w,b
 25170  006F64  0101               	movlb	1	; () banked
 25171  006F66  230D               	addwfc	(??_encode+9)& (0+255),f,b
 25172  006F68  0101               	movlb	1	; () banked
 25173  006F6A  5107               	movf	(??_encode+3)& (0+255),w,b
 25174  006F6C  0101               	movlb	1	; () banked
 25175  006F6E  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25176  006F70  0101               	movlb	1	; () banked
 25177  006F72  5108               	movf	(??_encode+4)& (0+255),w,b
 25178  006F74  0101               	movlb	1	; () banked
 25179  006F76  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 25180  006F78  0101               	movlb	1	; () banked
 25181  006F7A  510C               	movf	(??_encode+8)& (0+255),w,b
 25182  006F7C  0101               	movlb	1	; () banked
 25183  006F7E  2713               	addwf	encode@part2& (0+255),f,b
 25184  006F80  0101               	movlb	1	; () banked
 25185  006F82  510D               	movf	(??_encode+9)& (0+255),w,b
 25186  006F84  0101               	movlb	1	; () banked
 25187  006F86  2314               	addwfc	(encode@part2+1)& (0+255),f,b
 25188                           
 25189                           ; BSR set to: 1
 25190  006F88  0101               	movlb	1	; () banked
 25191  006F8A  2B10               	incf	encode@i& (0+255),f,b
 25192  006F8C  D727               	goto	l16687
 25193  006F8E                     l16701:
 25194                           
 25195                           ; BSR set to: 1
 25196                           ;drv_mrf_miwi_security.c: 87: }
 25197                           ;drv_mrf_miwi_security.c: 88: text[0]=part1; text[1]=part2;
 25198  006F8E  C100  FFD9         	movff	encode@text,fsr2l
 25199  006F92  C101  FFDA         	movff	encode@text+1,fsr2h
 25200  006F96  C111  FFDE         	movff	encode@part1,postinc2
 25201  006F9A  C112  FFDD         	movff	encode@part1+1,postdec2
 25202                           
 25203                           ; BSR set to: 1
 25204  006F9E  0101               	movlb	1	; () banked
 25205  006FA0  EE20 F002          	lfsr	2,2
 25206  006FA4  5100               	movf	encode@text& (0+255),w,b
 25207  006FA6  26D9               	addwf	fsr2l,f,c
 25208  006FA8  5101               	movf	(encode@text+1)& (0+255),w,b
 25209  006FAA  22DA               	addwfc	fsr2h,f,c
 25210  006FAC  C113  FFDE         	movff	encode@part2,postinc2
 25211  006FB0  C114  FFDD         	movff	encode@part2+1,postdec2
 25212                           
 25213                           ; BSR set to: 1
 25214  006FB4  0012               	return		;funcret
 25215  006FB6                     __end_of_encode:
 25216                           	opt stack 0
 25217                           tblptru	equ	0xFF8
 25218                           tblptrh	equ	0xFF7
 25219                           tblptrl	equ	0xFF6
 25220                           tablat	equ	0xFF5
 25221                           prodh	equ	0xFF4
 25222                           prodl	equ	0xFF3
 25223                           intcon	equ	0xFF2
 25224                           intcon2	equ	0xFF1
 25225                           intcon3	equ	0xFF0
 25226                           indf0	equ	0xFEF
 25227                           postinc0	equ	0xFEE
 25228                           plusw0	equ	0xFEB
 25229                           fsr0h	equ	0xFEA
 25230                           fsr0l	equ	0xFE9
 25231                           wreg	equ	0xFE8
 25232                           indf1	equ	0xFE7
 25233                           postinc1	equ	0xFE6
 25234                           postdec1	equ	0xFE5
 25235                           fsr1h	equ	0xFE2
 25236                           fsr1l	equ	0xFE1
 25237                           indf2	equ	0xFDF
 25238                           postinc2	equ	0xFDE
 25239                           postdec2	equ	0xFDD
 25240                           plusw2	equ	0xFDB
 25241                           fsr2h	equ	0xFDA
 25242                           fsr2l	equ	0xFD9
 25243                           status	equ	0xFD8
 25244                           
 25245 ;; *************** function _BroadcastJitter *****************
 25246 ;; Defined at:
 25247 ;;		line 247 in file "src/miwi/miwi_mesh.c"
 25248 ;; Parameters:    Size  Location     Type
 25249 ;;  range           1    wreg     unsigned char 
 25250 ;; Auto vars:     Size  Location     Type
 25251 ;;  range           1   26[BANK1 ] unsigned char 
 25252 ;;  t2              4   22[BANK1 ] struct _MIWI_TICK
 25253 ;;  t1              4   18[BANK1 ] struct _MIWI_TICK
 25254 ;;  jitter          1   27[BANK1 ] unsigned char 
 25255 ;; Return value:  Size  Location     Type
 25256 ;;		None               void
 25257 ;; Registers used:
 25258 ;;		wreg, status,2, status,0, cstack
 25259 ;; Tracked objects:
 25260 ;;		On entry : 0/0
 25261 ;;		On exit  : 0/0
 25262 ;;		Unchanged: 0/0
 25263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25265 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25266 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25267 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25268 ;;Total ram usage:       18 bytes
 25269 ;; Hardware stack levels used:    1
 25270 ;; Hardware stack levels required when called:   17
 25271 ;; This function calls:
 25272 ;;		_MiWi_TickGet
 25273 ;;		___lbmod
 25274 ;; This function is called by:
 25275 ;;		_MiWiTasks
 25276 ;; This function uses a non-reentrant model
 25277 ;;
 25278                           
 25279                           	psect	text57
 25280  00A374                     __ptext57:
 25281                           	opt stack 0
 25282  00A374                     _BroadcastJitter:
 25283                           	opt stack 12
 25284                           
 25285                           ; BSR set to: 1
 25286                           ;incstack = 0
 25287                           ;BroadcastJitter@range stored from wreg
 25288  00A374  0101               	movlb	1	; () banked
 25289  00A376  6F1A               	movwf	BroadcastJitter@range& (0+255),b
 25290                           
 25291                           ;miwi_mesh.c: 249: uint8_t jitter = TMR1L % range;
 25292  00A378  C11A  F100         	movff	BroadcastJitter@range,___lbmod@divisor	;volatile
 25293  00A37C  50CE               	movf	4046,w,c	;volatile
 25294  00A37E  EC6F  F05B         	call	___lbmod
 25295  00A382  0101               	movlb	1	; () banked
 25296  00A384  6F1B               	movwf	BroadcastJitter@jitter& (0+255),b
 25297                           
 25298                           ;miwi_mesh.c: 250: MIWI_TICK t1, t2;
 25299                           ;miwi_mesh.c: 252: while( jitter > 0 )
 25300  00A386  D04D               	goto	l17757
 25301  00A388                     l17747:
 25302                           
 25303                           ; BSR set to: 1
 25304                           ;miwi_mesh.c: 253: {
 25305                           ;miwi_mesh.c: 254: jitter--;
 25306  00A388  0101               	movlb	1	; () banked
 25307  00A38A  071B               	decf	BroadcastJitter@jitter& (0+255),f,b
 25308                           
 25309                           ; BSR set to: 1
 25310                           ;miwi_mesh.c: 255: t1 = MiWi_TickGet();
 25311  00A38C  EC80  F058         	call	_MiWi_TickGet	;wreg free
 25312  00A390  C100  F112         	movff	?_MiWi_TickGet,BroadcastJitter@t1
 25313  00A394  C101  F113         	movff	?_MiWi_TickGet+1,BroadcastJitter@t1+1
 25314  00A398  C102  F114         	movff	?_MiWi_TickGet+2,BroadcastJitter@t1+2
 25315  00A39C  C103  F115         	movff	?_MiWi_TickGet+3,BroadcastJitter@t1+3
 25316  00A3A0                     l17751:
 25317                           
 25318                           ;miwi_mesh.c: 257: {
 25319                           ;miwi_mesh.c: 258: t2 = MiWi_TickGet();
 25320  00A3A0  EC80  F058         	call	_MiWi_TickGet	;wreg free
 25321  00A3A4  C100  F116         	movff	?_MiWi_TickGet,BroadcastJitter@t2
 25322  00A3A8  C101  F117         	movff	?_MiWi_TickGet+1,BroadcastJitter@t2+1
 25323  00A3AC  C102  F118         	movff	?_MiWi_TickGet+2,BroadcastJitter@t2+2
 25324  00A3B0  C103  F119         	movff	?_MiWi_TickGet+3,BroadcastJitter@t2+3
 25325                           
 25326                           ;miwi_mesh.c: 259: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 25327  00A3B4  C112  F10A         	movff	BroadcastJitter@t1,??_BroadcastJitter
 25328  00A3B8  C113  F10B         	movff	BroadcastJitter@t1+1,??_BroadcastJitter+1
 25329  00A3BC  C114  F10C         	movff	BroadcastJitter@t1+2,??_BroadcastJitter+2
 25330  00A3C0  C115  F10D         	movff	BroadcastJitter@t1+3,??_BroadcastJitter+3
 25331  00A3C4  0101               	movlb	1	; () banked
 25332  00A3C6  1F0A               	comf	??_BroadcastJitter& (0+255),f,b
 25333  00A3C8  1F0B               	comf	(??_BroadcastJitter+1)& (0+255),f,b
 25334  00A3CA  1F0C               	comf	(??_BroadcastJitter+2)& (0+255),f,b
 25335  00A3CC  1F0D               	comf	(??_BroadcastJitter+3)& (0+255),f,b
 25336  00A3CE  2B0A               	incf	??_BroadcastJitter& (0+255),f,b
 25337  00A3D0  0E00               	movlw	0
 25338  00A3D2  230B               	addwfc	(??_BroadcastJitter+1)& (0+255),f,b
 25339  00A3D4  230C               	addwfc	(??_BroadcastJitter+2)& (0+255),f,b
 25340  00A3D6  230D               	addwfc	(??_BroadcastJitter+3)& (0+255),f,b
 25341  00A3D8  0101               	movlb	1	; () banked
 25342  00A3DA  5116               	movf	BroadcastJitter@t2& (0+255),w,b
 25343  00A3DC  0101               	movlb	1	; () banked
 25344  00A3DE  250A               	addwf	??_BroadcastJitter& (0+255),w,b
 25345  00A3E0  0101               	movlb	1	; () banked
 25346  00A3E2  6F0E               	movwf	(??_BroadcastJitter+4)& (0+255),b
 25347  00A3E4  0101               	movlb	1	; () banked
 25348  00A3E6  5117               	movf	(BroadcastJitter@t2+1)& (0+255),w,b
 25349  00A3E8  0101               	movlb	1	; () banked
 25350  00A3EA  210B               	addwfc	(??_BroadcastJitter+1)& (0+255),w,b
 25351  00A3EC  0101               	movlb	1	; () banked
 25352  00A3EE  6F0F               	movwf	(??_BroadcastJitter+5)& (0+255),b
 25353  00A3F0  0101               	movlb	1	; () banked
 25354  00A3F2  5118               	movf	(BroadcastJitter@t2+2)& (0+255),w,b
 25355  00A3F4  0101               	movlb	1	; () banked
 25356  00A3F6  210C               	addwfc	(??_BroadcastJitter+2)& (0+255),w,b
 25357  00A3F8  0101               	movlb	1	; () banked
 25358  00A3FA  6F10               	movwf	(??_BroadcastJitter+6)& (0+255),b
 25359  00A3FC  0101               	movlb	1	; () banked
 25360  00A3FE  5119               	movf	(BroadcastJitter@t2+3)& (0+255),w,b
 25361  00A400  0101               	movlb	1	; () banked
 25362  00A402  210D               	addwfc	(??_BroadcastJitter+3)& (0+255),w,b
 25363  00A404  0101               	movlb	1	; () banked
 25364  00A406  6F11               	movwf	(??_BroadcastJitter+7)& (0+255),b
 25365  00A408  0101               	movlb	1	; () banked
 25366  00A40A  5111               	movf	(??_BroadcastJitter+7)& (0+255),w,b
 25367  00A40C  0101               	movlb	1	; () banked
 25368  00A40E  1110               	iorwf	(??_BroadcastJitter+6)& (0+255),w,b
 25369  00A410  E108               	bnz	l17757
 25370  00A412  0EF5               	movlw	245
 25371  00A414  0101               	movlb	1	; () banked
 25372  00A416  5D0E               	subwf	(??_BroadcastJitter+4)& (0+255),w,b
 25373  00A418  0E01               	movlw	1
 25374  00A41A  0101               	movlb	1	; () banked
 25375  00A41C  590F               	subwfb	(??_BroadcastJitter+5)& (0+255),w,b
 25376  00A41E  A0D8               	btfss	status,0,c
 25377  00A420  D7BF               	goto	l17751
 25378  00A422                     l17757:
 25379                           
 25380                           ; BSR set to: 1
 25381  00A422  0101               	movlb	1	; () banked
 25382  00A424  511B               	movf	BroadcastJitter@jitter& (0+255),w,b
 25383  00A426  0101               	movlb	1	; () banked
 25384  00A428  B4D8               	btfsc	status,2,c
 25385  00A42A  0012               	return	
 25386  00A42C  D7AD               	goto	l17747
 25387  00A42E                     __end_of_BroadcastJitter:
 25388                           	opt stack 0
 25389                           tblptru	equ	0xFF8
 25390                           tblptrh	equ	0xFF7
 25391                           tblptrl	equ	0xFF6
 25392                           tablat	equ	0xFF5
 25393                           prodh	equ	0xFF4
 25394                           prodl	equ	0xFF3
 25395                           intcon	equ	0xFF2
 25396                           intcon2	equ	0xFF1
 25397                           intcon3	equ	0xFF0
 25398                           indf0	equ	0xFEF
 25399                           postinc0	equ	0xFEE
 25400                           plusw0	equ	0xFEB
 25401                           fsr0h	equ	0xFEA
 25402                           fsr0l	equ	0xFE9
 25403                           wreg	equ	0xFE8
 25404                           indf1	equ	0xFE7
 25405                           postinc1	equ	0xFE6
 25406                           postdec1	equ	0xFE5
 25407                           fsr1h	equ	0xFE2
 25408                           fsr1l	equ	0xFE1
 25409                           indf2	equ	0xFDF
 25410                           postinc2	equ	0xFDE
 25411                           postdec2	equ	0xFDD
 25412                           plusw2	equ	0xFDB
 25413                           fsr2h	equ	0xFDA
 25414                           fsr2l	equ	0xFD9
 25415                           status	equ	0xFD8
 25416                           
 25417 ;; *************** function ___lbmod *****************
 25418 ;; Defined at:
 25419 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
 25420 ;; Parameters:    Size  Location     Type
 25421 ;;  dividend        1    wreg     unsigned char 
 25422 ;;  divisor         1    0[BANK1 ] unsigned char 
 25423 ;; Auto vars:     Size  Location     Type
 25424 ;;  dividend        1    1[BANK1 ] unsigned char 
 25425 ;;  rem             1    3[BANK1 ] unsigned char 
 25426 ;;  counter         1    2[BANK1 ] unsigned char 
 25427 ;; Return value:  Size  Location     Type
 25428 ;;                  1    wreg      unsigned char 
 25429 ;; Registers used:
 25430 ;;		wreg, status,2, status,0
 25431 ;; Tracked objects:
 25432 ;;		On entry : 0/0
 25433 ;;		On exit  : 0/0
 25434 ;;		Unchanged: 0/0
 25435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25436 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25437 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25439 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25440 ;;Total ram usage:        4 bytes
 25441 ;; Hardware stack levels used:    1
 25442 ;; Hardware stack levels required when called:   16
 25443 ;; This function calls:
 25444 ;;		Nothing
 25445 ;; This function is called by:
 25446 ;;		_BroadcastJitter
 25447 ;; This function uses a non-reentrant model
 25448 ;;
 25449                           
 25450                           	psect	text58
 25451  00B6DE                     __ptext58:
 25452                           	opt stack 0
 25453  00B6DE                     ___lbmod:
 25454                           	opt stack 12
 25455                           
 25456                           ; BSR set to: 1
 25457                           ;incstack = 0
 25458                           ;___lbmod@dividend stored from wreg
 25459  00B6DE  0101               	movlb	1	; () banked
 25460  00B6E0  6F01               	movwf	___lbmod@dividend& (0+255),b
 25461  00B6E2  0E08               	movlw	8
 25462  00B6E4  0101               	movlb	1	; () banked
 25463  00B6E6  6F02               	movwf	___lbmod@counter& (0+255),b
 25464  00B6E8  0E00               	movlw	0
 25465  00B6EA  0101               	movlb	1	; () banked
 25466  00B6EC  6F03               	movwf	___lbmod@rem& (0+255),b
 25467  00B6EE                     l17563:
 25468                           
 25469                           ; BSR set to: 1
 25470  00B6EE  90D8               	bcf	status,0,c
 25471  00B6F0  0101               	movlb	1	; () banked
 25472  00B6F2  3501               	rlcf	___lbmod@dividend& (0+255),w,b
 25473  00B6F4  0101               	movlb	1	; () banked
 25474  00B6F6  3503               	rlcf	___lbmod@rem& (0+255),w,b
 25475  00B6F8  0101               	movlb	1	; () banked
 25476  00B6FA  6F03               	movwf	___lbmod@rem& (0+255),b
 25477                           
 25478                           ; BSR set to: 1
 25479  00B6FC  0101               	movlb	1	; () banked
 25480  00B6FE  90D8               	bcf	status,0,c
 25481  00B700  3701               	rlcf	___lbmod@dividend& (0+255),f,b
 25482                           
 25483                           ; BSR set to: 1
 25484  00B702  0101               	movlb	1	; () banked
 25485  00B704  5100               	movf	___lbmod@divisor& (0+255),w,b
 25486  00B706  0101               	movlb	1	; () banked
 25487  00B708  5D03               	subwf	___lbmod@rem& (0+255),w,b
 25488  00B70A  A0D8               	btfss	status,0,c
 25489  00B70C  D004               	goto	l17571
 25490                           
 25491                           ; BSR set to: 1
 25492  00B70E  0101               	movlb	1	; () banked
 25493  00B710  5100               	movf	___lbmod@divisor& (0+255),w,b
 25494  00B712  0101               	movlb	1	; () banked
 25495  00B714  5F03               	subwf	___lbmod@rem& (0+255),f,b
 25496  00B716                     l17571:
 25497                           
 25498                           ; BSR set to: 1
 25499  00B716  0101               	movlb	1	; () banked
 25500  00B718  2F02               	decfsz	___lbmod@counter& (0+255),f,b
 25501  00B71A  D7E9               	goto	l17563
 25502                           
 25503                           ; BSR set to: 1
 25504                           
 25505                           ; BSR set to: 1
 25506  00B71C  0101               	movlb	1	; () banked
 25507  00B71E  5103               	movf	___lbmod@rem& (0+255),w,b
 25508  00B720  0012               	return	
 25509  00B722                     __end_of___lbmod:
 25510                           	opt stack 0
 25511                           tblptru	equ	0xFF8
 25512                           tblptrh	equ	0xFF7
 25513                           tblptrl	equ	0xFF6
 25514                           tablat	equ	0xFF5
 25515                           prodh	equ	0xFF4
 25516                           prodl	equ	0xFF3
 25517                           intcon	equ	0xFF2
 25518                           intcon2	equ	0xFF1
 25519                           intcon3	equ	0xFF0
 25520                           indf0	equ	0xFEF
 25521                           postinc0	equ	0xFEE
 25522                           plusw0	equ	0xFEB
 25523                           fsr0h	equ	0xFEA
 25524                           fsr0l	equ	0xFE9
 25525                           wreg	equ	0xFE8
 25526                           indf1	equ	0xFE7
 25527                           postinc1	equ	0xFE6
 25528                           postdec1	equ	0xFE5
 25529                           fsr1h	equ	0xFE2
 25530                           fsr1l	equ	0xFE1
 25531                           indf2	equ	0xFDF
 25532                           postinc2	equ	0xFDE
 25533                           postdec2	equ	0xFDD
 25534                           plusw2	equ	0xFDB
 25535                           fsr2h	equ	0xFDA
 25536                           fsr2l	equ	0xFD9
 25537                           status	equ	0xFD8
 25538                           
 25539 ;; *************** function _AddNodeToNetworkTable *****************
 25540 ;; Defined at:
 25541 ;;		line 3373 in file "src/miwi/miwi_mesh.c"
 25542 ;; Parameters:    Size  Location     Type
 25543 ;;		None
 25544 ;; Auto vars:     Size  Location     Type
 25545 ;;  i               1    8[BANK1 ] unsigned char 
 25546 ;;  handle          1    9[BANK1 ] unsigned char 
 25547 ;; Return value:  Size  Location     Type
 25548 ;;                  1    wreg      unsigned char 
 25549 ;; Registers used:
 25550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25551 ;; Tracked objects:
 25552 ;;		On entry : 0/0
 25553 ;;		On exit  : 0/0
 25554 ;;		Unchanged: 0/0
 25555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25557 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25558 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25559 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25560 ;;Total ram usage:        4 bytes
 25561 ;; Hardware stack levels used:    1
 25562 ;; Hardware stack levels required when called:   17
 25563 ;; This function calls:
 25564 ;;		_SearchForLongAddress
 25565 ;;		_SearchForShortAddress
 25566 ;;		_findNextNetworkEntry
 25567 ;; This function is called by:
 25568 ;;		_MiWiTasks
 25569 ;;		_OpenSocket
 25570 ;; This function uses a non-reentrant model
 25571 ;;
 25572                           
 25573                           	psect	text59
 25574  008C2C                     __ptext59:
 25575                           	opt stack 0
 25576  008C2C                     _AddNodeToNetworkTable:
 25577                           	opt stack 12
 25578                           
 25579                           ;miwi_mesh.c: 3375: uint8_t handle = 0xFF;
 25580                           
 25581                           ; BSR set to: 1
 25582                           ;incstack = 0
 25583  008C2C  0101               	movlb	1	; () banked
 25584  008C2E  6909               	setf	AddNodeToNetworkTable@handle& (0+255),b
 25585                           
 25586                           ;miwi_mesh.c: 3377: if(tempNodeStatus.bits.longAddressValid)
 25587  008C30  0100               	movlb	0	; () banked
 25588  008C32  A5A0               	btfss	_tempNodeStatus& (0+255),2,b
 25589  008C34  D003               	goto	l899
 25590                           
 25591                           ; BSR set to: 0
 25592                           ;miwi_mesh.c: 3378: {
 25593                           ;miwi_mesh.c: 3379: handle = SearchForLongAddress();
 25594  008C36  ECB4  F04E         	call	_SearchForLongAddress	;wreg free
 25595  008C3A  D005               	goto	L10
 25596  008C3C                     l899:
 25597                           
 25598                           ; BSR set to: 0
 25599                           ;miwi_mesh.c: 3381: else
 25600                           ;miwi_mesh.c: 3382: {
 25601                           ;miwi_mesh.c: 3383: if(tempNodeStatus.bits.shortAddressValid)
 25602  008C3C  0100               	movlb	0	; () banked
 25603  008C3E  A7A0               	btfss	_tempNodeStatus& (0+255),3,b
 25604  008C40  D004               	goto	l17765
 25605                           
 25606                           ; BSR set to: 0
 25607                           ;miwi_mesh.c: 3384: {
 25608                           ;miwi_mesh.c: 3385: handle = SearchForShortAddress();
 25609  008C42  EC87  F057         	call	_SearchForShortAddress	;wreg free
 25610  008C46                     L10:
 25611  008C46  0101               	movlb	1	; () banked
 25612  008C48  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 25613  008C4A                     l17765:
 25614                           
 25615                           ;miwi_mesh.c: 3386: }
 25616                           ;miwi_mesh.c: 3387: }
 25617                           ;miwi_mesh.c: 3389: if(handle==0xFF)
 25618  008C4A  0101               	movlb	1	; () banked
 25619  008C4C  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 25620  008C4E  A4D8               	btfss	status,2,c
 25621  008C50  D004               	goto	l17769
 25622                           
 25623                           ; BSR set to: 1
 25624                           ;miwi_mesh.c: 3390: {
 25625                           ;miwi_mesh.c: 3391: handle = findNextNetworkEntry();
 25626  008C52  ECD3  F05B         	call	_findNextNetworkEntry	;wreg free
 25627  008C56  0101               	movlb	1	; () banked
 25628  008C58  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 25629  008C5A                     l17769:
 25630                           
 25631                           ; BSR set to: 1
 25632                           ;miwi_mesh.c: 3392: }
 25633                           ;miwi_mesh.c: 3394: if(handle != 0xFF)
 25634  008C5A  0101               	movlb	1	; () banked
 25635  008C5C  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 25636  008C5E  B4D8               	btfsc	status,2,c
 25637  008C60  D074               	goto	l17789
 25638                           
 25639                           ; BSR set to: 1
 25640                           ;miwi_mesh.c: 3395: {
 25641                           ;miwi_mesh.c: 3401: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 25642  008C62  0101               	movlb	1	; () banked
 25643  008C64  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25644  008C66  0D09               	mullw	9
 25645  008C68  0E08               	movlw	8
 25646  008C6A  26F3               	addwf	prodl,f,c
 25647  008C6C  0E00               	movlw	0
 25648  008C6E  22F4               	addwfc	prodh,f,c
 25649  008C70  0E00               	movlw	low _ConnectionTable
 25650  008C72  24F3               	addwf	prodl,w,c
 25651  008C74  6ED9               	movwf	fsr2l,c
 25652  008C76  0E06               	movlw	high _ConnectionTable
 25653  008C78  20F4               	addwfc	prodh,w,c
 25654  008C7A  6EDA               	movwf	fsr2h,c
 25655  008C7C  C0A0  FFDF         	movff	_tempNodeStatus,indf2
 25656                           
 25657                           ; BSR set to: 1
 25658                           ;miwi_mesh.c: 3402: if(tempNodeStatus.bits.longAddressValid)
 25659  008C80  0100               	movlb	0	; () banked
 25660  008C82  A5A0               	btfss	_tempNodeStatus& (0+255),2,b
 25661  008C84  D034               	goto	l904
 25662                           
 25663                           ; BSR set to: 0
 25664                           ;miwi_mesh.c: 3403: {
 25665                           ;miwi_mesh.c: 3404: uint8_t i;
 25666                           ;miwi_mesh.c: 3405: for(i = 0; i < 4; i++)
 25667  008C86  0E00               	movlw	0
 25668  008C88  0101               	movlb	1	; () banked
 25669  008C8A  6F08               	movwf	AddNodeToNetworkTable@i& (0+255),b
 25670  008C8C                     l17777:
 25671                           
 25672                           ; BSR set to: 1
 25673  008C8C  0E03               	movlw	3
 25674  008C8E  0101               	movlb	1	; () banked
 25675  008C90  6508               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 25676  008C92  D001               	goto	l17781
 25677  008C94  D02C               	goto	l904
 25678  008C96                     l17781:
 25679                           
 25680                           ; BSR set to: 1
 25681                           ;miwi_mesh.c: 3406: {
 25682                           ;miwi_mesh.c: 3407: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 25683  008C96  0101               	movlb	1	; () banked
 25684  008C98  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 25685  008C9A  0D01               	mullw	1
 25686  008C9C  0EA6               	movlw	low _tempLongAddress
 25687  008C9E  24F3               	addwf	prodl,w,c
 25688  008CA0  6ED9               	movwf	fsr2l,c
 25689  008CA2  0E01               	movlw	high _tempLongAddress
 25690  008CA4  20F4               	addwfc	prodh,w,c
 25691  008CA6  6EDA               	movwf	fsr2h,c
 25692  008CA8  0101               	movlb	1	; () banked
 25693  008CAA  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 25694  008CAC  0D01               	mullw	1
 25695  008CAE  0E04               	movlw	4
 25696  008CB0  26F3               	addwf	prodl,f,c
 25697  008CB2  0E00               	movlw	0
 25698  008CB4  22F4               	addwfc	prodh,f,c
 25699  008CB6  0E00               	movlw	low _ConnectionTable
 25700  008CB8  0101               	movlb	1	; () banked
 25701  008CBA  6F06               	movwf	??_AddNodeToNetworkTable& (0+255),b
 25702  008CBC  0E06               	movlw	high _ConnectionTable
 25703  008CBE  0101               	movlb	1	; () banked
 25704  008CC0  6F07               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 25705  008CC2  50F3               	movf	prodl,w,c
 25706  008CC4  0101               	movlb	1	; () banked
 25707  008CC6  2706               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 25708  008CC8  50F4               	movf	prodh,w,c
 25709  008CCA  0101               	movlb	1	; () banked
 25710  008CCC  2307               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 25711  008CCE  0101               	movlb	1	; () banked
 25712  008CD0  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25713  008CD2  0D09               	mullw	9
 25714  008CD4  50F3               	movf	prodl,w,c
 25715  008CD6  0101               	movlb	1	; () banked
 25716  008CD8  2506               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 25717  008CDA  6EE1               	movwf	fsr1l,c
 25718  008CDC  50F4               	movf	prodh,w,c
 25719  008CDE  0101               	movlb	1	; () banked
 25720  008CE0  2107               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 25721  008CE2  6EE2               	movwf	fsr1h,c
 25722  008CE4  CFDF FFE7          	movff	indf2,indf1
 25723                           
 25724                           ; BSR set to: 1
 25725  008CE8  0101               	movlb	1	; () banked
 25726  008CEA  2B08               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 25727  008CEC  D7CF               	goto	l17777
 25728  008CEE                     l904:
 25729                           
 25730                           ;miwi_mesh.c: 3408: }
 25731                           ;miwi_mesh.c: 3409: }
 25732                           ;miwi_mesh.c: 3411: if(tempNodeStatus.bits.shortAddressValid)
 25733  008CEE  0100               	movlb	0	; () banked
 25734  008CF0  A7A0               	btfss	_tempNodeStatus& (0+255),3,b
 25735  008CF2  D011               	goto	l907
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;miwi_mesh.c: 3412: {
 25739                           ;miwi_mesh.c: 3413: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 25740  008CF4  0101               	movlb	1	; () banked
 25741  008CF6  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25742  008CF8  0D09               	mullw	9
 25743  008CFA  0E02               	movlw	2
 25744  008CFC  26F3               	addwf	prodl,f,c
 25745  008CFE  0E00               	movlw	0
 25746  008D00  22F4               	addwfc	prodh,f,c
 25747  008D02  0E00               	movlw	low _ConnectionTable
 25748  008D04  24F3               	addwf	prodl,w,c
 25749  008D06  6ED9               	movwf	fsr2l,c
 25750  008D08  0E06               	movlw	high _ConnectionTable
 25751  008D0A  20F4               	addwfc	prodh,w,c
 25752  008D0C  6EDA               	movwf	fsr2h,c
 25753  008D0E  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 25754  008D12  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 25755  008D16                     l907:
 25756                           
 25757                           ;miwi_mesh.c: 3414: }
 25758                           ;miwi_mesh.c: 3416: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 25759  008D16  0101               	movlb	1	; () banked
 25760  008D18  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25761  008D1A  0D09               	mullw	9
 25762  008D1C  0E00               	movlw	low _ConnectionTable
 25763  008D1E  24F3               	addwf	prodl,w,c
 25764  008D20  6ED9               	movwf	fsr2l,c
 25765  008D22  0E06               	movlw	high _ConnectionTable
 25766  008D24  20F4               	addwfc	prodh,w,c
 25767  008D26  6EDA               	movwf	fsr2h,c
 25768  008D28  C1BB  FFDE         	movff	_tempPANID,postinc2
 25769  008D2C  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 25770                           
 25771                           ;miwi_mesh.c: 3418: IncomingFrameCounter[handle].Val = 0;
 25772  008D30  0101               	movlb	1	; () banked
 25773  008D32  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25774  008D34  0D04               	mullw	4
 25775  008D36  0E00               	movlw	low _IncomingFrameCounter
 25776  008D38  24F3               	addwf	prodl,w,c
 25777  008D3A  6ED9               	movwf	fsr2l,c
 25778  008D3C  0E05               	movlw	high _IncomingFrameCounter
 25779  008D3E  20F4               	addwfc	prodh,w,c
 25780  008D40  6EDA               	movwf	fsr2h,c
 25781  008D42  6ADE               	clrf	postinc2,c
 25782  008D44  6ADE               	clrf	postinc2,c
 25783  008D46  6ADE               	clrf	postinc2,c
 25784  008D48  6ADD               	clrf	postdec2,c
 25785  008D4A                     l17789:
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;miwi_mesh.c: 3420: }
 25789                           ;miwi_mesh.c: 3422: return handle;
 25790  008D4A  0101               	movlb	1	; () banked
 25791  008D4C  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25792  008D4E  0012               	return	
 25793  008D50                     __end_of_AddNodeToNetworkTable:
 25794                           	opt stack 0
 25795                           tblptru	equ	0xFF8
 25796                           tblptrh	equ	0xFF7
 25797                           tblptrl	equ	0xFF6
 25798                           tablat	equ	0xFF5
 25799                           prodh	equ	0xFF4
 25800                           prodl	equ	0xFF3
 25801                           intcon	equ	0xFF2
 25802                           intcon2	equ	0xFF1
 25803                           intcon3	equ	0xFF0
 25804                           indf0	equ	0xFEF
 25805                           postinc0	equ	0xFEE
 25806                           plusw0	equ	0xFEB
 25807                           fsr0h	equ	0xFEA
 25808                           fsr0l	equ	0xFE9
 25809                           wreg	equ	0xFE8
 25810                           indf1	equ	0xFE7
 25811                           postinc1	equ	0xFE6
 25812                           postdec1	equ	0xFE5
 25813                           fsr1h	equ	0xFE2
 25814                           fsr1l	equ	0xFE1
 25815                           indf2	equ	0xFDF
 25816                           postinc2	equ	0xFDE
 25817                           postdec2	equ	0xFDD
 25818                           plusw2	equ	0xFDB
 25819                           fsr2h	equ	0xFDA
 25820                           fsr2l	equ	0xFD9
 25821                           status	equ	0xFD8
 25822                           
 25823 ;; *************** function _findNextNetworkEntry *****************
 25824 ;; Defined at:
 25825 ;;		line 2584 in file "src/miwi/miwi_mesh.c"
 25826 ;; Parameters:    Size  Location     Type
 25827 ;;		None
 25828 ;; Auto vars:     Size  Location     Type
 25829 ;;  i               1    0[BANK1 ] unsigned char 
 25830 ;; Return value:  Size  Location     Type
 25831 ;;                  1    wreg      unsigned char 
 25832 ;; Registers used:
 25833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25834 ;; Tracked objects:
 25835 ;;		On entry : 0/0
 25836 ;;		On exit  : 0/0
 25837 ;;		Unchanged: 0/0
 25838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25842 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25843 ;;Total ram usage:        1 bytes
 25844 ;; Hardware stack levels used:    1
 25845 ;; Hardware stack levels required when called:   16
 25846 ;; This function calls:
 25847 ;;		Nothing
 25848 ;; This function is called by:
 25849 ;;		_MiWiTasks
 25850 ;;		_AddNodeToNetworkTable
 25851 ;;		_MiApp_EstablishConnection
 25852 ;; This function uses a non-reentrant model
 25853 ;;
 25854                           
 25855                           	psect	text60
 25856  00B7A6                     __ptext60:
 25857                           	opt stack 0
 25858  00B7A6                     _findNextNetworkEntry:
 25859                           	opt stack 13
 25860                           
 25861                           ;miwi_mesh.c: 2586: uint8_t i;
 25862                           ;miwi_mesh.c: 2588: for(i=0;i<64;i++)
 25863                           
 25864                           ; BSR set to: 1
 25865                           ;incstack = 0
 25866  00B7A6  0E00               	movlw	0
 25867  00B7A8  0101               	movlb	1	; () banked
 25868  00B7AA  6F00               	movwf	findNextNetworkEntry@i& (0+255),b
 25869  00B7AC                     l17507:
 25870                           
 25871                           ; BSR set to: 1
 25872  00B7AC  0E3F               	movlw	63
 25873  00B7AE  0101               	movlb	1	; () banked
 25874  00B7B0  6500               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 25875  00B7B2  D001               	goto	l17511
 25876  00B7B4  D015               	goto	l17521
 25877  00B7B6                     l17511:
 25878                           
 25879                           ; BSR set to: 1
 25880                           ;miwi_mesh.c: 2589: {
 25881                           ;miwi_mesh.c: 2590: if(ConnectionTable[i].status.bits.isValid == 0)
 25882  00B7B6  0101               	movlb	1	; () banked
 25883  00B7B8  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 25884  00B7BA  0D09               	mullw	9
 25885  00B7BC  0E08               	movlw	8
 25886  00B7BE  26F3               	addwf	prodl,f,c
 25887  00B7C0  0E00               	movlw	0
 25888  00B7C2  22F4               	addwfc	prodh,f,c
 25889  00B7C4  0E00               	movlw	low _ConnectionTable
 25890  00B7C6  24F3               	addwf	prodl,w,c
 25891  00B7C8  6ED9               	movwf	fsr2l,c
 25892  00B7CA  0E06               	movlw	high _ConnectionTable
 25893  00B7CC  20F4               	addwfc	prodh,w,c
 25894  00B7CE  6EDA               	movwf	fsr2h,c
 25895  00B7D0  BEDF               	btfsc	indf2,7,c
 25896  00B7D2  D003               	goto	l17517
 25897                           
 25898                           ; BSR set to: 1
 25899                           ;miwi_mesh.c: 2591: {
 25900                           ;miwi_mesh.c: 2592: return i;
 25901  00B7D4  0101               	movlb	1	; () banked
 25902  00B7D6  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 25903                           
 25904                           ; BSR set to: 1
 25905  00B7D8  0012               	return	
 25906  00B7DA                     l17517:
 25907                           
 25908                           ; BSR set to: 1
 25909  00B7DA  0101               	movlb	1	; () banked
 25910  00B7DC  2B00               	incf	findNextNetworkEntry@i& (0+255),f,b
 25911  00B7DE  D7E6               	goto	l17507
 25912  00B7E0                     l17521:
 25913                           
 25914                           ; BSR set to: 1
 25915                           ;miwi_mesh.c: 2593: }
 25916                           ;miwi_mesh.c: 2594: }
 25917                           ;miwi_mesh.c: 2595: return 0xFF;
 25918  00B7E0  0EFF               	movlw	255
 25919  00B7E2  0012               	return	
 25920  00B7E4                     __end_of_findNextNetworkEntry:
 25921                           	opt stack 0
 25922                           tblptru	equ	0xFF8
 25923                           tblptrh	equ	0xFF7
 25924                           tblptrl	equ	0xFF6
 25925                           tablat	equ	0xFF5
 25926                           prodh	equ	0xFF4
 25927                           prodl	equ	0xFF3
 25928                           intcon	equ	0xFF2
 25929                           intcon2	equ	0xFF1
 25930                           intcon3	equ	0xFF0
 25931                           indf0	equ	0xFEF
 25932                           postinc0	equ	0xFEE
 25933                           plusw0	equ	0xFEB
 25934                           fsr0h	equ	0xFEA
 25935                           fsr0l	equ	0xFE9
 25936                           wreg	equ	0xFE8
 25937                           indf1	equ	0xFE7
 25938                           postinc1	equ	0xFE6
 25939                           postdec1	equ	0xFE5
 25940                           fsr1h	equ	0xFE2
 25941                           fsr1l	equ	0xFE1
 25942                           indf2	equ	0xFDF
 25943                           postinc2	equ	0xFDE
 25944                           postdec2	equ	0xFDD
 25945                           plusw2	equ	0xFDB
 25946                           fsr2h	equ	0xFDA
 25947                           fsr2l	equ	0xFD9
 25948                           status	equ	0xFD8
 25949                           
 25950 ;; *************** function _SearchForShortAddress *****************
 25951 ;; Defined at:
 25952 ;;		line 3246 in file "src/miwi/miwi_mesh.c"
 25953 ;; Parameters:    Size  Location     Type
 25954 ;;		None
 25955 ;; Auto vars:     Size  Location     Type
 25956 ;;  i               1    2[BANK1 ] unsigned char 
 25957 ;; Return value:  Size  Location     Type
 25958 ;;                  1    wreg      unsigned char 
 25959 ;; Registers used:
 25960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25961 ;; Tracked objects:
 25962 ;;		On entry : 0/0
 25963 ;;		On exit  : 0/0
 25964 ;;		Unchanged: 0/0
 25965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25967 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25968 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25969 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25970 ;;Total ram usage:        3 bytes
 25971 ;; Hardware stack levels used:    1
 25972 ;; Hardware stack levels required when called:   16
 25973 ;; This function calls:
 25974 ;;		Nothing
 25975 ;; This function is called by:
 25976 ;;		_MiWiTasks
 25977 ;;		_RouteMessage
 25978 ;;		_AddNodeToNetworkTable
 25979 ;;		_OpenSocket
 25980 ;; This function uses a non-reentrant model
 25981 ;;
 25982                           
 25983                           	psect	text61
 25984  00AF0E                     __ptext61:
 25985                           	opt stack 0
 25986  00AF0E                     _SearchForShortAddress:
 25987                           	opt stack 11
 25988                           
 25989                           ;miwi_mesh.c: 3248: uint8_t i;
 25990                           ;miwi_mesh.c: 3250: for(i=0;i<64;i++)
 25991                           
 25992                           ; BSR set to: 1
 25993                           ;incstack = 0
 25994  00AF0E  0E00               	movlw	0
 25995  00AF10  0101               	movlb	1	; () banked
 25996  00AF12  6F02               	movwf	SearchForShortAddress@i& (0+255),b
 25997  00AF14                     l17119:
 25998                           
 25999                           ; BSR set to: 1
 26000  00AF14  0E3F               	movlw	63
 26001  00AF16  0101               	movlb	1	; () banked
 26002  00AF18  6502               	cpfsgt	SearchForShortAddress@i& (0+255),b
 26003  00AF1A  D001               	goto	l17123
 26004  00AF1C  D03A               	goto	l17137
 26005  00AF1E                     l17123:
 26006                           
 26007                           ; BSR set to: 1
 26008                           ;miwi_mesh.c: 3251: {
 26009                           ;miwi_mesh.c: 3252: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 26010  00AF1E  0101               	movlb	1	; () banked
 26011  00AF20  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 26012  00AF22  0D09               	mullw	9
 26013  00AF24  0E08               	movlw	8
 26014  00AF26  26F3               	addwf	prodl,f,c
 26015  00AF28  0E00               	movlw	0
 26016  00AF2A  22F4               	addwfc	prodh,f,c
 26017  00AF2C  0E00               	movlw	low _ConnectionTable
 26018  00AF2E  24F3               	addwf	prodl,w,c
 26019  00AF30  6ED9               	movwf	fsr2l,c
 26020  00AF32  0E06               	movlw	high _ConnectionTable
 26021  00AF34  20F4               	addwfc	prodh,w,c
 26022  00AF36  6EDA               	movwf	fsr2h,c
 26023  00AF38  AEDF               	btfss	indf2,7,c
 26024  00AF3A  D028               	goto	l17133
 26025                           
 26026                           ; BSR set to: 1
 26027  00AF3C  0101               	movlb	1	; () banked
 26028  00AF3E  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 26029  00AF40  0D09               	mullw	9
 26030  00AF42  0E08               	movlw	8
 26031  00AF44  26F3               	addwf	prodl,f,c
 26032  00AF46  0E00               	movlw	0
 26033  00AF48  22F4               	addwfc	prodh,f,c
 26034  00AF4A  0E00               	movlw	low _ConnectionTable
 26035  00AF4C  24F3               	addwf	prodl,w,c
 26036  00AF4E  6ED9               	movwf	fsr2l,c
 26037  00AF50  0E06               	movlw	high _ConnectionTable
 26038  00AF52  20F4               	addwfc	prodh,w,c
 26039  00AF54  6EDA               	movwf	fsr2h,c
 26040  00AF56  A6DF               	btfss	indf2,3,c
 26041  00AF58  D019               	goto	l17133
 26042                           
 26043                           ; BSR set to: 1
 26044                           ;miwi_mesh.c: 3253: {
 26045                           ;miwi_mesh.c: 3254: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 26046  00AF5A  0101               	movlb	1	; () banked
 26047  00AF5C  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 26048  00AF5E  0D09               	mullw	9
 26049  00AF60  0E02               	movlw	2
 26050  00AF62  26F3               	addwf	prodl,f,c
 26051  00AF64  0E00               	movlw	0
 26052  00AF66  22F4               	addwfc	prodh,f,c
 26053  00AF68  0E00               	movlw	low _ConnectionTable
 26054  00AF6A  24F3               	addwf	prodl,w,c
 26055  00AF6C  6ED9               	movwf	fsr2l,c
 26056  00AF6E  0E06               	movlw	high _ConnectionTable
 26057  00AF70  20F4               	addwfc	prodh,w,c
 26058  00AF72  6EDA               	movwf	fsr2h,c
 26059  00AF74  0101               	movlb	1	; () banked
 26060  00AF76  51F4               	movf	_tempShortAddress& (0+255),w,b
 26061  00AF78  18DE               	xorwf	postinc2,w,c
 26062  00AF7A  E108               	bnz	l17133
 26063  00AF7C  0101               	movlb	1	; () banked
 26064  00AF7E  51F5               	movf	(_tempShortAddress+1)& (0+255),w,b
 26065  00AF80  18DE               	xorwf	postinc2,w,c
 26066  00AF82  A4D8               	btfss	status,2,c
 26067  00AF84  D003               	goto	l17133
 26068                           
 26069                           ; BSR set to: 1
 26070                           ;miwi_mesh.c: 3255: {
 26071                           ;miwi_mesh.c: 3256: return i;
 26072  00AF86  0101               	movlb	1	; () banked
 26073  00AF88  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 26074                           
 26075                           ; BSR set to: 1
 26076  00AF8A  0012               	return	
 26077  00AF8C                     l17133:
 26078                           
 26079                           ; BSR set to: 1
 26080  00AF8C  0101               	movlb	1	; () banked
 26081  00AF8E  2B02               	incf	SearchForShortAddress@i& (0+255),f,b
 26082  00AF90  D7C1               	goto	l17119
 26083  00AF92                     l17137:
 26084                           
 26085                           ; BSR set to: 1
 26086                           ;miwi_mesh.c: 3257: }
 26087                           ;miwi_mesh.c: 3258: }
 26088                           ;miwi_mesh.c: 3259: }
 26089                           ;miwi_mesh.c: 3260: return 0xFF;
 26090  00AF92  0EFF               	movlw	255
 26091  00AF94  0012               	return	
 26092  00AF96                     __end_of_SearchForShortAddress:
 26093                           	opt stack 0
 26094                           tblptru	equ	0xFF8
 26095                           tblptrh	equ	0xFF7
 26096                           tblptrl	equ	0xFF6
 26097                           tablat	equ	0xFF5
 26098                           prodh	equ	0xFF4
 26099                           prodl	equ	0xFF3
 26100                           intcon	equ	0xFF2
 26101                           intcon2	equ	0xFF1
 26102                           intcon3	equ	0xFF0
 26103                           indf0	equ	0xFEF
 26104                           postinc0	equ	0xFEE
 26105                           plusw0	equ	0xFEB
 26106                           fsr0h	equ	0xFEA
 26107                           fsr0l	equ	0xFE9
 26108                           wreg	equ	0xFE8
 26109                           indf1	equ	0xFE7
 26110                           postinc1	equ	0xFE6
 26111                           postdec1	equ	0xFE5
 26112                           fsr1h	equ	0xFE2
 26113                           fsr1l	equ	0xFE1
 26114                           indf2	equ	0xFDF
 26115                           postinc2	equ	0xFDE
 26116                           postdec2	equ	0xFDD
 26117                           plusw2	equ	0xFDB
 26118                           fsr2h	equ	0xFDA
 26119                           fsr2l	equ	0xFD9
 26120                           status	equ	0xFD8
 26121                           
 26122 ;; *************** function _SearchForLongAddress *****************
 26123 ;; Defined at:
 26124 ;;		line 3327 in file "src/miwi/miwi_mesh.c"
 26125 ;; Parameters:    Size  Location     Type
 26126 ;;		None
 26127 ;; Auto vars:     Size  Location     Type
 26128 ;;  i               1    5[BANK1 ] unsigned char 
 26129 ;;  j               1    4[BANK1 ] unsigned char 
 26130 ;; Return value:  Size  Location     Type
 26131 ;;                  1    wreg      unsigned char 
 26132 ;; Registers used:
 26133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26134 ;; Tracked objects:
 26135 ;;		On entry : 0/0
 26136 ;;		On exit  : 0/0
 26137 ;;		Unchanged: 0/0
 26138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26140 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26141 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26142 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26143 ;;Total ram usage:        6 bytes
 26144 ;; Hardware stack levels used:    1
 26145 ;; Hardware stack levels required when called:   16
 26146 ;; This function calls:
 26147 ;;		Nothing
 26148 ;; This function is called by:
 26149 ;;		_MiWiTasks
 26150 ;;		_AddNodeToNetworkTable
 26151 ;;		_MiApp_UnicastAddress
 26152 ;;		_MiApp_EstablishConnection
 26153 ;; This function uses a non-reentrant model
 26154 ;;
 26155                           
 26156                           	psect	text62
 26157  009D68                     __ptext62:
 26158                           	opt stack 0
 26159  009D68                     _SearchForLongAddress:
 26160                           	opt stack 13
 26161                           
 26162                           ;miwi_mesh.c: 3329: uint8_t i,j;
 26163                           ;miwi_mesh.c: 3331: for(i=0;i<64;i++)
 26164                           
 26165                           ; BSR set to: 1
 26166                           ;incstack = 0
 26167  009D68  0E00               	movlw	0
 26168  009D6A  0101               	movlb	1	; () banked
 26169  009D6C  6F05               	movwf	SearchForLongAddress@i& (0+255),b
 26170  009D6E                     l17527:
 26171                           
 26172                           ; BSR set to: 1
 26173  009D6E  0E3F               	movlw	63
 26174  009D70  0101               	movlb	1	; () banked
 26175  009D72  6505               	cpfsgt	SearchForLongAddress@i& (0+255),b
 26176  009D74  D001               	goto	l17531
 26177  009D76  D05A               	goto	l17557
 26178  009D78                     l17531:
 26179                           
 26180                           ; BSR set to: 1
 26181                           ;miwi_mesh.c: 3332: {
 26182                           ;miwi_mesh.c: 3333: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 26183  009D78  0101               	movlb	1	; () banked
 26184  009D7A  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26185  009D7C  0D09               	mullw	9
 26186  009D7E  0E08               	movlw	8
 26187  009D80  26F3               	addwf	prodl,f,c
 26188  009D82  0E00               	movlw	0
 26189  009D84  22F4               	addwfc	prodh,f,c
 26190  009D86  0E00               	movlw	low _ConnectionTable
 26191  009D88  24F3               	addwf	prodl,w,c
 26192  009D8A  6ED9               	movwf	fsr2l,c
 26193  009D8C  0E06               	movlw	high _ConnectionTable
 26194  009D8E  20F4               	addwfc	prodh,w,c
 26195  009D90  6EDA               	movwf	fsr2h,c
 26196  009D92  AEDF               	btfss	indf2,7,c
 26197  009D94  D048               	goto	l17553
 26198                           
 26199                           ; BSR set to: 1
 26200  009D96  0101               	movlb	1	; () banked
 26201  009D98  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26202  009D9A  0D09               	mullw	9
 26203  009D9C  0E08               	movlw	8
 26204  009D9E  26F3               	addwf	prodl,f,c
 26205  009DA0  0E00               	movlw	0
 26206  009DA2  22F4               	addwfc	prodh,f,c
 26207  009DA4  0E00               	movlw	low _ConnectionTable
 26208  009DA6  24F3               	addwf	prodl,w,c
 26209  009DA8  6ED9               	movwf	fsr2l,c
 26210  009DAA  0E06               	movlw	high _ConnectionTable
 26211  009DAC  20F4               	addwfc	prodh,w,c
 26212  009DAE  6EDA               	movwf	fsr2h,c
 26213  009DB0  A4DF               	btfss	indf2,2,c
 26214  009DB2  D039               	goto	l17553
 26215                           
 26216                           ; BSR set to: 1
 26217                           ;miwi_mesh.c: 3334: {
 26218                           ;miwi_mesh.c: 3335: for(j=0;j<4;j++)
 26219  009DB4  0E00               	movlw	0
 26220  009DB6  0101               	movlb	1	; () banked
 26221  009DB8  6F04               	movwf	SearchForLongAddress@j& (0+255),b
 26222  009DBA                     l17537:
 26223                           
 26224                           ; BSR set to: 1
 26225  009DBA  0E03               	movlw	3
 26226  009DBC  0101               	movlb	1	; () banked
 26227  009DBE  6504               	cpfsgt	SearchForLongAddress@j& (0+255),b
 26228  009DC0  D001               	goto	l17541
 26229  009DC2  D02E               	goto	l17549
 26230  009DC4                     l17541:
 26231                           
 26232                           ; BSR set to: 1
 26233                           ;miwi_mesh.c: 3336: {
 26234                           ;miwi_mesh.c: 3337: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 26235  009DC4  0101               	movlb	1	; () banked
 26236  009DC6  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 26237  009DC8  0D01               	mullw	1
 26238  009DCA  0EA6               	movlw	low _tempLongAddress
 26239  009DCC  24F3               	addwf	prodl,w,c
 26240  009DCE  6ED9               	movwf	fsr2l,c
 26241  009DD0  0E01               	movlw	high _tempLongAddress
 26242  009DD2  20F4               	addwfc	prodh,w,c
 26243  009DD4  6EDA               	movwf	fsr2h,c
 26244  009DD6  0101               	movlb	1	; () banked
 26245  009DD8  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 26246  009DDA  0D01               	mullw	1
 26247  009DDC  0E04               	movlw	4
 26248  009DDE  26F3               	addwf	prodl,f,c
 26249  009DE0  0E00               	movlw	0
 26250  009DE2  22F4               	addwfc	prodh,f,c
 26251  009DE4  0E00               	movlw	low _ConnectionTable
 26252  009DE6  0101               	movlb	1	; () banked
 26253  009DE8  6F01               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 26254  009DEA  0E06               	movlw	high _ConnectionTable
 26255  009DEC  0101               	movlb	1	; () banked
 26256  009DEE  6F02               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 26257  009DF0  50F3               	movf	prodl,w,c
 26258  009DF2  0101               	movlb	1	; () banked
 26259  009DF4  2701               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 26260  009DF6  50F4               	movf	prodh,w,c
 26261  009DF8  0101               	movlb	1	; () banked
 26262  009DFA  2302               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 26263  009DFC  0101               	movlb	1	; () banked
 26264  009DFE  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26265  009E00  0D09               	mullw	9
 26266  009E02  50F3               	movf	prodl,w,c
 26267  009E04  0101               	movlb	1	; () banked
 26268  009E06  2501               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 26269  009E08  6EE1               	movwf	fsr1l,c
 26270  009E0A  50F4               	movf	prodh,w,c
 26271  009E0C  0101               	movlb	1	; () banked
 26272  009E0E  2102               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 26273  009E10  6EE2               	movwf	fsr1h,c
 26274  009E12  50DE               	movf	postinc2,w,c
 26275  009E14  18E6               	xorwf	postinc1,w,c
 26276  009E16  A4D8               	btfss	status,2,c
 26277  009E18  D006               	goto	l17553
 26278                           
 26279                           ; BSR set to: 1
 26280                           
 26281                           ; BSR set to: 1
 26282                           
 26283                           ; BSR set to: 1
 26284                           ;miwi_mesh.c: 3338: {
 26285                           ;miwi_mesh.c: 3339: goto EndOfSearchLoop;
 26286  009E1A  0101               	movlb	1	; () banked
 26287  009E1C  2B04               	incf	SearchForLongAddress@j& (0+255),f,b
 26288  009E1E  D7CD               	goto	l17537
 26289  009E20                     l17549:
 26290                           
 26291                           ; BSR set to: 1
 26292                           ;miwi_mesh.c: 3340: }
 26293                           ;miwi_mesh.c: 3341: }
 26294                           ;miwi_mesh.c: 3342: return i;
 26295  009E20  0101               	movlb	1	; () banked
 26296  009E22  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26297                           
 26298                           ; BSR set to: 1
 26299  009E24  0012               	return	
 26300  009E26                     l17553:
 26301                           
 26302                           ; BSR set to: 1
 26303                           ;miwi_mesh.c: 3345: ;
 26304  009E26  0101               	movlb	1	; () banked
 26305  009E28  2B05               	incf	SearchForLongAddress@i& (0+255),f,b
 26306  009E2A  D7A1               	goto	l17527
 26307  009E2C                     l17557:
 26308                           
 26309                           ; BSR set to: 1
 26310                           ;miwi_mesh.c: 3346: }
 26311                           ;miwi_mesh.c: 3347: return 0xFF;
 26312  009E2C  0EFF               	movlw	255
 26313  009E2E  0012               	return	
 26314  009E30                     __end_of_SearchForLongAddress:
 26315                           	opt stack 0
 26316                           tblptru	equ	0xFF8
 26317                           tblptrh	equ	0xFF7
 26318                           tblptrl	equ	0xFF6
 26319                           tablat	equ	0xFF5
 26320                           prodh	equ	0xFF4
 26321                           prodl	equ	0xFF3
 26322                           intcon	equ	0xFF2
 26323                           intcon2	equ	0xFF1
 26324                           intcon3	equ	0xFF0
 26325                           indf0	equ	0xFEF
 26326                           postinc0	equ	0xFEE
 26327                           plusw0	equ	0xFEB
 26328                           fsr0h	equ	0xFEA
 26329                           fsr0l	equ	0xFE9
 26330                           wreg	equ	0xFE8
 26331                           indf1	equ	0xFE7
 26332                           postinc1	equ	0xFE6
 26333                           postdec1	equ	0xFE5
 26334                           fsr1h	equ	0xFE2
 26335                           fsr1l	equ	0xFE1
 26336                           indf2	equ	0xFDF
 26337                           postinc2	equ	0xFDE
 26338                           postdec2	equ	0xFDD
 26339                           plusw2	equ	0xFDB
 26340                           fsr2h	equ	0xFDA
 26341                           fsr2l	equ	0xFD9
 26342                           status	equ	0xFD8
 26343                           
 26344 ;; *************** function _MiApp_DiscardMessage *****************
 26345 ;; Defined at:
 26346 ;;		line 4243 in file "src/miwi/miwi_mesh.c"
 26347 ;; Parameters:    Size  Location     Type
 26348 ;;		None
 26349 ;; Auto vars:     Size  Location     Type
 26350 ;;		None
 26351 ;; Return value:  Size  Location     Type
 26352 ;;		None               void
 26353 ;; Registers used:
 26354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26355 ;; Tracked objects:
 26356 ;;		On entry : 0/0
 26357 ;;		On exit  : 0/0
 26358 ;;		Unchanged: 0/0
 26359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26364 ;;Total ram usage:        0 bytes
 26365 ;; Hardware stack levels used:    1
 26366 ;; Hardware stack levels required when called:   17
 26367 ;; This function calls:
 26368 ;;		_MiMAC_DiscardPacket
 26369 ;; This function is called by:
 26370 ;;		_MiApp_UnicastAddress
 26371 ;;		_main
 26372 ;;		_MiApp_SearchConnection
 26373 ;;		_MiApp_EstablishConnection
 26374 ;;		_MiApp_UnicastConnection
 26375 ;;		_do_NETWORK_REGISTER
 26376 ;;		_do_POWER_TEST
 26377 ;;		_do_PING
 26378 ;;		_do_UPDATE
 26379 ;; This function uses a non-reentrant model
 26380 ;;
 26381                           
 26382                           	psect	text63
 26383  00BBAA                     __ptext63:
 26384                           	opt stack 0
 26385  00BBAA                     _MiApp_DiscardMessage:
 26386                           	opt stack 12
 26387                           
 26388                           ;miwi_mesh.c: 4245: MiWiStateMachine.bits.RxHasUserData = 0;
 26389                           
 26390                           ; BSR set to: 1
 26391                           ;incstack = 0
 26392  00BBAA  0101               	movlb	1	; () banked
 26393  00BBAC  95B5               	bcf	_MiWiStateMachine& (0+255),2,b
 26394                           
 26395                           ; BSR set to: 1
 26396                           ;miwi_mesh.c: 4246: MiMAC_DiscardPacket();
 26397  00BBAE  EC5B  F05D         	call	_MiMAC_DiscardPacket	;wreg free
 26398  00BBB2  0012               	return		;funcret
 26399  00BBB4                     __end_of_MiApp_DiscardMessage:
 26400                           	opt stack 0
 26401                           tblptru	equ	0xFF8
 26402                           tblptrh	equ	0xFF7
 26403                           tblptrl	equ	0xFF6
 26404                           tablat	equ	0xFF5
 26405                           prodh	equ	0xFF4
 26406                           prodl	equ	0xFF3
 26407                           intcon	equ	0xFF2
 26408                           intcon2	equ	0xFF1
 26409                           intcon3	equ	0xFF0
 26410                           indf0	equ	0xFEF
 26411                           postinc0	equ	0xFEE
 26412                           plusw0	equ	0xFEB
 26413                           fsr0h	equ	0xFEA
 26414                           fsr0l	equ	0xFE9
 26415                           wreg	equ	0xFE8
 26416                           indf1	equ	0xFE7
 26417                           postinc1	equ	0xFE6
 26418                           postdec1	equ	0xFE5
 26419                           fsr1h	equ	0xFE2
 26420                           fsr1l	equ	0xFE1
 26421                           indf2	equ	0xFDF
 26422                           postinc2	equ	0xFDE
 26423                           postdec2	equ	0xFDD
 26424                           plusw2	equ	0xFDB
 26425                           fsr2h	equ	0xFDA
 26426                           fsr2l	equ	0xFD9
 26427                           status	equ	0xFD8
 26428                           
 26429 ;; *************** function _MiMAC_DiscardPacket *****************
 26430 ;; Defined at:
 26431 ;;		line 1048 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26432 ;; Parameters:    Size  Location     Type
 26433 ;;		None
 26434 ;; Auto vars:     Size  Location     Type
 26435 ;;		None
 26436 ;; Return value:  Size  Location     Type
 26437 ;;		None               void
 26438 ;; Registers used:
 26439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26440 ;; Tracked objects:
 26441 ;;		On entry : 0/0
 26442 ;;		On exit  : 0/0
 26443 ;;		Unchanged: 0/0
 26444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26449 ;;Total ram usage:        0 bytes
 26450 ;; Hardware stack levels used:    1
 26451 ;; Hardware stack levels required when called:   16
 26452 ;; This function calls:
 26453 ;;		Nothing
 26454 ;; This function is called by:
 26455 ;;		_MiWiTasks
 26456 ;;		_MiApp_DiscardMessage
 26457 ;; This function uses a non-reentrant model
 26458 ;;
 26459                           
 26460                           	psect	text64
 26461  00BAB6                     __ptext64:
 26462                           	opt stack 0
 26463  00BAB6                     _MiMAC_DiscardPacket:
 26464                           	opt stack 13
 26465                           
 26466                           ;drv_mrf_miwi_89xa.c: 1050: if( ReceivedBankIndex < 2 )
 26467                           
 26468                           ;incstack = 0
 26469  00BAB6  0E02               	movlw	2
 26470  00BAB8  0101               	movlb	1	; () banked
 26471  00BABA  61C5               	cpfslt	_ReceivedBankIndex& (0+255),b
 26472  00BABC  0012               	return	
 26473                           
 26474                           ; BSR set to: 1
 26475                           ;drv_mrf_miwi_89xa.c: 1051: {
 26476                           ;drv_mrf_miwi_89xa.c: 1052: RxPacket[ReceivedBankIndex].flags.Val = 0;
 26477  00BABE  0101               	movlb	1	; () banked
 26478  00BAC0  51C5               	movf	_ReceivedBankIndex& (0+255),w,b
 26479  00BAC2  0D42               	mullw	66
 26480  00BAC4  0E00               	movlw	low _RxPacket
 26481  00BAC6  24F3               	addwf	prodl,w,c
 26482  00BAC8  6ED9               	movwf	fsr2l,c
 26483  00BACA  0E03               	movlw	high _RxPacket
 26484  00BACC  20F4               	addwfc	prodh,w,c
 26485  00BACE  6EDA               	movwf	fsr2h,c
 26486  00BAD0  0E00               	movlw	0
 26487  00BAD2  6EDF               	movwf	indf2,c
 26488                           
 26489                           ; BSR set to: 1
 26490                           ;drv_mrf_miwi_89xa.c: 1053: ReceivedBankIndex = 0xFF;
 26491  00BAD4  0101               	movlb	1	; () banked
 26492  00BAD6  69C5               	setf	_ReceivedBankIndex& (0+255),b
 26493  00BAD8  0012               	return	
 26494  00BADA                     __end_of_MiMAC_DiscardPacket:
 26495                           	opt stack 0
 26496                           tblptru	equ	0xFF8
 26497                           tblptrh	equ	0xFF7
 26498                           tblptrl	equ	0xFF6
 26499                           tablat	equ	0xFF5
 26500                           prodh	equ	0xFF4
 26501                           prodl	equ	0xFF3
 26502                           intcon	equ	0xFF2
 26503                           intcon2	equ	0xFF1
 26504                           intcon3	equ	0xFF0
 26505                           indf0	equ	0xFEF
 26506                           postinc0	equ	0xFEE
 26507                           plusw0	equ	0xFEB
 26508                           fsr0h	equ	0xFEA
 26509                           fsr0l	equ	0xFE9
 26510                           wreg	equ	0xFE8
 26511                           indf1	equ	0xFE7
 26512                           postinc1	equ	0xFE6
 26513                           postdec1	equ	0xFE5
 26514                           fsr1h	equ	0xFE2
 26515                           fsr1l	equ	0xFE1
 26516                           indf2	equ	0xFDF
 26517                           postinc2	equ	0xFDE
 26518                           postdec2	equ	0xFDD
 26519                           plusw2	equ	0xFDB
 26520                           fsr2h	equ	0xFDA
 26521                           fsr2l	equ	0xFD9
 26522                           status	equ	0xFD8
 26523                           
 26524 ;; *************** function _MiApp_StartConnection *****************
 26525 ;; Defined at:
 26526 ;;		line 4853 in file "src/miwi/miwi_mesh.c"
 26527 ;; Parameters:    Size  Location     Type
 26528 ;;  Mode            1    wreg     unsigned char 
 26529 ;;  ScanDuration    1   65[BANK1 ] unsigned char 
 26530 ;;  ChannelMap      4   66[BANK1 ] unsigned long 
 26531 ;; Auto vars:     Size  Location     Type
 26532 ;;  Mode            1   71[BANK1 ] unsigned char 
 26533 ;;  RSSIValue       1   73[BANK1 ] unsigned char 
 26534 ;;  channel         1   72[BANK1 ] unsigned char 
 26535 ;; Return value:  Size  Location     Type
 26536 ;;                  1    wreg      unsigned char 
 26537 ;; Registers used:
 26538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26539 ;; Tracked objects:
 26540 ;;		On entry : 0/0
 26541 ;;		On exit  : 0/0
 26542 ;;		Unchanged: 0/0
 26543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26544 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26545 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26546 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26547 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26548 ;;Total ram usage:        9 bytes
 26549 ;; Hardware stack levels used:    1
 26550 ;; Hardware stack levels required when called:   22
 26551 ;; This function calls:
 26552 ;;		_MiApp_NoiseDetection
 26553 ;;		_MiApp_SetChannel
 26554 ;;		_MiMAC_SetAltAddress
 26555 ;; This function is called by:
 26556 ;;		_main
 26557 ;; This function uses a non-reentrant model
 26558 ;;
 26559                           
 26560                           	psect	text65
 26561  009094                     __ptext65:
 26562                           	opt stack 0
 26563  009094                     _MiApp_StartConnection:
 26564                           	opt stack 8
 26565                           
 26566                           ; BSR set to: 1
 26567                           ;incstack = 0
 26568                           ;MiApp_StartConnection@Mode stored from wreg
 26569  009094  0101               	movlb	1	; () banked
 26570  009096  6F47               	movwf	MiApp_StartConnection@Mode& (0+255),b
 26571                           
 26572                           ;miwi_mesh.c: 4855: switch(Mode)
 26573  009098  D079               	goto	l20505
 26574  00909A                     l20465:
 26575                           
 26576                           ;miwi_mesh.c: 4859: myShortAddress.Val = 0;
 26577  00909A  0E00               	movlw	0
 26578  00909C  0101               	movlb	1	; () banked
 26579  00909E  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 26580  0090A0  0E00               	movlw	0
 26581  0090A2  6FF2               	movwf	_myShortAddress& (0+255),b
 26582                           
 26583                           ; BSR set to: 1
 26584                           ;miwi_mesh.c: 4860: myParent = 0xFF;
 26585  0090A4  0101               	movlb	1	; () banked
 26586  0090A6  69C9               	setf	_myParent& (0+255),b
 26587                           
 26588                           ;miwi_mesh.c: 4865: myPANID.Val = 0x1337;
 26589  0090A8  0E13               	movlw	19
 26590  0090AA  0101               	movlb	1	; () banked
 26591  0090AC  6FF1               	movwf	(_myPANID+1)& (0+255),b
 26592  0090AE  0E37               	movlw	55
 26593  0090B0  6FF0               	movwf	_myPANID& (0+255),b
 26594                           
 26595                           ; BSR set to: 1
 26596                           ;miwi_mesh.c: 4867: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26597  0090B2  0EF2               	movlw	low _myShortAddress
 26598  0090B4  0101               	movlb	1	; () banked
 26599  0090B6  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26600  0090B8  0E01               	movlw	high _myShortAddress
 26601  0090BA  0101               	movlb	1	; () banked
 26602  0090BC  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26603  0090BE  0EF0               	movlw	low _myPANID
 26604  0090C0  0101               	movlb	1	; () banked
 26605  0090C2  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26606  0090C4  0E01               	movlw	high _myPANID
 26607  0090C6  0101               	movlb	1	; () banked
 26608  0090C8  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26609  0090CA  ECEA  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 26610                           
 26611                           ;miwi_mesh.c: 4868: MiWiStateMachine.bits.memberOfNetwork = 1;
 26612  0090CE  0101               	movlb	1	; () banked
 26613  0090D0  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;miwi_mesh.c: 4869: role = 0x02;
 26617  0090D2  0E02               	movlw	2
 26618  0090D4  0101               	movlb	1	; () banked
 26619  0090D6  6FCA               	movwf	_role& (0+255),b
 26620                           
 26621                           ; BSR set to: 1
 26622                           ;miwi_mesh.c: 4870: MiWiCapacityInfo.bits.Role = role;
 26623  0090D8  C1CA  F146         	movff	_role,??_MiApp_StartConnection
 26624  0090DC  0101               	movlb	1	; () banked
 26625  0090DE  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 26626  0090E0  0101               	movlb	1	; () banked
 26627  0090E2  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 26628  0090E4  0101               	movlb	1	; () banked
 26629  0090E6  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26630  0090E8  0BF9               	andlw	-7
 26631  0090EA  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26632  0090EC  0101               	movlb	1	; () banked
 26633  0090EE  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 26634                           
 26635                           ; BSR set to: 1
 26636                           ;miwi_mesh.c: 4871: knownCoordinators = 0x01;
 26637  0090F0  0E01               	movlw	1
 26638  0090F2  0101               	movlb	1	; () banked
 26639  0090F4  6FC7               	movwf	_knownCoordinators& (0+255),b
 26640                           
 26641                           ; BSR set to: 1
 26642                           ;miwi_mesh.c: 4881: return 1;
 26643                           ;	Return value of _MiApp_StartConnection is never used
 26644  0090F6  0012               	return	
 26645  0090F8                     l20481:
 26646                           
 26647                           ; BSR set to: 1
 26648                           ;miwi_mesh.c: 4886: {
 26649                           ;miwi_mesh.c: 4887: uint8_t channel;
 26650                           ;miwi_mesh.c: 4888: uint8_t RSSIValue;
 26651                           ;miwi_mesh.c: 4890: channel = MiApp_NoiseDetection(ChannelMap, ScanDuration, 0x00, &RSSI
      +                          Value);
 26652  0090F8  C142  F11D         	movff	MiApp_StartConnection@ChannelMap,MiApp_NoiseDetection@ChannelMap
 26653  0090FC  C143  F11E         	movff	MiApp_StartConnection@ChannelMap+1,MiApp_NoiseDetection@ChannelMap+1
 26654  009100  C144  F11F         	movff	MiApp_StartConnection@ChannelMap+2,MiApp_NoiseDetection@ChannelMap+2
 26655  009104  C145  F120         	movff	MiApp_StartConnection@ChannelMap+3,MiApp_NoiseDetection@ChannelMap+3
 26656  009108  C141  F121         	movff	MiApp_StartConnection@ScanDuration,MiApp_NoiseDetection@ScanDuration
 26657  00910C  0E00               	movlw	0
 26658  00910E  0101               	movlb	1	; () banked
 26659  009110  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
 26660  009112  0E49               	movlw	low MiApp_StartConnection@RSSIValue
 26661  009114  0101               	movlb	1	; () banked
 26662  009116  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
 26663  009118  0E01               	movlw	high MiApp_StartConnection@RSSIValue
 26664  00911A  0101               	movlb	1	; () banked
 26665  00911C  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
 26666  00911E  ECDB  F037         	call	_MiApp_NoiseDetection	;wreg free
 26667  009122  0101               	movlb	1	; () banked
 26668  009124  6F48               	movwf	MiApp_StartConnection@channel& (0+255),b
 26669                           
 26670                           ; BSR set to: 1
 26671                           ;miwi_mesh.c: 4891: MiApp_SetChannel(channel);
 26672  009126  0101               	movlb	1	; () banked
 26673  009128  5148               	movf	MiApp_StartConnection@channel& (0+255),w,b
 26674  00912A  EC6D  F05D         	call	_MiApp_SetChannel
 26675                           
 26676                           ;miwi_mesh.c: 4892: ;
 26677                           ;miwi_mesh.c: 4893: ;
 26678                           ;miwi_mesh.c: 4894: ;
 26679                           ;miwi_mesh.c: 4895: MiWiStateMachine.bits.memberOfNetwork = 1;
 26680  00912E  0101               	movlb	1	; () banked
 26681  009130  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 26682                           
 26683                           ; BSR set to: 1
 26684                           ;miwi_mesh.c: 4896: myShortAddress.Val = 0;
 26685  009132  0E00               	movlw	0
 26686  009134  0101               	movlb	1	; () banked
 26687  009136  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 26688  009138  0E00               	movlw	0
 26689  00913A  6FF2               	movwf	_myShortAddress& (0+255),b
 26690                           
 26691                           ; BSR set to: 1
 26692                           ;miwi_mesh.c: 4897: myParent = 0xFF;
 26693  00913C  0101               	movlb	1	; () banked
 26694  00913E  69C9               	setf	_myParent& (0+255),b
 26695                           
 26696                           ; BSR set to: 1
 26697                           ;miwi_mesh.c: 4902: myPANID.Val = 0x1337;
 26698  009140  0E13               	movlw	19
 26699  009142  0101               	movlb	1	; () banked
 26700  009144  6FF1               	movwf	(_myPANID+1)& (0+255),b
 26701  009146  0E37               	movlw	55
 26702  009148  6FF0               	movwf	_myPANID& (0+255),b
 26703                           
 26704                           ; BSR set to: 1
 26705                           ;miwi_mesh.c: 4904: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26706  00914A  0EF2               	movlw	low _myShortAddress
 26707  00914C  0101               	movlb	1	; () banked
 26708  00914E  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26709  009150  0E01               	movlw	high _myShortAddress
 26710  009152  0101               	movlb	1	; () banked
 26711  009154  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26712  009156  0EF0               	movlw	low _myPANID
 26713  009158  0101               	movlb	1	; () banked
 26714  00915A  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26715  00915C  0E01               	movlw	high _myPANID
 26716  00915E  0101               	movlb	1	; () banked
 26717  009160  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26718  009162  ECEA  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 26719                           
 26720                           ;miwi_mesh.c: 4905: role = 0x02;
 26721  009166  0E02               	movlw	2
 26722  009168  0101               	movlb	1	; () banked
 26723  00916A  6FCA               	movwf	_role& (0+255),b
 26724                           
 26725                           ; BSR set to: 1
 26726                           ;miwi_mesh.c: 4906: MiWiCapacityInfo.bits.Role = role;
 26727  00916C  C1CA  F146         	movff	_role,??_MiApp_StartConnection
 26728  009170  0101               	movlb	1	; () banked
 26729  009172  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 26730  009174  0101               	movlb	1	; () banked
 26731  009176  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 26732  009178  0101               	movlb	1	; () banked
 26733  00917A  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26734  00917C  0BF9               	andlw	-7
 26735  00917E  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26736  009180  0101               	movlb	1	; () banked
 26737  009182  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 26738                           
 26739                           ; BSR set to: 1
 26740                           ;miwi_mesh.c: 4907: knownCoordinators = 0x01;
 26741  009184  0E01               	movlw	1
 26742  009186  0101               	movlb	1	; () banked
 26743  009188  6FC7               	movwf	_knownCoordinators& (0+255),b
 26744                           
 26745                           ; BSR set to: 1
 26746                           ;miwi_mesh.c: 4929: }
 26747                           
 26748                           ; BSR set to: 1
 26749                           ;miwi_mesh.c: 4928: break;
 26750                           
 26751                           ;miwi_mesh.c: 4927: default:
 26752                           
 26753                           ; BSR set to: 1
 26754                           ;miwi_mesh.c: 4925: return 0;
 26755                           ;	Return value of _MiApp_StartConnection is never used
 26756                           
 26757                           ;miwi_mesh.c: 4918: }
 26758                           ;miwi_mesh.c: 4923: case 0x02:
 26759                           
 26760                           ; BSR set to: 1
 26761                           ;miwi_mesh.c: 4917: return 1;
 26762                           ;	Return value of _MiApp_StartConnection is never used
 26763  00918A  0012               	return	
 26764  00918C                     l20505:
 26765  00918C  0101               	movlb	1	; () banked
 26766  00918E  5147               	movf	MiApp_StartConnection@Mode& (0+255),w,b
 26767                           
 26768                           ; Switch size 1, requested type "space"
 26769                           ; Number of cases is 3, Range of values is 0 to 2
 26770                           ; switch strategies available:
 26771                           ; Name         Instructions Cycles
 26772                           ; simple_byte           10     6 (average)
 26773                           ;	Chosen strategy is simple_byte
 26774  009190  0A00               	xorlw	0	; case 0
 26775  009192  B4D8               	btfsc	status,2,c
 26776  009194  D782               	goto	l20465
 26777  009196  0A01               	xorlw	1	; case 1
 26778  009198  B4D8               	btfsc	status,2,c
 26779  00919A  D7AE               	goto	l20481
 26780  00919C  0A03               	xorlw	3	; case 2
 26781  00919E  0012               	return	
 26782  0091A0                     __end_of_MiApp_StartConnection:
 26783                           	opt stack 0
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           intcon2	equ	0xFF1
 26792                           intcon3	equ	0xFF0
 26793                           indf0	equ	0xFEF
 26794                           postinc0	equ	0xFEE
 26795                           plusw0	equ	0xFEB
 26796                           fsr0h	equ	0xFEA
 26797                           fsr0l	equ	0xFE9
 26798                           wreg	equ	0xFE8
 26799                           indf1	equ	0xFE7
 26800                           postinc1	equ	0xFE6
 26801                           postdec1	equ	0xFE5
 26802                           fsr1h	equ	0xFE2
 26803                           fsr1l	equ	0xFE1
 26804                           indf2	equ	0xFDF
 26805                           postinc2	equ	0xFDE
 26806                           postdec2	equ	0xFDD
 26807                           plusw2	equ	0xFDB
 26808                           fsr2h	equ	0xFDA
 26809                           fsr2l	equ	0xFD9
 26810                           status	equ	0xFD8
 26811                           
 26812 ;; *************** function _MiApp_NoiseDetection *****************
 26813 ;; Defined at:
 26814 ;;		line 4980 in file "src/miwi/miwi_mesh.c"
 26815 ;; Parameters:    Size  Location     Type
 26816 ;;  ChannelMap      4   29[BANK1 ] unsigned long 
 26817 ;;  ScanDuration    1   33[BANK1 ] unsigned char 
 26818 ;;  DetectionMod    1   34[BANK1 ] unsigned char 
 26819 ;;  RSSIValue       2   35[BANK1 ] PTR unsigned char 
 26820 ;;		 -> noise_level(1), MiApp_StartConnection@RSSIValue(1), 
 26821 ;; Auto vars:     Size  Location     Type
 26822 ;;  maxRSSI         1   64[BANK1 ] unsigned char 
 26823 ;;  RSSIcheck       1   61[BANK1 ] unsigned char 
 26824 ;;  k               1   60[BANK1 ] unsigned char 
 26825 ;;  j               1   59[BANK1 ] unsigned char 
 26826 ;;  t2              4   54[BANK1 ] struct _MIWI_TICK
 26827 ;;  t1              4   50[BANK1 ] struct _MIWI_TICK
 26828 ;;  channelMask     4   46[BANK1 ] unsigned long 
 26829 ;;  i               1   63[BANK1 ] unsigned char 
 26830 ;;  minRSSI         1   62[BANK1 ] unsigned char 
 26831 ;;  OptimalChann    1   58[BANK1 ] unsigned char 
 26832 ;; Return value:  Size  Location     Type
 26833 ;;                  1    wreg      unsigned char 
 26834 ;; Registers used:
 26835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26836 ;; Tracked objects:
 26837 ;;		On entry : 0/0
 26838 ;;		On exit  : 0/0
 26839 ;;		Unchanged: 0/0
 26840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26841 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26842 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26843 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26844 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26845 ;;Total ram usage:       36 bytes
 26846 ;; Hardware stack levels used:    1
 26847 ;; Hardware stack levels required when called:   21
 26848 ;; This function calls:
 26849 ;;		_MiApp_SetChannel
 26850 ;;		_MiMAC_ChannelAssessment
 26851 ;;		_MiWi_TickGet
 26852 ;;		___awdiv
 26853 ;; This function is called by:
 26854 ;;		_MiApp_StartConnection
 26855 ;;		_main
 26856 ;; This function uses a non-reentrant model
 26857 ;;
 26858                           
 26859                           	psect	text66
 26860  006FB6                     __ptext66:
 26861                           	opt stack 0
 26862  006FB6                     _MiApp_NoiseDetection:
 26863                           	opt stack 8
 26864                           
 26865                           ;miwi_mesh.c: 4982: uint8_t i;
 26866                           ;miwi_mesh.c: 4983: uint8_t OptimalChannel;
 26867                           ;miwi_mesh.c: 4984: uint8_t minRSSI = 0xFF;
 26868                           
 26869                           ; BSR set to: 1
 26870                           ;incstack = 0
 26871  006FB6  0101               	movlb	1	; () banked
 26872  006FB8  693E               	setf	MiApp_NoiseDetection@minRSSI& (0+255),b
 26873                           
 26874                           ; BSR set to: 1
 26875                           ;miwi_mesh.c: 4985: uint32_t channelMask = 0x00000001;
 26876  006FBA  0E01               	movlw	1
 26877  006FBC  0101               	movlb	1	; () banked
 26878  006FBE  6F2E               	movwf	MiApp_NoiseDetection@channelMask& (0+255),b
 26879  006FC0  0E00               	movlw	0
 26880  006FC2  6F2F               	movwf	(MiApp_NoiseDetection@channelMask+1)& (0+255),b
 26881  006FC4  0E00               	movlw	0
 26882  006FC6  6F30               	movwf	(MiApp_NoiseDetection@channelMask+2)& (0+255),b
 26883  006FC8  0E00               	movlw	0
 26884  006FCA  6F31               	movwf	(MiApp_NoiseDetection@channelMask+3)& (0+255),b
 26885                           
 26886                           ;miwi_mesh.c: 4986: MIWI_TICK t1, t2;
 26887                           ;miwi_mesh.c: 4988: if( DetectionMode != 0x00 )
 26888  006FCC  0101               	movlb	1	; () banked
 26889  006FCE  5122               	movf	MiApp_NoiseDetection@DetectionMode& (0+255),w,b
 26890  006FD0  0101               	movlb	1	; () banked
 26891  006FD2  B4D8               	btfsc	status,2,c
 26892  006FD4  D002               	goto	l19133
 26893                           
 26894                           ; BSR set to: 1
 26895                           ;miwi_mesh.c: 4989: {
 26896                           ;miwi_mesh.c: 4990: return 0xFF;
 26897  006FD6  0EFF               	movlw	255
 26898                           
 26899                           ; BSR set to: 1
 26900  006FD8  0012               	return	
 26901  006FDA                     l19133:
 26902                           
 26903                           ; BSR set to: 1
 26904                           ;miwi_mesh.c: 4991: }
 26905                           ;miwi_mesh.c: 4993: ;
 26906                           ;miwi_mesh.c: 4994: i = 0;
 26907  006FDA  0E00               	movlw	0
 26908  006FDC  0101               	movlb	1	; () banked
 26909  006FDE  6F3F               	movwf	MiApp_NoiseDetection@i& (0+255),b
 26910                           
 26911                           ;miwi_mesh.c: 4995: while( i < 32 )
 26912  006FE0  D0DA               	goto	l19173
 26913  006FE2                     l19135:
 26914                           
 26915                           ; BSR set to: 1
 26916                           ;miwi_mesh.c: 4996: {
 26917                           ;miwi_mesh.c: 4997: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 26918  006FE2  C13F  F125         	movff	MiApp_NoiseDetection@i,??_MiApp_NoiseDetection
 26919  006FE6  C12E  F126         	movff	MiApp_NoiseDetection@channelMask,??_MiApp_NoiseDetection+1
 26920  006FEA  C12F  F127         	movff	MiApp_NoiseDetection@channelMask+1,??_MiApp_NoiseDetection+2
 26921  006FEE  C130  F128         	movff	MiApp_NoiseDetection@channelMask+2,??_MiApp_NoiseDetection+3
 26922  006FF2  C131  F129         	movff	MiApp_NoiseDetection@channelMask+3,??_MiApp_NoiseDetection+4
 26923  006FF6  0101               	movlb	1	; () banked
 26924  006FF8  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 26925  006FFA  D006               	goto	u21780
 26926  006FFC                     u21785:
 26927  006FFC  90D8               	bcf	status,0,c
 26928  006FFE  0101               	movlb	1	; () banked
 26929  007000  3726               	rlcf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26930  007002  3727               	rlcf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26931  007004  3728               	rlcf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26932  007006  3729               	rlcf	(??_MiApp_NoiseDetection+4)& (0+255),f,b
 26933  007008                     u21780:
 26934  007008  0101               	movlb	1	; () banked
 26935  00700A  2F25               	decfsz	??_MiApp_NoiseDetection& (0+255),f,b
 26936  00700C  D7F7               	goto	u21785
 26937  00700E  0101               	movlb	1	; () banked
 26938  007010  511D               	movf	MiApp_NoiseDetection@ChannelMap& (0+255),w,b
 26939  007012  0101               	movlb	1	; () banked
 26940  007014  1526               	andwf	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 26941  007016  0101               	movlb	1	; () banked
 26942  007018  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 26943  00701A  0101               	movlb	1	; () banked
 26944  00701C  511E               	movf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),w,b
 26945  00701E  0101               	movlb	1	; () banked
 26946  007020  1527               	andwf	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 26947  007022  0101               	movlb	1	; () banked
 26948  007024  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 26949  007026  0101               	movlb	1	; () banked
 26950  007028  511F               	movf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),w,b
 26951  00702A  0101               	movlb	1	; () banked
 26952  00702C  1528               	andwf	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 26953  00702E  0101               	movlb	1	; () banked
 26954  007030  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 26955  007032  0101               	movlb	1	; () banked
 26956  007034  5120               	movf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),w,b
 26957  007036  0101               	movlb	1	; () banked
 26958  007038  1529               	andwf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 26959  00703A  0101               	movlb	1	; () banked
 26960  00703C  6F2D               	movwf	(??_MiApp_NoiseDetection+8)& (0+255),b
 26961  00703E  0101               	movlb	1	; () banked
 26962  007040  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 26963  007042  0101               	movlb	1	; () banked
 26964  007044  112B               	iorwf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 26965  007046  0101               	movlb	1	; () banked
 26966  007048  112C               	iorwf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 26967  00704A  0101               	movlb	1	; () banked
 26968  00704C  112D               	iorwf	(??_MiApp_NoiseDetection+8)& (0+255),w,b
 26969  00704E  B4D8               	btfsc	status,2,c
 26970  007050  D0A0               	goto	l19171
 26971                           
 26972                           ; BSR set to: 1
 26973                           ;miwi_mesh.c: 4998: {
 26974                           ;miwi_mesh.c: 4999: uint8_t RSSIcheck;
 26975                           ;miwi_mesh.c: 5000: uint8_t maxRSSI = 0;
 26976  007052  0E00               	movlw	0
 26977  007054  0101               	movlb	1	; () banked
 26978  007056  6F40               	movwf	MiApp_NoiseDetection@maxRSSI& (0+255),b
 26979                           
 26980                           ; BSR set to: 1
 26981                           ;miwi_mesh.c: 5001: uint8_t j, k;
 26982                           ;miwi_mesh.c: 5004: MiApp_SetChannel(i);
 26983  007058  0101               	movlb	1	; () banked
 26984  00705A  513F               	movf	MiApp_NoiseDetection@i& (0+255),w,b
 26985  00705C  EC6D  F05D         	call	_MiApp_SetChannel
 26986                           
 26987                           ;miwi_mesh.c: 5006: t2 = MiWi_TickGet();
 26988  007060  EC80  F058         	call	_MiWi_TickGet	;wreg free
 26989  007064  C100  F136         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t2
 26990  007068  C101  F137         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t2+1
 26991  00706C  C102  F138         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t2+2
 26992  007070  C103  F139         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t2+3
 26993  007074                     l19143:
 26994                           
 26995                           ;miwi_mesh.c: 5009: {
 26996                           ;miwi_mesh.c: 5010: RSSIcheck = MiMAC_ChannelAssessment(0x01);
 26997  007074  0E01               	movlw	1
 26998  007076  ECEB  F044         	call	_MiMAC_ChannelAssessment
 26999  00707A  0101               	movlb	1	; () banked
 27000  00707C  6F3D               	movwf	MiApp_NoiseDetection@RSSIcheck& (0+255),b
 27001                           
 27002                           ; BSR set to: 1
 27003                           ;miwi_mesh.c: 5011: if( RSSIcheck > maxRSSI )
 27004  00707E  0101               	movlb	1	; () banked
 27005  007080  513D               	movf	MiApp_NoiseDetection@RSSIcheck& (0+255),w,b
 27006  007082  0101               	movlb	1	; () banked
 27007  007084  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 27008  007086  A0D8               	btfss	status,0,c
 27009                           
 27010                           ; BSR set to: 1
 27011                           ;miwi_mesh.c: 5012: {
 27012                           ;miwi_mesh.c: 5013: maxRSSI = RSSIcheck;
 27013  007088  C13D  F140         	movff	MiApp_NoiseDetection@RSSIcheck,MiApp_NoiseDetection@maxRSSI
 27014                           
 27015                           ; BSR set to: 1
 27016                           ;miwi_mesh.c: 5014: }
 27017                           ;miwi_mesh.c: 5018: t1 = MiWi_TickGet();
 27018                           
 27019                           ; BSR set to: 1
 27020  00708C  EC80  F058         	call	_MiWi_TickGet	;wreg free
 27021  007090  C100  F132         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t1
 27022  007094  C101  F133         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t1+1
 27023  007098  C102  F134         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t1+2
 27024  00709C  C103  F135         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t1+3
 27025                           
 27026                           ;miwi_mesh.c: 5019: if( (t1.Val - t2.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 27027  0070A0  C136  F125         	movff	MiApp_NoiseDetection@t2,??_MiApp_NoiseDetection
 27028  0070A4  C137  F126         	movff	MiApp_NoiseDetection@t2+1,??_MiApp_NoiseDetection+1
 27029  0070A8  C138  F127         	movff	MiApp_NoiseDetection@t2+2,??_MiApp_NoiseDetection+2
 27030  0070AC  C139  F128         	movff	MiApp_NoiseDetection@t2+3,??_MiApp_NoiseDetection+3
 27031  0070B0  0101               	movlb	1	; () banked
 27032  0070B2  1F25               	comf	??_MiApp_NoiseDetection& (0+255),f,b
 27033  0070B4  1F26               	comf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 27034  0070B6  1F27               	comf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 27035  0070B8  1F28               	comf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 27036  0070BA  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 27037  0070BC  0E00               	movlw	0
 27038  0070BE  2326               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 27039  0070C0  2327               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 27040  0070C2  2328               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 27041  0070C4  0101               	movlb	1	; () banked
 27042  0070C6  5132               	movf	MiApp_NoiseDetection@t1& (0+255),w,b
 27043  0070C8  0101               	movlb	1	; () banked
 27044  0070CA  2525               	addwf	??_MiApp_NoiseDetection& (0+255),w,b
 27045  0070CC  0101               	movlb	1	; () banked
 27046  0070CE  6F29               	movwf	(??_MiApp_NoiseDetection+4)& (0+255),b
 27047  0070D0  0101               	movlb	1	; () banked
 27048  0070D2  5133               	movf	(MiApp_NoiseDetection@t1+1)& (0+255),w,b
 27049  0070D4  0101               	movlb	1	; () banked
 27050  0070D6  2126               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 27051  0070D8  0101               	movlb	1	; () banked
 27052  0070DA  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 27053  0070DC  0101               	movlb	1	; () banked
 27054  0070DE  5134               	movf	(MiApp_NoiseDetection@t1+2)& (0+255),w,b
 27055  0070E0  0101               	movlb	1	; () banked
 27056  0070E2  2127               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 27057  0070E4  0101               	movlb	1	; () banked
 27058  0070E6  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 27059  0070E8  0101               	movlb	1	; () banked
 27060  0070EA  5135               	movf	(MiApp_NoiseDetection@t1+3)& (0+255),w,b
 27061  0070EC  0101               	movlb	1	; () banked
 27062  0070EE  2128               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 27063  0070F0  0101               	movlb	1	; () banked
 27064  0070F2  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 27065  0070F4  0101               	movlb	1	; () banked
 27066  0070F6  5121               	movf	MiApp_NoiseDetection@ScanDuration& (0+255),w,b
 27067  0070F8  0D04               	mullw	4
 27068  0070FA  0E35               	movlw	low _ScanTime
 27069  0070FC  24F3               	addwf	prodl,w,c
 27070  0070FE  6EF6               	movwf	tblptrl,c
 27071  007100  0E20               	movlw	high _ScanTime
 27072  007102  20F4               	addwfc	prodh,w,c
 27073  007104  6EF7               	movwf	tblptrh,c
 27074  007106                     	if	1	;There are 3 active tblptr bytes
 27075  007106  6AF8               	clrf	tblptru,c
 27076  007108  0E00               	movlw	low (__mediumconst shr (0+16))
 27077  00710A  22F8               	addwfc	tblptru,f,c
 27078  00710C                     	endif
 27079  00710C  0101               	movlb	1	; () banked
 27080  00710E  5129               	movf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 27081  007110  0009               	tblrd		*+
 27082  007112  5CF5               	subwf	tablat,w,c
 27083  007114  0101               	movlb	1	; () banked
 27084  007116  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 27085  007118  0009               	tblrd		*+
 27086  00711A  58F5               	subwfb	tablat,w,c
 27087  00711C  0101               	movlb	1	; () banked
 27088  00711E  512B               	movf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 27089  007120  0009               	tblrd		*+
 27090  007122  58F5               	subwfb	tablat,w,c
 27091  007124  0101               	movlb	1	; () banked
 27092  007126  512C               	movf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 27093  007128  0009               	tblrd		*+
 27094  00712A  58F5               	subwfb	tablat,w,c
 27095  00712C  B0D8               	btfsc	status,0,c
 27096  00712E  D7A2               	goto	l19143
 27097                           
 27098                           ; BSR set to: 1
 27099                           ;miwi_mesh.c: 5023: }
 27100                           ;miwi_mesh.c: 5024: }
 27101                           ;miwi_mesh.c: 5026: ;
 27102                           ;miwi_mesh.c: 5027: ;
 27103                           ;miwi_mesh.c: 5028: ;
 27104                           ;miwi_mesh.c: 5029: j = maxRSSI/5;
 27105                           
 27106                           ; BSR set to: 1
 27107                           
 27108                           ; BSR set to: 1
 27109                           
 27110                           ; BSR set to: 1
 27111                           
 27112                           ; BSR set to: 1
 27113                           ;miwi_mesh.c: 5020: {
 27114                           ;miwi_mesh.c: 5022: break;
 27115  007130  C140  F106         	movff	MiApp_NoiseDetection@maxRSSI,___awdiv@dividend
 27116  007134  0101               	movlb	1	; () banked
 27117  007136  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27118  007138  0E00               	movlw	0
 27119  00713A  0101               	movlb	1	; () banked
 27120  00713C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27121  00713E  0E05               	movlw	5
 27122  007140  6F08               	movwf	___awdiv@divisor& (0+255),b
 27123  007142  ECA1  F050         	call	___awdiv	;wreg free
 27124  007146  0101               	movlb	1	; () banked
 27125  007148  5106               	movf	?___awdiv& (0+255),w,b
 27126  00714A  0101               	movlb	1	; () banked
 27127  00714C  6F3B               	movwf	MiApp_NoiseDetection@j& (0+255),b
 27128                           
 27129                           ; BSR set to: 1
 27130                           ;miwi_mesh.c: 5030: for(k = 0; k < j; k++)
 27131  00714E  0E00               	movlw	0
 27132  007150  0101               	movlb	1	; () banked
 27133  007152  6F3C               	movwf	MiApp_NoiseDetection@k& (0+255),b
 27134  007154  D002               	goto	l19161
 27135  007156                     l19159:
 27136                           
 27137                           ; BSR set to: 1
 27138                           ;miwi_mesh.c: 5031: {
 27139                           ;miwi_mesh.c: 5032: ;
 27140  007156  0101               	movlb	1	; () banked
 27141  007158  2B3C               	incf	MiApp_NoiseDetection@k& (0+255),f,b
 27142  00715A                     l19161:
 27143                           
 27144                           ; BSR set to: 1
 27145  00715A  0101               	movlb	1	; () banked
 27146  00715C  513B               	movf	MiApp_NoiseDetection@j& (0+255),w,b
 27147  00715E  0101               	movlb	1	; () banked
 27148  007160  5D3C               	subwf	MiApp_NoiseDetection@k& (0+255),w,b
 27149  007162  A0D8               	btfss	status,0,c
 27150  007164  D7F8               	goto	l19159
 27151                           
 27152                           ; BSR set to: 1
 27153                           ;miwi_mesh.c: 5033: }
 27154                           ;miwi_mesh.c: 5034: ;
 27155                           ;miwi_mesh.c: 5035: ;
 27156                           ;miwi_mesh.c: 5037: if( maxRSSI < minRSSI )
 27157                           
 27158                           ; BSR set to: 1
 27159  007166  0101               	movlb	1	; () banked
 27160  007168  513E               	movf	MiApp_NoiseDetection@minRSSI& (0+255),w,b
 27161  00716A  0101               	movlb	1	; () banked
 27162  00716C  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 27163  00716E  B0D8               	btfsc	status,0,c
 27164  007170  D010               	goto	l19171
 27165                           
 27166                           ; BSR set to: 1
 27167                           ;miwi_mesh.c: 5038: {
 27168                           ;miwi_mesh.c: 5039: minRSSI = maxRSSI;
 27169  007172  C140  F13E         	movff	MiApp_NoiseDetection@maxRSSI,MiApp_NoiseDetection@minRSSI
 27170                           
 27171                           ;miwi_mesh.c: 5040: OptimalChannel = i;
 27172  007176  C13F  F13A         	movff	MiApp_NoiseDetection@i,MiApp_NoiseDetection@OptimalChannel
 27173                           
 27174                           ; BSR set to: 1
 27175                           ;miwi_mesh.c: 5041: if( RSSIValue )
 27176  00717A  0101               	movlb	1	; () banked
 27177  00717C  5123               	movf	MiApp_NoiseDetection@RSSIValue& (0+255),w,b
 27178  00717E  0101               	movlb	1	; () banked
 27179  007180  1124               	iorwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),w,b
 27180  007182  B4D8               	btfsc	status,2,c
 27181  007184  D006               	goto	l19171
 27182                           
 27183                           ; BSR set to: 1
 27184                           ;miwi_mesh.c: 5042: {
 27185                           ;miwi_mesh.c: 5043: *RSSIValue = minRSSI;
 27186  007186  C123  FFD9         	movff	MiApp_NoiseDetection@RSSIValue,fsr2l
 27187  00718A  C124  FFDA         	movff	MiApp_NoiseDetection@RSSIValue+1,fsr2h
 27188  00718E  C13E  FFDF         	movff	MiApp_NoiseDetection@minRSSI,indf2
 27189  007192                     l19171:
 27190                           
 27191                           ; BSR set to: 1
 27192                           ;miwi_mesh.c: 5044: }
 27193                           ;miwi_mesh.c: 5045: }
 27194                           ;miwi_mesh.c: 5046: }
 27195                           ;miwi_mesh.c: 5047: i++;
 27196  007192  0101               	movlb	1	; () banked
 27197  007194  2B3F               	incf	MiApp_NoiseDetection@i& (0+255),f,b
 27198  007196                     l19173:
 27199                           
 27200                           ; BSR set to: 1
 27201  007196  0E1F               	movlw	31
 27202  007198  0101               	movlb	1	; () banked
 27203  00719A  653F               	cpfsgt	MiApp_NoiseDetection@i& (0+255),b
 27204  00719C  D722               	goto	l19135
 27205                           
 27206                           ; BSR set to: 1
 27207                           ;miwi_mesh.c: 5048: }
 27208                           ;miwi_mesh.c: 5050: return OptimalChannel;
 27209                           
 27210                           ; BSR set to: 1
 27211  00719E  0101               	movlb	1	; () banked
 27212  0071A0  513A               	movf	MiApp_NoiseDetection@OptimalChannel& (0+255),w,b
 27213  0071A2  0012               	return	
 27214  0071A4                     __end_of_MiApp_NoiseDetection:
 27215                           	opt stack 0
 27216                           tblptru	equ	0xFF8
 27217                           tblptrh	equ	0xFF7
 27218                           tblptrl	equ	0xFF6
 27219                           tablat	equ	0xFF5
 27220                           prodh	equ	0xFF4
 27221                           prodl	equ	0xFF3
 27222                           intcon	equ	0xFF2
 27223                           intcon2	equ	0xFF1
 27224                           intcon3	equ	0xFF0
 27225                           indf0	equ	0xFEF
 27226                           postinc0	equ	0xFEE
 27227                           plusw0	equ	0xFEB
 27228                           fsr0h	equ	0xFEA
 27229                           fsr0l	equ	0xFE9
 27230                           wreg	equ	0xFE8
 27231                           indf1	equ	0xFE7
 27232                           postinc1	equ	0xFE6
 27233                           postdec1	equ	0xFE5
 27234                           fsr1h	equ	0xFE2
 27235                           fsr1l	equ	0xFE1
 27236                           indf2	equ	0xFDF
 27237                           postinc2	equ	0xFDE
 27238                           postdec2	equ	0xFDD
 27239                           plusw2	equ	0xFDB
 27240                           fsr2h	equ	0xFDA
 27241                           fsr2l	equ	0xFD9
 27242                           status	equ	0xFD8
 27243                           
 27244 ;; *************** function _MiWi_TickGet *****************
 27245 ;; Defined at:
 27246 ;;		line 105 in file "src/18F27J53/symbol.c"
 27247 ;; Parameters:    Size  Location     Type
 27248 ;;		None
 27249 ;; Auto vars:     Size  Location     Type
 27250 ;;  currentTime     4    6[BANK1 ] struct _MIWI_TICK
 27251 ;;  failureCount    1    5[BANK1 ] unsigned char 
 27252 ;; Return value:  Size  Location     Type
 27253 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 27254 ;; Registers used:
 27255 ;;		wreg, status,2, status,0
 27256 ;; Tracked objects:
 27257 ;;		On entry : 0/0
 27258 ;;		On exit  : 0/0
 27259 ;;		Unchanged: 0/0
 27260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27261 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27262 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27263 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27264 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27265 ;;Total ram usage:       10 bytes
 27266 ;; Hardware stack levels used:    1
 27267 ;; Hardware stack levels required when called:   16
 27268 ;; This function calls:
 27269 ;;		Nothing
 27270 ;; This function is called by:
 27271 ;;		_TxPacket
 27272 ;;		_MiMAC_ReceivedPacket
 27273 ;;		_BroadcastJitter
 27274 ;;		_MiWiTasks
 27275 ;;		_MiApp_UnicastAddress
 27276 ;;		_MiApp_NoiseDetection
 27277 ;;		_OpenSocket
 27278 ;;		_MiApp_SearchConnection
 27279 ;;		_MiApp_EstablishConnection
 27280 ;;		_MiApp_UnicastConnection
 27281 ;; This function uses a non-reentrant model
 27282 ;;
 27283                           
 27284                           	psect	text67
 27285  00B100                     __ptext67:
 27286                           	opt stack 0
 27287  00B100                     _MiWi_TickGet:
 27288                           	opt stack 8
 27289                           
 27290                           ;symbol.c: 107: MIWI_TICK currentTime;
 27291                           ;symbol.c: 110: uint8_t failureCounter;
 27292                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 27293                           
 27294                           ; BSR set to: 1
 27295                           ;incstack = 0
 27296  00B100  909D               	bcf	3997,0,c	;volatile
 27297                           
 27298                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 27299  00B102  0E00               	movlw	0
 27300  00B104  0101               	movlb	1	; () banked
 27301  00B106  6F08               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 27302                           
 27303                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 27304  00B108  0E00               	movlw	0
 27305  00B10A  0101               	movlb	1	; () banked
 27306  00B10C  6F09               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 27307                           
 27308                           ;symbol.c: 119: failureCounter = 0;
 27309  00B10E  0E00               	movlw	0
 27310  00B110  0101               	movlb	1	; () banked
 27311  00B112  6F05               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 27312  00B114                     l16753:
 27313                           
 27314                           ; BSR set to: 1
 27315                           ;symbol.c: 122: {
 27316                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 27317  00B114  CFCE F106          	movff	4046,MiWi_TickGet@currentTime	;volatile
 27318                           
 27319                           ; BSR set to: 1
 27320                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 27321  00B118  CFCF F107          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 27322                           
 27323                           ; BSR set to: 1
 27324                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 27325  00B11C  0101               	movlb	1	; () banked
 27326  00B11E  2906               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 27327  00B120  E10D               	bnz	l62
 27328  00B122  0101               	movlb	1	; () banked
 27329  00B124  2907               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 27330  00B126  A4D8               	btfss	status,2,c
 27331  00B128  D009               	goto	l62
 27332                           
 27333                           ; BSR set to: 1
 27334  00B12A  0101               	movlb	1	; () banked
 27335  00B12C  2B05               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 27336  00B12E  0505               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 27337  00B130  0101               	movlb	1	; () banked
 27338  00B132  6F04               	movwf	??_MiWi_TickGet& (0+255),b
 27339  00B134  0E02               	movlw	2
 27340  00B136  0101               	movlb	1	; () banked
 27341  00B138  6504               	cpfsgt	??_MiWi_TickGet& (0+255),b
 27342  00B13A  D7EC               	goto	l16753
 27343  00B13C                     l62:
 27344                           
 27345                           ; BSR set to: 1
 27346                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 27347  00B13C  A09E               	btfss	3998,0,c	;volatile
 27348  00B13E  D008               	goto	l16767
 27349                           
 27350                           ; BSR set to: 1
 27351                           ;symbol.c: 130: {
 27352                           ;symbol.c: 132: {
 27353                           ;symbol.c: 135: currentTime.byte.b2++;
 27354  00B140  0101               	movlb	1	; () banked
 27355  00B142  2B08               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 27356                           
 27357                           ; BSR set to: 1
 27358                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 27359  00B144  0100               	movlb	0	; () banked
 27360  00B146  29A1               	incf	_timerExtension1& (0+255),w,b	;volatile
 27361  00B148  A4D8               	btfss	status,2,c
 27362  00B14A  D002               	goto	l16767
 27363                           
 27364                           ; BSR set to: 0
 27365                           ;symbol.c: 137: {
 27366                           ;symbol.c: 138: currentTime.byte.b3++;
 27367  00B14C  0101               	movlb	1	; () banked
 27368  00B14E  2B09               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 27369  00B150                     l16767:
 27370                           
 27371                           ;symbol.c: 139: }
 27372                           ;symbol.c: 140: }
 27373                           ;symbol.c: 141: }
 27374                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 27375  00B150  0100               	movlb	0	; () banked
 27376  00B152  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 27377  00B154  0101               	movlb	1	; () banked
 27378  00B156  2708               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 27379                           
 27380                           ; BSR set to: 1
 27381                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 27382  00B158  0100               	movlb	0	; () banked
 27383  00B15A  51A2               	movf	_timerExtension2& (0+255),w,b	;volatile
 27384  00B15C  0101               	movlb	1	; () banked
 27385  00B15E  2709               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 27386                           
 27387                           ; BSR set to: 1
 27388                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 27389  00B160  809D               	bsf	3997,0,c	;volatile
 27390                           
 27391                           ; BSR set to: 1
 27392                           ;symbol.c: 150: return currentTime;
 27393  00B162  C106  F100         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 27394  00B166  C107  F101         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 27395  00B16A  C108  F102         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 27396  00B16E  C109  F103         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 27397  00B172  0012               	return	
 27398  00B174                     __end_of_MiWi_TickGet:
 27399                           	opt stack 0
 27400                           tblptru	equ	0xFF8
 27401                           tblptrh	equ	0xFF7
 27402                           tblptrl	equ	0xFF6
 27403                           tablat	equ	0xFF5
 27404                           prodh	equ	0xFF4
 27405                           prodl	equ	0xFF3
 27406                           intcon	equ	0xFF2
 27407                           intcon2	equ	0xFF1
 27408                           intcon3	equ	0xFF0
 27409                           indf0	equ	0xFEF
 27410                           postinc0	equ	0xFEE
 27411                           plusw0	equ	0xFEB
 27412                           fsr0h	equ	0xFEA
 27413                           fsr0l	equ	0xFE9
 27414                           wreg	equ	0xFE8
 27415                           indf1	equ	0xFE7
 27416                           postinc1	equ	0xFE6
 27417                           postdec1	equ	0xFE5
 27418                           fsr1h	equ	0xFE2
 27419                           fsr1l	equ	0xFE1
 27420                           indf2	equ	0xFDF
 27421                           postinc2	equ	0xFDE
 27422                           postdec2	equ	0xFDD
 27423                           plusw2	equ	0xFDB
 27424                           fsr2h	equ	0xFDA
 27425                           fsr2l	equ	0xFD9
 27426                           status	equ	0xFD8
 27427                           
 27428 ;; *************** function _MiMAC_ChannelAssessment *****************
 27429 ;; Defined at:
 27430 ;;		line 1092 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27431 ;; Parameters:    Size  Location     Type
 27432 ;;  AssessmentMo    1    wreg     unsigned char 
 27433 ;; Auto vars:     Size  Location     Type
 27434 ;;  AssessmentMo    1   24[BANK1 ] unsigned char 
 27435 ;;  result          6   18[BANK1 ] unsigned char [6]
 27436 ;;  count           2   26[BANK1 ] unsigned int 
 27437 ;;  i               1   28[BANK1 ] unsigned char 
 27438 ;;  k               1   25[BANK1 ] unsigned char 
 27439 ;; Return value:  Size  Location     Type
 27440 ;;                  1    wreg      unsigned char 
 27441 ;; Registers used:
 27442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27443 ;; Tracked objects:
 27444 ;;		On entry : 0/0
 27445 ;;		On exit  : 0/0
 27446 ;;		Unchanged: 0/0
 27447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27449 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27450 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27451 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27452 ;;Total ram usage:       15 bytes
 27453 ;; Hardware stack levels used:    1
 27454 ;; Hardware stack levels required when called:   19
 27455 ;; This function calls:
 27456 ;;		_RegisterRead
 27457 ;;		___awdiv
 27458 ;;		___lwdiv
 27459 ;; This function is called by:
 27460 ;;		_MiApp_NoiseDetection
 27461 ;; This function uses a non-reentrant model
 27462 ;;
 27463                           
 27464                           	psect	text68
 27465  0089D6                     __ptext68:
 27466                           	opt stack 0
 27467  0089D6                     _MiMAC_ChannelAssessment:
 27468                           	opt stack 9
 27469                           
 27470                           ; BSR set to: 1
 27471                           ;incstack = 0
 27472                           ;MiMAC_ChannelAssessment@AssessmentMode stored from wreg
 27473  0089D6  0101               	movlb	1	; () banked
 27474  0089D8  6F18               	movwf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),b
 27475                           
 27476                           ;drv_mrf_miwi_89xa.c: 1094: uint8_t i;
 27477                           ;drv_mrf_miwi_89xa.c: 1095: uint8_t k;
 27478                           ;drv_mrf_miwi_89xa.c: 1096: uint16_t count=0;
 27479  0089DA  0E00               	movlw	0
 27480  0089DC  0101               	movlb	1	; () banked
 27481  0089DE  6F1B               	movwf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 27482  0089E0  0E00               	movlw	0
 27483  0089E2  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 27484                           
 27485                           ; BSR set to: 1
 27486                           ;drv_mrf_miwi_89xa.c: 1097: uint8_t result[6] = {42, 78, 114, 150, 186 ,222};
 27487  0089E4  EE22  F0F9         	lfsr	2,MiMAC_ChannelAssessment@F10758
 27488  0089E8  EE11  F012         	lfsr	1,MiMAC_ChannelAssessment@result
 27489  0089EC  0E05               	movlw	5
 27490  0089EE                     u19791:
 27491  0089EE  CFDB FFE3          	movff	plusw2,plusw1
 27492  0089F2  06E8               	decf	wreg,f,c
 27493  0089F4  E2FC               	bc	u19791
 27494                           
 27495                           ; BSR set to: 1
 27496                           ;drv_mrf_miwi_89xa.c: 1099: for(i = 0; i < 0xFF; i++)
 27497  0089F6  0E00               	movlw	0
 27498  0089F8  0101               	movlb	1	; () banked
 27499  0089FA  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27500  0089FC                     l17911:
 27501                           
 27502                           ; BSR set to: 1
 27503  0089FC  0101               	movlb	1	; () banked
 27504  0089FE  291C               	incf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27505  008A00  B4D8               	btfsc	status,2,c
 27506  008A02  D041               	goto	l17937
 27507                           
 27508                           ; BSR set to: 1
 27509                           ;drv_mrf_miwi_89xa.c: 1100: {
 27510                           ;drv_mrf_miwi_89xa.c: 1101: if( AssessmentMode == 0x00 )
 27511                           
 27512                           ; BSR set to: 1
 27513                           
 27514                           ; BSR set to: 1
 27515  008A04  0101               	movlb	1	; () banked
 27516  008A06  5118               	movf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 27517  008A08  0101               	movlb	1	; () banked
 27518  008A0A  A4D8               	btfss	status,2,c
 27519  008A0C  D012               	goto	l17919
 27520                           
 27521                           ; BSR set to: 1
 27522                           ;drv_mrf_miwi_89xa.c: 1102: {
 27523                           ;drv_mrf_miwi_89xa.c: 1103: count += ((RegisterRead(0x2800>>8)/2));
 27524  008A0E  0E28               	movlw	40
 27525  008A10  EC85  F05A         	call	_RegisterRead
 27526  008A14  0101               	movlb	1	; () banked
 27527  008A16  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27528  008A18  0101               	movlb	1	; () banked
 27529  008A1A  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27530  008A1C  0101               	movlb	1	; () banked
 27531  008A1E  6F06               	movwf	___awdiv@dividend& (0+255),b
 27532  008A20  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27533  008A22  0E00               	movlw	0
 27534  008A24  0101               	movlb	1	; () banked
 27535  008A26  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27536  008A28  0E02               	movlw	2
 27537  008A2A  6F08               	movwf	___awdiv@divisor& (0+255),b
 27538  008A2C  ECA1  F050         	call	___awdiv	;wreg free
 27539  008A30  D015               	goto	L11
 27540  008A32                     l17919:
 27541                           
 27542                           ; BSR set to: 1
 27543                           ;drv_mrf_miwi_89xa.c: 1105: else if( AssessmentMode == 0x01 )
 27544  008A32  0101               	movlb	1	; () banked
 27545  008A34  0518               	decf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 27546  008A36  A4D8               	btfss	status,2,c
 27547  008A38  D019               	goto	l17923
 27548                           
 27549                           ; BSR set to: 1
 27550                           ;drv_mrf_miwi_89xa.c: 1106: {
 27551                           ;drv_mrf_miwi_89xa.c: 1107: count += ((RegisterRead(0x2800>>8)/2));
 27552  008A3A  0E28               	movlw	40
 27553  008A3C  EC85  F05A         	call	_RegisterRead
 27554  008A40  0101               	movlb	1	; () banked
 27555  008A42  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27556  008A44  0101               	movlb	1	; () banked
 27557  008A46  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27558  008A48  0101               	movlb	1	; () banked
 27559  008A4A  6F06               	movwf	___awdiv@dividend& (0+255),b
 27560  008A4C  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27561  008A4E  0E00               	movlw	0
 27562  008A50  0101               	movlb	1	; () banked
 27563  008A52  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27564  008A54  0E02               	movlw	2
 27565  008A56  6F08               	movwf	___awdiv@divisor& (0+255),b
 27566  008A58  ECA1  F050         	call	___awdiv	;wreg free
 27567  008A5C                     L11:
 27568  008A5C  0101               	movlb	1	; () banked
 27569  008A5E  5106               	movf	?___awdiv& (0+255),w,b
 27570  008A60  0101               	movlb	1	; () banked
 27571  008A62  271A               	addwf	MiMAC_ChannelAssessment@count& (0+255),f,b
 27572  008A64  0101               	movlb	1	; () banked
 27573  008A66  5107               	movf	(?___awdiv+1)& (0+255),w,b
 27574  008A68  0101               	movlb	1	; () banked
 27575  008A6A  231B               	addwfc	(MiMAC_ChannelAssessment@count+1)& (0+255),f,b
 27576  008A6C                     l17923:
 27577                           
 27578                           ; BSR set to: 1
 27579                           ;drv_mrf_miwi_89xa.c: 1109: }
 27580                           ;drv_mrf_miwi_89xa.c: 1110: for(k = 0; k < 0xFF; k++) {}
 27581  008A6C  0E00               	movlw	0
 27582  008A6E  0101               	movlb	1	; () banked
 27583  008A70  6F19               	movwf	MiMAC_ChannelAssessment@k& (0+255),b
 27584  008A72                     l17925:
 27585                           
 27586                           ; BSR set to: 1
 27587  008A72  0101               	movlb	1	; () banked
 27588  008A74  2919               	incf	MiMAC_ChannelAssessment@k& (0+255),w,b
 27589  008A76  B4D8               	btfsc	status,2,c
 27590  008A78  D003               	goto	l17933
 27591                           
 27592                           ; BSR set to: 1
 27593                           
 27594                           ; BSR set to: 1
 27595                           
 27596                           ; BSR set to: 1
 27597  008A7A  0101               	movlb	1	; () banked
 27598  008A7C  2B19               	incf	MiMAC_ChannelAssessment@k& (0+255),f,b
 27599  008A7E  D7F9               	goto	l17925
 27600  008A80                     l17933:
 27601                           
 27602                           ; BSR set to: 1
 27603  008A80  0101               	movlb	1	; () banked
 27604  008A82  2B1C               	incf	MiMAC_ChannelAssessment@i& (0+255),f,b
 27605  008A84  D7BB               	goto	l17911
 27606  008A86                     l17937:
 27607                           
 27608                           ; BSR set to: 1
 27609                           ;drv_mrf_miwi_89xa.c: 1111: }
 27610                           ;drv_mrf_miwi_89xa.c: 1113: count = (count>>8);
 27611  008A86  0101               	movlb	1	; () banked
 27612  008A88  511B               	movf	(MiMAC_ChannelAssessment@count+1)& (0+255),w,b
 27613  008A8A  0101               	movlb	1	; () banked
 27614  008A8C  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 27615  008A8E  6B1B               	clrf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 27616                           
 27617                           ; BSR set to: 1
 27618                           ;drv_mrf_miwi_89xa.c: 1114: i = (count/10);
 27619  008A90  C11A  F100         	movff	MiMAC_ChannelAssessment@count,___lwdiv@dividend
 27620  008A94  C11B  F101         	movff	MiMAC_ChannelAssessment@count+1,___lwdiv@dividend+1
 27621  008A98  0E00               	movlw	0
 27622  008A9A  0101               	movlb	1	; () banked
 27623  008A9C  6F03               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27624  008A9E  0E0A               	movlw	10
 27625  008AA0  6F02               	movwf	___lwdiv@divisor& (0+255),b
 27626  008AA2  EC09  F058         	call	___lwdiv	;wreg free
 27627  008AA6  0101               	movlb	1	; () banked
 27628  008AA8  5100               	movf	?___lwdiv& (0+255),w,b
 27629  008AAA  0101               	movlb	1	; () banked
 27630  008AAC  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27631                           
 27632                           ; BSR set to: 1
 27633                           ;drv_mrf_miwi_89xa.c: 1115: if(i>6) i = 6;
 27634  008AAE  0E06               	movlw	6
 27635  008AB0  0101               	movlb	1	; () banked
 27636  008AB2  651C               	cpfsgt	MiMAC_ChannelAssessment@i& (0+255),b
 27637  008AB4  D003               	goto	l383
 27638                           
 27639                           ; BSR set to: 1
 27640  008AB6  0E06               	movlw	6
 27641  008AB8  0101               	movlb	1	; () banked
 27642  008ABA  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27643  008ABC                     l383:
 27644                           
 27645                           ; BSR set to: 1
 27646                           ;drv_mrf_miwi_89xa.c: 1116: if(i<1) i = 1;
 27647  008ABC  0101               	movlb	1	; () banked
 27648  008ABE  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27649  008AC0  0101               	movlb	1	; () banked
 27650  008AC2  A4D8               	btfss	status,2,c
 27651  008AC4  D003               	goto	l17947
 27652                           
 27653                           ; BSR set to: 1
 27654  008AC6  0E01               	movlw	1
 27655  008AC8  0101               	movlb	1	; () banked
 27656  008ACA  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27657  008ACC                     l17947:
 27658                           
 27659                           ; BSR set to: 1
 27660                           ;drv_mrf_miwi_89xa.c: 1117: return(result[i-1]);
 27661  008ACC  0EFF               	movlw	255
 27662  008ACE  0101               	movlb	1	; () banked
 27663  008AD0  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27664  008AD2  0EFF               	movlw	255
 27665  008AD4  0101               	movlb	1	; () banked
 27666  008AD6  6F0F               	movwf	(??_MiMAC_ChannelAssessment+1)& (0+255),b
 27667  008AD8  0101               	movlb	1	; () banked
 27668  008ADA  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27669  008ADC  0101               	movlb	1	; () banked
 27670  008ADE  6F10               	movwf	(??_MiMAC_ChannelAssessment+2)& (0+255),b
 27671  008AE0  6B11               	clrf	(??_MiMAC_ChannelAssessment+3)& (0+255),b
 27672  008AE2  0101               	movlb	1	; () banked
 27673  008AE4  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27674  008AE6  0101               	movlb	1	; () banked
 27675  008AE8  2710               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),f,b
 27676  008AEA  0101               	movlb	1	; () banked
 27677  008AEC  510F               	movf	(??_MiMAC_ChannelAssessment+1)& (0+255),w,b
 27678  008AEE  0101               	movlb	1	; () banked
 27679  008AF0  2311               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),f,b
 27680  008AF2  0E12               	movlw	low MiMAC_ChannelAssessment@result
 27681  008AF4  0101               	movlb	1	; () banked
 27682  008AF6  2510               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),w,b
 27683  008AF8  6ED9               	movwf	fsr2l,c
 27684  008AFA  0E01               	movlw	high MiMAC_ChannelAssessment@result
 27685  008AFC  0101               	movlb	1	; () banked
 27686  008AFE  2111               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),w,b
 27687  008B00  6EDA               	movwf	fsr2h,c
 27688  008B02  50DF               	movf	indf2,w,c
 27689  008B04  0012               	return	
 27690  008B06                     __end_of_MiMAC_ChannelAssessment:
 27691                           	opt stack 0
 27692                           tblptru	equ	0xFF8
 27693                           tblptrh	equ	0xFF7
 27694                           tblptrl	equ	0xFF6
 27695                           tablat	equ	0xFF5
 27696                           prodh	equ	0xFF4
 27697                           prodl	equ	0xFF3
 27698                           intcon	equ	0xFF2
 27699                           intcon2	equ	0xFF1
 27700                           intcon3	equ	0xFF0
 27701                           indf0	equ	0xFEF
 27702                           postinc0	equ	0xFEE
 27703                           plusw0	equ	0xFEB
 27704                           fsr0h	equ	0xFEA
 27705                           fsr0l	equ	0xFE9
 27706                           wreg	equ	0xFE8
 27707                           indf1	equ	0xFE7
 27708                           postinc1	equ	0xFE6
 27709                           postdec1	equ	0xFE5
 27710                           plusw1	equ	0xFE3
 27711                           fsr1h	equ	0xFE2
 27712                           fsr1l	equ	0xFE1
 27713                           indf2	equ	0xFDF
 27714                           postinc2	equ	0xFDE
 27715                           postdec2	equ	0xFDD
 27716                           plusw2	equ	0xFDB
 27717                           fsr2h	equ	0xFDA
 27718                           fsr2l	equ	0xFD9
 27719                           status	equ	0xFD8
 27720                           
 27721 ;; *************** function ___lwdiv *****************
 27722 ;; Defined at:
 27723 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 27724 ;; Parameters:    Size  Location     Type
 27725 ;;  dividend        2    0[BANK1 ] unsigned int 
 27726 ;;  divisor         2    2[BANK1 ] unsigned int 
 27727 ;; Auto vars:     Size  Location     Type
 27728 ;;  quotient        2    5[BANK1 ] unsigned int 
 27729 ;;  counter         1    4[BANK1 ] unsigned char 
 27730 ;; Return value:  Size  Location     Type
 27731 ;;                  2    0[BANK1 ] unsigned int 
 27732 ;; Registers used:
 27733 ;;		wreg, status,2, status,0
 27734 ;; Tracked objects:
 27735 ;;		On entry : 0/0
 27736 ;;		On exit  : 0/0
 27737 ;;		Unchanged: 0/0
 27738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27739 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27740 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27742 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27743 ;;Total ram usage:        7 bytes
 27744 ;; Hardware stack levels used:    1
 27745 ;; Hardware stack levels required when called:   16
 27746 ;; This function calls:
 27747 ;;		Nothing
 27748 ;; This function is called by:
 27749 ;;		_MiMAC_ChannelAssessment
 27750 ;;		_sprintf
 27751 ;; This function uses a non-reentrant model
 27752 ;;
 27753                           
 27754                           	psect	text69
 27755  00B012                     __ptext69:
 27756                           	opt stack 0
 27757  00B012                     ___lwdiv:
 27758                           	opt stack 13
 27759                           
 27760                           ; BSR set to: 1
 27761                           ;incstack = 0
 27762  00B012  0E00               	movlw	0
 27763  00B014  0101               	movlb	1	; () banked
 27764  00B016  6F06               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27765  00B018  0E00               	movlw	0
 27766  00B01A  6F05               	movwf	___lwdiv@quotient& (0+255),b
 27767                           
 27768                           ; BSR set to: 1
 27769  00B01C  0101               	movlb	1	; () banked
 27770  00B01E  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27771  00B020  0101               	movlb	1	; () banked
 27772  00B022  1103               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27773  00B024  B4D8               	btfsc	status,2,c
 27774  00B026  D02C               	goto	l2658
 27775                           
 27776                           ; BSR set to: 1
 27777  00B028  0E01               	movlw	1
 27778  00B02A  0101               	movlb	1	; () banked
 27779  00B02C  6F04               	movwf	___lwdiv@counter& (0+255),b
 27780  00B02E  D006               	goto	l17877
 27781  00B030                     l17875:
 27782                           
 27783                           ; BSR set to: 1
 27784  00B030  0101               	movlb	1	; () banked
 27785  00B032  90D8               	bcf	status,0,c
 27786  00B034  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
 27787  00B036  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27788  00B038  0101               	movlb	1	; () banked
 27789  00B03A  2B04               	incf	___lwdiv@counter& (0+255),f,b
 27790  00B03C                     l17877:
 27791                           
 27792                           ; BSR set to: 1
 27793  00B03C  0101               	movlb	1	; () banked
 27794  00B03E  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27795  00B040  D7F7               	goto	l17875
 27796  00B042                     l17879:
 27797                           
 27798                           ; BSR set to: 1
 27799  00B042  0101               	movlb	1	; () banked
 27800  00B044  90D8               	bcf	status,0,c
 27801  00B046  3705               	rlcf	___lwdiv@quotient& (0+255),f,b
 27802  00B048  3706               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27803                           
 27804                           ; BSR set to: 1
 27805  00B04A  0101               	movlb	1	; () banked
 27806  00B04C  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27807  00B04E  0101               	movlb	1	; () banked
 27808  00B050  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
 27809  00B052  0101               	movlb	1	; () banked
 27810  00B054  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27811  00B056  0101               	movlb	1	; () banked
 27812  00B058  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27813  00B05A  A0D8               	btfss	status,0,c
 27814  00B05C  D00A               	goto	l17887
 27815                           
 27816                           ; BSR set to: 1
 27817  00B05E  0101               	movlb	1	; () banked
 27818  00B060  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27819  00B062  0101               	movlb	1	; () banked
 27820  00B064  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
 27821  00B066  0101               	movlb	1	; () banked
 27822  00B068  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27823  00B06A  0101               	movlb	1	; () banked
 27824  00B06C  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27825                           
 27826                           ; BSR set to: 1
 27827  00B06E  0101               	movlb	1	; () banked
 27828  00B070  8105               	bsf	___lwdiv@quotient& (0+255),0,b
 27829  00B072                     l17887:
 27830                           
 27831                           ; BSR set to: 1
 27832  00B072  0101               	movlb	1	; () banked
 27833  00B074  90D8               	bcf	status,0,c
 27834  00B076  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27835  00B078  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
 27836                           
 27837                           ; BSR set to: 1
 27838  00B07A  0101               	movlb	1	; () banked
 27839  00B07C  2F04               	decfsz	___lwdiv@counter& (0+255),f,b
 27840  00B07E  D7E1               	goto	l17879
 27841  00B080                     l2658:
 27842                           
 27843                           ; BSR set to: 1
 27844  00B080  C105  F100         	movff	___lwdiv@quotient,?___lwdiv
 27845  00B084  C106  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27846                           
 27847                           ; BSR set to: 1
 27848  00B088  0012               	return		;funcret
 27849  00B08A                     __end_of___lwdiv:
 27850                           	opt stack 0
 27851                           tblptru	equ	0xFF8
 27852                           tblptrh	equ	0xFF7
 27853                           tblptrl	equ	0xFF6
 27854                           tablat	equ	0xFF5
 27855                           prodh	equ	0xFF4
 27856                           prodl	equ	0xFF3
 27857                           intcon	equ	0xFF2
 27858                           intcon2	equ	0xFF1
 27859                           intcon3	equ	0xFF0
 27860                           indf0	equ	0xFEF
 27861                           postinc0	equ	0xFEE
 27862                           plusw0	equ	0xFEB
 27863                           fsr0h	equ	0xFEA
 27864                           fsr0l	equ	0xFE9
 27865                           wreg	equ	0xFE8
 27866                           indf1	equ	0xFE7
 27867                           postinc1	equ	0xFE6
 27868                           postdec1	equ	0xFE5
 27869                           plusw1	equ	0xFE3
 27870                           fsr1h	equ	0xFE2
 27871                           fsr1l	equ	0xFE1
 27872                           indf2	equ	0xFDF
 27873                           postinc2	equ	0xFDE
 27874                           postdec2	equ	0xFDD
 27875                           plusw2	equ	0xFDB
 27876                           fsr2h	equ	0xFDA
 27877                           fsr2l	equ	0xFD9
 27878                           status	equ	0xFD8
 27879                           
 27880 ;; *************** function ___awdiv *****************
 27881 ;; Defined at:
 27882 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 27883 ;; Parameters:    Size  Location     Type
 27884 ;;  dividend        2    6[BANK1 ] int 
 27885 ;;  divisor         2    8[BANK1 ] int 
 27886 ;; Auto vars:     Size  Location     Type
 27887 ;;  quotient        2   12[BANK1 ] int 
 27888 ;;  sign            1   11[BANK1 ] unsigned char 
 27889 ;;  counter         1   10[BANK1 ] unsigned char 
 27890 ;; Return value:  Size  Location     Type
 27891 ;;                  2    6[BANK1 ] int 
 27892 ;; Registers used:
 27893 ;;		wreg, status,2, status,0
 27894 ;; Tracked objects:
 27895 ;;		On entry : 0/0
 27896 ;;		On exit  : 0/0
 27897 ;;		Unchanged: 0/0
 27898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27899 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27900 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27902 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27903 ;;Total ram usage:        8 bytes
 27904 ;; Hardware stack levels used:    1
 27905 ;; Hardware stack levels required when called:   16
 27906 ;; This function calls:
 27907 ;;		Nothing
 27908 ;; This function is called by:
 27909 ;;		_MiMAC_ChannelAssessment
 27910 ;;		_CTR
 27911 ;;		_CBC_MAC
 27912 ;;		_MiApp_NoiseDetection
 27913 ;; This function uses a non-reentrant model
 27914 ;;
 27915                           
 27916                           	psect	text70
 27917  00A142                     __ptext70:
 27918                           	opt stack 0
 27919  00A142                     ___awdiv:
 27920                           	opt stack 7
 27921                           
 27922                           ; BSR set to: 1
 27923                           ;incstack = 0
 27924  00A142  0E00               	movlw	0
 27925  00A144  0101               	movlb	1	; () banked
 27926  00A146  6F0B               	movwf	___awdiv@sign& (0+255),b
 27927                           
 27928                           ; BSR set to: 1
 27929  00A148  0101               	movlb	1	; () banked
 27930  00A14A  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27931  00A14C  D008               	goto	l16713
 27932                           
 27933                           ; BSR set to: 1
 27934  00A14E  0101               	movlb	1	; () banked
 27935  00A150  6D08               	negf	___awdiv@divisor& (0+255),b
 27936  00A152  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 27937  00A154  B0D8               	btfsc	status,0,c
 27938  00A156  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 27939                           
 27940                           ; BSR set to: 1
 27941  00A158  0E01               	movlw	1
 27942  00A15A  0101               	movlb	1	; () banked
 27943  00A15C  6F0B               	movwf	___awdiv@sign& (0+255),b
 27944  00A15E                     l16713:
 27945                           
 27946                           ; BSR set to: 1
 27947  00A15E  0101               	movlb	1	; () banked
 27948  00A160  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 27949  00A162  D008               	goto	l16719
 27950                           
 27951                           ; BSR set to: 1
 27952  00A164  0101               	movlb	1	; () banked
 27953  00A166  6D06               	negf	___awdiv@dividend& (0+255),b
 27954  00A168  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 27955  00A16A  B0D8               	btfsc	status,0,c
 27956  00A16C  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 27957                           
 27958                           ; BSR set to: 1
 27959  00A16E  0E01               	movlw	1
 27960  00A170  0101               	movlb	1	; () banked
 27961  00A172  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 27962  00A174                     l16719:
 27963                           
 27964                           ; BSR set to: 1
 27965  00A174  0E00               	movlw	0
 27966  00A176  0101               	movlb	1	; () banked
 27967  00A178  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 27968  00A17A  0E00               	movlw	0
 27969  00A17C  6F0C               	movwf	___awdiv@quotient& (0+255),b
 27970                           
 27971                           ; BSR set to: 1
 27972  00A17E  0101               	movlb	1	; () banked
 27973  00A180  5108               	movf	___awdiv@divisor& (0+255),w,b
 27974  00A182  0101               	movlb	1	; () banked
 27975  00A184  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 27976  00A186  B4D8               	btfsc	status,2,c
 27977  00A188  D02C               	goto	l16741
 27978                           
 27979                           ; BSR set to: 1
 27980  00A18A  0E01               	movlw	1
 27981  00A18C  0101               	movlb	1	; () banked
 27982  00A18E  6F0A               	movwf	___awdiv@counter& (0+255),b
 27983  00A190  D006               	goto	l16727
 27984  00A192                     l16725:
 27985                           
 27986                           ; BSR set to: 1
 27987  00A192  0101               	movlb	1	; () banked
 27988  00A194  90D8               	bcf	status,0,c
 27989  00A196  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 27990  00A198  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 27991  00A19A  0101               	movlb	1	; () banked
 27992  00A19C  2B0A               	incf	___awdiv@counter& (0+255),f,b
 27993  00A19E                     l16727:
 27994                           
 27995                           ; BSR set to: 1
 27996  00A19E  0101               	movlb	1	; () banked
 27997  00A1A0  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27998  00A1A2  D7F7               	goto	l16725
 27999  00A1A4                     l16729:
 28000                           
 28001                           ; BSR set to: 1
 28002  00A1A4  0101               	movlb	1	; () banked
 28003  00A1A6  90D8               	bcf	status,0,c
 28004  00A1A8  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 28005  00A1AA  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28006                           
 28007                           ; BSR set to: 1
 28008  00A1AC  0101               	movlb	1	; () banked
 28009  00A1AE  5108               	movf	___awdiv@divisor& (0+255),w,b
 28010  00A1B0  0101               	movlb	1	; () banked
 28011  00A1B2  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 28012  00A1B4  0101               	movlb	1	; () banked
 28013  00A1B6  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28014  00A1B8  0101               	movlb	1	; () banked
 28015  00A1BA  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28016  00A1BC  A0D8               	btfss	status,0,c
 28017  00A1BE  D00A               	goto	l16737
 28018                           
 28019                           ; BSR set to: 1
 28020  00A1C0  0101               	movlb	1	; () banked
 28021  00A1C2  5108               	movf	___awdiv@divisor& (0+255),w,b
 28022  00A1C4  0101               	movlb	1	; () banked
 28023  00A1C6  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 28024  00A1C8  0101               	movlb	1	; () banked
 28025  00A1CA  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28026  00A1CC  0101               	movlb	1	; () banked
 28027  00A1CE  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28028                           
 28029                           ; BSR set to: 1
 28030  00A1D0  0101               	movlb	1	; () banked
 28031  00A1D2  810C               	bsf	___awdiv@quotient& (0+255),0,b
 28032  00A1D4                     l16737:
 28033                           
 28034                           ; BSR set to: 1
 28035  00A1D4  0101               	movlb	1	; () banked
 28036  00A1D6  90D8               	bcf	status,0,c
 28037  00A1D8  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28038  00A1DA  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 28039                           
 28040                           ; BSR set to: 1
 28041  00A1DC  0101               	movlb	1	; () banked
 28042  00A1DE  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 28043  00A1E0  D7E1               	goto	l16729
 28044  00A1E2                     l16741:
 28045                           
 28046                           ; BSR set to: 1
 28047  00A1E2  0101               	movlb	1	; () banked
 28048  00A1E4  510B               	movf	___awdiv@sign& (0+255),w,b
 28049  00A1E6  0101               	movlb	1	; () banked
 28050  00A1E8  B4D8               	btfsc	status,2,c
 28051  00A1EA  D005               	goto	l16745
 28052                           
 28053                           ; BSR set to: 1
 28054  00A1EC  0101               	movlb	1	; () banked
 28055  00A1EE  6D0C               	negf	___awdiv@quotient& (0+255),b
 28056  00A1F0  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28057  00A1F2  B0D8               	btfsc	status,0,c
 28058  00A1F4  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28059  00A1F6                     l16745:
 28060                           
 28061                           ; BSR set to: 1
 28062  00A1F6  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 28063  00A1FA  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 28064  00A1FE  0012               	return	
 28065  00A200                     __end_of___awdiv:
 28066                           	opt stack 0
 28067                           tblptru	equ	0xFF8
 28068                           tblptrh	equ	0xFF7
 28069                           tblptrl	equ	0xFF6
 28070                           tablat	equ	0xFF5
 28071                           prodh	equ	0xFF4
 28072                           prodl	equ	0xFF3
 28073                           intcon	equ	0xFF2
 28074                           intcon2	equ	0xFF1
 28075                           intcon3	equ	0xFF0
 28076                           indf0	equ	0xFEF
 28077                           postinc0	equ	0xFEE
 28078                           plusw0	equ	0xFEB
 28079                           fsr0h	equ	0xFEA
 28080                           fsr0l	equ	0xFE9
 28081                           wreg	equ	0xFE8
 28082                           indf1	equ	0xFE7
 28083                           postinc1	equ	0xFE6
 28084                           postdec1	equ	0xFE5
 28085                           plusw1	equ	0xFE3
 28086                           fsr1h	equ	0xFE2
 28087                           fsr1l	equ	0xFE1
 28088                           indf2	equ	0xFDF
 28089                           postinc2	equ	0xFDE
 28090                           postdec2	equ	0xFDD
 28091                           plusw2	equ	0xFDB
 28092                           fsr2h	equ	0xFDA
 28093                           fsr2l	equ	0xFD9
 28094                           status	equ	0xFD8
 28095                           
 28096 ;; *************** function _RegisterRead *****************
 28097 ;; Defined at:
 28098 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;  address         1    wreg     unsigned char 
 28101 ;; Auto vars:     Size  Location     Type
 28102 ;;  address         1    5[BANK1 ] unsigned char 
 28103 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 28104 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 28105 ;;  value           1    2[BANK1 ] unsigned char 
 28106 ;; Return value:  Size  Location     Type
 28107 ;;                  1    wreg      unsigned char 
 28108 ;; Registers used:
 28109 ;;		wreg, status,2, status,0, cstack
 28110 ;; Tracked objects:
 28111 ;;		On entry : 0/0
 28112 ;;		On exit  : 0/0
 28113 ;;		Unchanged: 0/0
 28114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28116 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28118 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28119 ;;Total ram usage:        4 bytes
 28120 ;; Hardware stack levels used:    1
 28121 ;; Hardware stack levels required when called:   18
 28122 ;; This function calls:
 28123 ;;		_SPIGet
 28124 ;;		_SPIPut
 28125 ;; This function is called by:
 28126 ;;		_TxPacket
 28127 ;;		_MiMAC_ChannelAssessment
 28128 ;;		_getReceiverBW
 28129 ;; This function uses a non-reentrant model
 28130 ;;
 28131                           
 28132                           	psect	text71
 28133  00B50A                     __ptext71:
 28134                           	opt stack 0
 28135  00B50A                     _RegisterRead:
 28136                           	opt stack 6
 28137                           
 28138                           ; BSR set to: 1
 28139                           ;incstack = 0
 28140                           ;RegisterRead@address stored from wreg
 28141  00B50A  0101               	movlb	1	; () banked
 28142  00B50C  6F05               	movwf	RegisterRead@address& (0+255),b
 28143                           
 28144                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 28145                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 28146  00B50E  0E00               	movlw	0
 28147  00B510  B6F0               	btfsc	intcon3,3,c	;volatile
 28148  00B512  0E01               	movlw	1
 28149  00B514  0101               	movlb	1	; () banked
 28150  00B516  6F03               	movwf	RegisterRead@IRQ1select& (0+255),b
 28151                           
 28152                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 28153  00B518  0E00               	movlw	0
 28154  00B51A  B8F2               	btfsc	intcon,4,c	;volatile
 28155  00B51C  0E01               	movlw	1
 28156  00B51E  0101               	movlb	1	; () banked
 28157  00B520  6F04               	movwf	RegisterRead@IRQ0select& (0+255),b
 28158                           
 28159                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 28160  00B522  98F2               	bcf	intcon,4,c	;volatile
 28161                           
 28162                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 28163  00B524  96F0               	bcf	intcon3,3,c	;volatile
 28164                           
 28165                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 28166  00B526  968A               	bcf	3978,3,c	;volatile
 28167                           
 28168                           ; BSR set to: 1
 28169                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 28170  00B528  0101               	movlb	1	; () banked
 28171  00B52A  5105               	movf	RegisterRead@address& (0+255),w,b
 28172  00B52C  0940               	iorlw	64
 28173  00B52E  0101               	movlb	1	; () banked
 28174  00B530  6F05               	movwf	RegisterRead@address& (0+255),b
 28175                           
 28176                           ; BSR set to: 1
 28177                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 28178  00B532  0101               	movlb	1	; () banked
 28179  00B534  5105               	movf	RegisterRead@address& (0+255),w,b
 28180  00B536  EC8E  F05D         	call	_SPIPut
 28181                           
 28182                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 28183  00B53A  ECDA  F05D         	call	_SPIGet	;wreg free
 28184  00B53E  0101               	movlb	1	; () banked
 28185  00B540  6F02               	movwf	RegisterRead@value& (0+255),b
 28186                           
 28187                           ; BSR set to: 1
 28188                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 28189  00B542  868A               	bsf	3978,3,c	;volatile
 28190                           
 28191                           ; BSR set to: 1
 28192                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 28193  00B544  0101               	movlb	1	; () banked
 28194  00B546  B103               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 28195  00B548  D002               	bra	u18155
 28196  00B54A  96F0               	bcf	intcon3,3,c	;volatile
 28197  00B54C  D001               	bra	u18156
 28198  00B54E                     u18155:
 28199  00B54E  86F0               	bsf	intcon3,3,c	;volatile
 28200  00B550                     u18156:
 28201                           
 28202                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 28203  00B550  0101               	movlb	1	; () banked
 28204  00B552  B104               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 28205  00B554  D002               	bra	u18165
 28206  00B556  98F2               	bcf	intcon,4,c	;volatile
 28207  00B558  D001               	bra	u18166
 28208  00B55A                     u18165:
 28209  00B55A  88F2               	bsf	intcon,4,c	;volatile
 28210  00B55C                     u18166:
 28211                           
 28212                           ;drv_mrf_miwi_89xa.c: 222: return value;
 28213  00B55C  0101               	movlb	1	; () banked
 28214  00B55E  5102               	movf	RegisterRead@value& (0+255),w,b
 28215  00B560  0012               	return	
 28216  00B562                     __end_of_RegisterRead:
 28217                           	opt stack 0
 28218                           tblptru	equ	0xFF8
 28219                           tblptrh	equ	0xFF7
 28220                           tblptrl	equ	0xFF6
 28221                           tablat	equ	0xFF5
 28222                           prodh	equ	0xFF4
 28223                           prodl	equ	0xFF3
 28224                           intcon	equ	0xFF2
 28225                           intcon2	equ	0xFF1
 28226                           intcon3	equ	0xFF0
 28227                           indf0	equ	0xFEF
 28228                           postinc0	equ	0xFEE
 28229                           plusw0	equ	0xFEB
 28230                           fsr0h	equ	0xFEA
 28231                           fsr0l	equ	0xFE9
 28232                           wreg	equ	0xFE8
 28233                           indf1	equ	0xFE7
 28234                           postinc1	equ	0xFE6
 28235                           postdec1	equ	0xFE5
 28236                           plusw1	equ	0xFE3
 28237                           fsr1h	equ	0xFE2
 28238                           fsr1l	equ	0xFE1
 28239                           indf2	equ	0xFDF
 28240                           postinc2	equ	0xFDE
 28241                           postdec2	equ	0xFDD
 28242                           plusw2	equ	0xFDB
 28243                           fsr2h	equ	0xFDA
 28244                           fsr2l	equ	0xFD9
 28245                           status	equ	0xFD8
 28246                           
 28247 ;; *************** function _SPIGet *****************
 28248 ;; Defined at:
 28249 ;;		line 104 in file "src/18F27J53/spi.c"
 28250 ;; Parameters:    Size  Location     Type
 28251 ;;		None
 28252 ;; Auto vars:     Size  Location     Type
 28253 ;;		None
 28254 ;; Return value:  Size  Location     Type
 28255 ;;                  1    wreg      unsigned char 
 28256 ;; Registers used:
 28257 ;;		wreg, status,2, cstack
 28258 ;; Tracked objects:
 28259 ;;		On entry : 0/0
 28260 ;;		On exit  : 0/0
 28261 ;;		Unchanged: 0/0
 28262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28267 ;;Total ram usage:        0 bytes
 28268 ;; Hardware stack levels used:    1
 28269 ;; Hardware stack levels required when called:   17
 28270 ;; This function calls:
 28271 ;;		_SPIPut
 28272 ;; This function is called by:
 28273 ;;		_RegisterRead
 28274 ;; This function uses a non-reentrant model
 28275 ;;
 28276                           
 28277                           	psect	text72
 28278  00BBB4                     __ptext72:
 28279                           	opt stack 0
 28280  00BBB4                     _SPIGet:
 28281                           	opt stack 6
 28282                           
 28283                           ;spi.c: 128: SPIPut(0x00);
 28284                           
 28285                           ; BSR set to: 1
 28286                           ;incstack = 0
 28287  00BBB4  0E00               	movlw	0
 28288  00BBB6  EC8E  F05D         	call	_SPIPut
 28289                           
 28290                           ;spi.c: 129: return SSP2BUF;
 28291  00BBBA  5075               	movf	3957,w,c	;volatile
 28292  00BBBC  0012               	return	
 28293  00BBBE                     __end_of_SPIGet:
 28294                           	opt stack 0
 28295                           tblptru	equ	0xFF8
 28296                           tblptrh	equ	0xFF7
 28297                           tblptrl	equ	0xFF6
 28298                           tablat	equ	0xFF5
 28299                           prodh	equ	0xFF4
 28300                           prodl	equ	0xFF3
 28301                           intcon	equ	0xFF2
 28302                           intcon2	equ	0xFF1
 28303                           intcon3	equ	0xFF0
 28304                           indf0	equ	0xFEF
 28305                           postinc0	equ	0xFEE
 28306                           plusw0	equ	0xFEB
 28307                           fsr0h	equ	0xFEA
 28308                           fsr0l	equ	0xFE9
 28309                           wreg	equ	0xFE8
 28310                           indf1	equ	0xFE7
 28311                           postinc1	equ	0xFE6
 28312                           postdec1	equ	0xFE5
 28313                           plusw1	equ	0xFE3
 28314                           fsr1h	equ	0xFE2
 28315                           fsr1l	equ	0xFE1
 28316                           indf2	equ	0xFDF
 28317                           postinc2	equ	0xFDE
 28318                           postdec2	equ	0xFDD
 28319                           plusw2	equ	0xFDB
 28320                           fsr2h	equ	0xFDA
 28321                           fsr2l	equ	0xFD9
 28322                           status	equ	0xFD8
 28323                           
 28324 ;; *************** function _MiApp_ProtocolInit *****************
 28325 ;; Defined at:
 28326 ;;		line 3564 in file "src/miwi/miwi_mesh.c"
 28327 ;; Parameters:    Size  Location     Type
 28328 ;;  bNetworkFree    1    wreg     unsigned char 
 28329 ;; Auto vars:     Size  Location     Type
 28330 ;;  bNetworkFree    1   23[BANK1 ] unsigned char 
 28331 ;;  MIP             3   24[BANK1 ] struct .
 28332 ;;  i               1   27[BANK1 ] unsigned char 
 28333 ;; Return value:  Size  Location     Type
 28334 ;;                  1    wreg      unsigned char 
 28335 ;; Registers used:
 28336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28337 ;; Tracked objects:
 28338 ;;		On entry : 0/0
 28339 ;;		On exit  : 0/0
 28340 ;;		Unchanged: 0/0
 28341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28343 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28344 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28345 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28346 ;;Total ram usage:        6 bytes
 28347 ;; Hardware stack levels used:    1
 28348 ;; Hardware stack levels required when called:   21
 28349 ;; This function calls:
 28350 ;;		_InitSymbolTimer
 28351 ;;		_MiApp_SetChannel
 28352 ;;		_MiMAC_Init
 28353 ;;		_MiMAC_SetAltAddress
 28354 ;; This function is called by:
 28355 ;;		_main
 28356 ;; This function uses a non-reentrant model
 28357 ;;
 28358                           
 28359                           	psect	text73
 28360  007A26                     __ptext73:
 28361                           	opt stack 0
 28362  007A26                     _MiApp_ProtocolInit:
 28363                           	opt stack 9
 28364                           
 28365                           ;incstack = 0
 28366                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 28367  007A26  0101               	movlb	1	; () banked
 28368  007A28  6F17               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 28369                           
 28370                           ;miwi_mesh.c: 3566: MACINIT_PARAM MIP;
 28371                           ;miwi_mesh.c: 3567: uint8_t i;
 28372                           ;miwi_mesh.c: 3602: myShortAddress.Val = 0xFFFF;
 28373  007A2A  0101               	movlb	1	; () banked
 28374  007A2C  69F2               	setf	_myShortAddress& (0+255),b
 28375  007A2E  69F3               	setf	(_myShortAddress+1)& (0+255),b
 28376                           
 28377                           ; BSR set to: 1
 28378                           ;miwi_mesh.c: 3603: myPANID.Val = 0x1337;
 28379  007A30  0E13               	movlw	19
 28380  007A32  0101               	movlb	1	; () banked
 28381  007A34  6FF1               	movwf	(_myPANID+1)& (0+255),b
 28382  007A36  0E37               	movlw	55
 28383  007A38  6FF0               	movwf	_myPANID& (0+255),b
 28384                           
 28385                           ;miwi_mesh.c: 3608: for(i = 0; i < 64; i++)
 28386  007A3A  0E00               	movlw	0
 28387  007A3C  0101               	movlb	1	; () banked
 28388  007A3E  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28389  007A40                     l20327:
 28390                           
 28391                           ; BSR set to: 1
 28392  007A40  0E3F               	movlw	63
 28393  007A42  0101               	movlb	1	; () banked
 28394  007A44  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28395  007A46  D001               	goto	l20331
 28396  007A48  D012               	goto	l20337
 28397  007A4A                     l20331:
 28398                           
 28399                           ; BSR set to: 1
 28400                           ;miwi_mesh.c: 3609: {
 28401                           ;miwi_mesh.c: 3610: ConnectionTable[i].status.Val = 0;
 28402  007A4A  0101               	movlb	1	; () banked
 28403  007A4C  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28404  007A4E  0D09               	mullw	9
 28405  007A50  0E08               	movlw	8
 28406  007A52  26F3               	addwf	prodl,f,c
 28407  007A54  0E00               	movlw	0
 28408  007A56  22F4               	addwfc	prodh,f,c
 28409  007A58  0E00               	movlw	low _ConnectionTable
 28410  007A5A  24F3               	addwf	prodl,w,c
 28411  007A5C  6ED9               	movwf	fsr2l,c
 28412  007A5E  0E06               	movlw	high _ConnectionTable
 28413  007A60  20F4               	addwfc	prodh,w,c
 28414  007A62  6EDA               	movwf	fsr2h,c
 28415  007A64  0E00               	movlw	0
 28416  007A66  6EDF               	movwf	indf2,c
 28417                           
 28418                           ; BSR set to: 1
 28419  007A68  0101               	movlb	1	; () banked
 28420  007A6A  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28421  007A6C  D7E9               	goto	l20327
 28422  007A6E                     l20337:
 28423                           
 28424                           ; BSR set to: 1
 28425                           ;miwi_mesh.c: 3611: }
 28426                           ;miwi_mesh.c: 3614: for(i=0;i<8;i++)
 28427  007A6E  0E00               	movlw	0
 28428  007A70  0101               	movlb	1	; () banked
 28429  007A72  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28430  007A74                     l20339:
 28431                           
 28432                           ; BSR set to: 1
 28433  007A74  0E07               	movlw	7
 28434  007A76  0101               	movlb	1	; () banked
 28435  007A78  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28436  007A7A  D001               	goto	l20343
 28437  007A7C  D019               	goto	l20349
 28438  007A7E                     l20343:
 28439                           
 28440                           ; BSR set to: 1
 28441                           ;miwi_mesh.c: 3615: {
 28442                           ;miwi_mesh.c: 3616: RoutingTable[i] = 0;
 28443  007A7E  0101               	movlb	1	; () banked
 28444  007A80  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28445  007A82  0D01               	mullw	1
 28446  007A84  0E71               	movlw	low _RoutingTable
 28447  007A86  24F3               	addwf	prodl,w,c
 28448  007A88  6ED9               	movwf	fsr2l,c
 28449  007A8A  0E00               	movlw	high _RoutingTable
 28450  007A8C  20F4               	addwfc	prodh,w,c
 28451  007A8E  6EDA               	movwf	fsr2h,c
 28452  007A90  0E00               	movlw	0
 28453  007A92  6EDF               	movwf	indf2,c
 28454                           
 28455                           ;miwi_mesh.c: 3617: RouterFailures[i] = 0;
 28456  007A94  0101               	movlb	1	; () banked
 28457  007A96  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28458  007A98  0D01               	mullw	1
 28459  007A9A  0E69               	movlw	low _RouterFailures
 28460  007A9C  24F3               	addwf	prodl,w,c
 28461  007A9E  6ED9               	movwf	fsr2l,c
 28462  007AA0  0E00               	movlw	high _RouterFailures
 28463  007AA2  20F4               	addwfc	prodh,w,c
 28464  007AA4  6EDA               	movwf	fsr2h,c
 28465  007AA6  0E00               	movlw	0
 28466  007AA8  6EDF               	movwf	indf2,c
 28467                           
 28468                           ; BSR set to: 1
 28469  007AAA  0101               	movlb	1	; () banked
 28470  007AAC  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28471  007AAE  D7E2               	goto	l20339
 28472  007AB0                     l20349:
 28473                           
 28474                           ; BSR set to: 1
 28475                           ;miwi_mesh.c: 3618: }
 28476                           ;miwi_mesh.c: 3619: knownCoordinators = 0;
 28477  007AB0  0E00               	movlw	0
 28478  007AB2  0101               	movlb	1	; () banked
 28479  007AB4  6FC7               	movwf	_knownCoordinators& (0+255),b
 28480                           
 28481                           ;miwi_mesh.c: 3620: role = 0x00;
 28482  007AB6  0E00               	movlw	0
 28483  007AB8  0101               	movlb	1	; () banked
 28484  007ABA  6FCA               	movwf	_role& (0+255),b
 28485                           
 28486                           ;miwi_mesh.c: 3622: MiWiStateMachine.Val = 0;
 28487  007ABC  0E00               	movlw	0
 28488  007ABE  0101               	movlb	1	; () banked
 28489  007AC0  6FB6               	movwf	(_MiWiStateMachine+1)& (0+255),b
 28490  007AC2  0E00               	movlw	0
 28491  007AC4  6FB5               	movwf	_MiWiStateMachine& (0+255),b
 28492                           
 28493                           ;miwi_mesh.c: 3624: openSocketInfo.status.Val = 0;
 28494  007AC6  0E00               	movlw	0
 28495  007AC8  0101               	movlb	1	; () banked
 28496  007ACA  6FCC               	movwf	_openSocketInfo& (0+255),b
 28497                           
 28498                           ;miwi_mesh.c: 3625: MiWiCapacityInfo.Val = 0;
 28499  007ACC  0E00               	movlw	0
 28500  007ACE  0101               	movlb	1	; () banked
 28501  007AD0  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28502                           
 28503                           ; BSR set to: 1
 28504                           ;miwi_mesh.c: 3627: InitSymbolTimer();
 28505  007AD2  ECB7  F05D         	call	_InitSymbolTimer	;wreg free
 28506                           
 28507                           ;miwi_mesh.c: 3629: TxData = 0;
 28508  007AD6  0E00               	movlw	0
 28509  007AD8  0101               	movlb	1	; () banked
 28510  007ADA  6FC6               	movwf	_TxData& (0+255),b
 28511                           
 28512                           ; BSR set to: 1
 28513                           ;miwi_mesh.c: 3645: for(i = 0; i < 64; i++)
 28514  007ADC  0E00               	movlw	0
 28515  007ADE  0101               	movlb	1	; () banked
 28516  007AE0  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28517  007AE2                     l20357:
 28518                           
 28519                           ; BSR set to: 1
 28520  007AE2  0E3F               	movlw	63
 28521  007AE4  0101               	movlb	1	; () banked
 28522  007AE6  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28523  007AE8  D001               	goto	l20361
 28524  007AEA  D010               	goto	l20367
 28525  007AEC                     l20361:
 28526                           
 28527                           ; BSR set to: 1
 28528                           ;miwi_mesh.c: 3646: {
 28529                           ;miwi_mesh.c: 3647: IncomingFrameCounter[i].Val = 0;
 28530  007AEC  0101               	movlb	1	; () banked
 28531  007AEE  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28532  007AF0  0D04               	mullw	4
 28533  007AF2  0E00               	movlw	low _IncomingFrameCounter
 28534  007AF4  24F3               	addwf	prodl,w,c
 28535  007AF6  6ED9               	movwf	fsr2l,c
 28536  007AF8  0E05               	movlw	high _IncomingFrameCounter
 28537  007AFA  20F4               	addwfc	prodh,w,c
 28538  007AFC  6EDA               	movwf	fsr2h,c
 28539  007AFE  6ADE               	clrf	postinc2,c
 28540  007B00  6ADE               	clrf	postinc2,c
 28541  007B02  6ADE               	clrf	postinc2,c
 28542  007B04  6ADD               	clrf	postdec2,c
 28543                           
 28544                           ; BSR set to: 1
 28545  007B06  0101               	movlb	1	; () banked
 28546  007B08  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28547  007B0A  D7EB               	goto	l20357
 28548  007B0C                     l20367:
 28549                           
 28550                           ; BSR set to: 1
 28551                           ;miwi_mesh.c: 3648: }
 28552                           ;miwi_mesh.c: 3709: MIP.actionFlags.Val = 0;
 28553  007B0C  0E00               	movlw	0
 28554  007B0E  0101               	movlb	1	; () banked
 28555  007B10  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 28556                           
 28557                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.PAddrLength = 4;
 28558  007B12  0101               	movlb	1	; () banked
 28559  007B14  5118               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 28560  007B16  0B87               	andlw	-121
 28561  007B18  0920               	iorlw	32
 28562  007B1A  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 28563                           
 28564                           ; BSR set to: 1
 28565                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.CCAEnable = 1;
 28566  007B1C  0101               	movlb	1	; () banked
 28567  007B1E  8318               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 28568                           
 28569                           ; BSR set to: 1
 28570                           ;miwi_mesh.c: 3712: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 28571  007B20  0101               	movlb	1	; () banked
 28572  007B22  B117               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 28573  007B24  D003               	bra	u23255
 28574  007B26  0101               	movlb	1	; () banked
 28575  007B28  9518               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 28576  007B2A  D002               	bra	u23256
 28577  007B2C                     u23255:
 28578  007B2C  0101               	movlb	1	; () banked
 28579  007B2E  8518               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 28580  007B30                     u23256:
 28581                           
 28582                           ; BSR set to: 1
 28583                           ;miwi_mesh.c: 3713: MIP.PAddress = myLongAddress;
 28584  007B30  0EE8               	movlw	low _myLongAddress
 28585  007B32  0101               	movlb	1	; () banked
 28586  007B34  6F19               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 28587  007B36  0E01               	movlw	high _myLongAddress
 28588  007B38  0101               	movlb	1	; () banked
 28589  007B3A  6F1A               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 28590                           
 28591                           ; BSR set to: 1
 28592                           ;miwi_mesh.c: 3715: MiMAC_Init(MIP);
 28593  007B3C  C118  F112         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 28594  007B40  C119  F113         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 28595  007B44  C11A  F114         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 28596  007B48  ECD1  F041         	call	_MiMAC_Init	;wreg free
 28597                           
 28598                           ;miwi_mesh.c: 3717: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 28599  007B4C  0EF2               	movlw	low _myShortAddress
 28600  007B4E  0101               	movlb	1	; () banked
 28601  007B50  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 28602  007B52  0E01               	movlw	high _myShortAddress
 28603  007B54  0101               	movlb	1	; () banked
 28604  007B56  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 28605  007B58  0EF0               	movlw	low _myPANID
 28606  007B5A  0101               	movlb	1	; () banked
 28607  007B5C  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 28608  007B5E  0E01               	movlw	high _myPANID
 28609  007B60  0101               	movlb	1	; () banked
 28610  007B62  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 28611  007B64  ECEA  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 28612                           
 28613                           ;miwi_mesh.c: 3718: MiApp_SetChannel(currentChannel);
 28614  007B68  0101               	movlb	1	; () banked
 28615  007B6A  51F6               	movf	_currentChannel& (0+255),w,b
 28616  007B6C  EC6D  F05D         	call	_MiApp_SetChannel
 28617                           
 28618                           ;miwi_mesh.c: 3723: MiWiCapacityInfo.bits.Sleep = 1;
 28619  007B70  0101               	movlb	1	; () banked
 28620  007B72  81C2               	bsf	_MiWiCapacityInfo& (0+255),0,b
 28621                           
 28622                           ; BSR set to: 1
 28623                           ;miwi_mesh.c: 3726: MiWiCapacityInfo.bits.Security = 1;
 28624  007B74  0101               	movlb	1	; () banked
 28625  007B76  87C2               	bsf	_MiWiCapacityInfo& (0+255),3,b
 28626                           
 28627                           ; BSR set to: 1
 28628                           ;miwi_mesh.c: 3728: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 28629  007B78  C1BF  F116         	movff	_ConnMode,??_MiApp_ProtocolInit
 28630  007B7C  0101               	movlb	1	; () banked
 28631  007B7E  3B16               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 28632  007B80  0101               	movlb	1	; () banked
 28633  007B82  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 28634  007B84  0101               	movlb	1	; () banked
 28635  007B86  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28636  007B88  0BCF               	andlw	-49
 28637  007B8A  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28638  007B8C  0101               	movlb	1	; () banked
 28639  007B8E  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28640                           
 28641                           ; BSR set to: 1
 28642                           ;miwi_mesh.c: 3730: MiWiCapacityInfo.bits.CoordCap = 1;
 28643  007B90  0101               	movlb	1	; () banked
 28644  007B92  8DC2               	bsf	_MiWiCapacityInfo& (0+255),6,b
 28645                           
 28646                           ; BSR set to: 1
 28647                           ;miwi_mesh.c: 3731: MiWiCapacityInfo.bits.Role = role;
 28648  007B94  C1CA  F116         	movff	_role,??_MiApp_ProtocolInit
 28649  007B98  0101               	movlb	1	; () banked
 28650  007B9A  4716               	rlncf	??_MiApp_ProtocolInit& (0+255),f,b
 28651  007B9C  0101               	movlb	1	; () banked
 28652  007B9E  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 28653  007BA0  0101               	movlb	1	; () banked
 28654  007BA2  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28655  007BA4  0BF9               	andlw	-7
 28656  007BA6  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28657  007BA8  0101               	movlb	1	; () banked
 28658  007BAA  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28659                           
 28660                           ; BSR set to: 1
 28661                           ;miwi_mesh.c: 3743: MiWiSeqNum = TMR1L;
 28662  007BAC  CFCE F1C3          	movff	4046,_MiWiSeqNum	;volatile
 28663                           
 28664                           ; BSR set to: 1
 28665                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IF = 0;
 28666  007BB0  90F0               	bcf	intcon3,0,c	;volatile
 28667                           
 28668                           ; BSR set to: 1
 28669                           ;miwi_mesh.c: 3746: INTCON3bits.INT1IE = 1;
 28670  007BB2  86F0               	bsf	intcon3,3,c	;volatile
 28671  007BB4  0012               	return	
 28672  007BB6                     __end_of_MiApp_ProtocolInit:
 28673                           	opt stack 0
 28674                           tblptru	equ	0xFF8
 28675                           tblptrh	equ	0xFF7
 28676                           tblptrl	equ	0xFF6
 28677                           tablat	equ	0xFF5
 28678                           prodh	equ	0xFF4
 28679                           prodl	equ	0xFF3
 28680                           intcon	equ	0xFF2
 28681                           intcon2	equ	0xFF1
 28682                           intcon3	equ	0xFF0
 28683                           indf0	equ	0xFEF
 28684                           postinc0	equ	0xFEE
 28685                           plusw0	equ	0xFEB
 28686                           fsr0h	equ	0xFEA
 28687                           fsr0l	equ	0xFE9
 28688                           wreg	equ	0xFE8
 28689                           indf1	equ	0xFE7
 28690                           postinc1	equ	0xFE6
 28691                           postdec1	equ	0xFE5
 28692                           plusw1	equ	0xFE3
 28693                           fsr1h	equ	0xFE2
 28694                           fsr1l	equ	0xFE1
 28695                           indf2	equ	0xFDF
 28696                           postinc2	equ	0xFDE
 28697                           postdec2	equ	0xFDD
 28698                           plusw2	equ	0xFDB
 28699                           fsr2h	equ	0xFDA
 28700                           fsr2l	equ	0xFD9
 28701                           status	equ	0xFD8
 28702                           
 28703 ;; *************** function _MiMAC_SetAltAddress *****************
 28704 ;; Defined at:
 28705 ;;		line 438 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28706 ;; Parameters:    Size  Location     Type
 28707 ;;  Address         2    0[BANK1 ] PTR unsigned char 
 28708 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 28709 ;;  PANID           2    2[BANK1 ] PTR unsigned char 
 28710 ;;		 -> myPANID(2), 
 28711 ;; Auto vars:     Size  Location     Type
 28712 ;;		None
 28713 ;; Return value:  Size  Location     Type
 28714 ;;                  1    wreg      unsigned char 
 28715 ;; Registers used:
 28716 ;;		None
 28717 ;; Tracked objects:
 28718 ;;		On entry : 0/0
 28719 ;;		On exit  : 0/0
 28720 ;;		Unchanged: 0/0
 28721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28722 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28725 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28726 ;;Total ram usage:        4 bytes
 28727 ;; Hardware stack levels used:    1
 28728 ;; Hardware stack levels required when called:   16
 28729 ;; This function calls:
 28730 ;;		Nothing
 28731 ;; This function is called by:
 28732 ;;		_MiWiTasks
 28733 ;;		_MiApp_ProtocolInit
 28734 ;;		_MiApp_StartConnection
 28735 ;;		_MiApp_EstablishConnection
 28736 ;;		_MiApp_RemoveConnection
 28737 ;; This function uses a non-reentrant model
 28738 ;;
 28739                           
 28740                           	psect	text74
 28741  00BBD4                     __ptext74:
 28742                           	opt stack 0
 28743  00BBD4                     _MiMAC_SetAltAddress:
 28744                           	opt stack 13
 28745                           
 28746                           ;drv_mrf_miwi_89xa.c: 440: return 0;
 28747                           ;	Return value of _MiMAC_SetAltAddress is never used
 28748                           
 28749                           ; BSR set to: 1
 28750                           ;incstack = 0
 28751  00BBD4  0012               	return		;funcret
 28752  00BBD6                     __end_of_MiMAC_SetAltAddress:
 28753                           	opt stack 0
 28754                           tblptru	equ	0xFF8
 28755                           tblptrh	equ	0xFF7
 28756                           tblptrl	equ	0xFF6
 28757                           tablat	equ	0xFF5
 28758                           prodh	equ	0xFF4
 28759                           prodl	equ	0xFF3
 28760                           intcon	equ	0xFF2
 28761                           intcon2	equ	0xFF1
 28762                           intcon3	equ	0xFF0
 28763                           indf0	equ	0xFEF
 28764                           postinc0	equ	0xFEE
 28765                           plusw0	equ	0xFEB
 28766                           fsr0h	equ	0xFEA
 28767                           fsr0l	equ	0xFE9
 28768                           wreg	equ	0xFE8
 28769                           indf1	equ	0xFE7
 28770                           postinc1	equ	0xFE6
 28771                           postdec1	equ	0xFE5
 28772                           plusw1	equ	0xFE3
 28773                           fsr1h	equ	0xFE2
 28774                           fsr1l	equ	0xFE1
 28775                           indf2	equ	0xFDF
 28776                           postinc2	equ	0xFDE
 28777                           postdec2	equ	0xFDD
 28778                           plusw2	equ	0xFDB
 28779                           fsr2h	equ	0xFDA
 28780                           fsr2l	equ	0xFD9
 28781                           status	equ	0xFD8
 28782                           
 28783 ;; *************** function _MiMAC_Init *****************
 28784 ;; Defined at:
 28785 ;;		line 578 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28786 ;; Parameters:    Size  Location     Type
 28787 ;;  initValue       3   18[BANK1 ] struct .
 28788 ;; Auto vars:     Size  Location     Type
 28789 ;;  i               1   21[BANK1 ] unsigned char 
 28790 ;; Return value:  Size  Location     Type
 28791 ;;                  1    wreg      unsigned char 
 28792 ;; Registers used:
 28793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28794 ;; Tracked objects:
 28795 ;;		On entry : 0/0
 28796 ;;		On exit  : 0/0
 28797 ;;		Unchanged: 0/0
 28798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28799 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28800 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28802 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28803 ;;Total ram usage:        4 bytes
 28804 ;; Hardware stack levels used:    1
 28805 ;; Hardware stack levels required when called:   19
 28806 ;; This function calls:
 28807 ;;		_DELAY_ms
 28808 ;;		_RegisterSet
 28809 ;;		_SetRFMode
 28810 ;; This function is called by:
 28811 ;;		_MiApp_ProtocolInit
 28812 ;; This function uses a non-reentrant model
 28813 ;;
 28814                           
 28815                           	psect	text75
 28816  0083A2                     __ptext75:
 28817                           	opt stack 0
 28818  0083A2                     _MiMAC_Init:
 28819                           	opt stack 10
 28820                           
 28821                           ;drv_mrf_miwi_89xa.c: 580: uint8_t i;
 28822                           ;drv_mrf_miwi_89xa.c: 582: MACInitParams = initValue;
 28823                           
 28824                           ;incstack = 0
 28825  0083A2  C112  F1AA         	movff	MiMAC_Init@initValue,_MACInitParams
 28826  0083A6  C113  F1AB         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 28827  0083AA  C114  F1AC         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 28828                           
 28829                           ;drv_mrf_miwi_89xa.c: 584: DELAY_ms(20);
 28830  0083AE  0E00               	movlw	0
 28831  0083B0  0101               	movlb	1	; () banked
 28832  0083B2  6F0D               	movwf	(DELAY_ms@ms+1)& (0+255),b
 28833  0083B4  0E14               	movlw	20
 28834  0083B6  6F0C               	movwf	DELAY_ms@ms& (0+255),b
 28835  0083B8  EC39  F054         	call	_DELAY_ms	;wreg free
 28836                           
 28837                           ;drv_mrf_miwi_89xa.c: 585: LATBbits.LATB3 = 1;
 28838  0083BC  868A               	bsf	3978,3,c	;volatile
 28839                           
 28840                           ;drv_mrf_miwi_89xa.c: 586: LATCbits.LATC6 = 1;
 28841  0083BE  8C8B               	bsf	3979,6,c	;volatile
 28842                           
 28843                           ;drv_mrf_miwi_89xa.c: 589: MACSeq = TMR1L;
 28844  0083C0  CFCE F1C0          	movff	4046,_MACSeq	;volatile
 28845                           
 28846                           ;drv_mrf_miwi_89xa.c: 590: ReceivedBankIndex = 0xFF;
 28847  0083C4  0101               	movlb	1	; () banked
 28848  0083C6  69C5               	setf	_ReceivedBankIndex& (0+255),b
 28849                           
 28850                           ; BSR set to: 1
 28851                           ;drv_mrf_miwi_89xa.c: 592: for(i = 0; i < 2; i++)
 28852  0083C8  0E00               	movlw	0
 28853  0083CA  0101               	movlb	1	; () banked
 28854  0083CC  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28855  0083CE                     l19051:
 28856                           
 28857                           ; BSR set to: 1
 28858  0083CE  0E01               	movlw	1
 28859  0083D0  0101               	movlb	1	; () banked
 28860  0083D2  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28861  0083D4  D001               	goto	l19055
 28862  0083D6  D00E               	goto	l19061
 28863  0083D8                     l19055:
 28864                           
 28865                           ; BSR set to: 1
 28866                           ;drv_mrf_miwi_89xa.c: 593: {
 28867                           ;drv_mrf_miwi_89xa.c: 594: RxPacket[i].flags.Val = 0;
 28868  0083D8  0101               	movlb	1	; () banked
 28869  0083DA  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28870  0083DC  0D42               	mullw	66
 28871  0083DE  0E00               	movlw	low _RxPacket
 28872  0083E0  24F3               	addwf	prodl,w,c
 28873  0083E2  6ED9               	movwf	fsr2l,c
 28874  0083E4  0E03               	movlw	high _RxPacket
 28875  0083E6  20F4               	addwfc	prodh,w,c
 28876  0083E8  6EDA               	movwf	fsr2h,c
 28877  0083EA  0E00               	movlw	0
 28878  0083EC  6EDF               	movwf	indf2,c
 28879                           
 28880                           ; BSR set to: 1
 28881  0083EE  0101               	movlb	1	; () banked
 28882  0083F0  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28883  0083F2  D7ED               	goto	l19051
 28884  0083F4                     l19061:
 28885                           
 28886                           ; BSR set to: 1
 28887                           ;drv_mrf_miwi_89xa.c: 595: }
 28888                           ;drv_mrf_miwi_89xa.c: 598: for(i = 0; i < 5; i++)
 28889  0083F4  0E00               	movlw	0
 28890  0083F6  0101               	movlb	1	; () banked
 28891  0083F8  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28892  0083FA                     l19063:
 28893                           
 28894                           ; BSR set to: 1
 28895  0083FA  0E04               	movlw	4
 28896  0083FC  0101               	movlb	1	; () banked
 28897  0083FE  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28898  008400  D001               	goto	l19067
 28899  008402  D00E               	goto	l19073
 28900  008404                     l19067:
 28901                           
 28902                           ; BSR set to: 1
 28903                           ;drv_mrf_miwi_89xa.c: 599: {
 28904                           ;drv_mrf_miwi_89xa.c: 600: AckInfo[i].Valid = FALSE;
 28905  008404  0101               	movlb	1	; () banked
 28906  008406  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28907  008408  0D06               	mullw	6
 28908  00840A  0E48               	movlw	low _AckInfo
 28909  00840C  24F3               	addwf	prodl,w,c
 28910  00840E  6ED9               	movwf	fsr2l,c
 28911  008410  0E02               	movlw	high _AckInfo
 28912  008412  20F4               	addwfc	prodh,w,c
 28913  008414  6EDA               	movwf	fsr2h,c
 28914  008416  0E00               	movlw	0
 28915  008418  6EDF               	movwf	indf2,c
 28916                           
 28917                           ; BSR set to: 1
 28918  00841A  0101               	movlb	1	; () banked
 28919  00841C  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28920  00841E  D7ED               	goto	l19063
 28921  008420                     l19073:
 28922                           
 28923                           ; BSR set to: 1
 28924                           ;drv_mrf_miwi_89xa.c: 601: }
 28925                           ;drv_mrf_miwi_89xa.c: 619: OutgoingFrameCounter.Val = 1;
 28926  008420  0E01               	movlw	1
 28927  008422  0101               	movlb	1	; () banked
 28928  008424  6FA2               	movwf	_OutgoingFrameCounter& (0+255),b
 28929  008426  0E00               	movlw	0
 28930  008428  6FA3               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 28931  00842A  0E00               	movlw	0
 28932  00842C  6FA4               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 28933  00842E  0E00               	movlw	0
 28934  008430  6FA5               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 28935                           
 28936                           ;drv_mrf_miwi_89xa.c: 621: for(i = 0; i < 8; i++)
 28937  008432  0E00               	movlw	0
 28938  008434  0101               	movlb	1	; () banked
 28939  008436  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28940  008438                     l19075:
 28941                           
 28942                           ; BSR set to: 1
 28943  008438  0E07               	movlw	7
 28944  00843A  0101               	movlb	1	; () banked
 28945  00843C  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28946  00843E  D001               	goto	l19079
 28947  008440  D017               	goto	l19085
 28948  008442                     l19079:
 28949                           
 28950                           ; BSR set to: 1
 28951                           ;drv_mrf_miwi_89xa.c: 622: {
 28952                           ;drv_mrf_miwi_89xa.c: 623: key[i] = mySecurityKey[i];
 28953  008442  0101               	movlb	1	; () banked
 28954  008444  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28955  008446  0D01               	mullw	1
 28956  008448  0E79               	movlw	low _mySecurityKey
 28957  00844A  24F3               	addwf	prodl,w,c
 28958  00844C  6ED9               	movwf	fsr2l,c
 28959  00844E  0E00               	movlw	high _mySecurityKey
 28960  008450  20F4               	addwfc	prodh,w,c
 28961  008452  6EDA               	movwf	fsr2h,c
 28962  008454  0101               	movlb	1	; () banked
 28963  008456  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28964  008458  0D01               	mullw	1
 28965  00845A  0EF1               	movlw	low _key
 28966  00845C  24F3               	addwf	prodl,w,c
 28967  00845E  6EE1               	movwf	fsr1l,c
 28968  008460  0E02               	movlw	high _key
 28969  008462  20F4               	addwfc	prodh,w,c
 28970  008464  6EE2               	movwf	fsr1h,c
 28971  008466  CFDF FFE7          	movff	indf2,indf1
 28972                           
 28973                           ; BSR set to: 1
 28974  00846A  0101               	movlb	1	; () banked
 28975  00846C  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28976  00846E  D7E4               	goto	l19075
 28977  008470                     l19085:
 28978                           
 28979                           ; BSR set to: 1
 28980                           ;drv_mrf_miwi_89xa.c: 624: }
 28981                           ;drv_mrf_miwi_89xa.c: 628: for (i = 0 ; i <= 31; i++)
 28982  008470  0E00               	movlw	0
 28983  008472  0101               	movlb	1	; () banked
 28984  008474  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28985  008476                     l19087:
 28986                           
 28987                           ; BSR set to: 1
 28988  008476  0E1F               	movlw	31
 28989  008478  0101               	movlb	1	; () banked
 28990  00847A  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28991  00847C  D001               	goto	l19091
 28992  00847E  D017               	goto	l19097
 28993  008480                     l19091:
 28994                           
 28995                           ; BSR set to: 1
 28996                           ;drv_mrf_miwi_89xa.c: 629: {
 28997                           ;drv_mrf_miwi_89xa.c: 630: RegisterSet(InitConfigRegs[i]);
 28998  008480  0101               	movlb	1	; () banked
 28999  008482  5115               	movf	MiMAC_Init@i& (0+255),w,b
 29000  008484  0D02               	mullw	2
 29001  008486  0EF5               	movlw	low _InitConfigRegs
 29002  008488  24F3               	addwf	prodl,w,c
 29003  00848A  6EF6               	movwf	tblptrl,c
 29004  00848C  0E1F               	movlw	high _InitConfigRegs
 29005  00848E  20F4               	addwfc	prodh,w,c
 29006  008490  6EF7               	movwf	tblptrh,c
 29007  008492                     	if	1	;There are 3 active tblptr bytes
 29008  008492  6AF8               	clrf	tblptru,c
 29009  008494  0E00               	movlw	low (__mediumconst shr (0+16))
 29010  008496  22F8               	addwfc	tblptru,f,c
 29011  008498                     	endif
 29012  008498  0009               	tblrd		*+
 29013  00849A  CFF5 F102          	movff	tablat,RegisterSet@setting
 29014  00849E  000A               	tblrd		*-
 29015  0084A0  CFF5 F103          	movff	tablat,RegisterSet@setting+1
 29016  0084A4  EC06  F05B         	call	_RegisterSet	;wreg free
 29017  0084A8  0101               	movlb	1	; () banked
 29018  0084AA  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 29019  0084AC  D7E4               	goto	l19087
 29020  0084AE                     l19097:
 29021                           
 29022                           ; BSR set to: 1
 29023                           ;drv_mrf_miwi_89xa.c: 631: }
 29024                           ;drv_mrf_miwi_89xa.c: 632: SetRFMode(0x20);
 29025  0084AE  0E20               	movlw	32
 29026  0084B0  ECCB  F055         	call	_SetRFMode
 29027                           
 29028                           ;drv_mrf_miwi_89xa.c: 634: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29029  0084B4  0E00               	movlw	0
 29030  0084B6  0101               	movlb	1	; () banked
 29031  0084B8  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29032  0084BA  0E56               	movlw	86
 29033  0084BC  6F02               	movwf	RegisterSet@setting& (0+255),b
 29034  0084BE  EC06  F05B         	call	_RegisterSet	;wreg free
 29035                           
 29036                           ;drv_mrf_miwi_89xa.c: 635: SetRFMode(0x40);
 29037  0084C2  0E40               	movlw	64
 29038  0084C4  ECCB  F055         	call	_SetRFMode
 29039                           
 29040                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 29041  0084C8  0E1C               	movlw	28
 29042  0084CA  0101               	movlb	1	; () banked
 29043  0084CC  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29044  0084CE  0E0F               	movlw	15
 29045  0084D0  6F02               	movwf	RegisterSet@setting& (0+255),b
 29046  0084D2  EC06  F05B         	call	_RegisterSet	;wreg free
 29047                           
 29048                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x60);
 29049  0084D6  0E60               	movlw	96
 29050  0084D8  ECCB  F055         	call	_SetRFMode
 29051                           
 29052                           ;drv_mrf_miwi_89xa.c: 643: INTCONbits.INT0IF = 0;
 29053  0084DC  92F2               	bcf	intcon,1,c	;volatile
 29054                           
 29055                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IE = 1;
 29056  0084DE  88F2               	bsf	intcon,4,c	;volatile
 29057                           
 29058                           ;drv_mrf_miwi_89xa.c: 646: INTCON3bits.INT1IF = 0;
 29059  0084E0  90F0               	bcf	intcon3,0,c	;volatile
 29060                           
 29061                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IE = 1;
 29062  0084E2  86F0               	bsf	intcon3,3,c	;volatile
 29063  0084E4  0012               	return	
 29064  0084E6                     __end_of_MiMAC_Init:
 29065                           	opt stack 0
 29066                           tblptru	equ	0xFF8
 29067                           tblptrh	equ	0xFF7
 29068                           tblptrl	equ	0xFF6
 29069                           tablat	equ	0xFF5
 29070                           prodh	equ	0xFF4
 29071                           prodl	equ	0xFF3
 29072                           intcon	equ	0xFF2
 29073                           intcon2	equ	0xFF1
 29074                           intcon3	equ	0xFF0
 29075                           indf0	equ	0xFEF
 29076                           postinc0	equ	0xFEE
 29077                           plusw0	equ	0xFEB
 29078                           fsr0h	equ	0xFEA
 29079                           fsr0l	equ	0xFE9
 29080                           wreg	equ	0xFE8
 29081                           indf1	equ	0xFE7
 29082                           postinc1	equ	0xFE6
 29083                           postdec1	equ	0xFE5
 29084                           plusw1	equ	0xFE3
 29085                           fsr1h	equ	0xFE2
 29086                           fsr1l	equ	0xFE1
 29087                           indf2	equ	0xFDF
 29088                           postinc2	equ	0xFDE
 29089                           postdec2	equ	0xFDD
 29090                           plusw2	equ	0xFDB
 29091                           fsr2h	equ	0xFDA
 29092                           fsr2l	equ	0xFD9
 29093                           status	equ	0xFD8
 29094                           
 29095 ;; *************** function _DELAY_ms *****************
 29096 ;; Defined at:
 29097 ;;		line 108 in file "src/18F27J53/delay.c"
 29098 ;; Parameters:    Size  Location     Type
 29099 ;;  ms              2   12[BANK1 ] unsigned int 
 29100 ;; Auto vars:     Size  Location     Type
 29101 ;;  cyclesRequir    4   14[BANK1 ] long 
 29102 ;; Return value:  Size  Location     Type
 29103 ;;		None               void
 29104 ;; Registers used:
 29105 ;;		wreg, status,2, status,0, cstack
 29106 ;; Tracked objects:
 29107 ;;		On entry : 0/0
 29108 ;;		On exit  : 0/0
 29109 ;;		Unchanged: 0/0
 29110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29111 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29112 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29114 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29115 ;;Total ram usage:        6 bytes
 29116 ;; Hardware stack levels used:    1
 29117 ;; Hardware stack levels required when called:   17
 29118 ;; This function calls:
 29119 ;;		___lmul
 29120 ;; This function is called by:
 29121 ;;		_MiMAC_Init
 29122 ;;		_MiMAC_PowerState
 29123 ;; This function uses a non-reentrant model
 29124 ;;
 29125                           
 29126                           	psect	text76
 29127  00A872                     __ptext76:
 29128                           	opt stack 0
 29129  00A872                     _DELAY_ms:
 29130                           	opt stack 11
 29131                           
 29132                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 29133                           
 29134                           ;incstack = 0
 29135  00A872  0E00               	movlw	0
 29136  00A874  0101               	movlb	1	; () banked
 29137  00A876  6F0E               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 29138  00A878  0E00               	movlw	0
 29139  00A87A  6F0F               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 29140  00A87C  0E00               	movlw	0
 29141  00A87E  6F10               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 29142  00A880  0E00               	movlw	0
 29143  00A882  6F11               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 29144                           
 29145                           ; BSR set to: 1
 29146                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 29147  00A884  C10C  F100         	movff	DELAY_ms@ms,___lmul@multiplier
 29148  00A888  C10D  F101         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 29149  00A88C  0101               	movlb	1	; () banked
 29150  00A88E  6B02               	clrf	(___lmul@multiplier+2)& (0+255),b
 29151  00A890  6B03               	clrf	(___lmul@multiplier+3)& (0+255),b
 29152  00A892  0EA0               	movlw	160
 29153  00A894  0101               	movlb	1	; () banked
 29154  00A896  6F04               	movwf	___lmul@multiplicand& (0+255),b
 29155  00A898  0E0F               	movlw	15
 29156  00A89A  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29157  00A89C  0E00               	movlw	0
 29158  00A89E  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29159  00A8A0  0E00               	movlw	0
 29160  00A8A2  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29161  00A8A4  EC45  F058         	call	___lmul	;wreg free
 29162  00A8A8  C100  F10E         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 29163  00A8AC  C101  F10F         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 29164  00A8B0  C102  F110         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 29165  00A8B4  C103  F111         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 29166                           
 29167                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 29168  00A8B8  0E56               	movlw	86
 29169  00A8BA  0101               	movlb	1	; () banked
 29170  00A8BC  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 29171  00A8BE  0EFF               	movlw	255
 29172  00A8C0  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 29173  00A8C2  0EFF               	movlw	255
 29174  00A8C4  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 29175  00A8C6  0EFF               	movlw	255
 29176  00A8C8  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 29177                           
 29178                           ; BSR set to: 1
 29179                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 29180  00A8CA  0101               	movlb	1	; () banked
 29181  00A8CC  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 29182  00A8CE  0012               	return	
 29183  00A8D0  0101               	movlb	1	; () banked
 29184  00A8D2  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 29185  00A8D4  0101               	movlb	1	; () banked
 29186  00A8D6  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 29187  00A8D8  0101               	movlb	1	; () banked
 29188  00A8DA  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 29189  00A8DC  E110               	bnz	l18
 29190  00A8DE  0EC4               	movlw	196
 29191  00A8E0  0101               	movlb	1	; () banked
 29192  00A8E2  5D0E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 29193  00A8E4  A0D8               	btfss	status,0,c
 29194  00A8E6  0012               	return	
 29195  00A8E8  D00A               	goto	l18
 29196  00A8EA                     l19:
 29197                           
 29198                           ; BSR set to: 1
 29199                           ;delay.c: 126: {
 29200                           ;delay.c: 127: __nop();
 29201  00A8EA  F000               	nop	
 29202                           
 29203                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 29204  00A8EC  0ED9               	movlw	217
 29205  00A8EE  0101               	movlb	1	; () banked
 29206  00A8F0  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 29207  00A8F2  0EFF               	movlw	255
 29208  00A8F4  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 29209  00A8F6  0EFF               	movlw	255
 29210  00A8F8  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 29211  00A8FA  0EFF               	movlw	255
 29212  00A8FC  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 29213  00A8FE                     l18:
 29214                           
 29215                           ; BSR set to: 1
 29216  00A8FE  0101               	movlb	1	; () banked
 29217  00A900  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 29218  00A902  0012               	return	
 29219  00A904  0101               	movlb	1	; () banked
 29220  00A906  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 29221  00A908  0101               	movlb	1	; () banked
 29222  00A90A  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 29223  00A90C  0101               	movlb	1	; () banked
 29224  00A90E  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 29225  00A910  E1EC               	bnz	l19
 29226  00A912  0101               	movlb	1	; () banked
 29227  00A914  050E               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 29228  00A916  A0D8               	btfss	status,0,c
 29229  00A918  0012               	return	
 29230  00A91A  D7E7               	goto	l19
 29231  00A91C                     __end_of_DELAY_ms:
 29232                           	opt stack 0
 29233                           tblptru	equ	0xFF8
 29234                           tblptrh	equ	0xFF7
 29235                           tblptrl	equ	0xFF6
 29236                           tablat	equ	0xFF5
 29237                           prodh	equ	0xFF4
 29238                           prodl	equ	0xFF3
 29239                           intcon	equ	0xFF2
 29240                           intcon2	equ	0xFF1
 29241                           intcon3	equ	0xFF0
 29242                           indf0	equ	0xFEF
 29243                           postinc0	equ	0xFEE
 29244                           plusw0	equ	0xFEB
 29245                           fsr0h	equ	0xFEA
 29246                           fsr0l	equ	0xFE9
 29247                           wreg	equ	0xFE8
 29248                           indf1	equ	0xFE7
 29249                           postinc1	equ	0xFE6
 29250                           postdec1	equ	0xFE5
 29251                           plusw1	equ	0xFE3
 29252                           fsr1h	equ	0xFE2
 29253                           fsr1l	equ	0xFE1
 29254                           indf2	equ	0xFDF
 29255                           postinc2	equ	0xFDE
 29256                           postdec2	equ	0xFDD
 29257                           plusw2	equ	0xFDB
 29258                           fsr2h	equ	0xFDA
 29259                           fsr2l	equ	0xFD9
 29260                           status	equ	0xFD8
 29261                           
 29262 ;; *************** function ___lmul *****************
 29263 ;; Defined at:
 29264 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 29265 ;; Parameters:    Size  Location     Type
 29266 ;;  multiplier      4    0[BANK1 ] unsigned long 
 29267 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 29268 ;; Auto vars:     Size  Location     Type
 29269 ;;  product         4    8[BANK1 ] unsigned long 
 29270 ;; Return value:  Size  Location     Type
 29271 ;;                  4    0[BANK1 ] unsigned long 
 29272 ;; Registers used:
 29273 ;;		wreg, status,2, status,0
 29274 ;; Tracked objects:
 29275 ;;		On entry : 0/0
 29276 ;;		On exit  : 0/0
 29277 ;;		Unchanged: 0/0
 29278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29279 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29280 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29282 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29283 ;;Total ram usage:       12 bytes
 29284 ;; Hardware stack levels used:    1
 29285 ;; Hardware stack levels required when called:   16
 29286 ;; This function calls:
 29287 ;;		Nothing
 29288 ;; This function is called by:
 29289 ;;		_DELAY_ms
 29290 ;;		_DELAY_10us
 29291 ;; This function uses a non-reentrant model
 29292 ;;
 29293                           
 29294                           	psect	text77
 29295  00B08A                     __ptext77:
 29296                           	opt stack 0
 29297  00B08A                     ___lmul:
 29298                           	opt stack 11
 29299                           
 29300                           ; BSR set to: 1
 29301                           ;incstack = 0
 29302  00B08A  0E00               	movlw	0
 29303  00B08C  0101               	movlb	1	; () banked
 29304  00B08E  6F08               	movwf	___lmul@product& (0+255),b
 29305  00B090  0E00               	movlw	0
 29306  00B092  6F09               	movwf	(___lmul@product+1)& (0+255),b
 29307  00B094  0E00               	movlw	0
 29308  00B096  6F0A               	movwf	(___lmul@product+2)& (0+255),b
 29309  00B098  0E00               	movlw	0
 29310  00B09A  6F0B               	movwf	(___lmul@product+3)& (0+255),b
 29311  00B09C                     l17825:
 29312                           
 29313                           ; BSR set to: 1
 29314  00B09C  0101               	movlb	1	; () banked
 29315  00B09E  A100               	btfss	___lmul@multiplier& (0+255),0,b
 29316  00B0A0  D010               	goto	l17829
 29317                           
 29318                           ; BSR set to: 1
 29319  00B0A2  0101               	movlb	1	; () banked
 29320  00B0A4  5104               	movf	___lmul@multiplicand& (0+255),w,b
 29321  00B0A6  0101               	movlb	1	; () banked
 29322  00B0A8  2708               	addwf	___lmul@product& (0+255),f,b
 29323  00B0AA  0101               	movlb	1	; () banked
 29324  00B0AC  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29325  00B0AE  0101               	movlb	1	; () banked
 29326  00B0B0  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
 29327  00B0B2  0101               	movlb	1	; () banked
 29328  00B0B4  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29329  00B0B6  0101               	movlb	1	; () banked
 29330  00B0B8  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
 29331  00B0BA  0101               	movlb	1	; () banked
 29332  00B0BC  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29333  00B0BE  0101               	movlb	1	; () banked
 29334  00B0C0  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
 29335  00B0C2                     l17829:
 29336                           
 29337                           ; BSR set to: 1
 29338  00B0C2  0101               	movlb	1	; () banked
 29339  00B0C4  90D8               	bcf	status,0,c
 29340  00B0C6  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
 29341  00B0C8  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29342  00B0CA  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29343  00B0CC  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29344                           
 29345                           ; BSR set to: 1
 29346  00B0CE  0101               	movlb	1	; () banked
 29347  00B0D0  90D8               	bcf	status,0,c
 29348  00B0D2  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29349  00B0D4  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29350  00B0D6  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29351  00B0D8  3300               	rrcf	___lmul@multiplier& (0+255),f,b
 29352  00B0DA  0101               	movlb	1	; () banked
 29353  00B0DC  5100               	movf	___lmul@multiplier& (0+255),w,b
 29354  00B0DE  0101               	movlb	1	; () banked
 29355  00B0E0  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29356  00B0E2  0101               	movlb	1	; () banked
 29357  00B0E4  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29358  00B0E6  0101               	movlb	1	; () banked
 29359  00B0E8  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29360  00B0EA  A4D8               	btfss	status,2,c
 29361  00B0EC  D7D7               	goto	l17825
 29362                           
 29363                           ; BSR set to: 1
 29364  00B0EE  C108  F100         	movff	___lmul@product,?___lmul
 29365  00B0F2  C109  F101         	movff	___lmul@product+1,?___lmul+1
 29366  00B0F6  C10A  F102         	movff	___lmul@product+2,?___lmul+2
 29367  00B0FA  C10B  F103         	movff	___lmul@product+3,?___lmul+3
 29368                           
 29369                           ; BSR set to: 1
 29370  00B0FE  0012               	return		;funcret
 29371  00B100                     __end_of___lmul:
 29372                           	opt stack 0
 29373                           tblptru	equ	0xFF8
 29374                           tblptrh	equ	0xFF7
 29375                           tblptrl	equ	0xFF6
 29376                           tablat	equ	0xFF5
 29377                           prodh	equ	0xFF4
 29378                           prodl	equ	0xFF3
 29379                           intcon	equ	0xFF2
 29380                           intcon2	equ	0xFF1
 29381                           intcon3	equ	0xFF0
 29382                           indf0	equ	0xFEF
 29383                           postinc0	equ	0xFEE
 29384                           plusw0	equ	0xFEB
 29385                           fsr0h	equ	0xFEA
 29386                           fsr0l	equ	0xFE9
 29387                           wreg	equ	0xFE8
 29388                           indf1	equ	0xFE7
 29389                           postinc1	equ	0xFE6
 29390                           postdec1	equ	0xFE5
 29391                           plusw1	equ	0xFE3
 29392                           fsr1h	equ	0xFE2
 29393                           fsr1l	equ	0xFE1
 29394                           indf2	equ	0xFDF
 29395                           postinc2	equ	0xFDE
 29396                           postdec2	equ	0xFDD
 29397                           plusw2	equ	0xFDB
 29398                           fsr2h	equ	0xFDA
 29399                           fsr2l	equ	0xFD9
 29400                           status	equ	0xFD8
 29401                           
 29402 ;; *************** function _MiApp_SetChannel *****************
 29403 ;; Defined at:
 29404 ;;		line 3868 in file "src/miwi/miwi_mesh.c"
 29405 ;; Parameters:    Size  Location     Type
 29406 ;;  channel         1    wreg     unsigned char 
 29407 ;; Auto vars:     Size  Location     Type
 29408 ;;  channel         1   10[BANK1 ] unsigned char 
 29409 ;; Return value:  Size  Location     Type
 29410 ;;                  1    wreg      unsigned char 
 29411 ;; Registers used:
 29412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29413 ;; Tracked objects:
 29414 ;;		On entry : 0/0
 29415 ;;		On exit  : 0/0
 29416 ;;		Unchanged: 0/0
 29417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29419 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29421 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29422 ;;Total ram usage:        1 bytes
 29423 ;; Hardware stack levels used:    1
 29424 ;; Hardware stack levels required when called:   20
 29425 ;; This function calls:
 29426 ;;		_MiMAC_SetChannel
 29427 ;; This function is called by:
 29428 ;;		_MiApp_ProtocolInit
 29429 ;;		_MiApp_StartConnection
 29430 ;;		_MiApp_NoiseDetection
 29431 ;;		_main
 29432 ;;		_MiApp_SearchConnection
 29433 ;;		_MiApp_EstablishConnection
 29434 ;; This function uses a non-reentrant model
 29435 ;;
 29436                           
 29437                           	psect	text78
 29438  00BADA                     __ptext78:
 29439                           	opt stack 0
 29440  00BADA                     _MiApp_SetChannel:
 29441                           	opt stack 9
 29442                           
 29443                           ; BSR set to: 1
 29444                           ;incstack = 0
 29445                           ;MiApp_SetChannel@channel stored from wreg
 29446  00BADA  0101               	movlb	1	; () banked
 29447  00BADC  6F0A               	movwf	MiApp_SetChannel@channel& (0+255),b
 29448                           
 29449                           ;miwi_mesh.c: 3870: if( MiMAC_SetChannel(channel, 0) )
 29450  00BADE  0E00               	movlw	0
 29451  00BAE0  0101               	movlb	1	; () banked
 29452  00BAE2  6F07               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 29453  00BAE4  0101               	movlb	1	; () banked
 29454  00BAE6  510A               	movf	MiApp_SetChannel@channel& (0+255),w,b
 29455  00BAE8  EC17  F052         	call	_MiMAC_SetChannel
 29456  00BAEC  0900               	iorlw	0
 29457  00BAEE  B4D8               	btfsc	status,2,c
 29458  00BAF0  D004               	goto	l18775
 29459                           
 29460                           ;miwi_mesh.c: 3871: {
 29461                           ;miwi_mesh.c: 3872: currentChannel = channel;
 29462  00BAF2  C10A  F1F6         	movff	MiApp_SetChannel@channel,_currentChannel
 29463                           
 29464                           ;miwi_mesh.c: 3876: return 1;
 29465  00BAF6  0E01               	movlw	1
 29466  00BAF8  0012               	return	
 29467  00BAFA                     l18775:
 29468                           
 29469                           ;miwi_mesh.c: 3877: }
 29470                           ;miwi_mesh.c: 3878: return 0;
 29471  00BAFA  0E00               	movlw	0
 29472  00BAFC  0012               	return	
 29473  00BAFE                     __end_of_MiApp_SetChannel:
 29474                           	opt stack 0
 29475                           tblptru	equ	0xFF8
 29476                           tblptrh	equ	0xFF7
 29477                           tblptrl	equ	0xFF6
 29478                           tablat	equ	0xFF5
 29479                           prodh	equ	0xFF4
 29480                           prodl	equ	0xFF3
 29481                           intcon	equ	0xFF2
 29482                           intcon2	equ	0xFF1
 29483                           intcon3	equ	0xFF0
 29484                           indf0	equ	0xFEF
 29485                           postinc0	equ	0xFEE
 29486                           plusw0	equ	0xFEB
 29487                           fsr0h	equ	0xFEA
 29488                           fsr0l	equ	0xFE9
 29489                           wreg	equ	0xFE8
 29490                           indf1	equ	0xFE7
 29491                           postinc1	equ	0xFE6
 29492                           postdec1	equ	0xFE5
 29493                           plusw1	equ	0xFE3
 29494                           fsr1h	equ	0xFE2
 29495                           fsr1l	equ	0xFE1
 29496                           indf2	equ	0xFDF
 29497                           postinc2	equ	0xFDE
 29498                           postdec2	equ	0xFDD
 29499                           plusw2	equ	0xFDB
 29500                           fsr2h	equ	0xFDA
 29501                           fsr2l	equ	0xFD9
 29502                           status	equ	0xFD8
 29503                           
 29504 ;; *************** function _MiMAC_SetChannel *****************
 29505 ;; Defined at:
 29506 ;;		line 483 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29507 ;; Parameters:    Size  Location     Type
 29508 ;;  channel         1    wreg     unsigned char 
 29509 ;;  offsetFreq      1    7[BANK1 ] unsigned char 
 29510 ;; Auto vars:     Size  Location     Type
 29511 ;;  channel         1    9[BANK1 ] unsigned char 
 29512 ;; Return value:  Size  Location     Type
 29513 ;;                  1    wreg      unsigned char 
 29514 ;; Registers used:
 29515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29516 ;; Tracked objects:
 29517 ;;		On entry : 0/0
 29518 ;;		On exit  : 0/0
 29519 ;;		Unchanged: 0/0
 29520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29521 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29522 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29523 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29524 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29525 ;;Total ram usage:        3 bytes
 29526 ;; Hardware stack levels used:    1
 29527 ;; Hardware stack levels required when called:   19
 29528 ;; This function calls:
 29529 ;;		_RegisterSet
 29530 ;;		_SetRFMode
 29531 ;; This function is called by:
 29532 ;;		_MiApp_SetChannel
 29533 ;; This function uses a non-reentrant model
 29534 ;;
 29535                           
 29536                           	psect	text79
 29537  00A42E                     __ptext79:
 29538                           	opt stack 0
 29539  00A42E                     _MiMAC_SetChannel:
 29540                           	opt stack 9
 29541                           
 29542                           ;incstack = 0
 29543                           ;MiMAC_SetChannel@channel stored from wreg
 29544  00A42E  0101               	movlb	1	; () banked
 29545  00A430  6F09               	movwf	MiMAC_SetChannel@channel& (0+255),b
 29546                           
 29547                           ;drv_mrf_miwi_89xa.c: 485: if( channel >= 32 )
 29548  00A432  0E1F               	movlw	31
 29549  00A434  0101               	movlb	1	; () banked
 29550  00A436  6509               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 29551  00A438  D002               	goto	l17585
 29552                           
 29553                           ; BSR set to: 1
 29554                           ;drv_mrf_miwi_89xa.c: 486: {
 29555                           ;drv_mrf_miwi_89xa.c: 487: return 0;
 29556  00A43A  0E00               	movlw	0
 29557                           
 29558                           ; BSR set to: 1
 29559  00A43C  0012               	return	
 29560  00A43E                     l17585:
 29561                           
 29562                           ; BSR set to: 1
 29563                           ;drv_mrf_miwi_89xa.c: 488: }
 29564                           ;drv_mrf_miwi_89xa.c: 491: RegisterSet(0x0C00 | 100);
 29565  00A43E  0E0C               	movlw	12
 29566  00A440  0101               	movlb	1	; () banked
 29567  00A442  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29568  00A444  0E64               	movlw	100
 29569  00A446  6F02               	movwf	RegisterSet@setting& (0+255),b
 29570  00A448  EC06  F05B         	call	_RegisterSet	;wreg free
 29571                           
 29572                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0E00 | PVALUE[channel]);
 29573  00A44C  0101               	movlb	1	; () banked
 29574  00A44E  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 29575  00A450  0D01               	mullw	1
 29576  00A452  0E71               	movlw	low _PVALUE
 29577  00A454  24F3               	addwf	prodl,w,c
 29578  00A456  6EF6               	movwf	tblptrl,c
 29579  00A458  0E20               	movlw	high _PVALUE
 29580  00A45A  20F4               	addwfc	prodh,w,c
 29581  00A45C  6EF7               	movwf	tblptrh,c
 29582  00A45E                     	if	1	;There are 3 active tblptr bytes
 29583  00A45E  6AF8               	clrf	tblptru,c
 29584  00A460  0E00               	movlw	low (__mediumconst shr (0+16))
 29585  00A462  22F8               	addwfc	tblptru,f,c
 29586  00A464                     	endif
 29587  00A464  0008               	tblrd		*
 29588  00A466  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 29589  00A46A  0E00               	movlw	0
 29590  00A46C  0101               	movlb	1	; () banked
 29591  00A46E  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29592  00A470  0101               	movlb	1	; () banked
 29593  00A472  6F02               	movwf	RegisterSet@setting& (0+255),b
 29594  00A474  0E0E               	movlw	14
 29595  00A476  0101               	movlb	1	; () banked
 29596  00A478  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29597  00A47A  EC06  F05B         	call	_RegisterSet	;wreg free
 29598                           
 29599                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x1000 | SVALUE[channel]);
 29600  00A47E  0101               	movlb	1	; () banked
 29601  00A480  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 29602  00A482  0D01               	mullw	1
 29603  00A484  0E91               	movlw	low _SVALUE
 29604  00A486  24F3               	addwf	prodl,w,c
 29605  00A488  6EF6               	movwf	tblptrl,c
 29606  00A48A  0E20               	movlw	high _SVALUE
 29607  00A48C  20F4               	addwfc	prodh,w,c
 29608  00A48E  6EF7               	movwf	tblptrh,c
 29609  00A490                     	if	1	;There are 3 active tblptr bytes
 29610  00A490  6AF8               	clrf	tblptru,c
 29611  00A492  0E00               	movlw	low (__mediumconst shr (0+16))
 29612  00A494  22F8               	addwfc	tblptru,f,c
 29613  00A496                     	endif
 29614  00A496  0008               	tblrd		*
 29615  00A498  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 29616  00A49C  0E00               	movlw	0
 29617  00A49E  0101               	movlb	1	; () banked
 29618  00A4A0  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29619  00A4A2  0101               	movlb	1	; () banked
 29620  00A4A4  6F02               	movwf	RegisterSet@setting& (0+255),b
 29621  00A4A6  0E10               	movlw	16
 29622  00A4A8  0101               	movlb	1	; () banked
 29623  00A4AA  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29624  00A4AC  EC06  F05B         	call	_RegisterSet	;wreg free
 29625                           
 29626                           ;drv_mrf_miwi_89xa.c: 494: SetRFMode(0x20);
 29627  00A4B0  0E20               	movlw	32
 29628  00A4B2  ECCB  F055         	call	_SetRFMode
 29629                           
 29630                           ;drv_mrf_miwi_89xa.c: 495: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29631  00A4B6  0E00               	movlw	0
 29632  00A4B8  0101               	movlb	1	; () banked
 29633  00A4BA  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29634  00A4BC  0E56               	movlw	86
 29635  00A4BE  6F02               	movwf	RegisterSet@setting& (0+255),b
 29636  00A4C0  EC06  F05B         	call	_RegisterSet	;wreg free
 29637                           
 29638                           ;drv_mrf_miwi_89xa.c: 496: SetRFMode(0x40);
 29639  00A4C4  0E40               	movlw	64
 29640  00A4C6  ECCB  F055         	call	_SetRFMode
 29641                           
 29642                           ;drv_mrf_miwi_89xa.c: 497: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 29643  00A4CA  0E1C               	movlw	28
 29644  00A4CC  0101               	movlb	1	; () banked
 29645  00A4CE  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29646  00A4D0  0E0F               	movlw	15
 29647  00A4D2  6F02               	movwf	RegisterSet@setting& (0+255),b
 29648  00A4D4  EC06  F05B         	call	_RegisterSet	;wreg free
 29649                           
 29650                           ;drv_mrf_miwi_89xa.c: 498: SetRFMode(0x20);
 29651  00A4D8  0E20               	movlw	32
 29652  00A4DA  ECCB  F055         	call	_SetRFMode
 29653                           
 29654                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x60);
 29655  00A4DE  0E60               	movlw	96
 29656  00A4E0  ECCB  F055         	call	_SetRFMode
 29657                           
 29658                           ;drv_mrf_miwi_89xa.c: 501: return 1;
 29659  00A4E4  0E01               	movlw	1
 29660  00A4E6  0012               	return	
 29661  00A4E8                     __end_of_MiMAC_SetChannel:
 29662                           	opt stack 0
 29663                           tblptru	equ	0xFF8
 29664                           tblptrh	equ	0xFF7
 29665                           tblptrl	equ	0xFF6
 29666                           tablat	equ	0xFF5
 29667                           prodh	equ	0xFF4
 29668                           prodl	equ	0xFF3
 29669                           intcon	equ	0xFF2
 29670                           intcon2	equ	0xFF1
 29671                           intcon3	equ	0xFF0
 29672                           indf0	equ	0xFEF
 29673                           postinc0	equ	0xFEE
 29674                           plusw0	equ	0xFEB
 29675                           fsr0h	equ	0xFEA
 29676                           fsr0l	equ	0xFE9
 29677                           wreg	equ	0xFE8
 29678                           indf1	equ	0xFE7
 29679                           postinc1	equ	0xFE6
 29680                           postdec1	equ	0xFE5
 29681                           plusw1	equ	0xFE3
 29682                           fsr1h	equ	0xFE2
 29683                           fsr1l	equ	0xFE1
 29684                           indf2	equ	0xFDF
 29685                           postinc2	equ	0xFDE
 29686                           postdec2	equ	0xFDD
 29687                           plusw2	equ	0xFDB
 29688                           fsr2h	equ	0xFDA
 29689                           fsr2l	equ	0xFD9
 29690                           status	equ	0xFD8
 29691                           
 29692 ;; *************** function _SetRFMode *****************
 29693 ;; Defined at:
 29694 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29695 ;; Parameters:    Size  Location     Type
 29696 ;;  mode            1    wreg     unsigned char 
 29697 ;; Auto vars:     Size  Location     Type
 29698 ;;  mode            1    6[BANK1 ] unsigned char 
 29699 ;; Return value:  Size  Location     Type
 29700 ;;		None               void
 29701 ;; Registers used:
 29702 ;;		wreg, status,2, status,0, cstack
 29703 ;; Tracked objects:
 29704 ;;		On entry : 0/0
 29705 ;;		On exit  : 0/0
 29706 ;;		Unchanged: 0/0
 29707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29709 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29711 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29712 ;;Total ram usage:        1 bytes
 29713 ;; Hardware stack levels used:    1
 29714 ;; Hardware stack levels required when called:   18
 29715 ;; This function calls:
 29716 ;;		_RegisterSet
 29717 ;; This function is called by:
 29718 ;;		_TxPacket
 29719 ;;		_MiMAC_SetChannel
 29720 ;;		_MiMAC_Init
 29721 ;;		_MiMAC_PowerState
 29722 ;; This function uses a non-reentrant model
 29723 ;;
 29724                           
 29725                           	psect	text80
 29726  00AB96                     __ptext80:
 29727                           	opt stack 0
 29728  00AB96                     _SetRFMode:
 29729                           	opt stack 6
 29730                           
 29731                           ;incstack = 0
 29732                           ;SetRFMode@mode stored from wreg
 29733  00AB96  0101               	movlb	1	; () banked
 29734  00AB98  6F06               	movwf	SetRFMode@mode& (0+255),b
 29735                           
 29736                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 29737  00AB9A  D037               	goto	l16829
 29738  00AB9C                     l16807:
 29739                           
 29740                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 29741  00AB9C  0E00               	movlw	0
 29742  00AB9E  0101               	movlb	1	; () banked
 29743  00ABA0  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29744  00ABA2  0E96               	movlw	150
 29745  00ABA4  6F02               	movwf	RegisterSet@setting& (0+255),b
 29746  00ABA6  EC06  F05B         	call	_RegisterSet	;wreg free
 29747                           
 29748                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 29749  00ABAA  0E80               	movlw	128
 29750  00ABAC  0100               	movlb	0	; () banked
 29751  00ABAE  6F9B               	movwf	_RF_Mode& (0+255),b
 29752                           
 29753                           ;drv_mrf_miwi_89xa.c: 672: break;
 29754  00ABB0  0012               	return	
 29755  00ABB2                     l16811:
 29756                           
 29757                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 29758  00ABB2  0E00               	movlw	0
 29759  00ABB4  0101               	movlb	1	; () banked
 29760  00ABB6  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29761  00ABB8  0E76               	movlw	118
 29762  00ABBA  6F02               	movwf	RegisterSet@setting& (0+255),b
 29763  00ABBC  EC06  F05B         	call	_RegisterSet	;wreg free
 29764                           
 29765                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 29766  00ABC0  0E60               	movlw	96
 29767  00ABC2  0100               	movlb	0	; () banked
 29768  00ABC4  6F9B               	movwf	_RF_Mode& (0+255),b
 29769                           
 29770                           ;drv_mrf_miwi_89xa.c: 676: break;
 29771  00ABC6  0012               	return	
 29772  00ABC8                     l16815:
 29773                           
 29774                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29775  00ABC8  0E00               	movlw	0
 29776  00ABCA  0101               	movlb	1	; () banked
 29777  00ABCC  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29778  00ABCE  0E56               	movlw	86
 29779  00ABD0  6F02               	movwf	RegisterSet@setting& (0+255),b
 29780  00ABD2  EC06  F05B         	call	_RegisterSet	;wreg free
 29781                           
 29782                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 29783  00ABD6  0E40               	movlw	64
 29784  00ABD8  0100               	movlb	0	; () banked
 29785  00ABDA  6F9B               	movwf	_RF_Mode& (0+255),b
 29786                           
 29787                           ;drv_mrf_miwi_89xa.c: 680: break;
 29788  00ABDC  0012               	return	
 29789  00ABDE                     l16819:
 29790                           
 29791                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 29792  00ABDE  0E00               	movlw	0
 29793  00ABE0  0101               	movlb	1	; () banked
 29794  00ABE2  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29795  00ABE4  0E36               	movlw	54
 29796  00ABE6  6F02               	movwf	RegisterSet@setting& (0+255),b
 29797  00ABE8  EC06  F05B         	call	_RegisterSet	;wreg free
 29798                           
 29799                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 29800  00ABEC  0E20               	movlw	32
 29801  00ABEE  0100               	movlb	0	; () banked
 29802  00ABF0  6F9B               	movwf	_RF_Mode& (0+255),b
 29803                           
 29804                           ;drv_mrf_miwi_89xa.c: 684: break;
 29805  00ABF2  0012               	return	
 29806  00ABF4                     l16823:
 29807                           
 29808                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 29809  00ABF4  0E00               	movlw	0
 29810  00ABF6  0101               	movlb	1	; () banked
 29811  00ABF8  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29812  00ABFA  0E16               	movlw	22
 29813  00ABFC  6F02               	movwf	RegisterSet@setting& (0+255),b
 29814  00ABFE  EC06  F05B         	call	_RegisterSet	;wreg free
 29815                           
 29816                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 29817  00AC02  0E00               	movlw	0
 29818  00AC04  0100               	movlb	0	; () banked
 29819  00AC06  6F9B               	movwf	_RF_Mode& (0+255),b
 29820                           
 29821                           ; BSR set to: 0
 29822                           ;drv_mrf_miwi_89xa.c: 689: }
 29823                           
 29824                           ;drv_mrf_miwi_89xa.c: 688: break;
 29825  00AC08  0012               	return	
 29826  00AC0A                     l16829:
 29827  00AC0A  0101               	movlb	1	; () banked
 29828  00AC0C  5106               	movf	SetRFMode@mode& (0+255),w,b
 29829                           
 29830                           ; Switch size 1, requested type "space"
 29831                           ; Number of cases is 5, Range of values is 0 to 128
 29832                           ; switch strategies available:
 29833                           ; Name         Instructions Cycles
 29834                           ; simple_byte           16     9 (average)
 29835                           ;	Chosen strategy is simple_byte
 29836  00AC0E  0A00               	xorlw	0	; case 0
 29837  00AC10  B4D8               	btfsc	status,2,c
 29838  00AC12  D7F0               	goto	l16823
 29839  00AC14  0A20               	xorlw	32	; case 32
 29840  00AC16  B4D8               	btfsc	status,2,c
 29841  00AC18  D7E2               	goto	l16819
 29842  00AC1A  0A60               	xorlw	96	; case 64
 29843  00AC1C  B4D8               	btfsc	status,2,c
 29844  00AC1E  D7D4               	goto	l16815
 29845  00AC20  0A20               	xorlw	32	; case 96
 29846  00AC22  B4D8               	btfsc	status,2,c
 29847  00AC24  D7C6               	goto	l16811
 29848  00AC26  0AE0               	xorlw	224	; case 128
 29849  00AC28  A4D8               	btfss	status,2,c
 29850  00AC2A  0012               	return	
 29851  00AC2C  D7B7               	goto	l16807
 29852  00AC2E                     __end_of_SetRFMode:
 29853                           	opt stack 0
 29854                           tblptru	equ	0xFF8
 29855                           tblptrh	equ	0xFF7
 29856                           tblptrl	equ	0xFF6
 29857                           tablat	equ	0xFF5
 29858                           prodh	equ	0xFF4
 29859                           prodl	equ	0xFF3
 29860                           intcon	equ	0xFF2
 29861                           intcon2	equ	0xFF1
 29862                           intcon3	equ	0xFF0
 29863                           indf0	equ	0xFEF
 29864                           postinc0	equ	0xFEE
 29865                           plusw0	equ	0xFEB
 29866                           fsr0h	equ	0xFEA
 29867                           fsr0l	equ	0xFE9
 29868                           wreg	equ	0xFE8
 29869                           indf1	equ	0xFE7
 29870                           postinc1	equ	0xFE6
 29871                           postdec1	equ	0xFE5
 29872                           plusw1	equ	0xFE3
 29873                           fsr1h	equ	0xFE2
 29874                           fsr1l	equ	0xFE1
 29875                           indf2	equ	0xFDF
 29876                           postinc2	equ	0xFDE
 29877                           postdec2	equ	0xFDD
 29878                           plusw2	equ	0xFDB
 29879                           fsr2h	equ	0xFDA
 29880                           fsr2l	equ	0xFD9
 29881                           status	equ	0xFD8
 29882                           
 29883 ;; *************** function _RegisterSet *****************
 29884 ;; Defined at:
 29885 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29886 ;; Parameters:    Size  Location     Type
 29887 ;;  setting         2    2[BANK1 ] unsigned int 
 29888 ;; Auto vars:     Size  Location     Type
 29889 ;;  IRQ0select      1    5[BANK1 ] unsigned char 
 29890 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 29891 ;; Return value:  Size  Location     Type
 29892 ;;		None               void
 29893 ;; Registers used:
 29894 ;;		wreg, status,2, cstack
 29895 ;; Tracked objects:
 29896 ;;		On entry : 0/0
 29897 ;;		On exit  : 0/0
 29898 ;;		Unchanged: 0/0
 29899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29900 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29901 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29903 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29904 ;;Total ram usage:        4 bytes
 29905 ;; Hardware stack levels used:    1
 29906 ;; Hardware stack levels required when called:   17
 29907 ;; This function calls:
 29908 ;;		_SPIPut
 29909 ;; This function is called by:
 29910 ;;		_TxPacket
 29911 ;;		_MiMAC_SetChannel
 29912 ;;		_MiMAC_SetPower
 29913 ;;		_MiMAC_Init
 29914 ;;		_SetRFMode
 29915 ;; This function uses a non-reentrant model
 29916 ;;
 29917                           
 29918                           	psect	text81
 29919  00B60C                     __ptext81:
 29920                           	opt stack 0
 29921  00B60C                     _RegisterSet:
 29922                           	opt stack 11
 29923                           
 29924                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 29925                           
 29926                           ;incstack = 0
 29927  00B60C  0E00               	movlw	0
 29928  00B60E  B6F0               	btfsc	intcon3,3,c	;volatile
 29929  00B610  0E01               	movlw	1
 29930  00B612  0101               	movlb	1	; () banked
 29931  00B614  6F04               	movwf	RegisterSet@IRQ1select& (0+255),b
 29932                           
 29933                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 29934  00B616  0E00               	movlw	0
 29935  00B618  B8F2               	btfsc	intcon,4,c	;volatile
 29936  00B61A  0E01               	movlw	1
 29937  00B61C  0101               	movlb	1	; () banked
 29938  00B61E  6F05               	movwf	RegisterSet@IRQ0select& (0+255),b
 29939                           
 29940                           ; BSR set to: 1
 29941                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 29942  00B620  98F2               	bcf	intcon,4,c	;volatile
 29943                           
 29944                           ; BSR set to: 1
 29945                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 29946  00B622  96F0               	bcf	intcon3,3,c	;volatile
 29947                           
 29948                           ; BSR set to: 1
 29949                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 29950  00B624  968A               	bcf	3978,3,c	;volatile
 29951                           
 29952                           ; BSR set to: 1
 29953                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 29954  00B626  0101               	movlb	1	; () banked
 29955  00B628  5103               	movf	(RegisterSet@setting+1)& (0+255),w,b
 29956  00B62A  EC8E  F05D         	call	_SPIPut
 29957                           
 29958                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 29959  00B62E  0101               	movlb	1	; () banked
 29960  00B630  5102               	movf	RegisterSet@setting& (0+255),w,b
 29961  00B632  EC8E  F05D         	call	_SPIPut
 29962                           
 29963                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 29964  00B636  868A               	bsf	3978,3,c	;volatile
 29965                           
 29966                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 29967  00B638  0101               	movlb	1	; () banked
 29968  00B63A  B104               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 29969  00B63C  D002               	bra	u17985
 29970  00B63E  96F0               	bcf	intcon3,3,c	;volatile
 29971  00B640  D001               	bra	u17986
 29972  00B642                     u17985:
 29973  00B642  86F0               	bsf	intcon3,3,c	;volatile
 29974  00B644                     u17986:
 29975                           
 29976                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 29977  00B644  0101               	movlb	1	; () banked
 29978  00B646  B105               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 29979  00B648  D002               	bra	u17995
 29980  00B64A  98F2               	bcf	intcon,4,c	;volatile
 29981  00B64C  D001               	bra	u17996
 29982  00B64E                     u17995:
 29983  00B64E  88F2               	bsf	intcon,4,c	;volatile
 29984  00B650                     u17996:
 29985  00B650  0012               	return		;funcret
 29986  00B652                     __end_of_RegisterSet:
 29987                           	opt stack 0
 29988                           tblptru	equ	0xFF8
 29989                           tblptrh	equ	0xFF7
 29990                           tblptrl	equ	0xFF6
 29991                           tablat	equ	0xFF5
 29992                           prodh	equ	0xFF4
 29993                           prodl	equ	0xFF3
 29994                           intcon	equ	0xFF2
 29995                           intcon2	equ	0xFF1
 29996                           intcon3	equ	0xFF0
 29997                           indf0	equ	0xFEF
 29998                           postinc0	equ	0xFEE
 29999                           plusw0	equ	0xFEB
 30000                           fsr0h	equ	0xFEA
 30001                           fsr0l	equ	0xFE9
 30002                           wreg	equ	0xFE8
 30003                           indf1	equ	0xFE7
 30004                           postinc1	equ	0xFE6
 30005                           postdec1	equ	0xFE5
 30006                           plusw1	equ	0xFE3
 30007                           fsr1h	equ	0xFE2
 30008                           fsr1l	equ	0xFE1
 30009                           indf2	equ	0xFDF
 30010                           postinc2	equ	0xFDE
 30011                           postdec2	equ	0xFDD
 30012                           plusw2	equ	0xFDB
 30013                           fsr2h	equ	0xFDA
 30014                           fsr2l	equ	0xFD9
 30015                           status	equ	0xFD8
 30016                           
 30017 ;; *************** function _SPIPut *****************
 30018 ;; Defined at:
 30019 ;;		line 45 in file "src/18F27J53/spi.c"
 30020 ;; Parameters:    Size  Location     Type
 30021 ;;  v               1    wreg     unsigned char 
 30022 ;; Auto vars:     Size  Location     Type
 30023 ;;  v               1    1[BANK1 ] unsigned char 
 30024 ;;  i               1    0[BANK1 ] unsigned char 
 30025 ;; Return value:  Size  Location     Type
 30026 ;;		None               void
 30027 ;; Registers used:
 30028 ;;		wreg
 30029 ;; Tracked objects:
 30030 ;;		On entry : 0/0
 30031 ;;		On exit  : 0/0
 30032 ;;		Unchanged: 0/0
 30033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30035 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30037 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30038 ;;Total ram usage:        2 bytes
 30039 ;; Hardware stack levels used:    1
 30040 ;; Hardware stack levels required when called:   16
 30041 ;; This function calls:
 30042 ;;		Nothing
 30043 ;; This function is called by:
 30044 ;;		_SPIGet
 30045 ;;		_RegisterSet
 30046 ;;		_RegisterRead
 30047 ;;		_WriteFIFO
 30048 ;; This function uses a non-reentrant model
 30049 ;;
 30050                           
 30051                           	psect	text82
 30052  00BB1C                     __ptext82:
 30053                           	opt stack 0
 30054  00BB1C                     _SPIPut:
 30055                           	opt stack 11
 30056                           
 30057                           ;incstack = 0
 30058                           ;SPIPut@v stored from wreg
 30059  00BB1C  0101               	movlb	1	; () banked
 30060  00BB1E  6F01               	movwf	SPIPut@v& (0+255),b
 30061                           
 30062                           ;spi.c: 66: {
 30063                           ;spi.c: 68: uint8_t i;
 30064                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 30065  00BB20  9EA4               	bcf	4004,7,c	;volatile
 30066                           
 30067                           ;spi.c: 72: i = SSP2BUF;
 30068  00BB22  CF75 F100          	movff	3957,SPIPut@i	;volatile
 30069  00BB26                     l29:
 30070                           
 30071                           ;spi.c: 75: {
 30072                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 30073  00BB26  9E72               	bcf	3954,7,c	;volatile
 30074                           
 30075                           ;spi.c: 77: SSP2BUF = v;
 30076  00BB28  C101  FF75         	movff	SPIPut@v,3957	;volatile
 30077                           
 30078                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 30079  00BB2C  BE72               	btfsc	3954,7,c	;volatile
 30080  00BB2E  D7FB               	goto	l29
 30081  00BB30                     l31:
 30082  00BB30  AEA4               	btfss	4004,7,c	;volatile
 30083  00BB32  D7FE               	goto	l31
 30084                           
 30085                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 30086  00BB34  9EA4               	bcf	4004,7,c	;volatile
 30087  00BB36  0012               	return		;funcret
 30088  00BB38                     __end_of_SPIPut:
 30089                           	opt stack 0
 30090                           tblptru	equ	0xFF8
 30091                           tblptrh	equ	0xFF7
 30092                           tblptrl	equ	0xFF6
 30093                           tablat	equ	0xFF5
 30094                           prodh	equ	0xFF4
 30095                           prodl	equ	0xFF3
 30096                           intcon	equ	0xFF2
 30097                           intcon2	equ	0xFF1
 30098                           intcon3	equ	0xFF0
 30099                           indf0	equ	0xFEF
 30100                           postinc0	equ	0xFEE
 30101                           plusw0	equ	0xFEB
 30102                           fsr0h	equ	0xFEA
 30103                           fsr0l	equ	0xFE9
 30104                           wreg	equ	0xFE8
 30105                           indf1	equ	0xFE7
 30106                           postinc1	equ	0xFE6
 30107                           postdec1	equ	0xFE5
 30108                           plusw1	equ	0xFE3
 30109                           fsr1h	equ	0xFE2
 30110                           fsr1l	equ	0xFE1
 30111                           indf2	equ	0xFDF
 30112                           postinc2	equ	0xFDE
 30113                           postdec2	equ	0xFDD
 30114                           plusw2	equ	0xFDB
 30115                           fsr2h	equ	0xFDA
 30116                           fsr2l	equ	0xFD9
 30117                           status	equ	0xFD8
 30118                           
 30119 ;; *************** function _InitSymbolTimer *****************
 30120 ;; Defined at:
 30121 ;;		line 59 in file "src/18F27J53/symbol.c"
 30122 ;; Parameters:    Size  Location     Type
 30123 ;;		None
 30124 ;; Auto vars:     Size  Location     Type
 30125 ;;		None
 30126 ;; Return value:  Size  Location     Type
 30127 ;;		None               void
 30128 ;; Registers used:
 30129 ;;		wreg, status,2
 30130 ;; Tracked objects:
 30131 ;;		On entry : 0/0
 30132 ;;		On exit  : 0/0
 30133 ;;		Unchanged: 0/0
 30134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30139 ;;Total ram usage:        0 bytes
 30140 ;; Hardware stack levels used:    1
 30141 ;; Hardware stack levels required when called:   16
 30142 ;; This function calls:
 30143 ;;		Nothing
 30144 ;; This function is called by:
 30145 ;;		_MiApp_ProtocolInit
 30146 ;; This function uses a non-reentrant model
 30147 ;;
 30148                           
 30149                           	psect	text83
 30150  00BB6E                     __ptext83:
 30151                           	opt stack 0
 30152  00BB6E                     _InitSymbolTimer:
 30153                           	opt stack 13
 30154                           
 30155                           ;symbol.c: 62: T1CON = 0b00110000;
 30156                           
 30157                           ;incstack = 0
 30158  00BB6E  0E30               	movlw	48
 30159  00BB70  6ECD               	movwf	4045,c	;volatile
 30160                           
 30161                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 30162  00BB72  909E               	bcf	3998,0,c	;volatile
 30163                           
 30164                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 30165  00BB74  809D               	bsf	3997,0,c	;volatile
 30166                           
 30167                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 30168  00BB76  80CD               	bsf	4045,0,c	;volatile
 30169                           
 30170                           ;symbol.c: 75: timerExtension1 = 0;
 30171  00BB78  0E00               	movlw	0
 30172  00BB7A  0100               	movlb	0	; () banked
 30173  00BB7C  6FA1               	movwf	_timerExtension1& (0+255),b	;volatile
 30174                           
 30175                           ;symbol.c: 76: timerExtension2 = 0;
 30176  00BB7E  0E00               	movlw	0
 30177  00BB80  0100               	movlb	0	; () banked
 30178  00BB82  6FA2               	movwf	_timerExtension2& (0+255),b	;volatile
 30179                           
 30180                           ; BSR set to: 0
 30181  00BB84  0012               	return		;funcret
 30182  00BB86                     __end_of_InitSymbolTimer:
 30183                           	opt stack 0
 30184                           tblptru	equ	0xFF8
 30185                           tblptrh	equ	0xFF7
 30186                           tblptrl	equ	0xFF6
 30187                           tablat	equ	0xFF5
 30188                           prodh	equ	0xFF4
 30189                           prodl	equ	0xFF3
 30190                           intcon	equ	0xFF2
 30191                           intcon2	equ	0xFF1
 30192                           intcon3	equ	0xFF0
 30193                           indf0	equ	0xFEF
 30194                           postinc0	equ	0xFEE
 30195                           plusw0	equ	0xFEB
 30196                           fsr0h	equ	0xFEA
 30197                           fsr0l	equ	0xFE9
 30198                           wreg	equ	0xFE8
 30199                           indf1	equ	0xFE7
 30200                           postinc1	equ	0xFE6
 30201                           postdec1	equ	0xFE5
 30202                           plusw1	equ	0xFE3
 30203                           fsr1h	equ	0xFE2
 30204                           fsr1l	equ	0xFE1
 30205                           indf2	equ	0xFDF
 30206                           postinc2	equ	0xFDE
 30207                           postdec2	equ	0xFDD
 30208                           plusw2	equ	0xFDB
 30209                           fsr2h	equ	0xFDA
 30210                           fsr2l	equ	0xFD9
 30211                           status	equ	0xFD8
 30212                           
 30213 ;; *************** function _MiApp_ConnectionMode *****************
 30214 ;; Defined at:
 30215 ;;		line 3922 in file "src/miwi/miwi_mesh.c"
 30216 ;; Parameters:    Size  Location     Type
 30217 ;;  Mode            1    wreg     unsigned char 
 30218 ;; Auto vars:     Size  Location     Type
 30219 ;;  Mode            1    1[BANK1 ] unsigned char 
 30220 ;; Return value:  Size  Location     Type
 30221 ;;		None               void
 30222 ;; Registers used:
 30223 ;;		wreg, status,2, status,0
 30224 ;; Tracked objects:
 30225 ;;		On entry : 0/0
 30226 ;;		On exit  : 0/0
 30227 ;;		Unchanged: 0/0
 30228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30230 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30231 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30232 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30233 ;;Total ram usage:        2 bytes
 30234 ;; Hardware stack levels used:    1
 30235 ;; Hardware stack levels required when called:   16
 30236 ;; This function calls:
 30237 ;;		Nothing
 30238 ;; This function is called by:
 30239 ;;		_main
 30240 ;; This function uses a non-reentrant model
 30241 ;;
 30242                           
 30243                           	psect	text84
 30244  00BA0A                     __ptext84:
 30245                           	opt stack 0
 30246  00BA0A                     _MiApp_ConnectionMode:
 30247                           	opt stack 14
 30248                           
 30249                           ; BSR set to: 0
 30250                           ;incstack = 0
 30251                           ;MiApp_ConnectionMode@Mode stored from wreg
 30252  00BA0A  0101               	movlb	1	; () banked
 30253  00BA0C  6F01               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 30254                           
 30255                           ;miwi_mesh.c: 3924: if( Mode > 3 )
 30256  00BA0E  0E03               	movlw	3
 30257  00BA10  0101               	movlb	1	; () banked
 30258  00BA12  6501               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 30259  00BA14  D001               	goto	l940
 30260  00BA16  0012               	return	
 30261  00BA18                     l940:
 30262                           
 30263                           ; BSR set to: 1
 30264                           ;miwi_mesh.c: 3927: }
 30265                           ;miwi_mesh.c: 3928: ConnMode = Mode;
 30266  00BA18  C101  F1BF         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 30267                           
 30268                           ; BSR set to: 1
 30269                           ;miwi_mesh.c: 3929: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 30270  00BA1C  C1BF  F100         	movff	_ConnMode,??_MiApp_ConnectionMode
 30271  00BA20  0101               	movlb	1	; () banked
 30272  00BA22  3B00               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 30273  00BA24  0101               	movlb	1	; () banked
 30274  00BA26  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 30275  00BA28  0101               	movlb	1	; () banked
 30276  00BA2A  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 30277  00BA2C  0BCF               	andlw	-49
 30278  00BA2E  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 30279  00BA30  0101               	movlb	1	; () banked
 30280  00BA32  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 30281                           
 30282                           ; BSR set to: 1
 30283  00BA34  0012               	return		;funcret
 30284  00BA36                     __end_of_MiApp_ConnectionMode:
 30285                           	opt stack 0
 30286                           tblptru	equ	0xFF8
 30287                           tblptrh	equ	0xFF7
 30288                           tblptrl	equ	0xFF6
 30289                           tablat	equ	0xFF5
 30290                           prodh	equ	0xFF4
 30291                           prodl	equ	0xFF3
 30292                           intcon	equ	0xFF2
 30293                           intcon2	equ	0xFF1
 30294                           intcon3	equ	0xFF0
 30295                           indf0	equ	0xFEF
 30296                           postinc0	equ	0xFEE
 30297                           plusw0	equ	0xFEB
 30298                           fsr0h	equ	0xFEA
 30299                           fsr0l	equ	0xFE9
 30300                           wreg	equ	0xFE8
 30301                           indf1	equ	0xFE7
 30302                           postinc1	equ	0xFE6
 30303                           postdec1	equ	0xFE5
 30304                           plusw1	equ	0xFE3
 30305                           fsr1h	equ	0xFE2
 30306                           fsr1l	equ	0xFE1
 30307                           indf2	equ	0xFDF
 30308                           postinc2	equ	0xFDE
 30309                           postdec2	equ	0xFDD
 30310                           plusw2	equ	0xFDB
 30311                           fsr2h	equ	0xFDA
 30312                           fsr2l	equ	0xFD9
 30313                           status	equ	0xFD8
 30314                           
 30315 ;; *************** function _SYS_InterruptLow *****************
 30316 ;; Defined at:
 30317 ;;		line 790 in file "src/main.c"
 30318 ;; Parameters:    Size  Location     Type
 30319 ;;		None
 30320 ;; Auto vars:     Size  Location     Type
 30321 ;;		None
 30322 ;; Return value:  Size  Location     Type
 30323 ;;		None               void
 30324 ;; Registers used:
 30325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30326 ;; Tracked objects:
 30327 ;;		On entry : 0/0
 30328 ;;		On exit  : 0/0
 30329 ;;		Unchanged: 0/0
 30330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30333 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30334 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30335 ;;Total ram usage:       19 bytes
 30336 ;; Hardware stack levels used:    1
 30337 ;; Hardware stack levels required when called:   15
 30338 ;; This function calls:
 30339 ;;		_USBDeviceTasks
 30340 ;;		i1___ftadd
 30341 ;;		i1_update_LED
 30342 ;; This function is called by:
 30343 ;;		Interrupt level 1
 30344 ;; This function uses a non-reentrant model
 30345 ;;
 30346                           
 30347                           	psect	intcodelo
 30348  000018                     __pintcodelo:
 30349                           	opt stack 0
 30350  000018                     _SYS_InterruptLow:
 30351                           	opt stack 3
 30352                           
 30353                           ; BSR set to: 1
 30354                           ;incstack = 0
 30355  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30356  00001A  CFD8 F021          	movff	status,??_SYS_InterruptLow+2
 30357  00001E  CFE8 F022          	movff	wreg,??_SYS_InterruptLow+3
 30358  000022  CFE0 F023          	movff	bsr,??_SYS_InterruptLow+4
 30359  000026  CFFA F024          	movff	pclath,??_SYS_InterruptLow+5
 30360  00002A  CFFB F025          	movff	pclatu,??_SYS_InterruptLow+6
 30361  00002E  CFE9 F026          	movff	fsr0l,??_SYS_InterruptLow+7
 30362  000032  CFEA F027          	movff	fsr0h,??_SYS_InterruptLow+8
 30363  000036  CFE1 F028          	movff	fsr1l,??_SYS_InterruptLow+9
 30364  00003A  CFE2 F029          	movff	fsr1h,??_SYS_InterruptLow+10
 30365  00003E  CFD9 F02A          	movff	fsr2l,??_SYS_InterruptLow+11
 30366  000042  CFDA F02B          	movff	fsr2h,??_SYS_InterruptLow+12
 30367  000046  CFF3 F02C          	movff	prodl,??_SYS_InterruptLow+13
 30368  00004A  CFF4 F02D          	movff	prodh,??_SYS_InterruptLow+14
 30369  00004E  CFF6 F02E          	movff	tblptrl,??_SYS_InterruptLow+15
 30370  000052  CFF7 F02F          	movff	tblptrh,??_SYS_InterruptLow+16
 30371  000056  CFF8 F030          	movff	tblptru,??_SYS_InterruptLow+17
 30372  00005A  CFF5 F031          	movff	tablat,??_SYS_InterruptLow+18
 30373                           
 30374                           ;main.c: 792: USBDeviceTasks();
 30375  00005E  EC8C  F040         	call	_USBDeviceTasks	;wreg free
 30376                           
 30377                           ;main.c: 793: if (PIR3bits.TMR4IF)
 30378  000062  A6A4               	btfss	4004,3,c	;volatile
 30379  000064  D073               	goto	i1l1874
 30380                           
 30381                           ;main.c: 794: {
 30382                           ;main.c: 795: PIR3bits.TMR4IF = 0;
 30383  000066  96A4               	bcf	4004,3,c	;volatile
 30384                           
 30385                           ;main.c: 796: if ((status_led == LED_SLOW_PULSE)||(status_led == LED_FAST_PULSE))
 30386  000068  0E02               	movlw	2
 30387  00006A  1855               	xorwf	_status_led,w,c	;volatile
 30388  00006C  B4D8               	btfsc	status,2,c
 30389  00006E  D003               	goto	i1l16317
 30390  000070  0455               	decf	_status_led,w,c	;volatile
 30391  000072  A4D8               	btfss	status,2,c
 30392  000074  D04B               	goto	i1l16333
 30393  000076                     i1l16317:
 30394                           
 30395                           ;main.c: 797: {
 30396                           ;main.c: 798: if (LED_increasing == 1)
 30397  000076  0445               	decf	_LED_increasing,w,c	;volatile
 30398  000078  A4D8               	btfss	status,2,c
 30399  00007A  D012               	goto	i1l16323
 30400                           
 30401                           ;main.c: 799: {
 30402                           ;main.c: 800: LED_brightness = LED_brightness + 2;
 30403  00007C  0E02               	movlw	2
 30404  00007E  245B               	addwf	_LED_brightness,w,c	;volatile
 30405  000080  6E5B               	movwf	_LED_brightness,c	;volatile
 30406  000082  0E00               	movlw	0
 30407  000084  205C               	addwfc	_LED_brightness+1,w,c	;volatile
 30408  000086  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30409                           
 30410                           ;main.c: 801: if (LED_brightness >= 235)
 30411  000088  505C               	movf	_LED_brightness+1,w,c	;volatile
 30412  00008A  E104               	bnz	i1u1757_20
 30413  00008C  0EEB               	movlw	235
 30414  00008E  5C5B               	subwf	_LED_brightness,w,c	;volatile
 30415  000090  A0D8               	btfss	status,0,c
 30416  000092  D018               	goto	i1l16327
 30417  000094                     i1u1757_20:
 30418                           
 30419                           ;main.c: 802: {
 30420                           ;main.c: 803: LED_brightness = 235;
 30421  000094  0E00               	movlw	0
 30422  000096  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30423  000098  0EEB               	movlw	235
 30424  00009A  6E5B               	movwf	_LED_brightness,c	;volatile
 30425                           
 30426                           ;main.c: 804: LED_increasing = 0;
 30427  00009C  0E00               	movlw	0
 30428  00009E  D011               	goto	L12
 30429  0000A0                     i1l16323:
 30430                           
 30431                           ;main.c: 807: else
 30432                           ;main.c: 808: {
 30433                           ;main.c: 809: LED_brightness = LED_brightness - 2;
 30434  0000A0  0EFE               	movlw	254
 30435  0000A2  245B               	addwf	_LED_brightness,w,c	;volatile
 30436  0000A4  6E5B               	movwf	_LED_brightness,c	;volatile
 30437  0000A6  0EFF               	movlw	255
 30438  0000A8  205C               	addwfc	_LED_brightness+1,w,c	;volatile
 30439  0000AA  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30440                           
 30441                           ;main.c: 810: if (LED_brightness <= 10)
 30442  0000AC  505C               	movf	_LED_brightness+1,w,c	;volatile
 30443  0000AE  E10A               	bnz	i1l16327
 30444  0000B0  0E0B               	movlw	11
 30445  0000B2  5C5B               	subwf	_LED_brightness,w,c	;volatile
 30446  0000B4  B0D8               	btfsc	status,0,c
 30447  0000B6  D006               	goto	i1l16327
 30448                           
 30449                           ;main.c: 811: {
 30450                           ;main.c: 812: LED_brightness = 10;
 30451  0000B8  0E00               	movlw	0
 30452  0000BA  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30453  0000BC  0E0A               	movlw	10
 30454  0000BE  6E5B               	movwf	_LED_brightness,c	;volatile
 30455                           
 30456                           ;main.c: 813: LED_increasing = 1;
 30457  0000C0  0E01               	movlw	1
 30458  0000C2                     L12:
 30459  0000C2  6E45               	movwf	_LED_increasing,c	;volatile
 30460  0000C4                     i1l16327:
 30461                           
 30462                           ;main.c: 814: }
 30463                           ;main.c: 815: }
 30464                           ;main.c: 817: CCP1CONbits.DC1B0 = LED_brightness & 1;
 30465  0000C4  C05B  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 30466  0000C8  0E01               	movlw	1
 30467  0000CA  161F               	andwf	??_SYS_InterruptLow,f,c
 30468  0000CC  3A1F               	swapf	??_SYS_InterruptLow,f,c
 30469  0000CE  50BA               	movf	4026,w,c	;volatile
 30470  0000D0  181F               	xorwf	??_SYS_InterruptLow,w,c
 30471  0000D2  0BEF               	andlw	-17
 30472  0000D4  181F               	xorwf	??_SYS_InterruptLow,w,c
 30473  0000D6  6EBA               	movwf	4026,c	;volatile
 30474                           
 30475                           ;main.c: 818: CCP1CONbits.DC1B1 = (LED_brightness >> 1) & 1;
 30476  0000D8  90D8               	bcf	status,0,c
 30477  0000DA  305C               	rrcf	_LED_brightness+1,w,c	;volatile
 30478  0000DC  6E20               	movwf	(??_SYS_InterruptLow+1)& (0+255),c
 30479  0000DE  305B               	rrcf	_LED_brightness,w,c	;volatile
 30480  0000E0  6E1F               	movwf	??_SYS_InterruptLow& (0+255),c
 30481  0000E2  0E01               	movlw	1
 30482  0000E4  161F               	andwf	??_SYS_InterruptLow,f,c
 30483  0000E6  3A1F               	swapf	??_SYS_InterruptLow,f,c
 30484  0000E8  461F               	rlncf	??_SYS_InterruptLow,f,c
 30485  0000EA  50BA               	movf	4026,w,c	;volatile
 30486  0000EC  181F               	xorwf	??_SYS_InterruptLow,w,c
 30487  0000EE  0BDF               	andlw	-33
 30488  0000F0  181F               	xorwf	??_SYS_InterruptLow,w,c
 30489  0000F2  6EBA               	movwf	4026,c	;volatile
 30490                           
 30491                           ;main.c: 819: CCPR1L = (LED_brightness >> 2);
 30492  0000F4  C05B  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 30493  0000F8  C05C  F020         	movff	_LED_brightness+1,??_SYS_InterruptLow+1	;volatile
 30494  0000FC  90D8               	bcf	status,0,c
 30495  0000FE  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 30496  000100  321F               	rrcf	??_SYS_InterruptLow,f,c
 30497  000102  90D8               	bcf	status,0,c
 30498  000104  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 30499  000106  321F               	rrcf	??_SYS_InterruptLow,f,c
 30500  000108  501F               	movf	??_SYS_InterruptLow,w,c
 30501  00010A  6EBB               	movwf	4027,c	;volatile
 30502  00010C                     i1l16333:
 30503                           
 30504                           ;main.c: 820: }
 30505                           ;main.c: 821: if (status_led == LED_FULL)
 30506  00010C  0E03               	movlw	3
 30507  00010E  1855               	xorwf	_status_led,w,c	;volatile
 30508  000110  A4D8               	btfss	status,2,c
 30509  000112  D044               	goto	i1l1896
 30510                           
 30511                           ;main.c: 822: {
 30512                           ;main.c: 823: repeat_full = repeat_full - 1;
 30513  000114  0453               	decf	_repeat_full,w,c	;volatile
 30514  000116  6E53               	movwf	_repeat_full,c	;volatile
 30515                           
 30516                           ;main.c: 824: if (repeat_full == 0)
 30517  000118  5053               	movf	_repeat_full,w,c	;volatile
 30518  00011A  A4D8               	btfss	status,2,c
 30519  00011C  D03F               	goto	i1l1896
 30520                           
 30521                           ;main.c: 825: {
 30522                           ;main.c: 826: if (myAppState == STATE_INIT)
 30523  00011E  5052               	movf	_myAppState,w,c
 30524  000120  B4D8               	btfsc	status,2,c
 30525  000122  D003               	goto	i1l16345
 30526                           
 30527                           ;main.c: 828: else if (myAppState == STATE_USB_READY)
 30528                           
 30529                           ;main.c: 827: status_led = LED_FAST_PULSE;
 30530  000124  0452               	decf	_myAppState,w,c
 30531  000126  A4D8               	btfss	status,2,c
 30532  000128  D002               	goto	i1l16347
 30533  00012A                     i1l16345:
 30534                           
 30535                           ;main.c: 829: status_led = LED_FAST_PULSE;
 30536  00012A  0E01               	movlw	1
 30537  00012C  D00B               	goto	L14
 30538  00012E                     i1l16347:
 30539                           
 30540                           ;main.c: 830: else if (myAppState == STATE_READY)
 30541  00012E  0E02               	movlw	2
 30542  000130  1852               	xorwf	_myAppState,w,c
 30543  000132  A4D8               	btfss	status,2,c
 30544  000134  D002               	goto	i1l16351
 30545                           
 30546                           ;main.c: 831: status_led = LED_SLOW_PULSE;
 30547  000136  0E02               	movlw	2
 30548  000138  D005               	goto	L14
 30549  00013A                     i1l16351:
 30550                           
 30551                           ;main.c: 832: else if (myAppState == STATE_PROBLEM)
 30552  00013A  0E03               	movlw	3
 30553  00013C  1852               	xorwf	_myAppState,w,c
 30554  00013E  A4D8               	btfss	status,2,c
 30555  000140  D002               	goto	i1l16355
 30556                           
 30557                           ;main.c: 833: status_led = LED_OFF;
 30558  000142  0E00               	movlw	0
 30559  000144                     L14:
 30560  000144  6E55               	movwf	_status_led,c	;volatile
 30561  000146                     i1l16355:
 30562                           
 30563                           ;main.c: 834: update_LED();
 30564  000146  ECF7  F059         	call	i1_update_LED	;wreg free
 30565                           
 30566                           ;main.c: 835: }
 30567                           ;main.c: 836: }
 30568                           ;main.c: 837: }
 30569  00014A  D028               	goto	i1l1896
 30570  00014C                     i1l1874:
 30571                           
 30572                           ;main.c: 838: else if(PIR3bits.RTCCIF)
 30573  00014C  A0A4               	btfss	4004,0,c	;volatile
 30574  00014E  D026               	goto	i1l1896
 30575                           
 30576                           ;main.c: 839: {
 30577                           ;main.c: 840: m_uptime_days = m_uptime_days + 0.000740741F;
 30578  000150  C1B0  F009         	movff	_m_uptime_days,i1___ftadd@f1	;volatile
 30579  000154  C1B1  F00A         	movff	_m_uptime_days+1,i1___ftadd@f1+1	;volatile
 30580  000158  C1B2  F00B         	movff	_m_uptime_days+2,i1___ftadd@f1+2	;volatile
 30581  00015C  0E2E               	movlw	46
 30582  00015E  6E0C               	movwf	i1___ftadd@f2,c
 30583  000160  0E42               	movlw	66
 30584  000162  6E0D               	movwf	i1___ftadd@f2+1,c
 30585  000164  0E3A               	movlw	58
 30586  000166  6E0E               	movwf	i1___ftadd@f2+2,c
 30587  000168  EC97  F03A         	call	i1___ftadd	;wreg free
 30588  00016C  C009  F1B0         	movff	?i1___ftadd,_m_uptime_days	;volatile
 30589  000170  C00A  F1B1         	movff	?i1___ftadd+1,_m_uptime_days+1	;volatile
 30590  000174  C00B  F1B2         	movff	?i1___ftadd+2,_m_uptime_days+2	;volatile
 30591                           
 30592                           ;main.c: 841: timer_count = timer_count - 1;
 30593  000178  045D               	decf	_timer_count,w,c	;volatile
 30594  00017A  6E5D               	movwf	_timer_count,c	;volatile
 30595                           
 30596                           ;main.c: 842: if (timer_count == 0)
 30597  00017C  505D               	movf	_timer_count,w,c	;volatile
 30598  00017E  A4D8               	btfss	status,2,c
 30599  000180  D00C               	goto	i1l1893
 30600                           
 30601                           ;main.c: 843: {
 30602                           ;main.c: 844: timer_flag = 1;
 30603  000182  0E01               	movlw	1
 30604  000184  0101               	movlb	1	; () banked
 30605  000186  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
 30606                           
 30607                           ;main.c: 845: if (m_update_frequency == 0)
 30608  000188  0101               	movlb	1	; () banked
 30609  00018A  51FA               	movf	_m_update_frequency& (0+255),w,b	;volatile
 30610  00018C  A4D8               	btfss	status,2,c
 30611  00018E  D003               	goto	i1l1894
 30612                           
 30613                           ; BSR set to: 1
 30614                           ;main.c: 846: timer_count = 1;
 30615  000190  0E01               	movlw	1
 30616  000192  6E5D               	movwf	_timer_count,c	;volatile
 30617  000194  D002               	goto	i1l1893
 30618  000196                     i1l1894:
 30619                           
 30620                           ; BSR set to: 1
 30621                           ;main.c: 847: else
 30622                           ;main.c: 848: timer_count = m_update_frequency;
 30623  000196  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
 30624  00019A                     i1l1893:
 30625                           
 30626                           ;main.c: 849: }
 30627                           ;main.c: 850: PIR3bits.RTCCIF = 0;
 30628  00019A  90A4               	bcf	4004,0,c	;volatile
 30629  00019C                     i1l1896:
 30630  00019C  C031  FFF5         	movff	??_SYS_InterruptLow+18,tablat
 30631  0001A0  C030  FFF8         	movff	??_SYS_InterruptLow+17,tblptru
 30632  0001A4  C02F  FFF7         	movff	??_SYS_InterruptLow+16,tblptrh
 30633  0001A8  C02E  FFF6         	movff	??_SYS_InterruptLow+15,tblptrl
 30634  0001AC  C02D  FFF4         	movff	??_SYS_InterruptLow+14,prodh
 30635  0001B0  C02C  FFF3         	movff	??_SYS_InterruptLow+13,prodl
 30636  0001B4  C02B  FFDA         	movff	??_SYS_InterruptLow+12,fsr2h
 30637  0001B8  C02A  FFD9         	movff	??_SYS_InterruptLow+11,fsr2l
 30638  0001BC  C029  FFE2         	movff	??_SYS_InterruptLow+10,fsr1h
 30639  0001C0  C028  FFE1         	movff	??_SYS_InterruptLow+9,fsr1l
 30640  0001C4  C027  FFEA         	movff	??_SYS_InterruptLow+8,fsr0h
 30641  0001C8  C026  FFE9         	movff	??_SYS_InterruptLow+7,fsr0l
 30642  0001CC  C025  FFFB         	movff	??_SYS_InterruptLow+6,pclatu
 30643  0001D0  C024  FFFA         	movff	??_SYS_InterruptLow+5,pclath
 30644  0001D4  C023  FFE0         	movff	??_SYS_InterruptLow+4,bsr
 30645  0001D8  C022  FFE8         	movff	??_SYS_InterruptLow+3,wreg
 30646  0001DC  C021  FFD8         	movff	??_SYS_InterruptLow+2,status
 30647  0001E0  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30648  0001E2  0010               	retfie	
 30649  0001E4                     __end_of_SYS_InterruptLow:
 30650                           	opt stack 0
 30651                           pclatu	equ	0xFFB
 30652                           pclath	equ	0xFFA
 30653                           tblptru	equ	0xFF8
 30654                           tblptrh	equ	0xFF7
 30655                           tblptrl	equ	0xFF6
 30656                           tablat	equ	0xFF5
 30657                           prodh	equ	0xFF4
 30658                           prodl	equ	0xFF3
 30659                           intcon	equ	0xFF2
 30660                           intcon2	equ	0xFF1
 30661                           intcon3	equ	0xFF0
 30662                           indf0	equ	0xFEF
 30663                           postinc0	equ	0xFEE
 30664                           plusw0	equ	0xFEB
 30665                           fsr0h	equ	0xFEA
 30666                           fsr0l	equ	0xFE9
 30667                           wreg	equ	0xFE8
 30668                           indf1	equ	0xFE7
 30669                           postinc1	equ	0xFE6
 30670                           postdec1	equ	0xFE5
 30671                           plusw1	equ	0xFE3
 30672                           fsr1h	equ	0xFE2
 30673                           fsr1l	equ	0xFE1
 30674                           bsr	equ	0xFE0
 30675                           indf2	equ	0xFDF
 30676                           postinc2	equ	0xFDE
 30677                           postdec2	equ	0xFDD
 30678                           plusw2	equ	0xFDB
 30679                           fsr2h	equ	0xFDA
 30680                           fsr2l	equ	0xFD9
 30681                           status	equ	0xFD8
 30682                           
 30683 ;; *************** function i1___ftadd *****************
 30684 ;; Defined at:
 30685 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;  f1              3    8[COMRAM] float 
 30688 ;;  f2              3   11[COMRAM] float 
 30689 ;; Auto vars:     Size  Location     Type
 30690 ;;  __ftadd         1   19[COMRAM] unsigned char 
 30691 ;;  __ftadd         1   18[COMRAM] unsigned char 
 30692 ;;  __ftadd         1   17[COMRAM] unsigned char 
 30693 ;; Return value:  Size  Location     Type
 30694 ;;                  3    8[COMRAM] float 
 30695 ;; Registers used:
 30696 ;;		wreg, status,2, status,0, cstack
 30697 ;; Tracked objects:
 30698 ;;		On entry : 0/0
 30699 ;;		On exit  : 0/0
 30700 ;;		Unchanged: 0/0
 30701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30702 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30703 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30704 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30705 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30706 ;;Total ram usage:       12 bytes
 30707 ;; Hardware stack levels used:    1
 30708 ;; Hardware stack levels required when called:    7
 30709 ;; This function calls:
 30710 ;;		i1___ftpack
 30711 ;; This function is called by:
 30712 ;;		_SYS_InterruptLow
 30713 ;; This function uses a non-reentrant model
 30714 ;;
 30715                           
 30716                           	psect	text86
 30717  00752E                     __ptext86:
 30718                           	opt stack 0
 30719  00752E                     i1___ftadd:
 30720                           	opt stack 10
 30721                           
 30722                           ;incstack = 0
 30723  00752E  C00B  F00F         	movff	i1___ftadd@f1+2,??i1___ftadd
 30724  007532  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 30725  007534  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 30726  007536  340A               	rlcf	i1___ftadd@f1+1,w,c
 30727  007538  360F               	rlcf	??i1___ftadd& (0+255),f,c
 30728  00753A  E301               	bnc	u1650_21
 30729  00753C  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 30730  00753E                     u1650_21:
 30731  00753E  500F               	movf	??i1___ftadd,w,c
 30732  007540  6E14               	movwf	i1___ftadd@exp1,c
 30733  007542  C00E  F00F         	movff	i1___ftadd@f2+2,??i1___ftadd
 30734  007546  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 30735  007548  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 30736  00754A  340D               	rlcf	i1___ftadd@f2+1,w,c
 30737  00754C  360F               	rlcf	??i1___ftadd& (0+255),f,c
 30738  00754E  E301               	bnc	u1651_21
 30739  007550  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 30740  007552                     u1651_21:
 30741  007552  500F               	movf	??i1___ftadd,w,c
 30742  007554  6E13               	movwf	i1___ftadd@exp2,c
 30743  007556  5014               	movf	i1___ftadd@exp1,w,c
 30744  007558  B4D8               	btfsc	status,2,c
 30745  00755A  D00B               	goto	i1l2498
 30746  00755C  5013               	movf	i1___ftadd@exp2,w,c
 30747  00755E  5C14               	subwf	i1___ftadd@exp1,w,c
 30748  007560  B0D8               	btfsc	status,0,c
 30749  007562  D00E               	goto	i1l15527
 30750  007564  5014               	movf	i1___ftadd@exp1,w,c
 30751  007566  0800               	sublw	0
 30752  007568  2413               	addwf	i1___ftadd@exp2,w,c
 30753  00756A  6E0F               	movwf	??i1___ftadd& (0+255),c
 30754  00756C  0E18               	movlw	24
 30755  00756E  640F               	cpfsgt	??i1___ftadd,c
 30756  007570  D007               	goto	i1l15527
 30757  007572                     i1l2498:
 30758  007572  C00C  F009         	movff	i1___ftadd@f2,?i1___ftadd
 30759  007576  C00D  F00A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 30760  00757A  C00E  F00B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 30761  00757E  0012               	return	
 30762  007580                     i1l15527:
 30763  007580  5013               	movf	i1___ftadd@exp2,w,c
 30764  007582  B4D8               	btfsc	status,2,c
 30765  007584  D00B               	goto	i1l2502
 30766  007586  5014               	movf	i1___ftadd@exp1,w,c
 30767  007588  5C13               	subwf	i1___ftadd@exp2,w,c
 30768  00758A  B0D8               	btfsc	status,0,c
 30769  00758C  D00E               	goto	i1l15533
 30770  00758E  5013               	movf	i1___ftadd@exp2,w,c
 30771  007590  0800               	sublw	0
 30772  007592  2414               	addwf	i1___ftadd@exp1,w,c
 30773  007594  6E0F               	movwf	??i1___ftadd& (0+255),c
 30774  007596  0E18               	movlw	24
 30775  007598  640F               	cpfsgt	??i1___ftadd,c
 30776  00759A  D007               	goto	i1l15533
 30777  00759C                     i1l2502:
 30778  00759C  C009  F009         	movff	i1___ftadd@f1,?i1___ftadd
 30779  0075A0  C00A  F00A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 30780  0075A4  C00B  F00B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 30781  0075A8  0012               	return	
 30782  0075AA                     i1l15533:
 30783  0075AA  0E06               	movlw	6
 30784  0075AC  6E12               	movwf	i1___ftadd@sign,c
 30785  0075AE  BE0B               	btfsc	i1___ftadd@f1+2,7,c
 30786  0075B0  8E12               	bsf	i1___ftadd@sign,7,c
 30787  0075B2  BE0E               	btfsc	i1___ftadd@f2+2,7,c
 30788  0075B4  8C12               	bsf	i1___ftadd@sign,6,c
 30789  0075B6  8E0A               	bsf	i1___ftadd@f1+1,7,c
 30790  0075B8  0EFF               	movlw	255
 30791  0075BA  1609               	andwf	i1___ftadd@f1,f,c
 30792  0075BC  0EFF               	movlw	255
 30793  0075BE  160A               	andwf	i1___ftadd@f1+1,f,c
 30794  0075C0  0E00               	movlw	0
 30795  0075C2  160B               	andwf	i1___ftadd@f1+2,f,c
 30796  0075C4  8E0D               	bsf	i1___ftadd@f2+1,7,c
 30797  0075C6  0EFF               	movlw	255
 30798  0075C8  160C               	andwf	i1___ftadd@f2,f,c
 30799  0075CA  0EFF               	movlw	255
 30800  0075CC  160D               	andwf	i1___ftadd@f2+1,f,c
 30801  0075CE  0E00               	movlw	0
 30802  0075D0  160E               	andwf	i1___ftadd@f2+2,f,c
 30803  0075D2  5013               	movf	i1___ftadd@exp2,w,c
 30804  0075D4  5C14               	subwf	i1___ftadd@exp1,w,c
 30805  0075D6  B0D8               	btfsc	status,0,c
 30806  0075D8  D01B               	goto	i1l15559
 30807  0075DA                     i1l15549:
 30808  0075DA  90D8               	bcf	status,0,c
 30809  0075DC  360C               	rlcf	i1___ftadd@f2,f,c
 30810  0075DE  360D               	rlcf	i1___ftadd@f2+1,f,c
 30811  0075E0  360E               	rlcf	i1___ftadd@f2+2,f,c
 30812  0075E2  0613               	decf	i1___ftadd@exp2,f,c
 30813  0075E4  5014               	movf	i1___ftadd@exp1,w,c
 30814  0075E6  1813               	xorwf	i1___ftadd@exp2,w,c
 30815  0075E8  B4D8               	btfsc	status,2,c
 30816  0075EA  D00D               	goto	i1l15557
 30817  0075EC  0612               	decf	i1___ftadd@sign,f,c
 30818  0075EE  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 30819  0075F2  0E07               	movlw	7
 30820  0075F4  160F               	andwf	??i1___ftadd,f,c
 30821  0075F6  B4D8               	btfsc	status,2,c
 30822  0075F8  D006               	goto	i1l15557
 30823  0075FA  D7EF               	goto	i1l15549
 30824  0075FC                     i1l15555:
 30825  0075FC  90D8               	bcf	status,0,c
 30826  0075FE  320B               	rrcf	i1___ftadd@f1+2,f,c
 30827  007600  320A               	rrcf	i1___ftadd@f1+1,f,c
 30828  007602  3209               	rrcf	i1___ftadd@f1,f,c
 30829  007604  2A14               	incf	i1___ftadd@exp1,f,c
 30830  007606                     i1l15557:
 30831  007606  5013               	movf	i1___ftadd@exp2,w,c
 30832  007608  1814               	xorwf	i1___ftadd@exp1,w,c
 30833  00760A  B4D8               	btfsc	status,2,c
 30834  00760C  D01F               	goto	i1l2513
 30835  00760E  D7F6               	goto	i1l15555
 30836  007610                     i1l15559:
 30837  007610  5014               	movf	i1___ftadd@exp1,w,c
 30838  007612  5C13               	subwf	i1___ftadd@exp2,w,c
 30839  007614  B0D8               	btfsc	status,0,c
 30840  007616  D01A               	goto	i1l2513
 30841  007618                     i1l15561:
 30842  007618  90D8               	bcf	status,0,c
 30843  00761A  3609               	rlcf	i1___ftadd@f1,f,c
 30844  00761C  360A               	rlcf	i1___ftadd@f1+1,f,c
 30845  00761E  360B               	rlcf	i1___ftadd@f1+2,f,c
 30846  007620  0614               	decf	i1___ftadd@exp1,f,c
 30847  007622  5014               	movf	i1___ftadd@exp1,w,c
 30848  007624  1813               	xorwf	i1___ftadd@exp2,w,c
 30849  007626  B4D8               	btfsc	status,2,c
 30850  007628  D00D               	goto	i1l15569
 30851  00762A  0612               	decf	i1___ftadd@sign,f,c
 30852  00762C  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 30853  007630  0E07               	movlw	7
 30854  007632  160F               	andwf	??i1___ftadd,f,c
 30855  007634  B4D8               	btfsc	status,2,c
 30856  007636  D006               	goto	i1l15569
 30857  007638  D7EF               	goto	i1l15561
 30858  00763A                     i1l15567:
 30859  00763A  90D8               	bcf	status,0,c
 30860  00763C  320E               	rrcf	i1___ftadd@f2+2,f,c
 30861  00763E  320D               	rrcf	i1___ftadd@f2+1,f,c
 30862  007640  320C               	rrcf	i1___ftadd@f2,f,c
 30863  007642  2A13               	incf	i1___ftadd@exp2,f,c
 30864  007644                     i1l15569:
 30865  007644  5013               	movf	i1___ftadd@exp2,w,c
 30866  007646  1814               	xorwf	i1___ftadd@exp1,w,c
 30867  007648  A4D8               	btfss	status,2,c
 30868  00764A  D7F7               	goto	i1l15567
 30869  00764C                     i1l2513:
 30870  00764C  AE12               	btfss	i1___ftadd@sign,7,c
 30871  00764E  D00C               	goto	i1l2522
 30872  007650  0EFF               	movlw	255
 30873  007652  1A09               	xorwf	i1___ftadd@f1,f,c
 30874  007654  0EFF               	movlw	255
 30875  007656  1A0A               	xorwf	i1___ftadd@f1+1,f,c
 30876  007658  0EFF               	movlw	255
 30877  00765A  1A0B               	xorwf	i1___ftadd@f1+2,f,c
 30878  00765C  0E01               	movlw	1
 30879  00765E  2609               	addwf	i1___ftadd@f1,f,c
 30880  007660  0E00               	movlw	0
 30881  007662  220A               	addwfc	i1___ftadd@f1+1,f,c
 30882  007664  0E00               	movlw	0
 30883  007666  220B               	addwfc	i1___ftadd@f1+2,f,c
 30884  007668                     i1l2522:
 30885  007668  AC12               	btfss	i1___ftadd@sign,6,c
 30886  00766A  D00C               	goto	i1l15575
 30887  00766C  0EFF               	movlw	255
 30888  00766E  1A0C               	xorwf	i1___ftadd@f2,f,c
 30889  007670  0EFF               	movlw	255
 30890  007672  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 30891  007674  0EFF               	movlw	255
 30892  007676  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 30893  007678  0E01               	movlw	1
 30894  00767A  260C               	addwf	i1___ftadd@f2,f,c
 30895  00767C  0E00               	movlw	0
 30896  00767E  220D               	addwfc	i1___ftadd@f2+1,f,c
 30897  007680  0E00               	movlw	0
 30898  007682  220E               	addwfc	i1___ftadd@f2+2,f,c
 30899  007684                     i1l15575:
 30900  007684  0E00               	movlw	0
 30901  007686  6E12               	movwf	i1___ftadd@sign,c
 30902  007688  5009               	movf	i1___ftadd@f1,w,c
 30903  00768A  260C               	addwf	i1___ftadd@f2,f,c
 30904  00768C  500A               	movf	i1___ftadd@f1+1,w,c
 30905  00768E  220D               	addwfc	i1___ftadd@f2+1,f,c
 30906  007690  500B               	movf	i1___ftadd@f1+2,w,c
 30907  007692  220E               	addwfc	i1___ftadd@f2+2,f,c
 30908  007694  AE0E               	btfss	i1___ftadd@f2+2,7,c
 30909  007696  D00E               	goto	i1l15585
 30910  007698  0EFF               	movlw	255
 30911  00769A  1A0C               	xorwf	i1___ftadd@f2,f,c
 30912  00769C  0EFF               	movlw	255
 30913  00769E  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 30914  0076A0  0EFF               	movlw	255
 30915  0076A2  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 30916  0076A4  0E01               	movlw	1
 30917  0076A6  260C               	addwf	i1___ftadd@f2,f,c
 30918  0076A8  0E00               	movlw	0
 30919  0076AA  220D               	addwfc	i1___ftadd@f2+1,f,c
 30920  0076AC  0E00               	movlw	0
 30921  0076AE  220E               	addwfc	i1___ftadd@f2+2,f,c
 30922  0076B0  0E01               	movlw	1
 30923  0076B2  6E12               	movwf	i1___ftadd@sign,c
 30924  0076B4                     i1l15585:
 30925  0076B4  C00C  F001         	movff	i1___ftadd@f2,i1___ftpack@arg
 30926  0076B8  C00D  F002         	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 30927  0076BC  C00E  F003         	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 30928  0076C0  C014  F004         	movff	i1___ftadd@exp1,i1___ftpack@exp
 30929  0076C4  C012  F005         	movff	i1___ftadd@sign,i1___ftpack@sign
 30930  0076C8  ECE2  F053         	call	i1___ftpack	;wreg free
 30931  0076CC  C001  F009         	movff	?i1___ftpack,?i1___ftadd
 30932  0076D0  C002  F00A         	movff	?i1___ftpack+1,?i1___ftadd+1
 30933  0076D4  C003  F00B         	movff	?i1___ftpack+2,?i1___ftadd+2
 30934  0076D8  0012               	return	
 30935  0076DA                     __end_ofi1___ftadd:
 30936                           	opt stack 0
 30937                           pclatu	equ	0xFFB
 30938                           pclath	equ	0xFFA
 30939                           tblptru	equ	0xFF8
 30940                           tblptrh	equ	0xFF7
 30941                           tblptrl	equ	0xFF6
 30942                           tablat	equ	0xFF5
 30943                           prodh	equ	0xFF4
 30944                           prodl	equ	0xFF3
 30945                           intcon	equ	0xFF2
 30946                           intcon2	equ	0xFF1
 30947                           intcon3	equ	0xFF0
 30948                           indf0	equ	0xFEF
 30949                           postinc0	equ	0xFEE
 30950                           plusw0	equ	0xFEB
 30951                           fsr0h	equ	0xFEA
 30952                           fsr0l	equ	0xFE9
 30953                           wreg	equ	0xFE8
 30954                           indf1	equ	0xFE7
 30955                           postinc1	equ	0xFE6
 30956                           postdec1	equ	0xFE5
 30957                           plusw1	equ	0xFE3
 30958                           fsr1h	equ	0xFE2
 30959                           fsr1l	equ	0xFE1
 30960                           bsr	equ	0xFE0
 30961                           indf2	equ	0xFDF
 30962                           postinc2	equ	0xFDE
 30963                           postdec2	equ	0xFDD
 30964                           plusw2	equ	0xFDB
 30965                           fsr2h	equ	0xFDA
 30966                           fsr2l	equ	0xFD9
 30967                           status	equ	0xFD8
 30968                           
 30969 ;; *************** function i1___ftpack *****************
 30970 ;; Defined at:
 30971 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 30972 ;; Parameters:    Size  Location     Type
 30973 ;;  arg             3    0[COMRAM] unsigned um
 30974 ;;  exp             1    3[COMRAM] unsigned char 
 30975 ;;  sign            1    4[COMRAM] unsigned char 
 30976 ;; Auto vars:     Size  Location     Type
 30977 ;;		None
 30978 ;; Return value:  Size  Location     Type
 30979 ;;                  3    0[COMRAM] float 
 30980 ;; Registers used:
 30981 ;;		wreg, status,2, status,0
 30982 ;; Tracked objects:
 30983 ;;		On entry : 0/0
 30984 ;;		On exit  : 0/0
 30985 ;;		Unchanged: 0/0
 30986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30987 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30989 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30990 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30991 ;;Total ram usage:        8 bytes
 30992 ;; Hardware stack levels used:    1
 30993 ;; Hardware stack levels required when called:    6
 30994 ;; This function calls:
 30995 ;;		Nothing
 30996 ;; This function is called by:
 30997 ;;		i1___ftadd
 30998 ;; This function uses a non-reentrant model
 30999 ;;
 31000                           
 31001                           	psect	text87
 31002  00A7C4                     __ptext87:
 31003                           	opt stack 0
 31004  00A7C4                     i1___ftpack:
 31005                           	opt stack 10
 31006                           
 31007                           ;incstack = 0
 31008  00A7C4  5004               	movf	i1___ftpack@exp,w,c
 31009  00A7C6  B4D8               	btfsc	status,2,c
 31010  00A7C8  D005               	goto	i1l13695
 31011  00A7CA  5001               	movf	i1___ftpack@arg,w,c
 31012  00A7CC  1002               	iorwf	i1___ftpack@arg+1,w,c
 31013  00A7CE  1003               	iorwf	i1___ftpack@arg+2,w,c
 31014  00A7D0  A4D8               	btfss	status,2,c
 31015  00A7D2  D00C               	goto	i1l13701
 31016  00A7D4                     i1l13695:
 31017  00A7D4  0E00               	movlw	0
 31018  00A7D6  6E01               	movwf	?i1___ftpack,c
 31019  00A7D8  0E00               	movlw	0
 31020  00A7DA  6E02               	movwf	?i1___ftpack+1,c
 31021  00A7DC  0E00               	movlw	0
 31022  00A7DE  6E03               	movwf	?i1___ftpack+2,c
 31023  00A7E0  0012               	return	
 31024  00A7E2                     i1l13699:
 31025  00A7E2  2A04               	incf	i1___ftpack@exp,f,c
 31026  00A7E4  90D8               	bcf	status,0,c
 31027  00A7E6  3203               	rrcf	i1___ftpack@arg+2,f,c
 31028  00A7E8  3202               	rrcf	i1___ftpack@arg+1,f,c
 31029  00A7EA  3201               	rrcf	i1___ftpack@arg,f,c
 31030  00A7EC                     i1l13701:
 31031  00A7EC  0E00               	movlw	0
 31032  00A7EE  1401               	andwf	i1___ftpack@arg,w,c
 31033  00A7F0  6E06               	movwf	??i1___ftpack& (0+255),c
 31034  00A7F2  0E00               	movlw	0
 31035  00A7F4  1402               	andwf	i1___ftpack@arg+1,w,c
 31036  00A7F6  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 31037  00A7F8  0EFE               	movlw	254
 31038  00A7FA  1403               	andwf	i1___ftpack@arg+2,w,c
 31039  00A7FC  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 31040  00A7FE  5006               	movf	??i1___ftpack,w,c
 31041  00A800  1007               	iorwf	??i1___ftpack+1,w,c
 31042  00A802  1008               	iorwf	??i1___ftpack+2,w,c
 31043  00A804  B4D8               	btfsc	status,2,c
 31044  00A806  D00C               	goto	i1l13707
 31045  00A808  D7EC               	goto	i1l13699
 31046  00A80A                     i1l13703:
 31047  00A80A  2A04               	incf	i1___ftpack@exp,f,c
 31048  00A80C  0E01               	movlw	1
 31049  00A80E  2601               	addwf	i1___ftpack@arg,f,c
 31050  00A810  0E00               	movlw	0
 31051  00A812  2202               	addwfc	i1___ftpack@arg+1,f,c
 31052  00A814  0E00               	movlw	0
 31053  00A816  2203               	addwfc	i1___ftpack@arg+2,f,c
 31054  00A818  90D8               	bcf	status,0,c
 31055  00A81A  3203               	rrcf	i1___ftpack@arg+2,f,c
 31056  00A81C  3202               	rrcf	i1___ftpack@arg+1,f,c
 31057  00A81E  3201               	rrcf	i1___ftpack@arg,f,c
 31058  00A820                     i1l13707:
 31059  00A820  0E00               	movlw	0
 31060  00A822  1401               	andwf	i1___ftpack@arg,w,c
 31061  00A824  6E06               	movwf	??i1___ftpack& (0+255),c
 31062  00A826  0E00               	movlw	0
 31063  00A828  1402               	andwf	i1___ftpack@arg+1,w,c
 31064  00A82A  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 31065  00A82C  0EFF               	movlw	255
 31066  00A82E  1403               	andwf	i1___ftpack@arg+2,w,c
 31067  00A830  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 31068  00A832  5006               	movf	??i1___ftpack,w,c
 31069  00A834  1007               	iorwf	??i1___ftpack+1,w,c
 31070  00A836  1008               	iorwf	??i1___ftpack+2,w,c
 31071  00A838  B4D8               	btfsc	status,2,c
 31072  00A83A  D006               	goto	i1l13711
 31073  00A83C  D7E6               	goto	i1l13703
 31074  00A83E                     i1l13709:
 31075  00A83E  0604               	decf	i1___ftpack@exp,f,c
 31076  00A840  90D8               	bcf	status,0,c
 31077  00A842  3601               	rlcf	i1___ftpack@arg,f,c
 31078  00A844  3602               	rlcf	i1___ftpack@arg+1,f,c
 31079  00A846  3603               	rlcf	i1___ftpack@arg+2,f,c
 31080  00A848                     i1l13711:
 31081  00A848  BE02               	btfsc	i1___ftpack@arg+1,7,c
 31082  00A84A  D003               	goto	i1l2450
 31083  00A84C  0E02               	movlw	2
 31084  00A84E  6004               	cpfslt	i1___ftpack@exp,c
 31085  00A850  D7F6               	goto	i1l13709
 31086  00A852                     i1l2450:
 31087  00A852  A004               	btfss	i1___ftpack@exp,0,c
 31088  00A854  9E02               	bcf	i1___ftpack@arg+1,7,c
 31089  00A856  90D8               	bcf	status,0,c
 31090  00A858  3204               	rrcf	i1___ftpack@exp,f,c
 31091  00A85A  5004               	movf	i1___ftpack@exp,w,c
 31092  00A85C  1203               	iorwf	i1___ftpack@arg+2,f,c
 31093  00A85E  5005               	movf	i1___ftpack@sign,w,c
 31094  00A860  A4D8               	btfss	status,2,c
 31095  00A862  8E03               	bsf	i1___ftpack@arg+2,7,c
 31096  00A864  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 31097  00A868  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 31098  00A86C  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 31099  00A870  0012               	return	
 31100  00A872                     __end_ofi1___ftpack:
 31101                           	opt stack 0
 31102                           pclatu	equ	0xFFB
 31103                           pclath	equ	0xFFA
 31104                           tblptru	equ	0xFF8
 31105                           tblptrh	equ	0xFF7
 31106                           tblptrl	equ	0xFF6
 31107                           tablat	equ	0xFF5
 31108                           prodh	equ	0xFF4
 31109                           prodl	equ	0xFF3
 31110                           intcon	equ	0xFF2
 31111                           intcon2	equ	0xFF1
 31112                           intcon3	equ	0xFF0
 31113                           indf0	equ	0xFEF
 31114                           postinc0	equ	0xFEE
 31115                           plusw0	equ	0xFEB
 31116                           fsr0h	equ	0xFEA
 31117                           fsr0l	equ	0xFE9
 31118                           wreg	equ	0xFE8
 31119                           indf1	equ	0xFE7
 31120                           postinc1	equ	0xFE6
 31121                           postdec1	equ	0xFE5
 31122                           plusw1	equ	0xFE3
 31123                           fsr1h	equ	0xFE2
 31124                           fsr1l	equ	0xFE1
 31125                           bsr	equ	0xFE0
 31126                           indf2	equ	0xFDF
 31127                           postinc2	equ	0xFDE
 31128                           postdec2	equ	0xFDD
 31129                           plusw2	equ	0xFDB
 31130                           fsr2h	equ	0xFDA
 31131                           fsr2l	equ	0xFD9
 31132                           status	equ	0xFD8
 31133                           
 31134 ;; *************** function _USBDeviceTasks *****************
 31135 ;; Defined at:
 31136 ;;		line 489 in file "src/usb/usb_device.c"
 31137 ;; Parameters:    Size  Location     Type
 31138 ;;		None
 31139 ;; Auto vars:     Size  Location     Type
 31140 ;;  i               1   29[COMRAM] unsigned char 
 31141 ;; Return value:  Size  Location     Type
 31142 ;;		None               void
 31143 ;; Registers used:
 31144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31145 ;; Tracked objects:
 31146 ;;		On entry : 0/0
 31147 ;;		On exit  : 0/0
 31148 ;;		Unchanged: 0/0
 31149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31154 ;;Total ram usage:        1 bytes
 31155 ;; Hardware stack levels used:    1
 31156 ;; Hardware stack levels required when called:   14
 31157 ;; This function calls:
 31158 ;;		_USBCtrlEPAllowStatusStage
 31159 ;;		_USBCtrlEPService
 31160 ;;		_USBStallHandler
 31161 ;;		_USBSuspend
 31162 ;;		_USBWakeFromSuspend
 31163 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31164 ;;		i1_USBDeviceInit
 31165 ;; This function is called by:
 31166 ;;		_SYS_InterruptLow
 31167 ;; This function uses a non-reentrant model
 31168 ;;
 31169                           
 31170                           	psect	text88
 31171  008118                     __ptext88:
 31172                           	opt stack 0
 31173  008118                     _USBDeviceTasks:
 31174                           	opt stack 3
 31175                           
 31176                           ;usb_device.c: 491: uint8_t i;
 31177                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 31178                           
 31179                           ;incstack = 0
 31180  008118  044B               	decf	_USBDeviceState,w,c	;volatile
 31181  00811A  B4D8               	btfsc	status,2,c
 31182                           
 31183                           ;usb_device.c: 603: {
 31184                           ;usb_device.c: 613: if(!UCONbits.SE0)
 31185  00811C  BA65               	btfsc	3941,5,c	;volatile
 31186  00811E  D008               	goto	i1l14731
 31187                           
 31188                           ;usb_device.c: 614: {
 31189                           ;usb_device.c: 615: {UIR = 0;};
 31190  008120  0E00               	movlw	0
 31191  008122  6E62               	movwf	3938,c	;volatile
 31192                           
 31193                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 31194  008124  010F               	movlb	15	; () banked
 31195  008126  8136               	bsf	54,0,b	;volatile
 31196                           
 31197                           ; BSR set to: 15
 31198                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 31199  008128  010F               	movlb	15	; () banked
 31200  00812A  8936               	bsf	54,4,b	;volatile
 31201                           
 31202                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 31203  00812C  0E02               	movlw	2
 31204  00812E  6E4B               	movwf	_USBDeviceState,c	;volatile
 31205  008130                     i1l14731:
 31206                           
 31207                           ;usb_device.c: 622: }
 31208                           ;usb_device.c: 623: }
 31209                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 31210  008130  A462               	btfss	3938,2,c	;volatile
 31211  008132  D006               	goto	i1l14739
 31212  008134  010F               	movlb	15	; () banked
 31213  008136  A536               	btfss	54,2,b	;volatile
 31214  008138  D003               	goto	i1l14739
 31215                           
 31216                           ; BSR set to: 15
 31217                           ;usb_device.c: 640: {
 31218                           ;usb_device.c: 641: (UIR &= 0xFB);
 31219  00813A  9462               	bcf	3938,2,c	;volatile
 31220                           
 31221                           ; BSR set to: 15
 31222                           ;usb_device.c: 645: USBWakeFromSuspend();
 31223  00813C  ECED  F05C         	call	_USBWakeFromSuspend	;wreg free
 31224  008140                     i1l14739:
 31225                           
 31226                           ;usb_device.c: 647: }
 31227                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 31228  008140  A265               	btfss	3941,1,c	;volatile
 31229  008142  D002               	goto	i1l1234
 31230                           
 31231                           ;usb_device.c: 653: {
 31232                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 31233  008144  98A1               	bcf	4001,4,c	;volatile
 31234                           
 31235                           ;usb_device.c: 655: return;
 31236  008146  0012               	return	
 31237  008148                     i1l1234:
 31238                           
 31239                           ;usb_device.c: 656: }
 31240                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 31241  008148  A062               	btfss	3938,0,c	;volatile
 31242  00814A  D009               	goto	i1l14753
 31243  00814C  010F               	movlb	15	; () banked
 31244  00814E  A136               	btfss	54,0,b	;volatile
 31245  008150  D006               	goto	i1l14753
 31246                           
 31247                           ; BSR set to: 15
 31248                           ;usb_device.c: 669: {
 31249                           ;usb_device.c: 670: USBDeviceInit();
 31250  008152  EC73  F042         	call	i1_USBDeviceInit	;wreg free
 31251                           
 31252                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 31253  008156  88A0               	bsf	4000,4,c	;volatile
 31254                           
 31255                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 31256  008158  0E04               	movlw	4
 31257  00815A  6E4B               	movwf	_USBDeviceState,c	;volatile
 31258                           
 31259                           ;usb_device.c: 686: (UIR &= 0xFE);
 31260  00815C  9062               	bcf	3938,0,c	;volatile
 31261  00815E                     i1l14753:
 31262                           
 31263                           ;usb_device.c: 687: }
 31264                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 31265  00815E  A862               	btfss	3938,4,c	;volatile
 31266  008160  D006               	goto	i1l14761
 31267  008162  010F               	movlb	15	; () banked
 31268  008164  A936               	btfss	54,4,b	;volatile
 31269  008166  D003               	goto	i1l14761
 31270                           
 31271                           ; BSR set to: 15
 31272                           ;usb_device.c: 693: {
 31273                           ;usb_device.c: 698: USBSuspend();
 31274  008168  EC46  F05D         	call	_USBSuspend	;wreg free
 31275                           
 31276                           ;usb_device.c: 701: (UIR &= 0xEF);
 31277  00816C  9862               	bcf	3938,4,c	;volatile
 31278  00816E                     i1l14761:
 31279                           
 31280                           ;usb_device.c: 702: }
 31281                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 31282  00816E  AC62               	btfss	3938,6,c	;volatile
 31283  008170  D019               	goto	i1l14777
 31284                           
 31285                           ;usb_device.c: 705: {
 31286                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 31287  008172  010F               	movlb	15	; () banked
 31288  008174  AD36               	btfss	54,6,b	;volatile
 31289  008176  D00E               	goto	i1l14767
 31290                           
 31291                           ; BSR set to: 15
 31292                           ;usb_device.c: 707: {
 31293                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 31294  008178  0E00               	movlw	0
 31295  00817A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31296  00817C  0E73               	movlw	115
 31297  00817E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31298  008180  0E00               	movlw	0
 31299  008182  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31300  008184  0E00               	movlw	0
 31301  008186  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31302  008188  0E00               	movlw	0
 31303  00818A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31304  00818C  0E01               	movlw	1
 31305  00818E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31306  008190  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31307  008194                     i1l14767:
 31308                           
 31309                           ;usb_device.c: 709: }
 31310                           ;usb_device.c: 710: (UIR &= 0xBF);
 31311  008194  9C62               	bcf	3938,6,c	;volatile
 31312                           
 31313                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 31314  008196  504E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 31315  008198  A4D8               	btfss	status,2,c
 31316                           
 31317                           ;usb_device.c: 736: {
 31318                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 31319  00819A  064E               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 31320                           
 31321                           ;usb_device.c: 738: }
 31322                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 31323  00819C  504E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 31324  00819E  B4D8               	btfsc	status,2,c
 31325                           
 31326                           ;usb_device.c: 745: {
 31327                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 31328  0081A0  ECDD  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 31329  0081A4                     i1l14777:
 31330                           
 31331                           ;usb_device.c: 747: }
 31332                           ;usb_device.c: 749: }
 31333                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 31334  0081A4  AA62               	btfss	3938,5,c	;volatile
 31335  0081A6  D004               	goto	i1l14783
 31336  0081A8  010F               	movlb	15	; () banked
 31337  0081AA  BB36               	btfsc	54,5,b	;volatile
 31338                           
 31339                           ; BSR set to: 15
 31340                           ;usb_device.c: 752: {
 31341                           ;usb_device.c: 753: USBStallHandler();
 31342  0081AC  EC29  F05B         	call	_USBStallHandler	;wreg free
 31343  0081B0                     i1l14783:
 31344                           
 31345                           ;usb_device.c: 754: }
 31346                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 31347  0081B0  A262               	btfss	3938,1,c	;volatile
 31348  0081B2  D012               	goto	i1l14791
 31349  0081B4  010F               	movlb	15	; () banked
 31350  0081B6  A336               	btfss	54,1,b	;volatile
 31351  0081B8  D00F               	goto	i1l14791
 31352                           
 31353                           ; BSR set to: 15
 31354                           ;usb_device.c: 757: {
 31355                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 31356  0081BA  0E7F               	movlw	127
 31357  0081BC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31358  0081BE  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31359  0081C0  0E00               	movlw	0
 31360  0081C2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31361  0081C4  0E00               	movlw	0
 31362  0081C6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31363  0081C8  0E00               	movlw	0
 31364  0081CA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31365  0081CC  0E01               	movlw	1
 31366  0081CE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31367  0081D0  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31368                           
 31369                           ;usb_device.c: 759: {UEIR = 0;};
 31370  0081D4  0E00               	movlw	0
 31371  0081D6  6E63               	movwf	3939,c	;volatile
 31372  0081D8                     i1l14791:
 31373                           
 31374                           ;usb_device.c: 767: }
 31375                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 31376  0081D8  0E04               	movlw	4
 31377  0081DA  604B               	cpfslt	_USBDeviceState,c	;volatile
 31378  0081DC  D002               	goto	i1l1244
 31379                           
 31380                           ;usb_device.c: 775: {
 31381                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 31382  0081DE  98A1               	bcf	4001,4,c	;volatile
 31383                           
 31384                           ;usb_device.c: 777: return;
 31385  0081E0  0012               	return	
 31386  0081E2                     i1l1244:
 31387                           
 31388                           ;usb_device.c: 778: }
 31389                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 31390  0081E2  010F               	movlb	15	; () banked
 31391  0081E4  A736               	btfss	54,3,b	;volatile
 31392  0081E6  D039               	goto	i1l1245
 31393                           
 31394                           ; BSR set to: 15
 31395                           ;usb_device.c: 784: {
 31396                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 31397  0081E8  0E00               	movlw	0
 31398  0081EA  6E1E               	movwf	USBDeviceTasks@i,c
 31399  0081EC                     i1l14797:
 31400                           
 31401                           ; BSR set to: 15
 31402  0081EC  0E03               	movlw	3
 31403  0081EE  641E               	cpfsgt	USBDeviceTasks@i,c
 31404  0081F0  D001               	goto	i1l1246
 31405  0081F2  D033               	goto	i1l1245
 31406  0081F4                     i1l1246:
 31407                           
 31408                           ;usb_device.c: 786: {
 31409                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 31410  0081F4  A662               	btfss	3938,3,c	;volatile
 31411  0081F6  D031               	goto	i1l1245
 31412                           
 31413                           ;usb_device.c: 788: {
 31414                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 31415  0081F8  CF64 F058          	movff	3940,_USTATcopy	;volatile
 31416                           
 31417                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 31418  0081FC  3058               	rrcf	_USTATcopy,w,c	;volatile
 31419  0081FE  32E8               	rrcf	wreg,f,c
 31420  008200  32E8               	rrcf	wreg,f,c
 31421  008202  0B0F               	andlw	15
 31422  008204  6E50               	movwf	_endpoint_number,c	;volatile
 31423                           
 31424                           ;usb_device.c: 793: (UIR &= 0xF7);
 31425  008206  9662               	bcf	3938,3,c	;volatile
 31426                           
 31427                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 31428  008208  B458               	btfsc	_USTATcopy,2,c	;volatile
 31429  00820A  D007               	goto	i1l14811
 31430                           
 31431                           ;usb_device.c: 799: {
 31432                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 31433  00820C  5050               	movf	_endpoint_number,w,c	;volatile
 31434  00820E  0D01               	mullw	1
 31435  008210  0E97               	movlw	low _ep_data_out
 31436  008212  24F3               	addwf	prodl,w,c
 31437  008214  6ED9               	movwf	fsr2l,c
 31438  008216  0E00               	movlw	high _ep_data_out
 31439  008218  D006               	goto	L15
 31440  00821A                     i1l14811:
 31441                           
 31442                           ;usb_device.c: 802: else
 31443                           ;usb_device.c: 803: {
 31444                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 31445  00821A  5050               	movf	_endpoint_number,w,c	;volatile
 31446  00821C  0D01               	mullw	1
 31447  00821E  0E95               	movlw	low _ep_data_in
 31448  008220  24F3               	addwf	prodl,w,c
 31449  008222  6ED9               	movwf	fsr2l,c
 31450  008224  0E00               	movlw	high _ep_data_in
 31451  008226                     L15:
 31452  008226  20F4               	addwfc	prodh,w,c
 31453  008228  6EDA               	movwf	fsr2h,c
 31454  00822A  0100               	movlb	0	; () banked
 31455  00822C  70DF               	btg	indf2,0,c
 31456                           
 31457                           ; BSR set to: 0
 31458                           ;usb_device.c: 805: }
 31459                           ;usb_device.c: 810: if(endpoint_number == 0)
 31460                           
 31461                           ; BSR set to: 0
 31462  00822E  5050               	movf	_endpoint_number,w,c	;volatile
 31463  008230  A4D8               	btfss	status,2,c
 31464  008232  D003               	goto	i1l14817
 31465                           
 31466                           ; BSR set to: 0
 31467                           ;usb_device.c: 811: {
 31468                           ;usb_device.c: 812: USBCtrlEPService();
 31469  008234  ECE9  F04D         	call	_USBCtrlEPService	;wreg free
 31470                           
 31471                           ;usb_device.c: 813: }
 31472  008238  D00E               	goto	i1l14819
 31473  00823A                     i1l14817:
 31474                           
 31475                           ;usb_device.c: 814: else
 31476                           ;usb_device.c: 815: {
 31477                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 31478  00823A  0E00               	movlw	0
 31479  00823C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31480  00823E  0E72               	movlw	114
 31481  008240  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31482  008242  0E58               	movlw	low _USTATcopy
 31483  008244  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31484  008246  0E00               	movlw	high _USTATcopy
 31485  008248  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31486  00824A  0E00               	movlw	0
 31487  00824C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31488  00824E  0E00               	movlw	0
 31489  008250  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31490  008252  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31491  008256                     i1l14819:
 31492  008256  2A1E               	incf	USBDeviceTasks@i,f,c
 31493  008258  D7C9               	goto	i1l14797
 31494  00825A                     i1l1245:
 31495                           
 31496                           ;usb_device.c: 822: }
 31497                           ;usb_device.c: 823: }
 31498                           ;usb_device.c: 824: }
 31499                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 31500  00825A  98A1               	bcf	4001,4,c	;volatile
 31501  00825C  0012               	return		;funcret
 31502  00825E                     __end_of_USBDeviceTasks:
 31503                           	opt stack 0
 31504                           pclatu	equ	0xFFB
 31505                           pclath	equ	0xFFA
 31506                           tblptru	equ	0xFF8
 31507                           tblptrh	equ	0xFF7
 31508                           tblptrl	equ	0xFF6
 31509                           tablat	equ	0xFF5
 31510                           prodh	equ	0xFF4
 31511                           prodl	equ	0xFF3
 31512                           intcon	equ	0xFF2
 31513                           intcon2	equ	0xFF1
 31514                           intcon3	equ	0xFF0
 31515                           indf0	equ	0xFEF
 31516                           postinc0	equ	0xFEE
 31517                           plusw0	equ	0xFEB
 31518                           fsr0h	equ	0xFEA
 31519                           fsr0l	equ	0xFE9
 31520                           wreg	equ	0xFE8
 31521                           indf1	equ	0xFE7
 31522                           postinc1	equ	0xFE6
 31523                           postdec1	equ	0xFE5
 31524                           plusw1	equ	0xFE3
 31525                           fsr1h	equ	0xFE2
 31526                           fsr1l	equ	0xFE1
 31527                           bsr	equ	0xFE0
 31528                           indf2	equ	0xFDF
 31529                           postinc2	equ	0xFDE
 31530                           postdec2	equ	0xFDD
 31531                           plusw2	equ	0xFDB
 31532                           fsr2h	equ	0xFDA
 31533                           fsr2l	equ	0xFD9
 31534                           status	equ	0xFD8
 31535                           
 31536 ;; *************** function i1_USBDeviceInit *****************
 31537 ;; Defined at:
 31538 ;;		line 298 in file "src/usb/usb_device.c"
 31539 ;; Parameters:    Size  Location     Type
 31540 ;;		None
 31541 ;; Auto vars:     Size  Location     Type
 31542 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 31543 ;; Return value:  Size  Location     Type
 31544 ;;		None               void
 31545 ;; Registers used:
 31546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31547 ;; Tracked objects:
 31548 ;;		On entry : 0/0
 31549 ;;		On exit  : 0/0
 31550 ;;		Unchanged: 0/0
 31551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31556 ;;Total ram usage:        1 bytes
 31557 ;; Hardware stack levels used:    1
 31558 ;; Hardware stack levels required when called:    7
 31559 ;; This function calls:
 31560 ;;		i1_memset
 31561 ;; This function is called by:
 31562 ;;		_USBDeviceTasks
 31563 ;; This function uses a non-reentrant model
 31564 ;;
 31565                           
 31566                           	psect	text89
 31567  0084E6                     __ptext89:
 31568                           	opt stack 0
 31569  0084E6                     i1_USBDeviceInit:
 31570                           	opt stack 9
 31571                           
 31572                           ;usb_device.c: 300: uint8_t i;
 31573                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 31574                           
 31575                           ;incstack = 0
 31576  0084E6  98A0               	bcf	4000,4,c	;volatile
 31577                           
 31578                           ;usb_device.c: 305: {UEIR = 0;};
 31579  0084E8  0E00               	movlw	0
 31580  0084EA  6E63               	movwf	3939,c	;volatile
 31581                           
 31582                           ;usb_device.c: 308: {UIR = 0;};
 31583  0084EC  0E00               	movlw	0
 31584  0084EE  6E62               	movwf	3938,c	;volatile
 31585                           
 31586                           ;usb_device.c: 311: UEP0 = 0;
 31587  0084F0  0E00               	movlw	0
 31588  0084F2  010F               	movlb	15	; () banked
 31589  0084F4  6F26               	movwf	38,b	;volatile
 31590                           
 31591                           ; BSR set to: 15
 31592                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 31593  0084F6  0E27               	movlw	39
 31594  0084F8  6E01               	movwf	i1memset@p1,c
 31595  0084FA  0E0F               	movlw	15
 31596  0084FC  6E02               	movwf	i1memset@p1+1,c
 31597  0084FE  0E00               	movlw	0
 31598  008500  6E04               	movwf	i1memset@c+1,c
 31599  008502  0E00               	movlw	0
 31600  008504  6E03               	movwf	i1memset@c,c
 31601  008506  0E00               	movlw	0
 31602  008508  6E06               	movwf	i1memset@n+1,c
 31603  00850A  0E01               	movlw	1
 31604  00850C  6E05               	movwf	i1memset@n,c
 31605  00850E  EC1B  F05D         	call	i1_memset	;wreg free
 31606                           
 31607                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 31608  008512  0E16               	movlw	22
 31609  008514  010F               	movlb	15	; () banked
 31610  008516  6F39               	movwf	57,b	;volatile
 31611                           
 31612                           ; BSR set to: 15
 31613  008518  0E9F               	movlw	159
 31614  00851A  010F               	movlb	15	; () banked
 31615  00851C  6F37               	movwf	55,b	;volatile
 31616                           
 31617                           ; BSR set to: 15
 31618  00851E  0E7B               	movlw	123
 31619  008520  010F               	movlb	15	; () banked
 31620  008522  6F36               	movwf	54,b	;volatile
 31621                           
 31622                           ; BSR set to: 15
 31623                           ;usb_device.c: 318: ;
 31624                           ;usb_device.c: 321: ;
 31625                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 31626  008524  0E00               	movlw	0
 31627  008526  6E09               	movwf	i1USBDeviceInit@i,c
 31628  008528                     i1l13615:
 31629                           
 31630                           ; BSR set to: 15
 31631  008528  0E07               	movlw	7
 31632  00852A  6409               	cpfsgt	i1USBDeviceInit@i,c
 31633  00852C  D001               	goto	i1l13619
 31634  00852E  D00E               	goto	i1l1222
 31635  008530                     i1l13619:
 31636                           
 31637                           ;usb_device.c: 325: {
 31638                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 31639  008530  5009               	movf	i1USBDeviceInit@i,w,c
 31640  008532  0D04               	mullw	4
 31641  008534  0E00               	movlw	0
 31642  008536  24F3               	addwf	prodl,w,c
 31643  008538  6ED9               	movwf	fsr2l,c
 31644  00853A  0E0D               	movlw	13
 31645  00853C  20F4               	addwfc	prodh,w,c
 31646  00853E  6EDA               	movwf	fsr2h,c
 31647  008540  6ADE               	clrf	postinc2,c
 31648  008542  6ADE               	clrf	postinc2,c
 31649  008544  6ADE               	clrf	postinc2,c
 31650  008546  6ADD               	clrf	postdec2,c
 31651  008548  2A09               	incf	i1USBDeviceInit@i,f,c
 31652  00854A  D7EE               	goto	i1l13615
 31653  00854C                     i1l1222:
 31654                           
 31655                           ;usb_device.c: 327: }
 31656                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 31657  00854C  8C65               	bsf	3941,6,c	;volatile
 31658                           
 31659                           ;usb_device.c: 333: UADDR = 0x00;
 31660  00854E  0E00               	movlw	0
 31661  008550  010F               	movlb	15	; () banked
 31662  008552  6F38               	movwf	56,b	;volatile
 31663                           
 31664                           ; BSR set to: 15
 31665                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 31666  008554  9865               	bcf	3941,4,c	;volatile
 31667                           
 31668                           ; BSR set to: 15
 31669                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 31670  008556  9C65               	bcf	3941,6,c	;volatile
 31671                           
 31672                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 31673  008558  D00C               	goto	i1l13639
 31674  00855A                     i1l13631:
 31675                           
 31676                           ;usb_device.c: 343: {
 31677                           ;usb_device.c: 344: (UIR &= 0xF7);
 31678  00855A  9662               	bcf	3938,3,c	;volatile
 31679                           
 31680                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 31681  00855C  0E00               	movlw	0
 31682  00855E  0100               	movlb	0	; () banked
 31683  008560  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31684                           
 31685                           ; BSR set to: 0
 31686                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 31687  008562  0E00               	movlw	0
 31688  008564  0100               	movlb	0	; () banked
 31689  008566  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31690                           
 31691                           ; BSR set to: 0
 31692                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 31693  008568  0E00               	movlw	0
 31694  00856A  0100               	movlb	0	; () banked
 31695  00856C  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31696  00856E  0E00               	movlw	0
 31697  008570  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31698  008572                     i1l13639:
 31699  008572  B662               	btfsc	3938,3,c	;volatile
 31700  008574  D7F2               	goto	i1l13631
 31701                           
 31702                           ;usb_device.c: 349: }
 31703                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 31704  008576  0E01               	movlw	1
 31705  008578  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 31706                           
 31707                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 31708  00857A  0E01               	movlw	1
 31709  00857C  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 31710                           
 31711                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 31712  00857E  0E00               	movlw	0
 31713  008580  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 31714                           
 31715                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 31716  008582  0E00               	movlw	0
 31717  008584  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 31718                           
 31719                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 31720  008586  0E00               	movlw	0
 31721  008588  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31722                           
 31723                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 31724  00858A  0E00               	movlw	0
 31725  00858C  6E09               	movwf	i1USBDeviceInit@i,c
 31726  00858E                     i1l13643:
 31727  00858E  0E01               	movlw	1
 31728  008590  6409               	cpfsgt	i1USBDeviceInit@i,c
 31729  008592  D001               	goto	i1l13647
 31730  008594  D02E               	goto	i1l13653
 31731  008596                     i1l13647:
 31732                           
 31733                           ;usb_device.c: 363: {
 31734                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 31735  008596  5009               	movf	i1USBDeviceInit@i,w,c
 31736  008598  0D02               	mullw	2
 31737  00859A  0E8B               	movlw	low _pBDTEntryIn
 31738  00859C  24F3               	addwf	prodl,w,c
 31739  00859E  6ED9               	movwf	fsr2l,c
 31740  0085A0  0E00               	movlw	high _pBDTEntryIn
 31741  0085A2  20F4               	addwfc	prodh,w,c
 31742  0085A4  6EDA               	movwf	fsr2h,c
 31743  0085A6  0E00               	movlw	0
 31744  0085A8  6EDE               	movwf	postinc2,c
 31745  0085AA  0E00               	movlw	0
 31746  0085AC  6EDD               	movwf	postdec2,c
 31747                           
 31748                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 31749  0085AE  5009               	movf	i1USBDeviceInit@i,w,c
 31750  0085B0  0D02               	mullw	2
 31751  0085B2  0E8F               	movlw	low _pBDTEntryOut
 31752  0085B4  24F3               	addwf	prodl,w,c
 31753  0085B6  6ED9               	movwf	fsr2l,c
 31754  0085B8  0E00               	movlw	high _pBDTEntryOut
 31755  0085BA  20F4               	addwfc	prodh,w,c
 31756  0085BC  6EDA               	movwf	fsr2h,c
 31757  0085BE  0E00               	movlw	0
 31758  0085C0  6EDE               	movwf	postinc2,c
 31759  0085C2  0E00               	movlw	0
 31760  0085C4  6EDD               	movwf	postdec2,c
 31761                           
 31762                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 31763  0085C6  5009               	movf	i1USBDeviceInit@i,w,c
 31764  0085C8  0D01               	mullw	1
 31765  0085CA  0E95               	movlw	low _ep_data_in
 31766  0085CC  24F3               	addwf	prodl,w,c
 31767  0085CE  6ED9               	movwf	fsr2l,c
 31768  0085D0  0E00               	movlw	high _ep_data_in
 31769  0085D2  20F4               	addwfc	prodh,w,c
 31770  0085D4  6EDA               	movwf	fsr2h,c
 31771  0085D6  0E00               	movlw	0
 31772  0085D8  6EDF               	movwf	indf2,c
 31773                           
 31774                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 31775  0085DA  5009               	movf	i1USBDeviceInit@i,w,c
 31776  0085DC  0D01               	mullw	1
 31777  0085DE  0E97               	movlw	low _ep_data_out
 31778  0085E0  24F3               	addwf	prodl,w,c
 31779  0085E2  6ED9               	movwf	fsr2l,c
 31780  0085E4  0E00               	movlw	high _ep_data_out
 31781  0085E6  20F4               	addwfc	prodh,w,c
 31782  0085E8  6EDA               	movwf	fsr2h,c
 31783  0085EA  0E00               	movlw	0
 31784  0085EC  6EDF               	movwf	indf2,c
 31785  0085EE  2A09               	incf	i1USBDeviceInit@i,f,c
 31786  0085F0  D7CE               	goto	i1l13643
 31787  0085F2                     i1l13653:
 31788                           
 31789                           ;usb_device.c: 368: }
 31790                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31791  0085F2  0E08               	movlw	8
 31792  0085F4  0100               	movlb	0	; () banked
 31793  0085F6  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 31794  0085F8  0E0D               	movlw	13
 31795  0085FA  0100               	movlb	0	; () banked
 31796  0085FC  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31797                           
 31798                           ; BSR set to: 0
 31799                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 31800  0085FE  0E16               	movlw	22
 31801  008600  010F               	movlb	15	; () banked
 31802  008602  6F26               	movwf	38,b	;volatile
 31803                           
 31804                           ; BSR set to: 15
 31805                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31806  008604  0E0D               	movlw	13
 31807  008606  010D               	movlb	13	; () banked
 31808  008608  6F03               	movwf	3,b	;volatile
 31809  00860A  0E20               	movlw	32
 31810  00860C  6F02               	movwf	2,b	;volatile
 31811                           
 31812                           ; BSR set to: 13
 31813                           ;usb_device.c: 376: BDT[0].CNT = 8;
 31814  00860E  0E08               	movlw	8
 31815  008610  010D               	movlb	13	; () banked
 31816  008612  6F01               	movwf	1,b	;volatile
 31817                           
 31818                           ; BSR set to: 13
 31819                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 31820  008614  0E04               	movlw	4
 31821  008616  010D               	movlb	13	; () banked
 31822  008618  6F00               	movwf	0,b	;volatile
 31823                           
 31824                           ; BSR set to: 13
 31825                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 31826  00861A  010D               	movlb	13	; () banked
 31827  00861C  8F00               	bsf	0,7,b	;volatile
 31828                           
 31829                           ; BSR set to: 13
 31830                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 31831  00861E  0E00               	movlw	0
 31832  008620  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 31833                           
 31834                           ; BSR set to: 13
 31835                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 31836  008622  0E00               	movlw	0
 31837  008624  6E4B               	movwf	_USBDeviceState,c	;volatile
 31838                           
 31839                           ; BSR set to: 13
 31840  008626  0012               	return		;funcret
 31841  008628                     __end_ofi1_USBDeviceInit:
 31842                           	opt stack 0
 31843                           pclatu	equ	0xFFB
 31844                           pclath	equ	0xFFA
 31845                           tblptru	equ	0xFF8
 31846                           tblptrh	equ	0xFF7
 31847                           tblptrl	equ	0xFF6
 31848                           tablat	equ	0xFF5
 31849                           prodh	equ	0xFF4
 31850                           prodl	equ	0xFF3
 31851                           intcon	equ	0xFF2
 31852                           intcon2	equ	0xFF1
 31853                           intcon3	equ	0xFF0
 31854                           indf0	equ	0xFEF
 31855                           postinc0	equ	0xFEE
 31856                           plusw0	equ	0xFEB
 31857                           fsr0h	equ	0xFEA
 31858                           fsr0l	equ	0xFE9
 31859                           wreg	equ	0xFE8
 31860                           indf1	equ	0xFE7
 31861                           postinc1	equ	0xFE6
 31862                           postdec1	equ	0xFE5
 31863                           plusw1	equ	0xFE3
 31864                           fsr1h	equ	0xFE2
 31865                           fsr1l	equ	0xFE1
 31866                           bsr	equ	0xFE0
 31867                           indf2	equ	0xFDF
 31868                           postinc2	equ	0xFDE
 31869                           postdec2	equ	0xFDD
 31870                           plusw2	equ	0xFDB
 31871                           fsr2h	equ	0xFDA
 31872                           fsr2l	equ	0xFD9
 31873                           status	equ	0xFD8
 31874                           
 31875 ;; *************** function _USBWakeFromSuspend *****************
 31876 ;; Defined at:
 31877 ;;		line 2302 in file "src/usb/usb_device.c"
 31878 ;; Parameters:    Size  Location     Type
 31879 ;;		None
 31880 ;; Auto vars:     Size  Location     Type
 31881 ;;		None
 31882 ;; Return value:  Size  Location     Type
 31883 ;;		None               void
 31884 ;; Registers used:
 31885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31886 ;; Tracked objects:
 31887 ;;		On entry : 0/0
 31888 ;;		On exit  : 0/0
 31889 ;;		Unchanged: 0/0
 31890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31895 ;;Total ram usage:        0 bytes
 31896 ;; Hardware stack levels used:    1
 31897 ;; Hardware stack levels required when called:   10
 31898 ;; This function calls:
 31899 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31900 ;; This function is called by:
 31901 ;;		_USBDeviceTasks
 31902 ;; This function uses a non-reentrant model
 31903 ;;
 31904                           
 31905                           	psect	text90
 31906  00B9DA                     __ptext90:
 31907                           	opt stack 0
 31908  00B9DA                     _USBWakeFromSuspend:
 31909                           	opt stack 6
 31910                           
 31911                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 31912                           
 31913                           ; BSR set to: 13
 31914                           ;incstack = 0
 31915  00B9DA  0E00               	movlw	0
 31916  00B9DC  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31917                           
 31918                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 31919  00B9DE  0E00               	movlw	0
 31920  00B9E0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31921  00B9E2  0E74               	movlw	116
 31922  00B9E4  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31923  00B9E6  0E00               	movlw	0
 31924  00B9E8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31925  00B9EA  0E00               	movlw	0
 31926  00B9EC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31927  00B9EE  0E00               	movlw	0
 31928  00B9F0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31929  00B9F2  0E00               	movlw	0
 31930  00B9F4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31931  00B9F6  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31932                           
 31933                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 31934  00B9FA  9265               	bcf	3941,1,c	;volatile
 31935                           
 31936                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 31937  00B9FC  010F               	movlb	15	; () banked
 31938  00B9FE  9536               	bcf	54,2,b	;volatile
 31939                           
 31940                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 31941  00BA00  D001               	goto	i1l13147
 31942  00BA02                     i1l13145:
 31943                           
 31944                           ;usb_device.c: 2342: {
 31945                           ;usb_device.c: 2343: (UIR &= 0xFB);
 31946  00BA02  9462               	bcf	3938,2,c	;volatile
 31947  00BA04                     i1l13147:
 31948  00BA04  A462               	btfss	3938,2,c	;volatile
 31949  00BA06  0012               	return	
 31950  00BA08  D7FC               	goto	i1l13145
 31951  00BA0A                     __end_of_USBWakeFromSuspend:
 31952                           	opt stack 0
 31953                           pclatu	equ	0xFFB
 31954                           pclath	equ	0xFFA
 31955                           tblptru	equ	0xFF8
 31956                           tblptrh	equ	0xFF7
 31957                           tblptrl	equ	0xFF6
 31958                           tablat	equ	0xFF5
 31959                           prodh	equ	0xFF4
 31960                           prodl	equ	0xFF3
 31961                           intcon	equ	0xFF2
 31962                           intcon2	equ	0xFF1
 31963                           intcon3	equ	0xFF0
 31964                           indf0	equ	0xFEF
 31965                           postinc0	equ	0xFEE
 31966                           plusw0	equ	0xFEB
 31967                           fsr0h	equ	0xFEA
 31968                           fsr0l	equ	0xFE9
 31969                           wreg	equ	0xFE8
 31970                           indf1	equ	0xFE7
 31971                           postinc1	equ	0xFE6
 31972                           postdec1	equ	0xFE5
 31973                           plusw1	equ	0xFE3
 31974                           fsr1h	equ	0xFE2
 31975                           fsr1l	equ	0xFE1
 31976                           bsr	equ	0xFE0
 31977                           indf2	equ	0xFDF
 31978                           postinc2	equ	0xFDE
 31979                           postdec2	equ	0xFDD
 31980                           plusw2	equ	0xFDB
 31981                           fsr2h	equ	0xFDA
 31982                           fsr2l	equ	0xFD9
 31983                           status	equ	0xFD8
 31984                           
 31985 ;; *************** function _USBSuspend *****************
 31986 ;; Defined at:
 31987 ;;		line 2245 in file "src/usb/usb_device.c"
 31988 ;; Parameters:    Size  Location     Type
 31989 ;;		None
 31990 ;; Auto vars:     Size  Location     Type
 31991 ;;		None
 31992 ;; Return value:  Size  Location     Type
 31993 ;;		None               void
 31994 ;; Registers used:
 31995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31996 ;; Tracked objects:
 31997 ;;		On entry : 0/0
 31998 ;;		On exit  : 0/0
 31999 ;;		Unchanged: 0/0
 32000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32005 ;;Total ram usage:        0 bytes
 32006 ;; Hardware stack levels used:    1
 32007 ;; Hardware stack levels required when called:   10
 32008 ;; This function calls:
 32009 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32010 ;; This function is called by:
 32011 ;;		_USBDeviceTasks
 32012 ;; This function uses a non-reentrant model
 32013 ;;
 32014                           
 32015                           	psect	text91
 32016  00BA8C                     __ptext91:
 32017                           	opt stack 0
 32018  00BA8C                     _USBSuspend:
 32019                           	opt stack 6
 32020                           
 32021                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 32022                           
 32023                           ;incstack = 0
 32024  00BA8C  010F               	movlb	15	; () banked
 32025  00BA8E  8536               	bsf	54,2,b	;volatile
 32026                           
 32027                           ; BSR set to: 15
 32028                           ;usb_device.c: 2271: (UIR &= 0xEF);
 32029  00BA90  9862               	bcf	3938,4,c	;volatile
 32030                           
 32031                           ; BSR set to: 15
 32032                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 32033  00BA92  8265               	bsf	3941,1,c	;volatile
 32034                           
 32035                           ; BSR set to: 15
 32036                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 32037  00BA94  0E01               	movlw	1
 32038  00BA96  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 32039                           
 32040                           ; BSR set to: 15
 32041                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 32042  00BA98  0E00               	movlw	0
 32043  00BA9A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 32044  00BA9C  0E75               	movlw	117
 32045  00BA9E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 32046  00BAA0  0E00               	movlw	0
 32047  00BAA2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 32048  00BAA4  0E00               	movlw	0
 32049  00BAA6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 32050  00BAA8  0E00               	movlw	0
 32051  00BAAA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 32052  00BAAC  0E00               	movlw	0
 32053  00BAAE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 32054  00BAB0  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 32055  00BAB4  0012               	return		;funcret
 32056  00BAB6                     __end_of_USBSuspend:
 32057                           	opt stack 0
 32058                           pclatu	equ	0xFFB
 32059                           pclath	equ	0xFFA
 32060                           tblptru	equ	0xFF8
 32061                           tblptrh	equ	0xFF7
 32062                           tblptrl	equ	0xFF6
 32063                           tablat	equ	0xFF5
 32064                           prodh	equ	0xFF4
 32065                           prodl	equ	0xFF3
 32066                           intcon	equ	0xFF2
 32067                           intcon2	equ	0xFF1
 32068                           intcon3	equ	0xFF0
 32069                           indf0	equ	0xFEF
 32070                           postinc0	equ	0xFEE
 32071                           plusw0	equ	0xFEB
 32072                           fsr0h	equ	0xFEA
 32073                           fsr0l	equ	0xFE9
 32074                           wreg	equ	0xFE8
 32075                           indf1	equ	0xFE7
 32076                           postinc1	equ	0xFE6
 32077                           postdec1	equ	0xFE5
 32078                           plusw1	equ	0xFE3
 32079                           fsr1h	equ	0xFE2
 32080                           fsr1l	equ	0xFE1
 32081                           bsr	equ	0xFE0
 32082                           indf2	equ	0xFDF
 32083                           postinc2	equ	0xFDE
 32084                           postdec2	equ	0xFDD
 32085                           plusw2	equ	0xFDB
 32086                           fsr2h	equ	0xFDA
 32087                           fsr2l	equ	0xFD9
 32088                           status	equ	0xFD8
 32089                           
 32090 ;; *************** function _USBStallHandler *****************
 32091 ;; Defined at:
 32092 ;;		line 2202 in file "src/usb/usb_device.c"
 32093 ;; Parameters:    Size  Location     Type
 32094 ;;		None
 32095 ;; Auto vars:     Size  Location     Type
 32096 ;;		None
 32097 ;; Return value:  Size  Location     Type
 32098 ;;		None               void
 32099 ;; Registers used:
 32100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32101 ;; Tracked objects:
 32102 ;;		On entry : 0/0
 32103 ;;		On exit  : 0/0
 32104 ;;		Unchanged: 0/0
 32105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32110 ;;Total ram usage:        1 bytes
 32111 ;; Hardware stack levels used:    1
 32112 ;; Hardware stack levels required when called:    6
 32113 ;; This function calls:
 32114 ;;		Nothing
 32115 ;; This function is called by:
 32116 ;;		_USBDeviceTasks
 32117 ;; This function uses a non-reentrant model
 32118 ;;
 32119                           
 32120                           	psect	text92
 32121  00B652                     __ptext92:
 32122                           	opt stack 0
 32123  00B652                     _USBStallHandler:
 32124                           	opt stack 10
 32125                           
 32126                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 32127                           
 32128                           ;incstack = 0
 32129  00B652  010F               	movlb	15	; () banked
 32130  00B654  A126               	btfss	38,0,b	;volatile
 32131  00B656  D01E               	goto	i1l1384
 32132                           
 32133                           ; BSR set to: 15
 32134                           ;usb_device.c: 2215: {
 32135                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 32136  00B658  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32137  00B65C  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32138  00B660  0E80               	movlw	128
 32139  00B662  18DE               	xorwf	postinc2,w,c
 32140  00B664  A4D8               	btfss	status,2,c
 32141  00B666  D014               	goto	i1l13169
 32142                           
 32143                           ; BSR set to: 15
 32144  00B668  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32145  00B66C  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32146  00B670  0E84               	movlw	132
 32147  00B672  18DE               	xorwf	postinc2,w,c
 32148  00B674  A4D8               	btfss	status,2,c
 32149  00B676  D00C               	goto	i1l13169
 32150                           
 32151                           ; BSR set to: 15
 32152                           ;usb_device.c: 2218: {
 32153                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32154  00B678  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32155  00B67C  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32156  00B680  0E0C               	movlw	12
 32157  00B682  6EDF               	movwf	indf2,c
 32158                           
 32159                           ; BSR set to: 15
 32160                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 32161  00B684  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32162  00B688  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32163  00B68C  0E00               	movlw	0
 32164  00B68E  8EDB               	bsf	plusw2,7,c
 32165  00B690                     i1l13169:
 32166                           
 32167                           ; BSR set to: 15
 32168                           ;usb_device.c: 2222: }
 32169                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 32170  00B690  010F               	movlb	15	; () banked
 32171  00B692  9126               	bcf	38,0,b	;volatile
 32172  00B694                     i1l1384:
 32173                           
 32174                           ; BSR set to: 15
 32175                           ;usb_device.c: 2224: }
 32176                           ;usb_device.c: 2226: (UIR &= 0xDF);
 32177  00B694  9A62               	bcf	3938,5,c	;volatile
 32178                           
 32179                           ; BSR set to: 15
 32180  00B696  0012               	return		;funcret
 32181  00B698                     __end_of_USBStallHandler:
 32182                           	opt stack 0
 32183                           pclatu	equ	0xFFB
 32184                           pclath	equ	0xFFA
 32185                           tblptru	equ	0xFF8
 32186                           tblptrh	equ	0xFF7
 32187                           tblptrl	equ	0xFF6
 32188                           tablat	equ	0xFF5
 32189                           prodh	equ	0xFF4
 32190                           prodl	equ	0xFF3
 32191                           intcon	equ	0xFF2
 32192                           intcon2	equ	0xFF1
 32193                           intcon3	equ	0xFF0
 32194                           indf0	equ	0xFEF
 32195                           postinc0	equ	0xFEE
 32196                           plusw0	equ	0xFEB
 32197                           fsr0h	equ	0xFEA
 32198                           fsr0l	equ	0xFE9
 32199                           wreg	equ	0xFE8
 32200                           indf1	equ	0xFE7
 32201                           postinc1	equ	0xFE6
 32202                           postdec1	equ	0xFE5
 32203                           plusw1	equ	0xFE3
 32204                           fsr1h	equ	0xFE2
 32205                           fsr1l	equ	0xFE1
 32206                           bsr	equ	0xFE0
 32207                           indf2	equ	0xFDF
 32208                           postinc2	equ	0xFDE
 32209                           postdec2	equ	0xFDD
 32210                           plusw2	equ	0xFDB
 32211                           fsr2h	equ	0xFDA
 32212                           fsr2l	equ	0xFD9
 32213                           status	equ	0xFD8
 32214                           
 32215 ;; *************** function _USBCtrlEPService *****************
 32216 ;; Defined at:
 32217 ;;		line 2369 in file "src/usb/usb_device.c"
 32218 ;; Parameters:    Size  Location     Type
 32219 ;;		None
 32220 ;; Auto vars:     Size  Location     Type
 32221 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 32222 ;; Return value:  Size  Location     Type
 32223 ;;		None               void
 32224 ;; Registers used:
 32225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32226 ;; Tracked objects:
 32227 ;;		On entry : 0/0
 32228 ;;		On exit  : 0/0
 32229 ;;		Unchanged: 0/0
 32230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32234 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32235 ;;Total ram usage:        3 bytes
 32236 ;; Hardware stack levels used:    1
 32237 ;; Hardware stack levels required when called:   13
 32238 ;; This function calls:
 32239 ;;		_USBCtrlTrfInHandler
 32240 ;;		_USBCtrlTrfOutHandler
 32241 ;;		_USBCtrlTrfSetupHandler
 32242 ;; This function is called by:
 32243 ;;		_USBDeviceTasks
 32244 ;; This function uses a non-reentrant model
 32245 ;;
 32246                           
 32247                           	psect	text93
 32248  009BD2                     __ptext93:
 32249                           	opt stack 0
 32250  009BD2                     _USBCtrlEPService:
 32251                           	opt stack 3
 32252                           
 32253                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 32254                           
 32255                           ; BSR set to: 15
 32256                           ;incstack = 0
 32257  009BD2  0E2D               	movlw	45
 32258  009BD4  6E4E               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 32259                           
 32260                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 32261  009BD6  C058  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 32262  009BDA  0EFD               	movlw	253
 32263  009BDC  161B               	andwf	??_USBCtrlEPService,f,c
 32264  009BDE  A4D8               	btfss	status,2,c
 32265  009BE0  D057               	goto	i1l13203
 32266                           
 32267                           ;usb_device.c: 2380: {
 32268                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 32269  009BE2  C058  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 32270  009BE6  90D8               	bcf	status,0,c
 32271  009BE8  321B               	rrcf	??_USBCtrlEPService,f,c
 32272  009BEA  0E3F               	movlw	63
 32273  009BEC  161B               	andwf	??_USBCtrlEPService,f,c
 32274  009BEE  501B               	movf	??_USBCtrlEPService,w,c
 32275  009BF0  0D04               	mullw	4
 32276  009BF2  0E00               	movlw	0
 32277  009BF4  24F3               	addwf	prodl,w,c
 32278  009BF6  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 32279  009BF8  0E0D               	movlw	13
 32280  009BFA  20F4               	addwfc	prodh,w,c
 32281  009BFC  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 32282                           
 32283                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 32284  009BFE  C038  F03A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 32285  009C02  C039  F03B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 32286                           
 32287                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 32288  009C06  0E04               	movlw	4
 32289  009C08  1A3A               	xorwf	_pBDTEntryEP0OutNext,f,c
 32290                           
 32291                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 32292  009C0A  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32293  009C0E  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32294  009C12  30DF               	rrcf	indf2,w,c
 32295  009C14  32E8               	rrcf	wreg,f,c
 32296  009C16  0B0F               	andlw	15
 32297  009C18  0A0D               	xorlw	13
 32298  009C1A  A4D8               	btfss	status,2,c
 32299  009C1C  D036               	goto	i1l13201
 32300                           
 32301                           ;usb_device.c: 2397: {
 32302                           ;usb_device.c: 2398: unsigned char setup_cnt;
 32303                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 32304  009C1E  0E00               	movlw	0
 32305  009C20  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 32306  009C22                     i1l13185:
 32307  009C22  0E07               	movlw	7
 32308  009C24  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 32309  009C26  D001               	goto	i1l13189
 32310  009C28  D023               	goto	i1l13197
 32311  009C2A                     i1l13189:
 32312                           
 32313                           ;usb_device.c: 2405: {
 32314                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 32315  009C2A  EE20 F002          	lfsr	2,2
 32316  009C2E  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32317  009C30  26D9               	addwf	fsr2l,f,c
 32318  009C32  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32319  009C34  22DA               	addwfc	fsr2h,f,c
 32320  009C36  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 32321  009C3A  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 32322  009C3E  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 32323  009C42  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 32324  009C46  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 32325  009C48  0D01               	mullw	1
 32326  009C4A  0E20               	movlw	32
 32327  009C4C  24F3               	addwf	prodl,w,c
 32328  009C4E  6EE1               	movwf	fsr1l,c
 32329  009C50  0E0D               	movlw	13
 32330  009C52  20F4               	addwfc	prodh,w,c
 32331  009C54  6EE2               	movwf	fsr1h,c
 32332  009C56  CFDF FFE7          	movff	indf2,indf1
 32333                           
 32334                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 32335  009C5A  EE20 F002          	lfsr	2,2
 32336  009C5E  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32337  009C60  26D9               	addwf	fsr2l,f,c
 32338  009C62  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32339  009C64  22DA               	addwfc	fsr2h,f,c
 32340  009C66  2ADE               	incf	postinc2,f,c
 32341  009C68  0E00               	movlw	0
 32342  009C6A  22DD               	addwfc	postdec2,f,c
 32343  009C6C  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 32344  009C6E  D7D9               	goto	i1l13185
 32345  009C70                     i1l13197:
 32346                           
 32347                           ;usb_device.c: 2408: }
 32348                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 32349  009C70  EE20 F002          	lfsr	2,2
 32350  009C74  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32351  009C76  26D9               	addwf	fsr2l,f,c
 32352  009C78  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32353  009C7A  22DA               	addwfc	fsr2h,f,c
 32354  009C7C  0E20               	movlw	32
 32355  009C7E  6EDE               	movwf	postinc2,c
 32356  009C80  0E0D               	movlw	13
 32357  009C82  6EDD               	movwf	postdec2,c
 32358                           
 32359                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 32360  009C84  EC40  F057         	call	_USBCtrlTrfSetupHandler	;wreg free
 32361                           
 32362                           ;usb_device.c: 2413: }
 32363  009C88  0012               	return	
 32364  009C8A                     i1l13201:
 32365                           
 32366                           ;usb_device.c: 2414: else
 32367                           ;usb_device.c: 2415: {
 32368                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 32369  009C8A  EC57  F05A         	call	_USBCtrlTrfOutHandler	;wreg free
 32370                           
 32371                           ;usb_device.c: 2418: }
 32372                           ;usb_device.c: 2419: }
 32373  009C8E  0012               	return	
 32374  009C90                     i1l13203:
 32375                           
 32376                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 32377  009C90  5058               	movf	_USTATcopy,w,c	;volatile
 32378  009C92  0BFD               	andlw	253
 32379  009C94  0A04               	xorlw	4
 32380  009C96  A4D8               	btfss	status,2,c
 32381  009C98  0012               	return	
 32382                           
 32383                           ;usb_device.c: 2421: {
 32384                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 32385  009C9A  EC3F  F050         	call	_USBCtrlTrfInHandler	;wreg free
 32386  009C9E  0012               	return	
 32387  009CA0                     __end_of_USBCtrlEPService:
 32388                           	opt stack 0
 32389                           pclatu	equ	0xFFB
 32390                           pclath	equ	0xFFA
 32391                           tblptru	equ	0xFF8
 32392                           tblptrh	equ	0xFF7
 32393                           tblptrl	equ	0xFF6
 32394                           tablat	equ	0xFF5
 32395                           prodh	equ	0xFF4
 32396                           prodl	equ	0xFF3
 32397                           intcon	equ	0xFF2
 32398                           intcon2	equ	0xFF1
 32399                           intcon3	equ	0xFF0
 32400                           indf0	equ	0xFEF
 32401                           postinc0	equ	0xFEE
 32402                           plusw0	equ	0xFEB
 32403                           fsr0h	equ	0xFEA
 32404                           fsr0l	equ	0xFE9
 32405                           wreg	equ	0xFE8
 32406                           indf1	equ	0xFE7
 32407                           postinc1	equ	0xFE6
 32408                           postdec1	equ	0xFE5
 32409                           plusw1	equ	0xFE3
 32410                           fsr1h	equ	0xFE2
 32411                           fsr1l	equ	0xFE1
 32412                           bsr	equ	0xFE0
 32413                           indf2	equ	0xFDF
 32414                           postinc2	equ	0xFDE
 32415                           postdec2	equ	0xFDD
 32416                           plusw2	equ	0xFDB
 32417                           fsr2h	equ	0xFDA
 32418                           fsr2l	equ	0xFD9
 32419                           status	equ	0xFD8
 32420                           
 32421 ;; *************** function _USBCtrlTrfSetupHandler *****************
 32422 ;; Defined at:
 32423 ;;		line 2469 in file "src/usb/usb_device.c"
 32424 ;; Parameters:    Size  Location     Type
 32425 ;;		None
 32426 ;; Auto vars:     Size  Location     Type
 32427 ;;		None
 32428 ;; Return value:  Size  Location     Type
 32429 ;;		None               void
 32430 ;; Registers used:
 32431 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32432 ;; Tracked objects:
 32433 ;;		On entry : 0/0
 32434 ;;		On exit  : 0/0
 32435 ;;		Unchanged: 0/0
 32436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32441 ;;Total ram usage:        0 bytes
 32442 ;; Hardware stack levels used:    1
 32443 ;; Hardware stack levels required when called:   12
 32444 ;; This function calls:
 32445 ;;		_USBCheckStdRequest
 32446 ;;		_USBCtrlEPServiceComplete
 32447 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32448 ;; This function is called by:
 32449 ;;		_USBCtrlEPService
 32450 ;; This function uses a non-reentrant model
 32451 ;;
 32452                           
 32453                           	psect	text94
 32454  00AE80                     __ptext94:
 32455                           	opt stack 0
 32456  00AE80                     _USBCtrlTrfSetupHandler:
 32457                           	opt stack 3
 32458                           
 32459                           ;usb_device.c: 2474: shortPacketStatus = 0;
 32460                           
 32461                           ;incstack = 0
 32462  00AE80  0E00               	movlw	0
 32463  00AE82  6E54               	movwf	_shortPacketStatus,c	;volatile
 32464                           
 32465                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 32466  00AE84  0E00               	movlw	0
 32467  00AE86  6E4A               	movwf	_USBDeferStatusStagePacket,c	;volatile
 32468                           
 32469                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 32470  00AE88  0E00               	movlw	0
 32471  00AE8A  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 32472                           
 32473                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 32474  00AE8C  0E00               	movlw	0
 32475  00AE8E  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 32476                           
 32477                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 32478  00AE90  0E00               	movlw	0
 32479  00AE92  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 32480                           
 32481                           ;usb_device.c: 2479: controlTransferState = 0;
 32482  00AE94  0E00               	movlw	0
 32483  00AE96  6E4F               	movwf	_controlTransferState,c	;volatile
 32484                           
 32485                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 32486  00AE98  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32487  00AE9C  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32488  00AEA0  0E7F               	movlw	127
 32489  00AEA2  16DF               	andwf	indf2,f,c
 32490                           
 32491                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32492  00AEA4  0E04               	movlw	4
 32493  00AEA6  0100               	movlb	0	; () banked
 32494  00AEA8  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 32495                           
 32496                           ; BSR set to: 0
 32497                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 32498  00AEAA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32499  00AEAE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32500  00AEB2  0E7F               	movlw	127
 32501  00AEB4  16DF               	andwf	indf2,f,c
 32502                           
 32503                           ; BSR set to: 0
 32504                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32505  00AEB6  0E04               	movlw	4
 32506  00AEB8  0100               	movlb	0	; () banked
 32507  00AEBA  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 32508                           
 32509                           ; BSR set to: 0
 32510                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 32511  00AEBC  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32512  00AEC0  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32513  00AEC4  0E7F               	movlw	127
 32514  00AEC6  16DF               	andwf	indf2,f,c
 32515                           
 32516                           ; BSR set to: 0
 32517                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 32518  00AEC8  0E00               	movlw	0
 32519  00AECA  0100               	movlb	0	; () banked
 32520  00AECC  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32521                           
 32522                           ; BSR set to: 0
 32523                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 32524  00AECE  0E00               	movlw	0
 32525  00AED0  0100               	movlb	0	; () banked
 32526  00AED2  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32527  00AED4  0E00               	movlw	0
 32528  00AED6  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 32529                           
 32530                           ; BSR set to: 0
 32531                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 32532  00AED8  0E00               	movlw	0
 32533  00AEDA  0100               	movlb	0	; () banked
 32534  00AEDC  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 32538  00AEDE  0E00               	movlw	0
 32539  00AEE0  0100               	movlb	0	; () banked
 32540  00AEE2  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 32541  00AEE4  0E00               	movlw	0
 32542  00AEE6  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 32543                           
 32544                           ; BSR set to: 0
 32545                           ;usb_device.c: 2503: USBCheckStdRequest();
 32546  00AEE8  EC46  F04B         	call	_USBCheckStdRequest	;wreg free
 32547                           
 32548                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 32549  00AEEC  0E00               	movlw	0
 32550  00AEEE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 32551  00AEF0  0E03               	movlw	3
 32552  00AEF2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 32553  00AEF4  0E00               	movlw	0
 32554  00AEF6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 32555  00AEF8  0E00               	movlw	0
 32556  00AEFA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 32557  00AEFC  0E00               	movlw	0
 32558  00AEFE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 32559  00AF00  0E00               	movlw	0
 32560  00AF02  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 32561  00AF04  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 32562                           
 32563                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 32564  00AF08  ECCC  F04A         	call	_USBCtrlEPServiceComplete	;wreg free
 32565  00AF0C  0012               	return		;funcret
 32566  00AF0E                     __end_of_USBCtrlTrfSetupHandler:
 32567                           	opt stack 0
 32568                           pclatu	equ	0xFFB
 32569                           pclath	equ	0xFFA
 32570                           tblptru	equ	0xFF8
 32571                           tblptrh	equ	0xFF7
 32572                           tblptrl	equ	0xFF6
 32573                           tablat	equ	0xFF5
 32574                           prodh	equ	0xFF4
 32575                           prodl	equ	0xFF3
 32576                           intcon	equ	0xFF2
 32577                           intcon2	equ	0xFF1
 32578                           intcon3	equ	0xFF0
 32579                           indf0	equ	0xFEF
 32580                           postinc0	equ	0xFEE
 32581                           plusw0	equ	0xFEB
 32582                           fsr0h	equ	0xFEA
 32583                           fsr0l	equ	0xFE9
 32584                           wreg	equ	0xFE8
 32585                           indf1	equ	0xFE7
 32586                           postinc1	equ	0xFE6
 32587                           postdec1	equ	0xFE5
 32588                           plusw1	equ	0xFE3
 32589                           fsr1h	equ	0xFE2
 32590                           fsr1l	equ	0xFE1
 32591                           bsr	equ	0xFE0
 32592                           indf2	equ	0xFDF
 32593                           postinc2	equ	0xFDE
 32594                           postdec2	equ	0xFDD
 32595                           plusw2	equ	0xFDB
 32596                           fsr2h	equ	0xFDA
 32597                           fsr2l	equ	0xFD9
 32598                           status	equ	0xFD8
 32599                           
 32600 ;; *************** function _USBCtrlEPServiceComplete *****************
 32601 ;; Defined at:
 32602 ;;		line 1616 in file "src/usb/usb_device.c"
 32603 ;; Parameters:    Size  Location     Type
 32604 ;;		None
 32605 ;; Auto vars:     Size  Location     Type
 32606 ;;		None
 32607 ;; Return value:  Size  Location     Type
 32608 ;;		None               void
 32609 ;; Registers used:
 32610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32611 ;; Tracked objects:
 32612 ;;		On entry : 0/0
 32613 ;;		On exit  : 0/0
 32614 ;;		Unchanged: 0/0
 32615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32620 ;;Total ram usage:        0 bytes
 32621 ;; Hardware stack levels used:    1
 32622 ;; Hardware stack levels required when called:    8
 32623 ;; This function calls:
 32624 ;;		_USBCtrlEPAllowDataStage
 32625 ;;		_USBCtrlEPAllowStatusStage
 32626 ;; This function is called by:
 32627 ;;		_USBCtrlTrfSetupHandler
 32628 ;; This function uses a non-reentrant model
 32629 ;;
 32630                           
 32631                           	psect	text95
 32632  009598                     __ptext95:
 32633                           	opt stack 0
 32634  009598                     _USBCtrlEPServiceComplete:
 32635                           	opt stack 6
 32636                           
 32637                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 32638                           
 32639                           ;incstack = 0
 32640  009598  9865               	bcf	3941,4,c	;volatile
 32641                           
 32642                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 32643  00959A  0100               	movlb	0	; () banked
 32644  00959C  BF84               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 32645  00959E  D039               	goto	i1l1308
 32646                           
 32647                           ; BSR set to: 0
 32648                           ;usb_device.c: 1629: {
 32649                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 32650  0095A0  0100               	movlb	0	; () banked
 32651  0095A2  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 32652  0095A4  D00B               	goto	i1l11495
 32653                           
 32654                           ; BSR set to: 0
 32655                           ;usb_device.c: 1631: {
 32656                           ;usb_device.c: 1632: controlTransferState = 2;
 32657  0095A6  0E02               	movlw	2
 32658  0095A8  6E4F               	movwf	_controlTransferState,c	;volatile
 32659                           
 32660                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 32661  0095AA  5049               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 32662  0095AC  B4D8               	btfsc	status,2,c
 32663                           
 32664                           ; BSR set to: 0
 32665                           ;usb_device.c: 1644: {
 32666                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 32667  0095AE  EC30  F055         	call	_USBCtrlEPAllowDataStage	;wreg free
 32668                           
 32669                           ;usb_device.c: 1646: }
 32670                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 32671  0095B2  0E00               	movlw	0
 32672  0095B4  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32673                           
 32674                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 32675  0095B6  0E00               	movlw	0
 32676  0095B8  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32677                           
 32678                           ;usb_device.c: 1652: }
 32679  0095BA  0012               	return	
 32680  0095BC                     i1l11495:
 32681                           
 32682                           ;usb_device.c: 1653: else
 32683                           ;usb_device.c: 1654: {
 32684                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 32685  0095BC  EE20 F001          	lfsr	2,1
 32686  0095C0  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32687  0095C2  26D9               	addwf	fsr2l,f,c
 32688  0095C4  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32689  0095C6  22DA               	addwfc	fsr2h,f,c
 32690  0095C8  0E08               	movlw	8
 32691  0095CA  6EDF               	movwf	indf2,c
 32692                           
 32693                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32694  0095CC  EE20 F002          	lfsr	2,2
 32695  0095D0  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32696  0095D2  26D9               	addwf	fsr2l,f,c
 32697  0095D4  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32698  0095D6  22DA               	addwfc	fsr2h,f,c
 32699  0095D8  0E20               	movlw	32
 32700  0095DA  6EDE               	movwf	postinc2,c
 32701  0095DC  0E0D               	movlw	13
 32702  0095DE  6EDD               	movwf	postdec2,c
 32703                           
 32704                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32705  0095E0  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32706  0095E4  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32707  0095E8  0E0C               	movlw	12
 32708  0095EA  6EDF               	movwf	indf2,c
 32709                           
 32710                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32711  0095EC  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32712  0095F0  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32713  0095F4  0E00               	movlw	0
 32714  0095F6  8EDB               	bsf	plusw2,7,c
 32715                           
 32716                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 32717  0095F8  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32718  0095FC  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32719  009600  0E04               	movlw	4
 32720  009602  6EDF               	movwf	indf2,c
 32721                           
 32722                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32723  009604  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32724  009608  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32725  00960C  0E00               	movlw	0
 32726  00960E  8EDB               	bsf	plusw2,7,c
 32727                           
 32728                           ;usb_device.c: 1665: }
 32729                           ;usb_device.c: 1666: }
 32730  009610  0012               	return	
 32731  009612                     i1l1308:
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;usb_device.c: 1667: else
 32735                           ;usb_device.c: 1668: {
 32736                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 32737  009612  010D               	movlb	13	; () banked
 32738  009614  AF20               	btfss	32,7,b	;volatile
 32739  009616  D010               	goto	i1l11515
 32740                           
 32741                           ; BSR set to: 13
 32742                           ;usb_device.c: 1670: {
 32743                           ;usb_device.c: 1671: controlTransferState = 1;
 32744  009618  0E01               	movlw	1
 32745  00961A  6E4F               	movwf	_controlTransferState,c	;volatile
 32746                           
 32747                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 32748  00961C  5048               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 32749  00961E  B4D8               	btfsc	status,2,c
 32750                           
 32751                           ; BSR set to: 13
 32752                           ;usb_device.c: 1686: {
 32753                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 32754  009620  EC30  F055         	call	_USBCtrlEPAllowDataStage	;wreg free
 32755                           
 32756                           ;usb_device.c: 1688: }
 32757                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 32758  009624  0E00               	movlw	0
 32759  009626  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32760                           
 32761                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 32762  009628  0E00               	movlw	0
 32763  00962A  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32764                           
 32765                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 32766  00962C  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 32767  00962E  A4D8               	btfss	status,2,c
 32768  009630  0012               	return	
 32769                           
 32770                           ;usb_device.c: 1713: {
 32771                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 32772  009632  ECDD  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32773                           
 32774                           ;usb_device.c: 1715: }
 32775                           ;usb_device.c: 1716: }
 32776  009636  0012               	return	
 32777  009638                     i1l11515:
 32778                           
 32779                           ;usb_device.c: 1717: else
 32780                           ;usb_device.c: 1718: {
 32781                           ;usb_device.c: 1729: controlTransferState = 2;
 32782  009638  0E02               	movlw	2
 32783  00963A  6E4F               	movwf	_controlTransferState,c	;volatile
 32784                           
 32785                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 32786  00963C  EE20 F001          	lfsr	2,1
 32787  009640  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32788  009642  26D9               	addwf	fsr2l,f,c
 32789  009644  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32790  009646  22DA               	addwfc	fsr2h,f,c
 32791  009648  0E08               	movlw	8
 32792  00964A  6EDF               	movwf	indf2,c
 32793                           
 32794                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32795  00964C  EE20 F002          	lfsr	2,2
 32796  009650  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32797  009652  26D9               	addwf	fsr2l,f,c
 32798  009654  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32799  009656  22DA               	addwfc	fsr2h,f,c
 32800  009658  0E20               	movlw	32
 32801  00965A  6EDE               	movwf	postinc2,c
 32802  00965C  0E0D               	movlw	13
 32803  00965E  6EDD               	movwf	postdec2,c
 32804                           
 32805                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 32806  009660  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32807  009664  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32808  009668  0E04               	movlw	4
 32809  00966A  6EDF               	movwf	indf2,c
 32810                           
 32811                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32812  00966C  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32813  009670  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32814  009674  0E00               	movlw	0
 32815  009676  8EDB               	bsf	plusw2,7,c
 32816                           
 32817                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 32818  009678  0E00               	movlw	0
 32819  00967A  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32820                           
 32821                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 32822  00967C  0E00               	movlw	0
 32823  00967E  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32824                           
 32825                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 32826  009680  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 32827  009682  A4D8               	btfss	status,2,c
 32828  009684  0012               	return	
 32829                           
 32830                           ;usb_device.c: 1741: {
 32831                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 32832  009686  ECDD  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32833  00968A  0012               	return	
 32834  00968C                     __end_of_USBCtrlEPServiceComplete:
 32835                           	opt stack 0
 32836                           pclatu	equ	0xFFB
 32837                           pclath	equ	0xFFA
 32838                           tblptru	equ	0xFF8
 32839                           tblptrh	equ	0xFF7
 32840                           tblptrl	equ	0xFF6
 32841                           tablat	equ	0xFF5
 32842                           prodh	equ	0xFF4
 32843                           prodl	equ	0xFF3
 32844                           intcon	equ	0xFF2
 32845                           intcon2	equ	0xFF1
 32846                           intcon3	equ	0xFF0
 32847                           indf0	equ	0xFEF
 32848                           postinc0	equ	0xFEE
 32849                           plusw0	equ	0xFEB
 32850                           fsr0h	equ	0xFEA
 32851                           fsr0l	equ	0xFE9
 32852                           wreg	equ	0xFE8
 32853                           indf1	equ	0xFE7
 32854                           postinc1	equ	0xFE6
 32855                           postdec1	equ	0xFE5
 32856                           plusw1	equ	0xFE3
 32857                           fsr1h	equ	0xFE2
 32858                           fsr1l	equ	0xFE1
 32859                           bsr	equ	0xFE0
 32860                           indf2	equ	0xFDF
 32861                           postinc2	equ	0xFDE
 32862                           postdec2	equ	0xFDD
 32863                           plusw2	equ	0xFDB
 32864                           fsr2h	equ	0xFDA
 32865                           fsr2l	equ	0xFD9
 32866                           status	equ	0xFD8
 32867                           
 32868 ;; *************** function _USBCtrlEPAllowDataStage *****************
 32869 ;; Defined at:
 32870 ;;		line 1488 in file "src/usb/usb_device.c"
 32871 ;; Parameters:    Size  Location     Type
 32872 ;;		None
 32873 ;; Auto vars:     Size  Location     Type
 32874 ;;		None
 32875 ;; Return value:  Size  Location     Type
 32876 ;;		None               void
 32877 ;; Registers used:
 32878 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32879 ;; Tracked objects:
 32880 ;;		On entry : 0/0
 32881 ;;		On exit  : 0/0
 32882 ;;		Unchanged: 0/0
 32883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32888 ;;Total ram usage:        0 bytes
 32889 ;; Hardware stack levels used:    1
 32890 ;; Hardware stack levels required when called:    7
 32891 ;; This function calls:
 32892 ;;		_USBCtrlTrfTxService
 32893 ;; This function is called by:
 32894 ;;		_USBCtrlEPServiceComplete
 32895 ;; This function uses a non-reentrant model
 32896 ;;
 32897                           
 32898                           	psect	text96
 32899  00AA60                     __ptext96:
 32900                           	opt stack 0
 32901  00AA60                     _USBCtrlEPAllowDataStage:
 32902                           	opt stack 6
 32903                           
 32904                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 32905                           
 32906                           ;incstack = 0
 32907  00AA60  0E00               	movlw	0
 32908  00AA62  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 32909                           
 32910                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 32911  00AA64  0E00               	movlw	0
 32912  00AA66  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 32913                           
 32914                           ;usb_device.c: 1493: if(controlTransferState == 2)
 32915  00AA68  0E02               	movlw	2
 32916  00AA6A  184F               	xorwf	_controlTransferState,w,c	;volatile
 32917  00AA6C  A4D8               	btfss	status,2,c
 32918  00AA6E  D01F               	goto	i1l11021
 32919                           
 32920                           ;usb_device.c: 1494: {
 32921                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 32922  00AA70  EE20 F001          	lfsr	2,1
 32923  00AA74  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32924  00AA76  26D9               	addwf	fsr2l,f,c
 32925  00AA78  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32926  00AA7A  22DA               	addwfc	fsr2h,f,c
 32927  00AA7C  0E08               	movlw	8
 32928  00AA7E  6EDF               	movwf	indf2,c
 32929                           
 32930                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 32931  00AA80  EE20 F002          	lfsr	2,2
 32932  00AA84  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32933  00AA86  26D9               	addwf	fsr2l,f,c
 32934  00AA88  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32935  00AA8A  22DA               	addwfc	fsr2h,f,c
 32936  00AA8C  0E28               	movlw	40
 32937  00AA8E  6EDE               	movwf	postinc2,c
 32938  00AA90  0E0D               	movlw	13
 32939  00AA92  6EDD               	movwf	postdec2,c
 32940                           
 32941                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 32942  00AA94  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32943  00AA98  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32944  00AA9C  0E48               	movlw	72
 32945  00AA9E  6EDF               	movwf	indf2,c
 32946                           
 32947                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32948  00AAA0  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32949  00AAA4  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32950  00AAA8  0E00               	movlw	0
 32951  00AAAA  8EDB               	bsf	plusw2,7,c
 32952                           
 32953                           ;usb_device.c: 1500: }
 32954  00AAAC  0012               	return	
 32955  00AAAE                     i1l11021:
 32956                           
 32957                           ;usb_device.c: 1501: else
 32958                           ;usb_device.c: 1502: {
 32959                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 32960  00AAAE  0100               	movlb	0	; () banked
 32961  00AAB0  5185               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 32962  00AAB2  010D               	movlb	13	; () banked
 32963  00AAB4  5D26               	subwf	38,w,b	;volatile
 32964  00AAB6  0100               	movlb	0	; () banked
 32965  00AAB8  5186               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 32966  00AABA  010D               	movlb	13	; () banked
 32967  00AABC  5927               	subwfb	39,w,b	;volatile
 32968  00AABE  B0D8               	btfsc	status,0,c
 32969  00AAC0  D004               	goto	i1l11025
 32970                           
 32971                           ; BSR set to: 13
 32972                           ;usb_device.c: 1506: {
 32973                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 32974  00AAC2  CD26 F085          	movff	3366,_inPipes+4	;volatile
 32975  00AAC6  CD27 F086          	movff	3367,_inPipes+5	;volatile
 32976  00AACA                     i1l11025:
 32977                           
 32978                           ; BSR set to: 13
 32979                           ;usb_device.c: 1508: }
 32980                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 32981  00AACA  EC12  F04D         	call	_USBCtrlTrfTxService	;wreg free
 32982                           
 32983                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 32984  00AACE  0100               	movlb	0	; () banked
 32985  00AAD0  EE20 F002          	lfsr	2,2
 32986  00AAD4  518B               	movf	_pBDTEntryIn& (0+255),w,b
 32987  00AAD6  26D9               	addwf	fsr2l,f,c
 32988  00AAD8  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32989  00AADA  22DA               	addwfc	fsr2h,f,c
 32990  00AADC  0E28               	movlw	40
 32991  00AADE  6EDE               	movwf	postinc2,c
 32992  00AAE0  0E0D               	movlw	13
 32993  00AAE2  6EDD               	movwf	postdec2,c
 32994                           
 32995                           ; BSR set to: 0
 32996                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 32997  00AAE4  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32998  00AAE8  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32999  00AAEC  0E48               	movlw	72
 33000  00AAEE  6EDF               	movwf	indf2,c
 33001                           
 33002                           ; BSR set to: 0
 33003                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33004  00AAF0  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 33005  00AAF4  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33006  00AAF8  0E00               	movlw	0
 33007  00AAFA  8EDB               	bsf	plusw2,7,c
 33008  00AAFC  0012               	return	
 33009  00AAFE                     __end_of_USBCtrlEPAllowDataStage:
 33010                           	opt stack 0
 33011                           pclatu	equ	0xFFB
 33012                           pclath	equ	0xFFA
 33013                           tblptru	equ	0xFF8
 33014                           tblptrh	equ	0xFF7
 33015                           tblptrl	equ	0xFF6
 33016                           tablat	equ	0xFF5
 33017                           prodh	equ	0xFF4
 33018                           prodl	equ	0xFF3
 33019                           intcon	equ	0xFF2
 33020                           intcon2	equ	0xFF1
 33021                           intcon3	equ	0xFF0
 33022                           indf0	equ	0xFEF
 33023                           postinc0	equ	0xFEE
 33024                           plusw0	equ	0xFEB
 33025                           fsr0h	equ	0xFEA
 33026                           fsr0l	equ	0xFE9
 33027                           wreg	equ	0xFE8
 33028                           indf1	equ	0xFE7
 33029                           postinc1	equ	0xFE6
 33030                           postdec1	equ	0xFE5
 33031                           plusw1	equ	0xFE3
 33032                           fsr1h	equ	0xFE2
 33033                           fsr1l	equ	0xFE1
 33034                           bsr	equ	0xFE0
 33035                           indf2	equ	0xFDF
 33036                           postinc2	equ	0xFDE
 33037                           postdec2	equ	0xFDD
 33038                           plusw2	equ	0xFDB
 33039                           fsr2h	equ	0xFDA
 33040                           fsr2l	equ	0xFD9
 33041                           status	equ	0xFD8
 33042                           
 33043 ;; *************** function _USBCheckStdRequest *****************
 33044 ;; Defined at:
 33045 ;;		line 2689 in file "src/usb/usb_device.c"
 33046 ;; Parameters:    Size  Location     Type
 33047 ;;		None
 33048 ;; Auto vars:     Size  Location     Type
 33049 ;;		None
 33050 ;; Return value:  Size  Location     Type
 33051 ;;		None               void
 33052 ;; Registers used:
 33053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33054 ;; Tracked objects:
 33055 ;;		On entry : 0/0
 33056 ;;		On exit  : 0/0
 33057 ;;		Unchanged: 0/0
 33058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33063 ;;Total ram usage:        0 bytes
 33064 ;; Hardware stack levels used:    1
 33065 ;; Hardware stack levels required when called:   11
 33066 ;; This function calls:
 33067 ;;		_USBStdFeatureReqHandler
 33068 ;;		_USBStdGetDscHandler
 33069 ;;		_USBStdGetStatusHandler
 33070 ;;		_USBStdSetCfgHandler
 33071 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33072 ;; This function is called by:
 33073 ;;		_USBCtrlTrfSetupHandler
 33074 ;; This function uses a non-reentrant model
 33075 ;;
 33076                           
 33077                           	psect	text97
 33078  00968C                     __ptext97:
 33079                           	opt stack 0
 33080  00968C                     _USBCheckStdRequest:
 33081                           	opt stack 3
 33082                           
 33083                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 33084                           
 33085                           ;incstack = 0
 33086  00968C  010D               	movlb	13	; () banked
 33087  00968E  3920               	swapf	32,w,b	;volatile
 33088  009690  32E8               	rrcf	wreg,f,c
 33089  009692  0B03               	andlw	3
 33090  009694  0900               	iorlw	0
 33091  009696  A4D8               	btfss	status,2,c
 33092  009698  0012               	return	
 33093  00969A  D04F               	goto	i1l11613
 33094  00969C                     i1l1435:
 33095                           
 33096                           ; BSR set to: 13
 33097                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 33098  00969C  0100               	movlb	0	; () banked
 33099  00969E  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33100                           
 33101                           ; BSR set to: 0
 33102                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 33103  0096A0  0E08               	movlw	8
 33104  0096A2  6E4B               	movwf	_USBDeviceState,c	;volatile
 33105                           
 33106                           ;usb_device.c: 2699: break;
 33107  0096A4  0012               	return	
 33108  0096A6                     i1l11583:
 33109                           
 33110                           ;usb_device.c: 2701: USBStdGetDscHandler();
 33111  0096A6  ECE5  F03F         	call	_USBStdGetDscHandler	;wreg free
 33112                           
 33113                           ;usb_device.c: 2702: break;
 33114  0096AA  0012               	return	
 33115  0096AC                     i1l11585:
 33116                           
 33117                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 33118  0096AC  EC35  F04C         	call	_USBStdSetCfgHandler	;wreg free
 33119                           
 33120                           ;usb_device.c: 2705: break;
 33121  0096B0  0012               	return	
 33122  0096B2                     i1l11587:
 33123                           
 33124                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 33125  0096B2  0E56               	movlw	low _USBActiveConfiguration
 33126  0096B4  0100               	movlb	0	; () banked
 33127  0096B6  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33128  0096B8  0E00               	movlw	high _USBActiveConfiguration
 33129  0096BA  0100               	movlb	0	; () banked
 33130  0096BC  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33131                           
 33132                           ; BSR set to: 0
 33133                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33134  0096BE  0100               	movlb	0	; () banked
 33135  0096C0  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33136                           
 33137                           ; BSR set to: 0
 33138                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 33139  0096C2  0E01               	movlw	1
 33140  0096C4  0100               	movlb	0	; () banked
 33141  0096C6  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33142                           
 33143                           ; BSR set to: 0
 33144                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 33145  0096C8  0100               	movlb	0	; () banked
 33146  0096CA  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33147                           
 33148                           ;usb_device.c: 2711: break;
 33149  0096CC  0012               	return	
 33150  0096CE                     i1l11595:
 33151                           
 33152                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 33153  0096CE  EC74  F052         	call	_USBStdGetStatusHandler	;wreg free
 33154                           
 33155                           ;usb_device.c: 2714: break;
 33156  0096D2  0012               	return	
 33157  0096D4                     i1l11597:
 33158                           
 33159                           ;usb_device.c: 2716: case 3:
 33160                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 33161  0096D4  EC2E  F033         	call	_USBStdFeatureReqHandler	;wreg free
 33162                           
 33163                           ;usb_device.c: 2718: break;
 33164  0096D8  0012               	return	
 33165  0096DA                     i1l11599:
 33166                           
 33167                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 33168  0096DA  010D               	movlb	13	; () banked
 33169  0096DC  5124               	movf	36,w,b	;volatile
 33170  0096DE  0D01               	mullw	1
 33171  0096E0  0E57               	movlw	low _USBAlternateInterface
 33172  0096E2  24F3               	addwf	prodl,w,c
 33173  0096E4  0100               	movlb	0	; () banked
 33174  0096E6  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33175  0096E8  0E00               	movlw	high _USBAlternateInterface
 33176  0096EA  20F4               	addwfc	prodh,w,c
 33177  0096EC  0100               	movlb	0	; () banked
 33178  0096EE  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33179                           
 33180                           ; BSR set to: 0
 33181                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33182  0096F0  0100               	movlb	0	; () banked
 33183  0096F2  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33184                           
 33185                           ; BSR set to: 0
 33186                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 33187  0096F4  0E01               	movlw	1
 33188  0096F6  0100               	movlb	0	; () banked
 33189  0096F8  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33190                           
 33191                           ; BSR set to: 0
 33192                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 33193  0096FA  0100               	movlb	0	; () banked
 33194  0096FC  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33195                           
 33196                           ;usb_device.c: 2724: break;
 33197  0096FE  0012               	return	
 33198  009700                     i1l1444:
 33199                           
 33200                           ; BSR set to: 13
 33201                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 33202  009700  0100               	movlb	0	; () banked
 33203  009702  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 33207  009704  010D               	movlb	13	; () banked
 33208  009706  5124               	movf	36,w,b	;volatile
 33209  009708  0D01               	mullw	1
 33210  00970A  0E57               	movlw	low _USBAlternateInterface
 33211  00970C  24F3               	addwf	prodl,w,c
 33212  00970E  6ED9               	movwf	fsr2l,c
 33213  009710  0E00               	movlw	high _USBAlternateInterface
 33214  009712  20F4               	addwfc	prodh,w,c
 33215  009714  6EDA               	movwf	fsr2h,c
 33216  009716  CD22 FFDF          	movff	3362,indf2	;volatile
 33217                           
 33218                           ;usb_device.c: 2728: break;
 33219  00971A  0012               	return	
 33220  00971C                     i1l11609:
 33221                           
 33222                           ; BSR set to: 13
 33223                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 33224  00971C  0E00               	movlw	0
 33225  00971E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33226  009720  0E02               	movlw	2
 33227  009722  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33228  009724  0E00               	movlw	0
 33229  009726  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33230  009728  0E00               	movlw	0
 33231  00972A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33232  00972C  0E00               	movlw	0
 33233  00972E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33234  009730  0E00               	movlw	0
 33235  009732  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33236  009734  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33237                           
 33238                           ;usb_device.c: 2735: }
 33239                           
 33240                           ;usb_device.c: 2734: break;
 33241                           
 33242                           ;usb_device.c: 2733: default:
 33243                           
 33244                           ;usb_device.c: 2732: case 12:
 33245                           
 33246                           ;usb_device.c: 2731: break;
 33247  009738  0012               	return	
 33248  00973A                     i1l11613:
 33249  00973A  010D               	movlb	13	; () banked
 33250  00973C  5121               	movf	33,w,b	;volatile
 33251                           
 33252                           ; Switch size 1, requested type "space"
 33253                           ; Number of cases is 11, Range of values is 0 to 12
 33254                           ; switch strategies available:
 33255                           ; Name         Instructions Cycles
 33256                           ; simple_byte           34    18 (average)
 33257                           ;	Chosen strategy is simple_byte
 33258  00973E  0A00               	xorlw	0	; case 0
 33259  009740  B4D8               	btfsc	status,2,c
 33260  009742  D7C5               	goto	i1l11595
 33261  009744  0A01               	xorlw	1	; case 1
 33262  009746  B4D8               	btfsc	status,2,c
 33263  009748  D7C5               	goto	i1l11597
 33264  00974A  0A02               	xorlw	2	; case 3
 33265  00974C  B4D8               	btfsc	status,2,c
 33266  00974E  D7C2               	goto	i1l11597
 33267  009750  0A06               	xorlw	6	; case 5
 33268  009752  B4D8               	btfsc	status,2,c
 33269  009754  D7A3               	goto	i1l1435
 33270  009756  0A03               	xorlw	3	; case 6
 33271  009758  B4D8               	btfsc	status,2,c
 33272  00975A  D7A5               	goto	i1l11583
 33273  00975C  0A01               	xorlw	1	; case 7
 33274  00975E  B4D8               	btfsc	status,2,c
 33275  009760  D7DD               	goto	i1l11609
 33276  009762  0A0F               	xorlw	15	; case 8
 33277  009764  B4D8               	btfsc	status,2,c
 33278  009766  D7A5               	goto	i1l11587
 33279  009768  0A01               	xorlw	1	; case 9
 33280  00976A  B4D8               	btfsc	status,2,c
 33281  00976C  D79F               	goto	i1l11585
 33282  00976E  0A03               	xorlw	3	; case 10
 33283  009770  B4D8               	btfsc	status,2,c
 33284  009772  D7B3               	goto	i1l11599
 33285  009774  0A01               	xorlw	1	; case 11
 33286  009776  B4D8               	btfsc	status,2,c
 33287  009778  D7C3               	goto	i1l1444
 33288  00977A  0A07               	xorlw	7	; case 12
 33289  00977C  0012               	return	
 33290  00977E                     __end_of_USBCheckStdRequest:
 33291                           	opt stack 0
 33292                           pclatu	equ	0xFFB
 33293                           pclath	equ	0xFFA
 33294                           tblptru	equ	0xFF8
 33295                           tblptrh	equ	0xFF7
 33296                           tblptrl	equ	0xFF6
 33297                           tablat	equ	0xFF5
 33298                           prodh	equ	0xFF4
 33299                           prodl	equ	0xFF3
 33300                           intcon	equ	0xFF2
 33301                           intcon2	equ	0xFF1
 33302                           intcon3	equ	0xFF0
 33303                           indf0	equ	0xFEF
 33304                           postinc0	equ	0xFEE
 33305                           plusw0	equ	0xFEB
 33306                           fsr0h	equ	0xFEA
 33307                           fsr0l	equ	0xFE9
 33308                           wreg	equ	0xFE8
 33309                           indf1	equ	0xFE7
 33310                           postinc1	equ	0xFE6
 33311                           postdec1	equ	0xFE5
 33312                           plusw1	equ	0xFE3
 33313                           fsr1h	equ	0xFE2
 33314                           fsr1l	equ	0xFE1
 33315                           bsr	equ	0xFE0
 33316                           indf2	equ	0xFDF
 33317                           postinc2	equ	0xFDE
 33318                           postdec2	equ	0xFDD
 33319                           plusw2	equ	0xFDB
 33320                           fsr2h	equ	0xFDA
 33321                           fsr2l	equ	0xFD9
 33322                           status	equ	0xFD8
 33323                           
 33324 ;; *************** function _USBStdSetCfgHandler *****************
 33325 ;; Defined at:
 33326 ;;		line 1968 in file "src/usb/usb_device.c"
 33327 ;; Parameters:    Size  Location     Type
 33328 ;;		None
 33329 ;; Auto vars:     Size  Location     Type
 33330 ;;  i               1   20[COMRAM] unsigned char 
 33331 ;; Return value:  Size  Location     Type
 33332 ;;		None               void
 33333 ;; Registers used:
 33334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33335 ;; Tracked objects:
 33336 ;;		On entry : 0/0
 33337 ;;		On exit  : 0/0
 33338 ;;		Unchanged: 0/0
 33339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33344 ;;Total ram usage:        1 bytes
 33345 ;; Hardware stack levels used:    1
 33346 ;; Hardware stack levels required when called:   10
 33347 ;; This function calls:
 33348 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33349 ;;		i1_memset
 33350 ;; This function is called by:
 33351 ;;		_USBCheckStdRequest
 33352 ;; This function uses a non-reentrant model
 33353 ;;
 33354                           
 33355                           	psect	text98
 33356  00986A                     __ptext98:
 33357                           	opt stack 0
 33358  00986A                     _USBStdSetCfgHandler:
 33359                           	opt stack 3
 33360                           
 33361                           ;usb_device.c: 1970: uint8_t i;
 33362                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 33363                           
 33364                           ;incstack = 0
 33365  00986A  0100               	movlb	0	; () banked
 33366  00986C  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33367                           
 33368                           ; BSR set to: 0
 33369                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(1));;
 33370  00986E  0E27               	movlw	39
 33371  009870  6E01               	movwf	i1memset@p1,c
 33372  009872  0E0F               	movlw	15
 33373  009874  6E02               	movwf	i1memset@p1+1,c
 33374  009876  0E00               	movlw	0
 33375  009878  6E04               	movwf	i1memset@c+1,c
 33376  00987A  0E00               	movlw	0
 33377  00987C  6E03               	movwf	i1memset@c,c
 33378  00987E  0E00               	movlw	0
 33379  009880  6E06               	movwf	i1memset@n+1,c
 33380  009882  0E01               	movlw	1
 33381  009884  6E05               	movwf	i1memset@n,c
 33382  009886  EC1B  F05D         	call	i1_memset	;wreg free
 33383                           
 33384                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 33385  00988A  0E00               	movlw	0
 33386  00988C  6E01               	movwf	i1memset@p1,c
 33387  00988E  0E0D               	movlw	13
 33388  009890  6E02               	movwf	i1memset@p1+1,c
 33389  009892  0E00               	movlw	0
 33390  009894  6E04               	movwf	i1memset@c+1,c
 33391  009896  0E00               	movlw	0
 33392  009898  6E03               	movwf	i1memset@c,c
 33393  00989A  0E00               	movlw	0
 33394  00989C  6E06               	movwf	i1memset@n+1,c
 33395  00989E  0E20               	movlw	32
 33396  0098A0  6E05               	movwf	i1memset@n,c
 33397  0098A2  EC1B  F05D         	call	i1_memset	;wreg free
 33398                           
 33399                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 33400  0098A6  8C65               	bsf	3941,6,c	;volatile
 33401                           
 33402                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
 33403  0098A8  0E00               	movlw	0
 33404  0098AA  6E15               	movwf	USBStdSetCfgHandler@i,c
 33405  0098AC                     i1l11041:
 33406  0098AC  0E01               	movlw	1
 33407  0098AE  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 33408  0098B0  D001               	goto	i1l11045
 33409  0098B2  D016               	goto	i1l11051
 33410  0098B4                     i1l11045:
 33411                           
 33412                           ;usb_device.c: 1988: {
 33413                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 33414  0098B4  5015               	movf	USBStdSetCfgHandler@i,w,c
 33415  0098B6  0D01               	mullw	1
 33416  0098B8  0E95               	movlw	low _ep_data_in
 33417  0098BA  24F3               	addwf	prodl,w,c
 33418  0098BC  6ED9               	movwf	fsr2l,c
 33419  0098BE  0E00               	movlw	high _ep_data_in
 33420  0098C0  20F4               	addwfc	prodh,w,c
 33421  0098C2  6EDA               	movwf	fsr2h,c
 33422  0098C4  0E00               	movlw	0
 33423  0098C6  6EDF               	movwf	indf2,c
 33424                           
 33425                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 33426  0098C8  5015               	movf	USBStdSetCfgHandler@i,w,c
 33427  0098CA  0D01               	mullw	1
 33428  0098CC  0E97               	movlw	low _ep_data_out
 33429  0098CE  24F3               	addwf	prodl,w,c
 33430  0098D0  6ED9               	movwf	fsr2l,c
 33431  0098D2  0E00               	movlw	high _ep_data_out
 33432  0098D4  20F4               	addwfc	prodh,w,c
 33433  0098D6  6EDA               	movwf	fsr2h,c
 33434  0098D8  0E00               	movlw	0
 33435  0098DA  6EDF               	movwf	indf2,c
 33436  0098DC  2A15               	incf	USBStdSetCfgHandler@i,f,c
 33437  0098DE  D7E6               	goto	i1l11041
 33438  0098E0                     i1l11051:
 33439                           
 33440                           ;usb_device.c: 1991: }
 33441                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
 33442  0098E0  0E57               	movlw	low _USBAlternateInterface
 33443  0098E2  6E01               	movwf	i1memset@p1,c
 33444  0098E4  0E00               	movlw	high _USBAlternateInterface
 33445  0098E6  6E02               	movwf	i1memset@p1+1,c
 33446  0098E8  0E00               	movlw	0
 33447  0098EA  6E04               	movwf	i1memset@c+1,c
 33448  0098EC  0E00               	movlw	0
 33449  0098EE  6E03               	movwf	i1memset@c,c
 33450  0098F0  0E00               	movlw	0
 33451  0098F2  6E06               	movwf	i1memset@n+1,c
 33452  0098F4  0E01               	movlw	1
 33453  0098F6  6E05               	movwf	i1memset@n,c
 33454  0098F8  EC1B  F05D         	call	i1_memset	;wreg free
 33455                           
 33456                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 33457  0098FC  9C65               	bcf	3941,6,c	;volatile
 33458                           
 33459                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33460  0098FE  0E08               	movlw	8
 33461  009900  0100               	movlb	0	; () banked
 33462  009902  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 33463  009904  0E0D               	movlw	13
 33464  009906  0100               	movlb	0	; () banked
 33465  009908  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33466                           
 33467                           ; BSR set to: 0
 33468                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 33469  00990A  0E00               	movlw	0
 33470  00990C  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 33471  00990E  0E0D               	movlw	13
 33472  009910  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 33473                           
 33474                           ; BSR set to: 0
 33475                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 33476  009912  C038  F03A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 33477  009916  C039  F03B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 33478                           
 33479                           ; BSR set to: 0
 33480                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 33481  00991A  CD22 F056          	movff	3362,_USBActiveConfiguration	;volatile
 33482                           
 33483                           ; BSR set to: 0
 33484                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 33485  00991E  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 33486  009920  A4D8               	btfss	status,2,c
 33487  009922  D003               	goto	i1l11067
 33488                           
 33489                           ; BSR set to: 0
 33490                           ;usb_device.c: 2010: {
 33491                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 33492  009924  0E10               	movlw	16
 33493  009926  6E4B               	movwf	_USBDeviceState,c	;volatile
 33494                           
 33495                           ;usb_device.c: 2013: }
 33496  009928  0012               	return	
 33497  00992A                     i1l11067:
 33498                           
 33499                           ; BSR set to: 0
 33500                           ;usb_device.c: 2014: else
 33501                           ;usb_device.c: 2015: {
 33502                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 33503  00992A  0E00               	movlw	0
 33504  00992C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33505  00992E  0E01               	movlw	1
 33506  009930  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33507  009932  0E56               	movlw	low _USBActiveConfiguration
 33508  009934  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33509  009936  0E00               	movlw	high _USBActiveConfiguration
 33510  009938  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33511  00993A  0E00               	movlw	0
 33512  00993C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33513  00993E  0E01               	movlw	1
 33514  009940  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33515  009942  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33516                           
 33517                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 33518  009946  0E20               	movlw	32
 33519  009948  6E4B               	movwf	_USBDeviceState,c	;volatile
 33520  00994A  0012               	return	
 33521  00994C                     __end_of_USBStdSetCfgHandler:
 33522                           	opt stack 0
 33523                           pclatu	equ	0xFFB
 33524                           pclath	equ	0xFFA
 33525                           tblptru	equ	0xFF8
 33526                           tblptrh	equ	0xFF7
 33527                           tblptrl	equ	0xFF6
 33528                           tablat	equ	0xFF5
 33529                           prodh	equ	0xFF4
 33530                           prodl	equ	0xFF3
 33531                           intcon	equ	0xFF2
 33532                           intcon2	equ	0xFF1
 33533                           intcon3	equ	0xFF0
 33534                           indf0	equ	0xFEF
 33535                           postinc0	equ	0xFEE
 33536                           plusw0	equ	0xFEB
 33537                           fsr0h	equ	0xFEA
 33538                           fsr0l	equ	0xFE9
 33539                           wreg	equ	0xFE8
 33540                           indf1	equ	0xFE7
 33541                           postinc1	equ	0xFE6
 33542                           postdec1	equ	0xFE5
 33543                           plusw1	equ	0xFE3
 33544                           fsr1h	equ	0xFE2
 33545                           fsr1l	equ	0xFE1
 33546                           bsr	equ	0xFE0
 33547                           indf2	equ	0xFDF
 33548                           postinc2	equ	0xFDE
 33549                           postdec2	equ	0xFDD
 33550                           plusw2	equ	0xFDB
 33551                           fsr2h	equ	0xFDA
 33552                           fsr2l	equ	0xFD9
 33553                           status	equ	0xFD8
 33554                           
 33555 ;; *************** function i1_memset *****************
 33556 ;; Defined at:
 33557 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 33558 ;; Parameters:    Size  Location     Type
 33559 ;;  p1              2    0[COMRAM] PTR void 
 33560 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 33561 ;;  c               2    2[COMRAM] int 
 33562 ;;  n               2    4[COMRAM] unsigned int 
 33563 ;; Auto vars:     Size  Location     Type
 33564 ;;  memset          2    6[COMRAM] PTR unsigned char 
 33565 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 33566 ;; Return value:  Size  Location     Type
 33567 ;;                  2    0[COMRAM] PTR void 
 33568 ;; Registers used:
 33569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33570 ;; Tracked objects:
 33571 ;;		On entry : 0/0
 33572 ;;		On exit  : 0/0
 33573 ;;		Unchanged: 0/0
 33574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33575 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33578 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33579 ;;Total ram usage:        8 bytes
 33580 ;; Hardware stack levels used:    1
 33581 ;; Hardware stack levels required when called:    6
 33582 ;; This function calls:
 33583 ;;		Nothing
 33584 ;; This function is called by:
 33585 ;;		_USBStdSetCfgHandler
 33586 ;;		i1_USBDeviceInit
 33587 ;; This function uses a non-reentrant model
 33588 ;;
 33589                           
 33590                           	psect	text99
 33591  00BA36                     __ptext99:
 33592                           	opt stack 0
 33593  00BA36                     i1_memset:
 33594                           	opt stack 9
 33595                           
 33596                           ;incstack = 0
 33597  00BA36  C001  F007         	movff	i1memset@p1,i1memset@p
 33598  00BA3A  C002  F008         	movff	i1memset@p1+1,i1memset@p+1
 33599  00BA3E  D008               	goto	i1l10603
 33600  00BA40                     i1l10599:
 33601  00BA40  C007  FFD9         	movff	i1memset@p,fsr2l
 33602  00BA44  C008  FFDA         	movff	i1memset@p+1,fsr2h
 33603  00BA48  C003  FFDF         	movff	i1memset@c,indf2
 33604  00BA4C  4A07               	infsnz	i1memset@p,f,c
 33605  00BA4E  2A08               	incf	i1memset@p+1,f,c
 33606  00BA50                     i1l10603:
 33607  00BA50  0605               	decf	i1memset@n,f,c
 33608  00BA52  A0D8               	btfss	status,0,c
 33609  00BA54  0606               	decf	i1memset@n+1,f,c
 33610  00BA56  2805               	incf	i1memset@n,w,c
 33611  00BA58  E1F3               	bnz	i1l10599
 33612  00BA5A  2806               	incf	i1memset@n+1,w,c
 33613  00BA5C  B4D8               	btfsc	status,2,c
 33614  00BA5E  0012               	return	
 33615  00BA60  D7EF               	goto	i1l10599
 33616  00BA62                     __end_ofi1_memset:
 33617                           	opt stack 0
 33618                           pclatu	equ	0xFFB
 33619                           pclath	equ	0xFFA
 33620                           tblptru	equ	0xFF8
 33621                           tblptrh	equ	0xFF7
 33622                           tblptrl	equ	0xFF6
 33623                           tablat	equ	0xFF5
 33624                           prodh	equ	0xFF4
 33625                           prodl	equ	0xFF3
 33626                           intcon	equ	0xFF2
 33627                           intcon2	equ	0xFF1
 33628                           intcon3	equ	0xFF0
 33629                           indf0	equ	0xFEF
 33630                           postinc0	equ	0xFEE
 33631                           plusw0	equ	0xFEB
 33632                           fsr0h	equ	0xFEA
 33633                           fsr0l	equ	0xFE9
 33634                           wreg	equ	0xFE8
 33635                           indf1	equ	0xFE7
 33636                           postinc1	equ	0xFE6
 33637                           postdec1	equ	0xFE5
 33638                           plusw1	equ	0xFE3
 33639                           fsr1h	equ	0xFE2
 33640                           fsr1l	equ	0xFE1
 33641                           bsr	equ	0xFE0
 33642                           indf2	equ	0xFDF
 33643                           postinc2	equ	0xFDE
 33644                           postdec2	equ	0xFDD
 33645                           plusw2	equ	0xFDB
 33646                           fsr2h	equ	0xFDA
 33647                           fsr2l	equ	0xFD9
 33648                           status	equ	0xFD8
 33649                           
 33650 ;; *************** function _USBStdGetStatusHandler *****************
 33651 ;; Defined at:
 33652 ;;		line 2129 in file "src/usb/usb_device.c"
 33653 ;; Parameters:    Size  Location     Type
 33654 ;;		None
 33655 ;; Auto vars:     Size  Location     Type
 33656 ;;  p               2    1[COMRAM] PTR struct __BDT
 33657 ;;		 -> BDT(32), NULL(0), 
 33658 ;; Return value:  Size  Location     Type
 33659 ;;		None               void
 33660 ;; Registers used:
 33661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33662 ;; Tracked objects:
 33663 ;;		On entry : 0/0
 33664 ;;		On exit  : 0/0
 33665 ;;		Unchanged: 0/0
 33666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33670 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33671 ;;Total ram usage:        3 bytes
 33672 ;; Hardware stack levels used:    1
 33673 ;; Hardware stack levels required when called:    6
 33674 ;; This function calls:
 33675 ;;		Nothing
 33676 ;; This function is called by:
 33677 ;;		_USBCheckStdRequest
 33678 ;; This function uses a non-reentrant model
 33679 ;;
 33680                           
 33681                           	psect	text100
 33682  00A4E8                     __ptext100:
 33683                           	opt stack 0
 33684  00A4E8                     _USBStdGetStatusHandler:
 33685                           	opt stack 7
 33686                           
 33687                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 33688                           
 33689                           ;incstack = 0
 33690  00A4E8  0E00               	movlw	0
 33691  00A4EA  010D               	movlb	13	; () banked
 33692  00A4EC  6F28               	movwf	40,b	;volatile
 33693                           
 33694                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 33695  00A4EE  0E00               	movlw	0
 33696  00A4F0  010D               	movlb	13	; () banked
 33697  00A4F2  6F29               	movwf	41,b	;volatile
 33698                           
 33699                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 33700  00A4F4  D03B               	goto	i1l11123
 33701  00A4F6                     i1l1371:
 33702                           
 33703                           ; BSR set to: 13
 33704                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 33705  00A4F6  0100               	movlb	0	; () banked
 33706  00A4F8  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33707                           
 33708                           ;usb_device.c: 2145: }
 33709                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 33710                           
 33711                           ; BSR set to: 13
 33712                           
 33713                           ; BSR set to: 0
 33714                           ;usb_device.c: 2143: {
 33715                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 33716                           
 33717                           ;usb_device.c: 2142: if(0 == 1)
 33718  00A4FA  0446               	decf	_RemoteWakeup,w,c	;volatile
 33719  00A4FC  A4D8               	btfss	status,2,c
 33720  00A4FE  D042               	goto	i1l1374
 33721                           
 33722                           ;usb_device.c: 2148: {
 33723                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 33724  00A500  010D               	movlb	13	; () banked
 33725  00A502  8328               	bsf	40,1,b	;volatile
 33726                           
 33727                           ; BSR set to: 13
 33728                           ;usb_device.c: 2150: }
 33729                           ;usb_device.c: 2151: break;
 33730  00A504  D03F               	goto	i1l1374
 33731  00A506                     i1l1375:
 33732                           
 33733                           ; BSR set to: 13
 33734                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 33735  00A506  0100               	movlb	0	; () banked
 33736  00A508  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33737                           
 33738                           ;usb_device.c: 2154: break;
 33739  00A50A  D03C               	goto	i1l1374
 33740  00A50C                     i1l1376:
 33741                           
 33742                           ; BSR set to: 13
 33743                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 33744  00A50C  0100               	movlb	0	; () banked
 33745  00A50E  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33746                           
 33747                           ;usb_device.c: 2160: {
 33748                           ;usb_device.c: 2161: BDT_ENTRY *p;
 33749                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 33750  00A510  010D               	movlb	13	; () banked
 33751  00A512  BF24               	btfsc	36,7,b	;volatile
 33752  00A514  D00B               	goto	i1l11113
 33753                           
 33754                           ; BSR set to: 13
 33755                           ;usb_device.c: 2164: {
 33756                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 33757  00A516  010D               	movlb	13	; () banked
 33758  00A518  5124               	movf	36,w,b	;volatile
 33759  00A51A  0B0F               	andlw	15
 33760  00A51C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 33761  00A51E  5001               	movf	??_USBStdGetStatusHandler,w,c
 33762  00A520  0D02               	mullw	2
 33763  00A522  0E8F               	movlw	low _pBDTEntryOut
 33764  00A524  24F3               	addwf	prodl,w,c
 33765  00A526  6ED9               	movwf	fsr2l,c
 33766  00A528  0E00               	movlw	high _pBDTEntryOut
 33767  00A52A  D00A               	goto	L16
 33768  00A52C                     i1l11113:
 33769                           
 33770                           ; BSR set to: 13
 33771                           ;usb_device.c: 2167: else
 33772                           ;usb_device.c: 2168: {
 33773                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 33774  00A52C  010D               	movlb	13	; () banked
 33775  00A52E  5124               	movf	36,w,b	;volatile
 33776  00A530  0B0F               	andlw	15
 33777  00A532  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 33778  00A534  5001               	movf	??_USBStdGetStatusHandler,w,c
 33779  00A536  0D02               	mullw	2
 33780  00A538  0E8B               	movlw	low _pBDTEntryIn
 33781  00A53A  24F3               	addwf	prodl,w,c
 33782  00A53C  6ED9               	movwf	fsr2l,c
 33783  00A53E  0E00               	movlw	high _pBDTEntryIn
 33784  00A540                     L16:
 33785  00A540  20F4               	addwfc	prodh,w,c
 33786  00A542  6EDA               	movwf	fsr2h,c
 33787  00A544  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 33788  00A548  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 33789                           
 33790                           ; BSR set to: 13
 33791                           ;usb_device.c: 2170: }
 33792                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 33793                           
 33794                           ; BSR set to: 13
 33795  00A54C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 33796  00A550  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 33797  00A554  AEDF               	btfss	indf2,7,c
 33798  00A556  D016               	goto	i1l1374
 33799                           
 33800                           ; BSR set to: 13
 33801  00A558  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 33802  00A55C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 33803  00A560  A4DF               	btfss	indf2,2,c
 33804  00A562  D010               	goto	i1l1374
 33805                           
 33806                           ; BSR set to: 13
 33807                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 33808  00A564  0E01               	movlw	1
 33809  00A566  010D               	movlb	13	; () banked
 33810  00A568  6F28               	movwf	40,b	;volatile
 33811                           
 33812                           ; BSR set to: 13
 33813                           ;usb_device.c: 2175: }
 33814                           ;usb_device.c: 2176: }
 33815                           
 33816                           ; BSR set to: 13
 33817                           ;usb_device.c: 2174: break;
 33818  00A56A  D00C               	goto	i1l1374
 33819  00A56C                     i1l11123:
 33820                           
 33821                           ; BSR set to: 13
 33822  00A56C  010D               	movlb	13	; () banked
 33823  00A56E  5120               	movf	32,w,b	;volatile
 33824  00A570  0B1F               	andlw	31
 33825                           
 33826                           ; Switch size 1, requested type "space"
 33827                           ; Number of cases is 3, Range of values is 0 to 2
 33828                           ; switch strategies available:
 33829                           ; Name         Instructions Cycles
 33830                           ; simple_byte           10     6 (average)
 33831                           ;	Chosen strategy is simple_byte
 33832  00A572  0A00               	xorlw	0	; case 0
 33833  00A574  B4D8               	btfsc	status,2,c
 33834  00A576  D7BF               	goto	i1l1371
 33835  00A578  0A01               	xorlw	1	; case 1
 33836  00A57A  B4D8               	btfsc	status,2,c
 33837  00A57C  D7C4               	goto	i1l1375
 33838  00A57E  0A03               	xorlw	3	; case 2
 33839  00A580  B4D8               	btfsc	status,2,c
 33840  00A582  D7C4               	goto	i1l1376
 33841  00A584                     i1l1374:
 33842                           
 33843                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 33844  00A584  0100               	movlb	0	; () banked
 33845  00A586  AF84               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 33846  00A588  0012               	return	
 33847                           
 33848                           ; BSR set to: 0
 33849                           ;usb_device.c: 2179: {
 33850                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 33851  00A58A  0E28               	movlw	40
 33852  00A58C  0100               	movlb	0	; () banked
 33853  00A58E  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33854  00A590  0E0D               	movlw	13
 33855  00A592  0100               	movlb	0	; () banked
 33856  00A594  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33857                           
 33858                           ; BSR set to: 0
 33859                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33860  00A596  0100               	movlb	0	; () banked
 33861  00A598  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 33865  00A59A  0E02               	movlw	2
 33866  00A59C  0100               	movlb	0	; () banked
 33867  00A59E  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33868  00A5A0  0012               	return	
 33869  00A5A2                     __end_of_USBStdGetStatusHandler:
 33870                           	opt stack 0
 33871                           pclatu	equ	0xFFB
 33872                           pclath	equ	0xFFA
 33873                           tblptru	equ	0xFF8
 33874                           tblptrh	equ	0xFF7
 33875                           tblptrl	equ	0xFF6
 33876                           tablat	equ	0xFF5
 33877                           prodh	equ	0xFF4
 33878                           prodl	equ	0xFF3
 33879                           intcon	equ	0xFF2
 33880                           intcon2	equ	0xFF1
 33881                           intcon3	equ	0xFF0
 33882                           indf0	equ	0xFEF
 33883                           postinc0	equ	0xFEE
 33884                           plusw0	equ	0xFEB
 33885                           fsr0h	equ	0xFEA
 33886                           fsr0l	equ	0xFE9
 33887                           wreg	equ	0xFE8
 33888                           indf1	equ	0xFE7
 33889                           postinc1	equ	0xFE6
 33890                           postdec1	equ	0xFE5
 33891                           plusw1	equ	0xFE3
 33892                           fsr1h	equ	0xFE2
 33893                           fsr1l	equ	0xFE1
 33894                           bsr	equ	0xFE0
 33895                           indf2	equ	0xFDF
 33896                           postinc2	equ	0xFDE
 33897                           postdec2	equ	0xFDD
 33898                           plusw2	equ	0xFDB
 33899                           fsr2h	equ	0xFDA
 33900                           fsr2l	equ	0xFD9
 33901                           status	equ	0xFD8
 33902                           
 33903 ;; *************** function _USBStdGetDscHandler *****************
 33904 ;; Defined at:
 33905 ;;		line 2043 in file "src/usb/usb_device.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;		None
 33908 ;; Auto vars:     Size  Location     Type
 33909 ;;		None
 33910 ;; Return value:  Size  Location     Type
 33911 ;;		None               void
 33912 ;; Registers used:
 33913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33914 ;; Tracked objects:
 33915 ;;		On entry : 0/0
 33916 ;;		On exit  : 0/0
 33917 ;;		Unchanged: 0/0
 33918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33923 ;;Total ram usage:        2 bytes
 33924 ;; Hardware stack levels used:    1
 33925 ;; Hardware stack levels required when called:    6
 33926 ;; This function calls:
 33927 ;;		Nothing
 33928 ;; This function is called by:
 33929 ;;		_USBCheckStdRequest
 33930 ;; This function uses a non-reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text101
 33934  007FCA                     __ptext101:
 33935                           	opt stack 0
 33936  007FCA                     _USBStdGetDscHandler:
 33937                           	opt stack 7
 33938                           
 33939                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 33940                           
 33941                           ; BSR set to: 0
 33942                           ;incstack = 0
 33943  007FCA  0E80               	movlw	128
 33944  007FCC  010D               	movlb	13	; () banked
 33945  007FCE  1920               	xorwf	32,w,b	;volatile
 33946  007FD0  A4D8               	btfss	status,2,c
 33947  007FD2  0012               	return	
 33948                           
 33949                           ; BSR set to: 13
 33950                           ;usb_device.c: 2046: {
 33951                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 33952  007FD4  0EC0               	movlw	192
 33953  007FD6  0100               	movlb	0	; () banked
 33954  007FD8  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 33955                           
 33956                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 33957  007FDA  D092               	goto	i1l11101
 33958  007FDC                     i1l11075:
 33959                           
 33960                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 33961  007FDC  0E77               	movlw	low _device_dsc
 33962  007FDE  0100               	movlb	0	; () banked
 33963  007FE0  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33964  007FE2  0E21               	movlw	high _device_dsc
 33965  007FE4  0100               	movlb	0	; () banked
 33966  007FE6  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33967                           
 33968                           ; BSR set to: 0
 33969                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 33970  007FE8  0E00               	movlw	0
 33971  007FEA  0100               	movlb	0	; () banked
 33972  007FEC  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 33973  007FEE  0E12               	movlw	18
 33974  007FF0  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33975                           
 33976                           ;usb_device.c: 2058: break;
 33977  007FF2  0012               	return	
 33978  007FF4                     i1l11079:
 33979                           
 33980                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 33981  007FF4  010D               	movlb	13	; () banked
 33982  007FF6  5122               	movf	34,w,b	;volatile
 33983  007FF8  A4D8               	btfss	status,2,c
 33984  007FFA  D049               	goto	i1l11087
 33985                           
 33986                           ; BSR set to: 13
 33987                           ;usb_device.c: 2064: {
 33988                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 33989  007FFC  010D               	movlb	13	; () banked
 33990  007FFE  5122               	movf	34,w,b	;volatile
 33991  008000  0D02               	mullw	2
 33992  008002  0ECD               	movlw	low _USB_CD_Ptr
 33993  008004  24F3               	addwf	prodl,w,c
 33994  008006  6EF6               	movwf	tblptrl,c
 33995  008008  0E20               	movlw	high _USB_CD_Ptr
 33996  00800A  20F4               	addwfc	prodh,w,c
 33997  00800C  6EF7               	movwf	tblptrh,c
 33998  00800E                     	if	1	;There are 3 active tblptr bytes
 33999  00800E  6AF8               	clrf	tblptru,c
 34000  008010  0E00               	movlw	low (__mediumconst shr (0+16))
 34001  008012  22F8               	addwfc	tblptru,f,c
 34002  008014                     	endif
 34003  008014  0009               	tblrd		*+
 34004  008016  CFF5 F081          	movff	tablat,_inPipes	;volatile
 34005  00801A  000A               	tblrd		*-
 34006  00801C  CFF5 F082          	movff	tablat,_inPipes+1	;volatile
 34007                           
 34008                           ; BSR set to: 13
 34009                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 34010  008020  0E02               	movlw	2
 34011  008022  0100               	movlb	0	; () banked
 34012  008024  2581               	addwf	_inPipes& (0+255),w,b	;volatile
 34013  008026  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 34014  008028  0E00               	movlw	0
 34015  00802A  0100               	movlb	0	; () banked
 34016  00802C  2182               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 34017  00802E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 34018  008030  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 34019  008034  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 34020  008038  0E00               	movlw	low (__mediumconst shr (0+16))
 34021  00803A  6EF8               	movwf	tblptru,c
 34022  00803C  0E0E               	movlw	(high __ramtop+-1)
 34023  00803E  64F7               	cpfsgt	tblptrh,c
 34024  008040  D003               	bra	i1u1068_27
 34025  008042  0008               	tblrd		*
 34026  008044  50F5               	movf	tablat,w,c
 34027  008046  D005               	bra	i1u1068_20
 34028  008048                     i1u1068_27:
 34029  008048  CFF6 FFE9          	movff	tblptrl,fsr0l
 34030  00804C  CFF7 FFEA          	movff	tblptrh,fsr0h
 34031  008050  50EF               	movf	indf0,w,c
 34032  008052                     i1u1068_20:
 34033  008052  0100               	movlb	0	; () banked
 34034  008054  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 34035                           
 34036                           ; BSR set to: 0
 34037                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 34038  008056  0E03               	movlw	3
 34039  008058  0100               	movlb	0	; () banked
 34040  00805A  2581               	addwf	_inPipes& (0+255),w,b	;volatile
 34041  00805C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 34042  00805E  0E00               	movlw	0
 34043  008060  0100               	movlb	0	; () banked
 34044  008062  2182               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 34045  008064  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 34046  008066  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 34047  00806A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 34048  00806E  0E00               	movlw	low (__mediumconst shr (0+16))
 34049  008070  6EF8               	movwf	tblptru,c
 34050  008072  0E0E               	movlw	(high __ramtop+-1)
 34051  008074  64F7               	cpfsgt	tblptrh,c
 34052  008076  D003               	bra	i1u1069_27
 34053  008078  0008               	tblrd		*
 34054  00807A  50F5               	movf	tablat,w,c
 34055  00807C  D005               	bra	i1u1069_20
 34056  00807E                     i1u1069_27:
 34057  00807E  CFF6 FFE9          	movff	tblptrl,fsr0l
 34058  008082  CFF7 FFEA          	movff	tblptrh,fsr0h
 34059  008086  50EF               	movf	indf0,w,c
 34060  008088                     i1u1069_20:
 34061  008088  0100               	movlb	0	; () banked
 34062  00808A  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 34063                           
 34064                           ;usb_device.c: 2076: }
 34065  00808C  0012               	return	
 34066  00808E                     i1l11087:
 34067                           
 34068                           ;usb_device.c: 2077: else
 34069                           ;usb_device.c: 2078: {
 34070                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 34071  00808E  0E00               	movlw	0
 34072  008090  0100               	movlb	0	; () banked
 34073  008092  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34074                           
 34075                           ; BSR set to: 0
 34076                           ;usb_device.c: 2080: }
 34077                           ;usb_device.c: 2081: break;
 34078  008094  0012               	return	
 34079  008096                     i1l11089:
 34080                           
 34081                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 34082  008096  0E03               	movlw	3
 34083  008098  010D               	movlb	13	; () banked
 34084  00809A  6122               	cpfslt	34,b	;volatile
 34085  00809C  D029               	goto	i1l11095
 34086                           
 34087                           ; BSR set to: 13
 34088                           ;usb_device.c: 2087: {
 34089                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 34090  00809E  010D               	movlb	13	; () banked
 34091  0080A0  5122               	movf	34,w,b	;volatile
 34092  0080A2  0D02               	mullw	2
 34093  0080A4  0EC3               	movlw	low _USB_SD_Ptr
 34094  0080A6  24F3               	addwf	prodl,w,c
 34095  0080A8  6EF6               	movwf	tblptrl,c
 34096  0080AA  0E20               	movlw	high _USB_SD_Ptr
 34097  0080AC  20F4               	addwfc	prodh,w,c
 34098  0080AE  6EF7               	movwf	tblptrh,c
 34099  0080B0                     	if	1	;There are 3 active tblptr bytes
 34100  0080B0  6AF8               	clrf	tblptru,c
 34101  0080B2  0E00               	movlw	low (__mediumconst shr (0+16))
 34102  0080B4  22F8               	addwfc	tblptru,f,c
 34103  0080B6                     	endif
 34104  0080B6  0009               	tblrd		*+
 34105  0080B8  CFF5 F081          	movff	tablat,_inPipes	;volatile
 34106  0080BC  000A               	tblrd		*-
 34107  0080BE  CFF5 F082          	movff	tablat,_inPipes+1	;volatile
 34108                           
 34109                           ; BSR set to: 13
 34110                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 34111  0080C2  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 34112  0080C6  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 34113  0080CA  0E00               	movlw	low (__mediumconst shr (0+16))
 34114  0080CC  6EF8               	movwf	tblptru,c
 34115  0080CE  0E0E               	movlw	(high __ramtop+-1)
 34116  0080D0  64F7               	cpfsgt	tblptrh,c
 34117  0080D2  D003               	bra	i1u1071_27
 34118  0080D4  0008               	tblrd		*
 34119  0080D6  50F5               	movf	tablat,w,c
 34120  0080D8  D005               	bra	i1u1071_20
 34121  0080DA                     i1u1071_27:
 34122  0080DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 34123  0080DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 34124  0080E2  50EF               	movf	indf0,w,c
 34125  0080E4                     i1u1071_20:
 34126  0080E4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 34127  0080E6  5001               	movf	??_USBStdGetDscHandler,w,c
 34128  0080E8  0100               	movlb	0	; () banked
 34129  0080EA  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 34130  0080EC  6B86               	clrf	(_inPipes+5)& (0+255),b	;volatile
 34131                           
 34132                           ;usb_device.c: 2092: }
 34133  0080EE  0012               	return	
 34134  0080F0                     i1l11095:
 34135                           
 34136                           ;usb_device.c: 2102: else
 34137                           ;usb_device.c: 2103: {
 34138                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 34139  0080F0  0E00               	movlw	0
 34140  0080F2  0100               	movlb	0	; () banked
 34141  0080F4  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34142                           
 34143                           ; BSR set to: 0
 34144                           ;usb_device.c: 2105: }
 34145                           ;usb_device.c: 2106: break;
 34146  0080F6  0012               	return	
 34147  0080F8                     i1l11097:
 34148                           
 34149                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 34150  0080F8  0E00               	movlw	0
 34151  0080FA  0100               	movlb	0	; () banked
 34152  0080FC  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34153                           
 34154                           ; BSR set to: 0
 34155                           ;usb_device.c: 2110: }
 34156                           
 34157                           ;usb_device.c: 2109: break;
 34158  0080FE  0012               	return	
 34159  008100                     i1l11101:
 34160                           
 34161                           ; BSR set to: 0
 34162  008100  010D               	movlb	13	; () banked
 34163  008102  5123               	movf	35,w,b	;volatile
 34164                           
 34165                           ; Switch size 1, requested type "space"
 34166                           ; Number of cases is 3, Range of values is 1 to 3
 34167                           ; switch strategies available:
 34168                           ; Name         Instructions Cycles
 34169                           ; simple_byte           10     6 (average)
 34170                           ;	Chosen strategy is simple_byte
 34171  008104  0A01               	xorlw	1	; case 1
 34172  008106  B4D8               	btfsc	status,2,c
 34173  008108  D769               	goto	i1l11075
 34174  00810A  0A03               	xorlw	3	; case 2
 34175  00810C  B4D8               	btfsc	status,2,c
 34176  00810E  D772               	goto	i1l11079
 34177  008110  0A01               	xorlw	1	; case 3
 34178  008112  B4D8               	btfsc	status,2,c
 34179  008114  D7C0               	goto	i1l11089
 34180  008116  D7F0               	goto	i1l11097
 34181  008118                     __end_of_USBStdGetDscHandler:
 34182                           	opt stack 0
 34183                           pclatu	equ	0xFFB
 34184                           pclath	equ	0xFFA
 34185                           tblptru	equ	0xFF8
 34186                           tblptrh	equ	0xFF7
 34187                           tblptrl	equ	0xFF6
 34188                           tablat	equ	0xFF5
 34189                           prodh	equ	0xFF4
 34190                           prodl	equ	0xFF3
 34191                           intcon	equ	0xFF2
 34192                           intcon2	equ	0xFF1
 34193                           intcon3	equ	0xFF0
 34194                           indf0	equ	0xFEF
 34195                           postinc0	equ	0xFEE
 34196                           plusw0	equ	0xFEB
 34197                           fsr0h	equ	0xFEA
 34198                           fsr0l	equ	0xFE9
 34199                           wreg	equ	0xFE8
 34200                           indf1	equ	0xFE7
 34201                           postinc1	equ	0xFE6
 34202                           postdec1	equ	0xFE5
 34203                           plusw1	equ	0xFE3
 34204                           fsr1h	equ	0xFE2
 34205                           fsr1l	equ	0xFE1
 34206                           bsr	equ	0xFE0
 34207                           indf2	equ	0xFDF
 34208                           postinc2	equ	0xFDE
 34209                           postdec2	equ	0xFDD
 34210                           plusw2	equ	0xFDB
 34211                           fsr2h	equ	0xFDA
 34212                           fsr2l	equ	0xFD9
 34213                           status	equ	0xFD8
 34214                           
 34215 ;; *************** function _USBStdFeatureReqHandler *****************
 34216 ;; Defined at:
 34217 ;;		line 2757 in file "src/usb/usb_device.c"
 34218 ;; Parameters:    Size  Location     Type
 34219 ;;		None
 34220 ;; Auto vars:     Size  Location     Type
 34221 ;;  p               2   24[COMRAM] PTR struct __BDT
 34222 ;;		 -> BDT(32), NULL(0), 
 34223 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 34224 ;;		 -> UEP0(1), 
 34225 ;;  current_ep_d    1   23[COMRAM] struct .
 34226 ;; Return value:  Size  Location     Type
 34227 ;;		None               void
 34228 ;; Registers used:
 34229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34230 ;; Tracked objects:
 34231 ;;		On entry : 0/0
 34232 ;;		On exit  : 0/0
 34233 ;;		Unchanged: 0/0
 34234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34236 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34239 ;;Total ram usage:        6 bytes
 34240 ;; Hardware stack levels used:    1
 34241 ;; Hardware stack levels required when called:   10
 34242 ;; This function calls:
 34243 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34244 ;; This function is called by:
 34245 ;;		_USBCheckStdRequest
 34246 ;; This function uses a non-reentrant model
 34247 ;;
 34248                           
 34249                           	psect	text102
 34250  00665C                     __ptext102:
 34251                           	opt stack 0
 34252  00665C                     _USBStdFeatureReqHandler:
 34253                           	opt stack 3
 34254                           
 34255                           ;usb_device.c: 2759: BDT_ENTRY *p;
 34256                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 34257                           ;usb_device.c: 2764: unsigned char* pUEP;
 34258                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 34259                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 34260                           
 34261                           ;incstack = 0
 34262  00665C  010D               	movlb	13	; () banked
 34263  00665E  0522               	decf	34,w,b	;volatile
 34264  006660  A4D8               	btfss	status,2,c
 34265  006662  D011               	goto	i1l1450
 34266                           
 34267                           ; BSR set to: 13
 34268  006664  010D               	movlb	13	; () banked
 34269  006666  5120               	movf	32,w,b	;volatile
 34270  006668  0B1F               	andlw	31
 34271  00666A  0900               	iorlw	0
 34272  00666C  A4D8               	btfss	status,2,c
 34273  00666E  D00B               	goto	i1l1450
 34274                           
 34275                           ; BSR set to: 13
 34276                           ;usb_device.c: 2804: {
 34277                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 34278  006670  0100               	movlb	0	; () banked
 34279  006672  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 34280                           
 34281                           ; BSR set to: 0
 34282                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 34283  006674  0E03               	movlw	3
 34284  006676  010D               	movlb	13	; () banked
 34285  006678  1921               	xorwf	33,w,b	;volatile
 34286  00667A  A4D8               	btfss	status,2,c
 34287  00667C  D002               	goto	i1l11141
 34288                           
 34289                           ; BSR set to: 13
 34290                           ;usb_device.c: 2807: RemoteWakeup = 1;
 34291  00667E  0E01               	movlw	1
 34292  006680  D001               	goto	L17
 34293  006682                     i1l11141:
 34294                           
 34295                           ; BSR set to: 13
 34296                           ;usb_device.c: 2808: else
 34297                           ;usb_device.c: 2809: RemoteWakeup = 0;
 34298  006682  0E00               	movlw	0
 34299  006684                     L17:
 34300  006684  6E46               	movwf	_RemoteWakeup,c	;volatile
 34301  006686                     i1l1450:
 34302                           
 34303                           ; BSR set to: 13
 34304                           ;usb_device.c: 2810: }
 34305                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 34306                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 34307                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 34308                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 34309  006686  010D               	movlb	13	; () banked
 34310  006688  5122               	movf	34,w,b	;volatile
 34311  00668A  A4D8               	btfss	status,2,c
 34312  00668C  0012               	return	
 34313                           
 34314                           ; BSR set to: 13
 34315  00668E  010D               	movlb	13	; () banked
 34316  006690  5120               	movf	32,w,b	;volatile
 34317  006692  0B1F               	andlw	31
 34318  006694  0A02               	xorlw	2
 34319  006696  A4D8               	btfss	status,2,c
 34320  006698  0012               	return	
 34321                           
 34322                           ; BSR set to: 13
 34323  00669A  010D               	movlb	13	; () banked
 34324  00669C  5124               	movf	36,w,b	;volatile
 34325  00669E  0B0F               	andlw	15
 34326  0066A0  0900               	iorlw	0
 34327  0066A2  B4D8               	btfsc	status,2,c
 34328  0066A4  0012               	return	
 34329                           
 34330                           ; BSR set to: 13
 34331  0066A6  010D               	movlb	13	; () banked
 34332  0066A8  5124               	movf	36,w,b	;volatile
 34333  0066AA  0B0F               	andlw	15
 34334  0066AC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34335  0066AE  0E02               	movlw	2
 34336  0066B0  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 34337  0066B2  0012               	return	
 34338                           
 34339                           ; BSR set to: 13
 34340  0066B4  0E20               	movlw	32
 34341  0066B6  184B               	xorwf	_USBDeviceState,w,c	;volatile
 34342  0066B8  A4D8               	btfss	status,2,c
 34343  0066BA  0012               	return	
 34344                           
 34345                           ; BSR set to: 13
 34346                           ;usb_device.c: 2817: {
 34347                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 34348  0066BC  0100               	movlb	0	; () banked
 34349  0066BE  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 34350                           
 34351                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 34352  0066C0  010D               	movlb	13	; () banked
 34353  0066C2  BF24               	btfsc	36,7,b	;volatile
 34354  0066C4  D01B               	goto	i1l11155
 34355                           
 34356                           ; BSR set to: 13
 34357                           ;usb_device.c: 2824: {
 34358                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 34359  0066C6  010D               	movlb	13	; () banked
 34360  0066C8  5124               	movf	36,w,b	;volatile
 34361  0066CA  0B0F               	andlw	15
 34362  0066CC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34363  0066CE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34364  0066D0  0D02               	mullw	2
 34365  0066D2  0E8F               	movlw	low _pBDTEntryOut
 34366  0066D4  24F3               	addwf	prodl,w,c
 34367  0066D6  6ED9               	movwf	fsr2l,c
 34368  0066D8  0E00               	movlw	high _pBDTEntryOut
 34369  0066DA  20F4               	addwfc	prodh,w,c
 34370  0066DC  6EDA               	movwf	fsr2h,c
 34371  0066DE  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 34372  0066E2  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 34373                           
 34374                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 34375  0066E6  010D               	movlb	13	; () banked
 34376  0066E8  5124               	movf	36,w,b	;volatile
 34377  0066EA  0B0F               	andlw	15
 34378  0066EC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34379  0066EE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34380  0066F0  0D01               	mullw	1
 34381  0066F2  0E97               	movlw	low _ep_data_out
 34382  0066F4  24F3               	addwf	prodl,w,c
 34383  0066F6  6ED9               	movwf	fsr2l,c
 34384  0066F8  0E00               	movlw	high _ep_data_out
 34385  0066FA  D01A               	goto	L18
 34386  0066FC                     i1l11155:
 34387                           
 34388                           ; BSR set to: 13
 34389                           ;usb_device.c: 2828: else
 34390                           ;usb_device.c: 2829: {
 34391                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 34392  0066FC  010D               	movlb	13	; () banked
 34393  0066FE  5124               	movf	36,w,b	;volatile
 34394  006700  0B0F               	andlw	15
 34395  006702  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34396  006704  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34397  006706  0D02               	mullw	2
 34398  006708  0E8B               	movlw	low _pBDTEntryIn
 34399  00670A  24F3               	addwf	prodl,w,c
 34400  00670C  6ED9               	movwf	fsr2l,c
 34401  00670E  0E00               	movlw	high _pBDTEntryIn
 34402  006710  20F4               	addwfc	prodh,w,c
 34403  006712  6EDA               	movwf	fsr2h,c
 34404  006714  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 34405  006718  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 34406                           
 34407                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 34408  00671C  010D               	movlb	13	; () banked
 34409  00671E  5124               	movf	36,w,b	;volatile
 34410  006720  0B0F               	andlw	15
 34411  006722  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34412  006724  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34413  006726  0D01               	mullw	1
 34414  006728  0E95               	movlw	low _ep_data_in
 34415  00672A  24F3               	addwf	prodl,w,c
 34416  00672C  6ED9               	movwf	fsr2l,c
 34417  00672E  0E00               	movlw	high _ep_data_in
 34418  006730                     L18:
 34419  006730  20F4               	addwfc	prodh,w,c
 34420  006732  6EDA               	movwf	fsr2h,c
 34421  006734  50DF               	movf	indf2,w,c
 34422  006736  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 34423                           
 34424                           ; BSR set to: 13
 34425                           ;usb_device.c: 2832: }
 34426                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 34427                           
 34428                           ; BSR set to: 13
 34429  006738  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 34430  00673A  D002               	goto	i1l11161
 34431                           
 34432                           ; BSR set to: 13
 34433                           ;usb_device.c: 2839: {
 34434                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 34435  00673C  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 34436                           
 34437                           ;usb_device.c: 2841: }
 34438  00673E  D001               	goto	i1l11163
 34439  006740                     i1l11161:
 34440                           
 34441                           ; BSR set to: 13
 34442                           ;usb_device.c: 2842: else
 34443                           ;usb_device.c: 2843: {
 34444                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 34445  006740  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 34446  006742                     i1l11163:
 34447                           
 34448                           ; BSR set to: 13
 34449                           ;usb_device.c: 2845: }
 34450                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 34451  006742  010D               	movlb	13	; () banked
 34452  006744  BF24               	btfsc	36,7,b	;volatile
 34453  006746  D00B               	goto	i1l11167
 34454                           
 34455                           ; BSR set to: 13
 34456                           ;usb_device.c: 2851: {
 34457                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 34458  006748  010D               	movlb	13	; () banked
 34459  00674A  5124               	movf	36,w,b	;volatile
 34460  00674C  0B0F               	andlw	15
 34461  00674E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34462  006750  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34463  006752  0D02               	mullw	2
 34464  006754  0E8F               	movlw	low _pBDTEntryOut
 34465  006756  24F3               	addwf	prodl,w,c
 34466  006758  6ED9               	movwf	fsr2l,c
 34467  00675A  0E00               	movlw	high _pBDTEntryOut
 34468  00675C  D00A               	goto	L19
 34469  00675E                     i1l11167:
 34470                           
 34471                           ; BSR set to: 13
 34472                           ;usb_device.c: 2854: else
 34473                           ;usb_device.c: 2855: {
 34474                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 34475  00675E  010D               	movlb	13	; () banked
 34476  006760  5124               	movf	36,w,b	;volatile
 34477  006762  0B0F               	andlw	15
 34478  006764  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34479  006766  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34480  006768  0D02               	mullw	2
 34481  00676A  0E8B               	movlw	low _pBDTEntryIn
 34482  00676C  24F3               	addwf	prodl,w,c
 34483  00676E  6ED9               	movwf	fsr2l,c
 34484  006770  0E00               	movlw	high _pBDTEntryIn
 34485  006772                     L19:
 34486  006772  20F4               	addwfc	prodh,w,c
 34487  006774  6EDA               	movwf	fsr2h,c
 34488  006776  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 34489  00677A  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 34490                           
 34491                           ; BSR set to: 13
 34492                           ;usb_device.c: 2857: }
 34493                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 34494                           
 34495                           ; BSR set to: 13
 34496  00677E  0E03               	movlw	3
 34497  006780  010D               	movlb	13	; () banked
 34498  006782  1921               	xorwf	33,w,b	;volatile
 34499  006784  A4D8               	btfss	status,2,c
 34500  006786  D02F               	goto	i1l11183
 34501                           
 34502                           ; BSR set to: 13
 34503                           ;usb_device.c: 2861: {
 34504                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 34505  006788  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34506  00678C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34507  006790  AEDF               	btfss	indf2,7,c
 34508  006792  D01C               	goto	i1l11179
 34509                           
 34510                           ; BSR set to: 13
 34511                           ;usb_device.c: 2863: {
 34512                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 34513  006794  010D               	movlb	13	; () banked
 34514  006796  BF24               	btfsc	36,7,b	;volatile
 34515  006798  D00B               	goto	i1l11177
 34516                           
 34517                           ; BSR set to: 13
 34518                           ;usb_device.c: 2867: {
 34519                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 34520  00679A  010D               	movlb	13	; () banked
 34521  00679C  5124               	movf	36,w,b	;volatile
 34522  00679E  0B0F               	andlw	15
 34523  0067A0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34524  0067A2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34525  0067A4  0D01               	mullw	1
 34526  0067A6  0E97               	movlw	low _ep_data_out
 34527  0067A8  24F3               	addwf	prodl,w,c
 34528  0067AA  6ED9               	movwf	fsr2l,c
 34529  0067AC  0E00               	movlw	high _ep_data_out
 34530  0067AE  D00A               	goto	L20
 34531  0067B0                     i1l11177:
 34532                           
 34533                           ;usb_device.c: 2870: else
 34534                           ;usb_device.c: 2871: {
 34535                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 34536  0067B0  010D               	movlb	13	; () banked
 34537  0067B2  5124               	movf	36,w,b	;volatile
 34538  0067B4  0B0F               	andlw	15
 34539  0067B6  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34540  0067B8  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34541  0067BA  0D01               	mullw	1
 34542  0067BC  0E95               	movlw	low _ep_data_in
 34543  0067BE  24F3               	addwf	prodl,w,c
 34544  0067C0  6ED9               	movwf	fsr2l,c
 34545  0067C2  0E00               	movlw	high _ep_data_in
 34546  0067C4                     L20:
 34547  0067C4  20F4               	addwfc	prodh,w,c
 34548  0067C6  6EDA               	movwf	fsr2h,c
 34549  0067C8  0100               	movlb	0	; () banked
 34550  0067CA  82DF               	bsf	indf2,1,c
 34551  0067CC                     i1l11179:
 34552                           
 34553                           ;usb_device.c: 2873: }
 34554                           ;usb_device.c: 2874: }
 34555                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 34556  0067CC  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34557  0067D0  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34558  0067D4  0E00               	movlw	0
 34559  0067D6  84DB               	bsf	plusw2,2,c
 34560                           
 34561                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 34562  0067D8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34563  0067DC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34564  0067E0  0E00               	movlw	0
 34565  0067E2  8EDB               	bsf	plusw2,7,c
 34566                           
 34567                           ;usb_device.c: 2879: }
 34568  0067E4  0012               	return	
 34569  0067E6                     i1l11183:
 34570                           
 34571                           ;usb_device.c: 2880: else
 34572                           ;usb_device.c: 2881: {
 34573                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 34574  0067E6  0E04               	movlw	4
 34575  0067E8  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 34576                           
 34577                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 34578  0067EA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34579  0067EE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34580  0067F2  AEDF               	btfss	indf2,7,c
 34581  0067F4  D01B               	goto	i1l11193
 34582                           
 34583                           ;usb_device.c: 2888: {
 34584                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 34585  0067F6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34586  0067FA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34587  0067FE  0E7F               	movlw	127
 34588  006800  16DF               	andwf	indf2,f,c
 34589                           
 34590                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 34591  006802  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34592  006806  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34593  00680A  0E00               	movlw	0
 34594  00680C  8CDB               	bsf	plusw2,6,c
 34595                           
 34596                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 34597  00680E  0E00               	movlw	0
 34598  006810  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34599  006812  0E05               	movlw	5
 34600  006814  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34601  006816  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 34602  00681A  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 34603  00681E  0E00               	movlw	0
 34604  006820  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34605  006822  0E02               	movlw	2
 34606  006824  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34607  006826  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34608                           
 34609                           ;usb_device.c: 2894: }
 34610  00682A  D006               	goto	i1l11195
 34611  00682C                     i1l11193:
 34612                           
 34613                           ;usb_device.c: 2895: else
 34614                           ;usb_device.c: 2896: {
 34615                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 34616  00682C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34617  006830  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34618  006834  0E00               	movlw	0
 34619  006836  8CDB               	bsf	plusw2,6,c
 34620  006838                     i1l11195:
 34621                           
 34622                           ;usb_device.c: 2899: }
 34623                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 34624  006838  0E04               	movlw	4
 34625  00683A  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 34626                           
 34627                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 34628  00683C  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 34629  00683E  D006               	goto	i1l1469
 34630  006840  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34631  006844  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34632  006848  AEDF               	btfss	indf2,7,c
 34633  00684A  D031               	goto	i1l11209
 34634  00684C                     i1l1469:
 34635                           
 34636                           ;usb_device.c: 2910: {
 34637                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 34638  00684C  010D               	movlb	13	; () banked
 34639  00684E  BF24               	btfsc	36,7,b	;volatile
 34640  006850  D00B               	goto	i1l11203
 34641                           
 34642                           ; BSR set to: 13
 34643                           ;usb_device.c: 2912: {
 34644                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 34645  006852  010D               	movlb	13	; () banked
 34646  006854  5124               	movf	36,w,b	;volatile
 34647  006856  0B0F               	andlw	15
 34648  006858  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34649  00685A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34650  00685C  0D01               	mullw	1
 34651  00685E  0E97               	movlw	low _ep_data_out
 34652  006860  24F3               	addwf	prodl,w,c
 34653  006862  6ED9               	movwf	fsr2l,c
 34654  006864  0E00               	movlw	high _ep_data_out
 34655  006866  D00A               	goto	L21
 34656  006868                     i1l11203:
 34657                           
 34658                           ;usb_device.c: 2915: else
 34659                           ;usb_device.c: 2916: {
 34660                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 34661  006868  010D               	movlb	13	; () banked
 34662  00686A  5124               	movf	36,w,b	;volatile
 34663  00686C  0B0F               	andlw	15
 34664  00686E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34665  006870  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34666  006872  0D01               	mullw	1
 34667  006874  0E95               	movlw	low _ep_data_in
 34668  006876  24F3               	addwf	prodl,w,c
 34669  006878  6ED9               	movwf	fsr2l,c
 34670  00687A  0E00               	movlw	high _ep_data_in
 34671  00687C                     L21:
 34672  00687C  20F4               	addwfc	prodh,w,c
 34673  00687E  6EDA               	movwf	fsr2h,c
 34674  006880  0100               	movlb	0	; () banked
 34675  006882  92DF               	bcf	indf2,1,c
 34676                           
 34677                           ; BSR set to: 0
 34678                           ;usb_device.c: 2918: }
 34679                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 34680                           
 34681                           ; BSR set to: 0
 34682  006884  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34683  006888  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34684  00688C  0E3B               	movlw	59
 34685  00688E  16DF               	andwf	indf2,f,c
 34686                           
 34687                           ; BSR set to: 0
 34688                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 34689  006890  0E00               	movlw	0
 34690  006892  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34691  006894  0E05               	movlw	5
 34692  006896  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34693  006898  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 34694  00689C  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 34695  0068A0  0E00               	movlw	0
 34696  0068A2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34697  0068A4  0E02               	movlw	2
 34698  0068A6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34699  0068A8  ECF4  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34700                           
 34701                           ;usb_device.c: 2924: }
 34702  0068AC  D006               	goto	i1l11211
 34703  0068AE                     i1l11209:
 34704                           
 34705                           ;usb_device.c: 2925: else
 34706                           ;usb_device.c: 2926: {
 34707                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 34708  0068AE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34709  0068B2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34710  0068B6  0E3B               	movlw	59
 34711  0068B8  16DF               	andwf	indf2,f,c
 34712  0068BA                     i1l11211:
 34713                           
 34714                           ;usb_device.c: 2929: }
 34715                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 34716  0068BA  010D               	movlb	13	; () banked
 34717  0068BC  5124               	movf	36,w,b	;volatile
 34718  0068BE  0B0F               	andlw	15
 34719  0068C0  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34720  0068C2  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34721  0068C4  0D01               	mullw	1
 34722  0068C6  0E26               	movlw	38
 34723  0068C8  24F3               	addwf	prodl,w,c
 34724  0068CA  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 34725  0068CC  0E0F               	movlw	15
 34726  0068CE  20F4               	addwfc	prodh,w,c
 34727  0068D0  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 34728                           
 34729                           ; BSR set to: 13
 34730                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 34731  0068D2  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 34732  0068D6  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 34733  0068DA  0EFE               	movlw	254
 34734  0068DC  16DF               	andwf	indf2,f,c
 34735                           
 34736                           ; BSR set to: 13
 34737  0068DE  0012               	return	
 34738  0068E0                     __end_of_USBStdFeatureReqHandler:
 34739                           	opt stack 0
 34740                           pclatu	equ	0xFFB
 34741                           pclath	equ	0xFFA
 34742                           tblptru	equ	0xFF8
 34743                           tblptrh	equ	0xFF7
 34744                           tblptrl	equ	0xFF6
 34745                           tablat	equ	0xFF5
 34746                           prodh	equ	0xFF4
 34747                           prodl	equ	0xFF3
 34748                           intcon	equ	0xFF2
 34749                           intcon2	equ	0xFF1
 34750                           intcon3	equ	0xFF0
 34751                           indf0	equ	0xFEF
 34752                           postinc0	equ	0xFEE
 34753                           plusw0	equ	0xFEB
 34754                           fsr0h	equ	0xFEA
 34755                           fsr0l	equ	0xFE9
 34756                           wreg	equ	0xFE8
 34757                           indf1	equ	0xFE7
 34758                           postinc1	equ	0xFE6
 34759                           postdec1	equ	0xFE5
 34760                           plusw1	equ	0xFE3
 34761                           fsr1h	equ	0xFE2
 34762                           fsr1l	equ	0xFE1
 34763                           bsr	equ	0xFE0
 34764                           indf2	equ	0xFDF
 34765                           postinc2	equ	0xFDE
 34766                           postdec2	equ	0xFDD
 34767                           plusw2	equ	0xFDB
 34768                           fsr2h	equ	0xFDA
 34769                           fsr2l	equ	0xFD9
 34770                           status	equ	0xFD8
 34771                           
 34772 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 34773 ;; Defined at:
 34774 ;;		line 856 in file "src/main.c"
 34775 ;; Parameters:    Size  Location     Type
 34776 ;;  event           2   12[COMRAM] enum E10007
 34777 ;;  pdata           2   14[COMRAM] PTR void 
 34778 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
 34779 ;;  size            2   16[COMRAM] unsigned int 
 34780 ;; Auto vars:     Size  Location     Type
 34781 ;;		None
 34782 ;; Return value:  Size  Location     Type
 34783 ;;                  1    wreg      unsigned char 
 34784 ;; Registers used:
 34785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34786 ;; Tracked objects:
 34787 ;;		On entry : 0/0
 34788 ;;		On exit  : 0/0
 34789 ;;		Unchanged: 0/0
 34790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34794 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34795 ;;Total ram usage:        8 bytes
 34796 ;; Hardware stack levels used:    1
 34797 ;; Hardware stack levels required when called:    9
 34798 ;; This function calls:
 34799 ;;		_APP_DeviceCustomHIDInitialize
 34800 ;;		_APP_LEDUpdateUSBStatus
 34801 ;;		_USBCheckHIDRequest
 34802 ;; This function is called by:
 34803 ;;		_USBDeviceTasks
 34804 ;;		_USBStdSetCfgHandler
 34805 ;;		_USBSuspend
 34806 ;;		_USBWakeFromSuspend
 34807 ;;		_USBCtrlTrfSetupHandler
 34808 ;;		_USBCheckStdRequest
 34809 ;;		_USBStdFeatureReqHandler
 34810 ;; This function uses a non-reentrant model
 34811 ;;
 34812                           
 34813                           	psect	text103
 34814  00B1E8                     __ptext103:
 34815                           	opt stack 0
 34816  00B1E8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 34817                           	opt stack 7
 34818                           
 34819                           ;main.c: 858: switch((int)event)
 34820                           
 34821                           ;incstack = 0
 34822  00B1E8  D00F               	goto	i1l10543
 34823  00B1EA                     i1l10531:
 34824                           
 34825                           ;main.c: 866: APP_LEDUpdateUSBStatus();
 34826  00B1EA  ECF2  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34827                           
 34828                           ;main.c: 867: break;
 34829  00B1EE  0012               	return	
 34830  00B1F0                     i1l10533:
 34831                           
 34832                           ;main.c: 871: APP_LEDUpdateUSBStatus();
 34833  00B1F0  ECF2  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34834                           
 34835                           ;main.c: 872: break;
 34836  00B1F4  0012               	return	
 34837  00B1F6                     i1l10535:
 34838                           
 34839                           ;main.c: 876: APP_LEDUpdateUSBStatus();
 34840  00B1F6  ECF2  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34841                           
 34842                           ;main.c: 877: break;
 34843  00B1FA  0012               	return	
 34844  00B1FC                     i1l10537:
 34845                           
 34846                           ;main.c: 882: APP_DeviceCustomHIDInitialize();
 34847  00B1FC  ECA0  F05C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 34848                           
 34849                           ;main.c: 886: break;
 34850                           
 34851                           ;main.c: 885: case EVENT_SET_DESCRIPTOR:
 34852                           
 34853                           ;main.c: 883: break;
 34854  00B200  0012               	return	
 34855  00B202                     i1l10539:
 34856                           
 34857                           ;main.c: 891: USBCheckHIDRequest();
 34858  00B202  ECD4  F049         	call	_USBCheckHIDRequest	;wreg free
 34859                           
 34860                           ;main.c: 902: }
 34861                           
 34862                           ;main.c: 901: break;
 34863                           
 34864                           ;main.c: 900: default:
 34865                           
 34866                           ;main.c: 898: break;
 34867                           
 34868                           ;main.c: 897: case EVENT_TRANSFER_TERMINATED:
 34869                           
 34870                           ;main.c: 895: break;
 34871                           
 34872                           ;main.c: 894: case EVENT_BUS_ERROR:
 34873                           
 34874                           ;main.c: 892: break;
 34875  00B206  0012               	return	
 34876  00B208                     i1l10543:
 34877  00B208  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 34878  00B20C  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 34879                           
 34880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 34881                           ; Switch size 1, requested type "space"
 34882                           ; Number of cases is 2, Range of values is 0 to 127
 34883                           ; switch strategies available:
 34884                           ; Name         Instructions Cycles
 34885                           ; simple_byte            7     4 (average)
 34886                           ;	Chosen strategy is simple_byte
 34887  00B210  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 34888  00B212  0A00               	xorlw	0	; case 0
 34889  00B214  B4D8               	btfsc	status,2,c
 34890  00B216  D004               	goto	i1l22239
 34891  00B218  0A7F               	xorlw	127	; case 127
 34892  00B21A  A4D8               	btfss	status,2,c
 34893  00B21C  0012               	return	
 34894  00B21E  D01A               	goto	i1l22241
 34895  00B220                     i1l22239:
 34896                           
 34897                           ; Switch size 1, requested type "space"
 34898                           ; Number of cases is 8, Range of values is 1 to 117
 34899                           ; switch strategies available:
 34900                           ; Name         Instructions Cycles
 34901                           ; simple_byte           25    13 (average)
 34902                           ;	Chosen strategy is simple_byte
 34903  00B220  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 34904  00B222  0A01               	xorlw	1	; case 1
 34905  00B224  B4D8               	btfsc	status,2,c
 34906  00B226  D7EA               	goto	i1l10537
 34907  00B228  0A03               	xorlw	3	; case 2
 34908  00B22A  B4D8               	btfsc	status,2,c
 34909  00B22C  0012               	return	
 34910  00B22E  0A01               	xorlw	1	; case 3
 34911  00B230  B4D8               	btfsc	status,2,c
 34912  00B232  D7E7               	goto	i1l10539
 34913  00B234  0A06               	xorlw	6	; case 5
 34914  00B236  B4D8               	btfsc	status,2,c
 34915  00B238  0012               	return	
 34916  00B23A  0A77               	xorlw	119	; case 114
 34917  00B23C  B4D8               	btfsc	status,2,c
 34918  00B23E  0012               	return	
 34919  00B240  0A01               	xorlw	1	; case 115
 34920  00B242  B4D8               	btfsc	status,2,c
 34921  00B244  D7D2               	goto	i1l10531
 34922  00B246  0A07               	xorlw	7	; case 116
 34923  00B248  B4D8               	btfsc	status,2,c
 34924  00B24A  D7D5               	goto	i1l10535
 34925  00B24C  0A01               	xorlw	1	; case 117
 34926  00B24E  A4D8               	btfss	status,2,c
 34927  00B250  0012               	return	
 34928  00B252  D7CE               	goto	i1l10533
 34929  00B254                     i1l22241:
 34930                           
 34931                           ; Switch size 1, requested type "space"
 34932                           ; Number of cases is 1, Range of values is 255 to 255
 34933                           ; switch strategies available:
 34934                           ; Name         Instructions Cycles
 34935                           ; simple_byte            4     3 (average)
 34936                           ;	Chosen strategy is simple_byte
 34937  00B254  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 34938  00B256  0AFF               	xorlw	255	; case 255
 34939  00B258  0012               	return	
 34940  00B25A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 34941                           	opt stack 0
 34942                           pclatu	equ	0xFFB
 34943                           pclath	equ	0xFFA
 34944                           tblptru	equ	0xFF8
 34945                           tblptrh	equ	0xFF7
 34946                           tblptrl	equ	0xFF6
 34947                           tablat	equ	0xFF5
 34948                           prodh	equ	0xFF4
 34949                           prodl	equ	0xFF3
 34950                           intcon	equ	0xFF2
 34951                           intcon2	equ	0xFF1
 34952                           intcon3	equ	0xFF0
 34953                           indf0	equ	0xFEF
 34954                           postinc0	equ	0xFEE
 34955                           plusw0	equ	0xFEB
 34956                           fsr0h	equ	0xFEA
 34957                           fsr0l	equ	0xFE9
 34958                           wreg	equ	0xFE8
 34959                           indf1	equ	0xFE7
 34960                           postinc1	equ	0xFE6
 34961                           postdec1	equ	0xFE5
 34962                           plusw1	equ	0xFE3
 34963                           fsr1h	equ	0xFE2
 34964                           fsr1l	equ	0xFE1
 34965                           bsr	equ	0xFE0
 34966                           indf2	equ	0xFDF
 34967                           postinc2	equ	0xFDE
 34968                           postdec2	equ	0xFDD
 34969                           plusw2	equ	0xFDB
 34970                           fsr2h	equ	0xFDA
 34971                           fsr2l	equ	0xFD9
 34972                           status	equ	0xFD8
 34973                           
 34974 ;; *************** function _USBCheckHIDRequest *****************
 34975 ;; Defined at:
 34976 ;;		line 157 in file "src/usb/usb_device_hid.c"
 34977 ;; Parameters:    Size  Location     Type
 34978 ;;		None
 34979 ;; Auto vars:     Size  Location     Type
 34980 ;;		None
 34981 ;; Return value:  Size  Location     Type
 34982 ;;		None               void
 34983 ;; Registers used:
 34984 ;;		wreg, status,2, status,0
 34985 ;; Tracked objects:
 34986 ;;		On entry : 0/0
 34987 ;;		On exit  : 0/0
 34988 ;;		Unchanged: 0/0
 34989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34994 ;;Total ram usage:        0 bytes
 34995 ;; Hardware stack levels used:    1
 34996 ;; Hardware stack levels required when called:    6
 34997 ;; This function calls:
 34998 ;;		Nothing
 34999 ;; This function is called by:
 35000 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35001 ;; This function uses a non-reentrant model
 35002 ;;
 35003                           
 35004                           	psect	text104
 35005  0093A8                     __ptext104:
 35006                           	opt stack 0
 35007  0093A8                     _USBCheckHIDRequest:
 35008                           	opt stack 9
 35009                           
 35010                           ;usb_device_hid.c: 159: if(SetupPkt.Recipient != (0x01)) return;
 35011                           
 35012                           ;incstack = 0
 35013  0093A8  010D               	movlb	13	; () banked
 35014  0093AA  5120               	movf	32,w,b	;volatile
 35015  0093AC  0B1F               	andlw	31
 35016  0093AE  06E8               	decf	wreg,f,c
 35017  0093B0  A4D8               	btfss	status,2,c
 35018  0093B2  0012               	return	
 35019                           
 35020                           ; BSR set to: 13
 35021                           ;usb_device_hid.c: 160: if(SetupPkt.bIntfID != 0x00) return;
 35022                           
 35023                           ; BSR set to: 13
 35024                           
 35025                           ; BSR set to: 13
 35026  0093B4  010D               	movlb	13	; () banked
 35027  0093B6  5124               	movf	36,w,b	;volatile
 35028  0093B8  A4D8               	btfss	status,2,c
 35029  0093BA  0012               	return	
 35030                           
 35031                           ; BSR set to: 13
 35032                           ;usb_device_hid.c: 167: if(SetupPkt.bRequest == 6)
 35033                           
 35034                           ; BSR set to: 13
 35035                           
 35036                           ; BSR set to: 13
 35037  0093BC  0E06               	movlw	6
 35038  0093BE  010D               	movlb	13	; () banked
 35039  0093C0  1921               	xorwf	33,w,b	;volatile
 35040  0093C2  B4D8               	btfsc	status,2,c
 35041  0093C4  D01F               	goto	i1l10395
 35042  0093C6  D027               	goto	i1l10397
 35043  0093C8                     i1l10379:
 35044                           
 35045                           ; BSR set to: 13
 35046                           ;usb_device_hid.c: 172: if(USBActiveConfiguration == 1)
 35047  0093C8  0456               	decf	_USBActiveConfiguration,w,c	;volatile
 35048  0093CA  A4D8               	btfss	status,2,c
 35049  0093CC  D024               	goto	i1l10397
 35050                           
 35051                           ; BSR set to: 13
 35052                           ;usb_device_hid.c: 173: {
 35053                           ;usb_device_hid.c: 174: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 35054  0093CE  0E43               	movlw	low (_configDescriptor1+18)
 35055  0093D0  0100               	movlb	0	; () banked
 35056  0093D2  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35057  0093D4  0E21               	movlw	high (_configDescriptor1+18)
 35058  0093D6  0100               	movlb	0	; () banked
 35059  0093D8  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35060                           
 35061                           ; BSR set to: 0
 35062  0093DA  0E00               	movlw	0
 35063  0093DC  0100               	movlb	0	; () banked
 35064  0093DE  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35065  0093E0  0E09               	movlw	9
 35066  0093E2  D00E               	goto	L22
 35067  0093E4                     i1l10385:
 35068                           
 35069                           ; BSR set to: 0
 35070  0093E4  0EC0               	movlw	192
 35071  0093E6  0100               	movlb	0	; () banked
 35072  0093E8  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35073                           
 35074                           ; BSR set to: 0
 35075                           ;usb_device_hid.c: 178: }
 35076                           ;usb_device_hid.c: 179: break;
 35077  0093EA  D015               	goto	i1l10397
 35078  0093EC                     i1l10387:
 35079                           
 35080                           ;usb_device_hid.c: 182: {
 35081                           ;usb_device_hid.c: 183: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 35082  0093EC  0E5A               	movlw	low _hid_rpt01
 35083  0093EE  0100               	movlb	0	; () banked
 35084  0093F0  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35085  0093F2  0E21               	movlw	high _hid_rpt01
 35086  0093F4  0100               	movlb	0	; () banked
 35087  0093F6  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35088                           
 35089                           ; BSR set to: 0
 35090  0093F8  0E00               	movlw	0
 35091  0093FA  0100               	movlb	0	; () banked
 35092  0093FC  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35093  0093FE  0E1D               	movlw	29
 35094  009400                     L22:
 35095  009400  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35096  009402  D7F0               	goto	i1l10385
 35097  009404                     i1l10395:
 35098  009404  010D               	movlb	13	; () banked
 35099  009406  5123               	movf	35,w,b	;volatile
 35100                           
 35101                           ; Switch size 1, requested type "space"
 35102                           ; Number of cases is 3, Range of values is 33 to 35
 35103                           ; switch strategies available:
 35104                           ; Name         Instructions Cycles
 35105                           ; simple_byte           10     6 (average)
 35106                           ;	Chosen strategy is simple_byte
 35107  009408  0A21               	xorlw	33	; case 33
 35108  00940A  B4D8               	btfsc	status,2,c
 35109  00940C  D7DD               	goto	i1l10379
 35110  00940E  0A03               	xorlw	3	; case 34
 35111  009410  B4D8               	btfsc	status,2,c
 35112  009412  D7EC               	goto	i1l10387
 35113  009414  0A01               	xorlw	1	; case 35
 35114  009416                     i1l10397:
 35115                           
 35116                           ;usb_device_hid.c: 203: }
 35117                           ;usb_device_hid.c: 205: if(SetupPkt.RequestType != (0x20>>5))
 35118  009416  010D               	movlb	13	; () banked
 35119  009418  3920               	swapf	32,w,b	;volatile
 35120  00941A  32E8               	rrcf	wreg,f,c
 35121  00941C  0B03               	andlw	3
 35122  00941E  06E8               	decf	wreg,f,c
 35123  009420  A4D8               	btfss	status,2,c
 35124  009422  0012               	return	
 35125  009424  D02A               	goto	i1l10423
 35126  009426                     i1l10401:
 35127                           
 35128                           ; BSR set to: 13
 35129                           ;usb_device_hid.c: 223: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 35130  009426  0E5A               	movlw	low _idle_rate
 35131  009428  0100               	movlb	0	; () banked
 35132  00942A  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35133  00942C  0E00               	movlw	high _idle_rate
 35134  00942E  0100               	movlb	0	; () banked
 35135  009430  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35136                           
 35137                           ; BSR set to: 0
 35138  009432  0E00               	movlw	0
 35139  009434  0100               	movlb	0	; () banked
 35140  009436  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35141  009438  0E01               	movlw	1
 35142  00943A  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35143                           
 35144                           ; BSR set to: 0
 35145  00943C  0EC1               	movlw	193
 35146  00943E  0100               	movlb	0	; () banked
 35147  009440  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35148                           
 35149                           ;usb_device_hid.c: 227: break;
 35150  009442  0012               	return	
 35151  009444                     i1l10407:
 35152                           
 35153                           ;usb_device_hid.c: 229: inPipes[0].info.Val = 0x00 | 0x80;
 35154  009444  0E80               	movlw	128
 35155  009446  0100               	movlb	0	; () banked
 35156  009448  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35157                           
 35158                           ; BSR set to: 0
 35159                           ;usb_device_hid.c: 230: idle_rate = ((USB_SETUP_SET_IDLE_RATE*)&SetupPkt)->duration;
 35160  00944A  CD23 F05A          	movff	3363,_idle_rate
 35161                           
 35162                           ;usb_device_hid.c: 231: ;
 35163                           ;usb_device_hid.c: 232: break;
 35164  00944E  0012               	return	
 35165  009450                     i1l10411:
 35166                           
 35167                           ;usb_device_hid.c: 234: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 35168  009450  0E59               	movlw	low _active_protocol
 35169  009452  0100               	movlb	0	; () banked
 35170  009454  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35171  009456  0E00               	movlw	high _active_protocol
 35172  009458  0100               	movlb	0	; () banked
 35173  00945A  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35174                           
 35175                           ; BSR set to: 0
 35176  00945C  0E00               	movlw	0
 35177  00945E  0100               	movlb	0	; () banked
 35178  009460  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35179  009462  0E01               	movlw	1
 35180  009464  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35181                           
 35182                           ; BSR set to: 0
 35183  009466  0E81               	movlw	129
 35184  009468  0100               	movlb	0	; () banked
 35185  00946A  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35186                           
 35187                           ;usb_device_hid.c: 238: break;
 35188  00946C  0012               	return	
 35189  00946E                     i1l10417:
 35190                           
 35191                           ;usb_device_hid.c: 240: inPipes[0].info.Val = 0x00 | 0x80;
 35192  00946E  0E80               	movlw	128
 35193  009470  0100               	movlb	0	; () banked
 35194  009472  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35195                           
 35196                           ; BSR set to: 0
 35197                           ;usb_device_hid.c: 241: active_protocol = ((USB_SETUP_SET_PROTOCOL*)&SetupPkt)->protocol
      +                          ;
 35198  009474  CD22 F059          	movff	3362,_active_protocol
 35199                           
 35200                           ; BSR set to: 0
 35201                           ;usb_device_hid.c: 243: }
 35202                           
 35203                           ;usb_device_hid.c: 242: break;
 35204  009478  0012               	return	
 35205  00947A                     i1l10423:
 35206  00947A  010D               	movlb	13	; () banked
 35207  00947C  5121               	movf	33,w,b	;volatile
 35208                           
 35209                           ; Switch size 1, requested type "space"
 35210                           ; Number of cases is 6, Range of values is 1 to 11
 35211                           ; switch strategies available:
 35212                           ; Name         Instructions Cycles
 35213                           ; simple_byte           19    10 (average)
 35214                           ;	Chosen strategy is simple_byte
 35215  00947E  0A01               	xorlw	1	; case 1
 35216  009480  B4D8               	btfsc	status,2,c
 35217  009482  0012               	return	
 35218  009484  0A03               	xorlw	3	; case 2
 35219  009486  B4D8               	btfsc	status,2,c
 35220  009488  D7CE               	goto	i1l10401
 35221  00948A  0A01               	xorlw	1	; case 3
 35222  00948C  B4D8               	btfsc	status,2,c
 35223  00948E  D7E0               	goto	i1l10411
 35224  009490  0A0A               	xorlw	10	; case 9
 35225  009492  B4D8               	btfsc	status,2,c
 35226  009494  0012               	return	
 35227  009496  0A03               	xorlw	3	; case 10
 35228  009498  B4D8               	btfsc	status,2,c
 35229  00949A  D7D4               	goto	i1l10407
 35230  00949C  0A01               	xorlw	1	; case 11
 35231  00949E  A4D8               	btfss	status,2,c
 35232  0094A0  0012               	return	
 35233  0094A2  D7E5               	goto	i1l10417
 35234  0094A4                     __end_of_USBCheckHIDRequest:
 35235                           	opt stack 0
 35236                           pclatu	equ	0xFFB
 35237                           pclath	equ	0xFFA
 35238                           tblptru	equ	0xFF8
 35239                           tblptrh	equ	0xFF7
 35240                           tblptrl	equ	0xFF6
 35241                           tablat	equ	0xFF5
 35242                           prodh	equ	0xFF4
 35243                           prodl	equ	0xFF3
 35244                           intcon	equ	0xFF2
 35245                           intcon2	equ	0xFF1
 35246                           intcon3	equ	0xFF0
 35247                           indf0	equ	0xFEF
 35248                           postinc0	equ	0xFEE
 35249                           plusw0	equ	0xFEB
 35250                           fsr0h	equ	0xFEA
 35251                           fsr0l	equ	0xFE9
 35252                           wreg	equ	0xFE8
 35253                           indf1	equ	0xFE7
 35254                           postinc1	equ	0xFE6
 35255                           postdec1	equ	0xFE5
 35256                           plusw1	equ	0xFE3
 35257                           fsr1h	equ	0xFE2
 35258                           fsr1l	equ	0xFE1
 35259                           bsr	equ	0xFE0
 35260                           indf2	equ	0xFDF
 35261                           postinc2	equ	0xFDE
 35262                           postdec2	equ	0xFDD
 35263                           plusw2	equ	0xFDB
 35264                           fsr2h	equ	0xFDA
 35265                           fsr2l	equ	0xFD9
 35266                           status	equ	0xFD8
 35267                           
 35268 ;; *************** function _APP_LEDUpdateUSBStatus *****************
 35269 ;; Defined at:
 35270 ;;		line 86 in file "src/app_led_usb_status.c"
 35271 ;; Parameters:    Size  Location     Type
 35272 ;;		None
 35273 ;; Auto vars:     Size  Location     Type
 35274 ;;		None
 35275 ;; Return value:  Size  Location     Type
 35276 ;;		None               void
 35277 ;; Registers used:
 35278 ;;		wreg, status,2, status,0, cstack
 35279 ;; Tracked objects:
 35280 ;;		On entry : 0/0
 35281 ;;		On exit  : 0/0
 35282 ;;		Unchanged: 0/0
 35283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35288 ;;Total ram usage:        0 bytes
 35289 ;; Hardware stack levels used:    1
 35290 ;; Hardware stack levels required when called:    7
 35291 ;; This function calls:
 35292 ;;		i1_update_LED
 35293 ;; This function is called by:
 35294 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35295 ;; This function uses a non-reentrant model
 35296 ;;
 35297                           
 35298                           	psect	text105
 35299  00B7E4                     __ptext105:
 35300                           	opt stack 0
 35301  00B7E4                     _APP_LEDUpdateUSBStatus:
 35302                           	opt stack 8
 35303                           
 35304                           ;app_led_usb_status.c: 90: if(UCONbits.SUSPND == 1)
 35305                           
 35306                           ;incstack = 0
 35307  00B7E4  A265               	btfss	3941,1,c	;volatile
 35308  00B7E6  D018               	goto	i1l10449
 35309                           
 35310                           ;app_led_usb_status.c: 91: {
 35311                           ;app_led_usb_status.c: 93: if (status_led != LED_OFF)
 35312  00B7E8  5055               	movf	_status_led,w,c	;volatile
 35313  00B7EA  B4D8               	btfsc	status,2,c
 35314  00B7EC  0012               	return	
 35315                           
 35316                           ;app_led_usb_status.c: 94: {
 35317                           ;app_led_usb_status.c: 95: status_led = LED_OFF;
 35318  00B7EE  0E00               	movlw	0
 35319  00B7F0  6E55               	movwf	_status_led,c	;volatile
 35320                           
 35321                           ;app_led_usb_status.c: 96: update_LED();
 35322  00B7F2  ECF7  F059         	call	i1_update_LED	;wreg free
 35323                           
 35324                           ;app_led_usb_status.c: 97: }
 35325                           ;app_led_usb_status.c: 98: return;
 35326  00B7F6  0012               	return	
 35327  00B7F8                     i1l10435:
 35328                           
 35329                           ;app_led_usb_status.c: 105: if (status_led == LED_OFF)
 35330  00B7F8  5055               	movf	_status_led,w,c	;volatile
 35331  00B7FA  A4D8               	btfss	status,2,c
 35332  00B7FC  0012               	return	
 35333                           
 35334                           ;app_led_usb_status.c: 106: {
 35335                           ;app_led_usb_status.c: 107: status_led = LED_FAST_PULSE;
 35336  00B7FE  0E01               	movlw	1
 35337  00B800  6E55               	movwf	_status_led,c	;volatile
 35338                           
 35339                           ;app_led_usb_status.c: 108: update_LED();
 35340  00B802  ECF7  F059         	call	i1_update_LED	;wreg free
 35341                           
 35342                           ;app_led_usb_status.c: 109: }
 35343                           ;app_led_usb_status.c: 110: break;
 35344  00B806  0012               	return	
 35345  00B808                     i1l10441:
 35346                           
 35347                           ;app_led_usb_status.c: 114: if (status_led != LED_OFF)
 35348  00B808  5055               	movf	_status_led,w,c	;volatile
 35349  00B80A  B4D8               	btfsc	status,2,c
 35350  00B80C  0012               	return	
 35351                           
 35352                           ;app_led_usb_status.c: 115: {
 35353                           ;app_led_usb_status.c: 116: status_led = LED_OFF;
 35354  00B80E  0E00               	movlw	0
 35355  00B810  6E55               	movwf	_status_led,c	;volatile
 35356                           
 35357                           ;app_led_usb_status.c: 117: update_LED();
 35358  00B812  ECF7  F059         	call	i1_update_LED	;wreg free
 35359                           
 35360                           ;app_led_usb_status.c: 120: }
 35361                           
 35362                           ;app_led_usb_status.c: 118: }
 35363                           ;app_led_usb_status.c: 119: break;
 35364  00B816  0012               	return	
 35365  00B818                     i1l10449:
 35366  00B818  504B               	movf	_USBDeviceState,w,c	;volatile
 35367                           
 35368                           ; Switch size 1, requested type "space"
 35369                           ; Number of cases is 1, Range of values is 32 to 32
 35370                           ; switch strategies available:
 35371                           ; Name         Instructions Cycles
 35372                           ; simple_byte            4     3 (average)
 35373                           ;	Chosen strategy is simple_byte
 35374  00B81A  0A20               	xorlw	32	; case 32
 35375  00B81C  B4D8               	btfsc	status,2,c
 35376  00B81E  D7EC               	goto	i1l10435
 35377  00B820  D7F3               	goto	i1l10441
 35378  00B822                     __end_of_APP_LEDUpdateUSBStatus:
 35379                           	opt stack 0
 35380                           pclatu	equ	0xFFB
 35381                           pclath	equ	0xFFA
 35382                           tblptru	equ	0xFF8
 35383                           tblptrh	equ	0xFF7
 35384                           tblptrl	equ	0xFF6
 35385                           tablat	equ	0xFF5
 35386                           prodh	equ	0xFF4
 35387                           prodl	equ	0xFF3
 35388                           intcon	equ	0xFF2
 35389                           intcon2	equ	0xFF1
 35390                           intcon3	equ	0xFF0
 35391                           indf0	equ	0xFEF
 35392                           postinc0	equ	0xFEE
 35393                           plusw0	equ	0xFEB
 35394                           fsr0h	equ	0xFEA
 35395                           fsr0l	equ	0xFE9
 35396                           wreg	equ	0xFE8
 35397                           indf1	equ	0xFE7
 35398                           postinc1	equ	0xFE6
 35399                           postdec1	equ	0xFE5
 35400                           plusw1	equ	0xFE3
 35401                           fsr1h	equ	0xFE2
 35402                           fsr1l	equ	0xFE1
 35403                           bsr	equ	0xFE0
 35404                           indf2	equ	0xFDF
 35405                           postinc2	equ	0xFDE
 35406                           postdec2	equ	0xFDD
 35407                           plusw2	equ	0xFDB
 35408                           fsr2h	equ	0xFDA
 35409                           fsr2l	equ	0xFD9
 35410                           status	equ	0xFD8
 35411                           
 35412 ;; *************** function i1_update_LED *****************
 35413 ;; Defined at:
 35414 ;;		line 735 in file "src/main.c"
 35415 ;; Parameters:    Size  Location     Type
 35416 ;;		None
 35417 ;; Auto vars:     Size  Location     Type
 35418 ;;		None
 35419 ;; Return value:  Size  Location     Type
 35420 ;;                  2    0[None  ] int 
 35421 ;; Registers used:
 35422 ;;		wreg, status,2, status,0
 35423 ;; Tracked objects:
 35424 ;;		On entry : 0/0
 35425 ;;		On exit  : 0/0
 35426 ;;		Unchanged: 0/0
 35427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35432 ;;Total ram usage:        0 bytes
 35433 ;; Hardware stack levels used:    1
 35434 ;; Hardware stack levels required when called:    6
 35435 ;; This function calls:
 35436 ;;		Nothing
 35437 ;; This function is called by:
 35438 ;;		_APP_LEDUpdateUSBStatus
 35439 ;;		_SYS_InterruptLow
 35440 ;; This function uses a non-reentrant model
 35441 ;;
 35442                           
 35443                           	psect	text106
 35444  00B3EE                     __ptext106:
 35445                           	opt stack 0
 35446  00B3EE                     i1_update_LED:
 35447                           	opt stack 11
 35448                           
 35449                           ;main.c: 737: switch(status_led)
 35450                           
 35451                           ;incstack = 0
 35452  00B3EE  D021               	goto	i1l10349
 35453  00B3F0                     i1l1863:
 35454                           
 35455                           ;main.c: 741: CCP1CONbits.DC1B0 = 0;
 35456  00B3F0  98BA               	bcf	4026,4,c	;volatile
 35457                           
 35458                           ;main.c: 742: CCP1CONbits.DC1B1 = 0;
 35459  00B3F2  9ABA               	bcf	4026,5,c	;volatile
 35460                           
 35461                           ;main.c: 743: CCPR1L = 0;
 35462  00B3F4  0E00               	movlw	0
 35463  00B3F6  6EBB               	movwf	4027,c	;volatile
 35464                           
 35465                           ;main.c: 744: LED_increasing = 1;
 35466  00B3F8  0E01               	movlw	1
 35467  00B3FA  6E45               	movwf	_LED_increasing,c	;volatile
 35468                           
 35469                           ;main.c: 745: break;
 35470  00B3FC  0012               	return	
 35471  00B3FE                     i1l1865:
 35472                           
 35473                           ;main.c: 749: CCP1CONbits.DC1B0 = 1023 & 1;
 35474  00B3FE  88BA               	bsf	4026,4,c	;volatile
 35475                           
 35476                           ;main.c: 750: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 35477  00B400  8ABA               	bsf	4026,5,c	;volatile
 35478                           
 35479                           ;main.c: 751: CCPR1L = (1023 >> 2);
 35480  00B402  68BB               	setf	4027,c	;volatile
 35481                           
 35482                           ;main.c: 752: repeat_full = 4;
 35483  00B404  0E04               	movlw	4
 35484  00B406  6E53               	movwf	_repeat_full,c	;volatile
 35485                           
 35486                           ;main.c: 753: break;
 35487  00B408  0012               	return	
 35488  00B40A                     i1l10335:
 35489                           
 35490                           ;main.c: 756: T4CONbits.T4CKPS = 0b01;
 35491  00B40A  5076               	movf	3958,w,c	;volatile
 35492  00B40C  0BFC               	andlw	-4
 35493  00B40E  0901               	iorlw	1
 35494  00B410  6E76               	movwf	3958,c	;volatile
 35495                           
 35496                           ;main.c: 758: CCP1CONbits.DC1B0 = 235 & 1;
 35497  00B412  88BA               	bsf	4026,4,c	;volatile
 35498                           
 35499                           ;main.c: 759: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35500  00B414  8ABA               	bsf	4026,5,c	;volatile
 35501                           
 35502                           ;main.c: 760: CCPR1L = (235 >> 2);
 35503  00B416  0E3A               	movlw	58
 35504  00B418  6EBB               	movwf	4027,c	;volatile
 35505                           
 35506                           ;main.c: 761: LED_increasing = 0;
 35507  00B41A  0E00               	movlw	0
 35508  00B41C  6E45               	movwf	_LED_increasing,c	;volatile
 35509                           
 35510                           ;main.c: 762: break;
 35511  00B41E  0012               	return	
 35512  00B420                     i1l10341:
 35513                           
 35514                           ;main.c: 765: T4CONbits.T4CKPS = 0b11;
 35515  00B420  0E03               	movlw	3
 35516  00B422  1276               	iorwf	3958,f,c	;volatile
 35517                           
 35518                           ;main.c: 767: CCP1CONbits.DC1B0 = 235 & 1;
 35519  00B424  88BA               	bsf	4026,4,c	;volatile
 35520                           
 35521                           ;main.c: 768: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35522  00B426  8ABA               	bsf	4026,5,c	;volatile
 35523                           
 35524                           ;main.c: 769: CCPR1L = (235 >> 2);
 35525  00B428  0E3A               	movlw	58
 35526  00B42A  6EBB               	movwf	4027,c	;volatile
 35527                           
 35528                           ;main.c: 770: LED_increasing = 0;
 35529  00B42C  0E00               	movlw	0
 35530  00B42E  6E45               	movwf	_LED_increasing,c	;volatile
 35531                           
 35532                           ;main.c: 772: }
 35533                           
 35534                           ;main.c: 771: break;
 35535  00B430  0012               	return	
 35536  00B432                     i1l10349:
 35537  00B432  5055               	movf	_status_led,w,c	;volatile
 35538                           
 35539                           ; Switch size 1, requested type "space"
 35540                           ; Number of cases is 4, Range of values is 0 to 3
 35541                           ; switch strategies available:
 35542                           ; Name         Instructions Cycles
 35543                           ; simple_byte           13     7 (average)
 35544                           ;	Chosen strategy is simple_byte
 35545  00B434  0A00               	xorlw	0	; case 0
 35546  00B436  B4D8               	btfsc	status,2,c
 35547  00B438  D7DB               	goto	i1l1863
 35548  00B43A  0A01               	xorlw	1	; case 1
 35549  00B43C  B4D8               	btfsc	status,2,c
 35550  00B43E  D7E5               	goto	i1l10335
 35551  00B440  0A03               	xorlw	3	; case 2
 35552  00B442  B4D8               	btfsc	status,2,c
 35553  00B444  D7ED               	goto	i1l10341
 35554  00B446  0A01               	xorlw	1	; case 3
 35555  00B448  A4D8               	btfss	status,2,c
 35556  00B44A  0012               	return	
 35557  00B44C  D7D8               	goto	i1l1865
 35558  00B44E                     __end_ofi1_update_LED:
 35559                           	opt stack 0
 35560                           pclatu	equ	0xFFB
 35561                           pclath	equ	0xFFA
 35562                           tblptru	equ	0xFF8
 35563                           tblptrh	equ	0xFF7
 35564                           tblptrl	equ	0xFF6
 35565                           tablat	equ	0xFF5
 35566                           prodh	equ	0xFF4
 35567                           prodl	equ	0xFF3
 35568                           intcon	equ	0xFF2
 35569                           intcon2	equ	0xFF1
 35570                           intcon3	equ	0xFF0
 35571                           indf0	equ	0xFEF
 35572                           postinc0	equ	0xFEE
 35573                           plusw0	equ	0xFEB
 35574                           fsr0h	equ	0xFEA
 35575                           fsr0l	equ	0xFE9
 35576                           wreg	equ	0xFE8
 35577                           indf1	equ	0xFE7
 35578                           postinc1	equ	0xFE6
 35579                           postdec1	equ	0xFE5
 35580                           plusw1	equ	0xFE3
 35581                           fsr1h	equ	0xFE2
 35582                           fsr1l	equ	0xFE1
 35583                           bsr	equ	0xFE0
 35584                           indf2	equ	0xFDF
 35585                           postinc2	equ	0xFDE
 35586                           postdec2	equ	0xFDD
 35587                           plusw2	equ	0xFDB
 35588                           fsr2h	equ	0xFDA
 35589                           fsr2l	equ	0xFD9
 35590                           status	equ	0xFD8
 35591                           
 35592 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 35593 ;; Defined at:
 35594 ;;		line 674 in file "src/main.c"
 35595 ;; Parameters:    Size  Location     Type
 35596 ;;		None
 35597 ;; Auto vars:     Size  Location     Type
 35598 ;;		None
 35599 ;; Return value:  Size  Location     Type
 35600 ;;		None               void
 35601 ;; Registers used:
 35602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35603 ;; Tracked objects:
 35604 ;;		On entry : 0/0
 35605 ;;		On exit  : 0/0
 35606 ;;		Unchanged: 0/0
 35607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35612 ;;Total ram usage:        0 bytes
 35613 ;; Hardware stack levels used:    1
 35614 ;; Hardware stack levels required when called:    8
 35615 ;; This function calls:
 35616 ;;		_USBEnableEndpoint
 35617 ;;		i1_USBTransferOnePacket
 35618 ;; This function is called by:
 35619 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35620 ;; This function uses a non-reentrant model
 35621 ;;
 35622                           
 35623                           	psect	text107
 35624  00B940                     __ptext107:
 35625                           	opt stack 0
 35626  00B940                     _APP_DeviceCustomHIDInitialize:
 35627                           	opt stack 7
 35628                           
 35629                           ;main.c: 678: USBInHandle = 0;
 35630                           
 35631                           ;incstack = 0
 35632  00B940  0E00               	movlw	0
 35633  00B942  0100               	movlb	0	; () banked
 35634  00B944  6F93               	movwf	_USBInHandle& (0+255),b
 35635  00B946  0E00               	movlw	0
 35636  00B948  0100               	movlb	0	; () banked
 35637  00B94A  6F94               	movwf	(_USBInHandle+1)& (0+255),b
 35638                           
 35639                           ; BSR set to: 0
 35640                           ;main.c: 680: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 35641  00B94C  0E1E               	movlw	30
 35642  00B94E  6E09               	movwf	USBEnableEndpoint@options,c
 35643  00B950  0E01               	movlw	1
 35644  00B952  EC11  F05C         	call	_USBEnableEndpoint
 35645                           
 35646                           ;main.c: 682: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
 35647  00B956  0E00               	movlw	0
 35648  00B958  6E01               	movwf	i1USBTransferOnePacket@dir,c
 35649  00B95A  0E00               	movlw	low _ReceivedDataBuffer
 35650  00B95C  6E02               	movwf	i1USBTransferOnePacket@data,c
 35651  00B95E  0E04               	movlw	high _ReceivedDataBuffer
 35652  00B960  6E03               	movwf	i1USBTransferOnePacket@data+1,c
 35653  00B962  0E40               	movlw	64
 35654  00B964  6E04               	movwf	i1USBTransferOnePacket@len,c
 35655  00B966  0E01               	movlw	1
 35656  00B968  ECD1  F052         	call	i1_USBTransferOnePacket
 35657  00B96C  C001  F1B7         	movff	?i1_USBTransferOnePacket,_USBOutHandle
 35658  00B970  C002  F1B8         	movff	?i1_USBTransferOnePacket+1,_USBOutHandle+1
 35659  00B974  0012               	return		;funcret
 35660  00B976                     __end_of_APP_DeviceCustomHIDInitialize:
 35661                           	opt stack 0
 35662                           pclatu	equ	0xFFB
 35663                           pclath	equ	0xFFA
 35664                           tblptru	equ	0xFF8
 35665                           tblptrh	equ	0xFF7
 35666                           tblptrl	equ	0xFF6
 35667                           tablat	equ	0xFF5
 35668                           prodh	equ	0xFF4
 35669                           prodl	equ	0xFF3
 35670                           intcon	equ	0xFF2
 35671                           intcon2	equ	0xFF1
 35672                           intcon3	equ	0xFF0
 35673                           indf0	equ	0xFEF
 35674                           postinc0	equ	0xFEE
 35675                           plusw0	equ	0xFEB
 35676                           fsr0h	equ	0xFEA
 35677                           fsr0l	equ	0xFE9
 35678                           wreg	equ	0xFE8
 35679                           indf1	equ	0xFE7
 35680                           postinc1	equ	0xFE6
 35681                           postdec1	equ	0xFE5
 35682                           plusw1	equ	0xFE3
 35683                           fsr1h	equ	0xFE2
 35684                           fsr1l	equ	0xFE1
 35685                           bsr	equ	0xFE0
 35686                           indf2	equ	0xFDF
 35687                           postinc2	equ	0xFDE
 35688                           postdec2	equ	0xFDD
 35689                           plusw2	equ	0xFDB
 35690                           fsr2h	equ	0xFDA
 35691                           fsr2l	equ	0xFD9
 35692                           status	equ	0xFD8
 35693                           
 35694 ;; *************** function i1_USBTransferOnePacket *****************
 35695 ;; Defined at:
 35696 ;;		line 995 in file "src/usb/usb_device.c"
 35697 ;; Parameters:    Size  Location     Type
 35698 ;;  ep              1    wreg     unsigned char 
 35699 ;;  dir             1    0[COMRAM] unsigned char 
 35700 ;;  data            2    1[COMRAM] PTR unsigned char 
 35701 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 35702 ;;  len             1    3[COMRAM] unsigned char 
 35703 ;; Auto vars:     Size  Location     Type
 35704 ;;  ep              1    4[COMRAM] unsigned char 
 35705 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 35706 ;;		 -> BDT(32), NULL(0), 
 35707 ;; Return value:  Size  Location     Type
 35708 ;;                  2    0[COMRAM] PTR void 
 35709 ;; Registers used:
 35710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35711 ;; Tracked objects:
 35712 ;;		On entry : 0/0
 35713 ;;		On exit  : 0/0
 35714 ;;		Unchanged: 0/0
 35715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35717 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35719 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35720 ;;Total ram usage:        7 bytes
 35721 ;; Hardware stack levels used:    1
 35722 ;; Hardware stack levels required when called:    6
 35723 ;; This function calls:
 35724 ;;		Nothing
 35725 ;; This function is called by:
 35726 ;;		_APP_DeviceCustomHIDInitialize
 35727 ;; This function uses a non-reentrant model
 35728 ;;
 35729                           
 35730                           	psect	text108
 35731  00A5A2                     __ptext108:
 35732                           	opt stack 0
 35733  00A5A2                     i1_USBTransferOnePacket:
 35734                           	opt stack 8
 35735                           
 35736                           ;incstack = 0
 35737                           ;i1USBTransferOnePacket@ep stored from wreg
 35738  00A5A2  6E05               	movwf	i1USBTransferOnePacket@ep,c
 35739                           
 35740                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 35741                           ;usb_device.c: 1000: if(dir != 0)
 35742  00A5A4  5001               	movf	i1USBTransferOnePacket@dir,w,c
 35743  00A5A6  B4D8               	btfsc	status,2,c
 35744  00A5A8  D007               	goto	i1l10303
 35745                           
 35746                           ;usb_device.c: 1001: {
 35747                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 35748  00A5AA  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35749  00A5AC  0D02               	mullw	2
 35750  00A5AE  0E8B               	movlw	low _pBDTEntryIn
 35751  00A5B0  24F3               	addwf	prodl,w,c
 35752  00A5B2  6ED9               	movwf	fsr2l,c
 35753  00A5B4  0E00               	movlw	high _pBDTEntryIn
 35754  00A5B6  D006               	goto	L23
 35755  00A5B8                     i1l10303:
 35756                           
 35757                           ;usb_device.c: 1005: else
 35758                           ;usb_device.c: 1006: {
 35759                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 35760  00A5B8  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35761  00A5BA  0D02               	mullw	2
 35762  00A5BC  0E8F               	movlw	low _pBDTEntryOut
 35763  00A5BE  24F3               	addwf	prodl,w,c
 35764  00A5C0  6ED9               	movwf	fsr2l,c
 35765  00A5C2  0E00               	movlw	high _pBDTEntryOut
 35766  00A5C4                     L23:
 35767  00A5C4  20F4               	addwfc	prodh,w,c
 35768  00A5C6  6EDA               	movwf	fsr2h,c
 35769  00A5C8  CFDE F006          	movff	postinc2,i1USBTransferOnePacket@handle
 35770  00A5CC  CFDD F007          	movff	postdec2,i1USBTransferOnePacket@handle+1
 35771                           
 35772                           ;usb_device.c: 1009: }
 35773                           ;usb_device.c: 1013: if(handle == 0)
 35774  00A5D0  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35775  00A5D2  1007               	iorwf	i1USBTransferOnePacket@handle+1,w,c
 35776  00A5D4  A4D8               	btfss	status,2,c
 35777  00A5D6  D005               	goto	i1l10311
 35778                           
 35779                           ;usb_device.c: 1014: {
 35780                           ;usb_device.c: 1015: return 0;
 35781  00A5D8  0E00               	movlw	0
 35782  00A5DA  6E01               	movwf	?i1_USBTransferOnePacket,c
 35783  00A5DC  0E00               	movlw	0
 35784  00A5DE  6E02               	movwf	?i1_USBTransferOnePacket+1,c
 35785  00A5E0  0012               	return	
 35786  00A5E2                     i1l10311:
 35787                           
 35788                           ;usb_device.c: 1016: }
 35789                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 35790  00A5E2  EE20 F002          	lfsr	2,2
 35791  00A5E6  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35792  00A5E8  26D9               	addwf	fsr2l,f,c
 35793  00A5EA  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 35794  00A5EC  22DA               	addwfc	fsr2h,f,c
 35795  00A5EE  C002  FFDE         	movff	i1USBTransferOnePacket@data,postinc2
 35796  00A5F2  C003  FFDD         	movff	i1USBTransferOnePacket@data+1,postdec2
 35797                           
 35798                           ;usb_device.c: 1030: handle->CNT = len;
 35799  00A5F6  EE20 F001          	lfsr	2,1
 35800  00A5FA  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35801  00A5FC  26D9               	addwf	fsr2l,f,c
 35802  00A5FE  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 35803  00A600  22DA               	addwfc	fsr2h,f,c
 35804  00A602  C004  FFDF         	movff	i1USBTransferOnePacket@len,indf2
 35805                           
 35806                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 35807  00A606  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35808  00A60A  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35809  00A60E  0E40               	movlw	64
 35810  00A610  16DF               	andwf	indf2,f,c
 35811                           
 35812                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 35813  00A612  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35814  00A616  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35815  00A61A  0E00               	movlw	0
 35816  00A61C  86DB               	bsf	plusw2,3,c
 35817                           
 35818                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 35819  00A61E  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35820  00A622  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35821  00A626  0E00               	movlw	0
 35822  00A628  8EDB               	bsf	plusw2,7,c
 35823                           
 35824                           ;usb_device.c: 1036: if(dir != 0)
 35825  00A62A  5001               	movf	i1USBTransferOnePacket@dir,w,c
 35826  00A62C  B4D8               	btfsc	status,2,c
 35827  00A62E  D007               	goto	i1l10323
 35828                           
 35829                           ;usb_device.c: 1037: {
 35830                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 35831  00A630  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35832  00A632  0D02               	mullw	2
 35833  00A634  0E8B               	movlw	low _pBDTEntryIn
 35834  00A636  24F3               	addwf	prodl,w,c
 35835  00A638  6ED9               	movwf	fsr2l,c
 35836  00A63A  0E00               	movlw	high _pBDTEntryIn
 35837  00A63C  D006               	goto	L24
 35838  00A63E                     i1l10323:
 35839                           
 35840                           ;usb_device.c: 1041: else
 35841                           ;usb_device.c: 1042: {
 35842                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 35843  00A63E  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35844  00A640  0D02               	mullw	2
 35845  00A642  0E8F               	movlw	low _pBDTEntryOut
 35846  00A644  24F3               	addwf	prodl,w,c
 35847  00A646  6ED9               	movwf	fsr2l,c
 35848  00A648  0E00               	movlw	high _pBDTEntryOut
 35849  00A64A                     L24:
 35850  00A64A  20F4               	addwfc	prodh,w,c
 35851  00A64C  6EDA               	movwf	fsr2h,c
 35852  00A64E  0E04               	movlw	4
 35853  00A650  1ADF               	xorwf	indf2,f,c
 35854                           
 35855                           ;usb_device.c: 1045: }
 35856                           ;usb_device.c: 1046: return (void*)handle;
 35857  00A652  C006  F001         	movff	i1USBTransferOnePacket@handle,?i1_USBTransferOnePacket
 35858  00A656  C007  F002         	movff	i1USBTransferOnePacket@handle+1,?i1_USBTransferOnePacket+1
 35859  00A65A  0012               	return	
 35860  00A65C                     __end_ofi1_USBTransferOnePacket:
 35861                           	opt stack 0
 35862                           pclatu	equ	0xFFB
 35863                           pclath	equ	0xFFA
 35864                           tblptru	equ	0xFF8
 35865                           tblptrh	equ	0xFF7
 35866                           tblptrl	equ	0xFF6
 35867                           tablat	equ	0xFF5
 35868                           prodh	equ	0xFF4
 35869                           prodl	equ	0xFF3
 35870                           intcon	equ	0xFF2
 35871                           intcon2	equ	0xFF1
 35872                           intcon3	equ	0xFF0
 35873                           indf0	equ	0xFEF
 35874                           postinc0	equ	0xFEE
 35875                           plusw0	equ	0xFEB
 35876                           fsr0h	equ	0xFEA
 35877                           fsr0l	equ	0xFE9
 35878                           wreg	equ	0xFE8
 35879                           indf1	equ	0xFE7
 35880                           postinc1	equ	0xFE6
 35881                           postdec1	equ	0xFE5
 35882                           plusw1	equ	0xFE3
 35883                           fsr1h	equ	0xFE2
 35884                           fsr1l	equ	0xFE1
 35885                           bsr	equ	0xFE0
 35886                           indf2	equ	0xFDF
 35887                           postinc2	equ	0xFDE
 35888                           postdec2	equ	0xFDD
 35889                           plusw2	equ	0xFDB
 35890                           fsr2h	equ	0xFDA
 35891                           fsr2l	equ	0xFD9
 35892                           status	equ	0xFD8
 35893                           
 35894 ;; *************** function _USBEnableEndpoint *****************
 35895 ;; Defined at:
 35896 ;;		line 878 in file "src/usb/usb_device.c"
 35897 ;; Parameters:    Size  Location     Type
 35898 ;;  ep              1    wreg     unsigned char 
 35899 ;;  options         1    8[COMRAM] unsigned char 
 35900 ;; Auto vars:     Size  Location     Type
 35901 ;;  ep              1   11[COMRAM] unsigned char 
 35902 ;;  p               2    9[COMRAM] PTR unsigned char 
 35903 ;;		 -> UEP0(1), 
 35904 ;; Return value:  Size  Location     Type
 35905 ;;		None               void
 35906 ;; Registers used:
 35907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35908 ;; Tracked objects:
 35909 ;;		On entry : 0/0
 35910 ;;		On exit  : 0/0
 35911 ;;		Unchanged: 0/0
 35912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35914 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35916 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35917 ;;Total ram usage:        4 bytes
 35918 ;; Hardware stack levels used:    1
 35919 ;; Hardware stack levels required when called:    7
 35920 ;; This function calls:
 35921 ;;		_USBConfigureEndpoint
 35922 ;; This function is called by:
 35923 ;;		_APP_DeviceCustomHIDInitialize
 35924 ;; This function uses a non-reentrant model
 35925 ;;
 35926                           
 35927                           	psect	text109
 35928  00B822                     __ptext109:
 35929                           	opt stack 0
 35930  00B822                     _USBEnableEndpoint:
 35931                           	opt stack 7
 35932                           
 35933                           ;incstack = 0
 35934                           ;USBEnableEndpoint@ep stored from wreg
 35935  00B822  6E0C               	movwf	USBEnableEndpoint@ep,c
 35936                           
 35937                           ;usb_device.c: 880: unsigned char* p;
 35938                           ;usb_device.c: 884: if(options & 0x04)
 35939  00B824  A409               	btfss	USBEnableEndpoint@options,2,c
 35940  00B826  D005               	goto	i1l10291
 35941                           
 35942                           ;usb_device.c: 885: {
 35943                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 35944  00B828  0E00               	movlw	0
 35945  00B82A  6E01               	movwf	USBConfigureEndpoint@direction,c
 35946  00B82C  500C               	movf	USBEnableEndpoint@ep,w,c
 35947  00B82E  ECAE  F056         	call	_USBConfigureEndpoint
 35948  00B832                     i1l10291:
 35949                           
 35950                           ;usb_device.c: 887: }
 35951                           ;usb_device.c: 888: if(options & 0x02)
 35952  00B832  A209               	btfss	USBEnableEndpoint@options,1,c
 35953  00B834  D005               	goto	i1l10295
 35954                           
 35955                           ;usb_device.c: 889: {
 35956                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 35957  00B836  0E01               	movlw	1
 35958  00B838  6E01               	movwf	USBConfigureEndpoint@direction,c
 35959  00B83A  500C               	movf	USBEnableEndpoint@ep,w,c
 35960  00B83C  ECAE  F056         	call	_USBConfigureEndpoint
 35961  00B840                     i1l10295:
 35962                           
 35963                           ;usb_device.c: 891: }
 35964                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 35965  00B840  500C               	movf	USBEnableEndpoint@ep,w,c
 35966  00B842  0D01               	mullw	1
 35967  00B844  0E26               	movlw	38
 35968  00B846  24F3               	addwf	prodl,w,c
 35969  00B848  6E0A               	movwf	USBEnableEndpoint@p,c
 35970  00B84A  0E0F               	movlw	15
 35971  00B84C  20F4               	addwfc	prodh,w,c
 35972  00B84E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 35973                           
 35974                           ;usb_device.c: 901: *p = options;
 35975  00B850  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 35976  00B854  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 35977  00B858  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 35978  00B85C  0012               	return		;funcret
 35979  00B85E                     __end_of_USBEnableEndpoint:
 35980                           	opt stack 0
 35981                           pclatu	equ	0xFFB
 35982                           pclath	equ	0xFFA
 35983                           tblptru	equ	0xFF8
 35984                           tblptrh	equ	0xFF7
 35985                           tblptrl	equ	0xFF6
 35986                           tablat	equ	0xFF5
 35987                           prodh	equ	0xFF4
 35988                           prodl	equ	0xFF3
 35989                           intcon	equ	0xFF2
 35990                           intcon2	equ	0xFF1
 35991                           intcon3	equ	0xFF0
 35992                           indf0	equ	0xFEF
 35993                           postinc0	equ	0xFEE
 35994                           plusw0	equ	0xFEB
 35995                           fsr0h	equ	0xFEA
 35996                           fsr0l	equ	0xFE9
 35997                           wreg	equ	0xFE8
 35998                           indf1	equ	0xFE7
 35999                           postinc1	equ	0xFE6
 36000                           postdec1	equ	0xFE5
 36001                           plusw1	equ	0xFE3
 36002                           fsr1h	equ	0xFE2
 36003                           fsr1l	equ	0xFE1
 36004                           bsr	equ	0xFE0
 36005                           indf2	equ	0xFDF
 36006                           postinc2	equ	0xFDE
 36007                           postdec2	equ	0xFDD
 36008                           plusw2	equ	0xFDB
 36009                           fsr2h	equ	0xFDA
 36010                           fsr2l	equ	0xFD9
 36011                           status	equ	0xFD8
 36012                           
 36013 ;; *************** function _USBConfigureEndpoint *****************
 36014 ;; Defined at:
 36015 ;;		line 1543 in file "src/usb/usb_device.c"
 36016 ;; Parameters:    Size  Location     Type
 36017 ;;  EPNum           1    wreg     unsigned char 
 36018 ;;  direction       1    0[COMRAM] unsigned char 
 36019 ;; Auto vars:     Size  Location     Type
 36020 ;;  EPNum           1    5[COMRAM] unsigned char 
 36021 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 36022 ;;		 -> BDT(32), 
 36023 ;; Return value:  Size  Location     Type
 36024 ;;		None               void
 36025 ;; Registers used:
 36026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36027 ;; Tracked objects:
 36028 ;;		On entry : 0/0
 36029 ;;		On exit  : 0/0
 36030 ;;		Unchanged: 0/0
 36031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36032 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36035 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36036 ;;Total ram usage:        8 bytes
 36037 ;; Hardware stack levels used:    1
 36038 ;; Hardware stack levels required when called:    6
 36039 ;; This function calls:
 36040 ;;		Nothing
 36041 ;; This function is called by:
 36042 ;;		_USBEnableEndpoint
 36043 ;; This function uses a non-reentrant model
 36044 ;;
 36045                           
 36046                           	psect	text110
 36047  00AD5C                     __ptext110:
 36048                           	opt stack 0
 36049  00AD5C                     _USBConfigureEndpoint:
 36050                           	opt stack 7
 36051                           
 36052                           ;incstack = 0
 36053                           ;USBConfigureEndpoint@EPNum stored from wreg
 36054  00AD5C  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 36055                           
 36056                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 36057                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 36058  00AD5E  0E00               	movlw	0
 36059  00AD60  6E07               	movwf	USBConfigureEndpoint@handle,c
 36060  00AD62  0E0D               	movlw	13
 36061  00AD64  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 36062                           
 36063                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 36064  00AD66  5001               	movf	USBConfigureEndpoint@direction,w,c
 36065  00AD68  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 36066  00AD6A  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 36067  00AD6C  90D8               	bcf	status,0,c
 36068  00AD6E  3602               	rlcf	??_USBConfigureEndpoint,f,c
 36069  00AD70  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 36070  00AD72  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 36071  00AD74  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 36072  00AD76  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 36073  00AD78  90D8               	bcf	status,0,c
 36074  00AD7A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 36075  00AD7C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 36076  00AD7E  90D8               	bcf	status,0,c
 36077  00AD80  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 36078  00AD82  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 36079  00AD84  5002               	movf	??_USBConfigureEndpoint,w,c
 36080  00AD86  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 36081  00AD88  5003               	movf	??_USBConfigureEndpoint+1,w,c
 36082  00AD8A  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 36083  00AD8C  90D8               	bcf	status,0,c
 36084  00AD8E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 36085  00AD90  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 36086  00AD92  90D8               	bcf	status,0,c
 36087  00AD94  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 36088  00AD96  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 36089  00AD98  5004               	movf	??_USBConfigureEndpoint+2,w,c
 36090  00AD9A  2607               	addwf	USBConfigureEndpoint@handle,f,c
 36091  00AD9C  5005               	movf	??_USBConfigureEndpoint+3,w,c
 36092  00AD9E  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 36093                           
 36094                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 36095  00ADA0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 36096  00ADA4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 36097  00ADA8  9EDF               	bcf	indf2,7,c
 36098                           
 36099                           ;usb_device.c: 1557: if(direction == 0)
 36100  00ADAA  5001               	movf	USBConfigureEndpoint@direction,w,c
 36101  00ADAC  A4D8               	btfss	status,2,c
 36102  00ADAE  D007               	goto	i1l10195
 36103                           
 36104                           ;usb_device.c: 1558: {
 36105                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 36106  00ADB0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 36107  00ADB2  0D02               	mullw	2
 36108  00ADB4  0E8F               	movlw	low _pBDTEntryOut
 36109  00ADB6  24F3               	addwf	prodl,w,c
 36110  00ADB8  6ED9               	movwf	fsr2l,c
 36111  00ADBA  0E00               	movlw	high _pBDTEntryOut
 36112  00ADBC  D006               	goto	L25
 36113  00ADBE                     i1l10195:
 36114                           
 36115                           ;usb_device.c: 1561: else
 36116                           ;usb_device.c: 1562: {
 36117                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 36118  00ADBE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 36119  00ADC0  0D02               	mullw	2
 36120  00ADC2  0E8B               	movlw	low _pBDTEntryIn
 36121  00ADC4  24F3               	addwf	prodl,w,c
 36122  00ADC6  6ED9               	movwf	fsr2l,c
 36123  00ADC8  0E00               	movlw	high _pBDTEntryIn
 36124  00ADCA                     L25:
 36125  00ADCA  20F4               	addwfc	prodh,w,c
 36126  00ADCC  6EDA               	movwf	fsr2h,c
 36127  00ADCE  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 36128  00ADD2  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 36129                           
 36130                           ;usb_device.c: 1564: }
 36131                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 36132  00ADD6  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 36133  00ADDA  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 36134  00ADDE  9CDF               	bcf	indf2,6,c
 36135                           
 36136                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 36137  00ADE0  EE20 F004          	lfsr	2,4
 36138  00ADE4  5007               	movf	USBConfigureEndpoint@handle,w,c
 36139  00ADE6  26D9               	addwf	fsr2l,f,c
 36140  00ADE8  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 36141  00ADEA  22DA               	addwfc	fsr2h,f,c
 36142  00ADEC  8CDF               	bsf	indf2,6,c
 36143  00ADEE  0012               	return		;funcret
 36144  00ADF0                     __end_of_USBConfigureEndpoint:
 36145                           	opt stack 0
 36146                           pclatu	equ	0xFFB
 36147                           pclath	equ	0xFFA
 36148                           tblptru	equ	0xFF8
 36149                           tblptrh	equ	0xFF7
 36150                           tblptrl	equ	0xFF6
 36151                           tablat	equ	0xFF5
 36152                           prodh	equ	0xFF4
 36153                           prodl	equ	0xFF3
 36154                           intcon	equ	0xFF2
 36155                           intcon2	equ	0xFF1
 36156                           intcon3	equ	0xFF0
 36157                           indf0	equ	0xFEF
 36158                           postinc0	equ	0xFEE
 36159                           plusw0	equ	0xFEB
 36160                           fsr0h	equ	0xFEA
 36161                           fsr0l	equ	0xFE9
 36162                           wreg	equ	0xFE8
 36163                           indf1	equ	0xFE7
 36164                           postinc1	equ	0xFE6
 36165                           postdec1	equ	0xFE5
 36166                           plusw1	equ	0xFE3
 36167                           fsr1h	equ	0xFE2
 36168                           fsr1l	equ	0xFE1
 36169                           bsr	equ	0xFE0
 36170                           indf2	equ	0xFDF
 36171                           postinc2	equ	0xFDE
 36172                           postdec2	equ	0xFDD
 36173                           plusw2	equ	0xFDB
 36174                           fsr2h	equ	0xFDA
 36175                           fsr2l	equ	0xFD9
 36176                           status	equ	0xFD8
 36177                           
 36178 ;; *************** function _USBCtrlTrfOutHandler *****************
 36179 ;; Defined at:
 36180 ;;		line 2541 in file "src/usb/usb_device.c"
 36181 ;; Parameters:    Size  Location     Type
 36182 ;;		None
 36183 ;; Auto vars:     Size  Location     Type
 36184 ;;		None
 36185 ;; Return value:  Size  Location     Type
 36186 ;;		None               void
 36187 ;; Registers used:
 36188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36189 ;; Tracked objects:
 36190 ;;		On entry : 0/0
 36191 ;;		On exit  : 0/0
 36192 ;;		Unchanged: 0/0
 36193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36198 ;;Total ram usage:        0 bytes
 36199 ;; Hardware stack levels used:    1
 36200 ;; Hardware stack levels required when called:    8
 36201 ;; This function calls:
 36202 ;;		_USBCtrlTrfRxService
 36203 ;; This function is called by:
 36204 ;;		_USBCtrlEPService
 36205 ;; This function uses a non-reentrant model
 36206 ;;
 36207                           
 36208                           	psect	text111
 36209  00B4AE                     __ptext111:
 36210                           	opt stack 0
 36211  00B4AE                     _USBCtrlTrfOutHandler:
 36212                           	opt stack 7
 36213                           
 36214                           ;usb_device.c: 2543: if(controlTransferState == 2)
 36215                           
 36216                           ;incstack = 0
 36217  00B4AE  0E02               	movlw	2
 36218  00B4B0  184F               	xorwf	_controlTransferState,w,c	;volatile
 36219  00B4B2  A4D8               	btfss	status,2,c
 36220  00B4B4  D003               	goto	i1l12655
 36221                           
 36222                           ;usb_device.c: 2544: {
 36223                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 36224  00B4B6  EC38  F047         	call	_USBCtrlTrfRxService	;wreg free
 36225                           
 36226                           ;usb_device.c: 2546: }
 36227  00B4BA  0012               	return	
 36228  00B4BC                     i1l12655:
 36229                           
 36230                           ;usb_device.c: 2547: else
 36231                           ;usb_device.c: 2548: {
 36232                           ;usb_device.c: 2551: controlTransferState = 0;
 36233  00B4BC  0E00               	movlw	0
 36234  00B4BE  6E4F               	movwf	_controlTransferState,c	;volatile
 36235                           
 36236                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 36237  00B4C0  5044               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 36238  00B4C2  A4D8               	btfss	status,2,c
 36239  00B4C4  D01F               	goto	i1l12663
 36240                           
 36241                           ;usb_device.c: 2559: {
 36242                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 36243  00B4C6  EE20 F001          	lfsr	2,1
 36244  00B4CA  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36245  00B4CC  26D9               	addwf	fsr2l,f,c
 36246  00B4CE  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36247  00B4D0  22DA               	addwfc	fsr2h,f,c
 36248  00B4D2  0E08               	movlw	8
 36249  00B4D4  6EDF               	movwf	indf2,c
 36250                           
 36251                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36252  00B4D6  EE20 F002          	lfsr	2,2
 36253  00B4DA  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36254  00B4DC  26D9               	addwf	fsr2l,f,c
 36255  00B4DE  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36256  00B4E0  22DA               	addwfc	fsr2h,f,c
 36257  00B4E2  0E20               	movlw	32
 36258  00B4E4  6EDE               	movwf	postinc2,c
 36259  00B4E6  0E0D               	movlw	13
 36260  00B4E8  6EDD               	movwf	postdec2,c
 36261                           
 36262                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36263  00B4EA  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36264  00B4EE  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36265  00B4F2  0E0C               	movlw	12
 36266  00B4F4  6EDF               	movwf	indf2,c
 36267                           
 36268                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36269  00B4F6  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36270  00B4FA  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36271  00B4FE  0E00               	movlw	0
 36272  00B500  8EDB               	bsf	plusw2,7,c
 36273                           
 36274                           ;usb_device.c: 2564: }
 36275  00B502  0012               	return	
 36276  00B504                     i1l12663:
 36277                           
 36278                           ;usb_device.c: 2565: else
 36279                           ;usb_device.c: 2566: {
 36280                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 36281  00B504  0E00               	movlw	0
 36282  00B506  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36283  00B508  0012               	return	
 36284  00B50A                     __end_of_USBCtrlTrfOutHandler:
 36285                           	opt stack 0
 36286                           pclatu	equ	0xFFB
 36287                           pclath	equ	0xFFA
 36288                           tblptru	equ	0xFF8
 36289                           tblptrh	equ	0xFF7
 36290                           tblptrl	equ	0xFF6
 36291                           tablat	equ	0xFF5
 36292                           prodh	equ	0xFF4
 36293                           prodl	equ	0xFF3
 36294                           intcon	equ	0xFF2
 36295                           intcon2	equ	0xFF1
 36296                           intcon3	equ	0xFF0
 36297                           indf0	equ	0xFEF
 36298                           postinc0	equ	0xFEE
 36299                           plusw0	equ	0xFEB
 36300                           fsr0h	equ	0xFEA
 36301                           fsr0l	equ	0xFE9
 36302                           wreg	equ	0xFE8
 36303                           indf1	equ	0xFE7
 36304                           postinc1	equ	0xFE6
 36305                           postdec1	equ	0xFE5
 36306                           plusw1	equ	0xFE3
 36307                           fsr1h	equ	0xFE2
 36308                           fsr1l	equ	0xFE1
 36309                           bsr	equ	0xFE0
 36310                           indf2	equ	0xFDF
 36311                           postinc2	equ	0xFDE
 36312                           postdec2	equ	0xFDD
 36313                           plusw2	equ	0xFDB
 36314                           fsr2h	equ	0xFDA
 36315                           fsr2l	equ	0xFD9
 36316                           status	equ	0xFD8
 36317                           
 36318 ;; *************** function _USBCtrlTrfRxService *****************
 36319 ;; Defined at:
 36320 ;;		line 1852 in file "src/usb/usb_device.c"
 36321 ;; Parameters:    Size  Location     Type
 36322 ;;		None
 36323 ;; Auto vars:     Size  Location     Type
 36324 ;;  byteToRead      1    1[COMRAM] unsigned char 
 36325 ;;  i               1    0[COMRAM] unsigned char 
 36326 ;; Return value:  Size  Location     Type
 36327 ;;		None               void
 36328 ;; Registers used:
 36329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36330 ;; Tracked objects:
 36331 ;;		On entry : 0/0
 36332 ;;		On exit  : 0/0
 36333 ;;		Unchanged: 0/0
 36334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36339 ;;Total ram usage:        2 bytes
 36340 ;; Hardware stack levels used:    1
 36341 ;; Hardware stack levels required when called:    7
 36342 ;; This function calls:
 36343 ;;		_USBCtrlEPAllowStatusStage
 36344 ;; This function is called by:
 36345 ;;		_USBCtrlTrfOutHandler
 36346 ;; This function uses a non-reentrant model
 36347 ;;
 36348                           
 36349                           	psect	text112
 36350  008E70                     __ptext112:
 36351                           	opt stack 0
 36352  008E70                     _USBCtrlTrfRxService:
 36353                           	opt stack 7
 36354                           
 36355                           ;usb_device.c: 1854: uint8_t byteToRead;
 36356                           ;usb_device.c: 1855: uint8_t i;
 36357                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 36358                           
 36359                           ;incstack = 0
 36360  008E70  EE20 F001          	lfsr	2,1
 36361  008E74  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36362  008E76  26D9               	addwf	fsr2l,f,c
 36363  008E78  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36364  008E7A  22DA               	addwfc	fsr2h,f,c
 36365  008E7C  50DF               	movf	indf2,w,c
 36366  008E7E  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 36367                           
 36368                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 36369  008E80  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36370  008E82  0100               	movlb	0	; () banked
 36371  008E84  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 36372  008E86  0E00               	movlw	0
 36373  008E88  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 36374  008E8A  A0D8               	btfss	status,0,c
 36375                           
 36376                           ; BSR set to: 0
 36377                           ;usb_device.c: 1866: {
 36378                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 36379  008E8C  C064  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 36380                           
 36381                           ; BSR set to: 0
 36382                           ;usb_device.c: 1868: }
 36383                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 36384                           
 36385                           ; BSR set to: 0
 36386  008E90  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36387  008E92  0100               	movlb	0	; () banked
 36388  008E94  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 36389  008E96  0E00               	movlw	0
 36390  008E98  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 36391                           
 36392                           ; BSR set to: 0
 36393                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 36394  008E9A  0E00               	movlw	0
 36395  008E9C  6E01               	movwf	USBCtrlTrfRxService@i,c
 36396  008E9E  D012               	goto	i1l11549
 36397  008EA0                     i1l11543:
 36398                           
 36399                           ; BSR set to: 0
 36400                           ;usb_device.c: 1875: {
 36401                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 36402  008EA0  5001               	movf	USBCtrlTrfRxService@i,w,c
 36403  008EA2  0D01               	mullw	1
 36404  008EA4  0E28               	movlw	40
 36405  008EA6  24F3               	addwf	prodl,w,c
 36406  008EA8  6ED9               	movwf	fsr2l,c
 36407  008EAA  0E0D               	movlw	13
 36408  008EAC  20F4               	addwfc	prodh,w,c
 36409  008EAE  6EDA               	movwf	fsr2h,c
 36410  008EB0  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 36411  008EB4  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 36412  008EB8  CFDF FFE7          	movff	indf2,indf1
 36413                           
 36414                           ; BSR set to: 0
 36415  008EBC  0100               	movlb	0	; () banked
 36416  008EBE  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 36417  008EC0  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 36418                           
 36419                           ; BSR set to: 0
 36420  008EC2  2A01               	incf	USBCtrlTrfRxService@i,f,c
 36421  008EC4                     i1l11549:
 36422                           
 36423                           ; BSR set to: 0
 36424  008EC4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36425  008EC6  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 36426  008EC8  A0D8               	btfss	status,0,c
 36427  008ECA  D7EA               	goto	i1l11543
 36428                           
 36429                           ; BSR set to: 0
 36430                           ;usb_device.c: 1877: }
 36431                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 36432                           
 36433                           ; BSR set to: 0
 36434  008ECC  0100               	movlb	0	; () banked
 36435  008ECE  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 36436  008ED0  0100               	movlb	0	; () banked
 36437  008ED2  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 36438  008ED4  B4D8               	btfsc	status,2,c
 36439  008ED6  D032               	goto	i1l11565
 36440                           
 36441                           ; BSR set to: 0
 36442                           ;usb_device.c: 1882: {
 36443                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 36444  008ED8  EE20 F001          	lfsr	2,1
 36445  008EDC  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36446  008EDE  26D9               	addwf	fsr2l,f,c
 36447  008EE0  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36448  008EE2  22DA               	addwfc	fsr2h,f,c
 36449  008EE4  0E08               	movlw	8
 36450  008EE6  6EDF               	movwf	indf2,c
 36451                           
 36452                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 36453  008EE8  EE20 F002          	lfsr	2,2
 36454  008EEC  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36455  008EEE  26D9               	addwf	fsr2l,f,c
 36456  008EF0  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36457  008EF2  22DA               	addwfc	fsr2h,f,c
 36458  008EF4  0E28               	movlw	40
 36459  008EF6  6EDE               	movwf	postinc2,c
 36460  008EF8  0E0D               	movlw	13
 36461  008EFA  6EDD               	movwf	postdec2,c
 36462                           
 36463                           ; BSR set to: 0
 36464                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 36465  008EFC  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36466  008F00  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36467  008F04  BCDF               	btfsc	indf2,6,c
 36468  008F06  D00D               	goto	i1l11561
 36469                           
 36470                           ; BSR set to: 0
 36471                           ;usb_device.c: 1886: {
 36472                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 36473  008F08  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36474  008F0C  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36475  008F10  0E48               	movlw	72
 36476  008F12  6EDF               	movwf	indf2,c
 36477                           
 36478                           ; BSR set to: 0
 36479                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36480  008F14  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36481  008F18  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36482  008F1C  0E00               	movlw	0
 36483  008F1E  8EDB               	bsf	plusw2,7,c
 36484                           
 36485                           ;usb_device.c: 1889: }
 36486  008F20  0012               	return	
 36487  008F22                     i1l11561:
 36488                           
 36489                           ; BSR set to: 0
 36490                           ;usb_device.c: 1890: else
 36491                           ;usb_device.c: 1891: {
 36492                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 36493  008F22  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36494  008F26  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36495  008F2A  0E08               	movlw	8
 36496  008F2C  6EDF               	movwf	indf2,c
 36497                           
 36498                           ; BSR set to: 0
 36499                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36500  008F2E  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36501  008F32  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36502  008F36  0E00               	movlw	0
 36503  008F38  8EDB               	bsf	plusw2,7,c
 36504                           
 36505                           ; BSR set to: 0
 36506                           ;usb_device.c: 1894: }
 36507                           ;usb_device.c: 1895: }
 36508  008F3A  0012               	return	
 36509  008F3C                     i1l11565:
 36510                           
 36511                           ; BSR set to: 0
 36512                           ;usb_device.c: 1896: else
 36513                           ;usb_device.c: 1897: {
 36514                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 36515  008F3C  EE20 F001          	lfsr	2,1
 36516  008F40  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36517  008F42  26D9               	addwf	fsr2l,f,c
 36518  008F44  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36519  008F46  22DA               	addwfc	fsr2h,f,c
 36520  008F48  0E08               	movlw	8
 36521  008F4A  6EDF               	movwf	indf2,c
 36522                           
 36523                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36524  008F4C  EE20 F002          	lfsr	2,2
 36525  008F50  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36526  008F52  26D9               	addwf	fsr2l,f,c
 36527  008F54  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36528  008F56  22DA               	addwfc	fsr2h,f,c
 36529  008F58  0E20               	movlw	32
 36530  008F5A  6EDE               	movwf	postinc2,c
 36531  008F5C  0E0D               	movlw	13
 36532  008F5E  6EDD               	movwf	postdec2,c
 36533                           
 36534                           ; BSR set to: 0
 36535                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 36536  008F60  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36537  008F64  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36538  008F68  0E04               	movlw	4
 36539  008F6A  6EDF               	movwf	indf2,c
 36540                           
 36541                           ; BSR set to: 0
 36542                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36543  008F6C  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36544  008F70  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36545  008F74  0E00               	movlw	0
 36546  008F76  8EDB               	bsf	plusw2,7,c
 36547                           
 36548                           ; BSR set to: 0
 36549                           ;usb_device.c: 1926: }
 36550                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 36551                           
 36552                           ; BSR set to: 0
 36553                           ;usb_device.c: 1915: {
 36554                           ;usb_device.c: 1921: outPipes[0].pFunc();
 36555  008F78  0100               	movlb	0	; () banked
 36556  008F7A  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 36557                           
 36558                           ; BSR set to: 0
 36559                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 36560  008F7C  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 36561  008F7E  A4D8               	btfss	status,2,c
 36562  008F80  0012               	return	
 36563                           
 36564                           ; BSR set to: 0
 36565                           ;usb_device.c: 1942: {
 36566                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 36567  008F82  ECDD  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 36568  008F86  0012               	return	
 36569  008F88                     __end_of_USBCtrlTrfRxService:
 36570                           	opt stack 0
 36571                           pclatu	equ	0xFFB
 36572                           pclath	equ	0xFFA
 36573                           tblptru	equ	0xFF8
 36574                           tblptrh	equ	0xFF7
 36575                           tblptrl	equ	0xFF6
 36576                           tablat	equ	0xFF5
 36577                           prodh	equ	0xFF4
 36578                           prodl	equ	0xFF3
 36579                           intcon	equ	0xFF2
 36580                           intcon2	equ	0xFF1
 36581                           intcon3	equ	0xFF0
 36582                           indf0	equ	0xFEF
 36583                           postinc0	equ	0xFEE
 36584                           plusw0	equ	0xFEB
 36585                           fsr0h	equ	0xFEA
 36586                           fsr0l	equ	0xFE9
 36587                           wreg	equ	0xFE8
 36588                           indf1	equ	0xFE7
 36589                           postinc1	equ	0xFE6
 36590                           postdec1	equ	0xFE5
 36591                           plusw1	equ	0xFE3
 36592                           fsr1h	equ	0xFE2
 36593                           fsr1l	equ	0xFE1
 36594                           bsr	equ	0xFE0
 36595                           indf2	equ	0xFDF
 36596                           postinc2	equ	0xFDE
 36597                           postdec2	equ	0xFDD
 36598                           plusw2	equ	0xFDB
 36599                           fsr2h	equ	0xFDA
 36600                           fsr2l	equ	0xFD9
 36601                           status	equ	0xFD8
 36602                           
 36603 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 36604 ;; Defined at:
 36605 ;;		line 1416 in file "src/usb/usb_device.c"
 36606 ;; Parameters:    Size  Location     Type
 36607 ;;		None
 36608 ;; Auto vars:     Size  Location     Type
 36609 ;;		None
 36610 ;; Return value:  Size  Location     Type
 36611 ;;		None               void
 36612 ;; Registers used:
 36613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36614 ;; Tracked objects:
 36615 ;;		On entry : 0/0
 36616 ;;		On exit  : 0/0
 36617 ;;		Unchanged: 0/0
 36618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36623 ;;Total ram usage:        0 bytes
 36624 ;; Hardware stack levels used:    1
 36625 ;; Hardware stack levels required when called:    6
 36626 ;; This function calls:
 36627 ;;		Nothing
 36628 ;; This function is called by:
 36629 ;;		_USBDeviceTasks
 36630 ;;		_USBCtrlEPServiceComplete
 36631 ;;		_USBCtrlTrfRxService
 36632 ;; This function uses a non-reentrant model
 36633 ;;
 36634                           
 36635                           	psect	text113
 36636  009FBA                     __ptext113:
 36637                           	opt stack 0
 36638  009FBA                     _USBCtrlEPAllowStatusStage:
 36639                           	opt stack 7
 36640                           
 36641                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 36642                           
 36643                           ;incstack = 0
 36644  009FBA  504C               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 36645  009FBC  A4D8               	btfss	status,2,c
 36646  009FBE  0012               	return	
 36647                           
 36648                           ;usb_device.c: 1424: {
 36649                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 36650  009FC0  0E01               	movlw	1
 36651  009FC2  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 36652                           
 36653                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 36654  009FC4  504D               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 36655  009FC6  A4D8               	btfss	status,2,c
 36656  009FC8  0012               	return	
 36657                           
 36658                           ;usb_device.c: 1427: {
 36659                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 36660  009FCA  0E01               	movlw	1
 36661  009FCC  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 36662                           
 36663                           ;usb_device.c: 1432: if(controlTransferState == 2)
 36664  009FCE  0E02               	movlw	2
 36665  009FD0  184F               	xorwf	_controlTransferState,w,c	;volatile
 36666  009FD2  A4D8               	btfss	status,2,c
 36667  009FD4  D016               	goto	i1l10991
 36668                           
 36669                           ;usb_device.c: 1433: {
 36670                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 36671  009FD6  0100               	movlb	0	; () banked
 36672  009FD8  EE20 F001          	lfsr	2,1
 36673  009FDC  518B               	movf	_pBDTEntryIn& (0+255),w,b
 36674  009FDE  26D9               	addwf	fsr2l,f,c
 36675  009FE0  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 36676  009FE2  22DA               	addwfc	fsr2h,f,c
 36677  009FE4  0E00               	movlw	0
 36678  009FE6  6EDF               	movwf	indf2,c
 36679                           
 36680                           ; BSR set to: 0
 36681                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36682  009FE8  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36683  009FEC  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36684  009FF0  0E48               	movlw	72
 36685  009FF2  6EDF               	movwf	indf2,c
 36686                           
 36687                           ; BSR set to: 0
 36688                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36689  009FF4  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36690  009FF8  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36691  009FFC  0E00               	movlw	0
 36692  009FFE  8EDB               	bsf	plusw2,7,c
 36693                           
 36694                           ;usb_device.c: 1437: }
 36695  00A000  0012               	return	
 36696  00A002                     i1l10991:
 36697                           
 36698                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 36699  00A002  044F               	decf	_controlTransferState,w,c	;volatile
 36700  00A004  A4D8               	btfss	status,2,c
 36701  00A006  0012               	return	
 36702                           
 36703                           ;usb_device.c: 1439: {
 36704                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 36705  00A008  0E00               	movlw	0
 36706  00A00A  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36707                           
 36708                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 36709  00A00C  EE20 F001          	lfsr	2,1
 36710  00A010  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36711  00A012  26D9               	addwf	fsr2l,f,c
 36712  00A014  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36713  00A016  22DA               	addwfc	fsr2h,f,c
 36714  00A018  0E08               	movlw	8
 36715  00A01A  6EDF               	movwf	indf2,c
 36716                           
 36717                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 36718  00A01C  EE20 F002          	lfsr	2,2
 36719  00A020  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36720  00A022  26D9               	addwf	fsr2l,f,c
 36721  00A024  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36722  00A026  22DA               	addwfc	fsr2h,f,c
 36723  00A028  0E20               	movlw	32
 36724  00A02A  6EDE               	movwf	postinc2,c
 36725  00A02C  0E0D               	movlw	13
 36726  00A02E  6EDD               	movwf	postdec2,c
 36727                           
 36728                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 36729  00A030  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36730  00A034  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36731  00A038  0E04               	movlw	4
 36732  00A03A  6EDF               	movwf	indf2,c
 36733                           
 36734                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 36735  00A03C  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36736  00A040  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36737  00A044  0E00               	movlw	0
 36738  00A046  8EDB               	bsf	plusw2,7,c
 36739                           
 36740                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 36741  00A048  0E01               	movlw	1
 36742  00A04A  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36743                           
 36744                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 36745  00A04C  EE20 F001          	lfsr	2,1
 36746  00A050  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36747  00A052  26D9               	addwf	fsr2l,f,c
 36748  00A054  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36749  00A056  22DA               	addwfc	fsr2h,f,c
 36750  00A058  0E08               	movlw	8
 36751  00A05A  6EDF               	movwf	indf2,c
 36752                           
 36753                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36754  00A05C  EE20 F002          	lfsr	2,2
 36755  00A060  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36756  00A062  26D9               	addwf	fsr2l,f,c
 36757  00A064  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36758  00A066  22DA               	addwfc	fsr2h,f,c
 36759  00A068  0E20               	movlw	32
 36760  00A06A  6EDE               	movwf	postinc2,c
 36761  00A06C  0E0D               	movlw	13
 36762  00A06E  6EDD               	movwf	postdec2,c
 36763                           
 36764                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 36765  00A070  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36766  00A074  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36767  00A078  0E80               	movlw	128
 36768  00A07A  6EDF               	movwf	indf2,c
 36769  00A07C  0012               	return	
 36770  00A07E                     __end_of_USBCtrlEPAllowStatusStage:
 36771                           	opt stack 0
 36772                           pclatu	equ	0xFFB
 36773                           pclath	equ	0xFFA
 36774                           tblptru	equ	0xFF8
 36775                           tblptrh	equ	0xFF7
 36776                           tblptrl	equ	0xFF6
 36777                           tablat	equ	0xFF5
 36778                           prodh	equ	0xFF4
 36779                           prodl	equ	0xFF3
 36780                           intcon	equ	0xFF2
 36781                           intcon2	equ	0xFF1
 36782                           intcon3	equ	0xFF0
 36783                           indf0	equ	0xFEF
 36784                           postinc0	equ	0xFEE
 36785                           plusw0	equ	0xFEB
 36786                           fsr0h	equ	0xFEA
 36787                           fsr0l	equ	0xFE9
 36788                           wreg	equ	0xFE8
 36789                           indf1	equ	0xFE7
 36790                           postinc1	equ	0xFE6
 36791                           postdec1	equ	0xFE5
 36792                           plusw1	equ	0xFE3
 36793                           fsr1h	equ	0xFE2
 36794                           fsr1l	equ	0xFE1
 36795                           bsr	equ	0xFE0
 36796                           indf2	equ	0xFDF
 36797                           postinc2	equ	0xFDE
 36798                           postdec2	equ	0xFDD
 36799                           plusw2	equ	0xFDB
 36800                           fsr2h	equ	0xFDA
 36801                           fsr2l	equ	0xFD9
 36802                           status	equ	0xFD8
 36803                           
 36804 ;; *************** function _USBCtrlTrfInHandler *****************
 36805 ;; Defined at:
 36806 ;;		line 2595 in file "src/usb/usb_device.c"
 36807 ;; Parameters:    Size  Location     Type
 36808 ;;		None
 36809 ;; Auto vars:     Size  Location     Type
 36810 ;;  lastDTS         1    1[COMRAM] unsigned char 
 36811 ;; Return value:  Size  Location     Type
 36812 ;;		None               void
 36813 ;; Registers used:
 36814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36815 ;; Tracked objects:
 36816 ;;		On entry : 0/0
 36817 ;;		On exit  : 0/0
 36818 ;;		Unchanged: 0/0
 36819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36824 ;;Total ram usage:        1 bytes
 36825 ;; Hardware stack levels used:    1
 36826 ;; Hardware stack levels required when called:    7
 36827 ;; This function calls:
 36828 ;;		_USBCtrlTrfTxService
 36829 ;; This function is called by:
 36830 ;;		_USBCtrlEPService
 36831 ;; This function uses a non-reentrant model
 36832 ;;
 36833                           
 36834                           	psect	text114
 36835  00A07E                     __ptext114:
 36836                           	opt stack 0
 36837  00A07E                     _USBCtrlTrfInHandler:
 36838                           	opt stack 8
 36839                           
 36840                           ;usb_device.c: 2597: uint8_t lastDTS;
 36841                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 36842                           
 36843                           ;incstack = 0
 36844  00A07E  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36845  00A082  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36846  00A086  0E00               	movlw	0
 36847  00A088  BCDF               	btfsc	indf2,6,c
 36848  00A08A  0E01               	movlw	1
 36849  00A08C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 36850                           
 36851                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 36852  00A08E  0E04               	movlw	4
 36853  00A090  0100               	movlb	0	; () banked
 36854  00A092  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 36855                           
 36856                           ; BSR set to: 0
 36857                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 36858  00A094  0E08               	movlw	8
 36859  00A096  184B               	xorwf	_USBDeviceState,w,c	;volatile
 36860  00A098  A4D8               	btfss	status,2,c
 36861  00A09A  D00D               	goto	i1l12679
 36862                           
 36863                           ; BSR set to: 0
 36864                           ;usb_device.c: 2608: {
 36865                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 36866  00A09C  010D               	movlb	13	; () banked
 36867  00A09E  5122               	movf	34,w,b	;volatile
 36868  00A0A0  0B7F               	andlw	127
 36869  00A0A2  010F               	movlb	15	; () banked
 36870  00A0A4  6F38               	movwf	56,b	;volatile
 36871                           
 36872                           ; BSR set to: 15
 36873                           ;usb_device.c: 2610: if(UADDR != 0u)
 36874  00A0A6  010F               	movlb	15	; () banked
 36875  00A0A8  5138               	movf	56,w,b	;volatile
 36876  00A0AA  B4D8               	btfsc	status,2,c
 36877  00A0AC  D002               	goto	i1l12677
 36878                           
 36879                           ; BSR set to: 15
 36880                           ;usb_device.c: 2611: {
 36881                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 36882  00A0AE  0E10               	movlw	16
 36883  00A0B0  D001               	goto	L26
 36884  00A0B2                     i1l12677:
 36885                           
 36886                           ; BSR set to: 15
 36887                           ;usb_device.c: 2614: else
 36888                           ;usb_device.c: 2615: {
 36889                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 36890  00A0B2  0E04               	movlw	4
 36891  00A0B4                     L26:
 36892  00A0B4  6E4B               	movwf	_USBDeviceState,c	;volatile
 36893  00A0B6                     i1l12679:
 36894                           
 36895                           ;usb_device.c: 2617: }
 36896                           ;usb_device.c: 2618: }
 36897                           ;usb_device.c: 2621: if(controlTransferState == 1)
 36898  00A0B6  044F               	decf	_controlTransferState,w,c	;volatile
 36899  00A0B8  A4D8               	btfss	status,2,c
 36900  00A0BA  D03B               	goto	i1l1421
 36901                           
 36902                           ;usb_device.c: 2622: {
 36903                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 36904  00A0BC  0100               	movlb	0	; () banked
 36905  00A0BE  EE20 F002          	lfsr	2,2
 36906  00A0C2  518B               	movf	_pBDTEntryIn& (0+255),w,b
 36907  00A0C4  26D9               	addwf	fsr2l,f,c
 36908  00A0C6  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 36909  00A0C8  22DA               	addwfc	fsr2h,f,c
 36910  00A0CA  0E28               	movlw	40
 36911  00A0CC  6EDE               	movwf	postinc2,c
 36912  00A0CE  0E0D               	movlw	13
 36913  00A0D0  6EDD               	movwf	postdec2,c
 36914                           
 36915                           ; BSR set to: 0
 36916                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 36917  00A0D2  EC12  F04D         	call	_USBCtrlTrfTxService	;wreg free
 36918                           
 36919                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 36920  00A0D6  0E02               	movlw	2
 36921  00A0D8  1854               	xorwf	_shortPacketStatus,w,c	;volatile
 36922  00A0DA  A4D8               	btfss	status,2,c
 36923  00A0DC  D00D               	goto	i1l12691
 36924                           
 36925                           ;usb_device.c: 2631: {
 36926                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 36927  00A0DE  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36928  00A0E2  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36929  00A0E6  0E04               	movlw	4
 36930  00A0E8  6EDF               	movwf	indf2,c
 36931                           
 36932                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36933  00A0EA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36934  00A0EE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36935  00A0F2  0E00               	movlw	0
 36936  00A0F4  8EDB               	bsf	plusw2,7,c
 36937                           
 36938                           ;usb_device.c: 2636: }
 36939  00A0F6  0012               	return	
 36940  00A0F8                     i1l12691:
 36941                           
 36942                           ;usb_device.c: 2637: else
 36943                           ;usb_device.c: 2638: {
 36944                           ;usb_device.c: 2639: if(lastDTS == 0)
 36945  00A0F8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 36946  00A0FA  A4D8               	btfss	status,2,c
 36947  00A0FC  D00D               	goto	i1l12697
 36948                           
 36949                           ;usb_device.c: 2640: {
 36950                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36951  00A0FE  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36952  00A102  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36953  00A106  0E48               	movlw	72
 36954  00A108  6EDF               	movwf	indf2,c
 36955                           
 36956                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36957  00A10A  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36958  00A10E  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36959  00A112  0E00               	movlw	0
 36960  00A114  8EDB               	bsf	plusw2,7,c
 36961                           
 36962                           ;usb_device.c: 2643: }
 36963  00A116  0012               	return	
 36964  00A118                     i1l12697:
 36965                           
 36966                           ;usb_device.c: 2644: else
 36967                           ;usb_device.c: 2645: {
 36968                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 36969  00A118  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36970  00A11C  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36971  00A120  0E08               	movlw	8
 36972  00A122  6EDF               	movwf	indf2,c
 36973                           
 36974                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36975  00A124  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36976  00A128  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36977  00A12C  0E00               	movlw	0
 36978  00A12E  8EDB               	bsf	plusw2,7,c
 36979                           
 36980                           ;usb_device.c: 2648: }
 36981                           ;usb_device.c: 2649: }
 36982                           ;usb_device.c: 2650: }
 36983  00A130  0012               	return	
 36984  00A132                     i1l1421:
 36985                           
 36986                           ;usb_device.c: 2651: else
 36987                           ;usb_device.c: 2652: {
 36988                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 36989  00A132  0100               	movlb	0	; () banked
 36990  00A134  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 36991  00A136  D002               	goto	i1l12703
 36992                           
 36993                           ; BSR set to: 0
 36994                           ;usb_device.c: 2661: }
 36995                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 36996                           
 36997                           ; BSR set to: 0
 36998                           ;usb_device.c: 2659: {
 36999                           ;usb_device.c: 2660: outPipes[0].pFunc();
 37000  00A138  0100               	movlb	0	; () banked
 37001  00A13A  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 37002  00A13C                     i1l12703:
 37003                           
 37004                           ; BSR set to: 0
 37005                           ;usb_device.c: 2663: }
 37006                           ;usb_device.c: 2665: controlTransferState = 0;
 37007  00A13C  0E00               	movlw	0
 37008  00A13E  6E4F               	movwf	_controlTransferState,c	;volatile
 37009  00A140  0012               	return	
 37010  00A142                     __end_of_USBCtrlTrfInHandler:
 37011                           	opt stack 0
 37012                           pclatu	equ	0xFFB
 37013                           pclath	equ	0xFFA
 37014                           tblptru	equ	0xFF8
 37015                           tblptrh	equ	0xFF7
 37016                           tblptrl	equ	0xFF6
 37017                           tablat	equ	0xFF5
 37018                           prodh	equ	0xFF4
 37019                           prodl	equ	0xFF3
 37020                           intcon	equ	0xFF2
 37021                           intcon2	equ	0xFF1
 37022                           intcon3	equ	0xFF0
 37023                           indf0	equ	0xFEF
 37024                           postinc0	equ	0xFEE
 37025                           plusw0	equ	0xFEB
 37026                           fsr0h	equ	0xFEA
 37027                           fsr0l	equ	0xFE9
 37028                           wreg	equ	0xFE8
 37029                           indf1	equ	0xFE7
 37030                           postinc1	equ	0xFE6
 37031                           postdec1	equ	0xFE5
 37032                           plusw1	equ	0xFE3
 37033                           fsr1h	equ	0xFE2
 37034                           fsr1l	equ	0xFE1
 37035                           bsr	equ	0xFE0
 37036                           indf2	equ	0xFDF
 37037                           postinc2	equ	0xFDE
 37038                           postdec2	equ	0xFDD
 37039                           plusw2	equ	0xFDB
 37040                           fsr2h	equ	0xFDA
 37041                           fsr2l	equ	0xFD9
 37042                           status	equ	0xFD8
 37043                           
 37044 ;; *************** function _USBCtrlTrfTxService *****************
 37045 ;; Defined at:
 37046 ;;		line 1771 in file "src/usb/usb_device.c"
 37047 ;; Parameters:    Size  Location     Type
 37048 ;;		None
 37049 ;; Auto vars:     Size  Location     Type
 37050 ;;  byteToSend      1    0[COMRAM] unsigned char 
 37051 ;; Return value:  Size  Location     Type
 37052 ;;		None               void
 37053 ;; Registers used:
 37054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37055 ;; Tracked objects:
 37056 ;;		On entry : 0/0
 37057 ;;		On exit  : 0/0
 37058 ;;		Unchanged: 0/0
 37059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37064 ;;Total ram usage:        1 bytes
 37065 ;; Hardware stack levels used:    1
 37066 ;; Hardware stack levels required when called:    6
 37067 ;; This function calls:
 37068 ;;		Nothing
 37069 ;; This function is called by:
 37070 ;;		_USBCtrlEPAllowDataStage
 37071 ;;		_USBCtrlTrfInHandler
 37072 ;; This function uses a non-reentrant model
 37073 ;;
 37074                           
 37075                           	psect	text115
 37076  009A24                     __ptext115:
 37077                           	opt stack 0
 37078  009A24                     _USBCtrlTrfTxService:
 37079                           	opt stack 6
 37080                           
 37081                           ;usb_device.c: 1773: uint8_t byteToSend;
 37082                           ;usb_device.c: 1777: byteToSend = 8;
 37083                           
 37084                           ;incstack = 0
 37085  009A24  0E08               	movlw	8
 37086  009A26  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 37087                           
 37088                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 37089  009A28  0100               	movlb	0	; () banked
 37090  009A2A  5186               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 37091  009A2C  E111               	bnz	i1l10567
 37092  009A2E  0E08               	movlw	8
 37093  009A30  0100               	movlb	0	; () banked
 37094  009A32  5D85               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 37095  009A34  B0D8               	btfsc	status,0,c
 37096  009A36  D00C               	goto	i1l10567
 37097                           
 37098                           ; BSR set to: 0
 37099                           ;usb_device.c: 1779: {
 37100                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 37101  009A38  C085  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 37102                           
 37103                           ; BSR set to: 0
 37104                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 37105  009A3C  5054               	movf	_shortPacketStatus,w,c	;volatile
 37106  009A3E  A4D8               	btfss	status,2,c
 37107  009A40  D002               	goto	i1l10563
 37108                           
 37109                           ; BSR set to: 0
 37110                           ;usb_device.c: 1788: {
 37111                           ;usb_device.c: 1789: shortPacketStatus = 1;
 37112  009A42  0E01               	movlw	1
 37113  009A44  D004               	goto	L27
 37114  009A46                     i1l10563:
 37115                           
 37116                           ; BSR set to: 0
 37117                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 37118  009A46  0454               	decf	_shortPacketStatus,w,c	;volatile
 37119  009A48  A4D8               	btfss	status,2,c
 37120  009A4A  D002               	goto	i1l10567
 37121                           
 37122                           ; BSR set to: 0
 37123                           ;usb_device.c: 1792: {
 37124                           ;usb_device.c: 1793: shortPacketStatus = 2;
 37125  009A4C  0E02               	movlw	2
 37126  009A4E                     L27:
 37127  009A4E  6E54               	movwf	_shortPacketStatus,c	;volatile
 37128  009A50                     i1l10567:
 37129                           
 37130                           ; BSR set to: 0
 37131                           ;usb_device.c: 1794: }
 37132                           ;usb_device.c: 1795: }
 37133                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 37134  009A50  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37135  009A52  0100               	movlb	0	; () banked
 37136  009A54  5F85               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 37137  009A56  0E00               	movlw	0
 37138  009A58  5B86               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 37139                           
 37140                           ; BSR set to: 0
 37141                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 37142  009A5A  0100               	movlb	0	; () banked
 37143  009A5C  EE20 F001          	lfsr	2,1
 37144  009A60  518B               	movf	_pBDTEntryIn& (0+255),w,b
 37145  009A62  26D9               	addwf	fsr2l,f,c
 37146  009A64  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 37147  009A66  22DA               	addwfc	fsr2h,f,c
 37148  009A68  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 37149                           
 37150                           ; BSR set to: 0
 37151                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 37152  009A6C  0E28               	movlw	40
 37153  009A6E  6E3C               	movwf	_pDst,c
 37154  009A70  0E0D               	movlw	13
 37155  009A72  6E3D               	movwf	_pDst+1,c
 37156                           
 37157                           ; BSR set to: 0
 37158                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 37159  009A74  0100               	movlb	0	; () banked
 37160  009A76  A184               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 37161  009A78  D01D               	goto	i1l10585
 37162  009A7A  D03C               	goto	i1l10595
 37163  009A7C                     i1l10577:
 37164                           
 37165                           ; BSR set to: 0
 37166                           ;usb_device.c: 1812: {
 37167                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 37168  009A7C  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 37169  009A80  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37170  009A84  0E00               	movlw	low (__mediumconst shr (0+16))
 37171  009A86  6EF8               	movwf	tblptru,c
 37172  009A88  C03C  FFD9         	movff	_pDst,fsr2l
 37173  009A8C  C03D  FFDA         	movff	_pDst+1,fsr2h
 37174  009A90  0E0E               	movlw	(high __ramtop+-1)
 37175  009A92  64F7               	cpfsgt	tblptrh,c
 37176  009A94  D003               	bra	i1u993_27
 37177  009A96  0008               	tblrd		*
 37178  009A98  50F5               	movf	tablat,w,c
 37179  009A9A  D005               	bra	i1u993_20
 37180  009A9C                     i1u993_27:
 37181  009A9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 37182  009AA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 37183  009AA4  50EF               	movf	indf0,w,c
 37184  009AA6                     i1u993_20:
 37185  009AA6  6EDF               	movwf	indf2,c
 37186  009AA8  0100               	movlb	0	; () banked
 37187  009AAA  4B81               	infsnz	_inPipes& (0+255),f,b	;volatile
 37188  009AAC  2B82               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 37189                           
 37190                           ; BSR set to: 0
 37191  009AAE  4A3C               	infsnz	_pDst,f,c
 37192  009AB0  2A3D               	incf	_pDst+1,f,c
 37193                           
 37194                           ; BSR set to: 0
 37195                           ;usb_device.c: 1814: byteToSend--;
 37196  009AB2  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 37197  009AB4                     i1l10585:
 37198                           
 37199                           ; BSR set to: 0
 37200  009AB4  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37201  009AB6  B4D8               	btfsc	status,2,c
 37202  009AB8  0012               	return	
 37203  009ABA  D7E0               	goto	i1l10577
 37204  009ABC                     i1l10587:
 37205                           
 37206                           ; BSR set to: 0
 37207                           ;usb_device.c: 1820: {
 37208                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 37209  009ABC  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 37210  009AC0  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37211  009AC4  0E00               	movlw	low (__mediumconst shr (0+16))
 37212  009AC6  6EF8               	movwf	tblptru,c
 37213  009AC8  C03C  FFD9         	movff	_pDst,fsr2l
 37214  009ACC  C03D  FFDA         	movff	_pDst+1,fsr2h
 37215  009AD0  0E0E               	movlw	(high __ramtop+-1)
 37216  009AD2  64F7               	cpfsgt	tblptrh,c
 37217  009AD4  D003               	bra	i1u995_27
 37218  009AD6  0008               	tblrd		*
 37219  009AD8  50F5               	movf	tablat,w,c
 37220  009ADA  D005               	bra	i1u995_20
 37221  009ADC                     i1u995_27:
 37222  009ADC  CFF6 FFE9          	movff	tblptrl,fsr0l
 37223  009AE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 37224  009AE4  50EF               	movf	indf0,w,c
 37225  009AE6                     i1u995_20:
 37226  009AE6  6EDF               	movwf	indf2,c
 37227  009AE8  0100               	movlb	0	; () banked
 37228  009AEA  4B81               	infsnz	_inPipes& (0+255),f,b	;volatile
 37229  009AEC  2B82               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 37230                           
 37231                           ; BSR set to: 0
 37232  009AEE  4A3C               	infsnz	_pDst,f,c
 37233  009AF0  2A3D               	incf	_pDst+1,f,c
 37234                           
 37235                           ; BSR set to: 0
 37236                           ;usb_device.c: 1822: byteToSend--;
 37237  009AF2  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 37238  009AF4                     i1l10595:
 37239                           
 37240                           ; BSR set to: 0
 37241  009AF4  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37242  009AF6  B4D8               	btfsc	status,2,c
 37243  009AF8  0012               	return	
 37244  009AFA  D7E0               	goto	i1l10587
 37245  009AFC                     __end_of_USBCtrlTrfTxService:
 37246                           	opt stack 0
 37247                           pclatu	equ	0xFFB
 37248                           pclath	equ	0xFFA
 37249                           tblptru	equ	0xFF8
 37250                           tblptrh	equ	0xFF7
 37251                           tblptrl	equ	0xFF6
 37252                           tablat	equ	0xFF5
 37253                           prodh	equ	0xFF4
 37254                           prodl	equ	0xFF3
 37255                           intcon	equ	0xFF2
 37256                           intcon2	equ	0xFF1
 37257                           intcon3	equ	0xFF0
 37258                           indf0	equ	0xFEF
 37259                           postinc0	equ	0xFEE
 37260                           plusw0	equ	0xFEB
 37261                           fsr0h	equ	0xFEA
 37262                           fsr0l	equ	0xFE9
 37263                           wreg	equ	0xFE8
 37264                           indf1	equ	0xFE7
 37265                           postinc1	equ	0xFE6
 37266                           postdec1	equ	0xFE5
 37267                           plusw1	equ	0xFE3
 37268                           fsr1h	equ	0xFE2
 37269                           fsr1l	equ	0xFE1
 37270                           bsr	equ	0xFE0
 37271                           indf2	equ	0xFDF
 37272                           postinc2	equ	0xFDE
 37273                           postdec2	equ	0xFDD
 37274                           plusw2	equ	0xFDB
 37275                           fsr2h	equ	0xFDA
 37276                           fsr2l	equ	0xFD9
 37277                           status	equ	0xFD8
 37278                           
 37279 ;; *************** function _SYS_InterruptHigh *****************
 37280 ;; Defined at:
 37281 ;;		line 782 in file "src/main.c"
 37282 ;; Parameters:    Size  Location     Type
 37283 ;;		None
 37284 ;; Auto vars:     Size  Location     Type
 37285 ;;		None
 37286 ;; Return value:  Size  Location     Type
 37287 ;;		None               void
 37288 ;; Registers used:
 37289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37290 ;; Tracked objects:
 37291 ;;		On entry : 0/0
 37292 ;;		On exit  : 0/0
 37293 ;;		Unchanged: 0/0
 37294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37297 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37298 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37299 ;;Total ram usage:       14 bytes
 37300 ;; Hardware stack levels used:    1
 37301 ;; Hardware stack levels required when called:    5
 37302 ;; This function calls:
 37303 ;;		_MIWIInterruptHandler
 37304 ;; This function is called by:
 37305 ;;		Interrupt level 2
 37306 ;; This function uses a non-reentrant model
 37307 ;;
 37308                           
 37309                           	psect	intcode
 37310  000008                     __pintcode:
 37311                           	opt stack 0
 37312  000008                     _SYS_InterruptHigh:
 37313                           	opt stack 3
 37314                           
 37315                           ; BSR set to: 0
 37316                           ;incstack = 0
 37317  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37318  00000A  CFFA F0D8          	movff	pclath,??_SYS_InterruptHigh
 37319  00000E  CFFB F0D9          	movff	pclatu,??_SYS_InterruptHigh+1
 37320  000012  EF2D  F059         	goto	int_func
 37321                           pclatu	equ	0xFFB
 37322                           pclath	equ	0xFFA
 37323                           tblptru	equ	0xFF8
 37324                           tblptrh	equ	0xFF7
 37325                           tblptrl	equ	0xFF6
 37326                           tablat	equ	0xFF5
 37327                           prodh	equ	0xFF4
 37328                           prodl	equ	0xFF3
 37329                           intcon	equ	0xFF2
 37330                           intcon2	equ	0xFF1
 37331                           intcon3	equ	0xFF0
 37332                           indf0	equ	0xFEF
 37333                           postinc0	equ	0xFEE
 37334                           plusw0	equ	0xFEB
 37335                           fsr0h	equ	0xFEA
 37336                           fsr0l	equ	0xFE9
 37337                           wreg	equ	0xFE8
 37338                           indf1	equ	0xFE7
 37339                           postinc1	equ	0xFE6
 37340                           postdec1	equ	0xFE5
 37341                           plusw1	equ	0xFE3
 37342                           fsr1h	equ	0xFE2
 37343                           fsr1l	equ	0xFE1
 37344                           bsr	equ	0xFE0
 37345                           indf2	equ	0xFDF
 37346                           postinc2	equ	0xFDE
 37347                           postdec2	equ	0xFDD
 37348                           plusw2	equ	0xFDB
 37349                           fsr2h	equ	0xFDA
 37350                           fsr2l	equ	0xFD9
 37351                           status	equ	0xFD8
 37352                           
 37353                           	psect	intcode_body
 37354  00B25A                     __pintcode_body:
 37355                           	opt stack 3
 37356  00B25A                     int_func:
 37357                           	opt stack 3
 37358  00B25A  CFE9 F0DA          	movff	fsr0l,??_SYS_InterruptHigh+2
 37359  00B25E  CFEA F0DB          	movff	fsr0h,??_SYS_InterruptHigh+3
 37360  00B262  CFE1 F0DC          	movff	fsr1l,??_SYS_InterruptHigh+4
 37361  00B266  CFE2 F0DD          	movff	fsr1h,??_SYS_InterruptHigh+5
 37362  00B26A  CFD9 F0DE          	movff	fsr2l,??_SYS_InterruptHigh+6
 37363  00B26E  CFDA F0DF          	movff	fsr2h,??_SYS_InterruptHigh+7
 37364  00B272  CFF3 F0E0          	movff	prodl,??_SYS_InterruptHigh+8
 37365  00B276  CFF4 F0E1          	movff	prodh,??_SYS_InterruptHigh+9
 37366  00B27A  CFF6 F0E2          	movff	tblptrl,??_SYS_InterruptHigh+10
 37367  00B27E  CFF7 F0E3          	movff	tblptrh,??_SYS_InterruptHigh+11
 37368  00B282  CFF8 F0E4          	movff	tblptru,??_SYS_InterruptHigh+12
 37369  00B286  CFF5 F0E5          	movff	tablat,??_SYS_InterruptHigh+13
 37370                           
 37371                           ;main.c: 784: MIWIInterruptHandler();
 37372  00B28A  EC36  F027         	call	_MIWIInterruptHandler	;wreg free
 37373  00B28E  C0E5  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 37374  00B292  C0E4  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 37375  00B296  C0E3  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 37376  00B29A  C0E2  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 37377  00B29E  C0E1  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 37378  00B2A2  C0E0  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 37379  00B2A6  C0DF  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 37380  00B2AA  C0DE  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 37381  00B2AE  C0DD  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 37382  00B2B2  C0DC  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 37383  00B2B6  C0DB  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 37384  00B2BA  C0DA  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 37385  00B2BE  C0D9  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 37386  00B2C2  C0D8  FFFA         	movff	??_SYS_InterruptHigh,pclath
 37387  00B2C6  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 37388  00B2C8  0011               	retfie		f
 37389  00B2CA                     __end_of_SYS_InterruptHigh:
 37390                           	opt stack 0
 37391                           pclatu	equ	0xFFB
 37392                           pclath	equ	0xFFA
 37393                           tblptru	equ	0xFF8
 37394                           tblptrh	equ	0xFF7
 37395                           tblptrl	equ	0xFF6
 37396                           tablat	equ	0xFF5
 37397                           prodh	equ	0xFF4
 37398                           prodl	equ	0xFF3
 37399                           intcon	equ	0xFF2
 37400                           intcon2	equ	0xFF1
 37401                           intcon3	equ	0xFF0
 37402                           indf0	equ	0xFEF
 37403                           postinc0	equ	0xFEE
 37404                           plusw0	equ	0xFEB
 37405                           fsr0h	equ	0xFEA
 37406                           fsr0l	equ	0xFE9
 37407                           wreg	equ	0xFE8
 37408                           indf1	equ	0xFE7
 37409                           postinc1	equ	0xFE6
 37410                           postdec1	equ	0xFE5
 37411                           plusw1	equ	0xFE3
 37412                           fsr1h	equ	0xFE2
 37413                           fsr1l	equ	0xFE1
 37414                           bsr	equ	0xFE0
 37415                           indf2	equ	0xFDF
 37416                           postinc2	equ	0xFDE
 37417                           postdec2	equ	0xFDD
 37418                           plusw2	equ	0xFDB
 37419                           fsr2h	equ	0xFDA
 37420                           fsr2l	equ	0xFD9
 37421                           status	equ	0xFD8
 37422                           
 37423 ;; *************** function _MIWIInterruptHandler *****************
 37424 ;; Defined at:
 37425 ;;		line 1248 in file "src/miwi/drv_mrf_miwi_89xa.c"
 37426 ;; Parameters:    Size  Location     Type
 37427 ;;		None
 37428 ;; Auto vars:     Size  Location     Type
 37429 ;;  ackInfoIndex    1   49[BANK0 ] unsigned char 
 37430 ;;  i               1   52[BANK0 ] unsigned char 
 37431 ;;  fifo_stat       1   42[BANK0 ] unsigned char 
 37432 ;;  ackPacket       4   43[BANK0 ] unsigned char [4]
 37433 ;;  counter         2   40[BANK0 ] unsigned int 
 37434 ;;  BankIndex       1   51[BANK0 ] unsigned char 
 37435 ;;  PacketLen       1   50[BANK0 ] unsigned char 
 37436 ;;  RxPacketPtr     1   48[BANK0 ] unsigned char 
 37437 ;;  bAck            1   47[BANK0 ] unsigned char 
 37438 ;; Return value:  Size  Location     Type
 37439 ;;		None               void
 37440 ;; Registers used:
 37441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37442 ;; Tracked objects:
 37443 ;;		On entry : 0/0
 37444 ;;		On exit  : 0/0
 37445 ;;		Unchanged: 0/0
 37446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37448 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37449 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37450 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37451 ;;Total ram usage:       19 bytes
 37452 ;; Hardware stack levels used:    1
 37453 ;; Hardware stack levels required when called:    4
 37454 ;; This function calls:
 37455 ;;		i2_MiWi_TickGet
 37456 ;;		i2_RegisterRead
 37457 ;;		i2_SPIGet
 37458 ;;		i2_TxPacket
 37459 ;;		i2_update_LED
 37460 ;; This function is called by:
 37461 ;;		_SYS_InterruptHigh
 37462 ;; This function uses a non-reentrant model
 37463 ;;
 37464                           
 37465                           	psect	text117
 37466  004E6C                     __ptext117:
 37467                           	opt stack 0
 37468  004E6C                     _MIWIInterruptHandler:
 37469                           	opt stack 3
 37470                           
 37471                           ;drv_mrf_miwi_89xa.c: 1250: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 37472                           
 37473                           ;incstack = 0
 37474  004E6C  B0F0               	btfsc	intcon3,0,c	;volatile
 37475  004E6E  A6F0               	btfss	intcon3,3,c	;volatile
 37476  004E70  D280               	goto	i2l19951
 37477                           
 37478                           ;drv_mrf_miwi_89xa.c: 1251: {
 37479                           ;drv_mrf_miwi_89xa.c: 1252: INTCON3bits.INT1IF = 0;
 37480  004E72  90F0               	bcf	intcon3,0,c	;volatile
 37481                           
 37482                           ;drv_mrf_miwi_89xa.c: 1258: if(RF_Mode == 0x60)
 37483  004E74  0E60               	movlw	96
 37484  004E76  0100               	movlb	0	; () banked
 37485  004E78  199B               	xorwf	_RF_Mode& (0+255),w,b
 37486  004E7A  A4D8               	btfss	status,2,c
 37487  004E7C  D275               	goto	i2l19945
 37488                           
 37489                           ; BSR set to: 0
 37490                           ;drv_mrf_miwi_89xa.c: 1259: {
 37491                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t RxPacketPtr;
 37492                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t PacketLen;
 37493                           ;drv_mrf_miwi_89xa.c: 1262: uint8_t BankIndex;
 37494                           ;drv_mrf_miwi_89xa.c: 1263: uint16_t counter;
 37495                           ;drv_mrf_miwi_89xa.c: 1264: bool bAck;
 37496                           ;drv_mrf_miwi_89xa.c: 1265: uint8_t ackPacket[4];
 37497                           ;drv_mrf_miwi_89xa.c: 1271: RSSILock = RSSIVal;
 37498  004E7E  C09C  F1C4         	movff	_RSSIVal,_RSSILock
 37499                           
 37500                           ;drv_mrf_miwi_89xa.c: 1273: LATCbits.LATC6 = 0;
 37501  004E82  9C8B               	bcf	3979,6,c	;volatile
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPIGet();
 37505  004E84  ECDF  F05D         	call	i2_SPIGet	;wreg free
 37506  004E88  0100               	movlb	0	; () banked
 37507  004E8A  6FD5               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 37508                           
 37509                           ; BSR set to: 0
 37510                           ;drv_mrf_miwi_89xa.c: 1275: LATCbits.LATC6 = 1;
 37511  004E8C  8C8B               	bsf	3979,6,c	;volatile
 37512                           
 37513                           ; BSR set to: 0
 37514                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 37515  004E8E  0E00               	movlw	0
 37516  004E90  0100               	movlb	0	; () banked
 37517  004E92  6FD6               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 37518  004E94                     i2l19785:
 37519                           
 37520                           ; BSR set to: 0
 37521  004E94  0E01               	movlw	1
 37522  004E96  0100               	movlb	0	; () banked
 37523  004E98  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37524  004E9A  D001               	goto	i2l19789
 37525  004E9C  D00F               	goto	i2l19797
 37526  004E9E                     i2l19789:
 37527                           
 37528                           ; BSR set to: 0
 37529                           ;drv_mrf_miwi_89xa.c: 1279: {
 37530                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 37531  004E9E  0100               	movlb	0	; () banked
 37532  004EA0  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37533  004EA2  0D42               	mullw	66
 37534  004EA4  0E00               	movlw	low _RxPacket
 37535  004EA6  24F3               	addwf	prodl,w,c
 37536  004EA8  6ED9               	movwf	fsr2l,c
 37537  004EAA  0E03               	movlw	high _RxPacket
 37538  004EAC  20F4               	addwfc	prodh,w,c
 37539  004EAE  6EDA               	movwf	fsr2h,c
 37540  004EB0  0103               	movlb	3	; () banked
 37541  004EB2  A0DF               	btfss	indf2,0,c
 37542  004EB4  D003               	goto	i2l19797
 37543                           
 37544                           ; BSR set to: 3
 37545                           
 37546                           ; BSR set to: 3
 37547                           
 37548                           ; BSR set to: 3
 37549                           ;drv_mrf_miwi_89xa.c: 1281: {
 37550                           ;drv_mrf_miwi_89xa.c: 1282: break;
 37551  004EB6  0100               	movlb	0	; () banked
 37552  004EB8  2BD6               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 37553  004EBA  D7EC               	goto	i2l19785
 37554  004EBC                     i2l19797:
 37555                           
 37556                           ;drv_mrf_miwi_89xa.c: 1283: }
 37557                           ;drv_mrf_miwi_89xa.c: 1284: }
 37558                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 37559  004EBC  0E02               	movlw	2
 37560  004EBE  0100               	movlb	0	; () banked
 37561  004EC0  19D5               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37562  004EC2  A4D8               	btfss	status,2,c
 37563  004EC4  D002               	goto	i2l19801
 37564                           
 37565                           ; BSR set to: 0
 37566                           ;drv_mrf_miwi_89xa.c: 1288: {
 37567                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 37568  004EC6  0E01               	movlw	1
 37569  004EC8  D001               	goto	L28
 37570  004ECA                     i2l19801:
 37571                           
 37572                           ; BSR set to: 0
 37573                           ;drv_mrf_miwi_89xa.c: 1291: else
 37574                           ;drv_mrf_miwi_89xa.c: 1292: {
 37575                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 37576  004ECA  0E00               	movlw	0
 37577  004ECC                     L28:
 37578  004ECC  0100               	movlb	0	; () banked
 37579  004ECE  6FD2               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 37580                           
 37581                           ; BSR set to: 0
 37582                           ;drv_mrf_miwi_89xa.c: 1294: }
 37583                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 37584                           
 37585                           ; BSR set to: 0
 37586  004ED0  0E40               	movlw	64
 37587  004ED2  0100               	movlb	0	; () banked
 37588  004ED4  61D5               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 37589  004ED6  D00E               	goto	i2l19811
 37590                           
 37591                           ; BSR set to: 0
 37592  004ED8  0100               	movlb	0	; () banked
 37593  004EDA  51D5               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37594  004EDC  0100               	movlb	0	; () banked
 37595  004EDE  B4D8               	btfsc	status,2,c
 37596  004EE0  D009               	goto	i2l19811
 37597                           
 37598                           ; BSR set to: 0
 37599  004EE2  0E01               	movlw	1
 37600  004EE4  0100               	movlb	0	; () banked
 37601  004EE6  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37602  004EE8  D016               	goto	i2l19821
 37603                           
 37604                           ; BSR set to: 0
 37605  004EEA  0100               	movlb	0	; () banked
 37606  004EEC  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37607  004EEE  0100               	movlb	0	; () banked
 37608  004EF0  A4D8               	btfss	status,2,c
 37609  004EF2  D011               	goto	i2l19821
 37610  004EF4                     i2l19811:
 37611                           
 37612                           ; BSR set to: 0
 37613                           ;drv_mrf_miwi_89xa.c: 1300: {
 37614                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 37615  004EF4  0E1A               	movlw	26
 37616  004EF6  ECB1  F05A         	call	i2_RegisterRead
 37617  004EFA  D007               	goto	L29
 37618  004EFC                     i2l410:
 37619                           
 37620                           ; BSR set to: 0
 37621                           ;drv_mrf_miwi_89xa.c: 1303: {
 37622                           ;drv_mrf_miwi_89xa.c: 1304: LATCbits.LATC6 = 0;
 37623  004EFC  9C8B               	bcf	3979,6,c	;volatile
 37624                           
 37625                           ; BSR set to: 0
 37626                           ;drv_mrf_miwi_89xa.c: 1305: SPIGet();
 37627  004EFE  ECDF  F05D         	call	i2_SPIGet	;wreg free
 37628                           
 37629                           ;drv_mrf_miwi_89xa.c: 1306: LATCbits.LATC6 = 1;
 37630  004F02  8C8B               	bsf	3979,6,c	;volatile
 37631                           
 37632                           ;drv_mrf_miwi_89xa.c: 1307: fifo_stat = RegisterRead(0x1A00>>8);
 37633  004F04  0E1A               	movlw	26
 37634  004F06  ECB1  F05A         	call	i2_RegisterRead
 37635  004F0A                     L29:
 37636  004F0A  0100               	movlb	0	; () banked
 37637  004F0C  6FCD               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 37638                           
 37639                           ; BSR set to: 0
 37640                           
 37641                           ; BSR set to: 0
 37642  004F0E  0100               	movlb	0	; () banked
 37643  004F10  A3CD               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 37644  004F12  D22D               	goto	i2l19947
 37645  004F14  D7F3               	goto	i2l410
 37646  004F16                     i2l19821:
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;drv_mrf_miwi_89xa.c: 1311: }
 37650                           ;drv_mrf_miwi_89xa.c: 1313: RxPacketPtr = 0;
 37651  004F16  0E00               	movlw	0
 37652  004F18  0100               	movlb	0	; () banked
 37653  004F1A  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37654                           
 37655                           ; BSR set to: 0
 37656                           ;drv_mrf_miwi_89xa.c: 1314: counter = PacketLen;
 37657  004F1C  C0D5  F0CB         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 37658  004F20  0100               	movlb	0	; () banked
 37659  004F22  6BCC               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 37660                           
 37661                           ;drv_mrf_miwi_89xa.c: 1316: while(counter >= 1)
 37662  004F24  D21A               	goto	i2l19943
 37663  004F26                     i2l19825:
 37664                           
 37665                           ; BSR set to: 0
 37666                           ;drv_mrf_miwi_89xa.c: 1319: if(1)
 37667  004F26  0100               	movlb	0	; () banked
 37668  004F28  07CB               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 37669  004F2A  A0D8               	btfss	status,0,c
 37670  004F2C  07CC               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 37671                           
 37672                           ; BSR set to: 0
 37673                           ;drv_mrf_miwi_89xa.c: 1320: {
 37674                           ;drv_mrf_miwi_89xa.c: 1322: if( bAck )
 37675  004F2E  0100               	movlb	0	; () banked
 37676  004F30  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37677  004F32  0100               	movlb	0	; () banked
 37678  004F34  B4D8               	btfsc	status,2,c
 37679  004F36  D010               	goto	i2l416
 37680                           
 37681                           ; BSR set to: 0
 37682                           ;drv_mrf_miwi_89xa.c: 1323: {
 37683                           ;drv_mrf_miwi_89xa.c: 1324: LATCbits.LATC6 = 0;
 37684  004F38  9C8B               	bcf	3979,6,c	;volatile
 37685                           
 37686                           ; BSR set to: 0
 37687                           ;drv_mrf_miwi_89xa.c: 1325: ackPacket[RxPacketPtr++] = SPIGet();
 37688  004F3A  0100               	movlb	0	; () banked
 37689  004F3C  51D3               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37690  004F3E  0D01               	mullw	1
 37691  004F40  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 37692  004F42  24F3               	addwf	prodl,w,c
 37693  004F44  6ED9               	movwf	fsr2l,c
 37694  004F46  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 37695  004F48  20F4               	addwfc	prodh,w,c
 37696  004F4A  6EDA               	movwf	fsr2h,c
 37697  004F4C  ECDF  F05D         	call	i2_SPIGet	;wreg free
 37698  004F50  D024               	goto	L30
 37699  004F52                     i2l19833:
 37700  004F52  0100               	movlb	0	; () banked
 37701  004F54  2BD3               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 37702  004F56  D023               	goto	i2l19841
 37703  004F58                     i2l416:
 37704                           
 37705                           ; BSR set to: 0
 37706                           ;drv_mrf_miwi_89xa.c: 1329: else
 37707                           ;drv_mrf_miwi_89xa.c: 1330: {
 37708                           ;drv_mrf_miwi_89xa.c: 1331: LATCbits.LATC6 = 0;
 37709  004F58  9C8B               	bcf	3979,6,c	;volatile
 37710                           
 37711                           ; BSR set to: 0
 37712                           ;drv_mrf_miwi_89xa.c: 1332: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 37713  004F5A  0100               	movlb	0	; () banked
 37714  004F5C  51D3               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37715  004F5E  0D01               	mullw	1
 37716  004F60  0E01               	movlw	1
 37717  004F62  26F3               	addwf	prodl,f,c
 37718  004F64  0E00               	movlw	0
 37719  004F66  22F4               	addwfc	prodh,f,c
 37720  004F68  0E00               	movlw	low _RxPacket
 37721  004F6A  0100               	movlb	0	; () banked
 37722  004F6C  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 37723  004F6E  0E03               	movlw	high _RxPacket
 37724  004F70  0100               	movlb	0	; () banked
 37725  004F72  6FC6               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 37726  004F74  50F3               	movf	prodl,w,c
 37727  004F76  0100               	movlb	0	; () banked
 37728  004F78  27C5               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 37729  004F7A  50F4               	movf	prodh,w,c
 37730  004F7C  0100               	movlb	0	; () banked
 37731  004F7E  23C6               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 37732  004F80  0100               	movlb	0	; () banked
 37733  004F82  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37734  004F84  0D42               	mullw	66
 37735  004F86  50F3               	movf	prodl,w,c
 37736  004F88  0100               	movlb	0	; () banked
 37737  004F8A  25C5               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 37738  004F8C  6ED9               	movwf	fsr2l,c
 37739  004F8E  50F4               	movf	prodh,w,c
 37740  004F90  0100               	movlb	0	; () banked
 37741  004F92  21C6               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 37742  004F94  6EDA               	movwf	fsr2h,c
 37743  004F96  ECDF  F05D         	call	i2_SPIGet	;wreg free
 37744  004F9A                     L30:
 37745  004F9A  6EDF               	movwf	indf2,c
 37746  004F9C  D7DA               	goto	i2l19833
 37747  004F9E                     i2l19841:
 37748                           
 37749                           ; BSR set to: 0
 37750                           ;drv_mrf_miwi_89xa.c: 1333: LATCbits.LATC6 = 1;
 37751  004F9E  8C8B               	bsf	3979,6,c	;volatile
 37752                           
 37753                           ; BSR set to: 0
 37754                           ;drv_mrf_miwi_89xa.c: 1334: }
 37755                           ;drv_mrf_miwi_89xa.c: 1337: if( RxPacketPtr >= PacketLen )
 37756                           
 37757                           ; BSR set to: 0
 37758  004FA0  0100               	movlb	0	; () banked
 37759  004FA2  51D5               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37760  004FA4  0100               	movlb	0	; () banked
 37761  004FA6  5DD3               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37762  004FA8  A0D8               	btfss	status,0,c
 37763  004FAA  D1D7               	goto	i2l19943
 37764                           
 37765                           ; BSR set to: 0
 37766                           ;drv_mrf_miwi_89xa.c: 1338: {
 37767                           ;drv_mrf_miwi_89xa.c: 1339: uint8_t i;
 37768                           ;drv_mrf_miwi_89xa.c: 1341: if( bAck )
 37769  004FAC  0100               	movlb	0	; () banked
 37770  004FAE  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37771  004FB0  0100               	movlb	0	; () banked
 37772  004FB2  B4D8               	btfsc	status,2,c
 37773  004FB4  D039               	goto	i2l419
 37774                           
 37775                           ; BSR set to: 0
 37776                           ;drv_mrf_miwi_89xa.c: 1342: {
 37777                           ;drv_mrf_miwi_89xa.c: 1344: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 37778  004FB6  0100               	movlb	0	; () banked
 37779  004FB8  51CE               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 37780  004FBA  0B03               	andlw	3
 37781  004FBC  0A02               	xorlw	2
 37782  004FBE  A4D8               	btfss	status,2,c
 37783  004FC0  D00D               	goto	i2l19855
 37784                           
 37785                           ; BSR set to: 0
 37786                           ;drv_mrf_miwi_89xa.c: 1345: {
 37787                           ;drv_mrf_miwi_89xa.c: 1346: if( ackPacket[1] == TxMACSeq )
 37788  004FC2  0100               	movlb	0	; () banked
 37789  004FC4  519D               	movf	_TxMACSeq& (0+255),w,b
 37790  004FC6  0100               	movlb	0	; () banked
 37791  004FC8  19CF               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 37792  004FCA  A4D8               	btfss	status,2,c
 37793  004FCC  D003               	goto	i2l421
 37794                           
 37795                           ; BSR set to: 0
 37796                           ;drv_mrf_miwi_89xa.c: 1347: {
 37797                           ;drv_mrf_miwi_89xa.c: 1348: hasAck = 1;
 37798  004FCE  0E01               	movlw	1
 37799  004FD0  0100               	movlb	0	; () banked
 37800  004FD2  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 37801  004FD4                     i2l421:
 37802                           
 37803                           ; BSR set to: 0
 37804                           ;drv_mrf_miwi_89xa.c: 1349: }
 37805                           ;drv_mrf_miwi_89xa.c: 1350: RxPacketPtr = 0;
 37806  004FD4  0E00               	movlw	0
 37807  004FD6  0100               	movlb	0	; () banked
 37808  004FD8  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37809                           
 37810                           ;drv_mrf_miwi_89xa.c: 1351: goto RETURN_HERE;
 37811  004FDA  D1C9               	goto	i2l19947
 37812  004FDC                     i2l19855:
 37813                           
 37814                           ; BSR set to: 0
 37815                           ;drv_mrf_miwi_89xa.c: 1353: else
 37816                           ;drv_mrf_miwi_89xa.c: 1355: if( BankIndex >= 2 )
 37817  004FDC  0E01               	movlw	1
 37818  004FDE  0100               	movlb	0	; () banked
 37819  004FE0  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37820  004FE2  D004               	goto	i2l19859
 37821                           
 37822                           ; BSR set to: 0
 37823                           ;drv_mrf_miwi_89xa.c: 1356: {
 37824                           ;drv_mrf_miwi_89xa.c: 1357: RxPacketPtr = 0;
 37825  004FE4  0E00               	movlw	0
 37826  004FE6  0100               	movlb	0	; () banked
 37827  004FE8  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37828                           
 37829                           ;drv_mrf_miwi_89xa.c: 1358: goto IGNORE_HERE;
 37830  004FEA  D784               	goto	i2l19811
 37831  004FEC                     i2l19859:
 37832                           
 37833                           ; BSR set to: 0
 37834                           ;drv_mrf_miwi_89xa.c: 1359: }
 37835                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 37836  004FEC  0100               	movlb	0	; () banked
 37837  004FEE  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37838  004FF0  0D42               	mullw	66
 37839  004FF2  0E01               	movlw	1
 37840  004FF4  26F3               	addwf	prodl,f,c
 37841  004FF6  0E00               	movlw	0
 37842  004FF8  22F4               	addwfc	prodh,f,c
 37843  004FFA  0E00               	movlw	low _RxPacket
 37844  004FFC  24F3               	addwf	prodl,w,c
 37845  004FFE  6ED9               	movwf	fsr2l,c
 37846  005000  0E03               	movlw	high _RxPacket
 37847  005002  20F4               	addwfc	prodh,w,c
 37848  005004  6EDA               	movwf	fsr2h,c
 37849  005006  C0CE  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 37850                           
 37851                           ;drv_mrf_miwi_89xa.c: 1361: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 37852  00500A  0100               	movlb	0	; () banked
 37853  00500C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37854  00500E  0D42               	mullw	66
 37855  005010  0E02               	movlw	2
 37856  005012  26F3               	addwf	prodl,f,c
 37857  005014  0E00               	movlw	0
 37858  005016  22F4               	addwfc	prodh,f,c
 37859  005018  0E00               	movlw	low _RxPacket
 37860  00501A  24F3               	addwf	prodl,w,c
 37861  00501C  6ED9               	movwf	fsr2l,c
 37862  00501E  0E03               	movlw	high _RxPacket
 37863  005020  20F4               	addwfc	prodh,w,c
 37864  005022  6EDA               	movwf	fsr2h,c
 37865  005024  C0CF  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 37866  005028                     i2l419:
 37867                           
 37868                           ; BSR set to: 0
 37869                           ;drv_mrf_miwi_89xa.c: 1363: }
 37870                           ;drv_mrf_miwi_89xa.c: 1365: RxPacket[BankIndex].PayloadLen = PacketLen;
 37871  005028  0100               	movlb	0	; () banked
 37872  00502A  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37873  00502C  0D42               	mullw	66
 37874  00502E  0E41               	movlw	65
 37875  005030  26F3               	addwf	prodl,f,c
 37876  005032  0E00               	movlw	0
 37877  005034  22F4               	addwfc	prodh,f,c
 37878  005036  0E00               	movlw	low _RxPacket
 37879  005038  24F3               	addwf	prodl,w,c
 37880  00503A  6ED9               	movwf	fsr2l,c
 37881  00503C  0E03               	movlw	high _RxPacket
 37882  00503E  20F4               	addwfc	prodh,w,c
 37883  005040  6EDA               	movwf	fsr2h,c
 37884  005042  C0D5  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 37885                           
 37886                           ; BSR set to: 0
 37887                           ;drv_mrf_miwi_89xa.c: 1382: {
 37888                           ;drv_mrf_miwi_89xa.c: 1383: uint8_t ackInfoIndex = 0xFF;
 37889  005046  0100               	movlb	0	; () banked
 37890  005048  69D4               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 37891                           
 37892                           ;drv_mrf_miwi_89xa.c: 1385: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 37893  00504A  0100               	movlb	0	; () banked
 37894  00504C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37895  00504E  0D42               	mullw	66
 37896  005050  0E01               	movlw	1
 37897  005052  26F3               	addwf	prodl,f,c
 37898  005054  0E00               	movlw	0
 37899  005056  22F4               	addwfc	prodh,f,c
 37900  005058  0E00               	movlw	low _RxPacket
 37901  00505A  24F3               	addwf	prodl,w,c
 37902  00505C  6ED9               	movwf	fsr2l,c
 37903  00505E  0E03               	movlw	high _RxPacket
 37904  005060  20F4               	addwfc	prodh,w,c
 37905  005062  6EDA               	movwf	fsr2h,c
 37906  005064  0103               	movlb	3	; () banked
 37907  005066  ACDF               	btfss	indf2,6,c
 37908  005068  D058               	goto	i2l19875
 37909                           
 37910                           ; BSR set to: 3
 37911                           ;drv_mrf_miwi_89xa.c: 1386: {
 37912                           ;drv_mrf_miwi_89xa.c: 1387: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 37913  00506A  0E00               	movlw	0
 37914  00506C  0100               	movlb	0	; () banked
 37915  00506E  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 37916  005070  D047               	goto	i2l19873
 37917  005072                     i2l19865:
 37918                           
 37919                           ; BSR set to: 0
 37920                           ;drv_mrf_miwi_89xa.c: 1388: {
 37921                           ;drv_mrf_miwi_89xa.c: 1389: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 37922  005072  0100               	movlb	0	; () banked
 37923  005074  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37924  005076  0D01               	mullw	1
 37925  005078  50F3               	movf	prodl,w,c
 37926  00507A  0101               	movlb	1	; () banked
 37927  00507C  25AB               	addwf	(_MACInitParams+1)& (0+255),w,b
 37928  00507E  6ED9               	movwf	fsr2l,c
 37929  005080  50F4               	movf	prodh,w,c
 37930  005082  0101               	movlb	1	; () banked
 37931  005084  21AC               	addwfc	(_MACInitParams+2)& (0+255),w,b
 37932  005086  6EDA               	movwf	fsr2h,c
 37933  005088  0100               	movlb	0	; () banked
 37934  00508A  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37935  00508C  0D42               	mullw	66
 37936  00508E  0100               	movlb	0	; () banked
 37937  005090  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37938  005092  0100               	movlb	0	; () banked
 37939  005094  6FC6               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 37940  005096  6BC7               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 37941  005098  0E03               	movlw	3
 37942  00509A  0100               	movlb	0	; () banked
 37943  00509C  27C6               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 37944  00509E  0E00               	movlw	0
 37945  0050A0  23C7               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 37946  0050A2  0E00               	movlw	low _RxPacket
 37947  0050A4  0100               	movlb	0	; () banked
 37948  0050A6  6FC8               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 37949  0050A8  0E03               	movlw	high _RxPacket
 37950  0050AA  0100               	movlb	0	; () banked
 37951  0050AC  6FC9               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 37952  0050AE  0100               	movlb	0	; () banked
 37953  0050B0  51C6               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 37954  0050B2  0100               	movlb	0	; () banked
 37955  0050B4  27C8               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 37956  0050B6  0100               	movlb	0	; () banked
 37957  0050B8  51C7               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 37958  0050BA  0100               	movlb	0	; () banked
 37959  0050BC  23C9               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 37960  0050BE  50F3               	movf	prodl,w,c
 37961  0050C0  0100               	movlb	0	; () banked
 37962  0050C2  25C8               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 37963  0050C4  6EE1               	movwf	fsr1l,c
 37964  0050C6  50F4               	movf	prodh,w,c
 37965  0050C8  0100               	movlb	0	; () banked
 37966  0050CA  21C9               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 37967  0050CC  6EE2               	movwf	fsr1h,c
 37968  0050CE  50DE               	movf	postinc2,w,c
 37969  0050D0  18E6               	xorwf	postinc1,w,c
 37970  0050D2  B4D8               	btfsc	status,2,c
 37971  0050D4  D013               	goto	i2l19871
 37972                           
 37973                           ; BSR set to: 0
 37974                           ;drv_mrf_miwi_89xa.c: 1390: {
 37975                           ;drv_mrf_miwi_89xa.c: 1391: RxPacketPtr = 0;
 37976  0050D6  0E00               	movlw	0
 37977  0050D8  0100               	movlb	0	; () banked
 37978  0050DA  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37979                           
 37980                           ; BSR set to: 0
 37981                           ;drv_mrf_miwi_89xa.c: 1392: RxPacket[BankIndex].PayloadLen = 0;
 37982  0050DC  0100               	movlb	0	; () banked
 37983  0050DE  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37984  0050E0  0D42               	mullw	66
 37985  0050E2  0E41               	movlw	65
 37986  0050E4  26F3               	addwf	prodl,f,c
 37987  0050E6  0E00               	movlw	0
 37988  0050E8  22F4               	addwfc	prodh,f,c
 37989  0050EA  0E00               	movlw	low _RxPacket
 37990  0050EC  24F3               	addwf	prodl,w,c
 37991  0050EE  6ED9               	movwf	fsr2l,c
 37992  0050F0  0E03               	movlw	high _RxPacket
 37993  0050F2  20F4               	addwfc	prodh,w,c
 37994  0050F4  6EDA               	movwf	fsr2h,c
 37995  0050F6  0E00               	movlw	0
 37996  0050F8  6EDF               	movwf	indf2,c
 37997                           
 37998                           ;drv_mrf_miwi_89xa.c: 1393: goto IGNORE_HERE;
 37999  0050FA  D6FC               	goto	i2l19811
 38000  0050FC                     i2l19871:
 38001                           
 38002                           ; BSR set to: 0
 38003  0050FC  0100               	movlb	0	; () banked
 38004  0050FE  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38005  005100                     i2l19873:
 38006                           
 38007                           ; BSR set to: 0
 38008  005100  0101               	movlb	1	; () banked
 38009  005102  31AA               	rrcf	_MACInitParams& (0+255),w,b
 38010  005104  32E8               	rrcf	wreg,f,c
 38011  005106  32E8               	rrcf	wreg,f,c
 38012  005108  0B0F               	andlw	15
 38013  00510A  0100               	movlb	0	; () banked
 38014  00510C  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 38015  00510E  0100               	movlb	0	; () banked
 38016  005110  51C5               	movf	??_MIWIInterruptHandler& (0+255),w,b
 38017  005112  0100               	movlb	0	; () banked
 38018  005114  5DD7               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 38019  005116  A0D8               	btfss	status,0,c
 38020  005118  D7AC               	goto	i2l19865
 38021  00511A                     i2l19875:
 38022                           
 38023                           ;drv_mrf_miwi_89xa.c: 1394: }
 38024                           ;drv_mrf_miwi_89xa.c: 1395: }
 38025                           ;drv_mrf_miwi_89xa.c: 1396: }
 38026                           ;drv_mrf_miwi_89xa.c: 1399: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 38027  00511A  0100               	movlb	0	; () banked
 38028  00511C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38029  00511E  0D42               	mullw	66
 38030  005120  0E01               	movlw	1
 38031  005122  26F3               	addwf	prodl,f,c
 38032  005124  0E00               	movlw	0
 38033  005126  22F4               	addwfc	prodh,f,c
 38034  005128  0E00               	movlw	low _RxPacket
 38035  00512A  24F3               	addwf	prodl,w,c
 38036  00512C  6ED9               	movwf	fsr2l,c
 38037  00512E  0E03               	movlw	high _RxPacket
 38038  005130  20F4               	addwfc	prodh,w,c
 38039  005132  6EDA               	movwf	fsr2h,c
 38040  005134  0103               	movlb	3	; () banked
 38041  005136  AADF               	btfss	indf2,5,c
 38042  005138  D058               	goto	i2l19909
 38043                           
 38044                           ; BSR set to: 3
 38045                           ;drv_mrf_miwi_89xa.c: 1400: {
 38046                           ;drv_mrf_miwi_89xa.c: 1402: for(i = 0; i < 2; i++)
 38047  00513A  0E00               	movlw	0
 38048  00513C  0100               	movlb	0	; () banked
 38049  00513E  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38050  005140                     i2l19879:
 38051                           
 38052                           ; BSR set to: 0
 38053  005140  0E01               	movlw	1
 38054  005142  0100               	movlb	0	; () banked
 38055  005144  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38056  005146  D001               	goto	i2l19883
 38057  005148  D017               	goto	i2l19889
 38058  00514A                     i2l19883:
 38059                           
 38060                           ; BSR set to: 0
 38061                           ;drv_mrf_miwi_89xa.c: 1403: {
 38062                           ;drv_mrf_miwi_89xa.c: 1404: ackPacket[i] = MACTxBuffer[i];
 38063  00514A  0100               	movlb	0	; () banked
 38064  00514C  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38065  00514E  0D01               	mullw	1
 38066  005150  0E66               	movlw	low _MACTxBuffer
 38067  005152  24F3               	addwf	prodl,w,c
 38068  005154  6ED9               	movwf	fsr2l,c
 38069  005156  0E02               	movlw	high _MACTxBuffer
 38070  005158  20F4               	addwfc	prodh,w,c
 38071  00515A  6EDA               	movwf	fsr2h,c
 38072  00515C  0100               	movlb	0	; () banked
 38073  00515E  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38074  005160  0D01               	mullw	1
 38075  005162  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 38076  005164  24F3               	addwf	prodl,w,c
 38077  005166  6EE1               	movwf	fsr1l,c
 38078  005168  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 38079  00516A  20F4               	addwfc	prodh,w,c
 38080  00516C  6EE2               	movwf	fsr1h,c
 38081  00516E  CFDF FFE7          	movff	indf2,indf1
 38082                           
 38083                           ; BSR set to: 0
 38084  005172  0100               	movlb	0	; () banked
 38085  005174  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38086  005176  D7E4               	goto	i2l19879
 38087  005178                     i2l19889:
 38088                           
 38089                           ; BSR set to: 0
 38090                           ;drv_mrf_miwi_89xa.c: 1405: }
 38091                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[0] = 0x02 | 0x04;
 38092  005178  0E06               	movlw	6
 38093  00517A  0102               	movlb	2	; () banked
 38094  00517C  6F66               	movwf	_MACTxBuffer& (0+255),b	;volatile
 38095                           
 38096                           ; BSR set to: 2
 38097                           ;drv_mrf_miwi_89xa.c: 1407: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 38098  00517E  0100               	movlb	0	; () banked
 38099  005180  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38100  005182  0D42               	mullw	66
 38101  005184  0E02               	movlw	2
 38102  005186  26F3               	addwf	prodl,f,c
 38103  005188  0E00               	movlw	0
 38104  00518A  22F4               	addwfc	prodh,f,c
 38105  00518C  0E00               	movlw	low _RxPacket
 38106  00518E  24F3               	addwf	prodl,w,c
 38107  005190  6ED9               	movwf	fsr2l,c
 38108  005192  0E03               	movlw	high _RxPacket
 38109  005194  20F4               	addwfc	prodh,w,c
 38110  005196  6EDA               	movwf	fsr2h,c
 38111  005198  50DF               	movf	indf2,w,c
 38112  00519A  0102               	movlb	2	; () banked
 38113  00519C  6F67               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 38114                           
 38115                           ; BSR set to: 2
 38116                           ;drv_mrf_miwi_89xa.c: 1408: INTCON3bits.INT1IF = 0;
 38117  00519E  90F0               	bcf	intcon3,0,c	;volatile
 38118                           
 38119                           ; BSR set to: 2
 38120                           ;drv_mrf_miwi_89xa.c: 1409: TxPacket(2, 0);
 38121  0051A0  0E00               	movlw	0
 38122  0051A2  0100               	movlb	0	; () banked
 38123  0051A4  6FAD               	movwf	i2TxPacket@CCA& (0+255),b
 38124  0051A6  0E02               	movlw	2
 38125  0051A8  ECBF  F039         	call	i2_TxPacket
 38126                           
 38127                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 38128  0051AC  0E00               	movlw	0
 38129  0051AE  0100               	movlb	0	; () banked
 38130  0051B0  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38131  0051B2                     i2l19899:
 38132                           
 38133                           ; BSR set to: 0
 38134  0051B2  0E01               	movlw	1
 38135  0051B4  0100               	movlb	0	; () banked
 38136  0051B6  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38137  0051B8  D001               	goto	i2l19903
 38138  0051BA  D017               	goto	i2l19909
 38139  0051BC                     i2l19903:
 38140                           
 38141                           ; BSR set to: 0
 38142                           ;drv_mrf_miwi_89xa.c: 1413: {
 38143                           ;drv_mrf_miwi_89xa.c: 1414: MACTxBuffer[i] = ackPacket[i];
 38144  0051BC  0100               	movlb	0	; () banked
 38145  0051BE  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38146  0051C0  0D01               	mullw	1
 38147  0051C2  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 38148  0051C4  24F3               	addwf	prodl,w,c
 38149  0051C6  6ED9               	movwf	fsr2l,c
 38150  0051C8  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 38151  0051CA  20F4               	addwfc	prodh,w,c
 38152  0051CC  6EDA               	movwf	fsr2h,c
 38153  0051CE  0100               	movlb	0	; () banked
 38154  0051D0  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38155  0051D2  0D01               	mullw	1
 38156  0051D4  0E66               	movlw	low _MACTxBuffer
 38157  0051D6  24F3               	addwf	prodl,w,c
 38158  0051D8  6EE1               	movwf	fsr1l,c
 38159  0051DA  0E02               	movlw	high _MACTxBuffer
 38160  0051DC  20F4               	addwfc	prodh,w,c
 38161  0051DE  6EE2               	movwf	fsr1h,c
 38162  0051E0  CFDF FFE7          	movff	indf2,indf1
 38163                           
 38164                           ; BSR set to: 0
 38165  0051E4  0100               	movlb	0	; () banked
 38166  0051E6  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38167  0051E8  D7E4               	goto	i2l19899
 38168  0051EA                     i2l19909:
 38169                           
 38170                           ;drv_mrf_miwi_89xa.c: 1415: }
 38171                           ;drv_mrf_miwi_89xa.c: 1416: }
 38172                           ;drv_mrf_miwi_89xa.c: 1420: for(i = 0; i < 5; i++)
 38173  0051EA  0E00               	movlw	0
 38174  0051EC  0100               	movlb	0	; () banked
 38175  0051EE  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38176  0051F0                     i2l19911:
 38177                           
 38178                           ; BSR set to: 0
 38179  0051F0  0E04               	movlw	4
 38180  0051F2  0100               	movlb	0	; () banked
 38181  0051F4  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38182  0051F6  D001               	goto	i2l19915
 38183  0051F8  D05A               	goto	i2l19931
 38184  0051FA                     i2l19915:
 38185                           
 38186                           ; BSR set to: 0
 38187                           ;drv_mrf_miwi_89xa.c: 1421: {
 38188                           ;drv_mrf_miwi_89xa.c: 1422: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 38189  0051FA  0100               	movlb	0	; () banked
 38190  0051FC  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38191  0051FE  0D06               	mullw	6
 38192  005200  0E48               	movlw	low _AckInfo
 38193  005202  24F3               	addwf	prodl,w,c
 38194  005204  6ED9               	movwf	fsr2l,c
 38195  005206  0E02               	movlw	high _AckInfo
 38196  005208  20F4               	addwfc	prodh,w,c
 38197  00520A  6EDA               	movwf	fsr2h,c
 38198  00520C  50DF               	movf	indf2,w,c
 38199  00520E  B4D8               	btfsc	status,2,c
 38200  005210  D03A               	goto	i2l19921
 38201                           
 38202                           ; BSR set to: 0
 38203  005212  0100               	movlb	0	; () banked
 38204  005214  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38205  005216  0D42               	mullw	66
 38206  005218  0E02               	movlw	2
 38207  00521A  26F3               	addwf	prodl,f,c
 38208  00521C  0E00               	movlw	0
 38209  00521E  22F4               	addwfc	prodh,f,c
 38210  005220  0E00               	movlw	low _RxPacket
 38211  005222  24F3               	addwf	prodl,w,c
 38212  005224  6ED9               	movwf	fsr2l,c
 38213  005226  0E03               	movlw	high _RxPacket
 38214  005228  20F4               	addwfc	prodh,w,c
 38215  00522A  6EDA               	movwf	fsr2h,c
 38216  00522C  0100               	movlb	0	; () banked
 38217  00522E  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38218  005230  0D06               	mullw	6
 38219  005232  0E01               	movlw	1
 38220  005234  26F3               	addwf	prodl,f,c
 38221  005236  0E00               	movlw	0
 38222  005238  22F4               	addwfc	prodh,f,c
 38223  00523A  0E48               	movlw	low _AckInfo
 38224  00523C  24F3               	addwf	prodl,w,c
 38225  00523E  6EE1               	movwf	fsr1l,c
 38226  005240  0E02               	movlw	high _AckInfo
 38227  005242  20F4               	addwfc	prodh,w,c
 38228  005244  6EE2               	movwf	fsr1h,c
 38229  005246  50DE               	movf	postinc2,w,c
 38230  005248  18E6               	xorwf	postinc1,w,c
 38231  00524A  A4D8               	btfss	status,2,c
 38232  00524C  D01C               	goto	i2l19921
 38233                           
 38234                           ; BSR set to: 0
 38235                           ;drv_mrf_miwi_89xa.c: 1423: {
 38236                           ;drv_mrf_miwi_89xa.c: 1424: AckInfo[i].startTick = MiWi_TickGet();
 38237  00524E  ECBA  F058         	call	i2_MiWi_TickGet	;wreg free
 38238  005252  0100               	movlb	0	; () banked
 38239  005254  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38240  005256  0D06               	mullw	6
 38241  005258  0E02               	movlw	2
 38242  00525A  26F3               	addwf	prodl,f,c
 38243  00525C  0E00               	movlw	0
 38244  00525E  22F4               	addwfc	prodh,f,c
 38245  005260  0E48               	movlw	low _AckInfo
 38246  005262  24F3               	addwf	prodl,w,c
 38247  005264  6ED9               	movwf	fsr2l,c
 38248  005266  0E02               	movlw	high _AckInfo
 38249  005268  20F4               	addwfc	prodh,w,c
 38250  00526A  6EDA               	movwf	fsr2h,c
 38251  00526C  0100               	movlb	0	; () banked
 38252  00526E  C0A3  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 38253  005272  0100               	movlb	0	; () banked
 38254  005274  C0A4  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 38255  005278  0100               	movlb	0	; () banked
 38256  00527A  C0A5  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 38257  00527E  0100               	movlb	0	; () banked
 38258  005280  C0A6  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 38259                           
 38260                           ;drv_mrf_miwi_89xa.c: 1425: break;
 38261  005284  D014               	goto	i2l19931
 38262  005286                     i2l19921:
 38263                           
 38264                           ; BSR set to: 0
 38265                           ;drv_mrf_miwi_89xa.c: 1426: }
 38266                           ;drv_mrf_miwi_89xa.c: 1427: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 38267  005286  0100               	movlb	0	; () banked
 38268  005288  29D4               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38269  00528A  A4D8               	btfss	status,2,c
 38270  00528C  D00D               	goto	i2l19927
 38271                           
 38272                           ; BSR set to: 0
 38273  00528E  0100               	movlb	0	; () banked
 38274  005290  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38275  005292  0D06               	mullw	6
 38276  005294  0E48               	movlw	low _AckInfo
 38277  005296  24F3               	addwf	prodl,w,c
 38278  005298  6ED9               	movwf	fsr2l,c
 38279  00529A  0E02               	movlw	high _AckInfo
 38280  00529C  20F4               	addwfc	prodh,w,c
 38281  00529E  6EDA               	movwf	fsr2h,c
 38282  0052A0  50DF               	movf	indf2,w,c
 38283  0052A2  B4D8               	btfsc	status,2,c
 38284                           
 38285                           ; BSR set to: 0
 38286                           ;drv_mrf_miwi_89xa.c: 1428: {
 38287                           ;drv_mrf_miwi_89xa.c: 1429: ackInfoIndex = i;
 38288  0052A4  C0D7  F0D4         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 38289  0052A8                     i2l19927:
 38290                           
 38291                           ; BSR set to: 0
 38292  0052A8  0100               	movlb	0	; () banked
 38293  0052AA  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38294  0052AC  D7A1               	goto	i2l19911
 38295  0052AE                     i2l19931:
 38296                           
 38297                           ; BSR set to: 0
 38298                           ;drv_mrf_miwi_89xa.c: 1430: }
 38299                           ;drv_mrf_miwi_89xa.c: 1431: }
 38300                           ;drv_mrf_miwi_89xa.c: 1433: if( i >= 5 )
 38301  0052AE  0E04               	movlw	4
 38302  0052B0  0100               	movlb	0	; () banked
 38303  0052B2  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38304  0052B4  D05C               	goto	i2l19947
 38305                           
 38306                           ; BSR set to: 0
 38307                           ;drv_mrf_miwi_89xa.c: 1434: {
 38308                           ;drv_mrf_miwi_89xa.c: 1435: if( ackInfoIndex < 5 )
 38309  0052B6  0E05               	movlw	5
 38310  0052B8  0100               	movlb	0	; () banked
 38311  0052BA  61D4               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 38312  0052BC  D042               	goto	i2l19941
 38313                           
 38314                           ; BSR set to: 0
 38315                           ;drv_mrf_miwi_89xa.c: 1436: {
 38316                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Valid = 1;
 38317  0052BE  0100               	movlb	0	; () banked
 38318  0052C0  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38319  0052C2  0D06               	mullw	6
 38320  0052C4  0E48               	movlw	low _AckInfo
 38321  0052C6  24F3               	addwf	prodl,w,c
 38322  0052C8  6ED9               	movwf	fsr2l,c
 38323  0052CA  0E02               	movlw	high _AckInfo
 38324  0052CC  20F4               	addwfc	prodh,w,c
 38325  0052CE  6EDA               	movwf	fsr2h,c
 38326  0052D0  0E01               	movlw	1
 38327  0052D2  6EDF               	movwf	indf2,c
 38328                           
 38329                           ; BSR set to: 0
 38330                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 38331  0052D4  0100               	movlb	0	; () banked
 38332  0052D6  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38333  0052D8  0D42               	mullw	66
 38334  0052DA  0E02               	movlw	2
 38335  0052DC  26F3               	addwf	prodl,f,c
 38336  0052DE  0E00               	movlw	0
 38337  0052E0  22F4               	addwfc	prodh,f,c
 38338  0052E2  0E00               	movlw	low _RxPacket
 38339  0052E4  24F3               	addwf	prodl,w,c
 38340  0052E6  6ED9               	movwf	fsr2l,c
 38341  0052E8  0E03               	movlw	high _RxPacket
 38342  0052EA  20F4               	addwfc	prodh,w,c
 38343  0052EC  6EDA               	movwf	fsr2h,c
 38344  0052EE  0100               	movlb	0	; () banked
 38345  0052F0  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38346  0052F2  0D06               	mullw	6
 38347  0052F4  0E01               	movlw	1
 38348  0052F6  26F3               	addwf	prodl,f,c
 38349  0052F8  0E00               	movlw	0
 38350  0052FA  22F4               	addwfc	prodh,f,c
 38351  0052FC  0E48               	movlw	low _AckInfo
 38352  0052FE  24F3               	addwf	prodl,w,c
 38353  005300  6EE1               	movwf	fsr1l,c
 38354  005302  0E02               	movlw	high _AckInfo
 38355  005304  20F4               	addwfc	prodh,w,c
 38356  005306  6EE2               	movwf	fsr1h,c
 38357  005308  CFDF FFE7          	movff	indf2,indf1
 38358                           
 38359                           ; BSR set to: 0
 38360                           ;drv_mrf_miwi_89xa.c: 1439: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 38361  00530C  ECBA  F058         	call	i2_MiWi_TickGet	;wreg free
 38362  005310  0100               	movlb	0	; () banked
 38363  005312  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38364  005314  0D06               	mullw	6
 38365  005316  0E02               	movlw	2
 38366  005318  26F3               	addwf	prodl,f,c
 38367  00531A  0E00               	movlw	0
 38368  00531C  22F4               	addwfc	prodh,f,c
 38369  00531E  0E48               	movlw	low _AckInfo
 38370  005320  24F3               	addwf	prodl,w,c
 38371  005322  6ED9               	movwf	fsr2l,c
 38372  005324  0E02               	movlw	high _AckInfo
 38373  005326  20F4               	addwfc	prodh,w,c
 38374  005328  6EDA               	movwf	fsr2h,c
 38375  00532A  0100               	movlb	0	; () banked
 38376  00532C  C0A3  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 38377  005330  0100               	movlb	0	; () banked
 38378  005332  C0A4  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 38379  005336  0100               	movlb	0	; () banked
 38380  005338  C0A5  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 38381  00533C  0100               	movlb	0	; () banked
 38382  00533E  C0A6  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 38383  005342                     i2l19941:
 38384                           
 38385                           ; BSR set to: 0
 38386                           ;drv_mrf_miwi_89xa.c: 1440: }
 38387                           ;drv_mrf_miwi_89xa.c: 1443: RxPacket[BankIndex].flags.bits.Valid = 1;
 38388  005342  0100               	movlb	0	; () banked
 38389  005344  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38390  005346  0D42               	mullw	66
 38391  005348  0E00               	movlw	low _RxPacket
 38392  00534A  24F3               	addwf	prodl,w,c
 38393  00534C  6ED9               	movwf	fsr2l,c
 38394  00534E  0E03               	movlw	high _RxPacket
 38395  005350  20F4               	addwfc	prodh,w,c
 38396  005352  6EDA               	movwf	fsr2h,c
 38397  005354  0103               	movlb	3	; () banked
 38398  005356  80DF               	bsf	indf2,0,c
 38399                           
 38400                           ; BSR set to: 3
 38401                           ;drv_mrf_miwi_89xa.c: 1444: }
 38402                           ;drv_mrf_miwi_89xa.c: 1451: }
 38403                           ;drv_mrf_miwi_89xa.c: 1452: goto RETURN_HERE;
 38404  005358  D00A               	goto	i2l19947
 38405  00535A                     i2l19943:
 38406  00535A  0100               	movlb	0	; () banked
 38407  00535C  51CB               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 38408  00535E  0100               	movlb	0	; () banked
 38409  005360  11CC               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 38410  005362  B4D8               	btfsc	status,2,c
 38411  005364  D004               	goto	i2l19947
 38412  005366  D5DF               	goto	i2l19825
 38413  005368                     i2l19945:
 38414                           
 38415                           ; BSR set to: 0
 38416                           ;drv_mrf_miwi_89xa.c: 1458: else
 38417                           ;drv_mrf_miwi_89xa.c: 1459: {
 38418                           ;drv_mrf_miwi_89xa.c: 1461: IRQ1_Received = 1;
 38419  005368  0E01               	movlw	1
 38420  00536A  0100               	movlb	0	; () banked
 38421  00536C  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 38422  00536E                     i2l19947:
 38423                           
 38424                           ;drv_mrf_miwi_89xa.c: 1465: INTCON3bits.INT1IF = 0;
 38425  00536E  90F0               	bcf	intcon3,0,c	;volatile
 38426                           
 38427                           ;drv_mrf_miwi_89xa.c: 1467: __nop();
 38428  005370  F000               	nop	
 38429  005372                     i2l19951:
 38430                           
 38431                           ;drv_mrf_miwi_89xa.c: 1468: }
 38432                           ;drv_mrf_miwi_89xa.c: 1472: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 38433  005372  B2F2               	btfsc	intcon,1,c	;volatile
 38434  005374  A8F2               	btfss	intcon,4,c	;volatile
 38435  005376  D014               	goto	i2l19965
 38436                           
 38437                           ;drv_mrf_miwi_89xa.c: 1473: {
 38438                           ;drv_mrf_miwi_89xa.c: 1475: status_led = LED_FULL;
 38439  005378  0E03               	movlw	3
 38440  00537A  6E55               	movwf	_status_led,c	;volatile
 38441                           
 38442                           ;drv_mrf_miwi_89xa.c: 1476: update_LED();
 38443  00537C  EC27  F05A         	call	i2_update_LED	;wreg free
 38444                           
 38445                           ;drv_mrf_miwi_89xa.c: 1482: INTCONbits.INT0IF = 0;
 38446  005380  92F2               	bcf	intcon,1,c	;volatile
 38447                           
 38448                           ;drv_mrf_miwi_89xa.c: 1485: if(RF_Mode == 0x60)
 38449  005382  0E60               	movlw	96
 38450  005384  0100               	movlb	0	; () banked
 38451  005386  199B               	xorwf	_RF_Mode& (0+255),w,b
 38452  005388  A4D8               	btfss	status,2,c
 38453  00538A  D00A               	goto	i2l19965
 38454                           
 38455                           ; BSR set to: 0
 38456                           ;drv_mrf_miwi_89xa.c: 1486: {
 38457                           ;drv_mrf_miwi_89xa.c: 1487: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 38458  00538C  0E28               	movlw	40
 38459  00538E  ECB1  F05A         	call	i2_RegisterRead
 38460  005392  0100               	movlb	0	; () banked
 38461  005394  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 38462  005396  0100               	movlb	0	; () banked
 38463  005398  90D8               	bcf	status,0,c
 38464  00539A  31C5               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 38465  00539C  0100               	movlb	0	; () banked
 38466  00539E  6F9C               	movwf	_RSSIVal& (0+255),b
 38467  0053A0                     i2l19965:
 38468                           
 38469                           ;drv_mrf_miwi_89xa.c: 1488: }
 38470                           ;drv_mrf_miwi_89xa.c: 1492: }
 38471                           ;drv_mrf_miwi_89xa.c: 1496: if(PIR1bits.TMR1IF)
 38472  0053A0  A09E               	btfss	3998,0,c	;volatile
 38473  0053A2  0012               	return	
 38474                           
 38475                           ;drv_mrf_miwi_89xa.c: 1497: {
 38476                           ;drv_mrf_miwi_89xa.c: 1498: if(PIE1bits.TMR1IE)
 38477  0053A4  A09D               	btfss	3997,0,c	;volatile
 38478  0053A6  0012               	return	
 38479                           
 38480                           ;drv_mrf_miwi_89xa.c: 1499: {
 38481                           ;drv_mrf_miwi_89xa.c: 1501: PIR1bits.TMR1IF = 0;
 38482  0053A8  909E               	bcf	3998,0,c	;volatile
 38483                           
 38484                           ;drv_mrf_miwi_89xa.c: 1502: timerExtension1++;
 38485  0053AA  0100               	movlb	0	; () banked
 38486  0053AC  2BA1               	incf	_timerExtension1& (0+255),f,b	;volatile
 38487                           
 38488                           ; BSR set to: 0
 38489                           ;drv_mrf_miwi_89xa.c: 1503: if(timerExtension1 == 0)
 38490  0053AE  0100               	movlb	0	; () banked
 38491  0053B0  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 38492  0053B2  A4D8               	btfss	status,2,c
 38493  0053B4  0012               	return	
 38494                           
 38495                           ; BSR set to: 0
 38496                           ;drv_mrf_miwi_89xa.c: 1504: {
 38497                           ;drv_mrf_miwi_89xa.c: 1505: timerExtension2++;
 38498  0053B6  0100               	movlb	0	; () banked
 38499  0053B8  2BA2               	incf	_timerExtension2& (0+255),f,b	;volatile
 38500                           
 38501                           ; BSR set to: 0
 38502                           
 38503                           ; BSR set to: 0
 38504                           
 38505                           ; BSR set to: 0
 38506  0053BA  0012               	return	
 38507  0053BC                     __end_of_MIWIInterruptHandler:
 38508                           	opt stack 0
 38509                           pclatu	equ	0xFFB
 38510                           pclath	equ	0xFFA
 38511                           tblptru	equ	0xFF8
 38512                           tblptrh	equ	0xFF7
 38513                           tblptrl	equ	0xFF6
 38514                           tablat	equ	0xFF5
 38515                           prodh	equ	0xFF4
 38516                           prodl	equ	0xFF3
 38517                           intcon	equ	0xFF2
 38518                           intcon2	equ	0xFF1
 38519                           intcon3	equ	0xFF0
 38520                           indf0	equ	0xFEF
 38521                           postinc0	equ	0xFEE
 38522                           plusw0	equ	0xFEB
 38523                           fsr0h	equ	0xFEA
 38524                           fsr0l	equ	0xFE9
 38525                           wreg	equ	0xFE8
 38526                           indf1	equ	0xFE7
 38527                           postinc1	equ	0xFE6
 38528                           postdec1	equ	0xFE5
 38529                           plusw1	equ	0xFE3
 38530                           fsr1h	equ	0xFE2
 38531                           fsr1l	equ	0xFE1
 38532                           bsr	equ	0xFE0
 38533                           indf2	equ	0xFDF
 38534                           postinc2	equ	0xFDE
 38535                           postdec2	equ	0xFDD
 38536                           plusw2	equ	0xFDB
 38537                           fsr2h	equ	0xFDA
 38538                           fsr2l	equ	0xFD9
 38539                           status	equ	0xFD8
 38540                           
 38541 ;; *************** function i2_update_LED *****************
 38542 ;; Defined at:
 38543 ;;		line 735 in file "src/main.c"
 38544 ;; Parameters:    Size  Location     Type
 38545 ;;		None
 38546 ;; Auto vars:     Size  Location     Type
 38547 ;;		None
 38548 ;; Return value:  Size  Location     Type
 38549 ;;                  2    0[None  ] int 
 38550 ;; Registers used:
 38551 ;;		wreg, status,2, status,0
 38552 ;; Tracked objects:
 38553 ;;		On entry : 0/0
 38554 ;;		On exit  : 0/0
 38555 ;;		Unchanged: 0/0
 38556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38561 ;;Total ram usage:        0 bytes
 38562 ;; Hardware stack levels used:    1
 38563 ;; This function calls:
 38564 ;;		Nothing
 38565 ;; This function is called by:
 38566 ;;		_MIWIInterruptHandler
 38567 ;; This function uses a non-reentrant model
 38568 ;;
 38569                           
 38570                           	psect	text118
 38571  00B44E                     __ptext118:
 38572                           	opt stack 0
 38573  00B44E                     i2_update_LED:
 38574                           	opt stack 6
 38575                           
 38576                           ;main.c: 737: switch(status_led)
 38577                           
 38578                           ;incstack = 0
 38579  00B44E  D021               	goto	i2l13689
 38580  00B450                     i2l1863:
 38581                           
 38582                           ;main.c: 741: CCP1CONbits.DC1B0 = 0;
 38583  00B450  98BA               	bcf	4026,4,c	;volatile
 38584                           
 38585                           ;main.c: 742: CCP1CONbits.DC1B1 = 0;
 38586  00B452  9ABA               	bcf	4026,5,c	;volatile
 38587                           
 38588                           ;main.c: 743: CCPR1L = 0;
 38589  00B454  0E00               	movlw	0
 38590  00B456  6EBB               	movwf	4027,c	;volatile
 38591                           
 38592                           ;main.c: 744: LED_increasing = 1;
 38593  00B458  0E01               	movlw	1
 38594  00B45A  6E45               	movwf	_LED_increasing,c	;volatile
 38595                           
 38596                           ;main.c: 745: break;
 38597  00B45C  0012               	return	
 38598  00B45E                     i2l1865:
 38599                           
 38600                           ;main.c: 749: CCP1CONbits.DC1B0 = 1023 & 1;
 38601  00B45E  88BA               	bsf	4026,4,c	;volatile
 38602                           
 38603                           ;main.c: 750: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 38604  00B460  8ABA               	bsf	4026,5,c	;volatile
 38605                           
 38606                           ;main.c: 751: CCPR1L = (1023 >> 2);
 38607  00B462  68BB               	setf	4027,c	;volatile
 38608                           
 38609                           ;main.c: 752: repeat_full = 4;
 38610  00B464  0E04               	movlw	4
 38611  00B466  6E53               	movwf	_repeat_full,c	;volatile
 38612                           
 38613                           ;main.c: 753: break;
 38614  00B468  0012               	return	
 38615  00B46A                     i2l13675:
 38616                           
 38617                           ;main.c: 756: T4CONbits.T4CKPS = 0b01;
 38618  00B46A  5076               	movf	3958,w,c	;volatile
 38619  00B46C  0BFC               	andlw	-4
 38620  00B46E  0901               	iorlw	1
 38621  00B470  6E76               	movwf	3958,c	;volatile
 38622                           
 38623                           ;main.c: 758: CCP1CONbits.DC1B0 = 235 & 1;
 38624  00B472  88BA               	bsf	4026,4,c	;volatile
 38625                           
 38626                           ;main.c: 759: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 38627  00B474  8ABA               	bsf	4026,5,c	;volatile
 38628                           
 38629                           ;main.c: 760: CCPR1L = (235 >> 2);
 38630  00B476  0E3A               	movlw	58
 38631  00B478  6EBB               	movwf	4027,c	;volatile
 38632                           
 38633                           ;main.c: 761: LED_increasing = 0;
 38634  00B47A  0E00               	movlw	0
 38635  00B47C  6E45               	movwf	_LED_increasing,c	;volatile
 38636                           
 38637                           ;main.c: 762: break;
 38638  00B47E  0012               	return	
 38639  00B480                     i2l13681:
 38640                           
 38641                           ;main.c: 765: T4CONbits.T4CKPS = 0b11;
 38642  00B480  0E03               	movlw	3
 38643  00B482  1276               	iorwf	3958,f,c	;volatile
 38644                           
 38645                           ;main.c: 767: CCP1CONbits.DC1B0 = 235 & 1;
 38646  00B484  88BA               	bsf	4026,4,c	;volatile
 38647                           
 38648                           ;main.c: 768: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 38649  00B486  8ABA               	bsf	4026,5,c	;volatile
 38650                           
 38651                           ;main.c: 769: CCPR1L = (235 >> 2);
 38652  00B488  0E3A               	movlw	58
 38653  00B48A  6EBB               	movwf	4027,c	;volatile
 38654                           
 38655                           ;main.c: 770: LED_increasing = 0;
 38656  00B48C  0E00               	movlw	0
 38657  00B48E  6E45               	movwf	_LED_increasing,c	;volatile
 38658                           
 38659                           ;main.c: 772: }
 38660                           
 38661                           ;main.c: 771: break;
 38662  00B490  0012               	return	
 38663  00B492                     i2l13689:
 38664  00B492  5055               	movf	_status_led,w,c	;volatile
 38665                           
 38666                           ; Switch size 1, requested type "space"
 38667                           ; Number of cases is 4, Range of values is 0 to 3
 38668                           ; switch strategies available:
 38669                           ; Name         Instructions Cycles
 38670                           ; simple_byte           13     7 (average)
 38671                           ;	Chosen strategy is simple_byte
 38672  00B494  0A00               	xorlw	0	; case 0
 38673  00B496  B4D8               	btfsc	status,2,c
 38674  00B498  D7DB               	goto	i2l1863
 38675  00B49A  0A01               	xorlw	1	; case 1
 38676  00B49C  B4D8               	btfsc	status,2,c
 38677  00B49E  D7E5               	goto	i2l13675
 38678  00B4A0  0A03               	xorlw	3	; case 2
 38679  00B4A2  B4D8               	btfsc	status,2,c
 38680  00B4A4  D7ED               	goto	i2l13681
 38681  00B4A6  0A01               	xorlw	1	; case 3
 38682  00B4A8  A4D8               	btfss	status,2,c
 38683  00B4AA  0012               	return	
 38684  00B4AC  D7D8               	goto	i2l1865
 38685  00B4AE                     __end_ofi2_update_LED:
 38686                           	opt stack 0
 38687                           pclatu	equ	0xFFB
 38688                           pclath	equ	0xFFA
 38689                           tblptru	equ	0xFF8
 38690                           tblptrh	equ	0xFF7
 38691                           tblptrl	equ	0xFF6
 38692                           tablat	equ	0xFF5
 38693                           prodh	equ	0xFF4
 38694                           prodl	equ	0xFF3
 38695                           intcon	equ	0xFF2
 38696                           intcon2	equ	0xFF1
 38697                           intcon3	equ	0xFF0
 38698                           indf0	equ	0xFEF
 38699                           postinc0	equ	0xFEE
 38700                           plusw0	equ	0xFEB
 38701                           fsr0h	equ	0xFEA
 38702                           fsr0l	equ	0xFE9
 38703                           wreg	equ	0xFE8
 38704                           indf1	equ	0xFE7
 38705                           postinc1	equ	0xFE6
 38706                           postdec1	equ	0xFE5
 38707                           plusw1	equ	0xFE3
 38708                           fsr1h	equ	0xFE2
 38709                           fsr1l	equ	0xFE1
 38710                           bsr	equ	0xFE0
 38711                           indf2	equ	0xFDF
 38712                           postinc2	equ	0xFDE
 38713                           postdec2	equ	0xFDD
 38714                           plusw2	equ	0xFDB
 38715                           fsr2h	equ	0xFDA
 38716                           fsr2l	equ	0xFD9
 38717                           status	equ	0xFD8
 38718                           
 38719 ;; *************** function i2_TxPacket *****************
 38720 ;; Defined at:
 38721 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 38722 ;; Parameters:    Size  Location     Type
 38723 ;;  TxPacketLen     1    wreg     unsigned char 
 38724 ;;  CCA             1   10[BANK0 ] unsigned char 
 38725 ;; Auto vars:     Size  Location     Type
 38726 ;;  TxPacketLen     1   31[BANK0 ] unsigned char 
 38727 ;;  TxPacket        4   23[BANK0 ] struct _MIWI_TICK
 38728 ;;  TxPacket        4   19[BANK0 ] struct _MIWI_TICK
 38729 ;;  TxPacket        1   33[BANK0 ] unsigned char 
 38730 ;;  TxPacket        1   32[BANK0 ] unsigned char 
 38731 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 38732 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 38733 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 38734 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 38735 ;; Return value:  Size  Location     Type
 38736 ;;                  1    wreg      unsigned char 
 38737 ;; Registers used:
 38738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38739 ;; Tracked objects:
 38740 ;;		On entry : 0/0
 38741 ;;		On exit  : 0/0
 38742 ;;		Unchanged: 0/0
 38743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38744 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38745 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38746 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38747 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38748 ;;Total ram usage:       24 bytes
 38749 ;; Hardware stack levels used:    1
 38750 ;; Hardware stack levels required when called:    3
 38751 ;; This function calls:
 38752 ;;		i2_MiWi_TickGet
 38753 ;;		i2_RegisterRead
 38754 ;;		i2_RegisterSet
 38755 ;;		i2_SetRFMode
 38756 ;;		i2_WriteFIFO
 38757 ;; This function is called by:
 38758 ;;		_MIWIInterruptHandler
 38759 ;; This function uses a non-reentrant model
 38760 ;;
 38761                           
 38762                           	psect	text119
 38763  00737E                     __ptext119:
 38764                           	opt stack 0
 38765  00737E                     i2_TxPacket:
 38766                           	opt stack 3
 38767                           
 38768                           ;incstack = 0
 38769                           ;i2TxPacket@TxPacketLen stored from wreg
 38770  00737E  0100               	movlb	0	; () banked
 38771  007380  6FC2               	movwf	i2TxPacket@TxPacketLen& (0+255),b
 38772                           
 38773                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 38774                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 38775                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 38776                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 38777                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 38778                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 38779  007382  0E03               	movlw	3
 38780  007384  0100               	movlb	0	; () banked
 38781  007386  6FC0               	movwf	i2TxPacket@reTry& (0+255),b
 38782                           
 38783                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 38784  007388  D0C8               	goto	i2l19575
 38785  00738A                     i2l19509:
 38786                           
 38787                           ; BSR set to: 0
 38788                           ;drv_mrf_miwi_89xa.c: 305: {
 38789                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 38790                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 38791  00738A  0E00               	movlw	0
 38792  00738C  0100               	movlb	0	; () banked
 38793  00738E  6FC1               	movwf	i2TxPacket@allowedTxFailure& (0+255),b
 38794  007390                     i2l262:
 38795                           
 38796                           ; BSR set to: 0
 38797                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 38798  007390  0E00               	movlw	0
 38799  007392  0100               	movlb	0	; () banked
 38800  007394  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 38801                           
 38802                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 38803  007396  0E00               	movlw	0
 38804  007398  0100               	movlb	0	; () banked
 38805  00739A  6FBF               	movwf	i2TxPacket@CCARetries& (0+255),b
 38806                           
 38807                           ; BSR set to: 0
 38808                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 38809  00739C  0100               	movlb	0	; () banked
 38810  00739E  51AD               	movf	i2TxPacket@CCA& (0+255),w,b
 38811  0073A0  0100               	movlb	0	; () banked
 38812  0073A2  B4D8               	btfsc	status,2,c
 38813  0073A4  D018               	goto	i2l263
 38814  0073A6                     i2l19513:
 38815                           
 38816                           ; BSR set to: 0
 38817                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 38818  0073A6  0E28               	movlw	40
 38819  0073A8  ECB1  F05A         	call	i2_RegisterRead
 38820  0073AC  0100               	movlb	0	; () banked
 38821  0073AE  6FC4               	movwf	i2TxPacket@rssival& (0+255),b
 38822                           
 38823                           ; BSR set to: 0
 38824                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 38825  0073B0  0100               	movlb	0	; () banked
 38826  0073B2  90D8               	bcf	status,0,c
 38827  0073B4  31C4               	rrcf	i2TxPacket@rssival& (0+255),w,b
 38828  0073B6  0100               	movlb	0	; () banked
 38829  0073B8  6FC4               	movwf	i2TxPacket@rssival& (0+255),b
 38830                           
 38831                           ; BSR set to: 0
 38832                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 38833  0073BA  0E41               	movlw	65
 38834  0073BC  0100               	movlb	0	; () banked
 38835  0073BE  65C4               	cpfsgt	i2TxPacket@rssival& (0+255),b
 38836  0073C0  D00A               	goto	i2l263
 38837                           
 38838                           ; BSR set to: 0
 38839                           ;drv_mrf_miwi_89xa.c: 326: {
 38840                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 38841  0073C2  0100               	movlb	0	; () banked
 38842  0073C4  2BBF               	incf	i2TxPacket@CCARetries& (0+255),f,b
 38843  0073C6  05BF               	decf	i2TxPacket@CCARetries& (0+255),w,b
 38844  0073C8  0100               	movlb	0	; () banked
 38845  0073CA  6FAE               	movwf	??i2_TxPacket& (0+255),b
 38846  0073CC  0E04               	movlw	4
 38847  0073CE  0100               	movlb	0	; () banked
 38848  0073D0  65AE               	cpfsgt	??i2_TxPacket& (0+255),b
 38849  0073D2  D7E9               	goto	i2l19513
 38850  0073D4  0012               	return	
 38851  0073D6                     i2l263:
 38852                           
 38853                           ; BSR set to: 0
 38854                           ;drv_mrf_miwi_89xa.c: 333: }
 38855                           ;drv_mrf_miwi_89xa.c: 334: }
 38856                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 38857  0073D6  98F2               	bcf	intcon,4,c	;volatile
 38858                           
 38859                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 38860  0073D8  96F0               	bcf	intcon3,3,c	;volatile
 38861                           
 38862                           ; BSR set to: 0
 38863                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 38864  0073DA  0E20               	movlw	32
 38865  0073DC  EC17  F056         	call	i2_SetRFMode
 38866                           
 38867                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 38868  0073E0  0E1A               	movlw	26
 38869  0073E2  0100               	movlb	0	; () banked
 38870  0073E4  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 38871  0073E6  0EC9               	movlw	201
 38872  0073E8  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 38873  0073EA  EC4C  F05B         	call	i2_RegisterSet	;wreg free
 38874                           
 38875                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 38876  0073EE  0100               	movlb	0	; () banked
 38877  0073F0  51C2               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 38878  0073F2  ECB2  F05B         	call	i2_WriteFIFO
 38879                           
 38880                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 38881  0073F6  0E00               	movlw	0
 38882  0073F8  0100               	movlb	0	; () banked
 38883  0073FA  6FC3               	movwf	i2TxPacket@i& (0+255),b
 38884  0073FC  D00E               	goto	i2l19535
 38885  0073FE                     i2l19531:
 38886                           
 38887                           ; BSR set to: 0
 38888                           ;drv_mrf_miwi_89xa.c: 346: {
 38889                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 38890  0073FE  0100               	movlb	0	; () banked
 38891  007400  51C3               	movf	i2TxPacket@i& (0+255),w,b
 38892  007402  0D01               	mullw	1
 38893  007404  0E66               	movlw	low _MACTxBuffer
 38894  007406  24F3               	addwf	prodl,w,c
 38895  007408  6ED9               	movwf	fsr2l,c
 38896  00740A  0E02               	movlw	high _MACTxBuffer
 38897  00740C  20F4               	addwfc	prodh,w,c
 38898  00740E  6EDA               	movwf	fsr2h,c
 38899  007410  50DF               	movf	indf2,w,c
 38900  007412  ECB2  F05B         	call	i2_WriteFIFO
 38901  007416  0100               	movlb	0	; () banked
 38902  007418  2BC3               	incf	i2TxPacket@i& (0+255),f,b
 38903  00741A                     i2l19535:
 38904                           
 38905                           ; BSR set to: 0
 38906  00741A  0100               	movlb	0	; () banked
 38907  00741C  51C2               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 38908  00741E  0100               	movlb	0	; () banked
 38909  007420  5DC3               	subwf	i2TxPacket@i& (0+255),w,b
 38910  007422  A0D8               	btfss	status,0,c
 38911  007424  D7EC               	goto	i2l19531
 38912                           
 38913                           ; BSR set to: 0
 38914                           ;drv_mrf_miwi_89xa.c: 348: }
 38915                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 38916                           
 38917                           ; BSR set to: 0
 38918  007426  0E80               	movlw	128
 38919  007428  EC17  F056         	call	i2_SetRFMode
 38920                           
 38921                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 38922  00742C  88F2               	bsf	intcon,4,c	;volatile
 38923                           
 38924                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 38925  00742E  86F0               	bsf	intcon3,3,c	;volatile
 38926  007430                     i2l19543:
 38927  007430  0100               	movlb	0	; () banked
 38928  007432  5199               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 38929  007434  B4D8               	btfsc	status,2,c
 38930                           
 38931                           ; BSR set to: 0
 38932  007436  B0F0               	btfsc	intcon3,0,c	;volatile
 38933  007438  D001               	goto	i2l19547
 38934  00743A  D7FA               	goto	i2l19543
 38935  00743C                     i2l19547:
 38936                           
 38937                           ; BSR set to: 0
 38938                           ;drv_mrf_miwi_89xa.c: 357: };
 38939                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 38940  00743C  0E00               	movlw	0
 38941  00743E  0100               	movlb	0	; () banked
 38942  007440  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 38943                           
 38944                           ; BSR set to: 0
 38945                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 38946  007442  0E20               	movlw	32
 38947  007444  EC17  F056         	call	i2_SetRFMode
 38948                           
 38949                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 38950  007448  0E60               	movlw	96
 38951  00744A  EC17  F056         	call	i2_SetRFMode
 38952                           
 38953                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 38954  00744E  0102               	movlb	2	; () banked
 38955  007450  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 38956  007452  D05F               	goto	i2l19573
 38957                           
 38958                           ; BSR set to: 2
 38959                           ;drv_mrf_miwi_89xa.c: 367: {
 38960                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 38961  007454  C267  F09D         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 38962                           
 38963                           ; BSR set to: 2
 38964                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 38965  007458  ECBA  F058         	call	i2_MiWi_TickGet	;wreg free
 38966  00745C  C0A3  F0B6         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 38967  007460  C0A4  F0B7         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 38968  007464  C0A5  F0B8         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 38969  007468  C0A6  F0B9         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 38970  00746C                     i2l19559:
 38971                           
 38972                           ;drv_mrf_miwi_89xa.c: 371: {
 38973                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 38974  00746C  0100               	movlb	0	; () banked
 38975  00746E  519F               	movf	_hasAck& (0+255),w,b	;volatile
 38976  007470  B4D8               	btfsc	status,2,c
 38977  007472  D004               	goto	i2l19563
 38978                           
 38979                           ; BSR set to: 0
 38980                           ;drv_mrf_miwi_89xa.c: 373: {
 38981                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 38982  007474  0E01               	movlw	1
 38983  007476  0100               	movlb	0	; () banked
 38984  007478  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38985                           
 38986                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 38987  00747A  0012               	return	
 38988  00747C                     i2l19563:
 38989                           
 38990                           ; BSR set to: 0
 38991                           ;drv_mrf_miwi_89xa.c: 376: }
 38992                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 38993  00747C  ECBA  F058         	call	i2_MiWi_TickGet	;wreg free
 38994  007480  C0A3  F0BA         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 38995  007484  C0A4  F0BB         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 38996  007488  C0A5  F0BC         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 38997  00748C  C0A6  F0BD         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 38998                           
 38999                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 39000  007490  C0B6  F0AE         	movff	i2TxPacket@t1,??i2_TxPacket
 39001  007494  C0B7  F0AF         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 39002  007498  C0B8  F0B0         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 39003  00749C  C0B9  F0B1         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 39004  0074A0  0100               	movlb	0	; () banked
 39005  0074A2  1FAE               	comf	??i2_TxPacket& (0+255),f,b
 39006  0074A4  1FAF               	comf	(??i2_TxPacket+1)& (0+255),f,b
 39007  0074A6  1FB0               	comf	(??i2_TxPacket+2)& (0+255),f,b
 39008  0074A8  1FB1               	comf	(??i2_TxPacket+3)& (0+255),f,b
 39009  0074AA  2BAE               	incf	??i2_TxPacket& (0+255),f,b
 39010  0074AC  0E00               	movlw	0
 39011  0074AE  23AF               	addwfc	(??i2_TxPacket+1)& (0+255),f,b
 39012  0074B0  23B0               	addwfc	(??i2_TxPacket+2)& (0+255),f,b
 39013  0074B2  23B1               	addwfc	(??i2_TxPacket+3)& (0+255),f,b
 39014  0074B4  0100               	movlb	0	; () banked
 39015  0074B6  51BA               	movf	i2TxPacket@t2& (0+255),w,b
 39016  0074B8  0100               	movlb	0	; () banked
 39017  0074BA  25AE               	addwf	??i2_TxPacket& (0+255),w,b
 39018  0074BC  0100               	movlb	0	; () banked
 39019  0074BE  6FB2               	movwf	(??i2_TxPacket+4)& (0+255),b
 39020  0074C0  0100               	movlb	0	; () banked
 39021  0074C2  51BB               	movf	(i2TxPacket@t2+1)& (0+255),w,b
 39022  0074C4  0100               	movlb	0	; () banked
 39023  0074C6  21AF               	addwfc	(??i2_TxPacket+1)& (0+255),w,b
 39024  0074C8  0100               	movlb	0	; () banked
 39025  0074CA  6FB3               	movwf	(??i2_TxPacket+5)& (0+255),b
 39026  0074CC  0100               	movlb	0	; () banked
 39027  0074CE  51BC               	movf	(i2TxPacket@t2+2)& (0+255),w,b
 39028  0074D0  0100               	movlb	0	; () banked
 39029  0074D2  21B0               	addwfc	(??i2_TxPacket+2)& (0+255),w,b
 39030  0074D4  0100               	movlb	0	; () banked
 39031  0074D6  6FB4               	movwf	(??i2_TxPacket+6)& (0+255),b
 39032  0074D8  0100               	movlb	0	; () banked
 39033  0074DA  51BD               	movf	(i2TxPacket@t2+3)& (0+255),w,b
 39034  0074DC  0100               	movlb	0	; () banked
 39035  0074DE  21B1               	addwfc	(??i2_TxPacket+3)& (0+255),w,b
 39036  0074E0  0100               	movlb	0	; () banked
 39037  0074E2  6FB5               	movwf	(??i2_TxPacket+7)& (0+255),b
 39038  0074E4  0100               	movlb	0	; () banked
 39039  0074E6  51B5               	movf	(??i2_TxPacket+7)& (0+255),w,b
 39040  0074E8  0100               	movlb	0	; () banked
 39041  0074EA  11B4               	iorwf	(??i2_TxPacket+6)& (0+255),w,b
 39042  0074EC  E108               	bnz	i2l19569
 39043  0074EE  0EA9               	movlw	169
 39044  0074F0  0100               	movlb	0	; () banked
 39045  0074F2  5DB2               	subwf	(??i2_TxPacket+4)& (0+255),w,b
 39046  0074F4  0E61               	movlw	97
 39047  0074F6  0100               	movlb	0	; () banked
 39048  0074F8  59B3               	subwfb	(??i2_TxPacket+5)& (0+255),w,b
 39049  0074FA  A0D8               	btfss	status,0,c
 39050  0074FC  D7B7               	goto	i2l19559
 39051  0074FE                     i2l19569:
 39052                           
 39053                           ; BSR set to: 0
 39054                           ;drv_mrf_miwi_89xa.c: 381: }
 39055                           ;drv_mrf_miwi_89xa.c: 382: }
 39056                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 39057  0074FE  0100               	movlb	0	; () banked
 39058  007500  2BC1               	incf	i2TxPacket@allowedTxFailure& (0+255),f,b
 39059  007502  05C1               	decf	i2TxPacket@allowedTxFailure& (0+255),w,b
 39060  007504  0100               	movlb	0	; () banked
 39061  007506  6FAE               	movwf	??i2_TxPacket& (0+255),b
 39062  007508  0E04               	movlw	4
 39063  00750A  0100               	movlb	0	; () banked
 39064  00750C  61AE               	cpfslt	??i2_TxPacket& (0+255),b
 39065  00750E  D005               	goto	i2l19575
 39066  007510  D73F               	goto	i2l262
 39067  007512                     i2l19573:
 39068                           
 39069                           ;drv_mrf_miwi_89xa.c: 388: else
 39070                           ;drv_mrf_miwi_89xa.c: 390: {
 39071                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 39072  007512  0E01               	movlw	1
 39073  007514  0100               	movlb	0	; () banked
 39074  007516  6FBE               	movwf	i2TxPacket@status& (0+255),b
 39075                           
 39076                           ;drv_mrf_miwi_89xa.c: 392: goto TX_END_HERE;
 39077  007518  0012               	return	
 39078  00751A                     i2l19575:
 39079                           
 39080                           ; BSR set to: 0
 39081  00751A  0100               	movlb	0	; () banked
 39082  00751C  07C0               	decf	i2TxPacket@reTry& (0+255),f,b
 39083  00751E  0100               	movlb	0	; () banked
 39084  007520  29C0               	incf	i2TxPacket@reTry& (0+255),w,b
 39085  007522  A4D8               	btfss	status,2,c
 39086  007524  D732               	goto	i2l19509
 39087                           
 39088                           ; BSR set to: 0
 39089                           ;drv_mrf_miwi_89xa.c: 393: }
 39090                           ;drv_mrf_miwi_89xa.c: 394: }
 39091                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 39092                           
 39093                           ; BSR set to: 0
 39094  007526  0E00               	movlw	0
 39095  007528  0100               	movlb	0	; () banked
 39096  00752A  6FBE               	movwf	i2TxPacket@status& (0+255),b
 39097                           
 39098                           ; BSR set to: 0
 39099                           
 39100                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 39101  00752C  0012               	return	
 39102  00752E                     __end_ofi2_TxPacket:
 39103                           	opt stack 0
 39104                           pclatu	equ	0xFFB
 39105                           pclath	equ	0xFFA
 39106                           tblptru	equ	0xFF8
 39107                           tblptrh	equ	0xFF7
 39108                           tblptrl	equ	0xFF6
 39109                           tablat	equ	0xFF5
 39110                           prodh	equ	0xFF4
 39111                           prodl	equ	0xFF3
 39112                           intcon	equ	0xFF2
 39113                           intcon2	equ	0xFF1
 39114                           intcon3	equ	0xFF0
 39115                           indf0	equ	0xFEF
 39116                           postinc0	equ	0xFEE
 39117                           plusw0	equ	0xFEB
 39118                           fsr0h	equ	0xFEA
 39119                           fsr0l	equ	0xFE9
 39120                           wreg	equ	0xFE8
 39121                           indf1	equ	0xFE7
 39122                           postinc1	equ	0xFE6
 39123                           postdec1	equ	0xFE5
 39124                           plusw1	equ	0xFE3
 39125                           fsr1h	equ	0xFE2
 39126                           fsr1l	equ	0xFE1
 39127                           bsr	equ	0xFE0
 39128                           indf2	equ	0xFDF
 39129                           postinc2	equ	0xFDE
 39130                           postdec2	equ	0xFDD
 39131                           plusw2	equ	0xFDB
 39132                           fsr2h	equ	0xFDA
 39133                           fsr2l	equ	0xFD9
 39134                           status	equ	0xFD8
 39135                           
 39136 ;; *************** function i2_WriteFIFO *****************
 39137 ;; Defined at:
 39138 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39139 ;; Parameters:    Size  Location     Type
 39140 ;;  Data            1    wreg     unsigned char 
 39141 ;; Auto vars:     Size  Location     Type
 39142 ;;  Data            1    2[BANK0 ] unsigned char 
 39143 ;;  WriteFIFO       1    4[BANK0 ] unsigned char 
 39144 ;;  WriteFIFO       1    3[BANK0 ] unsigned char 
 39145 ;; Return value:  Size  Location     Type
 39146 ;;		None               void
 39147 ;; Registers used:
 39148 ;;		wreg, status,2, cstack
 39149 ;; Tracked objects:
 39150 ;;		On entry : 0/0
 39151 ;;		On exit  : 0/0
 39152 ;;		Unchanged: 0/0
 39153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39155 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39158 ;;Total ram usage:        3 bytes
 39159 ;; Hardware stack levels used:    1
 39160 ;; Hardware stack levels required when called:    1
 39161 ;; This function calls:
 39162 ;;		i2_SPIPut
 39163 ;; This function is called by:
 39164 ;;		i2_TxPacket
 39165 ;; This function uses a non-reentrant model
 39166 ;;
 39167                           
 39168                           	psect	text120
 39169  00B764                     __ptext120:
 39170                           	opt stack 0
 39171  00B764                     i2_WriteFIFO:
 39172                           	opt stack 4
 39173                           
 39174                           ; BSR set to: 0
 39175                           ;incstack = 0
 39176                           ;i2WriteFIFO@Data stored from wreg
 39177  00B764  0100               	movlb	0	; () banked
 39178  00B766  6FA5               	movwf	i2WriteFIFO@Data& (0+255),b
 39179                           
 39180                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39181  00B768  0E00               	movlw	0
 39182  00B76A  B6F0               	btfsc	intcon3,3,c	;volatile
 39183  00B76C  0E01               	movlw	1
 39184  00B76E  0100               	movlb	0	; () banked
 39185  00B770  6FA6               	movwf	i2WriteFIFO@IRQ1select& (0+255),b
 39186                           
 39187                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 39188  00B772  0E00               	movlw	0
 39189  00B774  B8F2               	btfsc	intcon,4,c	;volatile
 39190  00B776  0E01               	movlw	1
 39191  00B778  0100               	movlb	0	; () banked
 39192  00B77A  6FA7               	movwf	i2WriteFIFO@IRQ0select& (0+255),b
 39193                           
 39194                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 39195  00B77C  98F2               	bcf	intcon,4,c	;volatile
 39196                           
 39197                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 39198  00B77E  96F0               	bcf	intcon3,3,c	;volatile
 39199                           
 39200                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 39201  00B780  9C8B               	bcf	3979,6,c	;volatile
 39202                           
 39203                           ; BSR set to: 0
 39204                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 39205  00B782  0100               	movlb	0	; () banked
 39206  00B784  51A5               	movf	i2WriteFIFO@Data& (0+255),w,b
 39207  00B786  EC9C  F05D         	call	i2_SPIPut
 39208                           
 39209                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 39210  00B78A  8C8B               	bsf	3979,6,c	;volatile
 39211                           
 39212                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 39213  00B78C  0100               	movlb	0	; () banked
 39214  00B78E  B1A6               	btfsc	i2WriteFIFO@IRQ1select& (0+255),0,b
 39215  00B790  D002               	bra	i2u1362_45
 39216  00B792  96F0               	bcf	intcon3,3,c	;volatile
 39217  00B794  D001               	bra	i2u1362_46
 39218  00B796                     i2u1362_45:
 39219  00B796  86F0               	bsf	intcon3,3,c	;volatile
 39220  00B798                     i2u1362_46:
 39221                           
 39222                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 39223  00B798  0100               	movlb	0	; () banked
 39224  00B79A  B1A7               	btfsc	i2WriteFIFO@IRQ0select& (0+255),0,b
 39225  00B79C  D002               	bra	i2u1363_45
 39226  00B79E  98F2               	bcf	intcon,4,c	;volatile
 39227  00B7A0  D001               	bra	i2u1363_46
 39228  00B7A2                     i2u1363_45:
 39229  00B7A2  88F2               	bsf	intcon,4,c	;volatile
 39230  00B7A4                     i2u1363_46:
 39231  00B7A4  0012               	return		;funcret
 39232  00B7A6                     __end_ofi2_WriteFIFO:
 39233                           	opt stack 0
 39234                           pclatu	equ	0xFFB
 39235                           pclath	equ	0xFFA
 39236                           tblptru	equ	0xFF8
 39237                           tblptrh	equ	0xFF7
 39238                           tblptrl	equ	0xFF6
 39239                           tablat	equ	0xFF5
 39240                           prodh	equ	0xFF4
 39241                           prodl	equ	0xFF3
 39242                           intcon	equ	0xFF2
 39243                           intcon2	equ	0xFF1
 39244                           intcon3	equ	0xFF0
 39245                           indf0	equ	0xFEF
 39246                           postinc0	equ	0xFEE
 39247                           plusw0	equ	0xFEB
 39248                           fsr0h	equ	0xFEA
 39249                           fsr0l	equ	0xFE9
 39250                           wreg	equ	0xFE8
 39251                           indf1	equ	0xFE7
 39252                           postinc1	equ	0xFE6
 39253                           postdec1	equ	0xFE5
 39254                           plusw1	equ	0xFE3
 39255                           fsr1h	equ	0xFE2
 39256                           fsr1l	equ	0xFE1
 39257                           bsr	equ	0xFE0
 39258                           indf2	equ	0xFDF
 39259                           postinc2	equ	0xFDE
 39260                           postdec2	equ	0xFDD
 39261                           plusw2	equ	0xFDB
 39262                           fsr2h	equ	0xFDA
 39263                           fsr2l	equ	0xFD9
 39264                           status	equ	0xFD8
 39265                           
 39266 ;; *************** function i2_SetRFMode *****************
 39267 ;; Defined at:
 39268 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39269 ;; Parameters:    Size  Location     Type
 39270 ;;  mode            1    wreg     unsigned char 
 39271 ;; Auto vars:     Size  Location     Type
 39272 ;;  mode            1    6[BANK0 ] unsigned char 
 39273 ;; Return value:  Size  Location     Type
 39274 ;;		None               void
 39275 ;; Registers used:
 39276 ;;		wreg, status,2, status,0, cstack
 39277 ;; Tracked objects:
 39278 ;;		On entry : 0/0
 39279 ;;		On exit  : 0/0
 39280 ;;		Unchanged: 0/0
 39281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39285 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39286 ;;Total ram usage:        1 bytes
 39287 ;; Hardware stack levels used:    1
 39288 ;; Hardware stack levels required when called:    2
 39289 ;; This function calls:
 39290 ;;		i2_RegisterSet
 39291 ;; This function is called by:
 39292 ;;		i2_TxPacket
 39293 ;; This function uses a non-reentrant model
 39294 ;;
 39295                           
 39296                           	psect	text121
 39297  00AC2E                     __ptext121:
 39298                           	opt stack 0
 39299  00AC2E                     i2_SetRFMode:
 39300                           	opt stack 3
 39301                           
 39302                           ;incstack = 0
 39303                           ;i2SetRFMode@mode stored from wreg
 39304  00AC2E  0100               	movlb	0	; () banked
 39305  00AC30  6FA9               	movwf	i2SetRFMode@mode& (0+255),b
 39306                           
 39307                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 39308  00AC32  D037               	goto	i2l12961
 39309  00AC34                     i2l12939:
 39310                           
 39311                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 39312  00AC34  0E00               	movlw	0
 39313  00AC36  0100               	movlb	0	; () banked
 39314  00AC38  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39315  00AC3A  0E96               	movlw	150
 39316  00AC3C  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39317  00AC3E  EC4C  F05B         	call	i2_RegisterSet	;wreg free
 39318                           
 39319                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 39320  00AC42  0E80               	movlw	128
 39321  00AC44  0100               	movlb	0	; () banked
 39322  00AC46  6F9B               	movwf	_RF_Mode& (0+255),b
 39323                           
 39324                           ;drv_mrf_miwi_89xa.c: 672: break;
 39325  00AC48  0012               	return	
 39326  00AC4A                     i2l12943:
 39327                           
 39328                           ; BSR set to: 0
 39329                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 39330  00AC4A  0E00               	movlw	0
 39331  00AC4C  0100               	movlb	0	; () banked
 39332  00AC4E  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39333  00AC50  0E76               	movlw	118
 39334  00AC52  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39335  00AC54  EC4C  F05B         	call	i2_RegisterSet	;wreg free
 39336                           
 39337                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 39338  00AC58  0E60               	movlw	96
 39339  00AC5A  0100               	movlb	0	; () banked
 39340  00AC5C  6F9B               	movwf	_RF_Mode& (0+255),b
 39341                           
 39342                           ;drv_mrf_miwi_89xa.c: 676: break;
 39343  00AC5E  0012               	return	
 39344  00AC60                     i2l12947:
 39345                           
 39346                           ; BSR set to: 0
 39347                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 39348  00AC60  0E00               	movlw	0
 39349  00AC62  0100               	movlb	0	; () banked
 39350  00AC64  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39351  00AC66  0E56               	movlw	86
 39352  00AC68  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39353  00AC6A  EC4C  F05B         	call	i2_RegisterSet	;wreg free
 39354                           
 39355                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 39356  00AC6E  0E40               	movlw	64
 39357  00AC70  0100               	movlb	0	; () banked
 39358  00AC72  6F9B               	movwf	_RF_Mode& (0+255),b
 39359                           
 39360                           ;drv_mrf_miwi_89xa.c: 680: break;
 39361  00AC74  0012               	return	
 39362  00AC76                     i2l12951:
 39363                           
 39364                           ; BSR set to: 0
 39365                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 39366  00AC76  0E00               	movlw	0
 39367  00AC78  0100               	movlb	0	; () banked
 39368  00AC7A  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39369  00AC7C  0E36               	movlw	54
 39370  00AC7E  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39371  00AC80  EC4C  F05B         	call	i2_RegisterSet	;wreg free
 39372                           
 39373                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 39374  00AC84  0E20               	movlw	32
 39375  00AC86  0100               	movlb	0	; () banked
 39376  00AC88  6F9B               	movwf	_RF_Mode& (0+255),b
 39377                           
 39378                           ;drv_mrf_miwi_89xa.c: 684: break;
 39379  00AC8A  0012               	return	
 39380  00AC8C                     i2l12955:
 39381                           
 39382                           ; BSR set to: 0
 39383                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 39384  00AC8C  0E00               	movlw	0
 39385  00AC8E  0100               	movlb	0	; () banked
 39386  00AC90  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39387  00AC92  0E16               	movlw	22
 39388  00AC94  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39389  00AC96  EC4C  F05B         	call	i2_RegisterSet	;wreg free
 39390                           
 39391                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 39392  00AC9A  0E00               	movlw	0
 39393  00AC9C  0100               	movlb	0	; () banked
 39394  00AC9E  6F9B               	movwf	_RF_Mode& (0+255),b
 39395                           
 39396                           ; BSR set to: 0
 39397                           ;drv_mrf_miwi_89xa.c: 689: }
 39398                           
 39399                           ;drv_mrf_miwi_89xa.c: 688: break;
 39400  00ACA0  0012               	return	
 39401  00ACA2                     i2l12961:
 39402  00ACA2  0100               	movlb	0	; () banked
 39403  00ACA4  51A9               	movf	i2SetRFMode@mode& (0+255),w,b
 39404                           
 39405                           ; Switch size 1, requested type "space"
 39406                           ; Number of cases is 5, Range of values is 0 to 128
 39407                           ; switch strategies available:
 39408                           ; Name         Instructions Cycles
 39409                           ; simple_byte           16     9 (average)
 39410                           ;	Chosen strategy is simple_byte
 39411  00ACA6  0A00               	xorlw	0	; case 0
 39412  00ACA8  B4D8               	btfsc	status,2,c
 39413  00ACAA  D7F0               	goto	i2l12955
 39414  00ACAC  0A20               	xorlw	32	; case 32
 39415  00ACAE  B4D8               	btfsc	status,2,c
 39416  00ACB0  D7E2               	goto	i2l12951
 39417  00ACB2  0A60               	xorlw	96	; case 64
 39418  00ACB4  B4D8               	btfsc	status,2,c
 39419  00ACB6  D7D4               	goto	i2l12947
 39420  00ACB8  0A20               	xorlw	32	; case 96
 39421  00ACBA  B4D8               	btfsc	status,2,c
 39422  00ACBC  D7C6               	goto	i2l12943
 39423  00ACBE  0AE0               	xorlw	224	; case 128
 39424  00ACC0  A4D8               	btfss	status,2,c
 39425  00ACC2  0012               	return	
 39426  00ACC4  D7B7               	goto	i2l12939
 39427  00ACC6                     __end_ofi2_SetRFMode:
 39428                           	opt stack 0
 39429                           pclatu	equ	0xFFB
 39430                           pclath	equ	0xFFA
 39431                           tblptru	equ	0xFF8
 39432                           tblptrh	equ	0xFF7
 39433                           tblptrl	equ	0xFF6
 39434                           tablat	equ	0xFF5
 39435                           prodh	equ	0xFF4
 39436                           prodl	equ	0xFF3
 39437                           intcon	equ	0xFF2
 39438                           intcon2	equ	0xFF1
 39439                           intcon3	equ	0xFF0
 39440                           indf0	equ	0xFEF
 39441                           postinc0	equ	0xFEE
 39442                           plusw0	equ	0xFEB
 39443                           fsr0h	equ	0xFEA
 39444                           fsr0l	equ	0xFE9
 39445                           wreg	equ	0xFE8
 39446                           indf1	equ	0xFE7
 39447                           postinc1	equ	0xFE6
 39448                           postdec1	equ	0xFE5
 39449                           plusw1	equ	0xFE3
 39450                           fsr1h	equ	0xFE2
 39451                           fsr1l	equ	0xFE1
 39452                           bsr	equ	0xFE0
 39453                           indf2	equ	0xFDF
 39454                           postinc2	equ	0xFDE
 39455                           postdec2	equ	0xFDD
 39456                           plusw2	equ	0xFDB
 39457                           fsr2h	equ	0xFDA
 39458                           fsr2l	equ	0xFD9
 39459                           status	equ	0xFD8
 39460                           
 39461 ;; *************** function i2_RegisterSet *****************
 39462 ;; Defined at:
 39463 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39464 ;; Parameters:    Size  Location     Type
 39465 ;;  setting         2    2[BANK0 ] unsigned int 
 39466 ;; Auto vars:     Size  Location     Type
 39467 ;;  RegisterSet     1    5[BANK0 ] unsigned char 
 39468 ;;  RegisterSet     1    4[BANK0 ] unsigned char 
 39469 ;; Return value:  Size  Location     Type
 39470 ;;		None               void
 39471 ;; Registers used:
 39472 ;;		wreg, status,2, cstack
 39473 ;; Tracked objects:
 39474 ;;		On entry : 0/0
 39475 ;;		On exit  : 0/0
 39476 ;;		Unchanged: 0/0
 39477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39479 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39481 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39482 ;;Total ram usage:        4 bytes
 39483 ;; Hardware stack levels used:    1
 39484 ;; Hardware stack levels required when called:    1
 39485 ;; This function calls:
 39486 ;;		i2_SPIPut
 39487 ;; This function is called by:
 39488 ;;		i2_TxPacket
 39489 ;;		i2_SetRFMode
 39490 ;; This function uses a non-reentrant model
 39491 ;;
 39492                           
 39493                           	psect	text122
 39494  00B698                     __ptext122:
 39495                           	opt stack 0
 39496  00B698                     i2_RegisterSet:
 39497                           	opt stack 3
 39498                           
 39499                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39500                           
 39501                           ; BSR set to: 0
 39502                           ;incstack = 0
 39503  00B698  0E00               	movlw	0
 39504  00B69A  B6F0               	btfsc	intcon3,3,c	;volatile
 39505  00B69C  0E01               	movlw	1
 39506  00B69E  0100               	movlb	0	; () banked
 39507  00B6A0  6FA7               	movwf	i2RegisterSet@IRQ1select& (0+255),b
 39508                           
 39509                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 39510  00B6A2  0E00               	movlw	0
 39511  00B6A4  B8F2               	btfsc	intcon,4,c	;volatile
 39512  00B6A6  0E01               	movlw	1
 39513  00B6A8  0100               	movlb	0	; () banked
 39514  00B6AA  6FA8               	movwf	i2RegisterSet@IRQ0select& (0+255),b
 39515                           
 39516                           ; BSR set to: 0
 39517                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 39518  00B6AC  98F2               	bcf	intcon,4,c	;volatile
 39519                           
 39520                           ; BSR set to: 0
 39521                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 39522  00B6AE  96F0               	bcf	intcon3,3,c	;volatile
 39523                           
 39524                           ; BSR set to: 0
 39525                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 39526  00B6B0  968A               	bcf	3978,3,c	;volatile
 39527                           
 39528                           ; BSR set to: 0
 39529                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 39530  00B6B2  0100               	movlb	0	; () banked
 39531  00B6B4  51A6               	movf	(i2RegisterSet@setting+1)& (0+255),w,b
 39532  00B6B6  EC9C  F05D         	call	i2_SPIPut
 39533                           
 39534                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 39535  00B6BA  0100               	movlb	0	; () banked
 39536  00B6BC  51A5               	movf	i2RegisterSet@setting& (0+255),w,b
 39537  00B6BE  EC9C  F05D         	call	i2_SPIPut
 39538                           
 39539                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 39540  00B6C2  868A               	bsf	3978,3,c	;volatile
 39541                           
 39542                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 39543  00B6C4  0100               	movlb	0	; () banked
 39544  00B6C6  B1A7               	btfsc	i2RegisterSet@IRQ1select& (0+255),0,b
 39545  00B6C8  D002               	bra	i2u1160_45
 39546  00B6CA  96F0               	bcf	intcon3,3,c	;volatile
 39547  00B6CC  D001               	bra	i2u1160_46
 39548  00B6CE                     i2u1160_45:
 39549  00B6CE  86F0               	bsf	intcon3,3,c	;volatile
 39550  00B6D0                     i2u1160_46:
 39551                           
 39552                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 39553  00B6D0  0100               	movlb	0	; () banked
 39554  00B6D2  B1A8               	btfsc	i2RegisterSet@IRQ0select& (0+255),0,b
 39555  00B6D4  D002               	bra	i2u1161_45
 39556  00B6D6  98F2               	bcf	intcon,4,c	;volatile
 39557  00B6D8  D001               	bra	i2u1161_46
 39558  00B6DA                     i2u1161_45:
 39559  00B6DA  88F2               	bsf	intcon,4,c	;volatile
 39560  00B6DC                     i2u1161_46:
 39561  00B6DC  0012               	return		;funcret
 39562  00B6DE                     __end_ofi2_RegisterSet:
 39563                           	opt stack 0
 39564                           pclatu	equ	0xFFB
 39565                           pclath	equ	0xFFA
 39566                           tblptru	equ	0xFF8
 39567                           tblptrh	equ	0xFF7
 39568                           tblptrl	equ	0xFF6
 39569                           tablat	equ	0xFF5
 39570                           prodh	equ	0xFF4
 39571                           prodl	equ	0xFF3
 39572                           intcon	equ	0xFF2
 39573                           intcon2	equ	0xFF1
 39574                           intcon3	equ	0xFF0
 39575                           indf0	equ	0xFEF
 39576                           postinc0	equ	0xFEE
 39577                           plusw0	equ	0xFEB
 39578                           fsr0h	equ	0xFEA
 39579                           fsr0l	equ	0xFE9
 39580                           wreg	equ	0xFE8
 39581                           indf1	equ	0xFE7
 39582                           postinc1	equ	0xFE6
 39583                           postdec1	equ	0xFE5
 39584                           plusw1	equ	0xFE3
 39585                           fsr1h	equ	0xFE2
 39586                           fsr1l	equ	0xFE1
 39587                           bsr	equ	0xFE0
 39588                           indf2	equ	0xFDF
 39589                           postinc2	equ	0xFDE
 39590                           postdec2	equ	0xFDD
 39591                           plusw2	equ	0xFDB
 39592                           fsr2h	equ	0xFDA
 39593                           fsr2l	equ	0xFD9
 39594                           status	equ	0xFD8
 39595                           
 39596 ;; *************** function i2_RegisterRead *****************
 39597 ;; Defined at:
 39598 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39599 ;; Parameters:    Size  Location     Type
 39600 ;;  address         1    wreg     unsigned char 
 39601 ;; Auto vars:     Size  Location     Type
 39602 ;;  address         1    5[BANK0 ] unsigned char 
 39603 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 39604 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 39605 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 39606 ;; Return value:  Size  Location     Type
 39607 ;;                  1    wreg      unsigned char 
 39608 ;; Registers used:
 39609 ;;		wreg, status,2, status,0, cstack
 39610 ;; Tracked objects:
 39611 ;;		On entry : 0/0
 39612 ;;		On exit  : 0/0
 39613 ;;		Unchanged: 0/0
 39614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39619 ;;Total ram usage:        4 bytes
 39620 ;; Hardware stack levels used:    1
 39621 ;; Hardware stack levels required when called:    2
 39622 ;; This function calls:
 39623 ;;		i2_SPIGet
 39624 ;;		i2_SPIPut
 39625 ;; This function is called by:
 39626 ;;		_MIWIInterruptHandler
 39627 ;;		i2_TxPacket
 39628 ;; This function uses a non-reentrant model
 39629 ;;
 39630                           
 39631                           	psect	text123
 39632  00B562                     __ptext123:
 39633                           	opt stack 0
 39634  00B562                     i2_RegisterRead:
 39635                           	opt stack 3
 39636                           
 39637                           ;incstack = 0
 39638                           ;i2RegisterRead@address stored from wreg
 39639  00B562  0100               	movlb	0	; () banked
 39640  00B564  6FA8               	movwf	i2RegisterRead@address& (0+255),b
 39641                           
 39642                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 39643                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39644  00B566  0E00               	movlw	0
 39645  00B568  B6F0               	btfsc	intcon3,3,c	;volatile
 39646  00B56A  0E01               	movlw	1
 39647  00B56C  0100               	movlb	0	; () banked
 39648  00B56E  6FA6               	movwf	i2RegisterRead@IRQ1select& (0+255),b
 39649                           
 39650                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 39651  00B570  0E00               	movlw	0
 39652  00B572  B8F2               	btfsc	intcon,4,c	;volatile
 39653  00B574  0E01               	movlw	1
 39654  00B576  0100               	movlb	0	; () banked
 39655  00B578  6FA7               	movwf	i2RegisterRead@IRQ0select& (0+255),b
 39656                           
 39657                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 39658  00B57A  98F2               	bcf	intcon,4,c	;volatile
 39659                           
 39660                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 39661  00B57C  96F0               	bcf	intcon3,3,c	;volatile
 39662                           
 39663                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 39664  00B57E  968A               	bcf	3978,3,c	;volatile
 39665                           
 39666                           ; BSR set to: 0
 39667                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 39668  00B580  0100               	movlb	0	; () banked
 39669  00B582  51A8               	movf	i2RegisterRead@address& (0+255),w,b
 39670  00B584  0940               	iorlw	64
 39671  00B586  0100               	movlb	0	; () banked
 39672  00B588  6FA8               	movwf	i2RegisterRead@address& (0+255),b
 39673                           
 39674                           ; BSR set to: 0
 39675                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 39676  00B58A  0100               	movlb	0	; () banked
 39677  00B58C  51A8               	movf	i2RegisterRead@address& (0+255),w,b
 39678  00B58E  EC9C  F05D         	call	i2_SPIPut
 39679                           
 39680                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 39681  00B592  ECDF  F05D         	call	i2_SPIGet	;wreg free
 39682  00B596  0100               	movlb	0	; () banked
 39683  00B598  6FA5               	movwf	i2RegisterRead@value& (0+255),b
 39684                           
 39685                           ; BSR set to: 0
 39686                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 39687  00B59A  868A               	bsf	3978,3,c	;volatile
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 39691  00B59C  0100               	movlb	0	; () banked
 39692  00B59E  B1A6               	btfsc	i2RegisterRead@IRQ1select& (0+255),0,b
 39693  00B5A0  D002               	bra	i2u1360_45
 39694  00B5A2  96F0               	bcf	intcon3,3,c	;volatile
 39695  00B5A4  D001               	bra	i2u1360_46
 39696  00B5A6                     i2u1360_45:
 39697  00B5A6  86F0               	bsf	intcon3,3,c	;volatile
 39698  00B5A8                     i2u1360_46:
 39699                           
 39700                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 39701  00B5A8  0100               	movlb	0	; () banked
 39702  00B5AA  B1A7               	btfsc	i2RegisterRead@IRQ0select& (0+255),0,b
 39703  00B5AC  D002               	bra	i2u1361_45
 39704  00B5AE  98F2               	bcf	intcon,4,c	;volatile
 39705  00B5B0  D001               	bra	i2u1361_46
 39706  00B5B2                     i2u1361_45:
 39707  00B5B2  88F2               	bsf	intcon,4,c	;volatile
 39708  00B5B4                     i2u1361_46:
 39709                           
 39710                           ;drv_mrf_miwi_89xa.c: 222: return value;
 39711  00B5B4  0100               	movlb	0	; () banked
 39712  00B5B6  51A5               	movf	i2RegisterRead@value& (0+255),w,b
 39713  00B5B8  0012               	return	
 39714  00B5BA                     __end_ofi2_RegisterRead:
 39715                           	opt stack 0
 39716                           pclatu	equ	0xFFB
 39717                           pclath	equ	0xFFA
 39718                           tblptru	equ	0xFF8
 39719                           tblptrh	equ	0xFF7
 39720                           tblptrl	equ	0xFF6
 39721                           tablat	equ	0xFF5
 39722                           prodh	equ	0xFF4
 39723                           prodl	equ	0xFF3
 39724                           intcon	equ	0xFF2
 39725                           intcon2	equ	0xFF1
 39726                           intcon3	equ	0xFF0
 39727                           indf0	equ	0xFEF
 39728                           postinc0	equ	0xFEE
 39729                           plusw0	equ	0xFEB
 39730                           fsr0h	equ	0xFEA
 39731                           fsr0l	equ	0xFE9
 39732                           wreg	equ	0xFE8
 39733                           indf1	equ	0xFE7
 39734                           postinc1	equ	0xFE6
 39735                           postdec1	equ	0xFE5
 39736                           plusw1	equ	0xFE3
 39737                           fsr1h	equ	0xFE2
 39738                           fsr1l	equ	0xFE1
 39739                           bsr	equ	0xFE0
 39740                           indf2	equ	0xFDF
 39741                           postinc2	equ	0xFDE
 39742                           postdec2	equ	0xFDD
 39743                           plusw2	equ	0xFDB
 39744                           fsr2h	equ	0xFDA
 39745                           fsr2l	equ	0xFD9
 39746                           status	equ	0xFD8
 39747                           
 39748 ;; *************** function i2_SPIGet *****************
 39749 ;; Defined at:
 39750 ;;		line 104 in file "src/18F27J53/spi.c"
 39751 ;; Parameters:    Size  Location     Type
 39752 ;;		None
 39753 ;; Auto vars:     Size  Location     Type
 39754 ;;		None
 39755 ;; Return value:  Size  Location     Type
 39756 ;;                  1    wreg      unsigned char 
 39757 ;; Registers used:
 39758 ;;		wreg, status,2, cstack
 39759 ;; Tracked objects:
 39760 ;;		On entry : 0/0
 39761 ;;		On exit  : 0/0
 39762 ;;		Unchanged: 0/0
 39763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39768 ;;Total ram usage:        0 bytes
 39769 ;; Hardware stack levels used:    1
 39770 ;; Hardware stack levels required when called:    1
 39771 ;; This function calls:
 39772 ;;		i2_SPIPut
 39773 ;; This function is called by:
 39774 ;;		_MIWIInterruptHandler
 39775 ;;		i2_RegisterRead
 39776 ;; This function uses a non-reentrant model
 39777 ;;
 39778                           
 39779                           	psect	text124
 39780  00BBBE                     __ptext124:
 39781                           	opt stack 0
 39782  00BBBE                     i2_SPIGet:
 39783                           	opt stack 3
 39784                           
 39785                           ;spi.c: 128: SPIPut(0x00);
 39786                           
 39787                           ; BSR set to: 0
 39788                           ;incstack = 0
 39789  00BBBE  0E00               	movlw	0
 39790  00BBC0  EC9C  F05D         	call	i2_SPIPut
 39791                           
 39792                           ;spi.c: 129: return SSP2BUF;
 39793  00BBC4  5075               	movf	3957,w,c	;volatile
 39794  00BBC6  0012               	return	
 39795  00BBC8                     __end_ofi2_SPIGet:
 39796                           	opt stack 0
 39797                           pclatu	equ	0xFFB
 39798                           pclath	equ	0xFFA
 39799                           tblptru	equ	0xFF8
 39800                           tblptrh	equ	0xFF7
 39801                           tblptrl	equ	0xFF6
 39802                           tablat	equ	0xFF5
 39803                           prodh	equ	0xFF4
 39804                           prodl	equ	0xFF3
 39805                           intcon	equ	0xFF2
 39806                           intcon2	equ	0xFF1
 39807                           intcon3	equ	0xFF0
 39808                           indf0	equ	0xFEF
 39809                           postinc0	equ	0xFEE
 39810                           plusw0	equ	0xFEB
 39811                           fsr0h	equ	0xFEA
 39812                           fsr0l	equ	0xFE9
 39813                           wreg	equ	0xFE8
 39814                           indf1	equ	0xFE7
 39815                           postinc1	equ	0xFE6
 39816                           postdec1	equ	0xFE5
 39817                           plusw1	equ	0xFE3
 39818                           fsr1h	equ	0xFE2
 39819                           fsr1l	equ	0xFE1
 39820                           bsr	equ	0xFE0
 39821                           indf2	equ	0xFDF
 39822                           postinc2	equ	0xFDE
 39823                           postdec2	equ	0xFDD
 39824                           plusw2	equ	0xFDB
 39825                           fsr2h	equ	0xFDA
 39826                           fsr2l	equ	0xFD9
 39827                           status	equ	0xFD8
 39828                           
 39829 ;; *************** function i2_SPIPut *****************
 39830 ;; Defined at:
 39831 ;;		line 45 in file "src/18F27J53/spi.c"
 39832 ;; Parameters:    Size  Location     Type
 39833 ;;  v               1    wreg     unsigned char 
 39834 ;; Auto vars:     Size  Location     Type
 39835 ;;  v               1    1[BANK0 ] unsigned char 
 39836 ;;  SPIPut          1    0[BANK0 ] unsigned char 
 39837 ;; Return value:  Size  Location     Type
 39838 ;;		None               void
 39839 ;; Registers used:
 39840 ;;		wreg
 39841 ;; Tracked objects:
 39842 ;;		On entry : 0/0
 39843 ;;		On exit  : 0/0
 39844 ;;		Unchanged: 0/0
 39845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39847 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39849 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39850 ;;Total ram usage:        2 bytes
 39851 ;; Hardware stack levels used:    1
 39852 ;; This function calls:
 39853 ;;		Nothing
 39854 ;; This function is called by:
 39855 ;;		i2_SPIGet
 39856 ;;		i2_RegisterSet
 39857 ;;		i2_RegisterRead
 39858 ;;		i2_WriteFIFO
 39859 ;; This function uses a non-reentrant model
 39860 ;;
 39861                           
 39862                           	psect	text125
 39863  00BB38                     __ptext125:
 39864                           	opt stack 0
 39865  00BB38                     i2_SPIPut:
 39866                           	opt stack 4
 39867                           
 39868                           ;incstack = 0
 39869                           ;i2SPIPut@v stored from wreg
 39870  00BB38  0100               	movlb	0	; () banked
 39871  00BB3A  6FA4               	movwf	i2SPIPut@v& (0+255),b
 39872                           
 39873                           ;spi.c: 66: {
 39874                           ;spi.c: 68: uint8_t i;
 39875                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 39876  00BB3C  9EA4               	bcf	4004,7,c	;volatile
 39877                           
 39878                           ;spi.c: 72: i = SSP2BUF;
 39879  00BB3E  CF75 F0A3          	movff	3957,i2SPIPut@i	;volatile
 39880  00BB42                     i2l29:
 39881                           
 39882                           ;spi.c: 75: {
 39883                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 39884  00BB42  9E72               	bcf	3954,7,c	;volatile
 39885                           
 39886                           ;spi.c: 77: SSP2BUF = v;
 39887  00BB44  C0A4  FF75         	movff	i2SPIPut@v,3957	;volatile
 39888                           
 39889                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 39890  00BB48  BE72               	btfsc	3954,7,c	;volatile
 39891  00BB4A  D7FB               	goto	i2l29
 39892  00BB4C                     i2l31:
 39893  00BB4C  AEA4               	btfss	4004,7,c	;volatile
 39894  00BB4E  D7FE               	goto	i2l31
 39895                           
 39896                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 39897  00BB50  9EA4               	bcf	4004,7,c	;volatile
 39898  00BB52  0012               	return		;funcret
 39899  00BB54                     __end_ofi2_SPIPut:
 39900                           	opt stack 0
 39901                           pclatu	equ	0xFFB
 39902                           pclath	equ	0xFFA
 39903                           tblptru	equ	0xFF8
 39904                           tblptrh	equ	0xFF7
 39905                           tblptrl	equ	0xFF6
 39906                           tablat	equ	0xFF5
 39907                           prodh	equ	0xFF4
 39908                           prodl	equ	0xFF3
 39909                           intcon	equ	0xFF2
 39910                           intcon2	equ	0xFF1
 39911                           intcon3	equ	0xFF0
 39912                           indf0	equ	0xFEF
 39913                           postinc0	equ	0xFEE
 39914                           plusw0	equ	0xFEB
 39915                           fsr0h	equ	0xFEA
 39916                           fsr0l	equ	0xFE9
 39917                           wreg	equ	0xFE8
 39918                           indf1	equ	0xFE7
 39919                           postinc1	equ	0xFE6
 39920                           postdec1	equ	0xFE5
 39921                           plusw1	equ	0xFE3
 39922                           fsr1h	equ	0xFE2
 39923                           fsr1l	equ	0xFE1
 39924                           bsr	equ	0xFE0
 39925                           indf2	equ	0xFDF
 39926                           postinc2	equ	0xFDE
 39927                           postdec2	equ	0xFDD
 39928                           plusw2	equ	0xFDB
 39929                           fsr2h	equ	0xFDA
 39930                           fsr2l	equ	0xFD9
 39931                           status	equ	0xFD8
 39932                           
 39933 ;; *************** function i2_MiWi_TickGet *****************
 39934 ;; Defined at:
 39935 ;;		line 105 in file "src/18F27J53/symbol.c"
 39936 ;; Parameters:    Size  Location     Type
 39937 ;;		None
 39938 ;; Auto vars:     Size  Location     Type
 39939 ;;  MiWi_TickGet    4    6[BANK0 ] struct _MIWI_TICK
 39940 ;;  MiWi_TickGet    1    5[BANK0 ] unsigned char 
 39941 ;; Return value:  Size  Location     Type
 39942 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 39943 ;; Registers used:
 39944 ;;		wreg, status,2, status,0
 39945 ;; Tracked objects:
 39946 ;;		On entry : 0/0
 39947 ;;		On exit  : 0/0
 39948 ;;		Unchanged: 0/0
 39949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39951 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39953 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39954 ;;Total ram usage:       10 bytes
 39955 ;; Hardware stack levels used:    1
 39956 ;; This function calls:
 39957 ;;		Nothing
 39958 ;; This function is called by:
 39959 ;;		_MIWIInterruptHandler
 39960 ;;		i2_TxPacket
 39961 ;; This function uses a non-reentrant model
 39962 ;;
 39963                           
 39964                           	psect	text126
 39965  00B174                     __ptext126:
 39966                           	opt stack 0
 39967  00B174                     i2_MiWi_TickGet:
 39968                           	opt stack 5
 39969                           
 39970                           ;symbol.c: 107: MIWI_TICK currentTime;
 39971                           ;symbol.c: 110: uint8_t failureCounter;
 39972                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 39973                           
 39974                           ;incstack = 0
 39975  00B174  909D               	bcf	3997,0,c	;volatile
 39976                           
 39977                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 39978  00B176  0E00               	movlw	0
 39979  00B178  0100               	movlb	0	; () banked
 39980  00B17A  6FAB               	movwf	(i2MiWi_TickGet@currentTime+2)& (0+255),b
 39981                           
 39982                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 39983  00B17C  0E00               	movlw	0
 39984  00B17E  0100               	movlb	0	; () banked
 39985  00B180  6FAC               	movwf	(i2MiWi_TickGet@currentTime+3)& (0+255),b
 39986                           
 39987                           ;symbol.c: 119: failureCounter = 0;
 39988  00B182  0E00               	movlw	0
 39989  00B184  0100               	movlb	0	; () banked
 39990  00B186  6FA8               	movwf	i2MiWi_TickGet@failureCounter& (0+255),b
 39991  00B188                     i2l18989:
 39992                           
 39993                           ; BSR set to: 0
 39994                           ;symbol.c: 122: {
 39995                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 39996  00B188  CFCE F0A9          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 39997                           
 39998                           ; BSR set to: 0
 39999                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 40000  00B18C  CFCF F0AA          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 40001                           
 40002                           ; BSR set to: 0
 40003                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 40004  00B190  0100               	movlb	0	; () banked
 40005  00B192  29A9               	incf	i2MiWi_TickGet@currentTime& (0+255),w,b
 40006  00B194  E10D               	bnz	i2l62
 40007  00B196  0100               	movlb	0	; () banked
 40008  00B198  29AA               	incf	(i2MiWi_TickGet@currentTime+1)& (0+255),w,b
 40009  00B19A  A4D8               	btfss	status,2,c
 40010  00B19C  D009               	goto	i2l62
 40011                           
 40012                           ; BSR set to: 0
 40013  00B19E  0100               	movlb	0	; () banked
 40014  00B1A0  2BA8               	incf	i2MiWi_TickGet@failureCounter& (0+255),f,b
 40015  00B1A2  05A8               	decf	i2MiWi_TickGet@failureCounter& (0+255),w,b
 40016  00B1A4  0100               	movlb	0	; () banked
 40017  00B1A6  6FA7               	movwf	??i2_MiWi_TickGet& (0+255),b
 40018  00B1A8  0E02               	movlw	2
 40019  00B1AA  0100               	movlb	0	; () banked
 40020  00B1AC  65A7               	cpfsgt	??i2_MiWi_TickGet& (0+255),b
 40021  00B1AE  D7EC               	goto	i2l18989
 40022  00B1B0                     i2l62:
 40023                           
 40024                           ; BSR set to: 0
 40025                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 40026  00B1B0  A09E               	btfss	3998,0,c	;volatile
 40027  00B1B2  D008               	goto	i2l19003
 40028                           
 40029                           ; BSR set to: 0
 40030                           ;symbol.c: 130: {
 40031                           ;symbol.c: 132: {
 40032                           ;symbol.c: 135: currentTime.byte.b2++;
 40033  00B1B4  0100               	movlb	0	; () banked
 40034  00B1B6  2BAB               	incf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 40035                           
 40036                           ; BSR set to: 0
 40037                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 40038  00B1B8  0100               	movlb	0	; () banked
 40039  00B1BA  29A1               	incf	_timerExtension1& (0+255),w,b	;volatile
 40040  00B1BC  A4D8               	btfss	status,2,c
 40041  00B1BE  D002               	goto	i2l19003
 40042                           
 40043                           ; BSR set to: 0
 40044                           ;symbol.c: 137: {
 40045                           ;symbol.c: 138: currentTime.byte.b3++;
 40046  00B1C0  0100               	movlb	0	; () banked
 40047  00B1C2  2BAC               	incf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 40048  00B1C4                     i2l19003:
 40049                           
 40050                           ; BSR set to: 0
 40051                           ;symbol.c: 139: }
 40052                           ;symbol.c: 140: }
 40053                           ;symbol.c: 141: }
 40054                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 40055  00B1C4  0100               	movlb	0	; () banked
 40056  00B1C6  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 40057  00B1C8  0100               	movlb	0	; () banked
 40058  00B1CA  27AB               	addwf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 40059                           
 40060                           ; BSR set to: 0
 40061                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 40062  00B1CC  0100               	movlb	0	; () banked
 40063  00B1CE  51A2               	movf	_timerExtension2& (0+255),w,b	;volatile
 40064  00B1D0  0100               	movlb	0	; () banked
 40065  00B1D2  27AC               	addwf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 40066                           
 40067                           ; BSR set to: 0
 40068                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 40069  00B1D4  809D               	bsf	3997,0,c	;volatile
 40070                           
 40071                           ; BSR set to: 0
 40072                           ;symbol.c: 150: return currentTime;
 40073  00B1D6  C0A9  F0A3         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 40074  00B1DA  C0AA  F0A4         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 40075  00B1DE  C0AB  F0A5         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 40076  00B1E2  C0AC  F0A6         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 40077  00B1E6  0012               	return	
 40078  00B1E8                     __end_ofi2_MiWi_TickGet:
 40079                           	opt stack 0
 40080                           pclatu	equ	0xFFB
 40081                           pclath	equ	0xFFA
 40082                           tblptru	equ	0xFF8
 40083                           tblptrh	equ	0xFF7
 40084                           tblptrl	equ	0xFF6
 40085                           tablat	equ	0xFF5
 40086                           prodh	equ	0xFF4
 40087                           prodl	equ	0xFF3
 40088                           intcon	equ	0xFF2
 40089                           intcon2	equ	0xFF1
 40090                           intcon3	equ	0xFF0
 40091                           indf0	equ	0xFEF
 40092                           postinc0	equ	0xFEE
 40093                           plusw0	equ	0xFEB
 40094                           fsr0h	equ	0xFEA
 40095                           fsr0l	equ	0xFE9
 40096                           wreg	equ	0xFE8
 40097                           indf1	equ	0xFE7
 40098                           postinc1	equ	0xFE6
 40099                           postdec1	equ	0xFE5
 40100                           plusw1	equ	0xFE3
 40101                           fsr1h	equ	0xFE2
 40102                           fsr1l	equ	0xFE1
 40103                           bsr	equ	0xFE0
 40104                           indf2	equ	0xFDF
 40105                           postinc2	equ	0xFDE
 40106                           postdec2	equ	0xFDD
 40107                           plusw2	equ	0xFDB
 40108                           fsr2h	equ	0xFDA
 40109                           fsr2l	equ	0xFD9
 40110                           status	equ	0xFD8
 40111                           pclatu	equ	0xFFB
 40112                           pclath	equ	0xFFA
 40113                           tblptru	equ	0xFF8
 40114                           tblptrh	equ	0xFF7
 40115                           tblptrl	equ	0xFF6
 40116                           tablat	equ	0xFF5
 40117                           prodh	equ	0xFF4
 40118                           prodl	equ	0xFF3
 40119                           intcon	equ	0xFF2
 40120                           intcon2	equ	0xFF1
 40121                           intcon3	equ	0xFF0
 40122                           indf0	equ	0xFEF
 40123                           postinc0	equ	0xFEE
 40124                           plusw0	equ	0xFEB
 40125                           fsr0h	equ	0xFEA
 40126                           fsr0l	equ	0xFE9
 40127                           wreg	equ	0xFE8
 40128                           indf1	equ	0xFE7
 40129                           postinc1	equ	0xFE6
 40130                           postdec1	equ	0xFE5
 40131                           plusw1	equ	0xFE3
 40132                           fsr1h	equ	0xFE2
 40133                           fsr1l	equ	0xFE1
 40134                           bsr	equ	0xFE0
 40135                           indf2	equ	0xFDF
 40136                           postinc2	equ	0xFDE
 40137                           postdec2	equ	0xFDD
 40138                           plusw2	equ	0xFDB
 40139                           fsr2h	equ	0xFDA
 40140                           fsr2l	equ	0xFD9
 40141                           status	equ	0xFD8
 40142                           
 40143                           	psect	param0
 40144  0000                     pclatu	equ	0xFFB
 40145                           pclath	equ	0xFFA
 40146                           tblptru	equ	0xFF8
 40147                           tblptrh	equ	0xFF7
 40148                           tblptrl	equ	0xFF6
 40149                           tablat	equ	0xFF5
 40150                           prodh	equ	0xFF4
 40151                           prodl	equ	0xFF3
 40152                           intcon	equ	0xFF2
 40153                           intcon2	equ	0xFF1
 40154                           intcon3	equ	0xFF0
 40155                           indf0	equ	0xFEF
 40156                           postinc0	equ	0xFEE
 40157                           plusw0	equ	0xFEB
 40158                           fsr0h	equ	0xFEA
 40159                           fsr0l	equ	0xFE9
 40160                           wreg	equ	0xFE8
 40161                           indf1	equ	0xFE7
 40162                           postinc1	equ	0xFE6
 40163                           postdec1	equ	0xFE5
 40164                           plusw1	equ	0xFE3
 40165                           fsr1h	equ	0xFE2
 40166                           fsr1l	equ	0xFE1
 40167                           bsr	equ	0xFE0
 40168                           indf2	equ	0xFDF
 40169                           postinc2	equ	0xFDE
 40170                           postdec2	equ	0xFDD
 40171                           plusw2	equ	0xFDB
 40172                           fsr2h	equ	0xFDA
 40173                           fsr2l	equ	0xFD9
 40174                           status	equ	0xFD8
 40175                           
 40176                           	psect	temp
 40177  00005E                     btemp:
 40178                           	opt stack 0
 40179  00005E                     	ds	1
 40180  0000                     int$flags	set	btemp
 40181                           pclatu	equ	0xFFB
 40182                           pclath	equ	0xFFA
 40183                           tblptru	equ	0xFF8
 40184                           tblptrh	equ	0xFF7
 40185                           tblptrl	equ	0xFF6
 40186                           tablat	equ	0xFF5
 40187                           prodh	equ	0xFF4
 40188                           prodl	equ	0xFF3
 40189                           intcon	equ	0xFF2
 40190                           intcon2	equ	0xFF1
 40191                           intcon3	equ	0xFF0
 40192                           indf0	equ	0xFEF
 40193                           postinc0	equ	0xFEE
 40194                           plusw0	equ	0xFEB
 40195                           fsr0h	equ	0xFEA
 40196                           fsr0l	equ	0xFE9
 40197                           wreg	equ	0xFE8
 40198                           indf1	equ	0xFE7
 40199                           postinc1	equ	0xFE6
 40200                           postdec1	equ	0xFE5
 40201                           plusw1	equ	0xFE3
 40202                           fsr1h	equ	0xFE2
 40203                           fsr1l	equ	0xFE1
 40204                           bsr	equ	0xFE0
 40205                           indf2	equ	0xFDF
 40206                           postinc2	equ	0xFDE
 40207                           postdec2	equ	0xFDD
 40208                           plusw2	equ	0xFDB
 40209                           fsr2h	equ	0xFDA
 40210                           fsr2l	equ	0xFD9
 40211                           status	equ	0xFD8


Data Sizes:
    Strings     495
    Constant    480
    Data        12
    BSS         1553
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     67     134
    BANK1           256    144     251
    BANK2           256      0     255
    BANK3           256     31     227
    BANK4           256      0      64
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          208      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[32]), NULL(NULL[0]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK1[2]), 

    pUsbBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), 
		 -> TX_POWER_N_2_DB_MW(CODE[6]), TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), 
		 -> TX_POWER_10_DB_MW(CODE[5]), TX_POWER_13_DB_MW(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_14(CODE[39]), STR_13(CODE[52]), STR_12(CODE[44]), STR_11(CODE[55]), 
		 -> STR_10(CODE[39]), STR_9(CODE[32]), STR_8(CODE[17]), STR_7(CODE[31]), 
		 -> STR_6(CODE[25]), STR_5(CODE[22]), STR_4(CODE[41]), STR_3(CODE[33]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    dBm_to_mW_ufixed16@value2	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    dBm_to_mW_ufixed16@value1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    labelcmp@p2	PTR unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    labelcmp@p1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    sendHIDText@str	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDText@p	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDBinary@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK2[32]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 7
		 -> TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 41
		 -> configDescriptor1(CODE[41]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), ToSendDataBuffer(BANK3[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    S2898$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S2888$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2888$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2864$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2864$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2864$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2864$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    MiApp_NoiseDetection@RSSIValue	PTR unsigned char  size(2) Largest target is 1
		 -> noise_level(BANK1[1]), MiApp_StartConnection@RSSIValue(BANK1[1]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), 

    UnicastShortAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> openSocketInfo.ShortAddress2(BANK1[2]), openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable.Address(BIGRAMl[4]), 
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    S2010$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2010$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK2[43]), 

    S1592$DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1390$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1614$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1614$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    _SYS_InterruptLow->_USBDeviceTasks
    i1___ftadd->i1___ftpack
    _USBDeviceTasks->_USBCtrlEPService
    i1_USBDeviceInit->i1_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler
    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_UnicastAddress
    _update_variable->_MiMAC_SetPower
    _MiMAC_SetPower->_RegisterSet
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_periodic_update->___ftmul
    _send_network_register->_sendHIDBinary
    _send_complete_update->___ftmul
    _floor->___altoft
    ___fttol->___ftadd
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___ftneg->_floor
    ___ftmul->___ftneg
    _send_answer_to_update->_sendHIDBinary
    _sendHIDBinary->_memcpy
    _sendHIDText->_USBTransferOnePacket
    _decode_variable->_memcpy
    _USBDeviceInit->_memset
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_UnicastShortAddress
    _UnicastShortAddress->_RouteMessage
    _RouteMessage->_SendMACPacket
    _SendBeacon->_SendMACPacket
    _SendMACPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _BroadcastJitter->_MiWi_TickGet
    _AddNodeToNetworkTable->_SearchForLongAddress
    _MiApp_StartConnection->_MiApp_NoiseDetection
    _MiApp_NoiseDetection->_MiMAC_ChannelAssessment
    _MiMAC_ChannelAssessment->___awdiv
    ___awdiv->_RegisterRead
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  949408
                                            137 BANK1      7     7      0
                                             19 BANK3     12    12      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_NoiseDetection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
               _MiApp_UnicastAddress
                     _MiMAC_SetPower
                          _MiWiTasks
                         _RTCC_reset
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _USBTransferOnePacket
                          _dBm_to_mW
                    _decode_variable
                             _memcpy
                      _sendHIDBinary
                        _sendHIDText
              _send_answer_to_update
               _send_complete_update
              _send_network_register
               _send_periodic_update
                            _sprintf
                             _strcpy
                        _timer_reset
                         _update_LED
                    _update_variable
 ---------------------------------------------------------------------------------
 (1) _update_variable                                      0     0      0    3025
                     _MiMAC_SetPower
                           _RtccWrOn
                           _labelcmp
                 _mW_ufixed16_to_dBm
 ---------------------------------------------------------------------------------
 (2) _mW_ufixed16_to_dBm                                   2     1      1     600
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (2) _labelcmp                                             8     4      4     639
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetPower                                       3     3      0    1786
                                              6 BANK1      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _update_LED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     525
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             34    22     12   13264
                                             12 BANK1     30    18     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                          _dBm_to_mW (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    7276
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     440
                                              7 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _send_periodic_update                                14    14      0   39843
                                             71 BANK1     13    13      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
           _encode_ufixed16_variable
                              _floor
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_network_register                                0     0      0   15092
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_complete_update                                14    14      0   42230
                                             71 BANK1     13    13      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                 _dBm_to_mW_ufixed16
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   12016
                                             45 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                              0 BANK1      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     891
                                             20 BANK1     15    11      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5618
                                              8 BANK1     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3603
                                             35 BANK1     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     273
                                             53 BANK1      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4367
                                             56 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3295
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _send_answer_to_update                                2     2      0   18929
                                             16 BANK1      1     1      0
                 _dBm_to_mW_ufixed16
           _encode_ufixed16_variable
              _encode_uint8_variable
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _sendHIDBinary                                        6     3      3    9302
                                             10 BANK1      6     3      3
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               15     3     12    1382
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            15     3     12    1450
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _dBm_to_mW_ufixed16                                   5     1      4    1005
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) _sendHIDText                                         10     8      2    3558
                                              7 BANK1     10     8      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _decode_variable                                     22    12     10    6629
                                             10 BANK1     22    12     10
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6    5790
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _dBm_to_mW                                            3     1      2      31
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK1      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0      34
                                              0 BANK1      2     2      0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (1) _RTCC_reset                                           0     0      0       0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                31    27      4  308644
                                            125 BANK1     12     8      4
                                              0 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                               0     0      0  217277
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (1) _MiWiTasks                                           51    51      0  217277
                                             74 BANK1     51    51      0
              _AddNodeToNetworkTable
                    _BroadcastJitter
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
                _UnicastShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _UnicastShortAddress                                  2     0      2   66740
                                             72 BANK1      2     0      2
                       _RouteMessage
 ---------------------------------------------------------------------------------
 (3) _RouteMessage                                        11     6      5   66408
                                             61 BANK1     11     6      5
                   _MiMAC_SendPacket
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendBeacon                                           1     1      0   21293
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendMACPacket                                        4     1      3   21293
                                             57 BANK1      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                    10     4      6   20160
                                             47 BANK1     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (6) _TxPacket                                            24    23      1    4859
                                             10 BANK1     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (7) _WriteFIFO                                            3     3      0     133
                                              2 BANK1      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _CCM_Enc                                             11     5      6    9189
                                             36 BANK1     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (2) _MiMAC_ReceivedPacket                                20    20      0   11429
                                             51 BANK1     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        7     3      4     400
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _CCM_Dec                                             15     9      6    9189
                                             36 BANK1     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (7) _CTR                                                 13     6      7    4021
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _CBC_MAC                                             13     6      7    4021
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (8) _encode                                              23    19      4    1094
                                              0 BANK1     23    19      4
 ---------------------------------------------------------------------------------
 (2) _BroadcastJitter                                     18    18      0     872
                                             10 BANK1     18    18      0
                       _MiWi_TickGet
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     336
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _AddNodeToNetworkTable                                4     4      0    1034
                                              6 BANK1      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _findNextNetworkEntry                                 1     1      0     130
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SearchForShortAddress                                3     3      0     192
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SearchForLongAddress                                 6     6      0     322
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (2) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_StartConnection                                9     4      5   16191
                                             65 BANK1      9     4      5
               _MiApp_NoiseDetection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_NoiseDetection                                36    28      8   10209
                                             29 BANK1     36    28      8
                   _MiApp_SetChannel
            _MiMAC_ChannelAssessment
                       _MiWi_TickGet
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) _MiWi_TickGet                                        10     6      4     400
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ChannelAssessment                             15    15      0    2999
                                             14 BANK1     15    15      0
                       _RegisterRead
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     865
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1485
                                              6 BANK1      8     4      4
                       _RegisterRead (ARG)
 ---------------------------------------------------------------------------------
 (7) _RegisterRead                                         4     4      0     235
                                              2 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   11123
                                             22 BANK1      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetAltAddress                                  4     0      4    1872
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5074
                                             18 BANK1      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             6     4      2    1033
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             10 BANK1      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                              7 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (7) _SetRFMode                                            1     1      0    1755
                                              6 BANK1      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     2      2    1724
                                              2 BANK1      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _SPIPut                                               2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptLow                                   19    19      0   29395
                                             30 COMRAM    19    19      0
                     _USBDeviceTasks
                          i1___ftadd
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1___ftadd                                          12     6      6    1201
                                              8 COMRAM    12     6      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (15) i1___ftpack                                          8     3      5     309
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   28194
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i1_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i1_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    3     3      0   16300
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   16003
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   12165
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    4244
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    4129
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3746
                                             12 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_LEDUpdateUSBStatus                              0     0      0       0
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1054
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i1_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     644
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (23) _SYS_InterruptHigh                                  14    14      0    4094
                                             53 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (24) _MIWIInterruptHandler                               19    19      0    4094
                                             34 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
                       i2_update_LED
 ---------------------------------------------------------------------------------
 (25) i2_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (25) i2_TxPacket                                         24    23      1    1577
                                             10 BANK0     24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (26) i2_WriteFIFO                                         3     3      0      91
                                              2 BANK0      3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_SetRFMode                                         1     1      0     291
                                              6 BANK0      1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (27) i2_RegisterSet                                       4     2      2     269
                                              2 BANK0      4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_RegisterRead                                      4     4      0     160
                                              2 BANK0      4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIGet                                            0     0      0      23
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIPut                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (26) i2_MiWi_TickGet                                     10     6      4     316
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _BroadcastJitter
         _MiWi_TickGet
         ___lbmod
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SearchForLongAddress
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
       _UnicastShortAddress
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _findNextNetworkEntry
   _MiApp_NoiseDetection
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_ChannelAssessment
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
       ___lwdiv
     _MiWi_TickGet
     ___awdiv
       _RegisterRead (ARG)
         _SPIGet
           _SPIPut
         _SPIPut
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SetChannel
     _MiMAC_SetChannel
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiApp_StartConnection
     _MiApp_NoiseDetection
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiMAC_ChannelAssessment
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         ___awdiv
           _RegisterRead (ARG)
             _SPIGet
               _SPIPut
             _SPIPut
         ___lwdiv
       _MiWi_TickGet
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_UnicastAddress
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _BroadcastJitter
           _MiWi_TickGet
           ___lbmod
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SearchForLongAddress
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
         _UnicastShortAddress
           _RouteMessage
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _SearchForShortAddress
             _SendBeacon
               _SendMACPacket
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                     _CTR
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                   _TxPacket
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
         _findNextNetworkEntry
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _BroadcastJitter
       _MiWi_TickGet
       ___lbmod
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
     _SearchForShortAddress
     _SendBeacon
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _UnicastShortAddress
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
     _findNextNetworkEntry
   _RTCC_reset
     _RtccWrOn
   _SYSTEM_Initialize
     _RtccWrOn
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBTransferOnePacket
   _dBm_to_mW
   _decode_variable
     _memcpy
   _memcpy
   _sendHIDBinary
     _USBTransferOnePacket
     _memcpy
   _sendHIDText
     _USBTransferOnePacket
   _send_answer_to_update
     _dBm_to_mW_ufixed16
     _encode_ufixed16_variable
     _encode_uint8_variable
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_complete_update
     ___ftadd
       ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     _dBm_to_mW_ufixed16
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       _frexp
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_network_register
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_periodic_update
     ___ftadd
       ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     _encode_ufixed16_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       _frexp
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _dBm_to_mW (ARG)
     _isdigit (ARG)
   _strcpy
   _timer_reset
   _update_LED
   _update_variable
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _RtccWrOn
     _labelcmp
     _mW_ufixed16_to_dBm

 _SYS_InterruptLow (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               i1_update_LED
             _USBCheckHIDRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             i1_update_LED
           _USBCheckHIDRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         i1_update_LED
       _USBCheckHIDRequest
     i1_USBDeviceInit
       i1_memset
   i1___ftadd
     i1___ftpack
   i1_update_LED

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut
     i2_update_LED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     240      36       17.3%
BIGRAMh            180      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      40      14       25.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     1F      E3      12       88.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     90      FB       7       98.0%
BITBANK13           D0      0       0      31        0.0%
BANK13              D0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5D       1       98.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     500       8        0.0%
DATA                 0      0     740       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Dec 09 12:38:45 2016

                              i2_TxPacket 737E                              ___altoft@exp 012B  
                              _USB_SD_Ptr 20C3                                i1___ftpack A7C4  
                    ?_MiMAC_DiscardPacket 0001                              _UPTIME_LABEL 21CD  
                          ?_isSameAddress 0100                              _RoutingTable 0071  
                           ___altoft@sign 012C                                        l31 BB30  
                                      l18 A8FE                                        l19 A8EA  
                                      l29 BB26                                        l62 B13C  
                            ___awdiv@sign 010B                    ??_MiApp_NoiseDetection 0125  
                                      bsr 000FE0                             _USBDeviceInit 7BB6  
                     ___wmul@multiplicand 0102                        _USBCheckHIDRequest 93A8  
                     MiApp_ProtocolInit@i 011B                         _ActiveScanResults 0200  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 0113  
                            ___ftadd@exp2 0112                                _MiMAC_Init 83A2  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 0111                                       l322 6B8E  
             __end_of_USBStdGetDscHandler 8118                                       l262 76EC  
                                     l263 7734                                       l327 6BFC  
                                     l328 6C58                                       l460 8DB8  
                                     l356 5B7C                                       l383 8ABC  
                                     l641 3B08                            ?i2_RegisterSet 00A5  
                                     l486 897C                                       l670 296A  
                                     l495 7EC2                                       l904 8CEE  
                                     l753 37BE                                       l746 3564  
                                     l907 8D16                                       l691 2CC6  
                                     l667 28D4                                       l940 BA18  
                                     l692 2CCA                                       _BDT 000D00  
                                     l790 3C02                                       l774 39D6  
                                     l758 3788                                       l769 399A  
                                     l697 2D8A                              i1___ftadd@f1 0009  
                            i1___ftadd@f2 000C                                       l899 8C3C  
                                     _CTR 8D50                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _MTP 01AD                                       _UIR 000F62  
                  _APP_LEDUpdateUSBStatus B7E4                                       _key 02F1  
                              _USBSuspend BA8C                           __end_of_CBC_MAC 92AA  
             __end_of_MiMAC_SetAltAddress BBD6                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                    __end_ofi1_update_LED B44E                            _USBDeviceTasks 8118  
                     ?_USBCheckHIDRequest 0001                           __end_of_CCM_Dec 7FCA  
                          _USBDeviceState 004B        encode_ufixed16_variable@m_writable 010E  
                         __end_of_CCM_Enc 89D6            __end_of_UPDATE_FREQUENCY_LABEL 21CD  
                             i2_WriteFIFO B764                     ??_USBCtrlTrfRxService 0001  
          __size_of_MiApp_StartConnection 010C                  USBEnableEndpoint@options 0009  
              __end_of_mW_ufixed16_to_dBm 9EF6                                      ?_CTR 0117  
           __end_of_MiApp_StartConnection 91A0                                      CTR@i 0122  
                                    CTR@j 0123                    ??_send_complete_update 0147  
                                    l1014 5DEA                                      l1024 5FF4  
                                    l1033 616A                                      l1019 5E46  
                                    l1222 7C2C                                      l2033 A96C  
                                    l2043 A250                                      l1283 B8C8  
                                    l1284 B8C6                                      l2502 6982  
                                    l2166 560A                                      l2504 69AA  
                                    l2513 6A80                                      l2450 9060  
                                    l2522 6AAA                USBConfigureEndpoint@handle 0007  
                                    l2461 939A                                      l1823 BB62  
                                    l1815 982E                                      l1751 3EC2  
                                    l1753 3ECE                                      l1737 3E04  
                                    l1762 4216                                      l2555 B9CC  
                                    l1781 463A                                      l1863 B390  
                                    l1865 B39E                                      l2658 B080  
                                    l2498 6948                                      l1779 4636  
                                    l2668 B322                                      l1982 A70E  
                         ?i2_RegisterRead 0001                                      STR_1 23B5  
                                    STR_2 2304                                      STR_3 22E3  
                                    STR_4 226C                                      STR_5 237D  
                                    STR_6 2364                                      STR_7 2345  
                                    STR_8 23A4                                      STR_9 2325  
                                    i2l31 BB4C                                      i2l29 BB42  
                                    i2l62 B1B0                     ??_USBCtrlTrfTxService 0001  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
   MiMAC_ChannelAssessment@AssessmentMode 0118    USBStdFeatureReqHandler@current_ep_data 0018  
               MiApp_StartConnection@Mode 0147                                      _pDst 003C  
              MiMAC_SetChannel@offsetFreq 0107                                      _main 3D4A  
                            ___ftpack@arg 0100                              ___ftpack@exp 0103  
                                    _role 01CA                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach B898                                      btemp 005E  
                                    pclat 000FFA                           _update_variable 977E  
              MiApp_UnicastAddress@handle 03D6                     MiApp_ProtocolInit@MIP 0118  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 01E4                             __CFG_IESO$OFF 000000  
                        __end_of_DELAY_ms A91C                      ??_USBCheckHIDRequest 0001  
               do_NETWORK_REGISTER@F10229 0040                      __end_ofi2_update_LED B4AE  
              __end_of_USBCheckStdRequest 977E                    ??_USBCtrlTrfOutHandler 0003  
                          _InitConfigRegs 1FF5                              ___ftmul@cntr 0145  
          UnicastShortAddress@DestAddress 0148           MiApp_NoiseDetection@channelMask 012E  
                            ___param_bank 000000                              ___ftmul@sign 0146  
               ??_USBStdFeatureReqHandler 0015                              _USBOutHandle 01B7  
                   ??_MiMAC_DiscardPacket 0100                                     ??_CTR 011E  
                 decode_variable@p_buffer 010A            MiApp_StartConnection@RSSIValue 0149  
                        CCM_Enc@headerLen 0126                  ??_USBStdGetStatusHandler 0001  
                            ___fttol@exp1 0122                              ___fttol@lval 011E  
                          ?_USBDeviceInit 0001              __end_of_MiApp_DiscardMessage BBB4  
      MiApp_NoiseDetection@OptimalChannel 013A                             __CFG_PLLDIV$2 000000  
                                   l20131 5DE0                                     l21003 A33E  
                                   l20141 5E04                                     l21021 950A  
                                   l20231 600E                                     l21015 94F2  
                                   l20241 6024                                     l20137 5DFA  
                                   l21033 9566                                     l20331 7A4A  
                                   l20251 60B0                                     l20147 5E36  
                                   l21051 97C0                                     l20309 619A  
                                   l20343 7A7E                                     l20327 7A40  
                                   l20319 6226                                     l20255 60B4  
                                   l21039 957E                                     l21135 797E  
                                   l20361 7AEC                                     l20337 7A6E  
                                   l20505 918C                                     l20521 7C02  
                                   l20601 9F00                                     l20339 7A74  
                                   l20195 5F08                                     l20187 5EC0  
                                   l20357 7AE2                                     l20349 7AB0  
                                   l20525 7C0C                                     l20613 9F60  
                                   l20605 9F32                                     l21149 79F6  
                                   l20701 555A                                     l20367 7B0C  
                                   l20607 9F3C                                     l20703 5566  
                                   l21095 985C                                     l20481 90F8  
                                   l20465 909A                                     l20553 7C7A  
                                   l20537 7C3A                                     l20545 7C52  
                                   l20299 6184                                     l20619 9F78  
                                   l20811 57FE                                     l20803 57D8  
                                   l20731 5642                                     l20715 55B6  
                                   l20707 5578                                     l20549 7C70  
                                   l20813 5850                                     l20821 58BC  
                                   l20709 5590                                     l20661 53E8  
                                   l21701 3E80                                     l20559 7CE0  
                                   l20751 56A6                                     l20735 565E  
                                   l20719 55CE                                     l20663 53FA  
                                   l20655 53CA                                     l21703 3E8A  
                                   l20825 58CE                                     l20809 57F8  
                                   l20737 5664                                     l20681 54BC  
                                   l20673 543C                                     l20593 B8DC  
                                   l21721 3EE2                                     l17003 893E  
                                   l20819 58AA                                     l20691 54F4  
                                   l20683 54C2                                     l20667 5404  
                                   l20827 58DA                                     l20595 B8E8  
                                   l21803 41E4                                     l21707 3E98  
                                   l17013 8998                                     l17021 6B54  
                                   l20773 5716                                     l20749 56A0  
                                   l20765 56E2                                     l20693 5500  
                                   l20829 58FA                                     l17007 8956  
                                   l20767 56F4                                     l20695 5506  
                                   l21911 4628                                     l21903 45C8  
                                   l21719 3ED2                                     l21663 3DA4  
                                   l17201 B602                                     l17033 6BAE  
                                   l20777 574E                                     l20961 BB66  
                                   l21905 45EC                                     l21753 4032  
                                   l21681 3DFC                                     l21673 3DEC  
                                   l17123 AF1E                                     l17211 7E7A  
                                   l17043 6C0A                                     l20787 577E  
                                   l20795 57A6                                     l20779 5758  
                                   l21931 46BA                                     l21835 42FE  
                                   l21667 3DBA                                     l17133 AF8C  
                                   l17205 B608                                     l17053 6C64  
                                   l17109 AFBC                                     l18021 2610  
                                   l18013 25D4                                     l20981 A2F8  
                                   l20973 A2DC                                     l20965 A2C0  
                                   l20797 57B2                                     l21925 468A  
                                   l21909 461E                                     l17119 AF14  
                                   l17231 7F48                                     l17215 7E84  
                                   l17039 6BE2                                     l18007 25A0  
                                   l21951 47C6                                     l21839 4354  
                                   l17137 AF92                                     l17241 7FC0  
                                   l17225 7EDE                                     l17081 6D08  
                                   l17065 6CA0                                     l17057 6C6E  
                                   l17049 6C3E                                     l18201 2ADC  
                                   l18105 283C                                     l18121 28A8  
                                   l18041 26A0                                     l18033 268E  
                                   l18025 261A                                     l20993 A322  
                                   l20985 A306                                     l20977 A2EA  
                                   l20969 A2CE                                     l21937 4740  
                                   l21953 47D6                                     l21697 3E4E  
                                   l17235 7F52                                     l17219 7E9C  
                                   l17075 6CD4                                     l17331 4A00  
                                   l18043 26A6                                     l18019 260A  
                                   l21947 47A8                                     l21955 47FE  
                                   l21875 4496                                     l21859 43EA  
                                   l16701 6F8E                                     l17245 7FC6  
                                   l17421 4C62                                     l17405 4BF0  
                                   l17325 49F0                                     l18221 2BB8  
                                   l18117 2884                                     l18301 2DB8  
                                   l18037 2694                                     l20997 A330  
                                   l20989 A314                                     l17511 B7B6  
                                   l17191 B5C0                                     l17095 6D7C  
                                   l17087 6D40                                     l17431 4CA0  
                                   l17415 4C52                                     l17327 49F6  
                                   l17319 49D6                                     l17271 4886  
                                   l18231 2BD4                                     l18151 29A8  
                                   l18135 291C                                     l18119 28A4  
                                   l18055 26D6                                     l18047 26B0  
                                   l21879 44DC                                     l16713 A15E  
                                   l17521 B7E0                                     l17089 6D48  
                                   l17097 6D88                                     l17417 4C58  
                                   l17409 4BFA                                     l17345 4ABA  
                                   l18401 3120                                     l18225 2BC4  
                                   l18209 2B4C                                     l18145 2976  
                                   l18065 2778                                     l19033 B86C  
                                   l16811 ABB2                                     l19051 83CE  
                                   l17531 9D78                                     l17507 B7AC  
                                   l17195 B5CA                                     l17611 5918  
                                   l17443 4CD2                                     l17427 4C9A  
                                   l17363 4B0E                                     l17291 4944  
                                   l17275 488A                                     l17259 4834  
                                   l18403 31CA                                     l18315 2E14  
                                   l18243 2C36                                     l18227 2BCA  
                                   l18155 29BA                                     l18139 2926  
                                   l18067 2784                                     l19211 8B40  
                                   l21899 4572                                     l19061 83F4  
                                   l16725 A192                                     l16741 A1E2  
                                   l19133 6FDA                                     l17541 9DC4  
                                   l17517 B7DA                                     l16901 9284  
                                   l17621 5A1A                                     l17453 4D34  
                                   l17437 4CB2                                     l17357 4B0A  
                                   l18309 2DE0                                     l18237 2C18  
                                   l18165 2A30                                     l19221 8BC2  
                                   l19213 8B5A                                     l16823 ABF4  
                                   l16815 ABC8                                     l16807 AB9C  
                                   l19063 83FA                                     l19055 83D8  
                                   l16727 A19E                                     l16719 A174  
                                   l19143 7074                                     l19135 6FE2  
                                   l17527 9D6E                                     l17631 5A2C  
                                   l17607 590E                                     l17455 4D3A  
                                   l17447 4CDC                                     l17383 4B9E  
                                   l17279 48AC                                     l18431 33BE  
                                   l18351 2F52                                     l18335 2EA4  
                                   l18263 2CB0                                     l18183 2A88  
                                   l18159 29C4                                     l18271 2CD2  
                                   l19223 8BDC                                     l19215 8B74  
                                   l19207 8B0C                                     l19311 92E6  
                                   l19073 8420                                     l16745 A1F6  
                                   l16737 A1D4                                     l16729 A1A4  
                                   l16753 B114                                     l19161 715A  
                                   l17537 9DBA                                     l17553 9E26  
                                   l16905 929C                                     l16841 8D86  
                                   l17705 5CB2                                     l17633 5A32  
                                   l17625 5A20                                     l16913 7702  
                                   l17465 4D9C                                     l17481 4DF2  
                                   l17393 4BBE                                     l17297 4948  
                                   l18601 37F2                                     l18513 35A8  
                                   l18521 35C0                                     l18433 33C4  
                                   l18337 2EC6                                     l18257 2CA0  
                                   l18273 2CF2                                     l19217 8B8E  
                                   l19209 8B26                                     l16819 ABDE  
                                   l19091 8480                                     l19075 8438  
                                   l19067 8404                                     l19171 7192  
                                   l17571 B716                                     l17563 B6EE  
                                   l16691 6DE6                                     l16851 8DDA  
                                   l16835 8D76                                     l17707 5CD4  
                                   l17731 5DB6                                     l17475 4DE8  
                                   l17459 4D44                                     l18611 382E  
                                   l18451 3440                                     l18443 342A  
                                   l18427 338E                                     l18187 2A92  
                                   l19219 8BA8                                     l19227 8BF6  
                                   l19315 92FA                                     l16829 AC0A  
                                   l19085 8470                                     l19173 7196  
                                   l17549 9E20                                     l17557 9E2C  
                                   l16837 8D7C                                     l17717 5D5A  
                                   l17653 5B04                                     l17637 5A3C  
                                   l16933 775C                                     l16909 76E6  
                                   l17389 4BB8                                     l18621 3888  
                                   l18605 37FC                                     l18517 35AE  
                                   l18453 3446                                     l18445 3430  
                                   l18437 33CE                                     l18381 3064  
                                   l18373 3004                                     l18197 2AD2  
                                   l19181 B980                                     l19087 8476  
                                   l19079 8442                                     l17911 89FC  
                                   l16767 B150                                     l19159 7156  
                                   l17751 A3A0                                     l16687 6DDC  
                                   l16855 8DE4                                     l17671 5B92  
                                   l17719 5D62                                     l17655 5B10  
                                   l17647 5AAE                                     l17735 5DBC  
                                   l18623 388E                                     l18551 3662  
                                   l18463 3482                                     l18703 3AC8  
                                   l18391 30BA                                     l18367 2FF4  
                                   l18295 2DA2                                     l18279 2D2C  
                                   l18711 3B10                                     l19191 AB08  
                                   l19319 9318                                     l19503 B314  
                                   l19407 9EDA                                     l17585 A43E  
                                   l17825 B09C                                     l19097 84AE  
                                   l16873 91C4                                     l16865 8E5E  
                                   l17681 5BE6                                     l16961 77CA  
                                   l16945 778E                                     l16937 7778  
                                   l18529 35E2                                     l18537 3606  
                                   l18481 34CA                                     l18457 3450  
                                   l18369 2FFA                                     l18385 3070  
                                   l19185 B992                                     l19249 A25E  
                                   l17841 8FB6                                     l19417 9EF2  
                                   l17923 8A6C                                     l17747 A388  
                                   l16891 9206                                     l16883 91EE  
                                   l16867 8E62                                     l17667 5B88  
                                   l16971 7854                                     l17499 4E62  
                                   l18715 3B2A                                     l18627 3898  
                                   l18563 36F0                                     l18395 30C4  
                                   l18707 3AEC                                     l18811 B33E  
                                   l18803 9A04                                     l19195 AB3A  
                                   l17851 9044                                     l17843 8FC4  
                                   l19451 7D8A                                     l19347 9E4C  
                                   l17829 B0C2                                     l17933 8A80  
                                   l17925 8A72                                     l17781 8C96  
                                   l17765 8C4A                                     l17757 A422  
                                   l16885 91F6                                     l16877 91CE  
                                   l17685 5BF4                                     l17677 5BE0  
                                   l16949 779A                                     l18741 3C4E  
                                   l18725 3BFC                                     l18653 3960  
                                   l18661 3976                                     l18485 350C  
                                   l19197 AB44                                     l17853 9052  
                                   l17845 8FF4                                     l17837 8FA2  
                                   l19445 7D50                                     l18901 6B22  
                                   l19429 BA82                                     l19357 9E64  
                                   l17919 8A32                                     l16887 91FC  
                                   l17695 5C6A                                     l16991 88DE  
                                   l16975 7868                                     l18719 3B34  
                                   l18671 39CC                                     l18575 373A  
                                   l18567 370E                                     l19287 A97A  
                                   l18911 AE12                                     l19367 9E7C  
                                   l17937 8A86                                     l17777 8C8C  
                                   l17769 8C5A                                     l17689 5BFE  
                                   l16977 786C                                     l18753 3C8A  
                                   l18745 3C58                                     l18585 3776  
                                   l18817 B376                                     l17865 9086  
                                   l17849 9014                                     l19465 7DD8  
                                   l19377 9E94                                     l17875 B030  
                                   l17947 8ACC                                     l16987 88D4  
                                   l18763 3CD4                                     l18579 3744  
                                   l18499 355A                                     l17859 906A  
                                   l19475 7E16                                     l18827 A9EE  
                                   l18843 6956                                     l19387 9EAA  
                                   l17877 B03C                                     l17789 8D4A  
                                   l16997 892E                                     l18685 3A0C  
                                   l17973 2460                                     l19469 7DF6  
                                   l18829 A9FE                                     l18925 9CE0  
                                   l19397 9EC2                                     l18775 BAFA  
                                   l17887 B072                                     l17879 B042  
                                   l16999 8934                                     l18695 3AA6  
                                   l18599 37EC                                     l17983 247C  
                                   l18791 999E                                     l18783 996A  
                                   l19479 7E34                                     l18871 6A10  
                                   l18855 69A0                                     l18935 9D64  
                                   l19495 B2DE                                     l18689 3A24  
                                   l17993 254C                                     l19585 8634  
                                   l18873 6A1E                                     l18865 69E2  
                                   l18849 6990                                     l18929 9D20  
                                   l18945 8298                                     l19497 B2EA  
                                   l18699 3AC2                                     l17979 2470  
                                   l18891 6AD4                                     l18883 6A66  
                                   l18875 6A2C                                     l18963 832A  
                                   l19499 B2F0                                     l18885 6A74  
                                   l18877 6A38                                     l18981 8390  
                                   l18973 835A                                     l17999 257A  
                                   l18975 836A                                     l18967 833E  
                                   l18977 8374                                     l19991 B3C0  
                                   l19985 B3AA                                     l19999 B3D2  
                                   ?_main 0001                           __end_of___awdiv A200  
                         __end_of___ftadd 6B48                                     STR_10 22BC  
                                   STR_11 21D5                                     STR_12 2240  
                                   STR_13 220C                                     STR_14 2295  
                                   STR_15 23BD                                     STR_16 2393  
                         __end_of___lbmod B722         __size_of_USBCtrlEPServiceComplete 00F4  
               _send_periodic_update$6070 014B                 _send_periodic_update$6071 014E  
                         __end_of___ftneg B9DA                 _send_periodic_update$6072 0151  
               _send_periodic_update$6069 0148                           __end_of___ftmul 7E74  
                         ___awdiv@divisor 0108                                     u20141 2798  
                                   u20151 27AE                                     u21200 3D44  
                                   _T1CON 000FCD                                     u20401 2D20  
                  __end_of_USBDeviceTasks 825E                                     u21140 3BDE  
                                   u21301 6914                           __end_of___fttol 83A2  
                                   u21250 B368                                     u22211 7D2C  
                                   u20524 2F28                                     u20525 2F22  
                                   u21510 AE44                                     u22231 7D66  
                                   u21257 B35E                                     u23130 60A8  
                                   u21291 68F6                                     u21518 AE48  
                                   u21551 8274                                     u20824 3598  
                                   u20825 3592                                     u23065 5E8E  
                                   u23066 5E92                                     u21570 82BE  
               ?_USBCtrlEPServiceComplete 0001                                     u23180 621E  
                                   u21900 AB2A                                     u23255 7B2C  
                                   u21575 82B4                                     u23256 7B30  
                                   u21760 BBA6                                     u23450 9F22  
                                   u21780 7008                                     u20884 36E0  
                                   u21908 AB2E                                     u20885 36DA  
                                   u18015 6E3C                                     u25207 40E0  
                                   u21785 6FFC                                     u18025 6EC4  
                                   u23801 660A                                     u25217 412E  
                                   u23458 9F26                                     u18035 6F1E  
                                   u25227 416C                                     u21980 930A  
                                   u24620 3E70                                     u25237 41B4  
                                   u25157 3E40                                     u25247 7372  
                                   u25167 3F50                                     u24800 4676  
                                   u25257 640E                                     u23761 62F4  
                                   u25177 3FD0                                     u24810 4678  
                                   u18155 B54E                                     u25267 6650  
                                   u23771 635E                                     u25187 4024  
                                   u18156 B550                                     u24740 460E  
                                   u24628 3E74                                     u18165 B55A  
                                   u23845 9524                                     u25277 7A1A  
                                   u23941 7956                                     u23781 63C8  
                                   u24821 469C                                     u25197 4066  
                                   u18166 B55C                                     u19054 4C88  
                                   u18175 B754                                     u19055 4C80  
                                   u23871 958E                                     u23791 65A0  
                                   u19320 5A04                                     u18176 B756  
                                   u18185 B760                                     u23961 79CE  
                                   u18186 B762                                     u18610 AFCA  
                         __end_of___lwdiv B08A                                     u19155 4E08  
                                   u23971 732C                                     u19156 4E0C  
                                   u24748 4612                                     u18480 6B62  
                                   u18628 AFCE                                     u18814 48C2  
                                   u18815 48BC                                     u18498 6B66  
                                   u18924 4A86                                     u18844 491A  
                                   u19900 23EC                                     u18925 4A80  
                                   u18845 4914                                     u18855 495E  
                                   u18856 4962                                     u19920 2424  
                                   u17985 B642                                     u18945 4B24  
                                   u17986 B644                                     u18946 4B28  
                                   u17995 B64E                                     u18795 484A  
                                   u19915 240C                                     u17996 B650  
                                   u18796 484E                                     u19908 23F0  
                                   u19917 2410                                     u18894 4A2E  
                                   u19791 89EE                                     u18895 4A28  
                                   u19945 244A                           __end_of___lwmod B32C  
                                   u19938 2428                                     u18995 4BDE  
                                   u19947 244E                                     u18996 4BE2  
                                   u19991 254A                                     u19975 252E  
                                   u19977 2532                                     i2l410 4EFC  
                                   i2l421 4FD4                                     i2l262 7390  
                                   i2l263 73D6                                     i2l416 4F58  
                                   i2l419 5028                                     _UADDR 000F38  
                         ___awdiv@counter 010A                  __size_of_InitSymbolTimer 0018  
                    BroadcastJitter@range 011A                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RTCEN 0079FF  
                                   _RTCOE 0079FA                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                            i1___ftadd@exp1 0014  
                          i1___ftadd@exp2 0013                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                 __end_of_BroadcastJitter A42E                                     _USTAT 000F64  
                          i1___ftadd@sign 0012                                i1memset@p1 0001  
      __size_of_USBCtrlEPAllowStatusStage 00C4                          __end_ofi2_SPIGet BBC8  
                     ___lmul@multiplicand 0104                                _MiWiSeqNum 01C3  
                        __end_ofi2_SPIPut BB54                            _myShortAddress 01F2  
                         _decode_variable 94A4                            __CFG_FCMEN$OFF 000000  
           __size_of_MIWIInterruptHandler 0550           __end_of_USBCtrlEPAllowDataStage AAFE  
                             _BestChannel 01BE                           __end_of_myMODEL FFF5  
                                   _sd000 21D1                                     _sd001 20CF  
                                   _sd002 2103              MiMAC_ChannelAssessment@count 011A  
           __size_of_MiApp_ConnectionMode 002C                           __end_of_dpowers 20BB  
                                   _myUID FFF6                                     _floor 92AA  
                                   _m_var 01DE                                     _frexp ADF0  
           __size_of_MiApp_UnicastAddress 046A                                     _errno 0036  
                         __end_of_isdigit BA8C                             ___ftpack@sign 0104  
                    _send_periodic_update 71A4                                     main@x 03DE  
                             ?_RTCC_reset 0001                                     tablat 000FF5  
                __end_of_SYS_InterruptLow 01E4                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                            ?_sendHIDText 0107                                     status 000FD8  
                         __end_of_sprintf 5908         __size_of_encode_ufixed16_variable 00BA  
                      __size_ofi1___ftadd 01AC                          __end_ofi1_memset BA62  
               ?_encode_ufixed16_variable 0100                    __end_of_InitConfigRegs 2035  
                          i1___ftpack@arg 0001                            i1___ftpack@exp 0004  
               __size_of_MiMAC_SetChannel 00BA              __size_of_USBStdSetCfgHandler 00E2  
                         __initialization 9AFC                           ??_isSameAddress 0104  
                             ?i2_TxPacket 00AD                         BroadcastJitter@t1 0112  
                       BroadcastJitter@t2 0116                     _AddNodeToNetworkTable 8C2C  
               __size_of_MiMAC_SendPacket 0254                              __end_of_main 4812  
                 __size_of_MiMAC_SetPower 003A                               ?i1___ftpack 0001  
                  __size_of_SendMACPacket 007C                            TxPacket@status 011E  
                               ??_CBC_MAC 011E                          __end_of_ScanTime 2071  
                         ??i2_RegisterSet 00A7                 __size_of_USBCtrlEPService 00CE  
                               ??_CCM_Dec 012A                                 ??_CCM_Enc 012A  
                           ??_RegisterSet 0104                                    ??_main 0189  
                           ___fttol@sign1 011D                               ?_MiMAC_Init 0112  
                          _myMUTA_version FFF2                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001             MiMAC_ChannelAssessment@F10758 02F9  
                    __end_of_MiWi_TickGet B174                                    CTR@len 0119  
                                  CTR@key 011A                             _IRQ1_Received 0099  
                             ?_USBSuspend 0001                      _SearchForLongAddress 9D68  
                 MiApp_SetChannel@channel 010A                          __end_of_TxPacket 7884  
                         i1_USBDeviceInit 84E6                          __end_of_RtccWrOn BB98  
                              _SendBeacon 8766         MiApp_ProtocolInit@bNetworkFreezer 0117  
                    _MiMAC_ReceivedPacket 5908                        __size_of_MiWiTasks 1984  
             _myMUTA_version_absconstaddr 01FFF2                           i2SetRFMode@mode 00A9  
                 __end_of_USBDeviceAttach B8D2                   ??_encode_uint8_variable 010C  
                                  ?_floor 012D                                    ?_frexp 0100  
                        __end_of___altoft AA60                             RouteMessage@i 0147  
                           RouteMessage@j 0145                     ?_send_periodic_update 0001  
          __size_of_send_answer_to_update 01A2                                    _CCPR1L 000FBB  
                                  _EECON2 000FA7                   __end_of_update_variable 986A  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                        ___awdiv@dividend 0106                   _MiMAC_ChannelAssessment 89D6  
           __end_of_send_answer_to_update 7A26                          __end_of___ftpack 9094  
                    _IncomingFrameCounter 0500                                    i1l1222 854C  
                                  i1l1234 8148                                    i1l1308 9612  
                                  i1l1244 81E2                                    i1l1421 A132  
                                  i1l1245 825A                                    i1l1246 81F4  
                                  _MACSeq 01C0                                    i1l1450 6686  
                                  i1l1371 A4F6                                    i1l1435 969C  
                                  i1l1444 9700                                    i1l1374 A584  
                                  i1l2502 759C                                    i1l1375 A506  
                                  i1l1376 A50C                                    i1l1384 B694  
                                  i1l2513 764C                                    i1l2450 A852  
                                  i1l2522 7668                                    i1l1469 684C  
                                  i1l1863 B3F0                                    i1l1865 B3FE  
                                  i1l2498 7572                                    i1l1874 014C  
                                  i1l1893 019A                                    i1l1894 0196  
                                  i1l1896 019C                            __CFG_WDTEN$OFF 000000  
                                  i2l1863 B450                                    i2l1865 B45E  
         ??_APP_DeviceCustomHIDInitialize 000D                     BroadcastJitter@jitter 011B  
                                  _RTCCAL 000F3E                            sendHIDText@str 0107  
                                  _RTCCFG 000F3F                                    _PVALUE 2071  
                                  _RPOR11 000ECB                                    _RPINR1 000EE1  
                                  _SVALUE 2091                                    _SPIGet BBB4  
            i1USBTransferOnePacket@handle 0006                                    _SPIPut BB1C  
                 i2RegisterSet@IRQ0select 00A8           MiApp_StartConnection@ChannelMap 0142  
                 i2RegisterSet@IRQ1select 00A7                  __end_of_TX_POWER_1_DB_MW 2190  
                __end_of_TX_POWER_4_DB_MW 219D                                TxPacket@t1 0113  
                              TxPacket@t2 0117                         _StaticSecurityKey 1FEC  
                      __size_of_SetRFMode 0098                         _shortPacketStatus 0054  
                __end_of_TX_POWER_7_DB_MW 21C9                            __CFG_XINST$OFF 000000  
                      _myUID_absconstaddr 01FFF6                                    _TxData 01C6  
                        __end_of_labelcmp A714                           USBDeviceTasks@i 001E  
             USBStdFeatureReqHandler@pUEP 0016                  USBTransferOnePacket@data 0101  
              USBCtrlTrfInHandler@lastDTS 0002                           ??_USBDeviceInit 0108  
                                  ___ftge 9CA0                                    ___lmul B08A  
                                  ___wmul B90A                                 ??___awdiv 010A  
                    MiWiTasks@sourcePANID 0175                                 ??___ftadd 010E  
                               ??___lbmod 0101                                    _hasAck 009F  
                               ??___ftneg 0138                                 ??___ftmul 013E  
                               ??___fttol 0118             MiMAC_ChannelAssessment@result 0112  
               __size_of_MiApp_SetChannel 0024                                 ??___lwdiv 0104  
                      __size_of_dBm_to_mW 00BA                                 ??___lwmod 010B  
                                  _encode 6D9C                  __end_of_TX_POWER_INVALID 21A3  
                       _USBEnableEndpoint B822           __size_of_USBStdGetStatusHandler 00BA  
                  __end_of_myMUTA_version FFF3                                    _memcpy B32C  
                                  _memset B976                                    clear_0 9B04  
                                  clear_1 9B18                                    clear_2 9B2A  
                                  clear_3 9B36                                    clear_4 9B42  
                                  clear_5 9B4E                                    clear_6 9B5A  
                                  clear_7 9B66                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 010C                              _CCM_Dec$1986 0130  
                 __end_of_decode_variable 9598                       __size_of_RTCC_reset 001E  
                   __size_ofi1_update_LED 0060                __p_StaticSecurityKey_const 1FEC  
                      ?_USBEnableEndpoint 0009            __size_of_SearchForShortAddress 0088  
           __end_of_SearchForShortAddress AF96                                    _strcpy B8D2  
                      decode_variable@var 0116                                    floor@i 0130  
                                  floor@x 012D                     ___ftmul@f3_as_product 0142  
           __size_of_USBTransferOnePacket 00D8                         __end_ofi1___ftadd 76DA  
                   ?_SearchForLongAddress 0001                   __p_myMUTA_version_const FFF2  
              __end_of_dBm_to_mW_ufixed16 8C2C                              __pdataCOMRAM 005B  
                               ??_isdigit 0100                              _CCM_Enc$1978 012C  
                        ?_BroadcastJitter 0001                            _openSocketInfo 01CC  
                            __mediumconst 1FF4                     ?_MiMAC_ReceivedPacket 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                    _myMODEL_absconstaddr 01FFF4                                    tblptru 000FF8  
                               ?_DELAY_ms 010C                       ??_USBEnableEndpoint 000A  
                     __end_of_RegisterSet B652                              ?_timer_reset 0001  
                           ?_RegisterRead 0001                       __size_ofi2_TxPacket 01B0  
                               ??_sprintf 0118                         _ReceivedBankIndex 01C5  
                             _CtrlTrfData 000D28                             _SendMACPacket AF96  
                       ??_InitSymbolTimer 0100                             _CHANNEL_LABEL 21B9  
                            ?i2_SetRFMode 0001                       __size_ofi1___ftpack 00AE  
                    _controlTransferState 004F      MiApp_UnicastAddress@MiWiFrameControl 03D4  
                    __CFG_LS48MHZ$SYS48X8 000000                         _SYSTEM_Initialize 8628  
                         ___lbmod@divisor 0100                      _MiApp_DiscardMessage BBAA  
                   __size_ofi2_update_LED 0060                                __accesstop 0060  
                      __size_of_WriteFIFO 0042                   __end_of__initialization 9BC8  
                              ___altoft@c 0123                i1USBTransferOnePacket@data 0002  
                         ___lbmod@counter 0102                              __pbssBIGRAMl 0600  
                              ___ftadd@f1 0108                                ___ftadd@f2 010B  
                              ___ftge@ff1 0100                                ___ftge@ff2 0103  
               __end_of_StaticSecurityKey 1FF4                           i1___ftpack@sign 0005  
         MiMAC_ReceivedPacket@currentTick 013B                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0144                             ___rparam_used 000000  
                __size_of_USBStallHandler 0046                  MIWIInterruptHandler@bAck 00D2  
                       CCM_Enc@payloadLen 0127                                ___ftneg@f1 0135  
                  ?_AddNodeToNetworkTable 0001                       __size_of_USBSuspend 002A  
                              ___ftmul@f1 0138                                ___ftmul@f2 013B  
                            i1_update_LED B3EE                          _sendHIDText$4978 010B  
            __end_of_findNextNetworkEntry B7E4                                ___fttol@f1 0114  
                   _ActiveScanResultIndex 01BD                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint B85E                         __end_of_MiWiTasks 3D4A  
                               ?i2_SPIGet 0001                             __end_of_sd000 21D5  
                           __end_of_sd001 2103                             __end_of_sd002 2131  
                               ?i2_SPIPut 0001            __size_of_send_network_register 00B0  
                            __pidataBANK1 BBD1                              __pidataBANK2 BBC8  
                     ??_SYSTEM_Initialize 0100             __end_of_send_network_register A7C4  
        __size_of_USBCtrlEPAllowDataStage 009E                     i2RegisterRead@address 00A8  
                           __end_of_myUID FFF8                             __end_of_floor 93A8  
                           __end_of_frexp AE80                           _active_protocol 0059  
        MiMAC_ReceivedPacket@FrameCounter 013F             __size_of_USBConfigureEndpoint 0094  
                 __end_ofi1_USBDeviceInit 8628               __end_of_USBCtrlTrfInHandler A142  
                               CTR@nounce 011C                   ?_APP_LEDUpdateUSBStatus 0001  
         MiApp_UnicastAddress@DestAddress 017D                           TxPacket@rssival 0121  
             MiApp_NoiseDetection@maxRSSI 0140               MiApp_NoiseDetection@minRSSI 013E  
                         _ConnectionTable 0600                                 ?i1_memset 0001  
                        ??i2_RegisterRead 00A5                               ?_SendBeacon 0001  
               ??_MiMAC_ChannelAssessment 010E                         __end_of_SetRFMode AC2E  
                            ?i2_WriteFIFO 0001                              i2_update_LED B44E  
                              ??_DELAY_ms 010E                    ??_send_periodic_update 0147  
                          ??_RegisterRead 0102              __size_of_UnicastShortAddress 0096  
                  __size_of_sendHIDBinary 0098                  ??_USBCtrlTrfSetupHandler 001B  
                          ?_SendMACPacket 0139                                   ??_floor 0130  
                                 ??_frexp 0105                          ?_USBDeviceAttach 0001  
               __end_of_SYSTEM_Initialize 8766                    _USBStdGetStatusHandler A4E8  
                            sprintf@width 0127                 MiWiTasks@destShortAddress 0173  
                        ?_update_variable 0001                     isSameAddress@Address1 0100  
                   isSameAddress@Address2 0102                         __end_of_dBm_to_mW A374  
                              __pbssBANK0 0060                                __pbssBANK1 0190  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                   ?_MiApp_DiscardMessage 0001               __size_of_MiApp_ProtocolInit 0190  
                                 ?_SPIGet 0001                                   CTR@text 0117  
                                 ?_SPIPut 0001                        RegisterSet@setting 0102  
                          isSameAddress@i 0106                             _m_uptime_days 01B0  
                     i2RegisterRead@value 00A5               __size_of_USBWakeFromSuspend 0030  
                       _m_failed_messages 0032                               _pBDTEntryIn 008B  
                        _MiMAC_SetChannel A42E                      __size_of_sendHIDText 00C4  
        __end_of_USBCtrlEPServiceComplete 968C                                CBC_MAC@MIC 011C  
   __end_of_APP_DeviceCustomHIDInitialize B976    __size_of_APP_DeviceCustomHIDInitialize 0036  
           _APP_DeviceCustomHIDInitialize B940                  MiMAC_SetAltAddress@PANID 0102  
                            CBC_MAC@block 0121                        _mW_ufixed16_to_dBm 9E30  
                              CBC_MAC@len 0119                                CBC_MAC@key 011A  
                               ?_TxPacket 010A                                 ?_RtccWrOn 0001  
                    USBCtrlTrfRxService@i 0001                          _MiMAC_SendPacket 6B48  
                              ??i2_SPIGet 00A5                               _UpF_updated 009E  
                                 ?___ftge 0100                            _MiMAC_SetPower B85E  
                              ??i2_SPIPut 00A3                                   ?___lmul 0100  
                          dBm_to_mW@power 0102                                   ?___wmul 0100  
          __end_of_APP_LEDUpdateUSBStatus B822                                   ?_encode 0100  
                   __size_of_MiWi_TickGet 0074                                 ?___altoft 0123  
                                 ?_memcpy 0100                                   _CBC_MAC 91A0  
                                 ?_memset 0100                            ___lmul@product 0108  
                              _device_dsc 2177                       ?_mW_ufixed16_to_dBm 0100  
                                 SPIPut@i 0100                                   SPIPut@v 0101  
                               ?___ftpack 0100                          _USBCtrlEPService 9BD2  
                        ?_decode_variable 010A                                   _CCM_Dec 7E74  
                                 _CCM_Enc 88A2                                _ep_data_in 0095  
                  ??_SearchForLongAddress 0100                         __end_of_WriteFIFO B764  
                                 ?_strcpy 0100                               _RegisterSet B60C  
           __size_of_MiApp_NoiseDetection 01EE                                _pUsbBuffer 003E  
             __end_of_USBCtrlTrfRxService 8F88                        _USBCheckStdRequest 968C  
                         MiWiTasks@j_2532 0172                           MiWiTasks@j_2544 0169  
                         MiWiTasks@j_2488 0171                           MiWiTasks@j_2569 016C  
                                 i1l11101 8100                                   i1l11021 AAAE  
                                 i1l10311 A5E2                                   i1l10303 A5B8  
                                 i1l10401 9426                                   i1l11113 A52C  
                                 i1l11041 98AC                                   i1l11025 AACA  
                                 i1l10323 A63E                                   i1l10411 9450  
                                 i1l11211 68BA                                   i1l11203 6868  
                                 i1l11123 A56C                                   i1l11051 98E0  
                                 i1l10341 B420                                   i1l11141 6682  
                                 i1l11045 98B4                                   i1l10335 B40A  
                                 i1l10407 9444                                   i1l10423 947A  
                                 i1l10441 B808                                   i1l10417 946E  
                                 i1l11209 68AE                                   i1l11161 6740  
                                 i1l10195 ADBE                                   i1l10291 B832  
                                 i1l10435 B7F8                                   i1l10531 B1EA  
                                 i1l11163 6742                                   i1l11155 66FC  
                                 i1l11075 7FDC                                   i1l10603 BA50  
                                 i1l11067 992A                         _configDescriptor1 2131  
                                 i1l10349 B432                                   i1l10533 B1F0  
                                 i1l10295 B840                                   i1l10535 B1F6  
                                 i1l10543 B208                                   i1l11183 67E6  
                                 i1l11167 675E                                   i1l11095 80F0  
                                 i1l11087 808E                                   i1l11079 7FF4  
                                 i1l10449 B818                                   i1l10385 93E4  
                                 i1l10537 B1FC                                   i1l11193 682C  
                                 i1l11177 67B0                                   i1l11097 80F8  
                                 i1l11089 8096                                   i1l13201 9C8A  
                                 i1l10563 9A46                                   i1l10387 93EC  
                                 i1l10379 93C8                                   i1l10395 9404  
                                 i1l10539 B202                                   i1l11195 6838  
                                 i1l11179 67CC                                   i1l11515 9638  
                                 i1l13203 9C90                                   i1l10397 9416  
                                 i1l11613 973A                                   i1l10567 9A50  
                                 i1l11543 8EA0                                   i1l10577 9A7C  
                                 i1l10585 9AB4                                   i1l11561 8F22  
                                 i1l11609 971C                                   i1l13145 BA02  
                                 i1l10587 9ABC                                   i1l10595 9AF4  
                                 i1l13147 BA04                                   i1l11565 8F3C  
                                 i1l11549 8EC4                                   i1l12703 A13C  
                                 i1l10599 BA40                                   i1l11583 96A6  
                                 i1l11495 95BC                                   i1l22241 B254  
                                 i1l11585 96AC                                   i1l13185 9C22  
                                 i1l13169 B690                                   i1l11595 96CE  
                                 i1l11587 96B2                                   i1l11597 96D4  
                                 i1l13197 9C70                                   i1l13189 9C2A  
                                 i1l13701 A7EC                                   i1l10991 A002  
                                 i1l12663 B504                                   i1l12655 B4BC  
                                 i1l22239 B220                                   i1l11599 96DA  
                                 i1l13631 855A                                   i1l13615 8528  
                                 i1l13711 A848                                   i1l13703 A80A  
                                 i1l12691 A0F8                                   i1l13643 858E  
                                 i1l13619 8530                                   i1l13707 A820  
                                 i1l12677 A0B2                                   i1l13653 85F2  
                                 i1l13709 A83E                                   i1l12679 A0B6  
                                 i1l13647 8596                                   i1l13639 8572  
                                 i1l12697 A118                                   u1650_21 753E  
                                 i1l14811 821A                                   i1l14731 8130  
                                 i1l16323 00A0                                   i1l15533 75AA  
                                 i1l16333 010C                                   i1l16317 0076  
                                 i1l13695 A7D4                                   i1l15527 7580  
                                 i1l16351 013A                                   i1l16327 00C4  
                                 i1l14817 823A                                   i1l14761 816E  
                                 i1l14753 815E                                   i1l15561 7618  
                                 u1651_21 7552                                   i1l16345 012A  
                                 i1l14819 8256                                   i1l14739 8140  
                                 i1l13699 A7E2                                   i1l15555 75FC  
                                 i1l16347 012E                                   i1l16355 0146  
                                 i1l15557 7606                                   i1l15549 75DA  
                                 i1l14791 81D8                                   i1l14783 81B0  
                                 i1l14767 8194                                   i1l15575 7684  
                                 i1l15567 763A                                   i1l15559 7610  
                                 i1l14777 81A4                                   i1l15585 76B4  
                                 i1l15569 7644                                   i1l14797 81EC  
                  ??_MiMAC_ReceivedPacket 0133                                   i2l12951 AC76  
                                 i2l12943 AC4A                                   i2l12961 ACA2  
                                 i2l13681 B480                                   i2l12955 AC8C  
                                 i2l12947 AC60                                   i2l12939 AC34  
                                 i2l13675 B46A                                   i2l13689 B492  
                                 i2l19003 B1C4                        __CFG_OSC$INTOSCPLL 000000  
                                 i2l19513 73A6                                   i2l19531 73FE  
                                 i2l19509 738A                                   i2l19543 7430  
                                 i2l19535 741A                                   i2l19801 4ECA  
                                 i2l19563 747C                                   i2l19547 743C  
                                 i2l19811 4EF4                                   i2l19573 7512  
                                 i2l19821 4F16                                   i2l19559 746C  
                                 i2l19575 751A                                   i2l19911 51F0  
                                 i2l19903 51BC                                   i2l19569 74FE  
                                 i2l19921 5286                                   i2l19841 4F9E  
                                 i2l19833 4F52                                   i2l19825 4F26  
                                 i2l19931 52AE                                   i2l19915 51FA  
                                 i2l19941 5342                                   i2l19909 51EA  
                                 i2l19927 52A8                                   i2l19871 50FC  
                                 i2l19855 4FDC                                   i2l19943 535A  
                                 i2l19951 5372                                   i2l19865 5072  
                                 i2l19873 5100                                   i2l19785 4E94  
                                 i2l19945 5368                                   i2l19883 514A  
                                 i2l19875 511A                                   i2l19859 4FEC  
                                 i2l19947 536E                                   i2l18989 B188  
                                 i2l19965 53A0                                   i2l19797 4EBC  
                                 i2l19789 4E9E                                   i2l19879 5140  
                                 i2l19889 5178                                   i2l19899 51B2  
                          _LED_brightness 005B                                ??i1_memset 0007  
                         MiWiTasks@cIndex 016B               __end_of_USBCtrlTrfTxService 9AFC  
                     _USBStdSetCfgHandler 986A                     i2WriteFIFO@IRQ0select 00A7  
                   i2WriteFIFO@IRQ1select 00A6                           sendHIDText@size 010F  
                                 _RPINR21 000EFC                                   _RPINR22 000EFD  
                                 _SSP2BUF 000F75                           MiWiTasks@handle 0177  
        MIWIInterruptHandler@ackInfoIndex 00D4                                 ?_labelcmp 0100  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 014E  
                                 _RF_Mode 009B                                   _AckInfo 0248  
                                 _UIEbits 000F36                                   _RSSIVal 009C  
                         MiWiTasks@jitter 0162                              ??_RTCC_reset 0100  
                                 _UIRbits 000F62              __size_of_MiMAC_SetAltAddress 0002  
                    ??_mW_ufixed16_to_dBm 0101                     _MiApp_StartConnection 9094  
                        __CFG_CFGPLLEN$ON 000000               AddNodeToNetworkTable@handle 0109  
           __size_of_send_complete_update 0432                         ?_SYS_InterruptLow 0001  
                ??i1_USBTransferOnePacket 0005                           _timerExtension1 00A1  
                         _timerExtension2 00A2                               TxPacket@CCA 010A  
                MiApp_ConnectionMode@Mode 0101                           __size_of_SPIGet 000A  
                         __size_of_SPIPut 001C               __end_of_MiMAC_DiscardPacket BADA  
                      ??_SYS_InterruptLow 001F                                DELAY_ms@ms 010C  
                     _AcknowledgementAddr 01B3                              _MiWi_TickGet B100  
            __end_of_MIWIInterruptHandler 53BC                    __end_of_MiMAC_SetPower B898  
                                 __Hparam 0000                            _LED_increasing 0045  
                    ?_USBStdSetCfgHandler 0001               __size_of_USBCheckHIDRequest 00FC  
                                 __Lparam 0000                         __end_of_hid_rpt01 2177  
            __end_of_MiApp_ConnectionMode BA36                              ??i2_TxPacket 00AE  
                              ??_TxPacket 010B                                ??_RtccWrOn 0100  
                           _sendHIDBinary AAFE                                CCM_Dec@key 0128  
                     __size_of_SendBeacon 013C              __end_of_MiApp_UnicastAddress 622A  
              __size_of_USBEnableEndpoint 003C                      ??_USBCheckStdRequest 001B  
                         __size_of___ftge 00C8             __size_of_USBCtrlTrfOutHandler 005C  
                 __size_ofi2_MiWi_TickGet 0074                              ??i1___ftpack 0006  
                                 ___awdiv A142                          _ToSendDataBuffer 0384  
                         __size_of___lmul 0076                                   ___ftadd 68E0  
                                 ___lbmod B6DE                     MIWIInterruptHandler@i 00D7  
                              CCM_Enc@key 0128                                   ___ftneg B9AA  
                        ??_USBDeviceTasks 001E                           __size_of___wmul 0036  
                                 ___ftmul 7D16                                _myAppState 0052  
                                 ___fttol 825E                          _MiApp_SetChannel BADA  
                                 ___lwdiv B012                         ??_USBStallHandler 0001  
                                 ___lwmod B2CA                           __size_of_encode 021A  
                              ??___altoft 0127                           __CFG_STVREN$OFF 000000  
                   __CFG_RTCOSC$INTOSCREF 000000                          ?i1_USBDeviceInit 0001  
                          _tempNodeStatus 00A0                                   __pcinit 9AFC  
                         __size_of_memcpy 0062                                ??___ftpack 0105  
                         __size_of_memset 0034                 __end_of_configDescriptor1 215A  
                                 __ramtop 0F00                      SendMACPacket@Address 0139  
                                 __ptext0 3D4A                                   __ptext1 977E  
                            ??_MiMAC_Init 0115                                   __ptext2 9E30  
                                 __ptext3 A65C                                   __ptext4 B85E  
                                 __ptext5 B38E                                   __ptext6 BB54  
                                 __ptext7 B8D2                                   __ptext8 53BC  
                                 __ptext9 BA62                                   _inPipes 0081  
                      __end_of_RTCC_reset BB1C                                   _myPANID 01F0  
                                 _myMODEL FFF4               _USBDeferOUTDataStagePackets 0049  
                            __size_of_CTR 0120                           __size_of_strcpy 0038  
                       __end_of_hexpowers 20C3                                 _T1CONbits 000FCD  
                                 _dpowers 20B1                              ??_USBSuspend 0015  
                                 _m_power 01C8                  ??_MiApp_MessageAvailable 017D  
                               _T2CONbits 000FCA                     MiApp_NoiseDetection@i 013F  
                   MiApp_NoiseDetection@j 013B                                   _isdigit BA62  
                   MiApp_NoiseDetection@k 013C                             _myLongAddress 01E8  
                               _T4CONbits 000F76                           ??_SendMACPacket 013C  
                  RegisterRead@IRQ0select 0104                     MiApp_UnicastAddress@i 03D5  
                  RegisterRead@IRQ1select 0103                                   encode@i 0110  
                    _findNextNetworkEntry B7A6                        __end_of_USB_CD_Ptr 20CF  
                              ??_labelcmp 0104                __size_of_SYSTEM_Initialize 013E  
                                 _sprintf 53BC           __size_of_USBCtrlTrfSetupHandler 008E  
                  ??_MiApp_DiscardMessage 0100                            __pintcode_body B25A  
                      __end_ofi2_TxPacket 752E                      end_of_initialization 9BC8  
                        _MiWiStateMachine 01B5            __size_of_encode_uint8_variable 00A6  
           __end_of_encode_uint8_variable A9C2                        __end_of_USB_SD_Ptr 20C9  
                    __size_of_timer_reset 001A          MiApp_NoiseDetection@ScanDuration 0121  
                               i2SPIPut@i 00A3                                 i2SPIPut@v 00A4  
                      __end_ofi1___ftpack A872                  dBm_to_mW_ufixed16@value1 0100  
                dBm_to_mW_ufixed16@value2 0102                                   memcpy@d 0106  
                                 memcpy@n 0104                                   memcpy@s 0108  
                     _pBDTEntryEP0OutNext 003A                                   memset@c 0102  
                                 memset@n 0104                                   memset@p 0106  
                               i1u1071_20 80E4                                 i1u1071_27 80DA  
           MIWIInterruptHandler@BankIndex 00D6             MiMAC_SendPacket@MACPayloadLen 0134  
                               i1u1068_20 8052                                 i1u1068_27 8048  
                               i1u1069_20 8088                                 i1u1069_27 807E  
                                 int_func B25A                      __size_ofi2_SetRFMode 0098  
                 SendMACPacket@PacketType 013B                                 i1u1757_20 0094  
                ?_USBStdFeatureReqHandler 0001                                 i2u1160_45 B6CE  
                               i2u1160_46 B6D0                                 i2u1161_45 B6DA  
                               i2u1161_46 B6DC                                 i2u1360_45 B5A6  
                               i2u1360_46 B5A8                                 i2u1361_45 B5B2  
                               i2u1361_46 B5B4                                 i2u1362_45 B796  
                               i2u1362_46 B798                                 i2u1363_45 B7A2  
                               i2u1363_46 B7A4                     ??_USBStdSetCfgHandler 0015  
                      __end_of_MiMAC_Init 84E6                           ?_MiMAC_SetPower 0001  
                          ?_sendHIDBinary 010A               MIWIInterruptHandler@counter 00CB  
             encode_uint8_variable@buffer 0100                        __end_of_USBSuspend BAB6  
           encode_uint8_variable@m_signed 010D                   _USBCtrlEPAllowDataStage AA60  
                 MiMAC_SetChannel@channel 0109                                   postdec1 000FE5  
                                 postdec2 000FDD                      __end_of_RegisterRead B562  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     __end_of_isSameAddress B60C  
                _USBCtrlEPServiceComplete 9598      DELAY_ms@cyclesRequiredForEntireDelay 010E  
                     RegisterRead@address 0105                     MiWiTasks@CapacityByte 0170  
                           WriteFIFO@Data 0102                _USBStatusStageEnabledFlag1 004C  
              _USBStatusStageEnabledFlag2 004D                                _timer_flag 01CB  
                      USBEnableEndpoint@p 000A                           _InitSymbolTimer BB6E  
                   __end_ofi2_RegisterSet B6DE            encode_ufixed16_variable@buffer 0100  
                        ___lbmod@dividend 0101                                _update_LED B38E  
                             _Pwr_updated 009A                                labelcmp@p1 0100  
                              labelcmp@p2 0102                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                      _ReceivedDataBuffer 0400                                encode@text 0100  
                      _BothEP0OutUOWNsSet 0044                     ?_findNextNetworkEntry 0001  
                           _mySecurityKey 0079                                 i1___ftadd 752E  
                 MiMAC_SendPacket@TxIndex 0137             MIWIInterruptHandler@PacketLen 00D5  
                           ?_RouteMessage 013D                 USBConfigureEndpoint@EPNum 0006  
                    __size_ofi2_WriteFIFO 0042                    ?_MiApp_StartConnection 0141  
              ?_USBCtrlEPAllowStatusStage 0001                  _encode_ufixed16_variable A200  
                       __size_of_DELAY_ms 00AA       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 0058                  RouteMessage@ShortAddress 013F  
                             ___lbmod@rem 0103                         CCM_Dec@payloadLen 0127  
              MiMAC_SendPacket@transParam 012F                  i1USBTransferOnePacket@ep 0005  
                   _send_answer_to_update 7884                        _dBm_to_mW_ufixed16 8B06  
                              _status_led 0055              __end_of_USBTransferOnePacket 9A24  
                 ??_AddNodeToNetworkTable 0106                               _CCP1CONbits 000FBA  
              MiMAC_SetAltAddress@Address 0100           __size_ofi1_USBTransferOnePacket 00BA  
               MiApp_UnicastAddress@SecEn 0180                            __end_of_PVALUE 2091  
                          __end_of_SVALUE 20B1                            __end_of_SPIGet BBBE  
                          __end_of_SPIPut BB38                    SearchForShortAddress@i 0102  
                             ___ftmul@exp 0141                       ?_dBm_to_mW_ufixed16 0100  
                     _UnicastShortAddress ACC6                    _USBCtrlTrfSetupHandler AE80  
                   __end_of_USBDeviceInit 7D16                            __end_of___ftge 9D68  
                          __end_of___lmul B100                              sendHIDText@c 010A  
                            sendHIDText@p 010D                            __end_of___wmul B940  
                       __size_ofi2_SPIGet 000A                         __size_ofi2_SPIPut 001C  
                               i1memset@c 0003                                 i1memset@n 0005  
                               i1memset@p 0007                             __pidataCOMRAM BBCE  
                               _MiWiTasks 23C6                            __end_of_encode 6FB6  
                          __end_of_memcpy B38E                            __end_of_memset B9AA  
                              floor@expon 0133                         _USBBusIsSuspended 0047  
                          __end_of_strcpy B90A           __size_of_MiApp_MessageAvailable 0012  
        MiMAC_ReceivedPacket@PayloadIndex 0145                  __end_of_MiMAC_SetChannel A4E8  
                     start_initialization 9AFC                     _SearchForShortAddress AF0E  
                            ??_SendBeacon 013D                   ?_USBStdGetStatusHandler 0001  
                             __end_of_CTR 8E70             MiApp_NoiseDetection@RSSIValue 0123  
           USBCtrlTrfRxService@byteToRead 0002                      ??_dBm_to_mW_ufixed16 0104  
                    _MIWIInterruptHandler 4E6C                      ?_UnicastShortAddress 0148  
                     WriteFIFO@IRQ0select 0104                             TxPacket@reTry 011C  
           MiApp_NoiseDetection@RSSIcheck 013D                       WriteFIFO@IRQ1select 0103  
                              ?i1___ftadd 0009                  __end_of_MiMAC_SendPacket 6D9C  
                          ??_RouteMessage 0142                      _MiApp_ConnectionMode BA0A  
                      TxPacket@CCARetries 011B                         __size_ofi1_memset 002C  
              i2TxPacket@allowedTxFailure 00C1                      _MiApp_UnicastAddress 5DC0  
            __end_of_USBConfigureEndpoint ADF0             MIWIInterruptHandler@ackPacket 00CE  
         __end_of_USBStdFeatureReqHandler 68E0                                 _SetRFMode AB96  
       __end_of_USBCtrlEPAllowStatusStage A07E                  __size_of_BroadcastJitter 00BA  
                                CBC_MAC@i 0123                                  CBC_MAC@j 0122  
                              frexp@value 0100                  __end_of_USBCtrlEPService 9CA0  
                                ??_SPIGet 0102                                  ??_SPIPut 0100  
                         ??_sendHIDBinary 010D                                 _dBm_to_mW A2BA  
               ??_USBCtrlEPAllowDataStage 0002                            _currentChannel 01F6  
                          USBDeviceInit@i 0108                                 TxPacket@i 0120  
                  _pBDTEntryEP0OutCurrent 0038                                  CCM_Dec@i 0132  
                 USBTransferOnePacket@dir 0100                                  CCM_Enc@i 012E  
                 USBTransferOnePacket@len 0103                                  ??___ftge 0106  
                 __end_of_InitSymbolTimer BB86                            i2_MiWi_TickGet B174  
                                ??___lmul 0108                        __end_of_SendBeacon 88A2  
                                ??___wmul 0104         MiApp_UnicastAddress@PermanentAddr 017F  
                     _USBStdGetDscHandler 7FCA                                  ??_encode 0104  
                             __pdataBANK1 01F8                               __pdataBANK2 02F9  
                mW_ufixed16_to_dBm@value1 0101                         __size_of_TxPacket 01AA  
                mW_ufixed16_to_dBm@value2 0100                         __size_of_RtccWrOn 0012  
                     _MiMAC_SetAltAddress BBD4                                  ??_memcpy 0106  
                                ?_CBC_MAC 0117                                  ??_memset 0106  
            MiApp_StartConnection@channel 0148                     _send_network_register A714  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 0124  
                                ?_CCM_Enc 0124                    i1_USBTransferOnePacket A5A2  
                            ?_RegisterSet 0102                                  ??_strcpy 0104  
                       __size_of___altoft 009E             MIWIInterruptHandler@fifo_stat 00CD  
                             _ALRMCFGbits 000F47                    _USBActiveConfiguration 0056  
          __end_of_USBStdGetStatusHandler A5A2                         RegisterRead@value 0102  
                       __size_of___ftpack 010C                 i1USBTransferOnePacket@dir 0001  
               i1USBTransferOnePacket@len 0004                   MiWi_TickGet@currentTime 0106  
                             __pbssCOMRAM 0032                    ??_findNextNetworkEntry 0100  
                             ?_update_LED 0001                     ?_MIWIInterruptHandler 0001  
                   ??_UnicastShortAddress 014A                                 _WriteFIFO B722  
                           __pcstackBANK0 00A3                             __pcstackBANK1 0100  
                           __pcstackBANK3 03C4              __size_of_USBCtrlTrfInHandler 00C4  
                   ?_MiApp_ConnectionMode 0001                                  CTR@block 0121  
                             _defaultHops 01F9                     ?_MiApp_UnicastAddress 017D  
                    ?_USBStdGetDscHandler 0001                              _isdigit$5576 0101  
              __end_of_MiApp_ProtocolInit 7BB6                  __end_of_MiApp_SetChannel BAFE  
           __size_of_send_periodic_update 01DA                                ?_SetRFMode 0001  
              __end_of_TX_POWER_N_2_DB_MW 21A9                      ?_MiMAC_SetAltAddress 0100  
                  ?_send_answer_to_update 0001                          __p_myMODEL_const FFF4  
              __end_of_TX_POWER_N_5_DB_MW 21AF                       __end_of_PANID_LABEL 20CD  
                             MiMAC_Init@i 0115                         __size_of_labelcmp 00B8  
                           ??_sendHIDText 0109                __end_of_USBWakeFromSuspend BA0A  
            __end_of_MiApp_NoiseDetection 71A4                __end_of_TX_POWER_N_8_DB_MW 2197  
                             sprintf@flag 0126                               sprintf@prec 011D  
                         _USBStallHandler B652                              _pBDTEntryOut 008F  
                     sendHIDBinary@buffer 010A                                ?_dBm_to_mW 0100  
                     sendHIDBinary@length 010C                     __size_of_RegisterRead 0058  
                  _MiApp_MessageAvailable BB98                  __size_of_USBDeviceAttach 003A  
                __size_of_update_variable 00EC                    __end_ofi2_MiWi_TickGet B1E8  
                               _main$4902 03D8                                 _main$4925 03DA  
                       MiMAC_SendPacket@i 0138                          ___lwdiv@dividend 0100  
                        _MiWiCapacityInfo 01C2           encode_uint8_variable@m_writable 010E  
                             CBC_MAC@text 0117                                 __pintcode 0008  
                           __pmediumconst 1FF4                                  ?___awdiv 0106  
                               __ptext100 A4E8                                 __ptext101 7FCA  
                               __ptext110 AD5C                                 __ptext102 665C  
                               __ptext111 B4AE                                 __ptext103 B1E8  
                               __ptext120 B764                                 __ptext112 8E70  
                               __ptext104 93A8                                 __ptext121 AC2E  
                               __ptext113 9FBA                                 __ptext105 B7E4  
                               __ptext122 B698                                 __ptext114 A07E  
                               __ptext106 B3EE                                 __ptext123 B562  
                               __ptext115 9A24                                 __ptext107 B940  
                               __ptext124 BBBE                                 __ptext108 A5A2  
                               __ptext125 BB38                                 __ptext117 4E6C  
                               __ptext109 B822                                  ?___ftadd 0108  
                               __ptext126 B174                                 __ptext118 B44E  
                               __ptext119 737E                 MiMAC_SendPacket@headerLen 0136  
                                ?___lbmod 0100                                  ?___ftneg 0135  
                                ?___ftmul 0138                                  ?___fttol 0114  
                                ?___lwdiv 0100                                  ?___lwmod 0107  
             MiApp_UnicastAddress@t1_2749 03CC               MiApp_UnicastAddress@t2_2760 03D0  
                               _hid_rpt01 215A              __end_of_send_complete_update 665C  
                             __pintcodelo 0018                 __size_of_SYS_InterruptLow 01CC  
                               _idle_rate 005A                  ?_MiMAC_ChannelAssessment 0001  
                          MiWiTasks@entry 017A                      _USBTransferOnePacket 994C  
                  ?_SearchForShortAddress 0001             __size_of_SearchForLongAddress 00C8  
                                ?_isdigit 0001                                ?_WriteFIFO 0001  
                      _AcknowledgementSeq 01F8                                  _CCPTMRS0 000F52  
           __size_of_MiMAC_ReceivedPacket 04B8                                  _DELAY_ms A872  
            __end_of_USBCtrlTrfOutHandler B50A                          CCM_Dec@headerLen 0126  
                             ??i1___ftadd 000F                                 _hexpowers 20BB  
                   ??_USBStdGetDscHandler 0001               MiWiTasks@sourceShortAddress 0178  
                __size_of_decode_variable 00F4                                 _last_rssi 0051  
                             _ep_data_out 0097                          ___lwdiv@quotient 0105  
                                ?_sprintf 010C                            __size_of_floor 00FE  
                          __size_of_frexp 0090              __size_of_USBCtrlTrfRxService 0118  
                            _RegisterRead B50A             USBConfigureEndpoint@direction 0001  
                   ??_MiMAC_SetAltAddress 0104                          MiWiTasks@t1_2546 0156  
                        MiWiTasks@t2_2557 015A                 MiMAC_SetPower@outputPower 0108  
             __size_of_mW_ufixed16_to_dBm 00C6                          ??_MiMAC_SetPower 0106  
             encode_ufixed16_variable@var 0102              __size_of_USBCtrlTrfTxService 00D8  
                  _UPDATE_FREQUENCY_LABEL 21C9                            ___wmul@product 0104  
                 __size_ofi2_RegisterRead 0058                                  _LATAbits 000F89  
                                _LATBbits 000F8A                      i2RegisterSet@setting 00A5  
                                _LATCbits 000F8B                __end_of_USBCheckHIDRequest 94A4  
              MiWiTasks@coordinatorNumber 0168                                 _tempPANID 01BB  
              ??_USBCtrlEPServiceComplete 0002                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _IPR3bits 000FA5  
                                _PIE2bits 000FA0                   dBm_to_mW_ufixed16@power 0104  
                                _PIE3bits 000FA3                     MiWiTasks@CoordAddress 015E  
                         ?i2_MiWi_TickGet 00A3                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_BroadcastJitter 010A                       __end_of_NOISE_LABEL 21C1  
                               _rxMessage 0190                 USBCtrlEPService@setup_cnt 001D  
                                i1u993_20 9AA6                                  i1u993_27 9A9C  
                                i1u995_20 9AE6                                  i1u995_27 9ADC  
                     __size_of_update_LED 0060                       __end_of_sendHIDText 9FBA  
                                _RCONbits 000FD0                                  i2_SPIGet BBBE  
                                _UEP0bits 000F26                                  i2_SPIPut BB38  
                        ?_InitSymbolTimer 0001                _USBDeferINDataStagePackets 0048  
                                _SSP2CON1 000F72               __size_of_USBCheckStdRequest 00F2  
                    __end_of_RouteMessage 4E6C                  encode_uint8_variable@var 0102  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
            __size_of_MiMAC_DiscardPacket 0024                    ?_send_network_register 0001  
         MIWIInterruptHandler@RxPacketPtr 00D3                      _USBConfigureEndpoint AD5C  
       MiApp_StartConnection@ScanDuration 0141                               ??_MiWiTasks 014A  
                             _MACRxPacket 019A                           main@last_update 03D7  
                               encode@key 0102                                 encode@sum 0115  
                                _RSSILock 01C4          __size_of_USBStdFeatureReqHandler 0284  
                             _MACTxBuffer 0266                             SetRFMode@mode 0106  
                        __size_of_CBC_MAC 010A          encode_ufixed16_variable@m_signed 010D  
                         _m_sent_messages 0087                         ___wmul@multiplier 0100  
                   ?_USBTransferOnePacket 0100                          MiWiTasks@rxIndex 016F  
                        __size_of_CCM_Dec 0156                          __size_of_CCM_Enc 0134  
              ??_encode_ufixed16_variable 010C                    ??_MIWIInterruptHandler 00C5  
                       _SYS_InterruptHigh 0008                         RouteMessage@PANID 013D  
                   i2TxPacket@TxPacketLen 00C2                                  i1_memset BA36  
                  ??_MiApp_ConnectionMode 0100                              _RemoteWakeup 0046  
          MiApp_NoiseDetection@ChannelMap 011D                      _OutgoingFrameCounter 01A2  
                               main@power 03DC                    ??_MiApp_UnicastAddress 0181  
                 ??_MiApp_StartConnection 0146                               _PANID_LABEL 20C9  
                      ?_SYS_InterruptHigh 0001                         RouteMessage@SecEn 0141  
                __size_ofi1_USBDeviceInit 0142                           _MiWiAckRequired 01C1  
                           ??_timer_reset 0100                   __end_of_USBStallHandler B698  
                   __end_of_SendMACPacket B012                                  _ConnMode 01BF  
                    __end_of_UPTIME_LABEL 21D1                 _send_complete_update$6065 0148  
               _send_complete_update$6066 014B                 _send_complete_update$6067 014E  
               _send_complete_update$6068 0151                     __end_of_CHANNEL_LABEL 21BD  
                       ___lmul@multiplier 0100                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 9B80  
                           ??i2_SetRFMode 00A9                               ??_SetRFMode 0106  
             ??_USBCtrlEPAllowStatusStage 0001               __end_of_USBStdSetCfgHandler 994C  
                   SearchForLongAddress@i 0105                     SearchForLongAddress@j 0104  
           __size_of_MiApp_DiscardMessage 000A                       ??_SYS_InterruptHigh 00D8  
                                _TxMACSeq 009D                                  _ScanTime 2035  
                   _encode_uint8_variable A91C                        __end_of_device_dsc 2189  
                             ??_dBm_to_mW 0102                                 frexp@eptr 0103  
                                __Hparam0 0000                  ??_APP_LEDUpdateUSBStatus 0001  
          __size_of_AddNodeToNetworkTable 0124                   ?_USBCtrlTrfSetupHandler 0001  
           __end_of_AddNodeToNetworkTable 8D50                   USBStdGetStatusHandler@p 0002  
                                __Lparam0 0000                             ?i1_update_LED 0001  
                                _RxPacket 0300                                  _TxBuffer 02A6  
                  USBTransferOnePacket@ep 0104                                  _TxPacket 76DA  
                                _RtccWrOn BB86                                  _SetupPkt 000D20  
                             CCM_Dec@text 0124           __end_of_MiMAC_ChannelAssessment 8B06  
                   ?_USBConfigureEndpoint 0001                     MiMAC_ReceivedPacket@i 0146  
                   MiMAC_ReceivedPacket@j 0144                     MiMAC_ReceivedPacket@k 0143  
                       ??_USBDeviceAttach 0100                       __end_of_POWER_LABEL 21C5  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___lbmod 0044                          __size_of___ftneg 0030  
                                ___altoft A9C2                          __size_of___ftmul 015E  
                       ??_update_variable 0109                          __size_of___fttol 0144  
                         _tempLongAddress 01A6                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                                  ___ftpack 8F88  
                             CCM_Enc@text 0124                 __end_of_SYS_InterruptHigh B2CA  
                i2RegisterRead@IRQ0select 00A7                      _MiApp_NoiseDetection 6FB6  
                i2RegisterRead@IRQ1select 00A6                        _sendHIDBinary$4975 010E  
                MiMAC_ChannelAssessment@i 011C                  MiMAC_ChannelAssessment@k 0119  
                  AddNodeToNetworkTable@i 0108                                sprintf@idx 011C  
                              sprintf@len 0122                                sprintf@val 0124  
                    __size_of_RegisterSet 0046                          main@shortaddress 03E1  
                           ??i2_WriteFIFO 00A5                             ?i2_update_LED 0001  
                             ??_WriteFIFO 0102                          __size_of_isdigit 002A  
                       ?_MiMAC_SetChannel 0107                   __size_of_USBDeviceTasks 0146  
                         ___lwdiv@divisor 0102                           ___lwdiv@counter 0104  
                                __ptext10 B90A                                  __ptext11 B2CA  
                                __ptext20 A9C2                                  __ptext12 71A4  
                                __ptext21 B9AA                                  __ptext13 A714  
                                __ptext30 994C                                  __ptext22 7D16  
                                __ptext14 622A                                  __ptext31 94A4  
                                __ptext23 8F88                                  __ptext15 92AA  
                                __ptext40 5DC0                                  __ptext32 B32C  
                                __ptext24 7884                                  __ptext16 ADF0  
                                __ptext41 BB98                                  __ptext33 A2BA  
                                __ptext25 AAFE                                  __ptext17 825E  
                                __ptext50 88A2                                  __ptext42 23C6  
                                __ptext34 7BB6                                  __ptext26 A91C  
                                __ptext18 9CA0                                  __ptext51 5908  
                                __ptext43 ACC6                                  __ptext35 B976  
                                __ptext27 A200                                  __ptext19 68E0  
                                __ptext60 B7A6                                  __ptext52 B5BA  
                                __ptext44 4812                                  __ptext36 B898  
                                __ptext28 8B06                                  __ptext61 AF0E  
                                __ptext53 7E74                                  __ptext45 8766  
                                __ptext37 8628                                  __ptext29 9EF6  
                                __ptext70 A142                                  __ptext62 9D68  
                                __ptext54 8D50                                  __ptext46 AF96  
                                __ptext38 BAFE                                  __ptext71 B50A  
                                __ptext63 BBAA                                  __ptext55 91A0  
                                __ptext47 6B48                                  __ptext39 BB86  
                                __ptext80 AB96                                  __ptext72 BBB4  
                                __ptext64 BAB6                                  __ptext56 6D9C  
                                __ptext48 76DA                                  __ptext81 B60C  
                                __ptext73 7A26                                  __ptext65 9094  
                                __ptext57 A374                                  __ptext49 B722  
                                __ptext90 B9DA                                  __ptext82 BB1C  
                                __ptext74 BBD4                                  __ptext66 6FB6  
                                __ptext58 B6DE                                  __ptext91 BA8C  
                                __ptext83 BB6E                                  __ptext75 83A2  
                                __ptext67 B100                                  __ptext59 8C2C  
                                __ptext92 B652                                  __ptext84 BA0A  
                                __ptext76 A872                                  __ptext68 89D6  
                                __ptext93 9BD2                                  __ptext77 B08A  
                                __ptext69 B012                                  __ptext94 AE80  
                                __ptext86 752E                                  __ptext78 BADA  
                                __ptext95 9598                                  __ptext87 A7C4  
                                __ptext79 A42E                                  __ptext96 AA60  
                                __ptext88 8118                                  __ptext97 968C  
                                __ptext89 84E6                                  __ptext98 986A  
                                __ptext99 BA36                                  _labelcmp A65C  
                TxPacket@allowedTxFailure 011D                        ??_MiMAC_SetChannel 0108  
                       ?_MiMAC_SendPacket 012F                             _labelcmp$5116 0107  
                            _SSP2CON1bits 000F72                                  _m_buffer 02D1  
                           MiWiTasks@mask 0160                    RouteMessage@parentNode 0146  
                        __size_of_sprintf 054C                    __size_of_isSameAddress 0052  
                              strcpy@from 0102                        ??_MiMAC_SendPacket 0135  
                                _p_buffer 01B9                      _send_complete_update 622A  
                             _NOISE_LABEL 21BD                               _sendHIDText 9EF6  
          __end_of_USBCtrlTrfSetupHandler AF0E                             __size_of_main 0AC8  
                       ?_USBCtrlEPService 0001                    MiApp_NoiseDetection@t1 0132  
                  MiApp_NoiseDetection@t2 0136                       __end_of_timer_reset BB6E  
                       ??_decode_variable 0114                                  _myParent 01C9  
                          ??i1_update_LED 0001                    __size_ofi2_RegisterSet 0046  
                     __end_ofi2_SetRFMode ACC6                        ??_USBCtrlEPService 001B  
                     _USBCtrlTrfInHandler A07E                    MiApp_UnicastAddress@t1 03C4  
                  MiApp_UnicastAddress@t2 03C8                                  _tmpBlock 01EC  
                        _tempShortAddress 01F4                                  _outPipes 0060  
                    _USBCtrlTrfOutHandler B4AE                                  int$flags 005E  
                 ?i1_USBTransferOnePacket 0001                 _USBCtrlEPAllowStatusStage 9FBA  
                       _TX_POWER_10_DB_MW 21AF              i2MiWi_TickGet@failureCounter 00A8  
                       _TX_POWER_13_DB_MW 21B4                          _SYS_InterruptLow 0018  
                  ??_USBTransferOnePacket 0104                                  main@size 03E0  
                                main@rssi 03DD                     ?_MiApp_NoiseDetection 011D  
              MiMAC_SendPacket@MACPayload 0132            ?_APP_DeviceCustomHIDInitialize 0001  
                   __CFG_CPUDIV$OSC3_PLL3 000000                     findNextNetworkEntry@i 0100  
               _USBDeferStatusStagePacket 004A                          i1USBDeviceInit@i 0009  
                             _OSCTUNEbits 000F9B                            ??i2_update_LED 00A3  
                              _INTCONbits 000FF2                           do_UPDATE@F10257 0042  
                            ??_update_LED 0100                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0100                           i2WriteFIFO@Data 00A5  
                                memcpy@s1 0102             USBCtrlTrfTxService@byteToSend 0001  
                 ??_send_answer_to_update 0110               __size_of_dBm_to_mW_ufixed16 0126  
                                isdigit@c 0102                                  memset@p1 0100  
       MiApp_NoiseDetection@DetectionMode 0122                               _repeat_full 0053  
                        ?_USBStallHandler 0001                  USBStdFeatureReqHandler@p 0019  
                                intlevel1 0000                                  intlevel2 0000  
                       ?_MiApp_SetChannel 0001                                 sprintf@ap 0120  
                               sprintf@cp 011E                                 sprintf@sp 010C  
                   ?_send_complete_update 0001                   ?_MiApp_MessageAvailable 0001  
                     __end_ofi2_WriteFIFO B7A6                    __size_of_USBDeviceInit 0160  
                  ?_encode_uint8_variable 0100   __end_of_USER_USB_CALLBACK_EVENT_HANDLER B25A  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0072         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER B1E8  
                          i2_RegisterRead B562                         ??i1_USBDeviceInit 0009  
                        ___lwmod@dividend 0107                               _noise_level 01F7  
                      ??_MiApp_SetChannel 010A      SYSTEM_Initialize@pll_startup_counter 0100  
                           ?_MiWi_TickGet 0100                     __size_of_RouteMessage 065A  
                             _POWER_LABEL 21C1           __size_of_APP_LEDUpdateUSBStatus 003E  
                   __end_of_sendHIDBinary AB96                        _m_update_frequency 01FA  
                      _MiApp_ProtocolInit 7A26                 __end_of_TX_POWER_10_DB_MW 21B4  
          __end_ofi1_USBTransferOnePacket A65C                               _RTCVALHbits 000F3B  
                  ??_USBConfigureEndpoint 0002                     ?_USBCtrlTrfOutHandler 0001  
                             _RTCVALLbits 000F3A                 __end_of_TX_POWER_13_DB_MW 21B9  
                      _TX_POWER_N_2_DB_MW 21A3                             _MACInitParams 01AA  
                      __end_of_update_LED B3EE              __end_of_send_periodic_update 737E  
                     MiMAC_Init@initValue 0112                        _TX_POWER_N_5_DB_MW 21A9  
                     _USBCtrlTrfRxService 8E70                        _USBWakeFromSuspend B9DA  
                      _TX_POWER_N_8_DB_MW 2190                   _USBStdFeatureReqHandler 665C  
                           _isSameAddress B5BA                   ??_SearchForShortAddress 0100  
                     ?_MiApp_ProtocolInit 0001                MiWi_TickGet@failureCounter 0105  
                     _USBCtrlTrfTxService 9A24               __end_of_UnicastShortAddress AD5C  
              __size_of_SYS_InterruptHigh B2C2                                _RTCCFGbits 000F3F  
        __end_of_encode_ufixed16_variable A2BA                            __p_myUID_const FFF6  
                        _BroadcastRecords 0228                                  sprintf@c 0129  
                                sprintf@f 010E                        MiWiTasks@destPANID 016D  
                        _TX_POWER_1_DB_MW 2189                             i2_RegisterSet B698  
                     ?_USBWakeFromSuspend 0001                                _PPSCONbits 000EBF  
                        _TX_POWER_4_DB_MW 2197                               MiWiTasks@t1 0164  
                             MiWiTasks@t2 0152                           ___lwmod@divisor 0109  
                   ??_USBCtrlTrfInHandler 0002                                  strcpy@cp 0104  
                                strcpy@to 0100                     _USBAlternateInterface 0057  
                         ___lwmod@counter 010B                         i2TxPacket@rssival 00C4  
                     TxPacket@TxPacketLen 011F                          _TX_POWER_7_DB_MW 21C5  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 0050  
                             _timer_count 005D                      i2TxPacket@CCARetries 00BF  
           __size_of_findNextNetworkEntry 003E                               _timer_reset BB54  
                    ?_USBCtrlTrfRxService 0001            __end_of_MiApp_MessageAvailable BBAA  
                  __end_ofi2_RegisterRead B5BA                              _RouteMessage 4812  
                        _TX_POWER_INVALID 219D                       _MiMAC_DiscardPacket BAB6  
                       _knownCoordinators 01C7                            _RouterFailures 0069  
                         _BroadcastJitter A374                                _RTCC_reset BAFE  
                             i2_SetRFMode AC2E                                MiWiTasks@i 017C  
                              MiWiTasks@j 017B                  ?_USBCtrlEPAllowDataStage 0001  
        __size_of_MiMAC_ChannelAssessment 0130                      ??_MiApp_ProtocolInit 0116  
                        i2TxPacket@status 00BE                      ?_USBCtrlTrfTxService 0001  
                        ??i2_MiWi_TickGet 00A7                       MiWiTasks@entry_2536 0161  
                         i2TxPacket@reTry 00C0              _USBStatusStageTimeoutCounter 004E  
                          ??_MiWi_TickGet 0104              __end_of_SearchForLongAddress 9E30  
                    ??_USBWakeFromSuspend 0015                             i2TxPacket@CCA 00AD  
          _StaticSecurityKey_absconstaddr 001FEC                 i2MiWi_TickGet@currentTime 00A9  
              USBTransferOnePacket@handle 0105                               encode@delta 010E  
                   RegisterSet@IRQ0select 0105                  MiWiTasks@associateStatus 0163  
                   RegisterSet@IRQ1select 0104              __end_of_MiMAC_ReceivedPacket 5DC0  
                              _USB_CD_Ptr 20CD                              i2TxPacket@t1 00B6  
                            i2TxPacket@t2 00BA                               encode@part1 0111  
                             encode@part2 0113                   ??_send_network_register 0110  
                             i2TxPacket@i 00C3                               _USBInHandle 0093  
