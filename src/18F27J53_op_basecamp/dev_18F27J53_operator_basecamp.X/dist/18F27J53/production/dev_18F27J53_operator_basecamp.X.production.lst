

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 06 07:59:49 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	_myMUTA_version_const,global,ovrld,reloc=2,class=CODE,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1
   129                           	psect	text100,global,reloc=2,class=CODE,delta=1
   130                           	psect	text101,global,reloc=2,class=CODE,delta=1
   131                           	psect	text102,global,reloc=2,class=CODE,delta=1
   132                           	psect	text103,global,reloc=2,class=CODE,delta=1
   133                           	psect	text104,global,reloc=2,class=CODE,delta=1
   134                           	psect	text105,global,reloc=2,class=CODE,delta=1
   135                           	psect	text106,global,reloc=2,class=CODE,delta=1
   136                           	psect	text107,global,reloc=2,class=CODE,delta=1
   137                           	psect	text108,global,reloc=2,class=CODE,delta=1
   138                           	psect	text109,global,reloc=2,class=CODE,delta=1
   139                           	psect	text110,global,reloc=2,class=CODE,delta=1
   140                           	psect	text111,global,reloc=2,class=CODE,delta=1
   141                           	psect	text112,global,reloc=2,class=CODE,delta=1
   142                           	psect	text113,global,reloc=2,class=CODE,delta=1
   143                           	psect	text114,global,reloc=2,class=CODE,delta=1
   144                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   145                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   146                           	psect	text116,global,reloc=2,class=CODE,delta=1
   147                           	psect	text117,global,reloc=2,class=CODE,delta=1
   148                           	psect	text118,global,reloc=2,class=CODE,delta=1
   149                           	psect	text119,global,reloc=2,class=CODE,delta=1
   150                           	psect	text120,global,reloc=2,class=CODE,delta=1
   151                           	psect	text121,global,reloc=2,class=CODE,delta=1
   152                           	psect	text122,global,reloc=2,class=CODE,delta=1
   153                           	psect	text123,global,reloc=2,class=CODE,delta=1
   154                           	psect	text124,global,reloc=2,class=CODE,delta=1
   155                           	psect	text125,global,reloc=2,class=CODE,delta=1
   156                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   157                           	psect	param0,global,class=BANK0,space=1,delta=1
   158                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   159                           	dabs	1,0xD00,32,_BDT
   160                           	dabs	1,0xD28,8,_CtrlTrfData
   161                           	dabs	1,0xD20,8,_SetupPkt
   162  0000                     
   163                           	psect	idataCOMRAM
   164  00BBAC                     __pidataCOMRAM:
   165                           	opt stack 0
   166                           
   167                           ;initializer for _LED_brightness
   168  00BBAC  00EB               	dw	235
   169                           
   170                           ;initializer for _timer_count
   171  00BBAE  01                 	db	1
   172                           
   173                           	psect	idataBANK1
   174  00BBAF                     __pidataBANK1:
   175                           	opt stack 0
   176                           
   177                           ;initializer for _AcknowledgementSeq
   178  00BBAF  FF                 	db	255
   179                           
   180                           ;initializer for _defaultHops
   181  00BBB0  04                 	db	4
   182                           
   183                           ;initializer for _m_update_frequency
   184  00BBB1  01                 	db	1
   185                           
   186                           	psect	idataBANK2
   187  00BBA6                     __pidataBANK2:
   188                           	opt stack 0
   189                           
   190                           ;initializer for MiMAC_ChannelAssessment@F10758
   191  00BBA6  2A                 	db	42
   192  00BBA7  4E                 	db	78
   193  00BBA8  72                 	db	114
   194  00BBA9  96                 	db	150
   195  00BBAA  BA                 	db	186
   196  00BBAB  DE                 	db	222
   197                           
   198                           	psect	mediumconst
   199  001FF4                     __pmediumconst:
   200                           	opt stack 0
   201  001FF4  00                 	db	0
   202  001FF5                     _InitConfigRegs:
   203                           	opt stack 0
   204  001FF5  0036               	dw	54
   205  001FF7  0284               	dw	644
   206  001FF9  0409               	dw	1033
   207  001FFB  0609               	dw	1545
   208  001FFD  080C               	dw	2060
   209  001FFF  0AC1               	dw	2753
   210  002001  0C7D               	dw	3197
   211  002003  0E64               	dw	3684
   212  002005  1014               	dw	4116
   213  002007  1200               	dw	4608
   214  002009  1400               	dw	5120
   215  00200B  1600               	dw	5632
   216  00200D  1838               	dw	6200
   217  00200F  1AC8               	dw	6856
   218  002011  1C0D               	dw	7181
   219  002013  1E00               	dw	7680
   220  002015  2072               	dw	8306
   221  002017  2238               	dw	8760
   222  002019  2438               	dw	9272
   223  00201B  2607               	dw	9735
   224  00201D  2800               	dw	10240
   225  00201F  2A00               	dw	10752
   226  002021  2C69               	dw	11369
   227  002023  2E81               	dw	11905
   228  002025  307E               	dw	12414
   229  002027  3296               	dw	12950
   230  002029  34F0               	dw	13552
   231  00202B  3688               	dw	13960
   232  00202D  3840               	dw	14400
   233  00202F  3A00               	dw	14848
   234  002031  3CE8               	dw	15592
   235  002033  3E00               	dw	15872
   236  002035                     __end_of_InitConfigRegs:
   237                           	opt stack 0
   238  002035                     _ScanTime:
   239                           	opt stack 0
   240  002035  03C0               	dw	960
   241  002037  0000               	dw	0
   242  002039  05A0               	dw	1440
   243  00203B  0000               	dw	0
   244  00203D  0960               	dw	2400
   245  00203F  0000               	dw	0
   246  002041  10E0               	dw	4320
   247  002043  0000               	dw	0
   248  002045  1FE0               	dw	8160
   249  002047  0000               	dw	0
   250  002049  3DE0               	dw	15840
   251  00204B  0000               	dw	0
   252  00204D  79E0               	dw	31200
   253  00204F  0000               	dw	0
   254  002051  F1E0               	dw	61920
   255  002053  0000               	dw	0
   256  002055  E1E0               	dw	57824
   257  002057  0001               	dw	1
   258  002059  C1E0               	dw	49632
   259  00205B  0003               	dw	3
   260  00205D  81E0               	dw	33248
   261  00205F  0007               	dw	7
   262  002061  01E0               	dw	480
   263  002063  000F               	dw	15
   264  002065  01E0               	dw	480
   265  002067  001E               	dw	30
   266  002069  3D44               	dw	15684
   267  00206B  001B               	dw	27
   268  00206D  B40D               	dw	46093
   269  00206F  0015               	dw	21
   270  002071                     __end_of_ScanTime:
   271                           	opt stack 0
   272  002071                     _PVALUE:
   273                           	opt stack 0
   274  002071  4F                 	db	79
   275  002072  4F                 	db	79
   276  002073  4F                 	db	79
   277  002074  4F                 	db	79
   278  002075  4F                 	db	79
   279  002076  4F                 	db	79
   280  002077  4F                 	db	79
   281  002078  4F                 	db	79
   282  002079  4F                 	db	79
   283  00207A  4F                 	db	79
   284  00207B  4F                 	db	79
   285  00207C  4F                 	db	79
   286  00207D  4F                 	db	79
   287  00207E  4F                 	db	79
   288  00207F  4F                 	db	79
   289  002080  4F                 	db	79
   290  002081  4F                 	db	79
   291  002082  4F                 	db	79
   292  002083  4F                 	db	79
   293  002084  4F                 	db	79
   294  002085  4F                 	db	79
   295  002086  4F                 	db	79
   296  002087  50                 	db	80
   297  002088  50                 	db	80
   298  002089  50                 	db	80
   299  00208A  50                 	db	80
   300  00208B  50                 	db	80
   301  00208C  50                 	db	80
   302  00208D  50                 	db	80
   303  00208E  50                 	db	80
   304  00208F  50                 	db	80
   305  002090  50                 	db	80
   306  002091                     __end_of_PVALUE:
   307                           	opt stack 0
   308  002091                     _SVALUE:
   309                           	opt stack 0
   310  002091  22                 	db	34
   311  002092  24                 	db	36
   312  002093  26                 	db	38
   313  002094  28                 	db	40
   314  002095  2A                 	db	42
   315  002096  2C                 	db	44
   316  002097  2E                 	db	46
   317  002098  30                 	db	48
   318  002099  32                 	db	50
   319  00209A  34                 	db	52
   320  00209B  37                 	db	55
   321  00209C  39                 	db	57
   322  00209D  3B                 	db	59
   323  00209E  3D                 	db	61
   324  00209F  3F                 	db	63
   325  0020A0  41                 	db	65
   326  0020A1  43                 	db	67
   327  0020A2  45                 	db	69
   328  0020A3  47                 	db	71
   329  0020A4  4A                 	db	74
   330  0020A5  4C                 	db	76
   331  0020A6  4E                 	db	78
   332  0020A7  05                 	db	5
   333  0020A8  07                 	db	7
   334  0020A9  09                 	db	9
   335  0020AA  0B                 	db	11
   336  0020AB  0D                 	db	13
   337  0020AC  0F                 	db	15
   338  0020AD  11                 	db	17
   339  0020AE  14                 	db	20
   340  0020AF  16                 	db	22
   341  0020B0  18                 	db	24
   342  0020B1                     __end_of_SVALUE:
   343                           	opt stack 0
   344  0020B1                     _dpowers:
   345                           	opt stack 0
   346  0020B1  0001               	dw	1
   347  0020B3  000A               	dw	10
   348  0020B5  0064               	dw	100
   349  0020B7  03E8               	dw	1000
   350  0020B9  2710               	dw	10000
   351  0020BB                     __end_of_dpowers:
   352                           	opt stack 0
   353  0000                     _StaticSecurityKey_absconstaddr	set	8172
   354  0020BB                     _hexpowers:
   355                           	opt stack 0
   356  0020BB  0001               	dw	1
   357  0020BD  0010               	dw	16
   358  0020BF  0100               	dw	256
   359  0020C1  1000               	dw	4096
   360  0020C3                     __end_of_hexpowers:
   361                           	opt stack 0
   362  0020C3                     _USB_SD_Ptr:
   363                           	opt stack 0
   364  0020C3  D1                 	db	low _sd000
   365  0020C4  21                 	db	high _sd000
   366  0020C5  CF                 	db	low _sd001
   367  0020C6  20                 	db	high _sd001
   368  0020C7  03                 	db	low _sd002
   369  0020C8  21                 	db	high _sd002
   370  0020C9                     __end_of_USB_SD_Ptr:
   371                           	opt stack 0
   372  0020C9                     _PANID_LABEL:
   373                           	opt stack 0
   374  0020C9  50                 	db	80
   375  0020CA  41                 	db	65
   376  0020CB  4E                 	db	78
   377  0020CC  00                 	db	0
   378  0020CD                     __end_of_PANID_LABEL:
   379                           	opt stack 0
   380  0020CD                     _USB_CD_Ptr:
   381                           	opt stack 0
   382  0020CD  31                 	db	low _configDescriptor1
   383  0020CE  21                 	db	high _configDescriptor1
   384  0020CF                     __end_of_USB_CD_Ptr:
   385                           	opt stack 0
   386  0000                     _myUID_absconstaddr	set	131062
   387  0000                     _myMODEL_absconstaddr	set	131060
   388  0000                     _myMUTA_version_absconstaddr	set	131058
   389  0020CF                     _sd001:
   390                           	opt stack 0
   391  0020CF  34                 	db	52
   392  0020D0  03                 	db	3
   393  0020D1  004D               	dw	77
   394  0020D3  0069               	dw	105
   395  0020D5  0063               	dw	99
   396  0020D7  0072               	dw	114
   397  0020D9  006F               	dw	111
   398  0020DB  0063               	dw	99
   399  0020DD  0068               	dw	104
   400  0020DF  0069               	dw	105
   401  0020E1  0070               	dw	112
   402  0020E3  0020               	dw	32
   403  0020E5  0054               	dw	84
   404  0020E7  0065               	dw	101
   405  0020E9  0063               	dw	99
   406  0020EB  0068               	dw	104
   407  0020ED  006E               	dw	110
   408  0020EF  006F               	dw	111
   409  0020F1  006C               	dw	108
   410  0020F3  006F               	dw	111
   411  0020F5  0067               	dw	103
   412  0020F7  0079               	dw	121
   413  0020F9  0020               	dw	32
   414  0020FB  0049               	dw	73
   415  0020FD  006E               	dw	110
   416  0020FF  0063               	dw	99
   417  002101  002E               	dw	46
   418  002103                     __end_of_sd001:
   419                           	opt stack 0
   420  002103                     _sd002:
   421                           	opt stack 0
   422  002103  2E                 	db	46
   423  002104  03                 	db	3
   424  002105  0053               	dw	83
   425  002107  0069               	dw	105
   426  002109  006D               	dw	109
   427  00210B  0070               	dw	112
   428  00210D  006C               	dw	108
   429  00210F  0065               	dw	101
   430  002111  0020               	dw	32
   431  002113  0048               	dw	72
   432  002115  0049               	dw	73
   433  002117  0044               	dw	68
   434  002119  0020               	dw	32
   435  00211B  0044               	dw	68
   436  00211D  0065               	dw	101
   437  00211F  0076               	dw	118
   438  002121  0069               	dw	105
   439  002123  0063               	dw	99
   440  002125  0065               	dw	101
   441  002127  0020               	dw	32
   442  002129  0044               	dw	68
   443  00212B  0065               	dw	101
   444  00212D  006D               	dw	109
   445  00212F  006F               	dw	111
   446  002131                     __end_of_sd002:
   447                           	opt stack 0
   448  002131                     _configDescriptor1:
   449                           	opt stack 0
   450  002131  09                 	db	9
   451  002132  02                 	db	2
   452  002133  29                 	db	41
   453  002134  00                 	db	0
   454  002135  01                 	db	1
   455  002136  01                 	db	1
   456  002137  00                 	db	0
   457  002138  C0                 	db	192
   458  002139  32                 	db	50
   459  00213A  09                 	db	9
   460  00213B  04                 	db	4
   461  00213C  00                 	db	0
   462  00213D  00                 	db	0
   463  00213E  02                 	db	2
   464  00213F  03                 	db	3
   465  002140  00                 	db	0
   466  002141  00                 	db	0
   467  002142  00                 	db	0
   468  002143  09                 	db	9
   469  002144  21                 	db	33
   470  002145  11                 	db	17
   471  002146  01                 	db	1
   472  002147  00                 	db	0
   473  002148  01                 	db	1
   474  002149  22                 	db	34
   475  00214A  1D                 	db	29
   476  00214B  00                 	db	0
   477  00214C  07                 	db	7
   478  00214D  05                 	db	5
   479  00214E  81                 	db	129
   480  00214F  03                 	db	3
   481  002150  40                 	db	64
   482  002151  00                 	db	0
   483  002152  01                 	db	1
   484  002153  07                 	db	7
   485  002154  05                 	db	5
   486  002155  01                 	db	1
   487  002156  03                 	db	3
   488  002157  40                 	db	64
   489  002158  00                 	db	0
   490  002159  01                 	db	1
   491  00215A                     __end_of_configDescriptor1:
   492                           	opt stack 0
   493  00215A                     _hid_rpt01:
   494                           	opt stack 0
   495  00215A  06                 	db	6
   496  00215B  00                 	db	0
   497  00215C  FF                 	db	255
   498  00215D  09                 	db	9
   499  00215E  01                 	db	1
   500  00215F  A1                 	db	161
   501  002160  01                 	db	1
   502  002161  19                 	db	25
   503  002162  01                 	db	1
   504  002163  29                 	db	41
   505  002164  40                 	db	64
   506  002165  15                 	db	21
   507  002166  00                 	db	0
   508  002167  26                 	db	38
   509  002168  FF                 	db	255
   510  002169  00                 	db	0
   511  00216A  75                 	db	117
   512  00216B  08                 	db	8
   513  00216C  95                 	db	149
   514  00216D  40                 	db	64
   515  00216E  81                 	db	129
   516  00216F  00                 	db	0
   517  002170  19                 	db	25
   518  002171  01                 	db	1
   519  002172  29                 	db	41
   520  002173  40                 	db	64
   521  002174  91                 	db	145
   522  002175  00                 	db	0
   523  002176  C0                 	db	192
   524  002177                     __end_of_hid_rpt01:
   525                           	opt stack 0
   526  002177                     _device_dsc:
   527                           	opt stack 0
   528  002177  12                 	db	18
   529  002178  01                 	db	1
   530  002179  0200               	dw	512
   531  00217B  00                 	db	0
   532  00217C  00                 	db	0
   533  00217D  00                 	db	0
   534  00217E  08                 	db	8
   535  00217F  04D8               	dw	1240
   536  002181  F7C9               	dw	63433
   537  002183  0100               	dw	256
   538  002185  01                 	db	1
   539  002186  02                 	db	2
   540  002187  00                 	db	0
   541  002188  01                 	db	1
   542  002189                     __end_of_device_dsc:
   543                           	opt stack 0
   544  002189                     _TX_POWER_1_DB_MW:
   545                           	opt stack 0
   546  002189  31                 	db	49
   547  00218A  2E                 	db	46
   548  00218B  32                 	db	50
   549  00218C  35                 	db	53
   550  00218D  6D                 	db	109
   551  00218E  57                 	db	87
   552  00218F  00                 	db	0
   553  002190                     __end_of_TX_POWER_1_DB_MW:
   554                           	opt stack 0
   555  002190                     _TX_POWER_N_8_DB_MW:
   556                           	opt stack 0
   557  002190  30                 	db	48
   558  002191  2E                 	db	46
   559  002192  31                 	db	49
   560  002193  35                 	db	53
   561  002194  6D                 	db	109
   562  002195  57                 	db	87
   563  002196  00                 	db	0
   564  002197                     __end_of_TX_POWER_N_8_DB_MW:
   565                           	opt stack 0
   566  002197                     _TX_POWER_4_DB_MW:
   567                           	opt stack 0
   568  002197  32                 	db	50
   569  002198  2E                 	db	46
   570  002199  35                 	db	53
   571  00219A  6D                 	db	109
   572  00219B  57                 	db	87
   573  00219C  00                 	db	0
   574  00219D                     __end_of_TX_POWER_4_DB_MW:
   575                           	opt stack 0
   576  00219D                     _TX_POWER_INVALID:
   577                           	opt stack 0
   578  00219D  30                 	db	48
   579  00219E  2E                 	db	46
   580  00219F  30                 	db	48
   581  0021A0  6D                 	db	109
   582  0021A1  57                 	db	87
   583  0021A2  00                 	db	0
   584  0021A3                     __end_of_TX_POWER_INVALID:
   585                           	opt stack 0
   586  0021A3                     _TX_POWER_N_2_DB_MW:
   587                           	opt stack 0
   588  0021A3  30                 	db	48
   589  0021A4  2E                 	db	46
   590  0021A5  36                 	db	54
   591  0021A6  6D                 	db	109
   592  0021A7  57                 	db	87
   593  0021A8  00                 	db	0
   594  0021A9                     __end_of_TX_POWER_N_2_DB_MW:
   595                           	opt stack 0
   596  0021A9                     _TX_POWER_N_5_DB_MW:
   597                           	opt stack 0
   598  0021A9  30                 	db	48
   599  0021AA  2E                 	db	46
   600  0021AB  33                 	db	51
   601  0021AC  6D                 	db	109
   602  0021AD  57                 	db	87
   603  0021AE  00                 	db	0
   604  0021AF                     __end_of_TX_POWER_N_5_DB_MW:
   605                           	opt stack 0
   606  0021AF                     _TX_POWER_10_DB_MW:
   607                           	opt stack 0
   608  0021AF  31                 	db	49
   609  0021B0  30                 	db	48
   610  0021B1  6D                 	db	109
   611  0021B2  57                 	db	87
   612  0021B3  00                 	db	0
   613  0021B4                     __end_of_TX_POWER_10_DB_MW:
   614                           	opt stack 0
   615  0021B4                     _TX_POWER_13_DB_MW:
   616                           	opt stack 0
   617  0021B4  32                 	db	50
   618  0021B5  30                 	db	48
   619  0021B6  6D                 	db	109
   620  0021B7  57                 	db	87
   621  0021B8  00                 	db	0
   622  0021B9                     __end_of_TX_POWER_13_DB_MW:
   623                           	opt stack 0
   624  0021B9                     _CHANNEL_LABEL:
   625                           	opt stack 0
   626  0021B9  43                 	db	67
   627  0021BA  68                 	db	104
   628  0021BB  6E                 	db	110
   629  0021BC  00                 	db	0
   630  0021BD                     __end_of_CHANNEL_LABEL:
   631                           	opt stack 0
   632  0021BD                     _NOISE_LABEL:
   633                           	opt stack 0
   634  0021BD  4E                 	db	78
   635  0021BE  73                 	db	115
   636  0021BF  65                 	db	101
   637  0021C0  00                 	db	0
   638  0021C1                     __end_of_NOISE_LABEL:
   639                           	opt stack 0
   640  0021C1                     _POWER_LABEL:
   641                           	opt stack 0
   642  0021C1  50                 	db	80
   643  0021C2  77                 	db	119
   644  0021C3  72                 	db	114
   645  0021C4  00                 	db	0
   646  0021C5                     __end_of_POWER_LABEL:
   647                           	opt stack 0
   648  0021C5                     _TX_POWER_7_DB_MW:
   649                           	opt stack 0
   650  0021C5  35                 	db	53
   651  0021C6  6D                 	db	109
   652  0021C7  57                 	db	87
   653  0021C8  00                 	db	0
   654  0021C9                     __end_of_TX_POWER_7_DB_MW:
   655                           	opt stack 0
   656  0021C9                     _UPDATE_FREQUENCY_LABEL:
   657                           	opt stack 0
   658  0021C9  55                 	db	85
   659  0021CA  70                 	db	112
   660  0021CB  46                 	db	70
   661  0021CC  00                 	db	0
   662  0021CD                     __end_of_UPDATE_FREQUENCY_LABEL:
   663                           	opt stack 0
   664  0021CD                     _UPTIME_LABEL:
   665                           	opt stack 0
   666  0021CD  55                 	db	85
   667  0021CE  70                 	db	112
   668  0021CF  74                 	db	116
   669  0021D0  00                 	db	0
   670  0021D1                     __end_of_UPTIME_LABEL:
   671                           	opt stack 0
   672  0021D1                     _sd000:
   673                           	opt stack 0
   674  0021D1  04                 	db	4
   675  0021D2  03                 	db	3
   676  0021D3  0409               	dw	1033
   677  0021D5                     __end_of_sd000:
   678                           	opt stack 0
   679  0000                     _StaticSecurityKey_absconstaddr	set	8172
   680  0021D5                     STR_11:
   681                           
   682                           ; BSR set to: 0
   683  0021D5  49                 	db	73	;'I'
   684  0021D6  7C                 	db	124
   685  0021D7  25                 	db	37
   686  0021D8  30                 	db	48	;'0'
   687  0021D9  32                 	db	50	;'2'
   688  0021DA  78                 	db	120	;'x'
   689  0021DB  25                 	db	37
   690  0021DC  30                 	db	48	;'0'
   691  0021DD  32                 	db	50	;'2'
   692  0021DE  78                 	db	120	;'x'
   693  0021DF  3A                 	db	58	;':'
   694  0021E0  50                 	db	80	;'P'
   695  0021E1  4F                 	db	79	;'O'
   696  0021E2  57                 	db	87	;'W'
   697  0021E3  45                 	db	69	;'E'
   698  0021E4  52                 	db	82	;'R'
   699  0021E5  5F                 	db	95	;'_'
   700  0021E6  54                 	db	84	;'T'
   701  0021E7  45                 	db	69	;'E'
   702  0021E8  53                 	db	83	;'S'
   703  0021E9  54                 	db	84	;'T'
   704  0021EA  3A                 	db	58	;':'
   705  0021EB  20                 	db	32
   706  0021EC  65                 	db	101	;'e'
   707  0021ED  72                 	db	114	;'r'
   708  0021EE  72                 	db	114	;'r'
   709  0021EF  6F                 	db	111	;'o'
   710  0021F0  72                 	db	114	;'r'
   711  0021F1  20                 	db	32
   712  0021F2  73                 	db	115	;'s'
   713  0021F3  65                 	db	101	;'e'
   714  0021F4  6E                 	db	110	;'n'
   715  0021F5  64                 	db	100	;'d'
   716  0021F6  69                 	db	105	;'i'
   717  0021F7  6E                 	db	110	;'n'
   718  0021F8  67                 	db	103	;'g'
   719  0021F9  20                 	db	32
   720  0021FA  62                 	db	98	;'b'
   721  0021FB  61                 	db	97	;'a'
   722  0021FC  63                 	db	99	;'c'
   723  0021FD  6B                 	db	107	;'k'
   724  0021FE  2C                 	db	44
   725  0021FF  20                 	db	32
   726  002200  25                 	db	37
   727  002201  73                 	db	115	;'s'
   728  002202  2C                 	db	44
   729  002203  20                 	db	32
   730  002204  52                 	db	82	;'R'
   731  002205  53                 	db	83	;'S'
   732  002206  53                 	db	83	;'S'
   733  002207  49                 	db	73	;'I'
   734  002208  3D                 	db	61	;'='
   735  002209  25                 	db	37
   736  00220A  69                 	db	105	;'i'
   737  00220B  00                 	db	0
   738  00220C                     STR_13:
   739                           
   740                           ; BSR set to: 0
   741  00220C  49                 	db	73	;'I'
   742  00220D  7C                 	db	124
   743  00220E  25                 	db	37
   744  00220F  30                 	db	48	;'0'
   745  002210  32                 	db	50	;'2'
   746  002211  78                 	db	120	;'x'
   747  002212  25                 	db	37
   748  002213  30                 	db	48	;'0'
   749  002214  32                 	db	50	;'2'
   750  002215  78                 	db	120	;'x'
   751  002216  3A                 	db	58	;':'
   752  002217  50                 	db	80	;'P'
   753  002218  49                 	db	73	;'I'
   754  002219  4E                 	db	78	;'N'
   755  00221A  47                 	db	71	;'G'
   756  00221B  20                 	db	32
   757  00221C  65                 	db	101	;'e'
   758  00221D  72                 	db	114	;'r'
   759  00221E  72                 	db	114	;'r'
   760  00221F  6F                 	db	111	;'o'
   761  002220  72                 	db	114	;'r'
   762  002221  20                 	db	32
   763  002222  73                 	db	115	;'s'
   764  002223  65                 	db	101	;'e'
   765  002224  6E                 	db	110	;'n'
   766  002225  64                 	db	100	;'d'
   767  002226  69                 	db	105	;'i'
   768  002227  6E                 	db	110	;'n'
   769  002228  67                 	db	103	;'g'
   770  002229  20                 	db	32
   771  00222A  62                 	db	98	;'b'
   772  00222B  61                 	db	97	;'a'
   773  00222C  63                 	db	99	;'c'
   774  00222D  6B                 	db	107	;'k'
   775  00222E  3A                 	db	58	;':'
   776  00222F  20                 	db	32
   777  002230  70                 	db	112	;'p'
   778  002231  61                 	db	97	;'a'
   779  002232  79                 	db	121	;'y'
   780  002233  6C                 	db	108	;'l'
   781  002234  6F                 	db	111	;'o'
   782  002235  61                 	db	97	;'a'
   783  002236  64                 	db	100	;'d'
   784  002237  5F                 	db	95	;'_'
   785  002238  73                 	db	115	;'s'
   786  002239  69                 	db	105	;'i'
   787  00223A  7A                 	db	122	;'z'
   788  00223B  65                 	db	101	;'e'
   789  00223C  3D                 	db	61	;'='
   790  00223D  25                 	db	37
   791  00223E  69                 	db	105	;'i'
   792  00223F  00                 	db	0
   793  002240                     STR_12:
   794                           
   795                           ; BSR set to: 0
   796  002240  49                 	db	73	;'I'
   797  002241  7C                 	db	124
   798  002242  25                 	db	37
   799  002243  30                 	db	48	;'0'
   800  002244  32                 	db	50	;'2'
   801  002245  78                 	db	120	;'x'
   802  002246  25                 	db	37
   803  002247  30                 	db	48	;'0'
   804  002248  32                 	db	50	;'2'
   805  002249  78                 	db	120	;'x'
   806  00224A  3A                 	db	58	;':'
   807  00224B  50                 	db	80	;'P'
   808  00224C  49                 	db	73	;'I'
   809  00224D  4E                 	db	78	;'N'
   810  00224E  47                 	db	71	;'G'
   811  00224F  20                 	db	32
   812  002250  73                 	db	115	;'s'
   813  002251  75                 	db	117	;'u'
   814  002252  63                 	db	99	;'c'
   815  002253  63                 	db	99	;'c'
   816  002254  65                 	db	101	;'e'
   817  002255  73                 	db	115	;'s'
   818  002256  73                 	db	115	;'s'
   819  002257  66                 	db	102	;'f'
   820  002258  75                 	db	117	;'u'
   821  002259  6C                 	db	108	;'l'
   822  00225A  3A                 	db	58	;':'
   823  00225B  20                 	db	32
   824  00225C  70                 	db	112	;'p'
   825  00225D  61                 	db	97	;'a'
   826  00225E  79                 	db	121	;'y'
   827  00225F  6C                 	db	108	;'l'
   828  002260  6F                 	db	111	;'o'
   829  002261  61                 	db	97	;'a'
   830  002262  64                 	db	100	;'d'
   831  002263  5F                 	db	95	;'_'
   832  002264  73                 	db	115	;'s'
   833  002265  69                 	db	105	;'i'
   834  002266  7A                 	db	122	;'z'
   835  002267  65                 	db	101	;'e'
   836  002268  3D                 	db	61	;'='
   837  002269  25                 	db	37
   838  00226A  69                 	db	105	;'i'
   839  00226B  00                 	db	0
   840  00226C                     STR_4:
   841                           
   842                           ; BSR set to: 0
   843  00226C  49                 	db	73	;'I'
   844  00226D  7C                 	db	124
   845  00226E  45                 	db	69	;'E'
   846  00226F  72                 	db	114	;'r'
   847  002270  72                 	db	114	;'r'
   848  002271  6F                 	db	111	;'o'
   849  002272  72                 	db	114	;'r'
   850  002273  3A                 	db	58	;':'
   851  002274  20                 	db	32
   852  002275  75                 	db	117	;'u'
   853  002276  6E                 	db	110	;'n'
   854  002277  61                 	db	97	;'a'
   855  002278  62                 	db	98	;'b'
   856  002279  6C                 	db	108	;'l'
   857  00227A  65                 	db	101	;'e'
   858  00227B  20                 	db	32
   859  00227C  74                 	db	116	;'t'
   860  00227D  6F                 	db	111	;'o'
   861  00227E  20                 	db	32
   862  00227F  73                 	db	115	;'s'
   863  002280  65                 	db	101	;'e'
   864  002281  74                 	db	116	;'t'
   865  002282  20                 	db	32
   866  002283  63                 	db	99	;'c'
   867  002284  68                 	db	104	;'h'
   868  002285  61                 	db	97	;'a'
   869  002286  6E                 	db	110	;'n'
   870  002287  6E                 	db	110	;'n'
   871  002288  65                 	db	101	;'e'
   872  002289  6C                 	db	108	;'l'
   873  00228A  20                 	db	32
   874  00228B  25                 	db	37
   875  00228C  69                 	db	105	;'i'
   876  00228D  21                 	db	33
   877  00228E  20                 	db	32
   878  00228F  28                 	db	40
   879  002290  54                 	db	84	;'T'
   880  002291  5F                 	db	95	;'_'
   881  002292  54                 	db	84	;'T'
   882  002293  29                 	db	41
   883  002294  00                 	db	0
   884  002295                     STR_14:
   885                           
   886                           ; BSR set to: 0
   887  002295  49                 	db	73	;'I'
   888  002296  7C                 	db	124
   889  002297  25                 	db	37
   890  002298  30                 	db	48	;'0'
   891  002299  32                 	db	50	;'2'
   892  00229A  78                 	db	120	;'x'
   893  00229B  25                 	db	37
   894  00229C  30                 	db	48	;'0'
   895  00229D  32                 	db	50	;'2'
   896  00229E  78                 	db	120	;'x'
   897  00229F  3A                 	db	58	;':'
   898  0022A0  20                 	db	32
   899  0022A1  25                 	db	37
   900  0022A2  69                 	db	105	;'i'
   901  0022A3  20                 	db	32
   902  0022A4  63                 	db	99	;'c'
   903  0022A5  6F                 	db	111	;'o'
   904  0022A6  6D                 	db	109	;'m'
   905  0022A7  6D                 	db	109	;'m'
   906  0022A8  61                 	db	97	;'a'
   907  0022A9  6E                 	db	110	;'n'
   908  0022AA  64                 	db	100	;'d'
   909  0022AB  20                 	db	32
   910  0022AC  6E                 	db	110	;'n'
   911  0022AD  6F                 	db	111	;'o'
   912  0022AE  74                 	db	116	;'t'
   913  0022AF  20                 	db	32
   914  0022B0  72                 	db	114	;'r'
   915  0022B1  65                 	db	101	;'e'
   916  0022B2  63                 	db	99	;'c'
   917  0022B3  6F                 	db	111	;'o'
   918  0022B4  67                 	db	103	;'g'
   919  0022B5  6E                 	db	110	;'n'
   920  0022B6  69                 	db	105	;'i'
   921  0022B7  7A                 	db	122	;'z'
   922  0022B8  65                 	db	101	;'e'
   923  0022B9  64                 	db	100	;'d'
   924  0022BA  21                 	db	33
   925  0022BB  00                 	db	0
   926  0022BC                     STR_10:
   927                           
   928                           ; BSR set to: 0
   929  0022BC  49                 	db	73	;'I'
   930  0022BD  7C                 	db	124
   931  0022BE  25                 	db	37
   932  0022BF  30                 	db	48	;'0'
   933  0022C0  32                 	db	50	;'2'
   934  0022C1  78                 	db	120	;'x'
   935  0022C2  25                 	db	37
   936  0022C3  30                 	db	48	;'0'
   937  0022C4  32                 	db	50	;'2'
   938  0022C5  78                 	db	120	;'x'
   939  0022C6  3A                 	db	58	;':'
   940  0022C7  50                 	db	80	;'P'
   941  0022C8  4F                 	db	79	;'O'
   942  0022C9  57                 	db	87	;'W'
   943  0022CA  45                 	db	69	;'E'
   944  0022CB  52                 	db	82	;'R'
   945  0022CC  5F                 	db	95	;'_'
   946  0022CD  54                 	db	84	;'T'
   947  0022CE  45                 	db	69	;'E'
   948  0022CF  53                 	db	83	;'S'
   949  0022D0  54                 	db	84	;'T'
   950  0022D1  3A                 	db	58	;':'
   951  0022D2  20                 	db	32
   952  0022D3  4F                 	db	79	;'O'
   953  0022D4  4B                 	db	75	;'K'
   954  0022D5  2C                 	db	44
   955  0022D6  20                 	db	32
   956  0022D7  25                 	db	37
   957  0022D8  73                 	db	115	;'s'
   958  0022D9  2C                 	db	44
   959  0022DA  20                 	db	32
   960  0022DB  52                 	db	82	;'R'
   961  0022DC  53                 	db	83	;'S'
   962  0022DD  53                 	db	83	;'S'
   963  0022DE  49                 	db	73	;'I'
   964  0022DF  3D                 	db	61	;'='
   965  0022E0  25                 	db	37
   966  0022E1  69                 	db	105	;'i'
   967  0022E2  00                 	db	0
   968  0022E3                     STR_3:
   969                           
   970                           ; BSR set to: 0
   971  0022E3  49                 	db	73	;'I'
   972  0022E4  7C                 	db	124
   973  0022E5  62                 	db	98	;'b'
   974  0022E6  65                 	db	101	;'e'
   975  0022E7  73                 	db	115	;'s'
   976  0022E8  74                 	db	116	;'t'
   977  0022E9  20                 	db	32
   978  0022EA  63                 	db	99	;'c'
   979  0022EB  68                 	db	104	;'h'
   980  0022EC  61                 	db	97	;'a'
   981  0022ED  6E                 	db	110	;'n'
   982  0022EE  6E                 	db	110	;'n'
   983  0022EF  65                 	db	101	;'e'
   984  0022F0  6C                 	db	108	;'l'
   985  0022F1  3A                 	db	58	;':'
   986  0022F2  20                 	db	32
   987  0022F3  25                 	db	37
   988  0022F4  69                 	db	105	;'i'
   989  0022F5  20                 	db	32
   990  0022F6  28                 	db	40
   991  0022F7  6E                 	db	110	;'n'
   992  0022F8  6F                 	db	111	;'o'
   993  0022F9  69                 	db	105	;'i'
   994  0022FA  73                 	db	115	;'s'
   995  0022FB  65                 	db	101	;'e'
   996  0022FC  20                 	db	32
   997  0022FD  3D                 	db	61	;'='
   998  0022FE  3D                 	db	61	;'='
   999  0022FF  20                 	db	32
  1000  002300  25                 	db	37
  1001  002301  69                 	db	105	;'i'
  1002  002302  29                 	db	41
  1003  002303  00                 	db	0
  1004  002304                     STR_2:
  1005                           
  1006                           ; BSR set to: 0
  1007  002304  49                 	db	73	;'I'
  1008  002305  7C                 	db	124
  1009  002306  73                 	db	115	;'s'
  1010  002307  63                 	db	99	;'c'
  1011  002308  61                 	db	97	;'a'
  1012  002309  6E                 	db	110	;'n'
  1013  00230A  6E                 	db	110	;'n'
  1014  00230B  69                 	db	105	;'i'
  1015  00230C  6E                 	db	110	;'n'
  1016  00230D  67                 	db	103	;'g'
  1017  00230E  20                 	db	32
  1018  00230F  63                 	db	99	;'c'
  1019  002310  68                 	db	104	;'h'
  1020  002311  61                 	db	97	;'a'
  1021  002312  6E                 	db	110	;'n'
  1022  002313  6E                 	db	110	;'n'
  1023  002314  65                 	db	101	;'e'
  1024  002315  6C                 	db	108	;'l'
  1025  002316  73                 	db	115	;'s'
  1026  002317  20                 	db	32
  1027  002318  66                 	db	102	;'f'
  1028  002319  6F                 	db	111	;'o'
  1029  00231A  72                 	db	114	;'r'
  1030  00231B  20                 	db	32
  1031  00231C  6E                 	db	110	;'n'
  1032  00231D  6F                 	db	111	;'o'
  1033  00231E  69                 	db	105	;'i'
  1034  00231F  73                 	db	115	;'s'
  1035  002320  65                 	db	101	;'e'
  1036  002321  2E                 	db	46
  1037  002322  2E                 	db	46
  1038  002323  2E                 	db	46
  1039  002324  00                 	db	0
  1040  002325                     STR_9:
  1041                           
  1042                           ; BSR set to: 0
  1043  002325  49                 	db	73	;'I'
  1044  002326  7C                 	db	124
  1045  002327  61                 	db	97	;'a'
  1046  002328  63                 	db	99	;'c'
  1047  002329  63                 	db	99	;'c'
  1048  00232A  65                 	db	101	;'e'
  1049  00232B  70                 	db	112	;'p'
  1050  00232C  74                 	db	116	;'t'
  1051  00232D  69                 	db	105	;'i'
  1052  00232E  6E                 	db	110	;'n'
  1053  00232F  67                 	db	103	;'g'
  1054  002330  20                 	db	32
  1055  002331  73                 	db	115	;'s'
  1056  002332  63                 	db	99	;'c'
  1057  002333  61                 	db	97	;'a'
  1058  002334  6E                 	db	110	;'n'
  1059  002335  73                 	db	115	;'s'
  1060  002336  20                 	db	32
  1061  002337  26                 	db	38
  1062  002338  20                 	db	32
  1063  002339  63                 	db	99	;'c'
  1064  00233A  6F                 	db	111	;'o'
  1065  00233B  6E                 	db	110	;'n'
  1066  00233C  6E                 	db	110	;'n'
  1067  00233D  65                 	db	101	;'e'
  1068  00233E  63                 	db	99	;'c'
  1069  00233F  74                 	db	116	;'t'
  1070  002340  69                 	db	105	;'i'
  1071  002341  6F                 	db	111	;'o'
  1072  002342  6E                 	db	110	;'n'
  1073  002343  73                 	db	115	;'s'
  1074  002344  00                 	db	0
  1075  002345                     STR_7:
  1076                           
  1077                           ; BSR set to: 0
  1078  002345  49                 	db	73	;'I'
  1079  002346  7C                 	db	124
  1080  002347  6F                 	db	111	;'o'
  1081  002348  70                 	db	112	;'p'
  1082  002349  65                 	db	101	;'e'
  1083  00234A  72                 	db	114	;'r'
  1084  00234B  61                 	db	97	;'a'
  1085  00234C  74                 	db	116	;'t'
  1086  00234D  6F                 	db	111	;'o'
  1087  00234E  72                 	db	114	;'r'
  1088  00234F  27                 	db	39
  1089  002350  73                 	db	115	;'s'
  1090  002351  20                 	db	32
  1091  002352  61                 	db	97	;'a'
  1092  002353  64                 	db	100	;'d'
  1093  002354  64                 	db	100	;'d'
  1094  002355  72                 	db	114	;'r'
  1095  002356  65                 	db	101	;'e'
  1096  002357  73                 	db	115	;'s'
  1097  002358  73                 	db	115	;'s'
  1098  002359  3A                 	db	58	;':'
  1099  00235A  20                 	db	32
  1100  00235B  25                 	db	37
  1101  00235C  30                 	db	48	;'0'
  1102  00235D  32                 	db	50	;'2'
  1103  00235E  78                 	db	120	;'x'
  1104  00235F  25                 	db	37
  1105  002360  30                 	db	48	;'0'
  1106  002361  32                 	db	50	;'2'
  1107  002362  78                 	db	120	;'x'
  1108  002363  00                 	db	0
  1109  002364                     STR_6:
  1110                           
  1111                           ; BSR set to: 0
  1112  002364  49                 	db	73	;'I'
  1113  002365  7C                 	db	124
  1114  002366  50                 	db	80	;'P'
  1115  002367  41                 	db	65	;'A'
  1116  002368  4E                 	db	78	;'N'
  1117  002369  49                 	db	73	;'I'
  1118  00236A  44                 	db	68	;'D'
  1119  00236B  3A                 	db	58	;':'
  1120  00236C  25                 	db	37
  1121  00236D  30                 	db	48	;'0'
  1122  00236E  32                 	db	50	;'2'
  1123  00236F  78                 	db	120	;'x'
  1124  002370  25                 	db	37
  1125  002371  30                 	db	48	;'0'
  1126  002372  32                 	db	50	;'2'
  1127  002373  78                 	db	120	;'x'
  1128  002374  20                 	db	32
  1129  002375  43                 	db	67	;'C'
  1130  002376  68                 	db	104	;'h'
  1131  002377  3A                 	db	58	;':'
  1132  002378  25                 	db	37
  1133  002379  30                 	db	48	;'0'
  1134  00237A  32                 	db	50	;'2'
  1135  00237B  64                 	db	100	;'d'
  1136  00237C  00                 	db	0
  1137  00237D                     STR_5:
  1138                           
  1139                           ; BSR set to: 0
  1140  00237D  49                 	db	73	;'I'
  1141  00237E  7C                 	db	124
  1142  00237F  63                 	db	99	;'c'
  1143  002380  72                 	db	114	;'r'
  1144  002381  65                 	db	101	;'e'
  1145  002382  61                 	db	97	;'a'
  1146  002383  74                 	db	116	;'t'
  1147  002384  69                 	db	105	;'i'
  1148  002385  6E                 	db	110	;'n'
  1149  002386  67                 	db	103	;'g'
  1150  002387  20                 	db	32
  1151  002388  6E                 	db	110	;'n'
  1152  002389  65                 	db	101	;'e'
  1153  00238A  74                 	db	116	;'t'
  1154  00238B  77                 	db	119	;'w'
  1155  00238C  6F                 	db	111	;'o'
  1156  00238D  72                 	db	114	;'r'
  1157  00238E  6B                 	db	107	;'k'
  1158  00238F  2E                 	db	46
  1159  002390  2E                 	db	46
  1160  002391  2E                 	db	46
  1161  002392  00                 	db	0
  1162  002393                     STR_16:
  1163                           
  1164                           ; BSR set to: 0
  1165  002393  30                 	db	48	;'0'
  1166  002394  31                 	db	49	;'1'
  1167  002395  32                 	db	50	;'2'
  1168  002396  33                 	db	51	;'3'
  1169  002397  34                 	db	52	;'4'
  1170  002398  35                 	db	53	;'5'
  1171  002399  36                 	db	54	;'6'
  1172  00239A  37                 	db	55	;'7'
  1173  00239B  38                 	db	56	;'8'
  1174  00239C  39                 	db	57	;'9'
  1175  00239D  61                 	db	97	;'a'
  1176  00239E  62                 	db	98	;'b'
  1177  00239F  63                 	db	99	;'c'
  1178  0023A0  64                 	db	100	;'d'
  1179  0023A1  65                 	db	101	;'e'
  1180  0023A2  66                 	db	102	;'f'
  1181  0023A3  00                 	db	0
  1182  0023A4                     STR_8:
  1183                           
  1184                           ; BSR set to: 0
  1185  0023A4  49                 	db	73	;'I'
  1186  0023A5  7C                 	db	124
  1187  0023A6  73                 	db	115	;'s'
  1188  0023A7  74                 	db	116	;'t'
  1189  0023A8  61                 	db	97	;'a'
  1190  0023A9  74                 	db	116	;'t'
  1191  0023AA  75                 	db	117	;'u'
  1192  0023AB  73                 	db	115	;'s'
  1193  0023AC  3A                 	db	58	;':'
  1194  0023AD  20                 	db	32
  1195  0023AE  72                 	db	114	;'r'
  1196  0023AF  65                 	db	101	;'e'
  1197  0023B0  61                 	db	97	;'a'
  1198  0023B1  64                 	db	100	;'d'
  1199  0023B2  79                 	db	121	;'y'
  1200  0023B3  21                 	db	33
  1201  0023B4  00                 	db	0
  1202  0023B5                     STR_1:
  1203                           
  1204                           ; BSR set to: 0
  1205  0023B5  49                 	db	73	;'I'
  1206  0023B6  7C                 	db	124
  1207  0023B7  52                 	db	82	;'R'
  1208  0023B8  45                 	db	69	;'E'
  1209  0023B9  53                 	db	83	;'S'
  1210  0023BA  45                 	db	69	;'E'
  1211  0023BB  54                 	db	84	;'T'
  1212  0023BC  00                 	db	0
  1213  0023BD                     STR_15:
  1214                           
  1215                           ; BSR set to: 0
  1216  0023BD  28                 	db	40
  1217  0023BE  6E                 	db	110	;'n'
  1218  0023BF  75                 	db	117	;'u'
  1219  0023C0  6C                 	db	108	;'l'
  1220  0023C1  6C                 	db	108	;'l'
  1221  0023C2  29                 	db	41
  1222  0023C3  00                 	db	0
  1223                           
  1224                           ; #config settings
  1225  0023C4  00                 	db	0	; dummy byte at the end
  1226  0000                     
  1227                           	psect	_StaticSecurityKey_const
  1228  001FEC                     __p_StaticSecurityKey_const:
  1229                           	opt stack 0
  1230  001FEC                     _StaticSecurityKey:
  1231                           	opt stack 0
  1232  001FEC  00                 	db	0
  1233  001FED  01                 	db	1
  1234  001FEE  02                 	db	2
  1235  001FEF  03                 	db	3
  1236  001FF0  04                 	db	4
  1237  001FF1  05                 	db	5
  1238  001FF2  06                 	db	6
  1239  001FF3  07                 	db	7
  1240  001FF4                     __end_of_StaticSecurityKey:
  1241                           	opt stack 0
  1242  0000                     _myUID_absconstaddr	set	131062
  1243                           
  1244                           	psect	_myUID_const
  1245  01FFF6                     __p_myUID_const:
  1246                           	opt stack 0
  1247  01FFF6                     _myUID:
  1248                           	opt stack 0
  1249  01FFF6  00                 	db	0
  1250  01FFF7  01                 	db	1
  1251  01FFF8                     __end_of_myUID:
  1252                           	opt stack 0
  1253  0000                     _myMODEL_absconstaddr	set	131060
  1254                           
  1255                           	psect	_myMODEL_const
  1256  01FFF4                     __p_myMODEL_const:
  1257                           	opt stack 0
  1258  01FFF4                     _myMODEL:
  1259                           	opt stack 0
  1260  01FFF4  00                 	db	0
  1261  01FFF5                     __end_of_myMODEL:
  1262                           	opt stack 0
  1263  0000                     _myMUTA_version_absconstaddr	set	131058
  1264                           
  1265                           	psect	_myMUTA_version_const
  1266  01FFF2                     __p_myMUTA_version_const:
  1267                           	opt stack 0
  1268  01FFF2                     _myMUTA_version:
  1269                           	opt stack 0
  1270  01FFF2  01                 	db	1
  1271  01FFF3                     __end_of_myMUTA_version:
  1272                           	opt stack 0
  1273  0000                     _PPSCONbits	set	3775
  1274  0000                     _RPINR1	set	3809
  1275  0000                     _RPINR21	set	3836
  1276  0000                     _RPINR22	set	3837
  1277  0000                     _RPOR11	set	3787
  1278  0000                     _RPOR4	set	3780
  1279  0000                     _RPOR5	set	3781
  1280  0000                     _ALRMCFGbits	set	3911
  1281  0000                     _ANCON0	set	3912
  1282  0000                     _ANCON1	set	3913
  1283  0000                     _CCPTMRS0	set	3922
  1284  0000                     _RTCCAL	set	3902
  1285  0000                     _RTCCFG	set	3903
  1286  0000                     _RTCCFGbits	set	3903
  1287  0000                     _RTCVALHbits	set	3899
  1288  0000                     _RTCVALLbits	set	3898
  1289  0000                     _UADDR	set	3896
  1290  0000                     _UCFG	set	3897
  1291  0000                     _UEIE	set	3895
  1292  0000                     _UEP0bits	set	3878
  1293  0000                     _UIE	set	3894
  1294  0000                     _UIEbits	set	3894
  1295  0000                     _UEP0	set	3878
  1296  0000                     _UEP1	set	3879
  1297  0000                     _RTCEN	set	31231
  1298  0000                     _RTCOE	set	31226
  1299  0000                     _CCP1CONbits	set	4026
  1300  0000                     _CCPR1L	set	4027
  1301  0000                     _EECON2	set	4007
  1302  0000                     _INTCON2bits	set	4081
  1303  0000                     _INTCON3bits	set	4080
  1304  0000                     _INTCONbits	set	4082
  1305  0000                     _IPR2bits	set	4002
  1306  0000                     _IPR3bits	set	4005
  1307  0000                     _LATAbits	set	3977
  1308  0000                     _LATBbits	set	3978
  1309  0000                     _LATCbits	set	3979
  1310  0000                     _OSCTUNEbits	set	3995
  1311  0000                     _PIE1bits	set	3997
  1312  0000                     _PIE2bits	set	4000
  1313  0000                     _PIE3bits	set	4003
  1314  0000                     _PIR1bits	set	3998
  1315  0000                     _PIR2bits	set	4001
  1316  0000                     _PIR3bits	set	4004
  1317  0000                     _PR2	set	4043
  1318  0000                     _PR4	set	3959
  1319  0000                     _RCONbits	set	4048
  1320  0000                     _SSP2BUF	set	3957
  1321  0000                     _SSP2CON1	set	3954
  1322  0000                     _SSP2CON1bits	set	3954
  1323  0000                     _SSP2STAT	set	3955
  1324  0000                     _T1CON	set	4045
  1325  0000                     _T1CONbits	set	4045
  1326  0000                     _T2CONbits	set	4042
  1327  0000                     _T4CONbits	set	3958
  1328  0000                     _TMR1H	set	4047
  1329  0000                     _TMR1L	set	4046
  1330  0000                     _TRISA	set	3986
  1331  0000                     _TRISAbits	set	3986
  1332  0000                     _TRISB	set	3987
  1333  0000                     _TRISBbits	set	3987
  1334  0000                     _TRISC	set	3988
  1335  0000                     _TRISCbits	set	3988
  1336  0000                     _UCON	set	3941
  1337  0000                     _UCONbits	set	3941
  1338  0000                     _UEIR	set	3939
  1339  0000                     _UIR	set	3938
  1340  0000                     _UIRbits	set	3938
  1341  0000                     _USTAT	set	3940
  1342                           
  1343                           	psect	cinit
  1344  009AF8                     __pcinit:
  1345                           	opt stack 0
  1346  009AF8                     start_initialization:
  1347                           	opt stack 0
  1348  009AF8                     __initialization:
  1349                           	opt stack 0
  1350                           
  1351                           ; Clear objects allocated to BIGRAMl (576 bytes)
  1352  009AF8  EE06  F000         	lfsr	0,__pbssBIGRAMl
  1353  009AFC  EE12 F040          	lfsr	1,576
  1354  009B00                     clear_0:
  1355  009B00  6AEE               	clrf	postinc0,c
  1356  009B02  50E5               	movf	postdec1,w,c
  1357  009B04  50E1               	movf	fsr1l,w,c
  1358  009B06  E1FC               	bnz	clear_0
  1359  009B08  50E2               	movf	fsr1h,w,c
  1360  009B0A  E1FA               	bnz	clear_0
  1361                           
  1362                           ; Clear objects allocated to BANK5 (256 bytes)
  1363  009B0C  EE05  F000         	lfsr	0,__pbssBANK5
  1364  009B10  EE11 F000          	lfsr	1,256
  1365  009B14                     clear_1:
  1366  009B14  6AEE               	clrf	postinc0,c
  1367  009B16  50E5               	movf	postdec1,w,c
  1368  009B18  50E1               	movf	fsr1l,w,c
  1369  009B1A  E1FC               	bnz	clear_1
  1370  009B1C  50E2               	movf	fsr1h,w,c
  1371  009B1E  E1FA               	bnz	clear_1
  1372                           
  1373                           ; Clear objects allocated to BANK4 (64 bytes)
  1374  009B20  EE04  F000         	lfsr	0,__pbssBANK4
  1375  009B24  0E40               	movlw	64
  1376  009B26                     clear_2:
  1377  009B26  6AEE               	clrf	postinc0,c
  1378  009B28  06E8               	decf	wreg,f,c
  1379  009B2A  E1FD               	bnz	clear_2
  1380                           
  1381                           ; Clear objects allocated to BANK3 (196 bytes)
  1382  009B2C  EE03  F000         	lfsr	0,__pbssBANK3
  1383  009B30  0EC4               	movlw	196
  1384  009B32                     clear_3:
  1385  009B32  6AEE               	clrf	postinc0,c
  1386  009B34  06E8               	decf	wreg,f,c
  1387  009B36  E1FD               	bnz	clear_3
  1388                           
  1389                           ; Clear objects allocated to BANK2 (249 bytes)
  1390  009B38  EE02  F000         	lfsr	0,__pbssBANK2
  1391  009B3C  0EF9               	movlw	249
  1392  009B3E                     clear_4:
  1393  009B3E  6AEE               	clrf	postinc0,c
  1394  009B40  06E8               	decf	wreg,f,c
  1395  009B42  E1FD               	bnz	clear_4
  1396                           
  1397                           ; Clear objects allocated to BANK1 (104 bytes)
  1398  009B44  EE01  F090         	lfsr	0,__pbssBANK1
  1399  009B48  0E68               	movlw	104
  1400  009B4A                     clear_5:
  1401  009B4A  6AEE               	clrf	postinc0,c
  1402  009B4C  06E8               	decf	wreg,f,c
  1403  009B4E  E1FD               	bnz	clear_5
  1404                           
  1405                           ; Clear objects allocated to BANK0 (67 bytes)
  1406  009B50  EE00  F060         	lfsr	0,__pbssBANK0
  1407  009B54  0E43               	movlw	67
  1408  009B56                     clear_6:
  1409  009B56  6AEE               	clrf	postinc0,c
  1410  009B58  06E8               	decf	wreg,f,c
  1411  009B5A  E1FD               	bnz	clear_6
  1412                           
  1413                           ; Clear objects allocated to COMRAM (41 bytes)
  1414  009B5C  EE00  F032         	lfsr	0,__pbssCOMRAM
  1415  009B60  0E29               	movlw	41
  1416  009B62                     clear_7:
  1417  009B62  6AEE               	clrf	postinc0,c
  1418  009B64  06E8               	decf	wreg,f,c
  1419  009B66  E1FD               	bnz	clear_7
  1420                           
  1421                           ; Initialize objects allocated to BANK2 (6 bytes)
  1422                           ; load TBLPTR registers with __pidataBANK2
  1423  009B68  0EA6               	movlw	low __pidataBANK2
  1424  009B6A  6EF6               	movwf	tblptrl,c
  1425  009B6C  0EBB               	movlw	high __pidataBANK2
  1426  009B6E  6EF7               	movwf	tblptrh,c
  1427  009B70  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1428  009B72  6EF8               	movwf	tblptru,c
  1429  009B74  EE02  F0F9         	lfsr	0,__pdataBANK2
  1430  009B78  EE10 F006          	lfsr	1,6
  1431  009B7C                     copy_data0:
  1432  009B7C  0009               	tblrd		*+
  1433  009B7E  CFF5 FFEE          	movff	tablat,postinc0
  1434  009B82  50E5               	movf	postdec1,w,c
  1435  009B84  50E1               	movf	fsr1l,w,c
  1436  009B86  E1FA               	bnz	copy_data0
  1437                           
  1438                           ; Initialize objects allocated to BANK1 (3 bytes)
  1439                           ; load TBLPTR registers with __pidataBANK1
  1440  009B88  0EAF               	movlw	low __pidataBANK1
  1441  009B8A  6EF6               	movwf	tblptrl,c
  1442  009B8C  0EBB               	movlw	high __pidataBANK1
  1443  009B8E  6EF7               	movwf	tblptrh,c
  1444  009B90  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1445  009B92  6EF8               	movwf	tblptru,c
  1446  009B94  0009               	tblrd		*+	;fetch initializer
  1447  009B96  CFF5 F1F8          	movff	tablat,__pdataBANK1
  1448  009B9A  0009               	tblrd		*+	;fetch initializer
  1449  009B9C  CFF5 F1F9          	movff	tablat,__pdataBANK1+1
  1450  009BA0  0009               	tblrd		*+	;fetch initializer
  1451  009BA2  CFF5 F1FA          	movff	tablat,__pdataBANK1+2
  1452                           
  1453                           ; Initialize objects allocated to COMRAM (3 bytes)
  1454                           ; load TBLPTR registers with __pidataCOMRAM
  1455  009BA6  0EAC               	movlw	low __pidataCOMRAM
  1456  009BA8  6EF6               	movwf	tblptrl,c
  1457  009BAA  0EBB               	movlw	high __pidataCOMRAM
  1458  009BAC  6EF7               	movwf	tblptrh,c
  1459  009BAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1460  009BB0  6EF8               	movwf	tblptru,c
  1461  009BB2  0009               	tblrd		*+	;fetch initializer
  1462  009BB4  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  1463  009BB8  0009               	tblrd		*+	;fetch initializer
  1464  009BBA  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
  1465  009BBE  0009               	tblrd		*+	;fetch initializer
  1466  009BC0  CFF5 F05D          	movff	tablat,__pdataCOMRAM+2
  1467  009BC4                     end_of_initialization:
  1468                           	opt stack 0
  1469  009BC4                     __end_of__initialization:
  1470                           	opt stack 0
  1471  009BC4  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1472  009BC6  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1473  009BC8  0100               	movlb	0
  1474  009BCA  EFA5  F01E         	goto	_main	;jump to C main() function
  1475                           tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           postdec1	equ	0xFE5
  1482                           fsr1h	equ	0xFE2
  1483                           fsr1l	equ	0xFE1
  1484                           
  1485                           	psect	bssCOMRAM
  1486  000032                     __pbssCOMRAM:
  1487                           	opt stack 0
  1488  000032                     _m_failed_messages:
  1489                           	opt stack 0
  1490  000032                     	ds	4
  1491  000036                     _errno:
  1492                           	opt stack 0
  1493  000036                     	ds	2
  1494  000038                     _pBDTEntryEP0OutCurrent:
  1495                           	opt stack 0
  1496  000038                     	ds	2
  1497  00003A                     _pBDTEntryEP0OutNext:
  1498                           	opt stack 0
  1499  00003A                     	ds	2
  1500  00003C                     _pDst:
  1501                           	opt stack 0
  1502  00003C                     	ds	2
  1503  00003E                     _pUsbBuffer:
  1504                           	opt stack 0
  1505  00003E                     	ds	2
  1506  000040                     do_NETWORK_REGISTER@F10229:
  1507                           	opt stack 0
  1508  000040                     	ds	2
  1509  000042                     do_UPDATE@F10257:
  1510                           	opt stack 0
  1511  000042                     	ds	2
  1512  000044                     _BothEP0OutUOWNsSet:
  1513                           	opt stack 0
  1514  000044                     	ds	1
  1515  000045                     _LED_increasing:
  1516                           	opt stack 0
  1517  000045                     	ds	1
  1518  000046                     _RemoteWakeup:
  1519                           	opt stack 0
  1520  000046                     	ds	1
  1521  000047                     _USBBusIsSuspended:
  1522                           	opt stack 0
  1523  000047                     	ds	1
  1524  000048                     _USBDeferINDataStagePackets:
  1525                           	opt stack 0
  1526  000048                     	ds	1
  1527  000049                     _USBDeferOUTDataStagePackets:
  1528                           	opt stack 0
  1529  000049                     	ds	1
  1530  00004A                     _USBDeferStatusStagePacket:
  1531                           	opt stack 0
  1532  00004A                     	ds	1
  1533  00004B                     _USBDeviceState:
  1534                           	opt stack 0
  1535  00004B                     	ds	1
  1536  00004C                     _USBStatusStageEnabledFlag1:
  1537                           	opt stack 0
  1538  00004C                     	ds	1
  1539  00004D                     _USBStatusStageEnabledFlag2:
  1540                           	opt stack 0
  1541  00004D                     	ds	1
  1542  00004E                     _USBStatusStageTimeoutCounter:
  1543                           	opt stack 0
  1544  00004E                     	ds	1
  1545  00004F                     _controlTransferState:
  1546                           	opt stack 0
  1547  00004F                     	ds	1
  1548  000050                     _endpoint_number:
  1549                           	opt stack 0
  1550  000050                     	ds	1
  1551  000051                     _last_rssi:
  1552                           	opt stack 0
  1553  000051                     	ds	1
  1554  000052                     _myAppState:
  1555                           	opt stack 0
  1556  000052                     	ds	1
  1557  000053                     _repeat_full:
  1558                           	opt stack 0
  1559  000053                     	ds	1
  1560  000054                     _shortPacketStatus:
  1561                           	opt stack 0
  1562  000054                     	ds	1
  1563  000055                     _status_led:
  1564                           	opt stack 0
  1565  000055                     	ds	1
  1566  000056                     _USBActiveConfiguration:
  1567                           	opt stack 0
  1568  000056                     	ds	1
  1569  000057                     _USBAlternateInterface:
  1570                           	opt stack 0
  1571  000057                     	ds	1
  1572  000058                     _USTATcopy:
  1573                           	opt stack 0
  1574  000058                     	ds	1
  1575  000059                     _active_protocol:
  1576                           	opt stack 0
  1577  000059                     	ds	1
  1578  00005A                     _idle_rate:
  1579                           	opt stack 0
  1580  00005A                     	ds	1
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postdec1	equ	0xFE5
  1588                           fsr1h	equ	0xFE2
  1589                           fsr1l	equ	0xFE1
  1590                           
  1591                           	psect	dataCOMRAM
  1592  00005B                     __pdataCOMRAM:
  1593                           	opt stack 0
  1594  00005B                     _LED_brightness:
  1595                           	opt stack 0
  1596  00005B                     	ds	2
  1597  00005D                     _timer_count:
  1598                           	opt stack 0
  1599  00005D                     	ds	1
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           
  1610                           	psect	bssBANK0
  1611  000060                     __pbssBANK0:
  1612                           	opt stack 0
  1613  000060                     _outPipes:
  1614                           	opt stack 0
  1615  000060                     	ds	9
  1616  000069                     _RouterFailures:
  1617                           	opt stack 0
  1618  000069                     	ds	8
  1619  000071                     _RoutingTable:
  1620                           	opt stack 0
  1621  000071                     	ds	8
  1622  000079                     _mySecurityKey:
  1623                           	opt stack 0
  1624  000079                     	ds	8
  1625  000081                     _inPipes:
  1626                           	opt stack 0
  1627  000081                     	ds	6
  1628  000087                     _m_sent_messages:
  1629                           	opt stack 0
  1630  000087                     	ds	4
  1631  00008B                     _pBDTEntryIn:
  1632                           	opt stack 0
  1633  00008B                     	ds	4
  1634  00008F                     _pBDTEntryOut:
  1635                           	opt stack 0
  1636  00008F                     	ds	4
  1637  000093                     _USBInHandle:
  1638                           	opt stack 0
  1639  000093                     	ds	2
  1640  000095                     _ep_data_in:
  1641                           	opt stack 0
  1642  000095                     	ds	2
  1643  000097                     _ep_data_out:
  1644                           	opt stack 0
  1645  000097                     	ds	2
  1646  000099                     _IRQ1_Received:
  1647                           	opt stack 0
  1648  000099                     	ds	1
  1649  00009A                     _Pwr_updated:
  1650                           	opt stack 0
  1651  00009A                     	ds	1
  1652  00009B                     _RF_Mode:
  1653                           	opt stack 0
  1654  00009B                     	ds	1
  1655  00009C                     _RSSIVal:
  1656                           	opt stack 0
  1657  00009C                     	ds	1
  1658  00009D                     _TxMACSeq:
  1659                           	opt stack 0
  1660  00009D                     	ds	1
  1661  00009E                     _UpF_updated:
  1662                           	opt stack 0
  1663  00009E                     	ds	1
  1664  00009F                     _hasAck:
  1665                           	opt stack 0
  1666  00009F                     	ds	1
  1667  0000A0                     _tempNodeStatus:
  1668                           	opt stack 0
  1669  0000A0                     	ds	1
  1670  0000A1                     _timerExtension1:
  1671                           	opt stack 0
  1672  0000A1                     	ds	1
  1673  0000A2                     _timerExtension2:
  1674                           	opt stack 0
  1675  0000A2                     	ds	1
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           postdec1	equ	0xFE5
  1683                           fsr1h	equ	0xFE2
  1684                           fsr1l	equ	0xFE1
  1685                           
  1686                           	psect	bssBANK1
  1687  000190                     __pbssBANK1:
  1688                           	opt stack 0
  1689  000190                     _rxMessage:
  1690                           	opt stack 0
  1691  000190                     	ds	10
  1692  00019A                     _MACRxPacket:
  1693                           	opt stack 0
  1694  00019A                     	ds	8
  1695  0001A2                     _OutgoingFrameCounter:
  1696                           	opt stack 0
  1697  0001A2                     	ds	4
  1698  0001A6                     _tempLongAddress:
  1699                           	opt stack 0
  1700  0001A6                     	ds	4
  1701  0001AA                     _MACInitParams:
  1702                           	opt stack 0
  1703  0001AA                     	ds	3
  1704  0001AD                     _MTP:
  1705                           	opt stack 0
  1706  0001AD                     	ds	3
  1707  0001B0                     _m_uptime_days:
  1708                           	opt stack 0
  1709  0001B0                     	ds	3
  1710  0001B3                     _AcknowledgementAddr:
  1711                           	opt stack 0
  1712  0001B3                     	ds	2
  1713  0001B5                     _MiWiStateMachine:
  1714                           	opt stack 0
  1715  0001B5                     	ds	2
  1716  0001B7                     _USBOutHandle:
  1717                           	opt stack 0
  1718  0001B7                     	ds	2
  1719  0001B9                     _p_buffer:
  1720                           	opt stack 0
  1721  0001B9                     	ds	2
  1722  0001BB                     _tempPANID:
  1723                           	opt stack 0
  1724  0001BB                     	ds	2
  1725  0001BD                     _ActiveScanResultIndex:
  1726                           	opt stack 0
  1727  0001BD                     	ds	1
  1728  0001BE                     _BestChannel:
  1729                           	opt stack 0
  1730  0001BE                     	ds	1
  1731  0001BF                     _ConnMode:
  1732                           	opt stack 0
  1733  0001BF                     	ds	1
  1734  0001C0                     _MACSeq:
  1735                           	opt stack 0
  1736  0001C0                     	ds	1
  1737  0001C1                     _MiWiAckRequired:
  1738                           	opt stack 0
  1739  0001C1                     	ds	1
  1740  0001C2                     _MiWiCapacityInfo:
  1741                           	opt stack 0
  1742  0001C2                     	ds	1
  1743  0001C3                     _MiWiSeqNum:
  1744                           	opt stack 0
  1745  0001C3                     	ds	1
  1746  0001C4                     _RSSILock:
  1747                           	opt stack 0
  1748  0001C4                     	ds	1
  1749  0001C5                     _ReceivedBankIndex:
  1750                           	opt stack 0
  1751  0001C5                     	ds	1
  1752  0001C6                     _TxData:
  1753                           	opt stack 0
  1754  0001C6                     	ds	1
  1755  0001C7                     _knownCoordinators:
  1756                           	opt stack 0
  1757  0001C7                     	ds	1
  1758  0001C8                     _m_power:
  1759                           	opt stack 0
  1760  0001C8                     	ds	1
  1761  0001C9                     _myParent:
  1762                           	opt stack 0
  1763  0001C9                     	ds	1
  1764  0001CA                     _role:
  1765                           	opt stack 0
  1766  0001CA                     	ds	1
  1767  0001CB                     _timer_flag:
  1768                           	opt stack 0
  1769  0001CB                     	ds	1
  1770  0001CC                     _openSocketInfo:
  1771                           	opt stack 0
  1772  0001CC                     	ds	18
  1773  0001DE                     _m_var:
  1774                           	opt stack 0
  1775  0001DE                     	ds	10
  1776  0001E8                     _myLongAddress:
  1777                           	opt stack 0
  1778  0001E8                     	ds	4
  1779  0001EC                     _tmpBlock:
  1780                           	opt stack 0
  1781  0001EC                     	ds	4
  1782  0001F0                     _myPANID:
  1783                           	opt stack 0
  1784  0001F0                     	ds	2
  1785  0001F2                     _myShortAddress:
  1786                           	opt stack 0
  1787  0001F2                     	ds	2
  1788  0001F4                     _tempShortAddress:
  1789                           	opt stack 0
  1790  0001F4                     	ds	2
  1791  0001F6                     _currentChannel:
  1792                           	opt stack 0
  1793  0001F6                     	ds	1
  1794  0001F7                     _noise_level:
  1795                           	opt stack 0
  1796  0001F7                     	ds	1
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1h	equ	0xFE2
  1805                           fsr1l	equ	0xFE1
  1806                           
  1807                           	psect	dataBANK1
  1808  0001F8                     __pdataBANK1:
  1809                           	opt stack 0
  1810  0001F8                     _AcknowledgementSeq:
  1811                           	opt stack 0
  1812  0001F8                     	ds	1
  1813  0001F9                     _defaultHops:
  1814                           	opt stack 0
  1815  0001F9                     	ds	1
  1816  0001FA                     _m_update_frequency:
  1817                           	opt stack 0
  1818  0001FA                     	ds	1
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           
  1829                           	psect	bssBANK2
  1830  000200                     __pbssBANK2:
  1831                           	opt stack 0
  1832  000200                     _ActiveScanResults:
  1833                           	opt stack 0
  1834  000200                     	ds	40
  1835  000228                     _BroadcastRecords:
  1836                           	opt stack 0
  1837  000228                     	ds	32
  1838  000248                     _AckInfo:
  1839                           	opt stack 0
  1840  000248                     	ds	30
  1841  000266                     _MACTxBuffer:
  1842                           	opt stack 0
  1843  000266                     	ds	64
  1844  0002A6                     _TxBuffer:
  1845                           	opt stack 0
  1846  0002A6                     	ds	43
  1847  0002D1                     _m_buffer:
  1848                           	opt stack 0
  1849  0002D1                     	ds	32
  1850  0002F1                     _key:
  1851                           	opt stack 0
  1852  0002F1                     	ds	8
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           
  1863                           	psect	dataBANK2
  1864  0002F9                     __pdataBANK2:
  1865                           	opt stack 0
  1866  0002F9                     MiMAC_ChannelAssessment@F10758:
  1867                           	opt stack 0
  1868  0002F9                     	ds	6
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           postdec1	equ	0xFE5
  1876                           fsr1h	equ	0xFE2
  1877                           fsr1l	equ	0xFE1
  1878                           
  1879                           	psect	bssBANK3
  1880  000300                     __pbssBANK3:
  1881                           	opt stack 0
  1882  000300                     _RxPacket:
  1883                           	opt stack 0
  1884  000300                     	ds	132
  1885  000384                     _ToSendDataBuffer:
  1886                           	opt stack 0
  1887  000384                     	ds	64
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1h	equ	0xFE2
  1896                           fsr1l	equ	0xFE1
  1897                           
  1898                           	psect	bssBANK4
  1899  000400                     __pbssBANK4:
  1900                           	opt stack 0
  1901  000400                     _ReceivedDataBuffer:
  1902                           	opt stack 0
  1903  000400                     	ds	64
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           postdec1	equ	0xFE5
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           
  1914                           	psect	bssBANK5
  1915  000500                     __pbssBANK5:
  1916                           	opt stack 0
  1917  000500                     _IncomingFrameCounter:
  1918                           	opt stack 0
  1919  000500                     	ds	256
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930                           	psect	bssBIGRAMl
  1931  000600                     __pbssBIGRAMl:
  1932                           	opt stack 0
  1933  000600                     _ConnectionTable:
  1934                           	opt stack 0
  1935  000600                     	ds	576
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           postdec1	equ	0xFE5
  1943                           fsr1h	equ	0xFE2
  1944                           fsr1l	equ	0xFE1
  1945                           
  1946                           	psect	cstackBANK3
  1947  0003C4                     __pcstackBANK3:
  1948                           	opt stack 0
  1949  0003C4                     MiApp_UnicastAddress@t1:
  1950                           	opt stack 0
  1951                           
  1952                           ; 4 bytes @ 0x0
  1953  0003C4                     	ds	4
  1954  0003C8                     MiApp_UnicastAddress@t2:
  1955                           	opt stack 0
  1956                           
  1957                           ; 4 bytes @ 0x4
  1958  0003C8                     	ds	4
  1959  0003CC                     MiApp_UnicastAddress@t1_2749:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x8
  1963  0003CC                     	ds	4
  1964  0003D0                     MiApp_UnicastAddress@t2_2760:
  1965                           	opt stack 0
  1966                           
  1967                           ; 4 bytes @ 0xC
  1968  0003D0                     	ds	4
  1969  0003D4                     MiApp_UnicastAddress@MiWiFrameControl:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0x10
  1973  0003D4                     	ds	1
  1974  0003D5                     MiApp_UnicastAddress@i:
  1975                           	opt stack 0
  1976                           
  1977                           ; 1 bytes @ 0x11
  1978  0003D5                     	ds	1
  1979  0003D6                     MiApp_UnicastAddress@handle:
  1980                           	opt stack 0
  1981                           
  1982                           ; 1 bytes @ 0x12
  1983  0003D6                     	ds	1
  1984  0003D7                     main@last_update:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0x13
  1988  0003D7                     	ds	1
  1989  0003D8                     _main$4898:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x14
  1993  0003D8                     	ds	2
  1994  0003DA                     _main$4921:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x16
  1998  0003DA                     	ds	2
  1999  0003DC                     main@power:
  2000                           	opt stack 0
  2001                           
  2002                           ; 1 bytes @ 0x18
  2003  0003DC                     	ds	1
  2004  0003DD                     main@rssi:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x19
  2008  0003DD                     	ds	1
  2009  0003DE                     main@x:
  2010                           	opt stack 0
  2011                           
  2012                           ; 2 bytes @ 0x1A
  2013  0003DE                     	ds	2
  2014  0003E0                     main@size:
  2015                           	opt stack 0
  2016                           
  2017                           ; 1 bytes @ 0x1C
  2018  0003E0                     	ds	1
  2019  0003E1                     main@shortaddress:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0x1D
  2023  0003E1                     	ds	2
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034                           	psect	cstackBANK1
  2035  000100                     __pcstackBANK1:
  2036                           	opt stack 0
  2037  000100                     ??_SearchForLongAddress:
  2038  000100                     ??_isdigit:
  2039  000100                     ??_MiApp_ConnectionMode:
  2040  000100                     ?_dBm_to_mW:
  2041                           	opt stack 0
  2042  000100                     ?_USBTransferOnePacket:
  2043                           	opt stack 0
  2044  000100                     ?___wmul:
  2045                           	opt stack 0
  2046  000100                     ?___lwdiv:
  2047                           	opt stack 0
  2048  000100                     ?___ftpack:
  2049                           	opt stack 0
  2050  000100                     ?_MiWi_TickGet:
  2051                           	opt stack 0
  2052  000100                     ?___lmul:
  2053                           	opt stack 0
  2054  000100                     SPIPut@i:
  2055                           	opt stack 0
  2056  000100                     findNextNetworkEntry@i:
  2057                           	opt stack 0
  2058  000100                     USBTransferOnePacket@dir:
  2059                           	opt stack 0
  2060  000100                     mW_ufixed16_to_dBm@value2:
  2061                           	opt stack 0
  2062  000100                     ___lbmod@divisor:
  2063                           	opt stack 0
  2064  000100                     SYSTEM_Initialize@pll_startup_counter:
  2065                           	opt stack 0
  2066  000100                     MiMAC_SetAltAddress@Address:
  2067                           	opt stack 0
  2068  000100                     encode@text:
  2069                           	opt stack 0
  2070  000100                     isSameAddress@Address1:
  2071                           	opt stack 0
  2072  000100                     labelcmp@p1:
  2073                           	opt stack 0
  2074  000100                     dBm_to_mW_ufixed16@value1:
  2075                           	opt stack 0
  2076  000100                     encode_uint8_variable@buffer:
  2077                           	opt stack 0
  2078  000100                     encode_ufixed16_variable@buffer:
  2079                           	opt stack 0
  2080  000100                     ___wmul@multiplier:
  2081                           	opt stack 0
  2082  000100                     ___lwdiv@dividend:
  2083                           	opt stack 0
  2084  000100                     memcpy@d1:
  2085                           	opt stack 0
  2086  000100                     memset@p1:
  2087                           	opt stack 0
  2088  000100                     strcpy@to:
  2089                           	opt stack 0
  2090  000100                     ___ftpack@arg:
  2091                           	opt stack 0
  2092  000100                     frexp@value:
  2093                           	opt stack 0
  2094  000100                     ___ftge@ff1:
  2095                           	opt stack 0
  2096  000100                     ___lmul@multiplier:
  2097                           	opt stack 0
  2098                           
  2099                           ; 4 bytes @ 0x0
  2100  000100                     	ds	1
  2101  000101                     SPIPut@v:
  2102                           	opt stack 0
  2103  000101                     MiApp_ConnectionMode@Mode:
  2104                           	opt stack 0
  2105  000101                     mW_ufixed16_to_dBm@value1:
  2106                           	opt stack 0
  2107  000101                     _isdigit$5571:
  2108                           	opt stack 0
  2109  000101                     ___lbmod@dividend:
  2110                           	opt stack 0
  2111  000101                     USBTransferOnePacket@data:
  2112                           	opt stack 0
  2113                           
  2114                           ; 2 bytes @ 0x1
  2115  000101                     	ds	1
  2116  000102                     RegisterRead@value:
  2117                           	opt stack 0
  2118  000102                     WriteFIFO@Data:
  2119                           	opt stack 0
  2120  000102                     SearchForShortAddress@i:
  2121                           	opt stack 0
  2122  000102                     dBm_to_mW@power:
  2123                           	opt stack 0
  2124  000102                     isdigit@c:
  2125                           	opt stack 0
  2126  000102                     ___lbmod@counter:
  2127                           	opt stack 0
  2128  000102                     RegisterSet@setting:
  2129                           	opt stack 0
  2130  000102                     MiMAC_SetAltAddress@PANID:
  2131                           	opt stack 0
  2132  000102                     encode@key:
  2133                           	opt stack 0
  2134  000102                     isSameAddress@Address2:
  2135                           	opt stack 0
  2136  000102                     labelcmp@p2:
  2137                           	opt stack 0
  2138  000102                     dBm_to_mW_ufixed16@value2:
  2139                           	opt stack 0
  2140  000102                     ___wmul@multiplicand:
  2141                           	opt stack 0
  2142  000102                     ___lwdiv@divisor:
  2143                           	opt stack 0
  2144  000102                     memcpy@s1:
  2145                           	opt stack 0
  2146  000102                     memset@c:
  2147                           	opt stack 0
  2148  000102                     strcpy@from:
  2149                           	opt stack 0
  2150  000102                     encode_uint8_variable@var:
  2151                           	opt stack 0
  2152  000102                     encode_ufixed16_variable@var:
  2153                           	opt stack 0
  2154                           
  2155                           ; 10 bytes @ 0x2
  2156  000102                     	ds	1
  2157  000103                     RegisterRead@IRQ1select:
  2158                           	opt stack 0
  2159  000103                     WriteFIFO@IRQ1select:
  2160                           	opt stack 0
  2161  000103                     USBTransferOnePacket@len:
  2162                           	opt stack 0
  2163  000103                     ___ftpack@exp:
  2164                           	opt stack 0
  2165  000103                     ___lbmod@rem:
  2166                           	opt stack 0
  2167  000103                     frexp@eptr:
  2168                           	opt stack 0
  2169  000103                     ___ftge@ff2:
  2170                           	opt stack 0
  2171                           
  2172                           ; 3 bytes @ 0x3
  2173  000103                     	ds	1
  2174  000104                     ??_labelcmp:
  2175  000104                     ??_MiWi_TickGet:
  2176  000104                     ??_encode:
  2177  000104                     RegisterSet@IRQ1select:
  2178                           	opt stack 0
  2179  000104                     RegisterRead@IRQ0select:
  2180                           	opt stack 0
  2181  000104                     WriteFIFO@IRQ0select:
  2182                           	opt stack 0
  2183  000104                     SearchForLongAddress@j:
  2184                           	opt stack 0
  2185  000104                     USBTransferOnePacket@ep:
  2186                           	opt stack 0
  2187  000104                     dBm_to_mW_ufixed16@power:
  2188                           	opt stack 0
  2189  000104                     ___ftpack@sign:
  2190                           	opt stack 0
  2191  000104                     ___lwdiv@counter:
  2192                           	opt stack 0
  2193  000104                     ___wmul@product:
  2194                           	opt stack 0
  2195  000104                     memcpy@n:
  2196                           	opt stack 0
  2197  000104                     memset@n:
  2198                           	opt stack 0
  2199  000104                     strcpy@cp:
  2200                           	opt stack 0
  2201  000104                     ___lmul@multiplicand:
  2202                           	opt stack 0
  2203                           
  2204                           ; 4 bytes @ 0x4
  2205  000104                     	ds	1
  2206  000105                     ??___ftpack:
  2207  000105                     ??_frexp:
  2208  000105                     MiWi_TickGet@failureCounter:
  2209                           	opt stack 0
  2210  000105                     RegisterSet@IRQ0select:
  2211                           	opt stack 0
  2212  000105                     RegisterRead@address:
  2213                           	opt stack 0
  2214  000105                     SearchForLongAddress@i:
  2215                           	opt stack 0
  2216  000105                     USBTransferOnePacket@handle:
  2217                           	opt stack 0
  2218  000105                     ___lwdiv@quotient:
  2219                           	opt stack 0
  2220                           
  2221                           ; 2 bytes @ 0x5
  2222  000105                     	ds	1
  2223  000106                     ??_AddNodeToNetworkTable:
  2224  000106                     ??_MiMAC_SetPower:
  2225  000106                     ??___ftge:
  2226  000106                     ?___awdiv:
  2227                           	opt stack 0
  2228  000106                     SetRFMode@mode:
  2229                           	opt stack 0
  2230  000106                     isSameAddress@i:
  2231                           	opt stack 0
  2232  000106                     ___awdiv@dividend:
  2233                           	opt stack 0
  2234  000106                     memcpy@d:
  2235                           	opt stack 0
  2236  000106                     memset@p:
  2237                           	opt stack 0
  2238  000106                     MiWi_TickGet@currentTime:
  2239                           	opt stack 0
  2240                           
  2241                           ; 4 bytes @ 0x6
  2242  000106                     	ds	1
  2243  000107                     ?___lwmod:
  2244                           	opt stack 0
  2245  000107                     MiMAC_SetChannel@offsetFreq:
  2246                           	opt stack 0
  2247  000107                     _labelcmp$5111:
  2248                           	opt stack 0
  2249  000107                     sendHIDText@str:
  2250                           	opt stack 0
  2251  000107                     ___lwmod@dividend:
  2252                           	opt stack 0
  2253                           
  2254                           ; 2 bytes @ 0x7
  2255  000107                     	ds	1
  2256  000108                     ??_MiMAC_SetChannel:
  2257  000108                     ?___ftadd:
  2258                           	opt stack 0
  2259  000108                     MiMAC_SetPower@outputPower:
  2260                           	opt stack 0
  2261  000108                     AddNodeToNetworkTable@i:
  2262                           	opt stack 0
  2263  000108                     USBDeviceInit@i:
  2264                           	opt stack 0
  2265  000108                     ___awdiv@divisor:
  2266                           	opt stack 0
  2267  000108                     memcpy@s:
  2268                           	opt stack 0
  2269  000108                     ___ftadd@f1:
  2270                           	opt stack 0
  2271  000108                     ___lmul@product:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x8
  2275  000108                     	ds	1
  2276  000109                     ??_sendHIDText:
  2277  000109                     MiMAC_SetChannel@channel:
  2278                           	opt stack 0
  2279  000109                     AddNodeToNetworkTable@handle:
  2280                           	opt stack 0
  2281  000109                     ___lwmod@divisor:
  2282                           	opt stack 0
  2283                           
  2284                           ; 2 bytes @ 0x9
  2285  000109                     	ds	1
  2286  00010A                     ??_BroadcastJitter:
  2287  00010A                     ?_decode_variable:
  2288                           	opt stack 0
  2289  00010A                     TxPacket@CCA:
  2290                           	opt stack 0
  2291  00010A                     MiApp_SetChannel@channel:
  2292                           	opt stack 0
  2293  00010A                     sendHIDText@c:
  2294                           	opt stack 0
  2295  00010A                     ___awdiv@counter:
  2296                           	opt stack 0
  2297  00010A                     sendHIDBinary@buffer:
  2298                           	opt stack 0
  2299  00010A                     decode_variable@p_buffer:
  2300                           	opt stack 0
  2301                           
  2302                           ; 2 bytes @ 0xA
  2303  00010A                     	ds	1
  2304  00010B                     ??_TxPacket:
  2305  00010B                     ___awdiv@sign:
  2306                           	opt stack 0
  2307  00010B                     ___lwmod@counter:
  2308                           	opt stack 0
  2309  00010B                     _sendHIDText$4973:
  2310                           	opt stack 0
  2311  00010B                     ___ftadd@f2:
  2312                           	opt stack 0
  2313                           
  2314                           ; 3 bytes @ 0xB
  2315  00010B                     	ds	1
  2316  00010C                     ??_encode_ufixed16_variable:
  2317  00010C                     ??_encode_uint8_variable:
  2318  00010C                     ?_sprintf:
  2319                           	opt stack 0
  2320  00010C                     sendHIDBinary@length:
  2321                           	opt stack 0
  2322  00010C                     DELAY_ms@ms:
  2323                           	opt stack 0
  2324  00010C                     sprintf@sp:
  2325                           	opt stack 0
  2326  00010C                     ___awdiv@quotient:
  2327                           	opt stack 0
  2328                           
  2329                           ; 2 bytes @ 0xC
  2330  00010C                     	ds	1
  2331  00010D                     ??_sendHIDBinary:
  2332  00010D                     encode_uint8_variable@m_signed:
  2333                           	opt stack 0
  2334  00010D                     encode_ufixed16_variable@m_signed:
  2335                           	opt stack 0
  2336  00010D                     sendHIDText@p:
  2337                           	opt stack 0
  2338                           
  2339                           ; 2 bytes @ 0xD
  2340  00010D                     	ds	1
  2341  00010E                     ??___ftadd:
  2342  00010E                     ??_MiMAC_ChannelAssessment:
  2343  00010E                     encode_uint8_variable@m_writable:
  2344                           	opt stack 0
  2345  00010E                     encode_ufixed16_variable@m_writable:
  2346                           	opt stack 0
  2347  00010E                     encode@delta:
  2348                           	opt stack 0
  2349  00010E                     _sendHIDBinary$4970:
  2350                           	opt stack 0
  2351  00010E                     sprintf@f:
  2352                           	opt stack 0
  2353  00010E                     DELAY_ms@cyclesRequiredForEntireDelay:
  2354                           	opt stack 0
  2355                           
  2356                           ; 4 bytes @ 0xE
  2357  00010E                     	ds	1
  2358  00010F                     sendHIDText@size:
  2359                           	opt stack 0
  2360                           
  2361                           ; 2 bytes @ 0xF
  2362  00010F                     	ds	1
  2363  000110                     ??_send_answer_to_update:
  2364  000110                     encode@i:
  2365                           	opt stack 0
  2366                           
  2367                           ; 1 bytes @ 0x10
  2368  000110                     	ds	1
  2369  000111                     ___ftadd@sign:
  2370                           	opt stack 0
  2371  000111                     encode@part1:
  2372                           	opt stack 0
  2373                           
  2374                           ; 2 bytes @ 0x11
  2375  000111                     	ds	1
  2376  000112                     ___ftadd@exp2:
  2377                           	opt stack 0
  2378  000112                     MiMAC_Init@initValue:
  2379                           	opt stack 0
  2380  000112                     BroadcastJitter@t1:
  2381                           	opt stack 0
  2382  000112                     MiMAC_ChannelAssessment@result:
  2383                           	opt stack 0
  2384                           
  2385                           ; 6 bytes @ 0x12
  2386  000112                     	ds	1
  2387  000113                     ___ftadd@exp1:
  2388                           	opt stack 0
  2389  000113                     encode@part2:
  2390                           	opt stack 0
  2391  000113                     TxPacket@t1:
  2392                           	opt stack 0
  2393                           
  2394                           ; 4 bytes @ 0x13
  2395  000113                     	ds	1
  2396  000114                     ??_decode_variable:
  2397  000114                     ?___fttol:
  2398                           	opt stack 0
  2399  000114                     ___fttol@f1:
  2400                           	opt stack 0
  2401                           
  2402                           ; 3 bytes @ 0x14
  2403  000114                     	ds	1
  2404  000115                     MiMAC_Init@i:
  2405                           	opt stack 0
  2406  000115                     encode@sum:
  2407                           	opt stack 0
  2408                           
  2409                           ; 2 bytes @ 0x15
  2410  000115                     	ds	1
  2411  000116                     ??_MiApp_ProtocolInit:
  2412  000116                     BroadcastJitter@t2:
  2413                           	opt stack 0
  2414  000116                     decode_variable@var:
  2415                           	opt stack 0
  2416                           
  2417                           ; 10 bytes @ 0x16
  2418  000116                     	ds	1
  2419  000117                     MiApp_ProtocolInit@bNetworkFreezer:
  2420                           	opt stack 0
  2421  000117                     CTR@text:
  2422                           	opt stack 0
  2423  000117                     CBC_MAC@text:
  2424                           	opt stack 0
  2425  000117                     TxPacket@t2:
  2426                           	opt stack 0
  2427                           
  2428                           ; 4 bytes @ 0x17
  2429  000117                     	ds	1
  2430  000118                     ??_sprintf:
  2431  000118                     ??___fttol:
  2432  000118                     MiMAC_ChannelAssessment@AssessmentMode:
  2433                           	opt stack 0
  2434  000118                     MiApp_ProtocolInit@MIP:
  2435                           	opt stack 0
  2436                           
  2437                           ; 3 bytes @ 0x18
  2438  000118                     	ds	1
  2439  000119                     MiMAC_ChannelAssessment@k:
  2440                           	opt stack 0
  2441  000119                     CTR@len:
  2442                           	opt stack 0
  2443  000119                     CBC_MAC@len:
  2444                           	opt stack 0
  2445                           
  2446                           ; 1 bytes @ 0x19
  2447  000119                     	ds	1
  2448  00011A                     BroadcastJitter@range:
  2449                           	opt stack 0
  2450  00011A                     MiMAC_ChannelAssessment@count:
  2451                           	opt stack 0
  2452  00011A                     CTR@key:
  2453                           	opt stack 0
  2454  00011A                     CBC_MAC@key:
  2455                           	opt stack 0
  2456                           
  2457                           ; 2 bytes @ 0x1A
  2458  00011A                     	ds	1
  2459  00011B                     TxPacket@CCARetries:
  2460                           	opt stack 0
  2461  00011B                     BroadcastJitter@jitter:
  2462                           	opt stack 0
  2463  00011B                     MiApp_ProtocolInit@i:
  2464                           	opt stack 0
  2465                           
  2466                           ; 1 bytes @ 0x1B
  2467  00011B                     	ds	1
  2468  00011C                     TxPacket@reTry:
  2469                           	opt stack 0
  2470  00011C                     MiMAC_ChannelAssessment@i:
  2471                           	opt stack 0
  2472  00011C                     sprintf@idx:
  2473                           	opt stack 0
  2474  00011C                     CTR@nounce:
  2475                           	opt stack 0
  2476  00011C                     CBC_MAC@MIC:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x1C
  2480  00011C                     	ds	1
  2481  00011D                     TxPacket@allowedTxFailure:
  2482                           	opt stack 0
  2483  00011D                     sprintf@prec:
  2484                           	opt stack 0
  2485  00011D                     ___fttol@sign1:
  2486                           	opt stack 0
  2487  00011D                     MiApp_NoiseDetection@ChannelMap:
  2488                           	opt stack 0
  2489                           
  2490                           ; 4 bytes @ 0x1D
  2491  00011D                     	ds	1
  2492  00011E                     ??_CTR:
  2493  00011E                     ??_CBC_MAC:
  2494  00011E                     TxPacket@status:
  2495                           	opt stack 0
  2496  00011E                     sprintf@cp:
  2497                           	opt stack 0
  2498  00011E                     ___fttol@lval:
  2499                           	opt stack 0
  2500                           
  2501                           ; 4 bytes @ 0x1E
  2502  00011E                     	ds	1
  2503  00011F                     TxPacket@TxPacketLen:
  2504                           	opt stack 0
  2505                           
  2506                           ; 1 bytes @ 0x1F
  2507  00011F                     	ds	1
  2508  000120                     TxPacket@i:
  2509                           	opt stack 0
  2510  000120                     sprintf@ap:
  2511                           	opt stack 0
  2512                           
  2513                           ; 2 bytes @ 0x20
  2514  000120                     	ds	1
  2515  000121                     TxPacket@rssival:
  2516                           	opt stack 0
  2517  000121                     CTR@block:
  2518                           	opt stack 0
  2519  000121                     CBC_MAC@block:
  2520                           	opt stack 0
  2521  000121                     MiApp_NoiseDetection@ScanDuration:
  2522                           	opt stack 0
  2523                           
  2524                           ; 1 bytes @ 0x21
  2525  000121                     	ds	1
  2526  000122                     CTR@i:
  2527                           	opt stack 0
  2528  000122                     CBC_MAC@j:
  2529                           	opt stack 0
  2530  000122                     MiApp_NoiseDetection@DetectionMode:
  2531                           	opt stack 0
  2532  000122                     ___fttol@exp1:
  2533                           	opt stack 0
  2534  000122                     sprintf@len:
  2535                           	opt stack 0
  2536                           
  2537                           ; 2 bytes @ 0x22
  2538  000122                     	ds	1
  2539  000123                     ?___altoft:
  2540                           	opt stack 0
  2541  000123                     CTR@j:
  2542                           	opt stack 0
  2543  000123                     CBC_MAC@i:
  2544                           	opt stack 0
  2545  000123                     MiApp_NoiseDetection@RSSIValue:
  2546                           	opt stack 0
  2547  000123                     ___altoft@c:
  2548                           	opt stack 0
  2549                           
  2550                           ; 4 bytes @ 0x23
  2551  000123                     	ds	1
  2552  000124                     CCM_Enc@text:
  2553                           	opt stack 0
  2554  000124                     CCM_Dec@text:
  2555                           	opt stack 0
  2556  000124                     sprintf@val:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x24
  2560  000124                     	ds	1
  2561  000125                     ??_MiApp_NoiseDetection:
  2562                           
  2563                           ; 0 bytes @ 0x25
  2564  000125                     	ds	1
  2565  000126                     CCM_Enc@headerLen:
  2566                           	opt stack 0
  2567  000126                     CCM_Dec@headerLen:
  2568                           	opt stack 0
  2569  000126                     sprintf@flag:
  2570                           	opt stack 0
  2571                           
  2572                           ; 1 bytes @ 0x26
  2573  000126                     	ds	1
  2574  000127                     ??___altoft:
  2575  000127                     CCM_Enc@payloadLen:
  2576                           	opt stack 0
  2577  000127                     CCM_Dec@payloadLen:
  2578                           	opt stack 0
  2579  000127                     sprintf@width:
  2580                           	opt stack 0
  2581                           
  2582                           ; 2 bytes @ 0x27
  2583  000127                     	ds	1
  2584  000128                     CCM_Enc@key:
  2585                           	opt stack 0
  2586  000128                     CCM_Dec@key:
  2587                           	opt stack 0
  2588                           
  2589                           ; 2 bytes @ 0x28
  2590  000128                     	ds	1
  2591  000129                     sprintf@c:
  2592                           	opt stack 0
  2593                           
  2594                           ; 1 bytes @ 0x29
  2595  000129                     	ds	1
  2596  00012A                     ??_CCM_Enc:
  2597  00012A                     ??_CCM_Dec:
  2598                           
  2599                           ; 0 bytes @ 0x2A
  2600  00012A                     	ds	1
  2601  00012B                     ___altoft@exp:
  2602                           	opt stack 0
  2603                           
  2604                           ; 1 bytes @ 0x2B
  2605  00012B                     	ds	1
  2606  00012C                     ___altoft@sign:
  2607                           	opt stack 0
  2608  00012C                     _CCM_Enc$1978:
  2609                           	opt stack 0
  2610                           
  2611                           ; 2 bytes @ 0x2C
  2612  00012C                     	ds	1
  2613  00012D                     ?_floor:
  2614                           	opt stack 0
  2615  00012D                     floor@x:
  2616                           	opt stack 0
  2617                           
  2618                           ; 3 bytes @ 0x2D
  2619  00012D                     	ds	1
  2620  00012E                     CCM_Enc@i:
  2621                           	opt stack 0
  2622  00012E                     MiApp_NoiseDetection@channelMask:
  2623                           	opt stack 0
  2624                           
  2625                           ; 4 bytes @ 0x2E
  2626  00012E                     	ds	1
  2627  00012F                     MiMAC_SendPacket@transParam:
  2628                           	opt stack 0
  2629                           
  2630                           ; 3 bytes @ 0x2F
  2631  00012F                     	ds	1
  2632  000130                     _CCM_Dec$1986:
  2633                           	opt stack 0
  2634  000130                     floor@i:
  2635                           	opt stack 0
  2636                           
  2637                           ; 3 bytes @ 0x30
  2638  000130                     	ds	2
  2639  000132                     CCM_Dec@i:
  2640                           	opt stack 0
  2641  000132                     MiMAC_SendPacket@MACPayload:
  2642                           	opt stack 0
  2643  000132                     MiApp_NoiseDetection@t1:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x32
  2647  000132                     	ds	1
  2648  000133                     ??_MiMAC_ReceivedPacket:
  2649  000133                     floor@expon:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x33
  2653  000133                     	ds	1
  2654  000134                     MiMAC_SendPacket@MACPayloadLen:
  2655                           	opt stack 0
  2656                           
  2657                           ; 1 bytes @ 0x34
  2658  000134                     	ds	1
  2659  000135                     ??_MiMAC_SendPacket:
  2660  000135                     ?___ftneg:
  2661                           	opt stack 0
  2662  000135                     ___ftneg@f1:
  2663                           	opt stack 0
  2664                           
  2665                           ; 3 bytes @ 0x35
  2666  000135                     	ds	1
  2667  000136                     MiMAC_SendPacket@headerLen:
  2668                           	opt stack 0
  2669  000136                     MiApp_NoiseDetection@t2:
  2670                           	opt stack 0
  2671                           
  2672                           ; 4 bytes @ 0x36
  2673  000136                     	ds	1
  2674  000137                     MiMAC_SendPacket@TxIndex:
  2675                           	opt stack 0
  2676                           
  2677                           ; 1 bytes @ 0x37
  2678  000137                     	ds	1
  2679  000138                     ?___ftmul:
  2680                           	opt stack 0
  2681  000138                     MiMAC_SendPacket@i:
  2682                           	opt stack 0
  2683  000138                     ___ftmul@f1:
  2684                           	opt stack 0
  2685                           
  2686                           ; 3 bytes @ 0x38
  2687  000138                     	ds	1
  2688  000139                     SendMACPacket@Address:
  2689                           	opt stack 0
  2690                           
  2691                           ; 2 bytes @ 0x39
  2692  000139                     	ds	1
  2693  00013A                     MiApp_NoiseDetection@OptimalChannel:
  2694                           	opt stack 0
  2695                           
  2696                           ; 1 bytes @ 0x3A
  2697  00013A                     	ds	1
  2698  00013B                     SendMACPacket@PacketType:
  2699                           	opt stack 0
  2700  00013B                     MiApp_NoiseDetection@j:
  2701                           	opt stack 0
  2702  00013B                     ___ftmul@f2:
  2703                           	opt stack 0
  2704  00013B                     MiMAC_ReceivedPacket@currentTick:
  2705                           	opt stack 0
  2706                           
  2707                           ; 4 bytes @ 0x3B
  2708  00013B                     	ds	1
  2709  00013C                     ??_SendMACPacket:
  2710  00013C                     MiApp_NoiseDetection@k:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0x3C
  2714  00013C                     	ds	1
  2715  00013D                     MiApp_NoiseDetection@RSSIcheck:
  2716                           	opt stack 0
  2717  00013D                     RouteMessage@PANID:
  2718                           	opt stack 0
  2719                           
  2720                           ; 2 bytes @ 0x3D
  2721  00013D                     	ds	1
  2722  00013E                     ??___ftmul:
  2723  00013E                     MiApp_NoiseDetection@minRSSI:
  2724                           	opt stack 0
  2725                           
  2726                           ; 1 bytes @ 0x3E
  2727  00013E                     	ds	1
  2728  00013F                     MiApp_NoiseDetection@i:
  2729                           	opt stack 0
  2730  00013F                     RouteMessage@ShortAddress:
  2731                           	opt stack 0
  2732  00013F                     MiMAC_ReceivedPacket@FrameCounter:
  2733                           	opt stack 0
  2734                           
  2735                           ; 4 bytes @ 0x3F
  2736  00013F                     	ds	1
  2737  000140                     MiApp_NoiseDetection@maxRSSI:
  2738                           	opt stack 0
  2739                           
  2740                           ; 1 bytes @ 0x40
  2741  000140                     	ds	1
  2742  000141                     RouteMessage@SecEn:
  2743                           	opt stack 0
  2744  000141                     MiApp_StartConnection@ScanDuration:
  2745                           	opt stack 0
  2746  000141                     ___ftmul@exp:
  2747                           	opt stack 0
  2748                           
  2749                           ; 1 bytes @ 0x41
  2750  000141                     	ds	1
  2751  000142                     ??_RouteMessage:
  2752  000142                     ___ftmul@f3_as_product:
  2753                           	opt stack 0
  2754  000142                     MiApp_StartConnection@ChannelMap:
  2755                           	opt stack 0
  2756                           
  2757                           ; 4 bytes @ 0x42
  2758  000142                     	ds	1
  2759  000143                     MiMAC_ReceivedPacket@k:
  2760                           	opt stack 0
  2761                           
  2762                           ; 1 bytes @ 0x43
  2763  000143                     	ds	1
  2764  000144                     MiMAC_ReceivedPacket@j:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0x44
  2768  000144                     	ds	1
  2769  000145                     MiMAC_ReceivedPacket@PayloadIndex:
  2770                           	opt stack 0
  2771  000145                     RouteMessage@j:
  2772                           	opt stack 0
  2773  000145                     ___ftmul@cntr:
  2774                           	opt stack 0
  2775                           
  2776                           ; 1 bytes @ 0x45
  2777  000145                     	ds	1
  2778  000146                     ??_MiApp_StartConnection:
  2779  000146                     MiMAC_ReceivedPacket@i:
  2780                           	opt stack 0
  2781  000146                     RouteMessage@parentNode:
  2782                           	opt stack 0
  2783  000146                     ___ftmul@sign:
  2784                           	opt stack 0
  2785                           
  2786                           ; 1 bytes @ 0x46
  2787  000146                     	ds	1
  2788  000147                     ??_send_complete_update:
  2789  000147                     ??_send_periodic_update:
  2790  000147                     RouteMessage@i:
  2791                           	opt stack 0
  2792  000147                     MiApp_StartConnection@Mode:
  2793                           	opt stack 0
  2794                           
  2795                           ; 1 bytes @ 0x47
  2796  000147                     	ds	1
  2797  000148                     MiApp_StartConnection@channel:
  2798                           	opt stack 0
  2799  000148                     UnicastShortAddress@DestAddress:
  2800                           	opt stack 0
  2801  000148                     _send_complete_update$6060:
  2802                           	opt stack 0
  2803  000148                     _send_periodic_update$6064:
  2804                           	opt stack 0
  2805                           
  2806                           ; 3 bytes @ 0x48
  2807  000148                     	ds	1
  2808  000149                     MiApp_StartConnection@RSSIValue:
  2809                           	opt stack 0
  2810                           
  2811                           ; 1 bytes @ 0x49
  2812  000149                     	ds	1
  2813  00014A                     ??_MiWiTasks:
  2814                           
  2815                           ; 0 bytes @ 0x4A
  2816  00014A                     	ds	1
  2817  00014B                     _send_complete_update$6061:
  2818                           	opt stack 0
  2819  00014B                     _send_periodic_update$6065:
  2820                           	opt stack 0
  2821                           
  2822                           ; 3 bytes @ 0x4B
  2823  00014B                     	ds	3
  2824  00014E                     _send_complete_update$6062:
  2825                           	opt stack 0
  2826  00014E                     _send_periodic_update$6066:
  2827                           	opt stack 0
  2828                           
  2829                           ; 3 bytes @ 0x4E
  2830  00014E                     	ds	3
  2831  000151                     _send_complete_update$6063:
  2832                           	opt stack 0
  2833  000151                     _send_periodic_update$6067:
  2834                           	opt stack 0
  2835                           
  2836                           ; 3 bytes @ 0x51
  2837  000151                     	ds	1
  2838  000152                     MiWiTasks@t2:
  2839                           	opt stack 0
  2840                           
  2841                           ; 4 bytes @ 0x52
  2842  000152                     	ds	4
  2843  000156                     MiWiTasks@t1_2546:
  2844                           	opt stack 0
  2845                           
  2846                           ; 4 bytes @ 0x56
  2847  000156                     	ds	4
  2848  00015A                     MiWiTasks@t2_2557:
  2849                           	opt stack 0
  2850                           
  2851                           ; 4 bytes @ 0x5A
  2852  00015A                     	ds	4
  2853  00015E                     MiWiTasks@CoordAddress:
  2854                           	opt stack 0
  2855                           
  2856                           ; 2 bytes @ 0x5E
  2857  00015E                     	ds	2
  2858  000160                     MiWiTasks@mask:
  2859                           	opt stack 0
  2860                           
  2861                           ; 1 bytes @ 0x60
  2862  000160                     	ds	1
  2863  000161                     MiWiTasks@entry_2536:
  2864                           	opt stack 0
  2865                           
  2866                           ; 1 bytes @ 0x61
  2867  000161                     	ds	1
  2868  000162                     MiWiTasks@jitter:
  2869                           	opt stack 0
  2870                           
  2871                           ; 1 bytes @ 0x62
  2872  000162                     	ds	1
  2873  000163                     MiWiTasks@associateStatus:
  2874                           	opt stack 0
  2875                           
  2876                           ; 1 bytes @ 0x63
  2877  000163                     	ds	1
  2878  000164                     MiWiTasks@t1:
  2879                           	opt stack 0
  2880                           
  2881                           ; 4 bytes @ 0x64
  2882  000164                     	ds	4
  2883  000168                     MiWiTasks@coordinatorNumber:
  2884                           	opt stack 0
  2885                           
  2886                           ; 1 bytes @ 0x68
  2887  000168                     	ds	1
  2888  000169                     MiWiTasks@j_2544:
  2889                           	opt stack 0
  2890                           
  2891                           ; 2 bytes @ 0x69
  2892  000169                     	ds	2
  2893  00016B                     MiWiTasks@cIndex:
  2894                           	opt stack 0
  2895                           
  2896                           ; 1 bytes @ 0x6B
  2897  00016B                     	ds	1
  2898  00016C                     MiWiTasks@j_2569:
  2899                           	opt stack 0
  2900                           
  2901                           ; 1 bytes @ 0x6C
  2902  00016C                     	ds	1
  2903  00016D                     MiWiTasks@destPANID:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x6D
  2907  00016D                     	ds	2
  2908  00016F                     MiWiTasks@rxIndex:
  2909                           	opt stack 0
  2910                           
  2911                           ; 1 bytes @ 0x6F
  2912  00016F                     	ds	1
  2913  000170                     MiWiTasks@CapacityByte:
  2914                           	opt stack 0
  2915                           
  2916                           ; 1 bytes @ 0x70
  2917  000170                     	ds	1
  2918  000171                     MiWiTasks@j_2488:
  2919                           	opt stack 0
  2920                           
  2921                           ; 1 bytes @ 0x71
  2922  000171                     	ds	1
  2923  000172                     MiWiTasks@j_2532:
  2924                           	opt stack 0
  2925                           
  2926                           ; 1 bytes @ 0x72
  2927  000172                     	ds	1
  2928  000173                     MiWiTasks@destShortAddress:
  2929                           	opt stack 0
  2930                           
  2931                           ; 2 bytes @ 0x73
  2932  000173                     	ds	2
  2933  000175                     MiWiTasks@sourcePANID:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x75
  2937  000175                     	ds	2
  2938  000177                     MiWiTasks@handle:
  2939                           	opt stack 0
  2940                           
  2941                           ; 1 bytes @ 0x77
  2942  000177                     	ds	1
  2943  000178                     MiWiTasks@sourceShortAddress:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x78
  2947  000178                     	ds	2
  2948  00017A                     MiWiTasks@entry:
  2949                           	opt stack 0
  2950                           
  2951                           ; 1 bytes @ 0x7A
  2952  00017A                     	ds	1
  2953  00017B                     MiWiTasks@j:
  2954                           	opt stack 0
  2955                           
  2956                           ; 1 bytes @ 0x7B
  2957  00017B                     	ds	1
  2958  00017C                     MiWiTasks@i:
  2959                           	opt stack 0
  2960                           
  2961                           ; 1 bytes @ 0x7C
  2962  00017C                     	ds	1
  2963  00017D                     MiApp_UnicastAddress@DestAddress:
  2964                           	opt stack 0
  2965                           
  2966                           ; 2 bytes @ 0x7D
  2967  00017D                     	ds	2
  2968  00017F                     MiApp_UnicastAddress@PermanentAddr:
  2969                           	opt stack 0
  2970                           
  2971                           ; 1 bytes @ 0x7F
  2972  00017F                     	ds	1
  2973  000180                     MiApp_UnicastAddress@SecEn:
  2974                           	opt stack 0
  2975                           
  2976                           ; 1 bytes @ 0x80
  2977  000180                     	ds	1
  2978  000181                     ??_MiApp_UnicastAddress:
  2979                           
  2980                           ; 0 bytes @ 0x81
  2981  000181                     	ds	8
  2982  000189                     ??_main:
  2983                           
  2984                           ; 0 bytes @ 0x89
  2985  000189                     	ds	7
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           postdec1	equ	0xFE5
  2993                           fsr1h	equ	0xFE2
  2994                           fsr1l	equ	0xFE1
  2995                           
  2996                           	psect	cstackBANK0
  2997  0000A3                     __pcstackBANK0:
  2998                           	opt stack 0
  2999  0000A3                     ?i2_MiWi_TickGet:
  3000                           	opt stack 0
  3001  0000A3                     i2SPIPut@i:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x0
  3005  0000A3                     	ds	1
  3006  0000A4                     i2SPIPut@v:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x1
  3010  0000A4                     	ds	1
  3011  0000A5                     i2RegisterRead@value:
  3012                           	opt stack 0
  3013  0000A5                     i2WriteFIFO@Data:
  3014                           	opt stack 0
  3015  0000A5                     i2RegisterSet@setting:
  3016                           	opt stack 0
  3017                           
  3018                           ; 2 bytes @ 0x2
  3019  0000A5                     	ds	1
  3020  0000A6                     i2RegisterRead@IRQ1select:
  3021                           	opt stack 0
  3022  0000A6                     i2WriteFIFO@IRQ1select:
  3023                           	opt stack 0
  3024                           
  3025                           ; 1 bytes @ 0x3
  3026  0000A6                     	ds	1
  3027  0000A7                     ??i2_MiWi_TickGet:
  3028  0000A7                     i2RegisterSet@IRQ1select:
  3029                           	opt stack 0
  3030  0000A7                     i2RegisterRead@IRQ0select:
  3031                           	opt stack 0
  3032  0000A7                     i2WriteFIFO@IRQ0select:
  3033                           	opt stack 0
  3034                           
  3035                           ; 1 bytes @ 0x4
  3036  0000A7                     	ds	1
  3037  0000A8                     i2MiWi_TickGet@failureCounter:
  3038                           	opt stack 0
  3039  0000A8                     i2RegisterSet@IRQ0select:
  3040                           	opt stack 0
  3041  0000A8                     i2RegisterRead@address:
  3042                           	opt stack 0
  3043                           
  3044                           ; 1 bytes @ 0x5
  3045  0000A8                     	ds	1
  3046  0000A9                     i2SetRFMode@mode:
  3047                           	opt stack 0
  3048  0000A9                     i2MiWi_TickGet@currentTime:
  3049                           	opt stack 0
  3050                           
  3051                           ; 4 bytes @ 0x6
  3052  0000A9                     	ds	4
  3053  0000AD                     i2TxPacket@CCA:
  3054                           	opt stack 0
  3055                           
  3056                           ; 1 bytes @ 0xA
  3057  0000AD                     	ds	1
  3058  0000AE                     ??i2_TxPacket:
  3059                           
  3060                           ; 0 bytes @ 0xB
  3061  0000AE                     	ds	8
  3062  0000B6                     i2TxPacket@t1:
  3063                           	opt stack 0
  3064                           
  3065                           ; 4 bytes @ 0x13
  3066  0000B6                     	ds	4
  3067  0000BA                     i2TxPacket@t2:
  3068                           	opt stack 0
  3069                           
  3070                           ; 4 bytes @ 0x17
  3071  0000BA                     	ds	4
  3072  0000BE                     i2TxPacket@status:
  3073                           	opt stack 0
  3074                           
  3075                           ; 1 bytes @ 0x1B
  3076  0000BE                     	ds	1
  3077  0000BF                     i2TxPacket@CCARetries:
  3078                           	opt stack 0
  3079                           
  3080                           ; 1 bytes @ 0x1C
  3081  0000BF                     	ds	1
  3082  0000C0                     i2TxPacket@reTry:
  3083                           	opt stack 0
  3084                           
  3085                           ; 1 bytes @ 0x1D
  3086  0000C0                     	ds	1
  3087  0000C1                     i2TxPacket@allowedTxFailure:
  3088                           	opt stack 0
  3089                           
  3090                           ; 1 bytes @ 0x1E
  3091  0000C1                     	ds	1
  3092  0000C2                     i2TxPacket@TxPacketLen:
  3093                           	opt stack 0
  3094                           
  3095                           ; 1 bytes @ 0x1F
  3096  0000C2                     	ds	1
  3097  0000C3                     i2TxPacket@i:
  3098                           	opt stack 0
  3099                           
  3100                           ; 1 bytes @ 0x20
  3101  0000C3                     	ds	1
  3102  0000C4                     i2TxPacket@rssival:
  3103                           	opt stack 0
  3104                           
  3105                           ; 1 bytes @ 0x21
  3106  0000C4                     	ds	1
  3107  0000C5                     ??_MIWIInterruptHandler:
  3108                           
  3109                           ; 0 bytes @ 0x22
  3110  0000C5                     	ds	6
  3111  0000CB                     MIWIInterruptHandler@counter:
  3112                           	opt stack 0
  3113                           
  3114                           ; 2 bytes @ 0x28
  3115  0000CB                     	ds	2
  3116  0000CD                     MIWIInterruptHandler@fifo_stat:
  3117                           	opt stack 0
  3118                           
  3119                           ; 1 bytes @ 0x2A
  3120  0000CD                     	ds	1
  3121  0000CE                     MIWIInterruptHandler@ackPacket:
  3122                           	opt stack 0
  3123                           
  3124                           ; 4 bytes @ 0x2B
  3125  0000CE                     	ds	4
  3126  0000D2                     MIWIInterruptHandler@bAck:
  3127                           	opt stack 0
  3128                           
  3129                           ; 1 bytes @ 0x2F
  3130  0000D2                     	ds	1
  3131  0000D3                     MIWIInterruptHandler@RxPacketPtr:
  3132                           	opt stack 0
  3133                           
  3134                           ; 1 bytes @ 0x30
  3135  0000D3                     	ds	1
  3136  0000D4                     MIWIInterruptHandler@ackInfoIndex:
  3137                           	opt stack 0
  3138                           
  3139                           ; 1 bytes @ 0x31
  3140  0000D4                     	ds	1
  3141  0000D5                     MIWIInterruptHandler@PacketLen:
  3142                           	opt stack 0
  3143                           
  3144                           ; 1 bytes @ 0x32
  3145  0000D5                     	ds	1
  3146  0000D6                     MIWIInterruptHandler@BankIndex:
  3147                           	opt stack 0
  3148                           
  3149                           ; 1 bytes @ 0x33
  3150  0000D6                     	ds	1
  3151  0000D7                     MIWIInterruptHandler@i:
  3152                           	opt stack 0
  3153                           
  3154                           ; 1 bytes @ 0x34
  3155  0000D7                     	ds	1
  3156  0000D8                     ??_SYS_InterruptHigh:
  3157                           
  3158                           ; 0 bytes @ 0x35
  3159  0000D8                     	ds	14
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           fsr1h	equ	0xFE2
  3168                           fsr1l	equ	0xFE1
  3169                           
  3170                           	psect	cstackCOMRAM
  3171  000001                     __pcstackCOMRAM:
  3172                           	opt stack 0
  3173  000001                     ??_USBStdGetDscHandler:
  3174  000001                     ??_USBStdGetStatusHandler:
  3175  000001                     ?i1_USBTransferOnePacket:
  3176                           	opt stack 0
  3177  000001                     ?i1___ftpack:
  3178                           	opt stack 0
  3179  000001                     USBConfigureEndpoint@direction:
  3180                           	opt stack 0
  3181  000001                     USBCtrlTrfTxService@byteToSend:
  3182                           	opt stack 0
  3183  000001                     USBCtrlTrfRxService@i:
  3184                           	opt stack 0
  3185  000001                     i1USBTransferOnePacket@dir:
  3186                           	opt stack 0
  3187  000001                     i1memset@p1:
  3188                           	opt stack 0
  3189  000001                     i1___ftpack@arg:
  3190                           	opt stack 0
  3191                           
  3192                           ; 3 bytes @ 0x0
  3193  000001                     	ds	1
  3194  000002                     ??_USBConfigureEndpoint:
  3195  000002                     USBCtrlTrfRxService@byteToRead:
  3196                           	opt stack 0
  3197  000002                     USBCtrlTrfInHandler@lastDTS:
  3198                           	opt stack 0
  3199  000002                     USBStdGetStatusHandler@p:
  3200                           	opt stack 0
  3201  000002                     i1USBTransferOnePacket@data:
  3202                           	opt stack 0
  3203                           
  3204                           ; 2 bytes @ 0x1
  3205  000002                     	ds	1
  3206  000003                     i1memset@c:
  3207                           	opt stack 0
  3208                           
  3209                           ; 2 bytes @ 0x2
  3210  000003                     	ds	1
  3211  000004                     i1USBTransferOnePacket@len:
  3212                           	opt stack 0
  3213  000004                     i1___ftpack@exp:
  3214                           	opt stack 0
  3215                           
  3216                           ; 1 bytes @ 0x3
  3217  000004                     	ds	1
  3218  000005                     i1USBTransferOnePacket@ep:
  3219                           	opt stack 0
  3220  000005                     i1___ftpack@sign:
  3221                           	opt stack 0
  3222  000005                     i1memset@n:
  3223                           	opt stack 0
  3224                           
  3225                           ; 2 bytes @ 0x4
  3226  000005                     	ds	1
  3227  000006                     ??i1___ftpack:
  3228  000006                     USBConfigureEndpoint@EPNum:
  3229                           	opt stack 0
  3230  000006                     i1USBTransferOnePacket@handle:
  3231                           	opt stack 0
  3232                           
  3233                           ; 2 bytes @ 0x5
  3234  000006                     	ds	1
  3235  000007                     USBConfigureEndpoint@handle:
  3236                           	opt stack 0
  3237  000007                     i1memset@p:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x6
  3241  000007                     	ds	2
  3242  000009                     ?i1___ftadd:
  3243                           	opt stack 0
  3244  000009                     USBEnableEndpoint@options:
  3245                           	opt stack 0
  3246  000009                     i1USBDeviceInit@i:
  3247                           	opt stack 0
  3248  000009                     i1___ftadd@f1:
  3249                           	opt stack 0
  3250                           
  3251                           ; 3 bytes @ 0x8
  3252  000009                     	ds	1
  3253  00000A                     USBEnableEndpoint@p:
  3254                           	opt stack 0
  3255                           
  3256                           ; 2 bytes @ 0x9
  3257  00000A                     	ds	2
  3258  00000C                     USBEnableEndpoint@ep:
  3259                           	opt stack 0
  3260  00000C                     i1___ftadd@f2:
  3261                           	opt stack 0
  3262                           
  3263                           ; 3 bytes @ 0xB
  3264  00000C                     	ds	1
  3265  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3266                           	opt stack 0
  3267                           
  3268                           ; 2 bytes @ 0xC
  3269  00000D                     	ds	2
  3270  00000F                     ??i1___ftadd:
  3271  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3272                           	opt stack 0
  3273                           
  3274                           ; 2 bytes @ 0xE
  3275  00000F                     	ds	2
  3276  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x10
  3280  000011                     	ds	1
  3281  000012                     i1___ftadd@sign:
  3282                           	opt stack 0
  3283                           
  3284                           ; 1 bytes @ 0x11
  3285  000012                     	ds	1
  3286  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3287  000013                     i1___ftadd@exp2:
  3288                           	opt stack 0
  3289                           
  3290                           ; 1 bytes @ 0x12
  3291  000013                     	ds	1
  3292  000014                     i1___ftadd@exp1:
  3293                           	opt stack 0
  3294                           
  3295                           ; 1 bytes @ 0x13
  3296  000014                     	ds	1
  3297  000015                     ??_USBStdFeatureReqHandler:
  3298  000015                     USBStdSetCfgHandler@i:
  3299                           	opt stack 0
  3300                           
  3301                           ; 1 bytes @ 0x14
  3302  000015                     	ds	1
  3303  000016                     USBStdFeatureReqHandler@pUEP:
  3304                           	opt stack 0
  3305                           
  3306                           ; 2 bytes @ 0x15
  3307  000016                     	ds	2
  3308  000018                     USBStdFeatureReqHandler@current_ep_data:
  3309                           	opt stack 0
  3310                           
  3311                           ; 1 bytes @ 0x17
  3312  000018                     	ds	1
  3313  000019                     USBStdFeatureReqHandler@p:
  3314                           	opt stack 0
  3315                           
  3316                           ; 2 bytes @ 0x18
  3317  000019                     	ds	2
  3318  00001B                     ??_USBCtrlEPService:
  3319  00001B                     
  3320                           ; 0 bytes @ 0x1A
  3321  00001B                     	ds	2
  3322  00001D                     USBCtrlEPService@setup_cnt:
  3323                           	opt stack 0
  3324                           
  3325                           ; 1 bytes @ 0x1C
  3326  00001D                     	ds	1
  3327  00001E                     USBDeviceTasks@i:
  3328                           	opt stack 0
  3329                           
  3330                           ; 1 bytes @ 0x1D
  3331  00001E                     	ds	1
  3332  00001F                     ??_SYS_InterruptLow:
  3333                           
  3334                           ; 0 bytes @ 0x1E
  3335  00001F                     	ds	19
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           postinc0	equ	0xFEE
  3341                           wreg	equ	0xFE8
  3342                           postdec1	equ	0xFE5
  3343                           fsr1h	equ	0xFE2
  3344                           fsr1l	equ	0xFE1
  3345                           
  3346 ;;
  3347 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  3348 ;;
  3349 ;; *************** function _main *****************
  3350 ;; Defined at:
  3351 ;;		line 142 in file "src/main.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  last_update     1   19[BANK3 ] unsigned char 
  3356 ;;  shortaddress    2   29[BANK3 ] unsigned char [2]
  3357 ;;  uid             2    0        unsigned char [2]
  3358 ;;  size            1   28[BANK3 ] unsigned char 
  3359 ;;  rssi            1   25[BANK3 ] unsigned char 
  3360 ;;  power           1   24[BANK3 ] unsigned char 
  3361 ;;  x               2   26[BANK3 ] int 
  3362 ;;  result          1    0        unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;		None               void
  3365 ;; Registers used:
  3366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Totals:         0       0       7       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;Total ram usage:       19 bytes
  3377 ;; Hardware stack levels required when called:   28
  3378 ;; This function calls:
  3379 ;;		_MiApp_ConnectionMode
  3380 ;;		_MiApp_DiscardMessage
  3381 ;;		_MiApp_MessageAvailable
  3382 ;;		_MiApp_NoiseDetection
  3383 ;;		_MiApp_ProtocolInit
  3384 ;;		_MiApp_SetChannel
  3385 ;;		_MiApp_StartConnection
  3386 ;;		_MiApp_UnicastAddress
  3387 ;;		_MiMAC_SetPower
  3388 ;;		_MiWiTasks
  3389 ;;		_SYSTEM_Initialize
  3390 ;;		_USBDeviceAttach
  3391 ;;		_USBDeviceInit
  3392 ;;		_USBTransferOnePacket
  3393 ;;		_dBm_to_mW
  3394 ;;		_decode_variable
  3395 ;;		_memcpy
  3396 ;;		_sendHIDBinary
  3397 ;;		_sendHIDText
  3398 ;;		_send_answer_to_update
  3399 ;;		_send_complete_update
  3400 ;;		_send_network_register
  3401 ;;		_send_periodic_update
  3402 ;;		_sprintf
  3403 ;;		_strcpy
  3404 ;;		_timer_reset
  3405 ;;		_update_LED
  3406 ;;		_update_variable
  3407 ;; This function is called by:
  3408 ;;		Startup code after reset
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text0
  3413  003D4A                     __ptext0:
  3414                           	opt stack 0
  3415  003D4A                     _main:
  3416                           	opt stack 3
  3417                           
  3418                           ;main.c: 144: SYSTEM_Initialize();
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;incstack = 0
  3422  003D4A  EC12  F043         	call	_SYSTEM_Initialize	;wreg free
  3423                           
  3424                           ;main.c: 149: myAppState = STATE_INIT;
  3425  003D4E  0E00               	movlw	0
  3426  003D50  6E52               	movwf	_myAppState,c
  3427                           
  3428                           ;main.c: 151: bool result;
  3429                           ;main.c: 153: myLongAddress[0] = myMUTA_version;
  3430  003D52  0EF2               	movlw	242
  3431  003D54  6EF6               	movwf	tblptrl,c
  3432  003D56                     	if	1	;There is more than 1 active tblptr byte
  3433  003D56  0EFF               	movlw	255
  3434  003D58  6EF7               	movwf	tblptrh,c
  3435  003D5A                     	endif
  3436  003D5A                     	if	1	;There are 3 active tblptr bytes
  3437  003D5A  0E01               	movlw	1
  3438  003D5C  6EF8               	movwf	tblptru,c
  3439  003D5E                     	endif
  3440  003D5E  0008               	tblrd		*
  3441  003D60  CFF5 F1E8          	movff	tablat,_myLongAddress
  3442                           
  3443                           ;main.c: 154: myLongAddress[1] = myMODEL;
  3444  003D64  0EF4               	movlw	244
  3445  003D66  6EF6               	movwf	tblptrl,c
  3446  003D68                     	if	1	;There is more than 1 active tblptr byte
  3447  003D68  0EFF               	movlw	255
  3448  003D6A  6EF7               	movwf	tblptrh,c
  3449  003D6C                     	endif
  3450  003D6C                     	if	1	;There are 3 active tblptr bytes
  3451  003D6C  0E01               	movlw	1
  3452  003D6E  6EF8               	movwf	tblptru,c
  3453  003D70                     	endif
  3454  003D70  0008               	tblrd		*
  3455  003D72  CFF5 F1E9          	movff	tablat,_myLongAddress+1
  3456                           
  3457                           ;main.c: 155: myLongAddress[2] = myUID[0];
  3458  003D76  0EF6               	movlw	246
  3459  003D78  6EF6               	movwf	tblptrl,c
  3460  003D7A                     	if	1	;There is more than 1 active tblptr byte
  3461  003D7A  0EFF               	movlw	255
  3462  003D7C  6EF7               	movwf	tblptrh,c
  3463  003D7E                     	endif
  3464  003D7E                     	if	1	;There are 3 active tblptr bytes
  3465  003D7E  0E01               	movlw	1
  3466  003D80  6EF8               	movwf	tblptru,c
  3467  003D82                     	endif
  3468  003D82  0008               	tblrd		*
  3469  003D84  CFF5 F1EA          	movff	tablat,_myLongAddress+2
  3470                           
  3471                           ;main.c: 156: myLongAddress[3] = myUID[1];
  3472  003D88  0EF7               	movlw	247
  3473  003D8A  6EF6               	movwf	tblptrl,c
  3474  003D8C  0EFF               	movlw	255
  3475  003D8E  6EF7               	movwf	tblptrh,c
  3476  003D90  0E01               	movlw	1
  3477  003D92  6EF8               	movwf	tblptru,c
  3478  003D94  0008               	tblrd		*
  3479  003D96  CFF5 F1EB          	movff	tablat,_myLongAddress+3
  3480                           
  3481                           ;main.c: 159: for (int x=0; x<8; x++)
  3482  003D9A  0E00               	movlw	0
  3483  003D9C  0103               	movlb	3	; () banked
  3484  003D9E  6FDF               	movwf	(main@x+1)& (0+255),b
  3485  003DA0  0E00               	movlw	0
  3486  003DA2  6FDE               	movwf	main@x& (0+255),b
  3487  003DA4                     l21618:
  3488                           
  3489                           ; BSR set to: 3
  3490  003DA4  0103               	movlb	3	; () banked
  3491  003DA6  BFDF               	btfsc	(main@x+1)& (0+255),7,b
  3492  003DA8  D008               	goto	l21622
  3493  003DAA  0103               	movlb	3	; () banked
  3494  003DAC  51DF               	movf	(main@x+1)& (0+255),w,b
  3495  003DAE  E11E               	bnz	l21628
  3496  003DB0  0E08               	movlw	8
  3497  003DB2  0103               	movlb	3	; () banked
  3498  003DB4  5DDE               	subwf	main@x& (0+255),w,b
  3499  003DB6  B0D8               	btfsc	status,0,c
  3500  003DB8  D019               	goto	l21628
  3501  003DBA                     l21622:
  3502                           
  3503                           ; BSR set to: 3
  3504                           ;main.c: 160: mySecurityKey[x] = StaticSecurityKey[x];
  3505  003DBA  0EEC               	movlw	236
  3506  003DBC  0103               	movlb	3	; () banked
  3507  003DBE  25DE               	addwf	main@x& (0+255),w,b
  3508  003DC0  6EF6               	movwf	tblptrl,c
  3509  003DC2  0E1F               	movlw	31
  3510  003DC4  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3511  003DC6  6EF7               	movwf	tblptrh,c
  3512  003DC8  6AF8               	clrf	tblptru,c
  3513  003DCA  0E00               	movlw	0
  3514  003DCC  22F8               	addwfc	tblptru,f,c
  3515  003DCE  0E79               	movlw	low _mySecurityKey
  3516  003DD0  0103               	movlb	3	; () banked
  3517  003DD2  25DE               	addwf	main@x& (0+255),w,b
  3518  003DD4  6ED9               	movwf	fsr2l,c
  3519  003DD6  0E00               	movlw	high _mySecurityKey
  3520  003DD8  0103               	movlb	3	; () banked
  3521  003DDA  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3522  003DDC  6EDA               	movwf	fsr2h,c
  3523  003DDE  0008               	tblrd		*
  3524  003DE0  CFF5 FFDF          	movff	tablat,indf2
  3525                           
  3526                           ; BSR set to: 3
  3527  003DE4  0103               	movlb	3	; () banked
  3528  003DE6  4BDE               	infsnz	main@x& (0+255),f,b
  3529  003DE8  2BDF               	incf	(main@x+1)& (0+255),f,b
  3530  003DEA  D7DC               	goto	l21618
  3531  003DEC                     l21628:
  3532                           
  3533                           ; BSR set to: 3
  3534                           ;main.c: 167: status_led = LED_FAST_PULSE;
  3535  003DEC  0E01               	movlw	1
  3536  003DEE  6E55               	movwf	_status_led,c	;volatile
  3537                           
  3538                           ; BSR set to: 3
  3539                           ;main.c: 168: update_LED();
  3540  003DF0  ECC5  F059         	call	_update_LED	;wreg free
  3541                           
  3542                           ;main.c: 171: USBDeviceInit();
  3543  003DF4  ECD9  F03D         	call	_USBDeviceInit	;wreg free
  3544                           
  3545                           ;main.c: 175: USBDeviceAttach();
  3546  003DF8  EC4A  F05C         	call	_USBDeviceAttach	;wreg free
  3547  003DFC                     l21636:
  3548                           
  3549                           ;main.c: 177: {
  3550                           ;main.c: 181: if( USBDeviceState < CONFIGURED_STATE )
  3551  003DFC  0E20               	movlw	32
  3552  003DFE  604B               	cpfslt	_USBDeviceState,c	;volatile
  3553  003E00  D001               	goto	l1735
  3554  003E02  D7FC               	goto	l21636
  3555  003E04                     l1735:
  3556                           
  3557                           ;main.c: 183: if( UCONbits.SUSPND == 1 )
  3558  003E04  B265               	btfsc	3941,1,c	;volatile
  3559  003E06  D7FA               	goto	l21636
  3560                           
  3561                           ;main.c: 185: myAppState = STATE_USB_READY;
  3562                           
  3563                           ;main.c: 184: continue;
  3564  003E08  0E01               	movlw	1
  3565  003E0A  6E52               	movwf	_myAppState,c
  3566                           
  3567                           ;main.c: 187: }
  3568                           ;main.c: 189: strcpy(ToSendDataBuffer, "I|RESET");
  3569                           
  3570                           ;main.c: 186: break;
  3571  003E0C  0E84               	movlw	low _ToSendDataBuffer
  3572  003E0E  0101               	movlb	1	; () banked
  3573  003E10  6F00               	movwf	strcpy@to& (0+255),b
  3574  003E12  0E03               	movlw	high _ToSendDataBuffer
  3575  003E14  0101               	movlb	1	; () banked
  3576  003E16  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3577  003E18  0EB5               	movlw	low STR_1
  3578  003E1A  0101               	movlb	1	; () banked
  3579  003E1C  6F02               	movwf	strcpy@from& (0+255),b
  3580  003E1E  0E23               	movlw	high STR_1
  3581  003E20  0101               	movlb	1	; () banked
  3582  003E22  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3583  003E24  EC67  F05C         	call	_strcpy	;wreg free
  3584                           
  3585                           ;main.c: 190: sendHIDText(ToSendDataBuffer);
  3586  003E28  0E84               	movlw	low _ToSendDataBuffer
  3587  003E2A  0101               	movlb	1	; () banked
  3588  003E2C  6F07               	movwf	sendHIDText@str& (0+255),b
  3589  003E2E  0E03               	movlw	high _ToSendDataBuffer
  3590  003E30  0101               	movlb	1	; () banked
  3591  003E32  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3592  003E34  EC79  F04F         	call	_sendHIDText	;wreg free
  3593                           
  3594                           ;main.c: 191: _delay((unsigned long)((20)*(16000000/4000.0)));
  3595  003E38  0E68               	movlw	104
  3596  003E3A  0101               	movlb	1	; () banked
  3597  003E3C  6F89               	movwf	??_main& (0+255),b
  3598  003E3E  0EE4               	movlw	228
  3599  003E40                     u25157:
  3600  003E40  2EE8               	decfsz	wreg,f,c
  3601  003E42  D7FE               	goto	u25157
  3602  003E44  2F89               	decfsz	??_main& (0+255),f,b
  3603  003E46  D7FC               	goto	u25157
  3604  003E48  D000               	nop2	
  3605                           
  3606                           ;main.c: 195: send_network_register();
  3607  003E4A  EC88  F053         	call	_send_network_register	;wreg free
  3608  003E4E                     l21652:
  3609                           
  3610                           ;main.c: 197: {
  3611                           ;main.c: 199: if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN) == 0
      +                          )
  3612  003E4E  0101               	movlb	1	; () banked
  3613  003E50  51B7               	movf	_USBOutHandle& (0+255),w,b
  3614  003E52  0101               	movlb	1	; () banked
  3615  003E54  11B8               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  3616  003E56  B4D8               	btfsc	status,2,c
  3617  003E58  D013               	goto	l21656
  3618                           
  3619                           ; BSR set to: 1
  3620  003E5A  C1B7  FFD9         	movff	_USBOutHandle,fsr2l
  3621  003E5E  C1B8  FFDA         	movff	_USBOutHandle+1,fsr2h
  3622  003E62  0101               	movlb	1	; () banked
  3623  003E64  AEDF               	btfss	indf2,7,c
  3624  003E66  D004               	goto	u24620
  3625  003E68  0101               	movlb	1	; () banked
  3626  003E6A  6B89               	clrf	??_main& (0+255),b
  3627  003E6C  2B89               	incf	??_main& (0+255),f,b
  3628  003E6E  D002               	goto	u24628
  3629  003E70                     u24620:
  3630  003E70  0101               	movlb	1	; () banked
  3631  003E72  6B89               	clrf	??_main& (0+255),b
  3632  003E74                     u24628:
  3633  003E74  0101               	movlb	1	; () banked
  3634  003E76  5189               	movf	??_main& (0+255),w,b
  3635  003E78  0103               	movlb	3	; () banked
  3636  003E7A  6FD8               	movwf	_main$4898& (0+255),b
  3637  003E7C  6BD9               	clrf	(_main$4898+1)& (0+255),b
  3638  003E7E  D005               	goto	l21658
  3639  003E80                     l21656:
  3640  003E80  0E00               	movlw	0
  3641  003E82  0103               	movlb	3	; () banked
  3642  003E84  6FD9               	movwf	(_main$4898+1)& (0+255),b
  3643  003E86  0E00               	movlw	0
  3644  003E88  6FD8               	movwf	_main$4898& (0+255),b
  3645  003E8A                     l21658:
  3646                           
  3647                           ; BSR set to: 3
  3648  003E8A  0103               	movlb	3	; () banked
  3649  003E8C  51D8               	movf	_main$4898& (0+255),w,b
  3650  003E8E  0103               	movlb	3	; () banked
  3651  003E90  11D9               	iorwf	(_main$4898+1)& (0+255),w,b
  3652  003E92  B4D8               	btfsc	status,2,c
  3653  003E94  D01E               	goto	l21674
  3654  003E96  D7DB               	goto	l21652
  3655  003E98                     l21662:
  3656                           
  3657                           ;main.c: 204: if (ReceivedDataBuffer[1] != 0x00 || ReceivedDataBuffer[2] != 0x00 || Rece
      +                          ivedDataBuffer[3] != 4 ||ReceivedDataBuffer[4] != 02 || ReceivedDataBuffer[5] != 0xff)
  3658  003E98  0104               	movlb	4	; () banked
  3659  003E9A  5101               	movf	(_ReceivedDataBuffer+1)& (0+255),w,b
  3660  003E9C  A4D8               	btfss	status,2,c
  3661  003E9E  D011               	goto	l1749
  3662                           
  3663                           ; BSR set to: 4
  3664  003EA0  0104               	movlb	4	; () banked
  3665  003EA2  5102               	movf	(_ReceivedDataBuffer+2)& (0+255),w,b
  3666  003EA4  A4D8               	btfss	status,2,c
  3667  003EA6  D00D               	goto	l1749
  3668                           
  3669                           ; BSR set to: 4
  3670  003EA8  0E04               	movlw	4
  3671  003EAA  0104               	movlb	4	; () banked
  3672  003EAC  1903               	xorwf	(_ReceivedDataBuffer+3)& (0+255),w,b
  3673  003EAE  A4D8               	btfss	status,2,c
  3674  003EB0  D008               	goto	l1749
  3675                           
  3676                           ; BSR set to: 4
  3677  003EB2  0E02               	movlw	2
  3678  003EB4  0104               	movlb	4	; () banked
  3679  003EB6  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  3680  003EB8  A4D8               	btfss	status,2,c
  3681  003EBA  D003               	goto	l1749
  3682                           
  3683                           ; BSR set to: 4
  3684  003EBC  0104               	movlb	4	; () banked
  3685  003EBE  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  3686  003EC0  A4D8               	btfss	status,2,c
  3687  003EC2                     l1749:
  3688                           
  3689                           ; BSR set to: 4
  3690  003EC2  00FF               	reset		;# 
  3691                           
  3692                           ;main.c: 209: }
  3693                           ;main.c: 210: mySecurityKey[2] = ReceivedDataBuffer[6];
  3694  003EC4  C406  F07B         	movff	_ReceivedDataBuffer+6,_mySecurityKey+2
  3695                           
  3696                           ;main.c: 211: mySecurityKey[6] = ReceivedDataBuffer[7];
  3697  003EC8  C407  F07F         	movff	_ReceivedDataBuffer+7,_mySecurityKey+6
  3698                           
  3699                           ;main.c: 212: break;
  3700  003ECC  D00A               	goto	l21676
  3701  003ECE                     l1751:
  3702                           
  3703                           ; BSR set to: 4
  3704  003ECE  00FF               	reset		;# 
  3705                           
  3706                           ;main.c: 219: }
  3707                           
  3708                           ;main.c: 218: break;
  3709                           
  3710                           ;main.c: 216: default:
  3711                           
  3712                           ;main.c: 215: break;
  3713  003ED0  D008               	goto	l21676
  3714  003ED2                     l21674:
  3715  003ED2  0104               	movlb	4	; () banked
  3716  003ED4  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  3717                           
  3718                           ; Switch size 1, requested type "space"
  3719                           ; Number of cases is 2, Range of values is 83 to 88
  3720                           ; switch strategies available:
  3721                           ; Name         Instructions Cycles
  3722                           ; simple_byte            7     4 (average)
  3723                           ;	Chosen strategy is simple_byte
  3724  003ED6  0A53               	xorlw	83	; case 83
  3725  003ED8  B4D8               	btfsc	status,2,c
  3726  003EDA  D7DE               	goto	l21662
  3727  003EDC  0A0B               	xorlw	11	; case 88
  3728  003EDE  B4D8               	btfsc	status,2,c
  3729  003EE0  D7F6               	goto	l1751
  3730  003EE2                     l21676:
  3731                           
  3732                           ;main.c: 221: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  3733  003EE2  0E00               	movlw	0
  3734  003EE4  0101               	movlb	1	; () banked
  3735  003EE6  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  3736  003EE8  0E00               	movlw	low _ReceivedDataBuffer
  3737  003EEA  0101               	movlb	1	; () banked
  3738  003EEC  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  3739  003EEE  0E04               	movlw	high _ReceivedDataBuffer
  3740  003EF0  0101               	movlb	1	; () banked
  3741  003EF2  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3742  003EF4  0E40               	movlw	64
  3743  003EF6  0101               	movlb	1	; () banked
  3744  003EF8  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  3745  003EFA  0E01               	movlw	1
  3746  003EFC  ECA4  F04C         	call	_USBTransferOnePacket
  3747  003F00  C100  F1B7         	movff	?_USBTransferOnePacket,_USBOutHandle
  3748  003F04  C101  F1B8         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  3749                           
  3750                           ;main.c: 223: }
  3751                           ;main.c: 224: }
  3752                           ;main.c: 228: MiApp_ProtocolInit(0);
  3753                           
  3754                           ;main.c: 222: break;
  3755  003F08  0E00               	movlw	0
  3756  003F0A  EC11  F03D         	call	_MiApp_ProtocolInit
  3757                           
  3758                           ;main.c: 229: m_power = 0x00;
  3759  003F0E  0E00               	movlw	0
  3760  003F10  0101               	movlb	1	; () banked
  3761  003F12  6FC8               	movwf	_m_power& (0+255),b
  3762                           
  3763                           ; BSR set to: 1
  3764                           ;main.c: 230: MiMAC_SetPower(m_power);
  3765  003F14  0101               	movlb	1	; () banked
  3766  003F16  51C8               	movf	_m_power& (0+255),w,b
  3767  003F18  EC2D  F05C         	call	_MiMAC_SetPower
  3768                           
  3769                           ;main.c: 233: strcpy(ToSendDataBuffer, "I|scanning channels for noise...");
  3770  003F1C  0E84               	movlw	low _ToSendDataBuffer
  3771  003F1E  0101               	movlb	1	; () banked
  3772  003F20  6F00               	movwf	strcpy@to& (0+255),b
  3773  003F22  0E03               	movlw	high _ToSendDataBuffer
  3774  003F24  0101               	movlb	1	; () banked
  3775  003F26  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3776  003F28  0E04               	movlw	low STR_2
  3777  003F2A  0101               	movlb	1	; () banked
  3778  003F2C  6F02               	movwf	strcpy@from& (0+255),b
  3779  003F2E  0E23               	movlw	high STR_2
  3780  003F30  0101               	movlb	1	; () banked
  3781  003F32  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3782  003F34  EC67  F05C         	call	_strcpy	;wreg free
  3783                           
  3784                           ;main.c: 234: sendHIDText(ToSendDataBuffer);
  3785  003F38  0E84               	movlw	low _ToSendDataBuffer
  3786  003F3A  0101               	movlb	1	; () banked
  3787  003F3C  6F07               	movwf	sendHIDText@str& (0+255),b
  3788  003F3E  0E03               	movlw	high _ToSendDataBuffer
  3789  003F40  0101               	movlb	1	; () banked
  3790  003F42  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3791  003F44  EC79  F04F         	call	_sendHIDText	;wreg free
  3792                           
  3793                           ;main.c: 235: _delay((unsigned long)((20)*(16000000/4000.0)));
  3794  003F48  0E68               	movlw	104
  3795  003F4A  0101               	movlb	1	; () banked
  3796  003F4C  6F89               	movwf	??_main& (0+255),b
  3797  003F4E  0EE4               	movlw	228
  3798  003F50                     u25167:
  3799  003F50  2EE8               	decfsz	wreg,f,c
  3800  003F52  D7FE               	goto	u25167
  3801  003F54  2F89               	decfsz	??_main& (0+255),f,b
  3802  003F56  D7FC               	goto	u25167
  3803  003F58  D000               	nop2	
  3804                           
  3805                           ;main.c: 238: BestChannel = MiApp_NoiseDetection(0x01010101, 14, 0x00, &noise_level);
  3806  003F5A  0E01               	movlw	1
  3807  003F5C  0101               	movlb	1	; () banked
  3808  003F5E  6F1D               	movwf	MiApp_NoiseDetection@ChannelMap& (0+255),b
  3809  003F60  0E01               	movlw	1
  3810  003F62  6F1E               	movwf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),b
  3811  003F64  0E01               	movlw	1
  3812  003F66  6F1F               	movwf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),b
  3813  003F68  0E01               	movlw	1
  3814  003F6A  6F20               	movwf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),b
  3815  003F6C  0E0E               	movlw	14
  3816  003F6E  0101               	movlb	1	; () banked
  3817  003F70  6F21               	movwf	MiApp_NoiseDetection@ScanDuration& (0+255),b
  3818  003F72  0E00               	movlw	0
  3819  003F74  0101               	movlb	1	; () banked
  3820  003F76  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
  3821  003F78  0EF7               	movlw	low _noise_level
  3822  003F7A  0101               	movlb	1	; () banked
  3823  003F7C  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
  3824  003F7E  0E01               	movlw	high _noise_level
  3825  003F80  0101               	movlb	1	; () banked
  3826  003F82  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
  3827  003F84  ECD9  F037         	call	_MiApp_NoiseDetection	;wreg free
  3828  003F88  0101               	movlb	1	; () banked
  3829  003F8A  6FBE               	movwf	_BestChannel& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 240: sprintf(ToSendDataBuffer, "I|best channel: %i (noise == %i)", BestChannel,
      +                           noise_level);
  3833  003F8C  0E84               	movlw	low _ToSendDataBuffer
  3834  003F8E  0101               	movlb	1	; () banked
  3835  003F90  6F0C               	movwf	sprintf@sp& (0+255),b
  3836  003F92  0E03               	movlw	high _ToSendDataBuffer
  3837  003F94  0101               	movlb	1	; () banked
  3838  003F96  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3839  003F98  0EE3               	movlw	low STR_3
  3840  003F9A  0101               	movlb	1	; () banked
  3841  003F9C  6F0E               	movwf	sprintf@f& (0+255),b
  3842  003F9E  0E22               	movlw	high STR_3
  3843  003FA0  0101               	movlb	1	; () banked
  3844  003FA2  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3845  003FA4  C1BE  F110         	movff	_BestChannel,?_sprintf+4
  3846  003FA8  0101               	movlb	1	; () banked
  3847  003FAA  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3848  003FAC  C1F7  F112         	movff	_noise_level,?_sprintf+6
  3849  003FB0  0101               	movlb	1	; () banked
  3850  003FB2  6B13               	clrf	(?_sprintf+7)& (0+255),b
  3851  003FB4  ECDC  F029         	call	_sprintf	;wreg free
  3852                           
  3853                           ;main.c: 241: sendHIDText(ToSendDataBuffer);
  3854  003FB8  0E84               	movlw	low _ToSendDataBuffer
  3855  003FBA  0101               	movlb	1	; () banked
  3856  003FBC  6F07               	movwf	sendHIDText@str& (0+255),b
  3857  003FBE  0E03               	movlw	high _ToSendDataBuffer
  3858  003FC0  0101               	movlb	1	; () banked
  3859  003FC2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3860  003FC4  EC79  F04F         	call	_sendHIDText	;wreg free
  3861                           
  3862                           ;main.c: 242: _delay((unsigned long)((20)*(16000000/4000.0)));
  3863  003FC8  0E68               	movlw	104
  3864  003FCA  0101               	movlb	1	; () banked
  3865  003FCC  6F89               	movwf	??_main& (0+255),b
  3866  003FCE  0EE4               	movlw	228
  3867  003FD0                     u25177:
  3868  003FD0  2EE8               	decfsz	wreg,f,c
  3869  003FD2  D7FE               	goto	u25177
  3870  003FD4  2F89               	decfsz	??_main& (0+255),f,b
  3871  003FD6  D7FC               	goto	u25177
  3872  003FD8  D000               	nop2	
  3873                           
  3874                           ;main.c: 244: if( MiApp_SetChannel(BestChannel) == 0 )
  3875  003FDA  0101               	movlb	1	; () banked
  3876  003FDC  51BE               	movf	_BestChannel& (0+255),w,b
  3877  003FDE  EC6B  F05D         	call	_MiApp_SetChannel
  3878  003FE2  0900               	iorlw	0
  3879  003FE4  A4D8               	btfss	status,2,c
  3880  003FE6  D025               	goto	l21708
  3881                           
  3882                           ;main.c: 245: {
  3883                           ;main.c: 246: sprintf(ToSendDataBuffer, "I|Error: unable to set channel %i! (T_T)", Best
      +                          Channel);
  3884  003FE8  0E84               	movlw	low _ToSendDataBuffer
  3885  003FEA  0101               	movlb	1	; () banked
  3886  003FEC  6F0C               	movwf	sprintf@sp& (0+255),b
  3887  003FEE  0E03               	movlw	high _ToSendDataBuffer
  3888  003FF0  0101               	movlb	1	; () banked
  3889  003FF2  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3890  003FF4  0E6C               	movlw	low STR_4
  3891  003FF6  0101               	movlb	1	; () banked
  3892  003FF8  6F0E               	movwf	sprintf@f& (0+255),b
  3893  003FFA  0E22               	movlw	high STR_4
  3894  003FFC  0101               	movlb	1	; () banked
  3895  003FFE  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3896  004000  C1BE  F110         	movff	_BestChannel,?_sprintf+4
  3897  004004  0101               	movlb	1	; () banked
  3898  004006  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3899  004008  ECDC  F029         	call	_sprintf	;wreg free
  3900                           
  3901                           ;main.c: 247: sendHIDText(ToSendDataBuffer);
  3902  00400C  0E84               	movlw	low _ToSendDataBuffer
  3903  00400E  0101               	movlb	1	; () banked
  3904  004010  6F07               	movwf	sendHIDText@str& (0+255),b
  3905  004012  0E03               	movlw	high _ToSendDataBuffer
  3906  004014  0101               	movlb	1	; () banked
  3907  004016  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3908  004018  EC79  F04F         	call	_sendHIDText	;wreg free
  3909                           
  3910                           ;main.c: 248: _delay((unsigned long)((20)*(16000000/4000.0)));
  3911  00401C  0E68               	movlw	104
  3912  00401E  0101               	movlb	1	; () banked
  3913  004020  6F89               	movwf	??_main& (0+255),b
  3914  004022  0EE4               	movlw	228
  3915  004024                     u25187:
  3916  004024  2EE8               	decfsz	wreg,f,c
  3917  004026  D7FE               	goto	u25187
  3918  004028  2F89               	decfsz	??_main& (0+255),f,b
  3919  00402A  D7FC               	goto	u25187
  3920  00402C  D000               	nop2	
  3921                           
  3922                           ;main.c: 249: return;
  3923  00402E  EFF2  F000         	goto	start
  3924  004032                     l21708:
  3925                           
  3926                           ;main.c: 250: }
  3927                           ;main.c: 252: sprintf(ToSendDataBuffer, "I|creating network...");
  3928  004032  0E84               	movlw	low _ToSendDataBuffer
  3929  004034  0101               	movlb	1	; () banked
  3930  004036  6F0C               	movwf	sprintf@sp& (0+255),b
  3931  004038  0E03               	movlw	high _ToSendDataBuffer
  3932  00403A  0101               	movlb	1	; () banked
  3933  00403C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3934  00403E  0E7D               	movlw	low STR_5
  3935  004040  0101               	movlb	1	; () banked
  3936  004042  6F0E               	movwf	sprintf@f& (0+255),b
  3937  004044  0E23               	movlw	high STR_5
  3938  004046  0101               	movlb	1	; () banked
  3939  004048  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3940  00404A  ECDC  F029         	call	_sprintf	;wreg free
  3941                           
  3942                           ;main.c: 253: sendHIDText(ToSendDataBuffer);
  3943  00404E  0E84               	movlw	low _ToSendDataBuffer
  3944  004050  0101               	movlb	1	; () banked
  3945  004052  6F07               	movwf	sendHIDText@str& (0+255),b
  3946  004054  0E03               	movlw	high _ToSendDataBuffer
  3947  004056  0101               	movlb	1	; () banked
  3948  004058  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3949  00405A  EC79  F04F         	call	_sendHIDText	;wreg free
  3950                           
  3951                           ;main.c: 254: _delay((unsigned long)((20)*(16000000/4000.0)));
  3952  00405E  0E68               	movlw	104
  3953  004060  0101               	movlb	1	; () banked
  3954  004062  6F89               	movwf	??_main& (0+255),b
  3955  004064  0EE4               	movlw	228
  3956  004066                     u25197:
  3957  004066  2EE8               	decfsz	wreg,f,c
  3958  004068  D7FE               	goto	u25197
  3959  00406A  2F89               	decfsz	??_main& (0+255),f,b
  3960  00406C  D7FC               	goto	u25197
  3961  00406E  D000               	nop2	
  3962                           
  3963                           ;main.c: 256: MiApp_StartConnection(0x00, 0, 0);
  3964  004070  0E00               	movlw	0
  3965  004072  0101               	movlb	1	; () banked
  3966  004074  6F41               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  3967  004076  0E00               	movlw	0
  3968  004078  0101               	movlb	1	; () banked
  3969  00407A  6F42               	movwf	MiApp_StartConnection@ChannelMap& (0+255),b
  3970  00407C  0E00               	movlw	0
  3971  00407E  6F43               	movwf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  3972  004080  0E00               	movlw	0
  3973  004082  6F44               	movwf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  3974  004084  0E00               	movlw	0
  3975  004086  6F45               	movwf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  3976  004088  0E00               	movlw	0
  3977  00408A  EC48  F048         	call	_MiApp_StartConnection
  3978                           
  3979                           ;main.c: 257: MiApp_ConnectionMode(0x03);
  3980  00408E  0E03               	movlw	3
  3981  004090  EC03  F05D         	call	_MiApp_ConnectionMode
  3982                           
  3983                           ;main.c: 259: sprintf(ToSendDataBuffer, "I|PANID:%02x%02x Ch:%02d",myPANID.v[1],myPANID.
      +                          v[0],BestChannel);
  3984  004094  0E84               	movlw	low _ToSendDataBuffer
  3985  004096  0101               	movlb	1	; () banked
  3986  004098  6F0C               	movwf	sprintf@sp& (0+255),b
  3987  00409A  0E03               	movlw	high _ToSendDataBuffer
  3988  00409C  0101               	movlb	1	; () banked
  3989  00409E  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3990  0040A0  0E64               	movlw	low STR_6
  3991  0040A2  0101               	movlb	1	; () banked
  3992  0040A4  6F0E               	movwf	sprintf@f& (0+255),b
  3993  0040A6  0E23               	movlw	high STR_6
  3994  0040A8  0101               	movlb	1	; () banked
  3995  0040AA  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3996  0040AC  C1F1  F110         	movff	_myPANID+1,?_sprintf+4
  3997  0040B0  0101               	movlb	1	; () banked
  3998  0040B2  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3999  0040B4  C1F0  F112         	movff	_myPANID,?_sprintf+6
  4000  0040B8  0101               	movlb	1	; () banked
  4001  0040BA  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4002  0040BC  C1BE  F114         	movff	_BestChannel,?_sprintf+8
  4003  0040C0  0101               	movlb	1	; () banked
  4004  0040C2  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4005  0040C4  ECDC  F029         	call	_sprintf	;wreg free
  4006                           
  4007                           ;main.c: 260: sendHIDText(ToSendDataBuffer);
  4008  0040C8  0E84               	movlw	low _ToSendDataBuffer
  4009  0040CA  0101               	movlb	1	; () banked
  4010  0040CC  6F07               	movwf	sendHIDText@str& (0+255),b
  4011  0040CE  0E03               	movlw	high _ToSendDataBuffer
  4012  0040D0  0101               	movlb	1	; () banked
  4013  0040D2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4014  0040D4  EC79  F04F         	call	_sendHIDText	;wreg free
  4015                           
  4016                           ;main.c: 261: _delay((unsigned long)((20)*(16000000/4000.0)));
  4017  0040D8  0E68               	movlw	104
  4018  0040DA  0101               	movlb	1	; () banked
  4019  0040DC  6F89               	movwf	??_main& (0+255),b
  4020  0040DE  0EE4               	movlw	228
  4021  0040E0                     u25207:
  4022  0040E0  2EE8               	decfsz	wreg,f,c
  4023  0040E2  D7FE               	goto	u25207
  4024  0040E4  2F89               	decfsz	??_main& (0+255),f,b
  4025  0040E6  D7FC               	goto	u25207
  4026  0040E8  D000               	nop2	
  4027                           
  4028                           ;main.c: 263: sprintf(ToSendDataBuffer, "I|operator's address: %02x%02x", myShortAddress
      +                          .v[1], myShortAddress.v[0]);
  4029  0040EA  0E84               	movlw	low _ToSendDataBuffer
  4030  0040EC  0101               	movlb	1	; () banked
  4031  0040EE  6F0C               	movwf	sprintf@sp& (0+255),b
  4032  0040F0  0E03               	movlw	high _ToSendDataBuffer
  4033  0040F2  0101               	movlb	1	; () banked
  4034  0040F4  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4035  0040F6  0E45               	movlw	low STR_7
  4036  0040F8  0101               	movlb	1	; () banked
  4037  0040FA  6F0E               	movwf	sprintf@f& (0+255),b
  4038  0040FC  0E23               	movlw	high STR_7
  4039  0040FE  0101               	movlb	1	; () banked
  4040  004100  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4041  004102  C1F3  F110         	movff	_myShortAddress+1,?_sprintf+4
  4042  004106  0101               	movlb	1	; () banked
  4043  004108  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4044  00410A  C1F2  F112         	movff	_myShortAddress,?_sprintf+6
  4045  00410E  0101               	movlb	1	; () banked
  4046  004110  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4047  004112  ECDC  F029         	call	_sprintf	;wreg free
  4048                           
  4049                           ;main.c: 264: sendHIDText(ToSendDataBuffer);
  4050  004116  0E84               	movlw	low _ToSendDataBuffer
  4051  004118  0101               	movlb	1	; () banked
  4052  00411A  6F07               	movwf	sendHIDText@str& (0+255),b
  4053  00411C  0E03               	movlw	high _ToSendDataBuffer
  4054  00411E  0101               	movlb	1	; () banked
  4055  004120  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4056  004122  EC79  F04F         	call	_sendHIDText	;wreg free
  4057                           
  4058                           ;main.c: 265: _delay((unsigned long)((20)*(16000000/4000.0)));
  4059  004126  0E68               	movlw	104
  4060  004128  0101               	movlb	1	; () banked
  4061  00412A  6F89               	movwf	??_main& (0+255),b
  4062  00412C  0EE4               	movlw	228
  4063  00412E                     u25217:
  4064  00412E  2EE8               	decfsz	wreg,f,c
  4065  004130  D7FE               	goto	u25217
  4066  004132  2F89               	decfsz	??_main& (0+255),f,b
  4067  004134  D7FC               	goto	u25217
  4068  004136  D000               	nop2	
  4069                           
  4070                           ;main.c: 267: sprintf(ToSendDataBuffer, "I|status: ready!");
  4071  004138  0E84               	movlw	low _ToSendDataBuffer
  4072  00413A  0101               	movlb	1	; () banked
  4073  00413C  6F0C               	movwf	sprintf@sp& (0+255),b
  4074  00413E  0E03               	movlw	high _ToSendDataBuffer
  4075  004140  0101               	movlb	1	; () banked
  4076  004142  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4077  004144  0EA4               	movlw	low STR_8
  4078  004146  0101               	movlb	1	; () banked
  4079  004148  6F0E               	movwf	sprintf@f& (0+255),b
  4080  00414A  0E23               	movlw	high STR_8
  4081  00414C  0101               	movlb	1	; () banked
  4082  00414E  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4083  004150  ECDC  F029         	call	_sprintf	;wreg free
  4084                           
  4085                           ;main.c: 268: sendHIDText(ToSendDataBuffer);
  4086  004154  0E84               	movlw	low _ToSendDataBuffer
  4087  004156  0101               	movlb	1	; () banked
  4088  004158  6F07               	movwf	sendHIDText@str& (0+255),b
  4089  00415A  0E03               	movlw	high _ToSendDataBuffer
  4090  00415C  0101               	movlb	1	; () banked
  4091  00415E  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4092  004160  EC79  F04F         	call	_sendHIDText	;wreg free
  4093                           
  4094                           ;main.c: 269: _delay((unsigned long)((20)*(16000000/4000.0)));
  4095  004164  0E68               	movlw	104
  4096  004166  0101               	movlb	1	; () banked
  4097  004168  6F89               	movwf	??_main& (0+255),b
  4098  00416A  0EE4               	movlw	228
  4099  00416C                     u25227:
  4100  00416C  2EE8               	decfsz	wreg,f,c
  4101  00416E  D7FE               	goto	u25227
  4102  004170  2F89               	decfsz	??_main& (0+255),f,b
  4103  004172  D7FC               	goto	u25227
  4104  004174  D000               	nop2	
  4105                           
  4106                           ;main.c: 274: send_complete_update();
  4107  004176  EC13  F031         	call	_send_complete_update	;wreg free
  4108                           
  4109                           ;main.c: 277: MiApp_ConnectionMode(0x00);
  4110  00417A  0E00               	movlw	0
  4111  00417C  EC03  F05D         	call	_MiApp_ConnectionMode
  4112                           
  4113                           ;main.c: 279: sprintf(ToSendDataBuffer, "I|accepting scans & connections");
  4114  004180  0E84               	movlw	low _ToSendDataBuffer
  4115  004182  0101               	movlb	1	; () banked
  4116  004184  6F0C               	movwf	sprintf@sp& (0+255),b
  4117  004186  0E03               	movlw	high _ToSendDataBuffer
  4118  004188  0101               	movlb	1	; () banked
  4119  00418A  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4120  00418C  0E25               	movlw	low STR_9
  4121  00418E  0101               	movlb	1	; () banked
  4122  004190  6F0E               	movwf	sprintf@f& (0+255),b
  4123  004192  0E23               	movlw	high STR_9
  4124  004194  0101               	movlb	1	; () banked
  4125  004196  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4126  004198  ECDC  F029         	call	_sprintf	;wreg free
  4127                           
  4128                           ;main.c: 280: sendHIDText(ToSendDataBuffer);
  4129  00419C  0E84               	movlw	low _ToSendDataBuffer
  4130  00419E  0101               	movlb	1	; () banked
  4131  0041A0  6F07               	movwf	sendHIDText@str& (0+255),b
  4132  0041A2  0E03               	movlw	high _ToSendDataBuffer
  4133  0041A4  0101               	movlb	1	; () banked
  4134  0041A6  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4135  0041A8  EC79  F04F         	call	_sendHIDText	;wreg free
  4136                           
  4137                           ;main.c: 281: _delay((unsigned long)((20)*(16000000/4000.0)));
  4138  0041AC  0E68               	movlw	104
  4139  0041AE  0101               	movlb	1	; () banked
  4140  0041B0  6F89               	movwf	??_main& (0+255),b
  4141  0041B2  0EE4               	movlw	228
  4142  0041B4                     u25237:
  4143  0041B4  2EE8               	decfsz	wreg,f,c
  4144  0041B6  D7FE               	goto	u25237
  4145  0041B8  2F89               	decfsz	??_main& (0+255),f,b
  4146  0041BA  D7FC               	goto	u25237
  4147  0041BC  D000               	nop2	
  4148                           
  4149                           ;main.c: 283: myAppState = STATE_READY;
  4150  0041BE  0E02               	movlw	2
  4151  0041C0  6E52               	movwf	_myAppState,c
  4152                           
  4153                           ;main.c: 284: status_led = LED_SLOW_PULSE;
  4154  0041C2  0E02               	movlw	2
  4155  0041C4  6E55               	movwf	_status_led,c	;volatile
  4156                           
  4157                           ;main.c: 285: update_LED();
  4158  0041C6  ECC5  F059         	call	_update_LED	;wreg free
  4159                           
  4160                           ;main.c: 287: m_uptime_days = 0;
  4161  0041CA  0E00               	movlw	0
  4162  0041CC  0101               	movlb	1	; () banked
  4163  0041CE  6FB0               	movwf	_m_uptime_days& (0+255),b	;volatile
  4164  0041D0  0E00               	movlw	0
  4165  0041D2  0101               	movlb	1	; () banked
  4166  0041D4  6FB1               	movwf	(_m_uptime_days+1)& (0+255),b	;volatile
  4167  0041D6  0E00               	movlw	0
  4168  0041D8  0101               	movlb	1	; () banked
  4169  0041DA  6FB2               	movwf	(_m_uptime_days+2)& (0+255),b	;volatile
  4170                           
  4171                           ; BSR set to: 1
  4172                           ;main.c: 288: timer_reset();
  4173  0041DC  EC99  F05D         	call	_timer_reset	;wreg free
  4174  0041E0                     l21756:
  4175                           
  4176                           ;main.c: 293: {
  4177                           ;main.c: 294: uint8_t shortaddress[2];
  4178                           ;main.c: 295: uint8_t power;
  4179                           ;main.c: 296: uint8_t rssi;
  4180                           ;main.c: 297: uint8_t uid[2];
  4181                           ;main.c: 298: uint8_t size;
  4182                           ;main.c: 302: MiWiTasks();
  4183  0041E0  ECE3  F011         	call	_MiWiTasks	;wreg free
  4184                           
  4185                           ;main.c: 306: if(MiApp_MessageAvailable())
  4186  0041E4  ECBB  F05D         	call	_MiApp_MessageAvailable	;wreg free
  4187  0041E8  0900               	iorlw	0
  4188  0041EA  B4D8               	btfsc	status,2,c
  4189  0041EC  D1FD               	goto	l21858
  4190                           
  4191                           ;main.c: 307: {
  4192                           ;main.c: 308: shortaddress[0] = rxMessage.SourceAddress[0];
  4193  0041EE  C193  FFD9         	movff	_rxMessage+3,fsr2l
  4194  0041F2  C194  FFDA         	movff	_rxMessage+4,fsr2h
  4195  0041F6  50DF               	movf	indf2,w,c
  4196  0041F8  0103               	movlb	3	; () banked
  4197  0041FA  6FE1               	movwf	main@shortaddress& (0+255),b
  4198                           
  4199                           ; BSR set to: 3
  4200                           ;main.c: 309: shortaddress[1] = rxMessage.SourceAddress[1];
  4201  0041FC  0101               	movlb	1	; () banked
  4202  0041FE  EE20 F001          	lfsr	2,1
  4203  004202  5193               	movf	(_rxMessage+3)& (0+255),w,b
  4204  004204  26D9               	addwf	fsr2l,f,c
  4205  004206  5194               	movf	(_rxMessage+4)& (0+255),w,b
  4206  004208  22DA               	addwfc	fsr2h,f,c
  4207  00420A  50DF               	movf	indf2,w,c
  4208  00420C  0103               	movlb	3	; () banked
  4209  00420E  6FE2               	movwf	(main@shortaddress+1)& (0+255),b
  4210                           
  4211                           ;main.c: 310: switch(rxMessage.Payload[0])
  4212  004210  D1D9               	goto	l21856
  4213  004212                     l1760:
  4214                           
  4215                           ;main.c: 313: rssi = rxMessage.PacketRSSI;
  4216  004212  C198  F3DD         	movff	_rxMessage+8,main@rssi
  4217                           
  4218                           ;main.c: 314: power = rxMessage.Payload[1];
  4219  004216  0101               	movlb	1	; () banked
  4220  004218  EE20 F001          	lfsr	2,1
  4221  00421C  5195               	movf	(_rxMessage+5)& (0+255),w,b
  4222  00421E  26D9               	addwf	fsr2l,f,c
  4223  004220  5196               	movf	(_rxMessage+6)& (0+255),w,b
  4224  004222  22DA               	addwfc	fsr2h,f,c
  4225  004224  50DF               	movf	indf2,w,c
  4226  004226  0103               	movlb	3	; () banked
  4227  004228  6FDC               	movwf	main@power& (0+255),b
  4228                           
  4229                           ; BSR set to: 3
  4230                           ;main.c: 315: MiApp_DiscardMessage();
  4231  00422A  ECC4  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4232                           
  4233                           ;main.c: 317: {TxData = 11;};
  4234  00422E  0E0B               	movlw	11
  4235  004230  0101               	movlb	1	; () banked
  4236  004232  6FC6               	movwf	_TxData& (0+255),b
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;main.c: 318: TxBuffer[TxData++] = 01;
  4240  004234  0101               	movlb	1	; () banked
  4241  004236  51C6               	movf	_TxData& (0+255),w,b
  4242  004238  0D01               	mullw	1
  4243  00423A  0EA6               	movlw	low _TxBuffer
  4244  00423C  24F3               	addwf	prodl,w,c
  4245  00423E  6ED9               	movwf	fsr2l,c
  4246  004240  0E02               	movlw	high _TxBuffer
  4247  004242  20F4               	addwfc	prodh,w,c
  4248  004244  6EDA               	movwf	fsr2h,c
  4249  004246  0E01               	movlw	1
  4250  004248  6EDF               	movwf	indf2,c
  4251                           
  4252                           ; BSR set to: 1
  4253  00424A  0101               	movlb	1	; () banked
  4254  00424C  2BC6               	incf	_TxData& (0+255),f,b
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;main.c: 319: TxBuffer[TxData++] = power;
  4258  00424E  0101               	movlb	1	; () banked
  4259  004250  51C6               	movf	_TxData& (0+255),w,b
  4260  004252  0D01               	mullw	1
  4261  004254  0EA6               	movlw	low _TxBuffer
  4262  004256  24F3               	addwf	prodl,w,c
  4263  004258  6ED9               	movwf	fsr2l,c
  4264  00425A  0E02               	movlw	high _TxBuffer
  4265  00425C  20F4               	addwfc	prodh,w,c
  4266  00425E  6EDA               	movwf	fsr2h,c
  4267  004260  C3DC  FFDF         	movff	main@power,indf2
  4268                           
  4269                           ; BSR set to: 1
  4270  004264  0101               	movlb	1	; () banked
  4271  004266  2BC6               	incf	_TxData& (0+255),f,b
  4272                           
  4273                           ; BSR set to: 1
  4274                           ;main.c: 320: TxBuffer[TxData++] = rssi;
  4275  004268  0101               	movlb	1	; () banked
  4276  00426A  51C6               	movf	_TxData& (0+255),w,b
  4277  00426C  0D01               	mullw	1
  4278  00426E  0EA6               	movlw	low _TxBuffer
  4279  004270  24F3               	addwf	prodl,w,c
  4280  004272  6ED9               	movwf	fsr2l,c
  4281  004274  0E02               	movlw	high _TxBuffer
  4282  004276  20F4               	addwfc	prodh,w,c
  4283  004278  6EDA               	movwf	fsr2h,c
  4284  00427A  C3DD  FFDF         	movff	main@rssi,indf2
  4285                           
  4286                           ; BSR set to: 1
  4287  00427E  0101               	movlb	1	; () banked
  4288  004280  2BC6               	incf	_TxData& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;main.c: 322: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4292  004282  0EE1               	movlw	low main@shortaddress
  4293  004284  0101               	movlb	1	; () banked
  4294  004286  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4295  004288  0E03               	movlw	high main@shortaddress
  4296  00428A  0101               	movlb	1	; () banked
  4297  00428C  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4298  00428E  0E00               	movlw	0
  4299  004290  0101               	movlb	1	; () banked
  4300  004292  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4301  004294  0E01               	movlw	1
  4302  004296  0101               	movlb	1	; () banked
  4303  004298  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4304  00429A  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  4305  00429E  06E8               	decf	wreg,f,c
  4306  0042A0  A4D8               	btfss	status,2,c
  4307  0042A2  D02B               	goto	l21788
  4308                           
  4309                           ;main.c: 323: {
  4310                           ;main.c: 324: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: OK, %s, RSSI=%i", shorta
      +                          ddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4311  0042A4  0E84               	movlw	low _ToSendDataBuffer
  4312  0042A6  0101               	movlb	1	; () banked
  4313  0042A8  6F0C               	movwf	sprintf@sp& (0+255),b
  4314  0042AA  0E03               	movlw	high _ToSendDataBuffer
  4315  0042AC  0101               	movlb	1	; () banked
  4316  0042AE  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4317  0042B0  0EBC               	movlw	low STR_10
  4318  0042B2  0101               	movlb	1	; () banked
  4319  0042B4  6F0E               	movwf	sprintf@f& (0+255),b
  4320  0042B6  0E22               	movlw	high STR_10
  4321  0042B8  0101               	movlb	1	; () banked
  4322  0042BA  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4323  0042BC  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4324  0042C0  0101               	movlb	1	; () banked
  4325  0042C2  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4326  0042C4  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4327  0042C8  0101               	movlb	1	; () banked
  4328  0042CA  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4329  0042CC  0103               	movlb	3	; () banked
  4330  0042CE  51DC               	movf	main@power& (0+255),w,b
  4331  0042D0  EC5B  F051         	call	_dBm_to_mW
  4332  0042D4  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4333  0042D8  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4334  0042DC  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4335  0042E0  0101               	movlb	1	; () banked
  4336  0042E2  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4337  0042E4  ECDC  F029         	call	_sprintf	;wreg free
  4338                           
  4339                           ;main.c: 325: sendHIDText(ToSendDataBuffer);
  4340  0042E8  0E84               	movlw	low _ToSendDataBuffer
  4341  0042EA  0101               	movlb	1	; () banked
  4342  0042EC  6F07               	movwf	sendHIDText@str& (0+255),b
  4343  0042EE  0E03               	movlw	high _ToSendDataBuffer
  4344  0042F0  0101               	movlb	1	; () banked
  4345  0042F2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4346  0042F4  EC79  F04F         	call	_sendHIDText	;wreg free
  4347                           
  4348                           ;main.c: 327: }
  4349  0042F8  D773               	goto	l21756
  4350  0042FA                     l21788:
  4351                           
  4352                           ;main.c: 328: else
  4353                           ;main.c: 329: {
  4354                           ;main.c: 330: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: error sending back, %s, 
      +                          RSSI=%i", shortaddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4355  0042FA  0E84               	movlw	low _ToSendDataBuffer
  4356  0042FC  0101               	movlb	1	; () banked
  4357  0042FE  6F0C               	movwf	sprintf@sp& (0+255),b
  4358  004300  0E03               	movlw	high _ToSendDataBuffer
  4359  004302  0101               	movlb	1	; () banked
  4360  004304  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4361  004306  0ED5               	movlw	low STR_11
  4362  004308  0101               	movlb	1	; () banked
  4363  00430A  6F0E               	movwf	sprintf@f& (0+255),b
  4364  00430C  0E21               	movlw	high STR_11
  4365  00430E  0101               	movlb	1	; () banked
  4366  004310  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4367  004312  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4368  004316  0101               	movlb	1	; () banked
  4369  004318  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4370  00431A  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4371  00431E  0101               	movlb	1	; () banked
  4372  004320  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4373  004322  0103               	movlb	3	; () banked
  4374  004324  51DC               	movf	main@power& (0+255),w,b
  4375  004326  EC5B  F051         	call	_dBm_to_mW
  4376  00432A  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4377  00432E  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4378  004332  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4379  004336  0101               	movlb	1	; () banked
  4380  004338  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4381  00433A  ECDC  F029         	call	_sprintf	;wreg free
  4382                           
  4383                           ;main.c: 331: sendHIDText(ToSendDataBuffer);
  4384  00433E  0E84               	movlw	low _ToSendDataBuffer
  4385  004340  0101               	movlb	1	; () banked
  4386  004342  6F07               	movwf	sendHIDText@str& (0+255),b
  4387  004344  0E03               	movlw	high _ToSendDataBuffer
  4388  004346  0101               	movlb	1	; () banked
  4389  004348  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4390  00434A  EC79  F04F         	call	_sendHIDText	;wreg free
  4391                           
  4392                           ;main.c: 333: }
  4393                           ;main.c: 334: break;
  4394  00434E  D748               	goto	l21756
  4395  004350                     l21792:
  4396                           
  4397                           ;main.c: 338: p_buffer = &m_buffer[0];
  4398  004350  0ED1               	movlw	low _m_buffer
  4399  004352  0101               	movlb	1	; () banked
  4400  004354  6FB9               	movwf	_p_buffer& (0+255),b
  4401  004356  0E02               	movlw	high _m_buffer
  4402  004358  0101               	movlb	1	; () banked
  4403  00435A  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;main.c: 339: *(p_buffer++) = 0x4d;
  4407  00435C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4408  004360  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4409  004364  0E4D               	movlw	77
  4410  004366  6EDF               	movwf	indf2,c
  4411                           
  4412                           ; BSR set to: 1
  4413  004368  0101               	movlb	1	; () banked
  4414  00436A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4415  00436C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4416                           
  4417                           ;main.c: 340: *(p_buffer++) = shortaddress[0];
  4418  00436E  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4419  004372  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4420  004376  C3E1  FFDF         	movff	main@shortaddress,indf2
  4421                           
  4422                           ; BSR set to: 1
  4423  00437A  0101               	movlb	1	; () banked
  4424  00437C  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4425  00437E  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;main.c: 341: *(p_buffer++) = shortaddress[1];
  4429  004380  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4430  004384  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4431  004388  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4432  00438C  0101               	movlb	1	; () banked
  4433  00438E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4434  004390  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;main.c: 342: size = rxMessage.PayloadSize;
  4438  004392  C197  F3E0         	movff	_rxMessage+7,main@size
  4439                           
  4440                           ; BSR set to: 1
  4441                           ;main.c: 343: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4442  004396  C1B9  F100         	movff	_p_buffer,memcpy@d1
  4443  00439A  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  4444  00439E  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4445  0043A2  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4446  0043A6  C3E0  F104         	movff	main@size,memcpy@n
  4447  0043AA  0101               	movlb	1	; () banked
  4448  0043AC  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4449  0043AE  EC94  F059         	call	_memcpy	;wreg free
  4450                           
  4451                           ;main.c: 344: p_buffer += size;
  4452  0043B2  0103               	movlb	3	; () banked
  4453  0043B4  51E0               	movf	main@size& (0+255),w,b
  4454  0043B6  0D01               	mullw	1
  4455  0043B8  50F3               	movf	prodl,w,c
  4456  0043BA  0101               	movlb	1	; () banked
  4457  0043BC  27B9               	addwf	_p_buffer& (0+255),f,b
  4458  0043BE  50F4               	movf	prodh,w,c
  4459  0043C0  0101               	movlb	1	; () banked
  4460  0043C2  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4461                           
  4462                           ; BSR set to: 1
  4463                           ;main.c: 346: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4464  0043C4  0ED1               	movlw	low _m_buffer
  4465  0043C6  0101               	movlb	1	; () banked
  4466  0043C8  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4467  0043CA  0E02               	movlw	high _m_buffer
  4468  0043CC  0101               	movlb	1	; () banked
  4469  0043CE  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4470  0043D0  0ED1               	movlw	_m_buffer& (0+255)
  4471  0043D2  0800               	sublw	0
  4472  0043D4  0101               	movlb	1	; () banked
  4473  0043D6  25B9               	addwf	_p_buffer& (0+255),w,b
  4474  0043D8  0101               	movlb	1	; () banked
  4475  0043DA  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4476  0043DC  EC7D  F055         	call	_sendHIDBinary	;wreg free
  4477                           
  4478                           ;main.c: 347: MiApp_DiscardMessage();
  4479  0043E0  ECC4  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4480                           
  4481                           ;main.c: 348: break;
  4482  0043E4  D6FD               	goto	l21756
  4483  0043E6                     l21812:
  4484                           
  4485                           ;main.c: 351: {TxData = 11;};
  4486  0043E6  0E0B               	movlw	11
  4487  0043E8  0101               	movlb	1	; () banked
  4488  0043EA  6FC6               	movwf	_TxData& (0+255),b
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;main.c: 352: size = rxMessage.PayloadSize;
  4492  0043EC  C197  F3E0         	movff	_rxMessage+7,main@size
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;main.c: 353: memcpy(&TxBuffer[TxData], &rxMessage.Payload[0], size);
  4496  0043F0  0101               	movlb	1	; () banked
  4497  0043F2  51C6               	movf	_TxData& (0+255),w,b
  4498  0043F4  0D01               	mullw	1
  4499  0043F6  0EA6               	movlw	low _TxBuffer
  4500  0043F8  24F3               	addwf	prodl,w,c
  4501  0043FA  0101               	movlb	1	; () banked
  4502  0043FC  6F00               	movwf	memcpy@d1& (0+255),b
  4503  0043FE  0E02               	movlw	high _TxBuffer
  4504  004400  20F4               	addwfc	prodh,w,c
  4505  004402  0101               	movlb	1	; () banked
  4506  004404  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  4507  004406  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4508  00440A  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4509  00440E  C3E0  F104         	movff	main@size,memcpy@n
  4510  004412  0101               	movlb	1	; () banked
  4511  004414  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4512  004416  EC94  F059         	call	_memcpy	;wreg free
  4513                           
  4514                           ;main.c: 354: TxData = TxData + size;
  4515  00441A  0101               	movlb	1	; () banked
  4516  00441C  51C6               	movf	_TxData& (0+255),w,b
  4517  00441E  0103               	movlb	3	; () banked
  4518  004420  25E0               	addwf	main@size& (0+255),w,b
  4519  004422  0101               	movlb	1	; () banked
  4520  004424  6FC6               	movwf	_TxData& (0+255),b
  4521                           
  4522                           ; BSR set to: 1
  4523                           ;main.c: 355: MiApp_DiscardMessage();
  4524  004426  ECC4  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4525                           
  4526                           ;main.c: 357: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4527  00442A  0EE1               	movlw	low main@shortaddress
  4528  00442C  0101               	movlb	1	; () banked
  4529  00442E  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4530  004430  0E03               	movlw	high main@shortaddress
  4531  004432  0101               	movlb	1	; () banked
  4532  004434  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4533  004436  0E00               	movlw	0
  4534  004438  0101               	movlb	1	; () banked
  4535  00443A  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4536  00443C  0E01               	movlw	1
  4537  00443E  0101               	movlb	1	; () banked
  4538  004440  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4539  004442  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  4540  004446  06E8               	decf	wreg,f,c
  4541  004448  A4D8               	btfss	status,2,c
  4542  00444A  D023               	goto	l21828
  4543                           
  4544                           ;main.c: 358: {
  4545                           ;main.c: 359: sprintf(ToSendDataBuffer, "I|%02x%02x:PING successful: payload_size=%i", s
      +                          hortaddress[1], shortaddress[0], size);
  4546  00444C  0E84               	movlw	low _ToSendDataBuffer
  4547  00444E  0101               	movlb	1	; () banked
  4548  004450  6F0C               	movwf	sprintf@sp& (0+255),b
  4549  004452  0E03               	movlw	high _ToSendDataBuffer
  4550  004454  0101               	movlb	1	; () banked
  4551  004456  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4552  004458  0E40               	movlw	low STR_12
  4553  00445A  0101               	movlb	1	; () banked
  4554  00445C  6F0E               	movwf	sprintf@f& (0+255),b
  4555  00445E  0E22               	movlw	high STR_12
  4556  004460  0101               	movlb	1	; () banked
  4557  004462  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4558  004464  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4559  004468  0101               	movlb	1	; () banked
  4560  00446A  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4561  00446C  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4562  004470  0101               	movlb	1	; () banked
  4563  004472  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4564  004474  C3E0  F114         	movff	main@size,?_sprintf+8
  4565  004478  0101               	movlb	1	; () banked
  4566  00447A  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4567  00447C  ECDC  F029         	call	_sprintf	;wreg free
  4568                           
  4569                           ;main.c: 360: sendHIDText(ToSendDataBuffer);
  4570  004480  0E84               	movlw	low _ToSendDataBuffer
  4571  004482  0101               	movlb	1	; () banked
  4572  004484  6F07               	movwf	sendHIDText@str& (0+255),b
  4573  004486  0E03               	movlw	high _ToSendDataBuffer
  4574  004488  0101               	movlb	1	; () banked
  4575  00448A  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4576  00448C  EC79  F04F         	call	_sendHIDText	;wreg free
  4577                           
  4578                           ;main.c: 362: }
  4579  004490  D6A7               	goto	l21756
  4580  004492                     l21828:
  4581                           
  4582                           ;main.c: 363: else
  4583                           ;main.c: 364: {
  4584                           ;main.c: 365: sprintf(ToSendDataBuffer, "I|%02x%02x:PING error sending back: payload_siz
      +                          e=%i", shortaddress[1], shortaddress[0], size);
  4585  004492  0E84               	movlw	low _ToSendDataBuffer
  4586  004494  0101               	movlb	1	; () banked
  4587  004496  6F0C               	movwf	sprintf@sp& (0+255),b
  4588  004498  0E03               	movlw	high _ToSendDataBuffer
  4589  00449A  0101               	movlb	1	; () banked
  4590  00449C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4591  00449E  0E0C               	movlw	low STR_13
  4592  0044A0  0101               	movlb	1	; () banked
  4593  0044A2  6F0E               	movwf	sprintf@f& (0+255),b
  4594  0044A4  0E22               	movlw	high STR_13
  4595  0044A6  0101               	movlb	1	; () banked
  4596  0044A8  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4597  0044AA  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4598  0044AE  0101               	movlb	1	; () banked
  4599  0044B0  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4600  0044B2  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4601  0044B6  0101               	movlb	1	; () banked
  4602  0044B8  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4603  0044BA  C3E0  F114         	movff	main@size,?_sprintf+8
  4604  0044BE  0101               	movlb	1	; () banked
  4605  0044C0  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4606  0044C2  ECDC  F029         	call	_sprintf	;wreg free
  4607                           
  4608                           ;main.c: 366: sendHIDText(ToSendDataBuffer);
  4609  0044C6  0E84               	movlw	low _ToSendDataBuffer
  4610  0044C8  0101               	movlb	1	; () banked
  4611  0044CA  6F07               	movwf	sendHIDText@str& (0+255),b
  4612  0044CC  0E03               	movlw	high _ToSendDataBuffer
  4613  0044CE  0101               	movlb	1	; () banked
  4614  0044D0  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4615  0044D2  EC79  F04F         	call	_sendHIDText	;wreg free
  4616                           
  4617                           ;main.c: 368: }
  4618                           ;main.c: 369: break;
  4619  0044D6  D684               	goto	l21756
  4620  0044D8                     l21832:
  4621                           
  4622                           ;main.c: 373: p_buffer = &m_buffer[0];
  4623  0044D8  0ED1               	movlw	low _m_buffer
  4624  0044DA  0101               	movlb	1	; () banked
  4625  0044DC  6FB9               	movwf	_p_buffer& (0+255),b
  4626  0044DE  0E02               	movlw	high _m_buffer
  4627  0044E0  0101               	movlb	1	; () banked
  4628  0044E2  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;main.c: 374: *(p_buffer++) = 0x4d;
  4632  0044E4  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4633  0044E8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4634  0044EC  0E4D               	movlw	77
  4635  0044EE  6EDF               	movwf	indf2,c
  4636                           
  4637                           ; BSR set to: 1
  4638  0044F0  0101               	movlb	1	; () banked
  4639  0044F2  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4640  0044F4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4641                           
  4642                           ;main.c: 375: *(p_buffer++) = shortaddress[0];
  4643  0044F6  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4644  0044FA  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4645  0044FE  C3E1  FFDF         	movff	main@shortaddress,indf2
  4646                           
  4647                           ; BSR set to: 1
  4648  004502  0101               	movlb	1	; () banked
  4649  004504  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4650  004506  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;main.c: 376: *(p_buffer++) = shortaddress[1];
  4654  004508  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4655  00450C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4656  004510  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4657  004514  0101               	movlb	1	; () banked
  4658  004516  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4659  004518  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;main.c: 377: size = rxMessage.PayloadSize;
  4663  00451A  C197  F3E0         	movff	_rxMessage+7,main@size
  4664                           
  4665                           ; BSR set to: 1
  4666                           ;main.c: 378: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4667  00451E  C1B9  F100         	movff	_p_buffer,memcpy@d1
  4668  004522  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  4669  004526  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4670  00452A  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4671  00452E  C3E0  F104         	movff	main@size,memcpy@n
  4672  004532  0101               	movlb	1	; () banked
  4673  004534  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4674  004536  EC94  F059         	call	_memcpy	;wreg free
  4675                           
  4676                           ;main.c: 379: p_buffer += size;
  4677  00453A  0103               	movlb	3	; () banked
  4678  00453C  51E0               	movf	main@size& (0+255),w,b
  4679  00453E  0D01               	mullw	1
  4680  004540  50F3               	movf	prodl,w,c
  4681  004542  0101               	movlb	1	; () banked
  4682  004544  27B9               	addwf	_p_buffer& (0+255),f,b
  4683  004546  50F4               	movf	prodh,w,c
  4684  004548  0101               	movlb	1	; () banked
  4685  00454A  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4686                           
  4687                           ; BSR set to: 1
  4688                           ;main.c: 381: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4689  00454C  0ED1               	movlw	low _m_buffer
  4690  00454E  0101               	movlb	1	; () banked
  4691  004550  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4692  004552  0E02               	movlw	high _m_buffer
  4693  004554  0101               	movlb	1	; () banked
  4694  004556  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4695  004558  0ED1               	movlw	_m_buffer& (0+255)
  4696  00455A  0800               	sublw	0
  4697  00455C  0101               	movlb	1	; () banked
  4698  00455E  25B9               	addwf	_p_buffer& (0+255),w,b
  4699  004560  0101               	movlb	1	; () banked
  4700  004562  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4701  004564  EC7D  F055         	call	_sendHIDBinary	;wreg free
  4702                           
  4703                           ;main.c: 382: MiApp_DiscardMessage();
  4704  004568  ECC4  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4705                           
  4706                           ;main.c: 383: break;
  4707  00456C  D639               	goto	l21756
  4708  00456E                     l21852:
  4709                           
  4710                           ;main.c: 387: sprintf(ToSendDataBuffer, "I|%02x%02x: %i command not recognized!", shorta
      +                          ddress[1], shortaddress[0], rxMessage.Payload[0]);
  4711  00456E  0E84               	movlw	low _ToSendDataBuffer
  4712  004570  0101               	movlb	1	; () banked
  4713  004572  6F0C               	movwf	sprintf@sp& (0+255),b
  4714  004574  0E03               	movlw	high _ToSendDataBuffer
  4715  004576  0101               	movlb	1	; () banked
  4716  004578  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4717  00457A  0E95               	movlw	low STR_14
  4718  00457C  0101               	movlb	1	; () banked
  4719  00457E  6F0E               	movwf	sprintf@f& (0+255),b
  4720  004580  0E22               	movlw	high STR_14
  4721  004582  0101               	movlb	1	; () banked
  4722  004584  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4723  004586  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4724  00458A  0101               	movlb	1	; () banked
  4725  00458C  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4726  00458E  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4727  004592  0101               	movlb	1	; () banked
  4728  004594  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4729  004596  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4730  00459A  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4731  00459E  50DF               	movf	indf2,w,c
  4732  0045A0  0101               	movlb	1	; () banked
  4733  0045A2  6F89               	movwf	??_main& (0+255),b
  4734  0045A4  0101               	movlb	1	; () banked
  4735  0045A6  5189               	movf	??_main& (0+255),w,b
  4736  0045A8  0101               	movlb	1	; () banked
  4737  0045AA  6F14               	movwf	(?_sprintf+8)& (0+255),b
  4738  0045AC  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4739  0045AE  ECDC  F029         	call	_sprintf	;wreg free
  4740                           
  4741                           ;main.c: 388: sendHIDText(ToSendDataBuffer);
  4742  0045B2  0E84               	movlw	low _ToSendDataBuffer
  4743  0045B4  0101               	movlb	1	; () banked
  4744  0045B6  6F07               	movwf	sendHIDText@str& (0+255),b
  4745  0045B8  0E03               	movlw	high _ToSendDataBuffer
  4746  0045BA  0101               	movlb	1	; () banked
  4747  0045BC  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4748  0045BE  EC79  F04F         	call	_sendHIDText	;wreg free
  4749                           
  4750                           ;main.c: 389: }
  4751  0045C2  D60E               	goto	l21756
  4752  0045C4                     l21856:
  4753  0045C4  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4754  0045C8  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4755  0045CC  50DF               	movf	indf2,w,c
  4756                           
  4757                           ; Switch size 1, requested type "space"
  4758                           ; Number of cases is 4, Range of values is 1 to 4
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte           13     7 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763  0045CE  0A01               	xorlw	1	; case 1
  4764  0045D0  B4D8               	btfsc	status,2,c
  4765  0045D2  D61F               	goto	l1760
  4766  0045D4  0A03               	xorlw	3	; case 2
  4767  0045D6  B4D8               	btfsc	status,2,c
  4768  0045D8  D6BB               	goto	l21792
  4769  0045DA  0A01               	xorlw	1	; case 3
  4770  0045DC  B4D8               	btfsc	status,2,c
  4771  0045DE  D703               	goto	l21812
  4772  0045E0  0A07               	xorlw	7	; case 4
  4773  0045E2  B4D8               	btfsc	status,2,c
  4774  0045E4  D779               	goto	l21832
  4775  0045E6  D7C3               	goto	l21852
  4776  0045E8                     l21858:
  4777                           
  4778                           ;main.c: 394: else if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN)
      +                           == 0)
  4779  0045E8  0101               	movlb	1	; () banked
  4780  0045EA  51B7               	movf	_USBOutHandle& (0+255),w,b
  4781  0045EC  0101               	movlb	1	; () banked
  4782  0045EE  11B8               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  4783  0045F0  B4D8               	btfsc	status,2,c
  4784  0045F2  D013               	goto	l21862
  4785                           
  4786                           ; BSR set to: 1
  4787  0045F4  C1B7  FFD9         	movff	_USBOutHandle,fsr2l
  4788  0045F8  C1B8  FFDA         	movff	_USBOutHandle+1,fsr2h
  4789  0045FC  0101               	movlb	1	; () banked
  4790  0045FE  AEDF               	btfss	indf2,7,c
  4791  004600  D004               	goto	u24740
  4792  004602  0101               	movlb	1	; () banked
  4793  004604  6B89               	clrf	??_main& (0+255),b
  4794  004606  2B89               	incf	??_main& (0+255),f,b
  4795  004608  D002               	goto	u24748
  4796  00460A                     u24740:
  4797  00460A  0101               	movlb	1	; () banked
  4798  00460C  6B89               	clrf	??_main& (0+255),b
  4799  00460E                     u24748:
  4800  00460E  0101               	movlb	1	; () banked
  4801  004610  5189               	movf	??_main& (0+255),w,b
  4802  004612  0103               	movlb	3	; () banked
  4803  004614  6FDA               	movwf	_main$4921& (0+255),b
  4804  004616  6BDB               	clrf	(_main$4921+1)& (0+255),b
  4805  004618  D005               	goto	l21864
  4806  00461A                     l21862:
  4807  00461A  0E00               	movlw	0
  4808  00461C  0103               	movlb	3	; () banked
  4809  00461E  6FDB               	movwf	(_main$4921+1)& (0+255),b
  4810  004620  0E00               	movlw	0
  4811  004622  6FDA               	movwf	_main$4921& (0+255),b
  4812  004624                     l21864:
  4813                           
  4814                           ; BSR set to: 3
  4815  004624  0103               	movlb	3	; () banked
  4816  004626  51DA               	movf	_main$4921& (0+255),w,b
  4817  004628  0103               	movlb	3	; () banked
  4818  00462A  11DB               	iorwf	(_main$4921+1)& (0+255),w,b
  4819  00462C  B4D8               	btfsc	status,2,c
  4820  00462E  D0C9               	goto	l21904
  4821  004630  D0E4               	goto	l21908
  4822  004632                     l1777:
  4823                           
  4824                           ; BSR set to: 4
  4825  004632  00FF               	reset		;# 
  4826                           
  4827                           ;main.c: 400: break;
  4828  004634  D0CE               	goto	l21906
  4829  004636                     l1779:
  4830                           
  4831                           ; BSR set to: 4
  4832                           ;main.c: 403: shortaddress[0] = ReceivedDataBuffer[1];
  4833  004636  C401  F3E1         	movff	_ReceivedDataBuffer+1,main@shortaddress
  4834                           
  4835                           ;main.c: 404: shortaddress[1] = ReceivedDataBuffer[2];
  4836  00463A  C402  F3E2         	movff	_ReceivedDataBuffer+2,main@shortaddress+1
  4837                           
  4838                           ;main.c: 405: size = ReceivedDataBuffer[3];
  4839  00463E  C403  F3E0         	movff	_ReceivedDataBuffer+3,main@size
  4840                           
  4841                           ; BSR set to: 4
  4842                           ;main.c: 406: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00))
  4843  004642  0103               	movlb	3	; () banked
  4844  004644  51E1               	movf	main@shortaddress& (0+255),w,b
  4845  004646  0103               	movlb	3	; () banked
  4846  004648  A4D8               	btfss	status,2,c
  4847  00464A  D078               	goto	l21890
  4848                           
  4849                           ; BSR set to: 3
  4850  00464C  0103               	movlb	3	; () banked
  4851  00464E  51E2               	movf	(main@shortaddress+1)& (0+255),w,b
  4852  004650  A4D8               	btfss	status,2,c
  4853  004652  D074               	goto	l21890
  4854                           
  4855                           ; BSR set to: 3
  4856                           ;main.c: 407: {
  4857                           ;main.c: 409: if ((ReceivedDataBuffer[4] == 04) && (size > 2))
  4858  004654  0E04               	movlw	4
  4859  004656  0104               	movlb	4	; () banked
  4860  004658  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  4861  00465A  A4D8               	btfss	status,2,c
  4862  00465C  D0BA               	goto	l21906
  4863                           
  4864                           ; BSR set to: 4
  4865  00465E  0E02               	movlw	2
  4866  004660  0103               	movlb	3	; () banked
  4867  004662  65E0               	cpfsgt	main@size& (0+255),b
  4868  004664  D0B6               	goto	l21906
  4869                           
  4870                           ; BSR set to: 3
  4871                           ;main.c: 410: {
  4872                           ;main.c: 411: bool last_update = (ReceivedDataBuffer[5] == 0xff);
  4873  004666  0104               	movlb	4	; () banked
  4874  004668  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  4875  00466A  A4D8               	btfss	status,2,c
  4876  00466C  D002               	goto	u24800
  4877  00466E  0E01               	movlw	1
  4878  004670  D001               	goto	u24810
  4879  004672                     u24800:
  4880  004672  0E00               	movlw	0
  4881  004674                     u24810:
  4882  004674  0103               	movlb	3	; () banked
  4883  004676  6FD7               	movwf	main@last_update& (0+255),b
  4884                           
  4885                           ;main.c: 413: p_buffer = &ReceivedDataBuffer[6];
  4886  004678  0E06               	movlw	low (_ReceivedDataBuffer+6)
  4887  00467A  0101               	movlb	1	; () banked
  4888  00467C  6FB9               	movwf	_p_buffer& (0+255),b
  4889  00467E  0E04               	movlw	high (_ReceivedDataBuffer+6)
  4890  004680  0101               	movlb	1	; () banked
  4891  004682  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4892                           
  4893                           ;main.c: 414: while ((p_buffer - &ReceivedDataBuffer[6]) < (size - 2))
  4894  004684  D018               	goto	l21884
  4895  004686                     l21878:
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;main.c: 415: {
  4899                           ;main.c: 416: m_var = decode_variable(p_buffer);
  4900  004686  C1B9  F10A         	movff	_p_buffer,decode_variable@p_buffer
  4901  00468A  C1BA  F10B         	movff	_p_buffer+1,decode_variable@p_buffer+1
  4902  00468E  EC50  F04A         	call	_decode_variable	;wreg free
  4903  004692  EE21  F0DE         	lfsr	2,_m_var
  4904  004696  0E09               	movlw	9
  4905  004698                     u24821:
  4906  004698  CFEB FFDB          	movff	plusw0,plusw2
  4907  00469C  06E8               	decf	wreg,f,c
  4908  00469E  E2FC               	bc	u24821
  4909                           
  4910                           ;main.c: 417: p_buffer += m_var.size;
  4911  0046A0  0101               	movlb	1	; () banked
  4912  0046A2  51E7               	movf	(_m_var+9)& (0+255),w,b
  4913  0046A4  0D01               	mullw	1
  4914  0046A6  50F3               	movf	prodl,w,c
  4915  0046A8  0101               	movlb	1	; () banked
  4916  0046AA  27B9               	addwf	_p_buffer& (0+255),f,b
  4917  0046AC  50F4               	movf	prodh,w,c
  4918  0046AE  0101               	movlb	1	; () banked
  4919  0046B0  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4920                           
  4921                           ; BSR set to: 1
  4922                           ;main.c: 422: update_variable();
  4923  0046B2  ECBD  F04B         	call	_update_variable	;wreg free
  4924  0046B6                     l21884:
  4925  0046B6  0EFE               	movlw	254
  4926  0046B8  0101               	movlb	1	; () banked
  4927  0046BA  6F89               	movwf	??_main& (0+255),b
  4928  0046BC  0EFF               	movlw	255
  4929  0046BE  0101               	movlb	1	; () banked
  4930  0046C0  6F8A               	movwf	(??_main+1)& (0+255),b
  4931  0046C2  0103               	movlb	3	; () banked
  4932  0046C4  51E0               	movf	main@size& (0+255),w,b
  4933  0046C6  0101               	movlb	1	; () banked
  4934  0046C8  6F8B               	movwf	(??_main+2)& (0+255),b
  4935  0046CA  6B8C               	clrf	(??_main+3)& (0+255),b
  4936  0046CC  0101               	movlb	1	; () banked
  4937  0046CE  5189               	movf	??_main& (0+255),w,b
  4938  0046D0  0101               	movlb	1	; () banked
  4939  0046D2  278B               	addwf	(??_main+2)& (0+255),f,b
  4940  0046D4  0101               	movlb	1	; () banked
  4941  0046D6  518A               	movf	(??_main+1)& (0+255),w,b
  4942  0046D8  0101               	movlb	1	; () banked
  4943  0046DA  238C               	addwfc	(??_main+3)& (0+255),f,b
  4944  0046DC  0E00               	movlw	low _ReceivedDataBuffer
  4945  0046DE  0101               	movlb	1	; () banked
  4946  0046E0  6F8D               	movwf	(??_main+4)& (0+255),b
  4947  0046E2  0E04               	movlw	high _ReceivedDataBuffer
  4948  0046E4  0101               	movlb	1	; () banked
  4949  0046E6  6F8E               	movwf	(??_main+5)& (0+255),b
  4950  0046E8  0E06               	movlw	6
  4951  0046EA  0101               	movlb	1	; () banked
  4952  0046EC  278D               	addwf	(??_main+4)& (0+255),f,b
  4953  0046EE  0E00               	movlw	0
  4954  0046F0  238E               	addwfc	(??_main+5)& (0+255),f,b
  4955  0046F2  0101               	movlb	1	; () banked
  4956  0046F4  1F8D               	comf	(??_main+4)& (0+255),f,b
  4957  0046F6  1F8E               	comf	(??_main+5)& (0+255),f,b
  4958  0046F8  4B8D               	infsnz	(??_main+4)& (0+255),f,b
  4959  0046FA  2B8E               	incf	(??_main+5)& (0+255),f,b
  4960  0046FC  0101               	movlb	1	; () banked
  4961  0046FE  51B9               	movf	_p_buffer& (0+255),w,b
  4962  004700  0101               	movlb	1	; () banked
  4963  004702  278D               	addwf	(??_main+4)& (0+255),f,b
  4964  004704  0101               	movlb	1	; () banked
  4965  004706  51BA               	movf	(_p_buffer+1)& (0+255),w,b
  4966  004708  0101               	movlb	1	; () banked
  4967  00470A  238E               	addwfc	(??_main+5)& (0+255),f,b
  4968  00470C  0101               	movlb	1	; () banked
  4969  00470E  518B               	movf	(??_main+2)& (0+255),w,b
  4970  004710  0101               	movlb	1	; () banked
  4971  004712  5D8D               	subwf	(??_main+4)& (0+255),w,b
  4972  004714  0101               	movlb	1	; () banked
  4973  004716  518E               	movf	(??_main+5)& (0+255),w,b
  4974  004718  0A80               	xorlw	128
  4975  00471A  0101               	movlb	1	; () banked
  4976  00471C  6F8F               	movwf	(??_main+6)& (0+255),b
  4977  00471E  0101               	movlb	1	; () banked
  4978  004720  518C               	movf	(??_main+3)& (0+255),w,b
  4979  004722  0A80               	xorlw	128
  4980  004724  0101               	movlb	1	; () banked
  4981  004726  598F               	subwfb	(??_main+6)& (0+255),w,b
  4982  004728  A0D8               	btfss	status,0,c
  4983  00472A  D7AD               	goto	l21878
  4984                           
  4985                           ; BSR set to: 1
  4986                           ;main.c: 423: }
  4987                           ;main.c: 424: if (last_update)
  4988                           
  4989                           ; BSR set to: 1
  4990  00472C  0103               	movlb	3	; () banked
  4991  00472E  51D7               	movf	main@last_update& (0+255),w,b
  4992  004730  0103               	movlb	3	; () banked
  4993  004732  B4D8               	btfsc	status,2,c
  4994  004734  D04E               	goto	l21906
  4995                           
  4996                           ; BSR set to: 3
  4997                           ;main.c: 425: {
  4998                           ;main.c: 427: send_answer_to_update();
  4999  004736  EC40  F03C         	call	_send_answer_to_update	;wreg free
  5000                           
  5001                           ;main.c: 428: }
  5002                           ;main.c: 429: }
  5003                           ;main.c: 430: }
  5004  00473A  D04B               	goto	l21906
  5005  00473C                     l21890:
  5006                           
  5007                           ;main.c: 431: else
  5008                           ;main.c: 432: {
  5009                           ;main.c: 433: {TxData = 11;};
  5010  00473C  0E0B               	movlw	11
  5011  00473E  0101               	movlb	1	; () banked
  5012  004740  6FC6               	movwf	_TxData& (0+255),b
  5013                           
  5014                           ; BSR set to: 1
  5015                           ;main.c: 434: memcpy(&TxBuffer[TxData], &ReceivedDataBuffer[4], size);
  5016  004742  0101               	movlb	1	; () banked
  5017  004744  51C6               	movf	_TxData& (0+255),w,b
  5018  004746  0D01               	mullw	1
  5019  004748  0EA6               	movlw	low _TxBuffer
  5020  00474A  24F3               	addwf	prodl,w,c
  5021  00474C  0101               	movlb	1	; () banked
  5022  00474E  6F00               	movwf	memcpy@d1& (0+255),b
  5023  004750  0E02               	movlw	high _TxBuffer
  5024  004752  20F4               	addwfc	prodh,w,c
  5025  004754  0101               	movlb	1	; () banked
  5026  004756  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  5027  004758  0E04               	movlw	low (_ReceivedDataBuffer+4)
  5028  00475A  0101               	movlb	1	; () banked
  5029  00475C  6F02               	movwf	memcpy@s1& (0+255),b
  5030  00475E  0E04               	movlw	high (_ReceivedDataBuffer+4)
  5031  004760  0101               	movlb	1	; () banked
  5032  004762  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  5033  004764  C3E0  F104         	movff	main@size,memcpy@n
  5034  004768  0101               	movlb	1	; () banked
  5035  00476A  6B05               	clrf	(memcpy@n+1)& (0+255),b
  5036  00476C  EC94  F059         	call	_memcpy	;wreg free
  5037                           
  5038                           ;main.c: 435: TxData = TxData + size;
  5039  004770  0101               	movlb	1	; () banked
  5040  004772  51C6               	movf	_TxData& (0+255),w,b
  5041  004774  0103               	movlb	3	; () banked
  5042  004776  25E0               	addwf	main@size& (0+255),w,b
  5043  004778  0101               	movlb	1	; () banked
  5044  00477A  6FC6               	movwf	_TxData& (0+255),b
  5045                           
  5046                           ; BSR set to: 1
  5047                           ;main.c: 436: if (ReceivedDataBuffer[4] == 02)
  5048  00477C  0E02               	movlw	2
  5049  00477E  0104               	movlb	4	; () banked
  5050  004780  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  5051  004782  A4D8               	btfss	status,2,c
  5052  004784  D00F               	goto	l21900
  5053                           
  5054                           ; BSR set to: 4
  5055                           ;main.c: 438: MiApp_UnicastAddress(&shortaddress, 0, 0) == 1;
  5056  004786  0EE1               	movlw	low main@shortaddress
  5057  004788  0101               	movlb	1	; () banked
  5058  00478A  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  5059  00478C  0E03               	movlw	high main@shortaddress
  5060  00478E  0101               	movlb	1	; () banked
  5061  004790  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  5062  004792  0E00               	movlw	0
  5063  004794  0101               	movlb	1	; () banked
  5064  004796  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  5065  004798  0E00               	movlw	0
  5066  00479A  0101               	movlb	1	; () banked
  5067  00479C  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  5068  00479E  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  5069  0047A2  D017               	goto	l21906
  5070  0047A4                     l21900:
  5071                           
  5072                           ;main.c: 439: else
  5073                           ;main.c: 440: MiApp_UnicastAddress(&shortaddress, 0, 1);
  5074  0047A4  0EE1               	movlw	low main@shortaddress
  5075  0047A6  0101               	movlb	1	; () banked
  5076  0047A8  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  5077  0047AA  0E03               	movlw	high main@shortaddress
  5078  0047AC  0101               	movlb	1	; () banked
  5079  0047AE  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  5080  0047B0  0E00               	movlw	0
  5081  0047B2  0101               	movlb	1	; () banked
  5082  0047B4  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  5083  0047B6  0E01               	movlw	1
  5084  0047B8  0101               	movlb	1	; () banked
  5085  0047BA  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  5086  0047BC  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  5087                           
  5088                           ;main.c: 450: }
  5089                           
  5090                           ;main.c: 449: break;
  5091                           
  5092                           ;main.c: 447: default:
  5093                           
  5094                           ;main.c: 445: }
  5095                           ;main.c: 446: break;
  5096  0047C0  D008               	goto	l21906
  5097  0047C2                     l21904:
  5098  0047C2  0104               	movlb	4	; () banked
  5099  0047C4  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  5100                           
  5101                           ; Switch size 1, requested type "space"
  5102                           ; Number of cases is 2, Range of values is 83 to 88
  5103                           ; switch strategies available:
  5104                           ; Name         Instructions Cycles
  5105                           ; simple_byte            7     4 (average)
  5106                           ;	Chosen strategy is simple_byte
  5107  0047C6  0A53               	xorlw	83	; case 83
  5108  0047C8  B4D8               	btfsc	status,2,c
  5109  0047CA  D735               	goto	l1779
  5110  0047CC  0A0B               	xorlw	11	; case 88
  5111  0047CE  B4D8               	btfsc	status,2,c
  5112  0047D0  D730               	goto	l1777
  5113  0047D2                     l21906:
  5114                           
  5115                           ;main.c: 452: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  5116  0047D2  0E00               	movlw	0
  5117  0047D4  0101               	movlb	1	; () banked
  5118  0047D6  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  5119  0047D8  0E00               	movlw	low _ReceivedDataBuffer
  5120  0047DA  0101               	movlb	1	; () banked
  5121  0047DC  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  5122  0047DE  0E04               	movlw	high _ReceivedDataBuffer
  5123  0047E0  0101               	movlb	1	; () banked
  5124  0047E2  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5125  0047E4  0E40               	movlw	64
  5126  0047E6  0101               	movlb	1	; () banked
  5127  0047E8  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  5128  0047EA  0E01               	movlw	1
  5129  0047EC  ECA4  F04C         	call	_USBTransferOnePacket
  5130  0047F0  C100  F1B7         	movff	?_USBTransferOnePacket,_USBOutHandle
  5131  0047F4  C101  F1B8         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  5132                           
  5133                           ;main.c: 453: }
  5134  0047F8  D4F3               	goto	l21756
  5135  0047FA                     l21908:
  5136                           
  5137                           ;main.c: 457: else if (timer_flag == 1)
  5138  0047FA  0101               	movlb	1	; () banked
  5139  0047FC  05CB               	decf	_timer_flag& (0+255),w,b	;volatile
  5140  0047FE  A4D8               	btfss	status,2,c
  5141  004800  D4EF               	goto	l21756
  5142                           
  5143                           ; BSR set to: 1
  5144                           ;main.c: 458: {
  5145                           ;main.c: 459: send_periodic_update();
  5146  004802  ECD0  F038         	call	_send_periodic_update	;wreg free
  5147                           
  5148                           ;main.c: 460: timer_flag = 0;
  5149  004806  0E00               	movlw	0
  5150  004808  0101               	movlb	1	; () banked
  5151  00480A  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  5152                           
  5153                           ; BSR set to: 1
  5154                           
  5155                           ; BSR set to: 1
  5156                           
  5157                           ; BSR set to: 1
  5158                           
  5159                           ; BSR set to: 1
  5160  00480C  D4E9               	goto	l21756
  5161  00480E                     __end_of_main:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           postinc0	equ	0xFEE
  5170                           plusw0	equ	0xFEB
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           plusw2	equ	0xFDB
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function _update_variable *****************
  5182 ;; Defined at:
  5183 ;;		line 607 in file "src/main.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   19
  5204 ;; This function calls:
  5205 ;;		_MiMAC_SetPower
  5206 ;;		_RtccWrOn
  5207 ;;		_labelcmp
  5208 ;;		_mW_ufixed16_to_dBm
  5209 ;; This function is called by:
  5210 ;;		_main
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text1
  5215  00977A                     __ptext1:
  5216                           	opt stack 0
  5217  00977A                     _update_variable:
  5218                           	opt stack 11
  5219                           
  5220                           ;main.c: 610: if (labelcmp(m_var.label, (uint8_t*)POWER_LABEL) == 1)
  5221                           
  5222                           ;incstack = 0
  5223  00977A  0EDE               	movlw	low _m_var
  5224  00977C  0101               	movlb	1	; () banked
  5225  00977E  6F00               	movwf	labelcmp@p1& (0+255),b
  5226  009780  0E01               	movlw	high _m_var
  5227  009782  0101               	movlb	1	; () banked
  5228  009784  6F01               	movwf	(labelcmp@p1+1)& (0+255),b
  5229  009786  0EC1               	movlw	low _POWER_LABEL
  5230  009788  0101               	movlb	1	; () banked
  5231  00978A  6F02               	movwf	labelcmp@p2& (0+255),b
  5232  00978C  0E21               	movlw	high _POWER_LABEL
  5233  00978E  0101               	movlb	1	; () banked
  5234  009790  6F03               	movwf	(labelcmp@p2+1)& (0+255),b
  5235  009792  EC2C  F053         	call	_labelcmp	;wreg free
  5236  009796  06E8               	decf	wreg,f,c
  5237  009798  A4D8               	btfss	status,2,c
  5238  00979A  D010               	goto	l21006
  5239                           
  5240                           ;main.c: 611: {
  5241                           ;main.c: 612: m_power = mW_ufixed16_to_dBm(m_var.value_byte1, m_var.value_byte2);
  5242  00979C  C1E3  F100         	movff	_m_var+5,mW_ufixed16_to_dBm@value2
  5243  0097A0  0101               	movlb	1	; () banked
  5244  0097A2  51E2               	movf	(_m_var+4)& (0+255),w,b
  5245  0097A4  EC16  F04F         	call	_mW_ufixed16_to_dBm
  5246  0097A8  0101               	movlb	1	; () banked
  5247  0097AA  6FC8               	movwf	_m_power& (0+255),b
  5248                           
  5249                           ;main.c: 613: MiMAC_SetPower(m_power);
  5250  0097AC  0101               	movlb	1	; () banked
  5251  0097AE  51C8               	movf	_m_power& (0+255),w,b
  5252  0097B0  EC2D  F05C         	call	_MiMAC_SetPower
  5253                           
  5254                           ;main.c: 614: Pwr_updated = 1;
  5255  0097B4  0E01               	movlw	1
  5256  0097B6  0100               	movlb	0	; () banked
  5257  0097B8  6F9A               	movwf	_Pwr_updated& (0+255),b
  5258                           
  5259                           ;main.c: 615: }
  5260  0097BA  0012               	return	
  5261  0097BC                     l21006:
  5262                           
  5263                           ;main.c: 616: else if ((labelcmp(m_var.label, (uint8_t*)UPDATE_FREQUENCY_LABEL) == 1) &&
      +                           (m_var.unit == 4) && (m_var.type == 0))
  5264  0097BC  0EDE               	movlw	low _m_var
  5265  0097BE  0101               	movlb	1	; () banked
  5266  0097C0  6F00               	movwf	labelcmp@p1& (0+255),b
  5267  0097C2  0E01               	movlw	high _m_var
  5268  0097C4  0101               	movlb	1	; () banked
  5269  0097C6  6F01               	movwf	(labelcmp@p1+1)& (0+255),b
  5270  0097C8  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
  5271  0097CA  0101               	movlb	1	; () banked
  5272  0097CC  6F02               	movwf	labelcmp@p2& (0+255),b
  5273  0097CE  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  5274  0097D0  0101               	movlb	1	; () banked
  5275  0097D2  6F03               	movwf	(labelcmp@p2+1)& (0+255),b
  5276  0097D4  EC2C  F053         	call	_labelcmp	;wreg free
  5277  0097D8  06E8               	decf	wreg,f,c
  5278  0097DA  A4D8               	btfss	status,2,c
  5279  0097DC  0012               	return	
  5280  0097DE  0E04               	movlw	4
  5281  0097E0  0101               	movlb	1	; () banked
  5282  0097E2  19E4               	xorwf	(_m_var+6)& (0+255),w,b
  5283  0097E4  A4D8               	btfss	status,2,c
  5284  0097E6  0012               	return	
  5285                           
  5286                           ; BSR set to: 1
  5287  0097E8  0101               	movlb	1	; () banked
  5288  0097EA  51E1               	movf	(_m_var+3)& (0+255),w,b
  5289  0097EC  A4D8               	btfss	status,2,c
  5290  0097EE  0012               	return	
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;main.c: 618: {
  5294                           ;main.c: 619: if (m_var.value_byte1 == 0)
  5295  0097F0  0101               	movlb	1	; () banked
  5296  0097F2  51E2               	movf	(_m_var+4)& (0+255),w,b
  5297  0097F4  A4D8               	btfss	status,2,c
  5298  0097F6  D019               	goto	l1813
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;main.c: 620: {
  5302                           ;main.c: 621: m_update_frequency = 0;
  5303  0097F8  0E00               	movlw	0
  5304  0097FA  0101               	movlb	1	; () banked
  5305  0097FC  6FFA               	movwf	_m_update_frequency& (0+255),b	;volatile
  5306                           
  5307                           ; BSR set to: 1
  5308                           ;main.c: 622: RtccWrOn();
  5309  0097FE  ECB2  F05D         	call	_RtccWrOn	;wreg free
  5310                           
  5311                           ;main.c: 623: RTCCFGbits.RTCPTR0 = 0;
  5312  009802  010F               	movlb	15	; () banked
  5313  009804  913F               	bcf	63,0,b	;volatile
  5314                           
  5315                           ; BSR set to: 15
  5316                           ;main.c: 624: RTCCFGbits.RTCPTR1 = 0;
  5317  009806  010F               	movlb	15	; () banked
  5318  009808  933F               	bcf	63,1,b	;volatile
  5319                           
  5320                           ; BSR set to: 15
  5321                           ;main.c: 625: RTCVALHbits.RTCVALH = 0x00;
  5322  00980A  0E00               	movlw	0
  5323  00980C  010F               	movlb	15	; () banked
  5324  00980E  6F3B               	movwf	59,b	;volatile
  5325                           
  5326                           ; BSR set to: 15
  5327                           ;main.c: 626: RTCVALLbits.RTCVALL = 0x00;
  5328  009810  0E00               	movlw	0
  5329  009812  010F               	movlb	15	; () banked
  5330  009814  6F3A               	movwf	58,b	;volatile
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;main.c: 627: ALRMCFGbits.AMASK = 0b0010;
  5334  009816  010F               	movlb	15	; () banked
  5335  009818  5147               	movf	71,w,b	;volatile
  5336  00981A  0BC3               	andlw	-61
  5337  00981C  0908               	iorlw	8
  5338  00981E  6F47               	movwf	71,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;main.c: 628: (RTCCFGbits.RTCWREN = 0);
  5342  009820  010F               	movlb	15	; () banked
  5343  009822  9B3F               	bcf	63,5,b	;volatile
  5344                           
  5345                           ; BSR set to: 15
  5346                           ;main.c: 629: timer_count = 1;
  5347  009824  0E01               	movlw	1
  5348  009826  6E5D               	movwf	_timer_count,c	;volatile
  5349  009828  D017               	goto	l21050
  5350  00982A                     l1813:
  5351                           
  5352                           ; BSR set to: 1
  5353                           ;main.c: 632: else
  5354                           ;main.c: 633: {
  5355                           ;main.c: 634: m_update_frequency = m_var.value_byte1;
  5356  00982A  C1E2  F1FA         	movff	_m_var+4,_m_update_frequency	;volatile
  5357                           
  5358                           ; BSR set to: 1
  5359                           ;main.c: 635: RtccWrOn();
  5360  00982E  ECB2  F05D         	call	_RtccWrOn	;wreg free
  5361                           
  5362                           ;main.c: 636: RTCCFGbits.RTCPTR0 = 0;
  5363  009832  010F               	movlb	15	; () banked
  5364  009834  913F               	bcf	63,0,b	;volatile
  5365                           
  5366                           ; BSR set to: 15
  5367                           ;main.c: 637: RTCCFGbits.RTCPTR1 = 0;
  5368  009836  010F               	movlb	15	; () banked
  5369  009838  933F               	bcf	63,1,b	;volatile
  5370                           
  5371                           ; BSR set to: 15
  5372                           ;main.c: 638: RTCVALHbits.RTCVALH = 0x00;
  5373  00983A  0E00               	movlw	0
  5374  00983C  010F               	movlb	15	; () banked
  5375  00983E  6F3B               	movwf	59,b	;volatile
  5376                           
  5377                           ; BSR set to: 15
  5378                           ;main.c: 639: RTCVALLbits.RTCVALL = 0x00;
  5379  009840  0E00               	movlw	0
  5380  009842  010F               	movlb	15	; () banked
  5381  009844  6F3A               	movwf	58,b	;volatile
  5382                           
  5383                           ; BSR set to: 15
  5384                           ;main.c: 640: ALRMCFGbits.AMASK = 0b0011;
  5385  009846  010F               	movlb	15	; () banked
  5386  009848  5147               	movf	71,w,b	;volatile
  5387  00984A  0BC3               	andlw	-61
  5388  00984C  090C               	iorlw	12
  5389  00984E  6F47               	movwf	71,b	;volatile
  5390                           
  5391                           ; BSR set to: 15
  5392                           ;main.c: 641: (RTCCFGbits.RTCWREN = 0);
  5393  009850  010F               	movlb	15	; () banked
  5394  009852  9B3F               	bcf	63,5,b	;volatile
  5395                           
  5396                           ; BSR set to: 15
  5397                           ;main.c: 642: timer_count = m_update_frequency;
  5398  009854  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
  5399  009858                     l21050:
  5400                           
  5401                           ; BSR set to: 15
  5402                           ;main.c: 643: timer_flag = 0;
  5403  009858  0E00               	movlw	0
  5404  00985A  0101               	movlb	1	; () banked
  5405  00985C  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  5406                           
  5407                           ; BSR set to: 1
  5408                           ;main.c: 644: }
  5409                           ;main.c: 645: UpF_updated = 1;
  5410                           
  5411                           ; BSR set to: 1
  5412  00985E  0E01               	movlw	1
  5413  009860  0100               	movlb	0	; () banked
  5414  009862  6F9E               	movwf	_UpF_updated& (0+255),b
  5415                           
  5416                           ; BSR set to: 0
  5417  009864  0012               	return	
  5418  009866                     __end_of_update_variable:
  5419                           	opt stack 0
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           prodh	equ	0xFF4
  5425                           prodl	equ	0xFF3
  5426                           postinc0	equ	0xFEE
  5427                           plusw0	equ	0xFEB
  5428                           wreg	equ	0xFE8
  5429                           postdec1	equ	0xFE5
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           indf2	equ	0xFDF
  5433                           plusw2	equ	0xFDB
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8
  5437                           
  5438 ;; *************** function _mW_ufixed16_to_dBm *****************
  5439 ;; Defined at:
  5440 ;;		line 22 in file "../../muta/muta_messages.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  value1          1    wreg     unsigned char 
  5443 ;;  value2          1    0[BANK1 ] unsigned char 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  value1          1    1[BANK1 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5455 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;Total ram usage:        2 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:   16
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_update_variable
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text2
  5470  009E2C                     __ptext2:
  5471                           	opt stack 0
  5472  009E2C                     _mW_ufixed16_to_dBm:
  5473                           	opt stack 13
  5474                           
  5475                           ;incstack = 0
  5476                           ;mW_ufixed16_to_dBm@value1 stored from wreg
  5477  009E2C  0101               	movlb	1	; () banked
  5478  009E2E  6F01               	movwf	mW_ufixed16_to_dBm@value1& (0+255),b
  5479                           
  5480                           ;muta_messages.c: 24: if (value1==20 && value2==0)
  5481  009E30  0E14               	movlw	20
  5482  009E32  0101               	movlb	1	; () banked
  5483  009E34  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5484  009E36  A4D8               	btfss	status,2,c
  5485  009E38  D007               	goto	l19314
  5486                           
  5487                           ; BSR set to: 1
  5488  009E3A  0101               	movlb	1	; () banked
  5489  009E3C  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5490  009E3E  0101               	movlb	1	; () banked
  5491  009E40  A4D8               	btfss	status,2,c
  5492  009E42  D002               	goto	l19314
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;muta_messages.c: 25: return 0x00;
  5496  009E44  0E00               	movlw	0
  5497                           
  5498                           ; BSR set to: 1
  5499                           
  5500                           ; BSR set to: 1
  5501  009E46  0012               	return	
  5502  009E48                     l19314:
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;muta_messages.c: 26: else if (value1==10 && value2==0)
  5506  009E48  0E0A               	movlw	10
  5507  009E4A  0101               	movlb	1	; () banked
  5508  009E4C  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5509  009E4E  A4D8               	btfss	status,2,c
  5510  009E50  D007               	goto	l19324
  5511                           
  5512                           ; BSR set to: 1
  5513  009E52  0101               	movlb	1	; () banked
  5514  009E54  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5515  009E56  0101               	movlb	1	; () banked
  5516  009E58  A4D8               	btfss	status,2,c
  5517  009E5A  D002               	goto	l19324
  5518                           
  5519                           ; BSR set to: 1
  5520                           ;muta_messages.c: 27: return 0x01;
  5521  009E5C  0E01               	movlw	1
  5522                           
  5523                           ; BSR set to: 1
  5524                           
  5525                           ; BSR set to: 1
  5526  009E5E  0012               	return	
  5527  009E60                     l19324:
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;muta_messages.c: 28: else if (value1==5 && value2==0)
  5531  009E60  0E05               	movlw	5
  5532  009E62  0101               	movlb	1	; () banked
  5533  009E64  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5534  009E66  A4D8               	btfss	status,2,c
  5535  009E68  D007               	goto	l19334
  5536                           
  5537                           ; BSR set to: 1
  5538  009E6A  0101               	movlb	1	; () banked
  5539  009E6C  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5540  009E6E  0101               	movlb	1	; () banked
  5541  009E70  A4D8               	btfss	status,2,c
  5542  009E72  D002               	goto	l19334
  5543                           
  5544                           ; BSR set to: 1
  5545                           ;muta_messages.c: 29: return 0x02;
  5546  009E74  0E02               	movlw	2
  5547                           
  5548                           ; BSR set to: 1
  5549                           
  5550                           ; BSR set to: 1
  5551  009E76  0012               	return	
  5552  009E78                     l19334:
  5553                           
  5554                           ; BSR set to: 1
  5555                           ;muta_messages.c: 30: else if (value1==2 && value2==50)
  5556  009E78  0E02               	movlw	2
  5557  009E7A  0101               	movlb	1	; () banked
  5558  009E7C  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5559  009E7E  A4D8               	btfss	status,2,c
  5560  009E80  D007               	goto	l19344
  5561                           
  5562                           ; BSR set to: 1
  5563  009E82  0E32               	movlw	50
  5564  009E84  0101               	movlb	1	; () banked
  5565  009E86  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5566  009E88  A4D8               	btfss	status,2,c
  5567  009E8A  D002               	goto	l19344
  5568                           
  5569                           ; BSR set to: 1
  5570                           ;muta_messages.c: 31: return 0x03;
  5571  009E8C  0E03               	movlw	3
  5572                           
  5573                           ; BSR set to: 1
  5574                           
  5575                           ; BSR set to: 1
  5576  009E8E  0012               	return	
  5577  009E90                     l19344:
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;muta_messages.c: 32: else if (value1==1 && value2==25)
  5581  009E90  0101               	movlb	1	; () banked
  5582  009E92  0501               	decf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5583  009E94  A4D8               	btfss	status,2,c
  5584  009E96  D007               	goto	l19354
  5585                           
  5586                           ; BSR set to: 1
  5587  009E98  0E19               	movlw	25
  5588  009E9A  0101               	movlb	1	; () banked
  5589  009E9C  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5590  009E9E  A4D8               	btfss	status,2,c
  5591  009EA0  D002               	goto	l19354
  5592                           
  5593                           ; BSR set to: 1
  5594                           ;muta_messages.c: 33: return 0x04;
  5595  009EA2  0E04               	movlw	4
  5596                           
  5597                           ; BSR set to: 1
  5598                           
  5599                           ; BSR set to: 1
  5600  009EA4  0012               	return	
  5601  009EA6                     l19354:
  5602                           
  5603                           ; BSR set to: 1
  5604                           ;muta_messages.c: 34: else if (value1==0 && value2==60)
  5605  009EA6  0101               	movlb	1	; () banked
  5606  009EA8  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5607  009EAA  0101               	movlb	1	; () banked
  5608  009EAC  A4D8               	btfss	status,2,c
  5609  009EAE  D007               	goto	l19364
  5610                           
  5611                           ; BSR set to: 1
  5612  009EB0  0E3C               	movlw	60
  5613  009EB2  0101               	movlb	1	; () banked
  5614  009EB4  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5615  009EB6  A4D8               	btfss	status,2,c
  5616  009EB8  D002               	goto	l19364
  5617                           
  5618                           ; BSR set to: 1
  5619                           ;muta_messages.c: 35: return 0x05;
  5620  009EBA  0E05               	movlw	5
  5621                           
  5622                           ; BSR set to: 1
  5623                           
  5624                           ; BSR set to: 1
  5625  009EBC  0012               	return	
  5626  009EBE                     l19364:
  5627                           
  5628                           ; BSR set to: 1
  5629                           ;muta_messages.c: 36: else if (value1==0 && value2==30)
  5630  009EBE  0101               	movlb	1	; () banked
  5631  009EC0  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5632  009EC2  0101               	movlb	1	; () banked
  5633  009EC4  A4D8               	btfss	status,2,c
  5634  009EC6  D007               	goto	l19374
  5635                           
  5636                           ; BSR set to: 1
  5637  009EC8  0E1E               	movlw	30
  5638  009ECA  0101               	movlb	1	; () banked
  5639  009ECC  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5640  009ECE  A4D8               	btfss	status,2,c
  5641  009ED0  D002               	goto	l19374
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;muta_messages.c: 37: return 0x06;
  5645  009ED2  0E06               	movlw	6
  5646                           
  5647                           ; BSR set to: 1
  5648                           
  5649                           ; BSR set to: 1
  5650  009ED4  0012               	return	
  5651  009ED6                     l19374:
  5652                           
  5653                           ; BSR set to: 1
  5654                           ;muta_messages.c: 38: else if (value1==0 && value2==15)
  5655  009ED6  0101               	movlb	1	; () banked
  5656  009ED8  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5657  009EDA  0101               	movlb	1	; () banked
  5658  009EDC  A4D8               	btfss	status,2,c
  5659  009EDE  D007               	goto	l19384
  5660                           
  5661                           ; BSR set to: 1
  5662  009EE0  0E0F               	movlw	15
  5663  009EE2  0101               	movlb	1	; () banked
  5664  009EE4  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5665  009EE6  A4D8               	btfss	status,2,c
  5666  009EE8  D002               	goto	l19384
  5667                           
  5668                           ; BSR set to: 1
  5669                           ;muta_messages.c: 39: return 0x07;
  5670  009EEA  0E07               	movlw	7
  5671                           
  5672                           ; BSR set to: 1
  5673                           
  5674                           ; BSR set to: 1
  5675  009EEC  0012               	return	
  5676  009EEE                     l19384:
  5677                           
  5678                           ; BSR set to: 1
  5679                           ;muta_messages.c: 40: else
  5680                           ;muta_messages.c: 41: return 0x07;
  5681  009EEE  0E07               	movlw	7
  5682                           
  5683                           ; BSR set to: 1
  5684                           
  5685                           ; BSR set to: 1
  5686                           
  5687                           ; BSR set to: 1
  5688                           
  5689                           ; BSR set to: 1
  5690                           
  5691                           ; BSR set to: 1
  5692                           
  5693                           ; BSR set to: 1
  5694                           
  5695                           ; BSR set to: 1
  5696                           
  5697                           ; BSR set to: 1
  5698  009EF0  0012               	return	
  5699  009EF2                     __end_of_mW_ufixed16_to_dBm:
  5700                           	opt stack 0
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           postinc0	equ	0xFEE
  5708                           plusw0	equ	0xFEB
  5709                           wreg	equ	0xFE8
  5710                           postdec1	equ	0xFE5
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           indf2	equ	0xFDF
  5714                           plusw2	equ	0xFDB
  5715                           fsr2h	equ	0xFDA
  5716                           fsr2l	equ	0xFD9
  5717                           status	equ	0xFD8
  5718                           
  5719 ;; *************** function _labelcmp *****************
  5720 ;; Defined at:
  5721 ;;		line 16 in file "../../muta/muta_messages.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  p1              2    0[BANK1 ] PTR unsigned char 
  5724 ;;		 -> m_var(10), 
  5725 ;;  p2              2    2[BANK1 ] PTR unsigned char 
  5726 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      unsigned char 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5738 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;Total ram usage:        8 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:   16
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_update_variable
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text3
  5753  00A658                     __ptext3:
  5754                           	opt stack 0
  5755  00A658                     _labelcmp:
  5756                           	opt stack 13
  5757                           
  5758                           ;muta_messages.c: 18: return (*p1==*p2)&&(*(p1+1)==*(p2+1))&&(*(p1+2)==*(p2+2));
  5759                           
  5760                           ; BSR set to: 1
  5761                           ;incstack = 0
  5762  00A658  0E00               	movlw	0
  5763  00A65A  0101               	movlb	1	; () banked
  5764  00A65C  6F07               	movwf	_labelcmp$5111& (0+255),b
  5765                           
  5766                           ; BSR set to: 1
  5767  00A65E  C100  FFD9         	movff	labelcmp@p1,fsr2l
  5768  00A662  C101  FFDA         	movff	labelcmp@p1+1,fsr2h
  5769  00A666  50DF               	movf	indf2,w,c
  5770  00A668  0101               	movlb	1	; () banked
  5771  00A66A  6F04               	movwf	??_labelcmp& (0+255),b
  5772  00A66C  C102  FFF6         	movff	labelcmp@p2,tblptrl
  5773  00A670  C103  FFF7         	movff	labelcmp@p2+1,tblptrh
  5774  00A674                     	if	0	;tblptru may be non-zero
  5775  00A674                     	endif
  5776  00A674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5777  00A674  0E00               	movlw	low (__mediumconst shr (0+16))
  5778  00A676  6EF8               	movwf	tblptru,c
  5779  00A678                     	endif
  5780  00A678  0008               	tblrd		*
  5781  00A67A  50F5               	movf	tablat,w,c
  5782  00A67C  0101               	movlb	1	; () banked
  5783  00A67E  1904               	xorwf	??_labelcmp& (0+255),w,b
  5784  00A680  A4D8               	btfss	status,2,c
  5785  00A682  D043               	goto	l1977
  5786                           
  5787                           ; BSR set to: 1
  5788  00A684  0101               	movlb	1	; () banked
  5789  00A686  EE20 F001          	lfsr	2,1
  5790  00A68A  5100               	movf	labelcmp@p1& (0+255),w,b
  5791  00A68C  26D9               	addwf	fsr2l,f,c
  5792  00A68E  5101               	movf	(labelcmp@p1+1)& (0+255),w,b
  5793  00A690  22DA               	addwfc	fsr2h,f,c
  5794  00A692  50DF               	movf	indf2,w,c
  5795  00A694  0101               	movlb	1	; () banked
  5796  00A696  6F04               	movwf	??_labelcmp& (0+255),b
  5797  00A698  0E01               	movlw	1
  5798  00A69A  0101               	movlb	1	; () banked
  5799  00A69C  2502               	addwf	labelcmp@p2& (0+255),w,b
  5800  00A69E  0101               	movlb	1	; () banked
  5801  00A6A0  6F05               	movwf	(??_labelcmp+1)& (0+255),b
  5802  00A6A2  0E00               	movlw	0
  5803  00A6A4  0101               	movlb	1	; () banked
  5804  00A6A6  2103               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  5805  00A6A8  0101               	movlb	1	; () banked
  5806  00A6AA  6F06               	movwf	(??_labelcmp+2)& (0+255),b
  5807  00A6AC  C105  FFF6         	movff	??_labelcmp+1,tblptrl
  5808  00A6B0  C106  FFF7         	movff	??_labelcmp+2,tblptrh
  5809  00A6B4                     	if	0	;tblptru may be non-zero
  5810  00A6B4                     	endif
  5811  00A6B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5812  00A6B4  0E00               	movlw	low (__mediumconst shr (0+16))
  5813  00A6B6  6EF8               	movwf	tblptru,c
  5814  00A6B8                     	endif
  5815  00A6B8  0008               	tblrd		*
  5816  00A6BA  50F5               	movf	tablat,w,c
  5817  00A6BC  0101               	movlb	1	; () banked
  5818  00A6BE  1904               	xorwf	??_labelcmp& (0+255),w,b
  5819  00A6C0  A4D8               	btfss	status,2,c
  5820  00A6C2  D023               	goto	l1977
  5821                           
  5822                           ; BSR set to: 1
  5823  00A6C4  0101               	movlb	1	; () banked
  5824  00A6C6  EE20 F002          	lfsr	2,2
  5825  00A6CA  5100               	movf	labelcmp@p1& (0+255),w,b
  5826  00A6CC  26D9               	addwf	fsr2l,f,c
  5827  00A6CE  5101               	movf	(labelcmp@p1+1)& (0+255),w,b
  5828  00A6D0  22DA               	addwfc	fsr2h,f,c
  5829  00A6D2  50DF               	movf	indf2,w,c
  5830  00A6D4  0101               	movlb	1	; () banked
  5831  00A6D6  6F04               	movwf	??_labelcmp& (0+255),b
  5832  00A6D8  0E02               	movlw	2
  5833  00A6DA  0101               	movlb	1	; () banked
  5834  00A6DC  2502               	addwf	labelcmp@p2& (0+255),w,b
  5835  00A6DE  0101               	movlb	1	; () banked
  5836  00A6E0  6F05               	movwf	(??_labelcmp+1)& (0+255),b
  5837  00A6E2  0E00               	movlw	0
  5838  00A6E4  0101               	movlb	1	; () banked
  5839  00A6E6  2103               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  5840  00A6E8  0101               	movlb	1	; () banked
  5841  00A6EA  6F06               	movwf	(??_labelcmp+2)& (0+255),b
  5842  00A6EC  C105  FFF6         	movff	??_labelcmp+1,tblptrl
  5843  00A6F0  C106  FFF7         	movff	??_labelcmp+2,tblptrh
  5844  00A6F4                     	if	0	;tblptru may be non-zero
  5845  00A6F4                     	endif
  5846  00A6F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5847  00A6F4  0E00               	movlw	low (__mediumconst shr (0+16))
  5848  00A6F6  6EF8               	movwf	tblptru,c
  5849  00A6F8                     	endif
  5850  00A6F8  0008               	tblrd		*
  5851  00A6FA  50F5               	movf	tablat,w,c
  5852  00A6FC  0101               	movlb	1	; () banked
  5853  00A6FE  1904               	xorwf	??_labelcmp& (0+255),w,b
  5854  00A700  A4D8               	btfss	status,2,c
  5855  00A702  D003               	goto	l1977
  5856                           
  5857                           ; BSR set to: 1
  5858  00A704  0E01               	movlw	1
  5859  00A706  0101               	movlb	1	; () banked
  5860  00A708  6F07               	movwf	_labelcmp$5111& (0+255),b
  5861  00A70A                     l1977:
  5862                           
  5863                           ; BSR set to: 1
  5864  00A70A  0101               	movlb	1	; () banked
  5865  00A70C  5107               	movf	_labelcmp$5111& (0+255),w,b
  5866  00A70E  0012               	return	
  5867  00A710                     __end_of_labelcmp:
  5868                           	opt stack 0
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           prodh	equ	0xFF4
  5874                           prodl	equ	0xFF3
  5875                           postinc0	equ	0xFEE
  5876                           plusw0	equ	0xFEB
  5877                           wreg	equ	0xFE8
  5878                           postdec1	equ	0xFE5
  5879                           fsr1h	equ	0xFE2
  5880                           fsr1l	equ	0xFE1
  5881                           indf2	equ	0xFDF
  5882                           plusw2	equ	0xFDB
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _MiMAC_SetPower *****************
  5888 ;; Defined at:
  5889 ;;		line 537 in file "src/miwi/drv_mrf_miwi_89xa.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  outputPower     1    wreg     unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  outputPower     1    8[BANK1 ] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      unsigned char 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5906 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5907 ;;Total ram usage:        3 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:   18
  5910 ;; This function calls:
  5911 ;;		_RegisterSet
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;;		_update_variable
  5915 ;;		_adapt_power_level
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text4
  5920  00B85A                     __ptext4:
  5921                           	opt stack 0
  5922  00B85A                     _MiMAC_SetPower:
  5923                           	opt stack 11
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;incstack = 0
  5927                           ;MiMAC_SetPower@outputPower stored from wreg
  5928  00B85A  0101               	movlb	1	; () banked
  5929  00B85C  6F08               	movwf	MiMAC_SetPower@outputPower& (0+255),b
  5930                           
  5931                           ;drv_mrf_miwi_89xa.c: 539: if( outputPower > 0x07 )
  5932  00B85E  0E07               	movlw	7
  5933  00B860  0101               	movlb	1	; () banked
  5934  00B862  6508               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
  5935  00B864  D001               	goto	l19000
  5936  00B866  0012               	return	
  5937  00B868                     l19000:
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;drv_mrf_miwi_89xa.c: 542: }
  5941                           ;drv_mrf_miwi_89xa.c: 543: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
  5942  00B868  0101               	movlb	1	; () banked
  5943  00B86A  5108               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
  5944  00B86C  0101               	movlb	1	; () banked
  5945  00B86E  6F06               	movwf	??_MiMAC_SetPower& (0+255),b
  5946  00B870  6B07               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
  5947  00B872  90D8               	bcf	status,0,c
  5948  00B874  0101               	movlb	1	; () banked
  5949  00B876  3706               	rlcf	??_MiMAC_SetPower& (0+255),f,b
  5950  00B878  3707               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
  5951  00B87A  0EF0               	movlw	240
  5952  00B87C  0101               	movlb	1	; () banked
  5953  00B87E  1106               	iorwf	??_MiMAC_SetPower& (0+255),w,b
  5954  00B880  0101               	movlb	1	; () banked
  5955  00B882  6F02               	movwf	RegisterSet@setting& (0+255),b
  5956  00B884  0E34               	movlw	52
  5957  00B886  0101               	movlb	1	; () banked
  5958  00B888  1107               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
  5959  00B88A  0101               	movlb	1	; () banked
  5960  00B88C  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
  5961  00B88E  EC04  F05B         	call	_RegisterSet	;wreg free
  5962  00B892  0012               	return	
  5963  00B894                     __end_of_MiMAC_SetPower:
  5964                           	opt stack 0
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           postinc0	equ	0xFEE
  5972                           plusw0	equ	0xFEB
  5973                           wreg	equ	0xFE8
  5974                           postdec1	equ	0xFE5
  5975                           fsr1h	equ	0xFE2
  5976                           fsr1l	equ	0xFE1
  5977                           indf2	equ	0xFDF
  5978                           plusw2	equ	0xFDB
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _update_LED *****************
  5984 ;; Defined at:
  5985 ;;		line 729 in file "src/main.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  2  203[None  ] int 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:   16
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text5
  6014  00B38A                     __ptext5:
  6015                           	opt stack 0
  6016  00B38A                     _update_LED:
  6017                           	opt stack 14
  6018                           
  6019                           ;main.c: 731: switch(status_led)
  6020                           
  6021                           ;incstack = 0
  6022  00B38A  D021               	goto	l19966
  6023  00B38C                     l1858:
  6024                           
  6025                           ;main.c: 735: CCP1CONbits.DC1B0 = 0;
  6026  00B38C  98BA               	bcf	4026,4,c	;volatile
  6027                           
  6028                           ;main.c: 736: CCP1CONbits.DC1B1 = 0;
  6029  00B38E  9ABA               	bcf	4026,5,c	;volatile
  6030                           
  6031                           ;main.c: 737: CCPR1L = 0;
  6032  00B390  0E00               	movlw	0
  6033  00B392  6EBB               	movwf	4027,c	;volatile
  6034                           
  6035                           ;main.c: 738: LED_increasing = 1;
  6036  00B394  0E01               	movlw	1
  6037  00B396  6E45               	movwf	_LED_increasing,c	;volatile
  6038                           
  6039                           ;main.c: 739: break;
  6040  00B398  0012               	return	
  6041  00B39A                     l1860:
  6042                           
  6043                           ;main.c: 743: CCP1CONbits.DC1B0 = 1023 & 1;
  6044  00B39A  88BA               	bsf	4026,4,c	;volatile
  6045                           
  6046                           ;main.c: 744: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
  6047  00B39C  8ABA               	bsf	4026,5,c	;volatile
  6048                           
  6049                           ;main.c: 745: CCPR1L = (1023 >> 2);
  6050  00B39E  68BB               	setf	4027,c	;volatile
  6051                           
  6052                           ;main.c: 746: repeat_full = 4;
  6053  00B3A0  0E04               	movlw	4
  6054  00B3A2  6E53               	movwf	_repeat_full,c	;volatile
  6055                           
  6056                           ;main.c: 747: break;
  6057  00B3A4  0012               	return	
  6058  00B3A6                     l19952:
  6059                           
  6060                           ;main.c: 750: T4CONbits.T4CKPS = 0b01;
  6061  00B3A6  5076               	movf	3958,w,c	;volatile
  6062  00B3A8  0BFC               	andlw	-4
  6063  00B3AA  0901               	iorlw	1
  6064  00B3AC  6E76               	movwf	3958,c	;volatile
  6065                           
  6066                           ;main.c: 752: CCP1CONbits.DC1B0 = 235 & 1;
  6067  00B3AE  88BA               	bsf	4026,4,c	;volatile
  6068                           
  6069                           ;main.c: 753: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  6070  00B3B0  8ABA               	bsf	4026,5,c	;volatile
  6071                           
  6072                           ;main.c: 754: CCPR1L = (235 >> 2);
  6073  00B3B2  0E3A               	movlw	58
  6074  00B3B4  6EBB               	movwf	4027,c	;volatile
  6075                           
  6076                           ;main.c: 755: LED_increasing = 0;
  6077  00B3B6  0E00               	movlw	0
  6078  00B3B8  6E45               	movwf	_LED_increasing,c	;volatile
  6079                           
  6080                           ;main.c: 756: break;
  6081  00B3BA  0012               	return	
  6082  00B3BC                     l19958:
  6083                           
  6084                           ;main.c: 759: T4CONbits.T4CKPS = 0b11;
  6085  00B3BC  0E03               	movlw	3
  6086  00B3BE  1276               	iorwf	3958,f,c	;volatile
  6087                           
  6088                           ;main.c: 761: CCP1CONbits.DC1B0 = 235 & 1;
  6089  00B3C0  88BA               	bsf	4026,4,c	;volatile
  6090                           
  6091                           ;main.c: 762: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  6092  00B3C2  8ABA               	bsf	4026,5,c	;volatile
  6093                           
  6094                           ;main.c: 763: CCPR1L = (235 >> 2);
  6095  00B3C4  0E3A               	movlw	58
  6096  00B3C6  6EBB               	movwf	4027,c	;volatile
  6097                           
  6098                           ;main.c: 764: LED_increasing = 0;
  6099  00B3C8  0E00               	movlw	0
  6100  00B3CA  6E45               	movwf	_LED_increasing,c	;volatile
  6101                           
  6102                           ;main.c: 766: }
  6103                           
  6104                           ;main.c: 765: break;
  6105  00B3CC  0012               	return	
  6106  00B3CE                     l19966:
  6107  00B3CE  5055               	movf	_status_led,w,c	;volatile
  6108                           
  6109                           ; Switch size 1, requested type "space"
  6110                           ; Number of cases is 4, Range of values is 0 to 3
  6111                           ; switch strategies available:
  6112                           ; Name         Instructions Cycles
  6113                           ; simple_byte           13     7 (average)
  6114                           ;	Chosen strategy is simple_byte
  6115  00B3D0  0A00               	xorlw	0	; case 0
  6116  00B3D2  B4D8               	btfsc	status,2,c
  6117  00B3D4  D7DB               	goto	l1858
  6118  00B3D6  0A01               	xorlw	1	; case 1
  6119  00B3D8  B4D8               	btfsc	status,2,c
  6120  00B3DA  D7E5               	goto	l19952
  6121  00B3DC  0A03               	xorlw	3	; case 2
  6122  00B3DE  B4D8               	btfsc	status,2,c
  6123  00B3E0  D7ED               	goto	l19958
  6124  00B3E2  0A01               	xorlw	1	; case 3
  6125  00B3E4  A4D8               	btfss	status,2,c
  6126  00B3E6  0012               	return	
  6127  00B3E8  D7D8               	goto	l1860
  6128  00B3EA                     __end_of_update_LED:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           postinc0	equ	0xFEE
  6137                           plusw0	equ	0xFEB
  6138                           wreg	equ	0xFE8
  6139                           postdec1	equ	0xFE5
  6140                           fsr1h	equ	0xFE2
  6141                           fsr1l	equ	0xFE1
  6142                           indf2	equ	0xFDF
  6143                           plusw2	equ	0xFDB
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _timer_reset *****************
  6149 ;; Defined at:
  6150 ;;		line 649 in file "src/main.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;		None               void
  6157 ;; Registers used:
  6158 ;;		wreg, status,2
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:   16
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text6
  6179  00BB32                     __ptext6:
  6180                           	opt stack 0
  6181  00BB32                     _timer_reset:
  6182                           	opt stack 14
  6183                           
  6184                           ;main.c: 658: if (m_update_frequency == 0)
  6185                           
  6186                           ;incstack = 0
  6187  00BB32  0101               	movlb	1	; () banked
  6188  00BB34  51FA               	movf	_m_update_frequency& (0+255),w,b	;volatile
  6189  00BB36  A4D8               	btfss	status,2,c
  6190  00BB38  D003               	goto	l1818
  6191                           
  6192                           ; BSR set to: 1
  6193                           ;main.c: 659: timer_count = 1;
  6194  00BB3A  0E01               	movlw	1
  6195  00BB3C  6E5D               	movwf	_timer_count,c	;volatile
  6196  00BB3E  D002               	goto	l20916
  6197  00BB40                     l1818:
  6198                           
  6199                           ; BSR set to: 1
  6200                           ;main.c: 660: else
  6201                           ;main.c: 661: timer_count = m_update_frequency;
  6202  00BB40  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
  6203  00BB44                     l20916:
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;main.c: 662: timer_flag = 0;
  6207  00BB44  0E00               	movlw	0
  6208  00BB46  0101               	movlb	1	; () banked
  6209  00BB48  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  6210                           
  6211                           ; BSR set to: 1
  6212  00BB4A  0012               	return		;funcret
  6213  00BB4C                     __end_of_timer_reset:
  6214                           	opt stack 0
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           postinc0	equ	0xFEE
  6222                           plusw0	equ	0xFEB
  6223                           wreg	equ	0xFE8
  6224                           postdec1	equ	0xFE5
  6225                           fsr1h	equ	0xFE2
  6226                           fsr1l	equ	0xFE1
  6227                           indf2	equ	0xFDF
  6228                           plusw2	equ	0xFDB
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _strcpy *****************
  6234 ;; Defined at:
  6235 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  to              2    0[BANK1 ] PTR unsigned char 
  6238 ;;		 -> ToSendDataBuffer(64), 
  6239 ;;  from            2    2[BANK1 ] PTR const unsigned char 
  6240 ;;		 -> STR_2(33), STR_1(8), 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  cp              2    4[BANK1 ] PTR unsigned char 
  6243 ;;		 -> ToSendDataBuffer(64), 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  2    0[BANK1 ] PTR unsigned char 
  6246 ;; Registers used:
  6247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6253 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;Total ram usage:        6 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:   16
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text7
  6268  00B8CE                     __ptext7:
  6269                           	opt stack 0
  6270  00B8CE                     _strcpy:
  6271                           	opt stack 14
  6272                           
  6273                           ; BSR set to: 1
  6274                           ;incstack = 0
  6275  00B8CE  C100  F104         	movff	strcpy@to,strcpy@cp
  6276  00B8D2  C101  F105         	movff	strcpy@to+1,strcpy@cp+1
  6277  00B8D6  D006               	goto	l20562
  6278  00B8D8                     l20560:
  6279  00B8D8  0101               	movlb	1	; () banked
  6280  00B8DA  4B04               	infsnz	strcpy@cp& (0+255),f,b
  6281  00B8DC  2B05               	incf	(strcpy@cp+1)& (0+255),f,b
  6282  00B8DE  0101               	movlb	1	; () banked
  6283  00B8E0  4B02               	infsnz	strcpy@from& (0+255),f,b
  6284  00B8E2  2B03               	incf	(strcpy@from+1)& (0+255),f,b
  6285  00B8E4                     l20562:
  6286  00B8E4  C102  FFF6         	movff	strcpy@from,tblptrl
  6287  00B8E8  C103  FFF7         	movff	strcpy@from+1,tblptrh
  6288  00B8EC                     	if	0	;tblptru may be non-zero
  6289  00B8EC                     	endif
  6290  00B8EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6291  00B8EC  0E00               	movlw	low (__mediumconst shr (0+16))
  6292  00B8EE  6EF8               	movwf	tblptru,c
  6293  00B8F0                     	endif
  6294  00B8F0  C104  FFD9         	movff	strcpy@cp,fsr2l
  6295  00B8F4  C105  FFDA         	movff	strcpy@cp+1,fsr2h
  6296  00B8F8  0008               	tblrd		*
  6297  00B8FA  CFF5 FFDF          	movff	tablat,indf2
  6298  00B8FE  50DF               	movf	indf2,w,c
  6299  00B900  B4D8               	btfsc	status,2,c
  6300  00B902  0012               	return	
  6301  00B904  D7E9               	goto	l20560
  6302  00B906                     __end_of_strcpy:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           postinc0	equ	0xFEE
  6311                           plusw0	equ	0xFEB
  6312                           wreg	equ	0xFE8
  6313                           postdec1	equ	0xFE5
  6314                           fsr1h	equ	0xFE2
  6315                           fsr1l	equ	0xFE1
  6316                           indf2	equ	0xFDF
  6317                           plusw2	equ	0xFDB
  6318                           fsr2h	equ	0xFDA
  6319                           fsr2l	equ	0xFD9
  6320                           status	equ	0xFD8
  6321                           
  6322 ;; *************** function _sprintf *****************
  6323 ;; Defined at:
  6324 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  sp              2   12[BANK1 ] PTR unsigned char 
  6327 ;;		 -> ToSendDataBuffer(64), 
  6328 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  6329 ;;		 -> STR_14(39), STR_13(52), STR_12(44), STR_11(55), 
  6330 ;;		 -> STR_10(39), STR_9(32), STR_8(17), STR_7(31), 
  6331 ;;		 -> STR_6(25), STR_5(22), STR_4(41), STR_3(33), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  idx             1   28[BANK1 ] unsigned char 
  6334 ;;  tmpval          4    0        struct .
  6335 ;;  width           2   39[BANK1 ] int 
  6336 ;;  val             2   36[BANK1 ] unsigned int 
  6337 ;;  len             2   34[BANK1 ] unsigned int 
  6338 ;;  ap              2   32[BANK1 ] PTR void [1]
  6339 ;;		 -> ?_sprintf(2), 
  6340 ;;  cp              2   30[BANK1 ] PTR const unsigned char 
  6341 ;;		 -> STR_15(7), TX_POWER_INVALID(6), TX_POWER_N_8_DB_MW(7), TX_POWER_N_5_DB_MW(6), 
  6342 ;;		 -> TX_POWER_N_2_DB_MW(6), TX_POWER_1_DB_MW(7), TX_POWER_4_DB_MW(6), TX_POWER_7_DB_MW(4), 
  6343 ;;		 -> TX_POWER_10_DB_MW(5), TX_POWER_13_DB_MW(5), 
  6344 ;;  c               1   41[BANK1 ] char 
  6345 ;;  flag            1   38[BANK1 ] unsigned char 
  6346 ;;  prec            1   29[BANK1 ] char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  2   12[BANK1 ] int 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6356 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6358 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;Total ram usage:       30 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:   17
  6363 ;; This function calls:
  6364 ;;		___lwdiv
  6365 ;;		___lwmod
  6366 ;;		___wmul
  6367 ;;		_isdigit
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text8
  6374  0053B8                     __ptext8:
  6375                           	opt stack 0
  6376  0053B8                     _sprintf:
  6377                           	opt stack 13
  6378                           
  6379                           ;doprnt.c: 494: va_list ap;
  6380                           ;doprnt.c: 499: signed char c;
  6381                           ;doprnt.c: 501: int width;
  6382                           ;doprnt.c: 506: signed char prec;
  6383                           ;doprnt.c: 508: unsigned char flag;
  6384                           ;doprnt.c: 523: union {
  6385                           ;doprnt.c: 524: unsigned long vd;
  6386                           ;doprnt.c: 525: double integ;
  6387                           ;doprnt.c: 526: } tmpval;
  6388                           ;doprnt.c: 528: unsigned int val;
  6389                           ;doprnt.c: 529: unsigned len;
  6390                           ;doprnt.c: 530: const char * cp;
  6391                           ;doprnt.c: 533: *ap = __va_start();
  6392                           
  6393                           ;incstack = 0
  6394  0053B8  0E10               	movlw	low (?_sprintf+4)
  6395  0053BA  0101               	movlb	1	; () banked
  6396  0053BC  6F20               	movwf	sprintf@ap& (0+255),b
  6397  0053BE  0E01               	movlw	high (?_sprintf+4)
  6398  0053C0  0101               	movlb	1	; () banked
  6399  0053C2  6F21               	movwf	(sprintf@ap+1)& (0+255),b
  6400                           
  6401                           ;doprnt.c: 536: while(c = *f++) {
  6402  0053C4  D288               	goto	l20794
  6403  0053C6                     l20622:
  6404                           
  6405                           ; BSR set to: 1
  6406                           ;doprnt.c: 538: if(c != '%')
  6407  0053C6  0E25               	movlw	37
  6408  0053C8  0101               	movlb	1	; () banked
  6409  0053CA  1929               	xorwf	sprintf@c& (0+255),w,b
  6410  0053CC  B4D8               	btfsc	status,2,c
  6411  0053CE  D00A               	goto	l20628
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;doprnt.c: 540: {
  6415                           ;doprnt.c: 541: ((*sp++ = (c)));
  6416  0053D0  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6417  0053D4  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6418  0053D8  C129  FFDF         	movff	sprintf@c,indf2
  6419                           
  6420                           ; BSR set to: 1
  6421  0053DC  0101               	movlb	1	; () banked
  6422  0053DE  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6423  0053E0  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6424                           
  6425                           ;doprnt.c: 542: continue;
  6426  0053E2  D279               	goto	l20794
  6427  0053E4                     l20628:
  6428                           
  6429                           ; BSR set to: 1
  6430                           ;doprnt.c: 543: }
  6431                           ;doprnt.c: 546: width = 0;
  6432  0053E4  0E00               	movlw	0
  6433  0053E6  0101               	movlb	1	; () banked
  6434  0053E8  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6435  0053EA  0E00               	movlw	0
  6436  0053EC  6F27               	movwf	sprintf@width& (0+255),b
  6437                           
  6438                           ;doprnt.c: 548: flag = 0;
  6439  0053EE  0E00               	movlw	0
  6440  0053F0  0101               	movlb	1	; () banked
  6441  0053F2  6F26               	movwf	sprintf@flag& (0+255),b
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;doprnt.c: 551: switch(*f) {
  6445                           
  6446                           ;doprnt.c: 550: for(;;) {
  6447  0053F4  D005               	goto	l20634
  6448  0053F6                     l20630:
  6449                           
  6450                           ;doprnt.c: 580: flag |= 0x04;
  6451  0053F6  0101               	movlb	1	; () banked
  6452  0053F8  8526               	bsf	sprintf@flag& (0+255),2,b
  6453                           
  6454                           ;doprnt.c: 581: f++;
  6455  0053FA  0101               	movlb	1	; () banked
  6456  0053FC  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6457  0053FE  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6458  005400                     l20634:
  6459  005400  C10E  FFF6         	movff	sprintf@f,tblptrl
  6460  005404  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6461  005408                     	if	0	;tblptru may be non-zero
  6462  005408                     	endif
  6463  005408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6464  005408  0E00               	movlw	low (__mediumconst shr (0+16))
  6465  00540A  6EF8               	movwf	tblptru,c
  6466  00540C                     	endif
  6467  00540C  0008               	tblrd		*
  6468  00540E  50F5               	movf	tablat,w,c
  6469                           
  6470                           ; Switch size 1, requested type "space"
  6471                           ; Number of cases is 1, Range of values is 48 to 48
  6472                           ; switch strategies available:
  6473                           ; Name         Instructions Cycles
  6474                           ; simple_byte            4     3 (average)
  6475                           ;	Chosen strategy is simple_byte
  6476  005410  0A30               	xorlw	48	; case 48
  6477  005412  B4D8               	btfsc	status,2,c
  6478  005414  D7F0               	goto	l20630
  6479                           
  6480                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6481                           
  6482                           ;doprnt.c: 586: }
  6483                           
  6484                           ;doprnt.c: 585: break;
  6485  005416  C10E  FFF6         	movff	sprintf@f,tblptrl
  6486  00541A  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6487  00541E                     	if	0	;tblptru may be non-zero
  6488  00541E                     	endif
  6489  00541E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6490  00541E  0E00               	movlw	low (__mediumconst shr (0+16))
  6491  005420  6EF8               	movwf	tblptru,c
  6492  005422                     	endif
  6493  005422  0008               	tblrd		*
  6494  005424  50F5               	movf	tablat,w,c
  6495  005426  EC2F  F05D         	call	_isdigit
  6496  00542A  A0D8               	btfss	status,0,c
  6497  00542C  D0CE               	goto	l20686
  6498                           
  6499                           ;doprnt.c: 598: width = 0;
  6500  00542E  0E00               	movlw	0
  6501  005430  0101               	movlb	1	; () banked
  6502  005432  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6503  005434  0E00               	movlw	0
  6504  005436  6F27               	movwf	sprintf@width& (0+255),b
  6505  005438                     l20640:
  6506                           
  6507                           ;doprnt.c: 600: width *= 10;
  6508  005438  C127  F100         	movff	sprintf@width,___wmul@multiplier
  6509  00543C  C128  F101         	movff	sprintf@width+1,___wmul@multiplier+1
  6510  005440  0E00               	movlw	0
  6511  005442  0101               	movlb	1	; () banked
  6512  005444  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6513  005446  0E0A               	movlw	10
  6514  005448  6F02               	movwf	___wmul@multiplicand& (0+255),b
  6515  00544A  EC83  F05C         	call	___wmul	;wreg free
  6516  00544E  C100  F127         	movff	?___wmul,sprintf@width
  6517  005452  C101  F128         	movff	?___wmul+1,sprintf@width+1
  6518                           
  6519                           ;doprnt.c: 601: width += *f++ - '0';
  6520  005456  0ED0               	movlw	208
  6521  005458  0101               	movlb	1	; () banked
  6522  00545A  6F18               	movwf	??_sprintf& (0+255),b
  6523  00545C  0EFF               	movlw	255
  6524  00545E  0101               	movlb	1	; () banked
  6525  005460  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6526  005462  C10E  FFF6         	movff	sprintf@f,tblptrl
  6527  005466  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6528  00546A                     	if	0	;tblptru may be non-zero
  6529  00546A                     	endif
  6530  00546A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6531  00546A  0E00               	movlw	low (__mediumconst shr (0+16))
  6532  00546C  6EF8               	movwf	tblptru,c
  6533  00546E                     	endif
  6534  00546E  0008               	tblrd		*
  6535  005470  50F5               	movf	tablat,w,c
  6536  005472  0101               	movlb	1	; () banked
  6537  005474  6F1A               	movwf	(??_sprintf+2)& (0+255),b
  6538  005476  6B1B               	clrf	(??_sprintf+3)& (0+255),b
  6539  005478  0101               	movlb	1	; () banked
  6540  00547A  5118               	movf	??_sprintf& (0+255),w,b
  6541  00547C  0101               	movlb	1	; () banked
  6542  00547E  271A               	addwf	(??_sprintf+2)& (0+255),f,b
  6543  005480  0101               	movlb	1	; () banked
  6544  005482  5119               	movf	(??_sprintf+1)& (0+255),w,b
  6545  005484  0101               	movlb	1	; () banked
  6546  005486  231B               	addwfc	(??_sprintf+3)& (0+255),f,b
  6547  005488  0101               	movlb	1	; () banked
  6548  00548A  511A               	movf	(??_sprintf+2)& (0+255),w,b
  6549  00548C  0101               	movlb	1	; () banked
  6550  00548E  2727               	addwf	sprintf@width& (0+255),f,b
  6551  005490  0101               	movlb	1	; () banked
  6552  005492  511B               	movf	(??_sprintf+3)& (0+255),w,b
  6553  005494  0101               	movlb	1	; () banked
  6554  005496  2328               	addwfc	(sprintf@width+1)& (0+255),f,b
  6555                           
  6556                           ; BSR set to: 1
  6557  005498  0101               	movlb	1	; () banked
  6558  00549A  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6559  00549C  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6563  00549E  C10E  FFF6         	movff	sprintf@f,tblptrl
  6564  0054A2  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6565  0054A6                     	if	0	;tblptru may be non-zero
  6566  0054A6                     	endif
  6567  0054A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6568  0054A6  0E00               	movlw	low (__mediumconst shr (0+16))
  6569  0054A8  6EF8               	movwf	tblptru,c
  6570  0054AA                     	endif
  6571  0054AA  0008               	tblrd		*
  6572  0054AC  50F5               	movf	tablat,w,c
  6573  0054AE  EC2F  F05D         	call	_isdigit
  6574  0054B2  A0D8               	btfss	status,0,c
  6575  0054B4  D08A               	goto	l20686
  6576  0054B6  D7C0               	goto	l20640
  6577  0054B8                     l20648:
  6578                           
  6579                           ;doprnt.c: 721: flag |= 0x80;
  6580  0054B8  0101               	movlb	1	; () banked
  6581  0054BA  8F26               	bsf	sprintf@flag& (0+255),7,b
  6582                           
  6583                           ;doprnt.c: 723: break;
  6584  0054BC  D0A4               	goto	l2161
  6585  0054BE                     l20650:
  6586                           
  6587                           ; BSR set to: 1
  6588                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6589  0054BE  C120  FFD9         	movff	sprintf@ap,fsr2l
  6590  0054C2  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6591  0054C6  CFDE F11E          	movff	postinc2,sprintf@cp
  6592  0054CA  CFDD F11F          	movff	postdec2,sprintf@cp+1
  6593                           
  6594                           ; BSR set to: 1
  6595  0054CE  0E02               	movlw	2
  6596  0054D0  0101               	movlb	1	; () banked
  6597  0054D2  2720               	addwf	sprintf@ap& (0+255),f,b
  6598  0054D4  0E00               	movlw	0
  6599  0054D6  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;doprnt.c: 740: if(!cp)
  6603  0054D8  0101               	movlb	1	; () banked
  6604  0054DA  511E               	movf	sprintf@cp& (0+255),w,b
  6605  0054DC  0101               	movlb	1	; () banked
  6606  0054DE  111F               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6607  0054E0  A4D8               	btfss	status,2,c
  6608  0054E2  D006               	goto	l20658
  6609                           
  6610                           ; BSR set to: 1
  6611                           ;doprnt.c: 741: cp = "(null)";
  6612  0054E4  0EBD               	movlw	low STR_15
  6613  0054E6  0101               	movlb	1	; () banked
  6614  0054E8  6F1E               	movwf	sprintf@cp& (0+255),b
  6615  0054EA  0E23               	movlw	high STR_15
  6616  0054EC  0101               	movlb	1	; () banked
  6617  0054EE  6F1F               	movwf	(sprintf@cp+1)& (0+255),b
  6618  0054F0                     l20658:
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;doprnt.c: 745: len = 0;
  6622  0054F0  0E00               	movlw	0
  6623  0054F2  0101               	movlb	1	; () banked
  6624  0054F4  6F23               	movwf	(sprintf@len+1)& (0+255),b
  6625  0054F6  0E00               	movlw	0
  6626  0054F8  6F22               	movwf	sprintf@len& (0+255),b
  6627                           
  6628                           ;doprnt.c: 746: while(cp[len])
  6629  0054FA  D003               	goto	l20662
  6630  0054FC                     l20660:
  6631                           
  6632                           ; BSR set to: 1
  6633                           ;doprnt.c: 747: len++;
  6634  0054FC  0101               	movlb	1	; () banked
  6635  0054FE  4B22               	infsnz	sprintf@len& (0+255),f,b
  6636  005500  2B23               	incf	(sprintf@len+1)& (0+255),f,b
  6637  005502                     l20662:
  6638                           
  6639                           ; BSR set to: 1
  6640  005502  0101               	movlb	1	; () banked
  6641  005504  5122               	movf	sprintf@len& (0+255),w,b
  6642  005506  0101               	movlb	1	; () banked
  6643  005508  251E               	addwf	sprintf@cp& (0+255),w,b
  6644  00550A  0101               	movlb	1	; () banked
  6645  00550C  6F18               	movwf	??_sprintf& (0+255),b
  6646  00550E  0101               	movlb	1	; () banked
  6647  005510  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6648  005512  0101               	movlb	1	; () banked
  6649  005514  211F               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6650  005516  0101               	movlb	1	; () banked
  6651  005518  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6652  00551A  C118  FFF6         	movff	??_sprintf,tblptrl
  6653  00551E  C119  FFF7         	movff	??_sprintf+1,tblptrh
  6654  005522                     	if	0	;tblptru may be non-zero
  6655  005522                     	endif
  6656  005522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6657  005522  0E00               	movlw	low (__mediumconst shr (0+16))
  6658  005524  6EF8               	movwf	tblptru,c
  6659  005526                     	endif
  6660  005526  0008               	tblrd		*
  6661  005528  50F5               	movf	tablat,w,c
  6662  00552A  0900               	iorlw	0
  6663  00552C  A4D8               	btfss	status,2,c
  6664  00552E  D7E6               	goto	l20660
  6665                           
  6666                           ; BSR set to: 1
  6667                           ;doprnt.c: 757: if(width > len)
  6668                           
  6669                           ; BSR set to: 1
  6670  005530  0101               	movlb	1	; () banked
  6671  005532  5127               	movf	sprintf@width& (0+255),w,b
  6672  005534  0101               	movlb	1	; () banked
  6673  005536  5D22               	subwf	sprintf@len& (0+255),w,b
  6674  005538  0101               	movlb	1	; () banked
  6675  00553A  5128               	movf	(sprintf@width+1)& (0+255),w,b
  6676  00553C  0101               	movlb	1	; () banked
  6677  00553E  5923               	subwfb	(sprintf@len+1)& (0+255),w,b
  6678  005540  B0D8               	btfsc	status,0,c
  6679  005542  D009               	goto	l20668
  6680                           
  6681                           ; BSR set to: 1
  6682                           ;doprnt.c: 758: width -= len;
  6683  005544  0101               	movlb	1	; () banked
  6684  005546  5122               	movf	sprintf@len& (0+255),w,b
  6685  005548  0101               	movlb	1	; () banked
  6686  00554A  5F27               	subwf	sprintf@width& (0+255),f,b
  6687  00554C  0101               	movlb	1	; () banked
  6688  00554E  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6689  005550  0101               	movlb	1	; () banked
  6690  005552  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  6691  005554  D00F               	goto	l20674
  6692  005556                     l20668:
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;doprnt.c: 759: else
  6696                           ;doprnt.c: 760: width = 0;
  6697  005556  0E00               	movlw	0
  6698  005558  0101               	movlb	1	; () banked
  6699  00555A  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6700  00555C  0E00               	movlw	0
  6701  00555E  6F27               	movwf	sprintf@width& (0+255),b
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;doprnt.c: 764: while(width--)
  6705  005560  D009               	goto	l20674
  6706  005562                     l20670:
  6707                           
  6708                           ; BSR set to: 1
  6709                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6710  005562  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6711  005566  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6712  00556A  0E20               	movlw	32
  6713  00556C  6EDF               	movwf	indf2,c
  6714                           
  6715                           ; BSR set to: 1
  6716  00556E  0101               	movlb	1	; () banked
  6717  005570  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6718  005572  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6719  005574                     l20674:
  6720                           
  6721                           ; BSR set to: 1
  6722  005574  0101               	movlb	1	; () banked
  6723  005576  0727               	decf	sprintf@width& (0+255),f,b
  6724  005578  A0D8               	btfss	status,0,c
  6725  00557A  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6726  00557C  0101               	movlb	1	; () banked
  6727  00557E  2927               	incf	sprintf@width& (0+255),w,b
  6728  005580  E1F0               	bnz	l20670
  6729  005582  0101               	movlb	1	; () banked
  6730  005584  2928               	incf	(sprintf@width+1)& (0+255),w,b
  6731  005586  B4D8               	btfsc	status,2,c
  6732  005588  D014               	goto	l20682
  6733  00558A  D7EB               	goto	l20670
  6734  00558C                     l20676:
  6735                           
  6736                           ; BSR set to: 1
  6737                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6738  00558C  C11E  FFF6         	movff	sprintf@cp,tblptrl
  6739  005590  C11F  FFF7         	movff	sprintf@cp+1,tblptrh
  6740  005594                     	if	0	;tblptru may be non-zero
  6741  005594                     	endif
  6742  005594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6743  005594  0E00               	movlw	low (__mediumconst shr (0+16))
  6744  005596  6EF8               	movwf	tblptru,c
  6745  005598                     	endif
  6746  005598  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6747  00559C  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6748  0055A0  0008               	tblrd		*
  6749  0055A2  CFF5 FFDF          	movff	tablat,indf2
  6750                           
  6751                           ; BSR set to: 1
  6752  0055A6  0101               	movlb	1	; () banked
  6753  0055A8  4B1E               	infsnz	sprintf@cp& (0+255),f,b
  6754  0055AA  2B1F               	incf	(sprintf@cp+1)& (0+255),f,b
  6755                           
  6756                           ; BSR set to: 1
  6757  0055AC  0101               	movlb	1	; () banked
  6758  0055AE  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6759  0055B0  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6760  0055B2                     l20682:
  6761                           
  6762                           ; BSR set to: 1
  6763  0055B2  0101               	movlb	1	; () banked
  6764  0055B4  0722               	decf	sprintf@len& (0+255),f,b
  6765  0055B6  A0D8               	btfss	status,0,c
  6766  0055B8  0723               	decf	(sprintf@len+1)& (0+255),f,b
  6767  0055BA  0101               	movlb	1	; () banked
  6768  0055BC  2922               	incf	sprintf@len& (0+255),w,b
  6769  0055BE  E1E6               	bnz	l20676
  6770  0055C0  0101               	movlb	1	; () banked
  6771  0055C2  2923               	incf	(sprintf@len+1)& (0+255),w,b
  6772  0055C4  B4D8               	btfsc	status,2,c
  6773  0055C6  D187               	goto	l20794
  6774  0055C8  D7E1               	goto	l20676
  6775  0055CA                     l20686:
  6776  0055CA  C10E  FFF6         	movff	sprintf@f,tblptrl
  6777  0055CE  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6778  0055D2  0101               	movlb	1	; () banked
  6779  0055D4  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6780  0055D6  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6781  0055D8                     	if	0	;tblptru may be non-zero
  6782  0055D8                     	endif
  6783  0055D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6784  0055D8  0E00               	movlw	low (__mediumconst shr (0+16))
  6785  0055DA  6EF8               	movwf	tblptru,c
  6786  0055DC                     	endif
  6787  0055DC  0008               	tblrd		*
  6788  0055DE  CFF5 F129          	movff	tablat,sprintf@c
  6789  0055E2  0101               	movlb	1	; () banked
  6790  0055E4  5129               	movf	sprintf@c& (0+255),w,b
  6791                           
  6792                           ; Switch size 1, requested type "space"
  6793                           ; Number of cases is 5, Range of values is 0 to 120
  6794                           ; switch strategies available:
  6795                           ; Name         Instructions Cycles
  6796                           ; simple_byte           16     9 (average)
  6797                           ;	Chosen strategy is simple_byte
  6798  0055E6  0A00               	xorlw	0	; case 0
  6799  0055E8  B4D8               	btfsc	status,2,c
  6800  0055EA  D185               	goto	l20796
  6801  0055EC  0A64               	xorlw	100	; case 100
  6802  0055EE  B4D8               	btfsc	status,2,c
  6803  0055F0  D00A               	goto	l2161
  6804  0055F2  0A0D               	xorlw	13	; case 105
  6805  0055F4  B4D8               	btfsc	status,2,c
  6806  0055F6  D007               	goto	l2161
  6807  0055F8  0A1A               	xorlw	26	; case 115
  6808  0055FA  B4D8               	btfsc	status,2,c
  6809  0055FC  D760               	goto	l20650
  6810  0055FE  0A0B               	xorlw	11	; case 120
  6811  005600  B4D8               	btfsc	status,2,c
  6812  005602  D75A               	goto	l20648
  6813  005604  D168               	goto	l20794
  6814  005606                     l2161:
  6815                           
  6816                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  6817  005606  0101               	movlb	1	; () banked
  6818  005608  BF26               	btfsc	sprintf@flag& (0+255),7,b
  6819  00560A  D019               	goto	l20698
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;doprnt.c: 1253: {
  6823                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6824  00560C  C120  FFD9         	movff	sprintf@ap,fsr2l
  6825  005610  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6826  005614  CFDE F124          	movff	postinc2,sprintf@val
  6827  005618  CFDD F125          	movff	postdec2,sprintf@val+1
  6828                           
  6829                           ; BSR set to: 1
  6830  00561C  0E02               	movlw	2
  6831  00561E  0101               	movlb	1	; () banked
  6832  005620  2720               	addwf	sprintf@ap& (0+255),f,b
  6833  005622  0E00               	movlw	0
  6834  005624  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;doprnt.c: 1261: if((int)val < 0) {
  6838  005626  0101               	movlb	1	; () banked
  6839  005628  AF25               	btfss	(sprintf@val+1)& (0+255),7,b
  6840  00562A  D059               	goto	l20732
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;doprnt.c: 1262: flag |= 0x03;
  6844  00562C  0E03               	movlw	3
  6845  00562E  0101               	movlb	1	; () banked
  6846  005630  1326               	iorwf	sprintf@flag& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;doprnt.c: 1263: val = -val;
  6850  005632  0101               	movlb	1	; () banked
  6851  005634  6D24               	negf	sprintf@val& (0+255),b
  6852  005636  1F25               	comf	(sprintf@val+1)& (0+255),f,b
  6853  005638  B0D8               	btfsc	status,0,c
  6854  00563A  2B25               	incf	(sprintf@val+1)& (0+255),f,b
  6855                           
  6856                           ; BSR set to: 1
  6857                           ;doprnt.c: 1264: }
  6858                           ;doprnt.c: 1266: }
  6859  00563C  D050               	goto	l20732
  6860  00563E                     l20698:
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;doprnt.c: 1268: else
  6864                           ;doprnt.c: 1273: {
  6865                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6866  00563E  C120  FFD9         	movff	sprintf@ap,fsr2l
  6867  005642  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6868  005646  CFDE F124          	movff	postinc2,sprintf@val
  6869  00564A  CFDD F125          	movff	postdec2,sprintf@val+1
  6870                           
  6871                           ; BSR set to: 1
  6872  00564E  0E02               	movlw	2
  6873  005650  0101               	movlb	1	; () banked
  6874  005652  2720               	addwf	sprintf@ap& (0+255),f,b
  6875  005654  0E00               	movlw	0
  6876  005656  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6877                           
  6878                           ; BSR set to: 1
  6879                           ;doprnt.c: 1287: }
  6880                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6881  005658  D042               	goto	l20732
  6882  00565A                     l20702:
  6883                           
  6884                           ; BSR set to: 1
  6885                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6886  00565A  0E01               	movlw	1
  6887  00565C  0101               	movlb	1	; () banked
  6888  00565E  6F29               	movwf	sprintf@c& (0+255),b
  6889  005660                     l20704:
  6890                           
  6891                           ; BSR set to: 1
  6892  005660  0E05               	movlw	5
  6893  005662  0101               	movlb	1	; () banked
  6894  005664  1929               	xorwf	sprintf@c& (0+255),w,b
  6895  005666  B4D8               	btfsc	status,2,c
  6896  005668  D043               	goto	l20734
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;doprnt.c: 1306: if(val < dpowers[c])
  6900                           
  6901                           ; BSR set to: 1
  6902                           
  6903                           ; BSR set to: 1
  6904  00566A  0101               	movlb	1	; () banked
  6905  00566C  5129               	movf	sprintf@c& (0+255),w,b
  6906  00566E  0D02               	mullw	2
  6907  005670  0EB1               	movlw	low _dpowers
  6908  005672  24F3               	addwf	prodl,w,c
  6909  005674  6EF6               	movwf	tblptrl,c
  6910  005676  0E20               	movlw	high _dpowers
  6911  005678  20F4               	addwfc	prodh,w,c
  6912  00567A  6EF7               	movwf	tblptrh,c
  6913  00567C                     	if	1	;There are 3 active tblptr bytes
  6914  00567C  6AF8               	clrf	tblptru,c
  6915  00567E  0E00               	movlw	low (__mediumconst shr (0+16))
  6916  005680  22F8               	addwfc	tblptru,f,c
  6917  005682                     	endif
  6918  005682  0009               	tblrd		*+
  6919  005684  50F5               	movf	tablat,w,c
  6920  005686  0101               	movlb	1	; () banked
  6921  005688  5D24               	subwf	sprintf@val& (0+255),w,b
  6922  00568A  0009               	tblrd		*+
  6923  00568C  50F5               	movf	tablat,w,c
  6924  00568E  0101               	movlb	1	; () banked
  6925  005690  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6926  005692  A0D8               	btfss	status,0,c
  6927  005694  D02D               	goto	l20734
  6928                           
  6929                           ; BSR set to: 1
  6930                           
  6931                           ; BSR set to: 1
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;doprnt.c: 1307: break;
  6935  005696  0101               	movlb	1	; () banked
  6936  005698  2B29               	incf	sprintf@c& (0+255),f,b
  6937  00569A  D7E2               	goto	l20704
  6938  00569C                     l20716:
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6942  00569C  0E01               	movlw	1
  6943  00569E  0101               	movlb	1	; () banked
  6944  0056A0  6F29               	movwf	sprintf@c& (0+255),b
  6945  0056A2                     l20718:
  6946                           
  6947                           ; BSR set to: 1
  6948  0056A2  0E04               	movlw	4
  6949  0056A4  0101               	movlb	1	; () banked
  6950  0056A6  1929               	xorwf	sprintf@c& (0+255),w,b
  6951  0056A8  B4D8               	btfsc	status,2,c
  6952  0056AA  D022               	goto	l20734
  6953                           
  6954                           ; BSR set to: 1
  6955                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6956                           
  6957                           ; BSR set to: 1
  6958                           
  6959                           ; BSR set to: 1
  6960  0056AC  0101               	movlb	1	; () banked
  6961  0056AE  5129               	movf	sprintf@c& (0+255),w,b
  6962  0056B0  0D02               	mullw	2
  6963  0056B2  0EBB               	movlw	low _hexpowers
  6964  0056B4  24F3               	addwf	prodl,w,c
  6965  0056B6  6EF6               	movwf	tblptrl,c
  6966  0056B8  0E20               	movlw	high _hexpowers
  6967  0056BA  20F4               	addwfc	prodh,w,c
  6968  0056BC  6EF7               	movwf	tblptrh,c
  6969  0056BE                     	if	1	;There are 3 active tblptr bytes
  6970  0056BE  6AF8               	clrf	tblptru,c
  6971  0056C0  0E00               	movlw	low (__mediumconst shr (0+16))
  6972  0056C2  22F8               	addwfc	tblptru,f,c
  6973  0056C4                     	endif
  6974  0056C4  0009               	tblrd		*+
  6975  0056C6  50F5               	movf	tablat,w,c
  6976  0056C8  0101               	movlb	1	; () banked
  6977  0056CA  5D24               	subwf	sprintf@val& (0+255),w,b
  6978  0056CC  0009               	tblrd		*+
  6979  0056CE  50F5               	movf	tablat,w,c
  6980  0056D0  0101               	movlb	1	; () banked
  6981  0056D2  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6982  0056D4  A0D8               	btfss	status,0,c
  6983  0056D6  D00C               	goto	l20734
  6984                           
  6985                           ; BSR set to: 1
  6986                           
  6987                           ; BSR set to: 1
  6988                           
  6989                           ; BSR set to: 1
  6990                           ;doprnt.c: 1318: break;
  6991  0056D8  0101               	movlb	1	; () banked
  6992  0056DA  2B29               	incf	sprintf@c& (0+255),f,b
  6993  0056DC  D7E2               	goto	l20718
  6994  0056DE                     l20732:
  6995                           
  6996                           ; BSR set to: 1
  6997  0056DE  0101               	movlb	1	; () banked
  6998  0056E0  5126               	movf	sprintf@flag& (0+255),w,b
  6999  0056E2  0B80               	andlw	128
  7000                           
  7001                           ; Switch size 1, requested type "space"
  7002                           ; Number of cases is 2, Range of values is 0 to 128
  7003                           ; switch strategies available:
  7004                           ; Name         Instructions Cycles
  7005                           ; simple_byte            7     4 (average)
  7006                           ;	Chosen strategy is simple_byte
  7007  0056E4  0A00               	xorlw	0	; case 0
  7008  0056E6  B4D8               	btfsc	status,2,c
  7009  0056E8  D7B8               	goto	l20702
  7010  0056EA  0A80               	xorlw	128	; case 128
  7011  0056EC  B4D8               	btfsc	status,2,c
  7012  0056EE  D7D6               	goto	l20716
  7013  0056F0                     l20734:
  7014                           
  7015                           ; BSR set to: 1
  7016                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7017  0056F0  0101               	movlb	1	; () banked
  7018  0056F2  5127               	movf	sprintf@width& (0+255),w,b
  7019  0056F4  0101               	movlb	1	; () banked
  7020  0056F6  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7021  0056F8  B4D8               	btfsc	status,2,c
  7022  0056FA  D00B               	goto	l20740
  7023                           
  7024                           ; BSR set to: 1
  7025  0056FC  C126  F118         	movff	sprintf@flag,??_sprintf
  7026  005700  0E03               	movlw	3
  7027  005702  0101               	movlb	1	; () banked
  7028  005704  1718               	andwf	??_sprintf& (0+255),f,b
  7029  005706  B4D8               	btfsc	status,2,c
  7030  005708  D004               	goto	l20740
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;doprnt.c: 1346: width--;
  7034  00570A  0101               	movlb	1	; () banked
  7035  00570C  0727               	decf	sprintf@width& (0+255),f,b
  7036  00570E  A0D8               	btfss	status,0,c
  7037  005710  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7038  005712                     l20740:
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;doprnt.c: 1381: if(width > c)
  7042  005712  0E80               	movlw	128
  7043  005714  0101               	movlb	1	; () banked
  7044  005716  BF29               	btfsc	sprintf@c& (0+255),7,b
  7045  005718  0E7F               	movlw	127
  7046  00571A  0101               	movlb	1	; () banked
  7047  00571C  6F18               	movwf	??_sprintf& (0+255),b
  7048  00571E  0101               	movlb	1	; () banked
  7049  005720  5127               	movf	sprintf@width& (0+255),w,b
  7050  005722  0101               	movlb	1	; () banked
  7051  005724  5D29               	subwf	sprintf@c& (0+255),w,b
  7052  005726  0101               	movlb	1	; () banked
  7053  005728  5128               	movf	(sprintf@width+1)& (0+255),w,b
  7054  00572A  0A80               	xorlw	128
  7055  00572C  0101               	movlb	1	; () banked
  7056  00572E  5918               	subwfb	??_sprintf& (0+255),w,b
  7057  005730  B0D8               	btfsc	status,0,c
  7058  005732  D00B               	goto	l20744
  7059                           
  7060                           ; BSR set to: 1
  7061                           ;doprnt.c: 1382: width -= c;
  7062  005734  0101               	movlb	1	; () banked
  7063  005736  5129               	movf	sprintf@c& (0+255),w,b
  7064  005738  0101               	movlb	1	; () banked
  7065  00573A  5F27               	subwf	sprintf@width& (0+255),f,b
  7066  00573C  0E00               	movlw	0
  7067  00573E  0101               	movlb	1	; () banked
  7068  005740  BF29               	btfsc	sprintf@c& (0+255),7,b
  7069  005742  0EFF               	movlw	255
  7070  005744  0101               	movlb	1	; () banked
  7071  005746  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  7072  005748  D005               	goto	l20746
  7073  00574A                     l20744:
  7074                           
  7075                           ; BSR set to: 1
  7076                           ;doprnt.c: 1383: else
  7077                           ;doprnt.c: 1384: width = 0;
  7078  00574A  0E00               	movlw	0
  7079  00574C  0101               	movlb	1	; () banked
  7080  00574E  6F28               	movwf	(sprintf@width+1)& (0+255),b
  7081  005750  0E00               	movlw	0
  7082  005752  6F27               	movwf	sprintf@width& (0+255),b
  7083  005754                     l20746:
  7084                           
  7085                           ; BSR set to: 1
  7086                           ;doprnt.c: 1387: if(flag & 0x04) {
  7087  005754  0101               	movlb	1	; () banked
  7088  005756  A526               	btfss	sprintf@flag& (0+255),2,b
  7089  005758  D024               	goto	l20762
  7090                           
  7091                           ; BSR set to: 1
  7092                           ;doprnt.c: 1392: if(flag & 0x03)
  7093  00575A  C126  F118         	movff	sprintf@flag,??_sprintf
  7094  00575E  0E03               	movlw	3
  7095  005760  0101               	movlb	1	; () banked
  7096  005762  1718               	andwf	??_sprintf& (0+255),f,b
  7097  005764  B4D8               	btfsc	status,2,c
  7098  005766  D009               	goto	l20754
  7099                           
  7100                           ; BSR set to: 1
  7101                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  7102  005768  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7103  00576C  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7104  005770  0E2D               	movlw	45
  7105  005772  6EDF               	movwf	indf2,c
  7106                           
  7107                           ; BSR set to: 1
  7108  005774  0101               	movlb	1	; () banked
  7109  005776  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7110  005778  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7111  00577A                     l20754:
  7112                           
  7113                           ; BSR set to: 1
  7114                           ;doprnt.c: 1415: if(width)
  7115  00577A  0101               	movlb	1	; () banked
  7116  00577C  5127               	movf	sprintf@width& (0+255),w,b
  7117  00577E  0101               	movlb	1	; () banked
  7118  005780  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7119  005782  B4D8               	btfsc	status,2,c
  7120  005784  D037               	goto	l20776
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7124                           
  7125                           ; BSR set to: 1
  7126                           
  7127                           ;doprnt.c: 1416: do
  7128  005786  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7129  00578A  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7130  00578E  0E30               	movlw	48
  7131  005790  6EDF               	movwf	indf2,c
  7132                           
  7133                           ; BSR set to: 1
  7134  005792  0101               	movlb	1	; () banked
  7135  005794  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7136  005796  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;doprnt.c: 1418: while(--width);
  7140  005798  0101               	movlb	1	; () banked
  7141  00579A  0727               	decf	sprintf@width& (0+255),f,b
  7142  00579C  A0D8               	btfss	status,0,c
  7143  00579E  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7144  0057A0  D7EC               	goto	l20754
  7145  0057A2                     l20762:
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;doprnt.c: 1422: {
  7149                           ;doprnt.c: 1424: if(width
  7150                           ;doprnt.c: 1428: )
  7151  0057A2  0101               	movlb	1	; () banked
  7152  0057A4  5127               	movf	sprintf@width& (0+255),w,b
  7153  0057A6  0101               	movlb	1	; () banked
  7154  0057A8  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7155  0057AA  B4D8               	btfsc	status,2,c
  7156  0057AC  D013               	goto	l20770
  7157  0057AE                     l20764:
  7158                           
  7159                           ; BSR set to: 1
  7160                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7161  0057AE  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7162  0057B2  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7163  0057B6  0E20               	movlw	32
  7164  0057B8  6EDF               	movwf	indf2,c
  7165                           
  7166                           ; BSR set to: 1
  7167  0057BA  0101               	movlb	1	; () banked
  7168  0057BC  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7169  0057BE  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 1
  7172                           ;doprnt.c: 1431: while(--width);
  7173  0057C0  0101               	movlb	1	; () banked
  7174  0057C2  0727               	decf	sprintf@width& (0+255),f,b
  7175  0057C4  A0D8               	btfss	status,0,c
  7176  0057C6  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7177  0057C8  0101               	movlb	1	; () banked
  7178  0057CA  5127               	movf	sprintf@width& (0+255),w,b
  7179  0057CC  0101               	movlb	1	; () banked
  7180  0057CE  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7181  0057D0  A4D8               	btfss	status,2,c
  7182  0057D2  D7ED               	goto	l20764
  7183  0057D4                     l20770:
  7184                           
  7185                           ; BSR set to: 1
  7186                           ;doprnt.c: 1438: if(flag & 0x03)
  7187  0057D4  C126  F118         	movff	sprintf@flag,??_sprintf
  7188  0057D8  0E03               	movlw	3
  7189  0057DA  0101               	movlb	1	; () banked
  7190  0057DC  1718               	andwf	??_sprintf& (0+255),f,b
  7191  0057DE  B4D8               	btfsc	status,2,c
  7192  0057E0  D009               	goto	l20776
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7196  0057E2  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7197  0057E6  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7198  0057EA  0E2D               	movlw	45
  7199  0057EC  6EDF               	movwf	indf2,c
  7200                           
  7201                           ; BSR set to: 1
  7202  0057EE  0101               	movlb	1	; () banked
  7203  0057F0  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7204  0057F2  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7205  0057F4                     l20776:
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;doprnt.c: 1469: }
  7209                           ;doprnt.c: 1472: prec = c;
  7210  0057F4  C129  F11D         	movff	sprintf@c,sprintf@prec
  7211                           
  7212                           ;doprnt.c: 1474: while(prec--) {
  7213  0057F8  D068               	goto	l20792
  7214  0057FA                     l20778:
  7215                           
  7216                           ; BSR set to: 1
  7217                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7218  0057FA  0101               	movlb	1	; () banked
  7219  0057FC  511D               	movf	sprintf@prec& (0+255),w,b
  7220  0057FE  0D02               	mullw	2
  7221  005800  0EB1               	movlw	low _dpowers
  7222  005802  24F3               	addwf	prodl,w,c
  7223  005804  6EF6               	movwf	tblptrl,c
  7224  005806  0E20               	movlw	high _dpowers
  7225  005808  20F4               	addwfc	prodh,w,c
  7226  00580A  6EF7               	movwf	tblptrh,c
  7227  00580C                     	if	1	;There are 3 active tblptr bytes
  7228  00580C  6AF8               	clrf	tblptru,c
  7229  00580E  0E00               	movlw	low (__mediumconst shr (0+16))
  7230  005810  22F8               	addwfc	tblptru,f,c
  7231  005812                     	endif
  7232  005812  0009               	tblrd		*+
  7233  005814  CFF5 F102          	movff	tablat,___lwdiv@divisor
  7234  005818  000A               	tblrd		*-
  7235  00581A  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  7236  00581E  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  7237  005822  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  7238  005826  EC07  F058         	call	___lwdiv	;wreg free
  7239  00582A  C100  F107         	movff	?___lwdiv,___lwmod@dividend
  7240  00582E  C101  F108         	movff	?___lwdiv+1,___lwmod@dividend+1
  7241  005832  0E00               	movlw	0
  7242  005834  0101               	movlb	1	; () banked
  7243  005836  6F0A               	movwf	(___lwmod@divisor+1)& (0+255),b
  7244  005838  0E0A               	movlw	10
  7245  00583A  6F09               	movwf	___lwmod@divisor& (0+255),b
  7246  00583C  EC63  F059         	call	___lwmod	;wreg free
  7247  005840  0101               	movlb	1	; () banked
  7248  005842  5107               	movf	?___lwmod& (0+255),w,b
  7249  005844  0F30               	addlw	48
  7250  005846  0101               	movlb	1	; () banked
  7251  005848  6F29               	movwf	sprintf@c& (0+255),b
  7252                           
  7253                           ;doprnt.c: 1491: break;
  7254  00584A  D036               	goto	l20788
  7255  00584C                     l20780:
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;doprnt.c: 1499: {
  7259                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7260  00584C  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  7261  005850  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  7262  005854  0101               	movlb	1	; () banked
  7263  005856  511D               	movf	sprintf@prec& (0+255),w,b
  7264  005858  0D02               	mullw	2
  7265  00585A  0EBB               	movlw	low _hexpowers
  7266  00585C  24F3               	addwf	prodl,w,c
  7267  00585E  6EF6               	movwf	tblptrl,c
  7268  005860  0E20               	movlw	high _hexpowers
  7269  005862  20F4               	addwfc	prodh,w,c
  7270  005864  6EF7               	movwf	tblptrh,c
  7271  005866                     	if	1	;There are 3 active tblptr bytes
  7272  005866  6AF8               	clrf	tblptru,c
  7273  005868  0E00               	movlw	low (__mediumconst shr (0+16))
  7274  00586A  22F8               	addwfc	tblptru,f,c
  7275  00586C                     	endif
  7276  00586C  0009               	tblrd		*+
  7277  00586E  CFF5 F102          	movff	tablat,___lwdiv@divisor
  7278  005872  000A               	tblrd		*-
  7279  005874  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  7280  005878  EC07  F058         	call	___lwdiv	;wreg free
  7281  00587C  0101               	movlb	1	; () banked
  7282  00587E  5100               	movf	?___lwdiv& (0+255),w,b
  7283  005880  0B0F               	andlw	15
  7284  005882  0101               	movlb	1	; () banked
  7285  005884  6F1C               	movwf	sprintf@idx& (0+255),b
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  7289  005886  0101               	movlb	1	; () banked
  7290  005888  511C               	movf	sprintf@idx& (0+255),w,b
  7291  00588A  0D01               	mullw	1
  7292  00588C  0E93               	movlw	low STR_16
  7293  00588E  24F3               	addwf	prodl,w,c
  7294  005890  6EF6               	movwf	tblptrl,c
  7295  005892  0E23               	movlw	high STR_16
  7296  005894  20F4               	addwfc	prodh,w,c
  7297  005896  6EF7               	movwf	tblptrh,c
  7298  005898                     	if	1	;There are 3 active tblptr bytes
  7299  005898  6AF8               	clrf	tblptru,c
  7300  00589A  0E00               	movlw	low (__mediumconst shr (0+16))
  7301  00589C  22F8               	addwfc	tblptru,f,c
  7302  00589E                     	endif
  7303  00589E  0008               	tblrd		*
  7304  0058A0  CFF5 F129          	movff	tablat,sprintf@c
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;doprnt.c: 1523: }
  7308                           
  7309                           ;doprnt.c: 1508: }
  7310                           ;doprnt.c: 1510: break;
  7311  0058A4  D009               	goto	l20788
  7312  0058A6                     l20786:
  7313                           
  7314                           ; BSR set to: 1
  7315  0058A6  0101               	movlb	1	; () banked
  7316  0058A8  5126               	movf	sprintf@flag& (0+255),w,b
  7317  0058AA  0B80               	andlw	128
  7318                           
  7319                           ; Switch size 1, requested type "space"
  7320                           ; Number of cases is 2, Range of values is 0 to 128
  7321                           ; switch strategies available:
  7322                           ; Name         Instructions Cycles
  7323                           ; simple_byte            7     4 (average)
  7324                           ;	Chosen strategy is simple_byte
  7325  0058AC  0A00               	xorlw	0	; case 0
  7326  0058AE  B4D8               	btfsc	status,2,c
  7327  0058B0  D7A4               	goto	l20778
  7328  0058B2  0A80               	xorlw	128	; case 128
  7329  0058B4  B4D8               	btfsc	status,2,c
  7330  0058B6  D7CA               	goto	l20780
  7331  0058B8                     l20788:
  7332                           
  7333                           ; BSR set to: 1
  7334                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7335  0058B8  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7336  0058BC  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7337  0058C0  C129  FFDF         	movff	sprintf@c,indf2
  7338                           
  7339                           ; BSR set to: 1
  7340  0058C4  0101               	movlb	1	; () banked
  7341  0058C6  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7342  0058C8  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7343  0058CA                     l20792:
  7344                           
  7345                           ; BSR set to: 1
  7346  0058CA  0101               	movlb	1	; () banked
  7347  0058CC  071D               	decf	sprintf@prec& (0+255),f,b
  7348  0058CE  0101               	movlb	1	; () banked
  7349  0058D0  291D               	incf	sprintf@prec& (0+255),w,b
  7350  0058D2  A4D8               	btfss	status,2,c
  7351  0058D4  D7E8               	goto	l20786
  7352  0058D6                     l20794:
  7353                           
  7354                           ; BSR set to: 1
  7355  0058D6  C10E  FFF6         	movff	sprintf@f,tblptrl
  7356  0058DA  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  7357  0058DE  0101               	movlb	1	; () banked
  7358  0058E0  4B0E               	infsnz	sprintf@f& (0+255),f,b
  7359  0058E2  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  7360  0058E4                     	if	0	;tblptru may be non-zero
  7361  0058E4                     	endif
  7362  0058E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7363  0058E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7364  0058E6  6EF8               	movwf	tblptru,c
  7365  0058E8                     	endif
  7366  0058E8  0008               	tblrd		*
  7367  0058EA  CFF5 F129          	movff	tablat,sprintf@c
  7368  0058EE  0101               	movlb	1	; () banked
  7369  0058F0  5129               	movf	sprintf@c& (0+255),w,b
  7370  0058F2  A4D8               	btfss	status,2,c
  7371  0058F4  D568               	goto	l20622
  7372  0058F6                     l20796:
  7373                           
  7374                           ;doprnt.c: 1538: *sp = 0;
  7375  0058F6  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7376  0058FA  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7377  0058FE  0E00               	movlw	0
  7378  005900  6EDF               	movwf	indf2,c
  7379  005902  0012               	return	
  7380  005904                     __end_of_sprintf:
  7381                           	opt stack 0
  7382                           tblptru	equ	0xFF8
  7383                           tblptrh	equ	0xFF7
  7384                           tblptrl	equ	0xFF6
  7385                           tablat	equ	0xFF5
  7386                           prodh	equ	0xFF4
  7387                           prodl	equ	0xFF3
  7388                           postinc0	equ	0xFEE
  7389                           plusw0	equ	0xFEB
  7390                           wreg	equ	0xFE8
  7391                           postdec1	equ	0xFE5
  7392                           fsr1h	equ	0xFE2
  7393                           fsr1l	equ	0xFE1
  7394                           indf2	equ	0xFDF
  7395                           postinc2	equ	0xFDE
  7396                           postdec2	equ	0xFDD
  7397                           plusw2	equ	0xFDB
  7398                           fsr2h	equ	0xFDA
  7399                           fsr2l	equ	0xFD9
  7400                           status	equ	0xFD8
  7401                           
  7402 ;; *************** function _isdigit *****************
  7403 ;; Defined at:
  7404 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  c               1    wreg     unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  c               1    2[BANK1 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;		None               void
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;Total ram usage:        3 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:   16
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_sprintf
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text9
  7433  00BA5E                     __ptext9:
  7434                           	opt stack 0
  7435  00BA5E                     _isdigit:
  7436                           	opt stack 13
  7437                           
  7438                           ;incstack = 0
  7439                           ;isdigit@c stored from wreg
  7440  00BA5E  0101               	movlb	1	; () banked
  7441  00BA60  6F02               	movwf	isdigit@c& (0+255),b
  7442  00BA62  0E00               	movlw	0
  7443  00BA64  0101               	movlb	1	; () banked
  7444  00BA66  6F01               	movwf	_isdigit$5571& (0+255),b
  7445                           
  7446                           ; BSR set to: 1
  7447  00BA68  0E3A               	movlw	58
  7448  00BA6A  0101               	movlb	1	; () banked
  7449  00BA6C  6102               	cpfslt	isdigit@c& (0+255),b
  7450  00BA6E  D007               	goto	l19396
  7451                           
  7452                           ; BSR set to: 1
  7453  00BA70  0E2F               	movlw	47
  7454  00BA72  0101               	movlb	1	; () banked
  7455  00BA74  6502               	cpfsgt	isdigit@c& (0+255),b
  7456  00BA76  D003               	goto	l19396
  7457                           
  7458                           ; BSR set to: 1
  7459  00BA78  0E01               	movlw	1
  7460  00BA7A  0101               	movlb	1	; () banked
  7461  00BA7C  6F01               	movwf	_isdigit$5571& (0+255),b
  7462  00BA7E                     l19396:
  7463                           
  7464                           ; BSR set to: 1
  7465  00BA7E  C101  F100         	movff	_isdigit$5571,??_isdigit
  7466  00BA82  0101               	movlb	1	; () banked
  7467  00BA84  3100               	rrcf	??_isdigit& (0+255),w,b
  7468  00BA86  0012               	return	
  7469  00BA88                     __end_of_isdigit:
  7470                           	opt stack 0
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           postinc0	equ	0xFEE
  7478                           plusw0	equ	0xFEB
  7479                           wreg	equ	0xFE8
  7480                           postdec1	equ	0xFE5
  7481                           fsr1h	equ	0xFE2
  7482                           fsr1l	equ	0xFE1
  7483                           indf2	equ	0xFDF
  7484                           postinc2	equ	0xFDE
  7485                           postdec2	equ	0xFDD
  7486                           plusw2	equ	0xFDB
  7487                           fsr2h	equ	0xFDA
  7488                           fsr2l	equ	0xFD9
  7489                           status	equ	0xFD8
  7490                           
  7491 ;; *************** function ___wmul *****************
  7492 ;; Defined at:
  7493 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7496 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  product         2    4[BANK1 ] unsigned int 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2    0[BANK1 ] unsigned int 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0, prodl, prodh
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7508 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7511 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7512 ;;Total ram usage:        6 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   16
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_sprintf
  7519 ;;		_getReceiverBW
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text10
  7524  00B906                     __ptext10:
  7525                           	opt stack 0
  7526  00B906                     ___wmul:
  7527                           	opt stack 13
  7528                           
  7529                           ; BSR set to: 1
  7530                           ;incstack = 0
  7531  00B906  0101               	movlb	1	; () banked
  7532  00B908  5100               	movf	___wmul@multiplier& (0+255),w,b
  7533  00B90A  0101               	movlb	1	; () banked
  7534  00B90C  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7535  00B90E  CFF3 F104          	movff	prodl,___wmul@product
  7536  00B912  CFF4 F105          	movff	prodh,___wmul@product+1
  7537  00B916  0101               	movlb	1	; () banked
  7538  00B918  5100               	movf	___wmul@multiplier& (0+255),w,b
  7539  00B91A  0101               	movlb	1	; () banked
  7540  00B91C  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7541  00B91E  50F3               	movf	prodl,w,c
  7542  00B920  0101               	movlb	1	; () banked
  7543  00B922  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7544  00B924  0101               	movlb	1	; () banked
  7545  00B926  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7546  00B928  0101               	movlb	1	; () banked
  7547  00B92A  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7548  00B92C  50F3               	movf	prodl,w,c
  7549  00B92E  0101               	movlb	1	; () banked
  7550  00B930  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7551                           
  7552                           ; BSR set to: 1
  7553  00B932  C104  F100         	movff	___wmul@product,?___wmul
  7554  00B936  C105  F101         	movff	___wmul@product+1,?___wmul+1
  7555  00B93A  0012               	return	
  7556  00B93C                     __end_of___wmul:
  7557                           	opt stack 0
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           postinc0	equ	0xFEE
  7565                           plusw0	equ	0xFEB
  7566                           wreg	equ	0xFE8
  7567                           postdec1	equ	0xFE5
  7568                           fsr1h	equ	0xFE2
  7569                           fsr1l	equ	0xFE1
  7570                           indf2	equ	0xFDF
  7571                           postinc2	equ	0xFDE
  7572                           postdec2	equ	0xFDD
  7573                           plusw2	equ	0xFDB
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function ___lwmod *****************
  7579 ;; Defined at:
  7580 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  dividend        2    7[BANK1 ] unsigned int 
  7583 ;;  divisor         2    9[BANK1 ] unsigned int 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  counter         1   11[BANK1 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  2    7[BANK1 ] unsigned int 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7595 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7598 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;Total ram usage:        5 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:   16
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_sprintf
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text11
  7610  00B2C6                     __ptext11:
  7611                           	opt stack 0
  7612  00B2C6                     ___lwmod:
  7613                           	opt stack 13
  7614                           
  7615                           ; BSR set to: 1
  7616                           ;incstack = 0
  7617  00B2C6  0101               	movlb	1	; () banked
  7618  00B2C8  5109               	movf	___lwmod@divisor& (0+255),w,b
  7619  00B2CA  0101               	movlb	1	; () banked
  7620  00B2CC  110A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7621  00B2CE  B4D8               	btfsc	status,2,c
  7622  00B2D0  D026               	goto	l2663
  7623                           
  7624                           ; BSR set to: 1
  7625  00B2D2  0E01               	movlw	1
  7626  00B2D4  0101               	movlb	1	; () banked
  7627  00B2D6  6F0B               	movwf	___lwmod@counter& (0+255),b
  7628  00B2D8  D006               	goto	l19464
  7629  00B2DA                     l19462:
  7630                           
  7631                           ; BSR set to: 1
  7632  00B2DA  0101               	movlb	1	; () banked
  7633  00B2DC  90D8               	bcf	status,0,c
  7634  00B2DE  3709               	rlcf	___lwmod@divisor& (0+255),f,b
  7635  00B2E0  370A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7636  00B2E2  0101               	movlb	1	; () banked
  7637  00B2E4  2B0B               	incf	___lwmod@counter& (0+255),f,b
  7638  00B2E6                     l19464:
  7639                           
  7640                           ; BSR set to: 1
  7641  00B2E6  0101               	movlb	1	; () banked
  7642  00B2E8  AF0A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7643  00B2EA  D7F7               	goto	l19462
  7644  00B2EC                     l19466:
  7645                           
  7646                           ; BSR set to: 1
  7647  00B2EC  0101               	movlb	1	; () banked
  7648  00B2EE  5109               	movf	___lwmod@divisor& (0+255),w,b
  7649  00B2F0  0101               	movlb	1	; () banked
  7650  00B2F2  5D07               	subwf	___lwmod@dividend& (0+255),w,b
  7651  00B2F4  0101               	movlb	1	; () banked
  7652  00B2F6  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7653  00B2F8  0101               	movlb	1	; () banked
  7654  00B2FA  5908               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7655  00B2FC  A0D8               	btfss	status,0,c
  7656  00B2FE  D008               	goto	l19470
  7657                           
  7658                           ; BSR set to: 1
  7659  00B300  0101               	movlb	1	; () banked
  7660  00B302  5109               	movf	___lwmod@divisor& (0+255),w,b
  7661  00B304  0101               	movlb	1	; () banked
  7662  00B306  5F07               	subwf	___lwmod@dividend& (0+255),f,b
  7663  00B308  0101               	movlb	1	; () banked
  7664  00B30A  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7665  00B30C  0101               	movlb	1	; () banked
  7666  00B30E  5B08               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7667  00B310                     l19470:
  7668                           
  7669                           ; BSR set to: 1
  7670  00B310  0101               	movlb	1	; () banked
  7671  00B312  90D8               	bcf	status,0,c
  7672  00B314  330A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7673  00B316  3309               	rrcf	___lwmod@divisor& (0+255),f,b
  7674                           
  7675                           ; BSR set to: 1
  7676  00B318  0101               	movlb	1	; () banked
  7677  00B31A  2F0B               	decfsz	___lwmod@counter& (0+255),f,b
  7678  00B31C  D7E7               	goto	l19466
  7679  00B31E                     l2663:
  7680                           
  7681                           ; BSR set to: 1
  7682  00B31E  C107  F107         	movff	___lwmod@dividend,?___lwmod
  7683  00B322  C108  F108         	movff	___lwmod@dividend+1,?___lwmod+1
  7684                           
  7685                           ; BSR set to: 1
  7686  00B326  0012               	return		;funcret
  7687  00B328                     __end_of___lwmod:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           postinc0	equ	0xFEE
  7696                           plusw0	equ	0xFEB
  7697                           wreg	equ	0xFE8
  7698                           postdec1	equ	0xFE5
  7699                           fsr1h	equ	0xFE2
  7700                           fsr1l	equ	0xFE1
  7701                           indf2	equ	0xFDF
  7702                           postinc2	equ	0xFDE
  7703                           postdec2	equ	0xFDD
  7704                           plusw2	equ	0xFDB
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _send_periodic_update *****************
  7710 ;; Defined at:
  7711 ;;		line 584 in file "src/main.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  tmp             1    0        unsigned char 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;Total ram usage:       13 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   19
  7732 ;; This function calls:
  7733 ;;		___ftadd
  7734 ;;		___ftmul
  7735 ;;		___ftneg
  7736 ;;		___fttol
  7737 ;;		_encode_ufixed16_variable
  7738 ;;		_floor
  7739 ;;		_memcpy
  7740 ;;		_sendHIDBinary
  7741 ;; This function is called by:
  7742 ;;		_main
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text12
  7747  0071A0                     __ptext12:
  7748                           	opt stack 0
  7749  0071A0                     _send_periodic_update:
  7750                           	opt stack 11
  7751                           
  7752                           ;main.c: 586: p_buffer = m_buffer;
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;incstack = 0
  7756  0071A0  0ED1               	movlw	low _m_buffer
  7757  0071A2  0101               	movlb	1	; () banked
  7758  0071A4  6FB9               	movwf	_p_buffer& (0+255),b
  7759  0071A6  0E02               	movlw	high _m_buffer
  7760  0071A8  0101               	movlb	1	; () banked
  7761  0071AA  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  7762                           
  7763                           ; BSR set to: 1
  7764                           ;main.c: 587: *(p_buffer++) = 0x4d;
  7765  0071AC  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7766  0071B0  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7767  0071B4  0E4D               	movlw	77
  7768  0071B6  6EDF               	movwf	indf2,c
  7769                           
  7770                           ; BSR set to: 1
  7771  0071B8  0101               	movlb	1	; () banked
  7772  0071BA  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7773  0071BC  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;main.c: 588: *(p_buffer++) = 0x00;
  7777  0071BE  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7778  0071C2  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7779  0071C6  0E00               	movlw	0
  7780  0071C8  6EDF               	movwf	indf2,c
  7781                           
  7782                           ; BSR set to: 1
  7783  0071CA  0101               	movlb	1	; () banked
  7784  0071CC  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7785  0071CE  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 1
  7788                           ;main.c: 589: *(p_buffer++) = 0x00;
  7789  0071D0  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7790  0071D4  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7791  0071D8  0E00               	movlw	0
  7792  0071DA  6EDF               	movwf	indf2,c
  7793                           
  7794                           ; BSR set to: 1
  7795  0071DC  0101               	movlb	1	; () banked
  7796  0071DE  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7797  0071E0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7798                           
  7799                           ; BSR set to: 1
  7800                           ;main.c: 590: *(p_buffer++) = 04;
  7801  0071E2  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7802  0071E6  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7803  0071EA  0E04               	movlw	4
  7804  0071EC  6EDF               	movwf	indf2,c
  7805                           
  7806                           ; BSR set to: 1
  7807  0071EE  0101               	movlb	1	; () banked
  7808  0071F0  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7809  0071F2  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;main.c: 591: *(p_buffer++) = 0xff;
  7813  0071F4  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7814  0071F8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7815  0071FC  0EFF               	movlw	255
  7816  0071FE  6EDF               	movwf	indf2,c
  7817                           
  7818                           ; BSR set to: 1
  7819  007200  0101               	movlb	1	; () banked
  7820  007202  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7821  007204  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;main.c: 594: memcpy(m_var.label, UPTIME_LABEL, 3);
  7825  007206  0EDE               	movlw	low _m_var
  7826  007208  0101               	movlb	1	; () banked
  7827  00720A  6F00               	movwf	memcpy@d1& (0+255),b
  7828  00720C  0E01               	movlw	high _m_var
  7829  00720E  0101               	movlb	1	; () banked
  7830  007210  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  7831  007212  0ECD               	movlw	low _UPTIME_LABEL
  7832  007214  0101               	movlb	1	; () banked
  7833  007216  6F02               	movwf	memcpy@s1& (0+255),b
  7834  007218  0E21               	movlw	high _UPTIME_LABEL
  7835  00721A  0101               	movlb	1	; () banked
  7836  00721C  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  7837  00721E  0E00               	movlw	0
  7838  007220  0101               	movlb	1	; () banked
  7839  007222  6F05               	movwf	(memcpy@n+1)& (0+255),b
  7840  007224  0E03               	movlw	3
  7841  007226  6F04               	movwf	memcpy@n& (0+255),b
  7842  007228  EC94  F059         	call	_memcpy	;wreg free
  7843                           
  7844                           ;main.c: 595: m_var.unit = 7;
  7845  00722C  0E07               	movlw	7
  7846  00722E  0101               	movlb	1	; () banked
  7847  007230  6FE4               	movwf	(_m_var+6)& (0+255),b
  7848                           
  7849                           ; BSR set to: 1
  7850                           ;main.c: 596: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  7851  007232  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  7852  007236  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  7853  00723A  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  7854  00723E  EC53  F049         	call	_floor	;wreg free
  7855  007242  C12D  F148         	movff	?_floor,_send_periodic_update$6064
  7856  007246  C12E  F149         	movff	?_floor+1,_send_periodic_update$6064+1
  7857  00724A  C12F  F14A         	movff	?_floor+2,_send_periodic_update$6064+2
  7858                           
  7859                           ;main.c: 596: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  7860  00724E  C148  F114         	movff	_send_periodic_update$6064,___fttol@f1
  7861  007252  C149  F115         	movff	_send_periodic_update$6064+1,___fttol@f1+1
  7862  007256  C14A  F116         	movff	_send_periodic_update$6064+2,___fttol@f1+2
  7863  00725A  EC2D  F041         	call	___fttol	;wreg free
  7864  00725E  0101               	movlb	1	; () banked
  7865  007260  5114               	movf	?___fttol& (0+255),w,b
  7866  007262  0101               	movlb	1	; () banked
  7867  007264  6FE2               	movwf	(_m_var+4)& (0+255),b
  7868                           
  7869                           ; BSR set to: 1
  7870                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7871  007266  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  7872  00726A  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  7873  00726E  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  7874  007272  EC53  F049         	call	_floor	;wreg free
  7875  007276  C12D  F135         	movff	?_floor,___ftneg@f1
  7876  00727A  C12E  F136         	movff	?_floor+1,___ftneg@f1+1
  7877  00727E  C12F  F137         	movff	?_floor+2,___ftneg@f1+2
  7878  007282  ECD3  F05C         	call	___ftneg	;wreg free
  7879  007286  C135  F14B         	movff	?___ftneg,_send_periodic_update$6065
  7880  00728A  C136  F14C         	movff	?___ftneg+1,_send_periodic_update$6065+1
  7881  00728E  C137  F14D         	movff	?___ftneg+2,_send_periodic_update$6065+2
  7882                           
  7883                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7884  007292  0E00               	movlw	0
  7885  007294  0101               	movlb	1	; () banked
  7886  007296  6F3B               	movwf	___ftmul@f2& (0+255),b
  7887  007298  0EC8               	movlw	200
  7888  00729A  0101               	movlb	1	; () banked
  7889  00729C  6F3C               	movwf	(___ftmul@f2+1)& (0+255),b
  7890  00729E  0E42               	movlw	66
  7891  0072A0  0101               	movlb	1	; () banked
  7892  0072A2  6F3D               	movwf	(___ftmul@f2+2)& (0+255),b
  7893  0072A4  C1B0  F10B         	movff	_m_uptime_days,___ftadd@f2	;volatile
  7894  0072A8  C1B1  F10C         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  7895  0072AC  C1B2  F10D         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  7896  0072B0  C14B  F108         	movff	_send_periodic_update$6065,___ftadd@f1
  7897  0072B4  C14C  F109         	movff	_send_periodic_update$6065+1,___ftadd@f1+1
  7898  0072B8  C14D  F10A         	movff	_send_periodic_update$6065+2,___ftadd@f1+2
  7899  0072BC  EC6E  F034         	call	___ftadd	;wreg free
  7900  0072C0  C108  F138         	movff	?___ftadd,___ftmul@f1
  7901  0072C4  C109  F139         	movff	?___ftadd+1,___ftmul@f1+1
  7902  0072C8  C10A  F13A         	movff	?___ftadd+2,___ftmul@f1+2
  7903  0072CC  EC89  F03E         	call	___ftmul	;wreg free
  7904  0072D0  C138  F14E         	movff	?___ftmul,_send_periodic_update$6066
  7905  0072D4  C139  F14F         	movff	?___ftmul+1,_send_periodic_update$6066+1
  7906  0072D8  C13A  F150         	movff	?___ftmul+2,_send_periodic_update$6066+2
  7907                           
  7908                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7909  0072DC  C14E  F12D         	movff	_send_periodic_update$6066,floor@x
  7910  0072E0  C14F  F12E         	movff	_send_periodic_update$6066+1,floor@x+1
  7911  0072E4  C150  F12F         	movff	_send_periodic_update$6066+2,floor@x+2
  7912  0072E8  EC53  F049         	call	_floor	;wreg free
  7913  0072EC  C12D  F151         	movff	?_floor,_send_periodic_update$6067
  7914  0072F0  C12E  F152         	movff	?_floor+1,_send_periodic_update$6067+1
  7915  0072F4  C12F  F153         	movff	?_floor+2,_send_periodic_update$6067+2
  7916                           
  7917                           ;main.c: 597: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7918  0072F8  C151  F114         	movff	_send_periodic_update$6067,___fttol@f1
  7919  0072FC  C152  F115         	movff	_send_periodic_update$6067+1,___fttol@f1+1
  7920  007300  C153  F116         	movff	_send_periodic_update$6067+2,___fttol@f1+2
  7921  007304  EC2D  F041         	call	___fttol	;wreg free
  7922  007308  0101               	movlb	1	; () banked
  7923  00730A  5114               	movf	?___fttol& (0+255),w,b
  7924  00730C  0101               	movlb	1	; () banked
  7925  00730E  6FE3               	movwf	(_m_var+5)& (0+255),b
  7926                           
  7927                           ; BSR set to: 1
  7928                           ;main.c: 598: m_var.writable = 0;
  7929  007310  0E00               	movlw	0
  7930  007312  0101               	movlb	1	; () banked
  7931  007314  6FE5               	movwf	(_m_var+7)& (0+255),b
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;main.c: 599: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  7935  007316  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  7936  00731A  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  7937  00731E  EE21  F0DE         	lfsr	2,_m_var
  7938  007322  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  7939  007326  0E09               	movlw	9
  7940  007328                     u23971:
  7941  007328  CFDB FFEB          	movff	plusw2,plusw0
  7942  00732C  06E8               	decf	wreg,f,c
  7943  00732E  E2FC               	bc	u23971
  7944  007330  ECFE  F050         	call	_encode_ufixed16_variable	;wreg free
  7945  007334  0101               	movlb	1	; () banked
  7946  007336  6F47               	movwf	??_send_periodic_update& (0+255),b
  7947  007338  0101               	movlb	1	; () banked
  7948  00733A  5147               	movf	??_send_periodic_update& (0+255),w,b
  7949  00733C  0D01               	mullw	1
  7950  00733E  50F3               	movf	prodl,w,c
  7951  007340  0101               	movlb	1	; () banked
  7952  007342  27B9               	addwf	_p_buffer& (0+255),f,b
  7953  007344  50F4               	movf	prodh,w,c
  7954  007346  0101               	movlb	1	; () banked
  7955  007348  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;main.c: 601: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  7959  00734A  0ED1               	movlw	low _m_buffer
  7960  00734C  0101               	movlb	1	; () banked
  7961  00734E  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  7962  007350  0E02               	movlw	high _m_buffer
  7963  007352  0101               	movlb	1	; () banked
  7964  007354  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  7965  007356  0ED1               	movlw	_m_buffer& (0+255)
  7966  007358  0800               	sublw	0
  7967  00735A  0101               	movlb	1	; () banked
  7968  00735C  25B9               	addwf	_p_buffer& (0+255),w,b
  7969  00735E  0101               	movlb	1	; () banked
  7970  007360  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  7971  007362  EC7D  F055         	call	_sendHIDBinary	;wreg free
  7972                           
  7973                           ;main.c: 602: _delay((unsigned long)((20)*(16000000/4000.0)));
  7974  007366  0E68               	movlw	104
  7975  007368  0101               	movlb	1	; () banked
  7976  00736A  6F47               	movwf	??_send_periodic_update& (0+255),b
  7977  00736C  0EE4               	movlw	228
  7978  00736E                     u25247:
  7979  00736E  2EE8               	decfsz	wreg,f,c
  7980  007370  D7FE               	goto	u25247
  7981  007372  2F47               	decfsz	??_send_periodic_update& (0+255),f,b
  7982  007374  D7FC               	goto	u25247
  7983  007376  D000               	nop2	
  7984  007378  0012               	return		;funcret
  7985  00737A                     __end_of_send_periodic_update:
  7986                           	opt stack 0
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           prodh	equ	0xFF4
  7992                           prodl	equ	0xFF3
  7993                           postinc0	equ	0xFEE
  7994                           plusw0	equ	0xFEB
  7995                           wreg	equ	0xFE8
  7996                           postdec1	equ	0xFE5
  7997                           fsr1h	equ	0xFE2
  7998                           fsr1l	equ	0xFE1
  7999                           indf2	equ	0xFDF
  8000                           postinc2	equ	0xFDE
  8001                           postdec2	equ	0xFDD
  8002                           plusw2	equ	0xFDB
  8003                           fsr2h	equ	0xFDA
  8004                           fsr2l	equ	0xFD9
  8005                           status	equ	0xFD8
  8006                           
  8007 ;; *************** function _send_network_register *****************
  8008 ;; Defined at:
  8009 ;;		line 468 in file "src/main.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;		None
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;		None               void
  8016 ;; Registers used:
  8017 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8027 ;;Total ram usage:        0 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:   18
  8030 ;; This function calls:
  8031 ;;		_memcpy
  8032 ;;		_sendHIDBinary
  8033 ;; This function is called by:
  8034 ;;		_main
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text13
  8039  00A710                     __ptext13:
  8040                           	opt stack 0
  8041  00A710                     _send_network_register:
  8042                           	opt stack 12
  8043                           
  8044                           ;main.c: 471: p_buffer = &m_buffer[0];
  8045                           
  8046                           ;incstack = 0
  8047  00A710  0ED1               	movlw	low _m_buffer
  8048  00A712  0101               	movlb	1	; () banked
  8049  00A714  6FB9               	movwf	_p_buffer& (0+255),b
  8050  00A716  0E02               	movlw	high _m_buffer
  8051  00A718  0101               	movlb	1	; () banked
  8052  00A71A  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;main.c: 472: *(p_buffer++) = 0x4d;
  8056  00A71C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8057  00A720  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8058  00A724  0E4D               	movlw	77
  8059  00A726  6EDF               	movwf	indf2,c
  8060                           
  8061                           ; BSR set to: 1
  8062  00A728  0101               	movlb	1	; () banked
  8063  00A72A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8064  00A72C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8065                           
  8066                           ; BSR set to: 1
  8067                           ;main.c: 473: *(p_buffer++) = 0x00;
  8068  00A72E  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8069  00A732  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8070  00A736  0E00               	movlw	0
  8071  00A738  6EDF               	movwf	indf2,c
  8072                           
  8073                           ; BSR set to: 1
  8074  00A73A  0101               	movlb	1	; () banked
  8075  00A73C  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8076  00A73E  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;main.c: 474: *(p_buffer++) = 0x00;
  8080  00A740  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8081  00A744  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8082  00A748  0E00               	movlw	0
  8083  00A74A  6EDF               	movwf	indf2,c
  8084                           
  8085                           ; BSR set to: 1
  8086  00A74C  0101               	movlb	1	; () banked
  8087  00A74E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8088  00A750  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8089                           
  8090                           ; BSR set to: 1
  8091                           ;main.c: 476: *(p_buffer++) = 02;
  8092  00A752  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8093  00A756  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8094  00A75A  0E02               	movlw	2
  8095  00A75C  6EDF               	movwf	indf2,c
  8096                           
  8097                           ; BSR set to: 1
  8098  00A75E  0101               	movlb	1	; () banked
  8099  00A760  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8100  00A762  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;main.c: 477: memcpy(p_buffer, &myLongAddress[0], 4);
  8104  00A764  C1B9  F100         	movff	_p_buffer,memcpy@d1
  8105  00A768  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  8106  00A76C  0EE8               	movlw	low _myLongAddress
  8107  00A76E  0101               	movlb	1	; () banked
  8108  00A770  6F02               	movwf	memcpy@s1& (0+255),b
  8109  00A772  0E01               	movlw	high _myLongAddress
  8110  00A774  0101               	movlb	1	; () banked
  8111  00A776  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8112  00A778  0E00               	movlw	0
  8113  00A77A  0101               	movlb	1	; () banked
  8114  00A77C  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8115  00A77E  0E04               	movlw	4
  8116  00A780  6F04               	movwf	memcpy@n& (0+255),b
  8117  00A782  EC94  F059         	call	_memcpy	;wreg free
  8118                           
  8119                           ;main.c: 478: p_buffer += 4;
  8120  00A786  0E04               	movlw	4
  8121  00A788  0101               	movlb	1	; () banked
  8122  00A78A  27B9               	addwf	_p_buffer& (0+255),f,b
  8123  00A78C  0E00               	movlw	0
  8124  00A78E  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;main.c: 482: *(p_buffer++) = 0xf0;
  8128  00A790  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8129  00A794  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8130  00A798  0EF0               	movlw	240
  8131  00A79A  6EDF               	movwf	indf2,c
  8132                           
  8133                           ; BSR set to: 1
  8134  00A79C  0101               	movlb	1	; () banked
  8135  00A79E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8136  00A7A0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;main.c: 485: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  8140  00A7A2  0ED1               	movlw	low _m_buffer
  8141  00A7A4  0101               	movlb	1	; () banked
  8142  00A7A6  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8143  00A7A8  0E02               	movlw	high _m_buffer
  8144  00A7AA  0101               	movlb	1	; () banked
  8145  00A7AC  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8146  00A7AE  0ED1               	movlw	_m_buffer& (0+255)
  8147  00A7B0  0800               	sublw	0
  8148  00A7B2  0101               	movlb	1	; () banked
  8149  00A7B4  25B9               	addwf	_p_buffer& (0+255),w,b
  8150  00A7B6  0101               	movlb	1	; () banked
  8151  00A7B8  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8152  00A7BA  EC7D  F055         	call	_sendHIDBinary	;wreg free
  8153  00A7BE  0012               	return		;funcret
  8154  00A7C0                     __end_of_send_network_register:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           postinc0	equ	0xFEE
  8163                           plusw0	equ	0xFEB
  8164                           wreg	equ	0xFE8
  8165                           postdec1	equ	0xFE5
  8166                           fsr1h	equ	0xFE2
  8167                           fsr1l	equ	0xFE1
  8168                           indf2	equ	0xFDF
  8169                           postinc2	equ	0xFDE
  8170                           postdec2	equ	0xFDD
  8171                           plusw2	equ	0xFDB
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176 ;; *************** function _send_complete_update *****************
  8177 ;; Defined at:
  8178 ;;		line 491 in file "src/main.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  tmp             1    0        unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;		None               void
  8185 ;; Registers used:
  8186 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;Total ram usage:       13 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:   19
  8199 ;; This function calls:
  8200 ;;		___ftadd
  8201 ;;		___ftmul
  8202 ;;		___ftneg
  8203 ;;		___fttol
  8204 ;;		_dBm_to_mW_ufixed16
  8205 ;;		_encode_ufixed16_variable
  8206 ;;		_encode_uint8_variable
  8207 ;;		_floor
  8208 ;;		_memcpy
  8209 ;;		_sendHIDBinary
  8210 ;; This function is called by:
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text14
  8216  006226                     __ptext14:
  8217                           	opt stack 0
  8218  006226                     _send_complete_update:
  8219                           	opt stack 11
  8220                           
  8221                           ;main.c: 493: uint8_t tmp;
  8222                           ;main.c: 494: p_buffer = m_buffer;
  8223                           
  8224                           ;incstack = 0
  8225  006226  0ED1               	movlw	low _m_buffer
  8226  006228  0101               	movlb	1	; () banked
  8227  00622A  6FB9               	movwf	_p_buffer& (0+255),b
  8228  00622C  0E02               	movlw	high _m_buffer
  8229  00622E  0101               	movlb	1	; () banked
  8230  006230  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8231                           
  8232                           ; BSR set to: 1
  8233                           ;main.c: 495: *(p_buffer++) = 0x4d;
  8234  006232  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8235  006236  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8236  00623A  0E4D               	movlw	77
  8237  00623C  6EDF               	movwf	indf2,c
  8238                           
  8239                           ; BSR set to: 1
  8240  00623E  0101               	movlb	1	; () banked
  8241  006240  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8242  006242  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8243                           
  8244                           ; BSR set to: 1
  8245                           ;main.c: 496: *(p_buffer++) = 0x00;
  8246  006244  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8247  006248  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8248  00624C  0E00               	movlw	0
  8249  00624E  6EDF               	movwf	indf2,c
  8250                           
  8251                           ; BSR set to: 1
  8252  006250  0101               	movlb	1	; () banked
  8253  006252  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8254  006254  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 1
  8257                           ;main.c: 497: *(p_buffer++) = 0x00;
  8258  006256  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8259  00625A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8260  00625E  0E00               	movlw	0
  8261  006260  6EDF               	movwf	indf2,c
  8262                           
  8263                           ; BSR set to: 1
  8264  006262  0101               	movlb	1	; () banked
  8265  006264  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8266  006266  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8267                           
  8268                           ; BSR set to: 1
  8269                           ;main.c: 498: *(p_buffer++) = 04;
  8270  006268  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8271  00626C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8272  006270  0E04               	movlw	4
  8273  006272  6EDF               	movwf	indf2,c
  8274                           
  8275                           ; BSR set to: 1
  8276  006274  0101               	movlb	1	; () banked
  8277  006276  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8278  006278  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8279                           
  8280                           ; BSR set to: 1
  8281                           ;main.c: 499: *(p_buffer++) = 0xf0;
  8282  00627A  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8283  00627E  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8284  006282  0EF0               	movlw	240
  8285  006284  6EDF               	movwf	indf2,c
  8286                           
  8287                           ; BSR set to: 1
  8288  006286  0101               	movlb	1	; () banked
  8289  006288  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8290  00628A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8291                           
  8292                           ; BSR set to: 1
  8293                           ;main.c: 501: memcpy(m_var.label, POWER_LABEL, 3);
  8294  00628C  0EDE               	movlw	low _m_var
  8295  00628E  0101               	movlb	1	; () banked
  8296  006290  6F00               	movwf	memcpy@d1& (0+255),b
  8297  006292  0E01               	movlw	high _m_var
  8298  006294  0101               	movlb	1	; () banked
  8299  006296  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8300  006298  0EC1               	movlw	low _POWER_LABEL
  8301  00629A  0101               	movlb	1	; () banked
  8302  00629C  6F02               	movwf	memcpy@s1& (0+255),b
  8303  00629E  0E21               	movlw	high _POWER_LABEL
  8304  0062A0  0101               	movlb	1	; () banked
  8305  0062A2  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8306  0062A4  0E00               	movlw	0
  8307  0062A6  0101               	movlb	1	; () banked
  8308  0062A8  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8309  0062AA  0E03               	movlw	3
  8310  0062AC  6F04               	movwf	memcpy@n& (0+255),b
  8311  0062AE  EC94  F059         	call	_memcpy	;wreg free
  8312                           
  8313                           ;main.c: 502: m_var.unit = 8;
  8314  0062B2  0E08               	movlw	8
  8315  0062B4  0101               	movlb	1	; () banked
  8316  0062B6  6FE4               	movwf	(_m_var+6)& (0+255),b
  8317                           
  8318                           ; BSR set to: 1
  8319                           ;main.c: 503: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  8320  0062B8  0EE2               	movlw	low (_m_var+4)
  8321  0062BA  0101               	movlb	1	; () banked
  8322  0062BC  6F00               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  8323  0062BE  0E01               	movlw	high (_m_var+4)
  8324  0062C0  0101               	movlb	1	; () banked
  8325  0062C2  6F01               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  8326  0062C4  0EE3               	movlw	low (_m_var+5)
  8327  0062C6  0101               	movlb	1	; () banked
  8328  0062C8  6F02               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  8329  0062CA  0E01               	movlw	high (_m_var+5)
  8330  0062CC  0101               	movlb	1	; () banked
  8331  0062CE  6F03               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  8332  0062D0  0101               	movlb	1	; () banked
  8333  0062D2  51C8               	movf	_m_power& (0+255),w,b
  8334  0062D4  EC81  F045         	call	_dBm_to_mW_ufixed16
  8335                           
  8336                           ;main.c: 504: m_var.writable = 1;
  8337  0062D8  0E01               	movlw	1
  8338  0062DA  0101               	movlb	1	; () banked
  8339  0062DC  6FE5               	movwf	(_m_var+7)& (0+255),b
  8340                           
  8341                           ; BSR set to: 1
  8342                           ;main.c: 505: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  8343  0062DE  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  8344  0062E2  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  8345  0062E6  EE21  F0DE         	lfsr	2,_m_var
  8346  0062EA  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  8347  0062EE  0E09               	movlw	9
  8348  0062F0                     u23761:
  8349  0062F0  CFDB FFEB          	movff	plusw2,plusw0
  8350  0062F4  06E8               	decf	wreg,f,c
  8351  0062F6  E2FC               	bc	u23761
  8352  0062F8  ECFE  F050         	call	_encode_ufixed16_variable	;wreg free
  8353  0062FC  0101               	movlb	1	; () banked
  8354  0062FE  6F47               	movwf	??_send_complete_update& (0+255),b
  8355  006300  0101               	movlb	1	; () banked
  8356  006302  5147               	movf	??_send_complete_update& (0+255),w,b
  8357  006304  0D01               	mullw	1
  8358  006306  50F3               	movf	prodl,w,c
  8359  006308  0101               	movlb	1	; () banked
  8360  00630A  27B9               	addwf	_p_buffer& (0+255),f,b
  8361  00630C  50F4               	movf	prodh,w,c
  8362  00630E  0101               	movlb	1	; () banked
  8363  006310  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8364                           
  8365                           ; BSR set to: 1
  8366                           ;main.c: 506: memcpy(m_var.label, CHANNEL_LABEL, 3);
  8367  006312  0EDE               	movlw	low _m_var
  8368  006314  0101               	movlb	1	; () banked
  8369  006316  6F00               	movwf	memcpy@d1& (0+255),b
  8370  006318  0E01               	movlw	high _m_var
  8371  00631A  0101               	movlb	1	; () banked
  8372  00631C  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8373  00631E  0EB9               	movlw	low _CHANNEL_LABEL
  8374  006320  0101               	movlb	1	; () banked
  8375  006322  6F02               	movwf	memcpy@s1& (0+255),b
  8376  006324  0E21               	movlw	high _CHANNEL_LABEL
  8377  006326  0101               	movlb	1	; () banked
  8378  006328  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8379  00632A  0E00               	movlw	0
  8380  00632C  0101               	movlb	1	; () banked
  8381  00632E  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8382  006330  0E03               	movlw	3
  8383  006332  6F04               	movwf	memcpy@n& (0+255),b
  8384  006334  EC94  F059         	call	_memcpy	;wreg free
  8385                           
  8386                           ;main.c: 507: m_var.unit = 0;
  8387  006338  0E00               	movlw	0
  8388  00633A  0101               	movlb	1	; () banked
  8389  00633C  6FE4               	movwf	(_m_var+6)& (0+255),b
  8390                           
  8391                           ; BSR set to: 1
  8392                           ;main.c: 508: m_var.value_byte1 = BestChannel;
  8393  00633E  C1BE  F1E2         	movff	_BestChannel,_m_var+4
  8394                           
  8395                           ; BSR set to: 1
  8396                           ;main.c: 509: m_var.writable = 0;
  8397  006342  0E00               	movlw	0
  8398  006344  0101               	movlb	1	; () banked
  8399  006346  6FE5               	movwf	(_m_var+7)& (0+255),b
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;main.c: 510: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8403  006348  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8404  00634C  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8405  006350  EE21  F0DE         	lfsr	2,_m_var
  8406  006354  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8407  006358  0E09               	movlw	9
  8408  00635A                     u23771:
  8409  00635A  CFDB FFEB          	movff	plusw2,plusw0
  8410  00635E  06E8               	decf	wreg,f,c
  8411  006360  E2FC               	bc	u23771
  8412  006362  EC8C  F054         	call	_encode_uint8_variable	;wreg free
  8413  006366  0101               	movlb	1	; () banked
  8414  006368  6F47               	movwf	??_send_complete_update& (0+255),b
  8415  00636A  0101               	movlb	1	; () banked
  8416  00636C  5147               	movf	??_send_complete_update& (0+255),w,b
  8417  00636E  0D01               	mullw	1
  8418  006370  50F3               	movf	prodl,w,c
  8419  006372  0101               	movlb	1	; () banked
  8420  006374  27B9               	addwf	_p_buffer& (0+255),f,b
  8421  006376  50F4               	movf	prodh,w,c
  8422  006378  0101               	movlb	1	; () banked
  8423  00637A  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 1
  8426                           ;main.c: 511: memcpy(m_var.label, NOISE_LABEL, 3);
  8427  00637C  0EDE               	movlw	low _m_var
  8428  00637E  0101               	movlb	1	; () banked
  8429  006380  6F00               	movwf	memcpy@d1& (0+255),b
  8430  006382  0E01               	movlw	high _m_var
  8431  006384  0101               	movlb	1	; () banked
  8432  006386  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8433  006388  0EBD               	movlw	low _NOISE_LABEL
  8434  00638A  0101               	movlb	1	; () banked
  8435  00638C  6F02               	movwf	memcpy@s1& (0+255),b
  8436  00638E  0E21               	movlw	high _NOISE_LABEL
  8437  006390  0101               	movlb	1	; () banked
  8438  006392  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8439  006394  0E00               	movlw	0
  8440  006396  0101               	movlb	1	; () banked
  8441  006398  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8442  00639A  0E03               	movlw	3
  8443  00639C  6F04               	movwf	memcpy@n& (0+255),b
  8444  00639E  EC94  F059         	call	_memcpy	;wreg free
  8445                           
  8446                           ;main.c: 512: m_var.unit = 0;
  8447  0063A2  0E00               	movlw	0
  8448  0063A4  0101               	movlb	1	; () banked
  8449  0063A6  6FE4               	movwf	(_m_var+6)& (0+255),b
  8450                           
  8451                           ; BSR set to: 1
  8452                           ;main.c: 513: m_var.value_byte1 = noise_level;
  8453  0063A8  C1F7  F1E2         	movff	_noise_level,_m_var+4
  8454                           
  8455                           ; BSR set to: 1
  8456                           ;main.c: 514: m_var.writable = 0;
  8457  0063AC  0E00               	movlw	0
  8458  0063AE  0101               	movlb	1	; () banked
  8459  0063B0  6FE5               	movwf	(_m_var+7)& (0+255),b
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;main.c: 515: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8463  0063B2  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8464  0063B6  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8465  0063BA  EE21  F0DE         	lfsr	2,_m_var
  8466  0063BE  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8467  0063C2  0E09               	movlw	9
  8468  0063C4                     u23781:
  8469  0063C4  CFDB FFEB          	movff	plusw2,plusw0
  8470  0063C8  06E8               	decf	wreg,f,c
  8471  0063CA  E2FC               	bc	u23781
  8472  0063CC  EC8C  F054         	call	_encode_uint8_variable	;wreg free
  8473  0063D0  0101               	movlb	1	; () banked
  8474  0063D2  6F47               	movwf	??_send_complete_update& (0+255),b
  8475  0063D4  0101               	movlb	1	; () banked
  8476  0063D6  5147               	movf	??_send_complete_update& (0+255),w,b
  8477  0063D8  0D01               	mullw	1
  8478  0063DA  50F3               	movf	prodl,w,c
  8479  0063DC  0101               	movlb	1	; () banked
  8480  0063DE  27B9               	addwf	_p_buffer& (0+255),f,b
  8481  0063E0  50F4               	movf	prodh,w,c
  8482  0063E2  0101               	movlb	1	; () banked
  8483  0063E4  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;main.c: 517: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8487  0063E6  0ED1               	movlw	low _m_buffer
  8488  0063E8  0101               	movlb	1	; () banked
  8489  0063EA  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8490  0063EC  0E02               	movlw	high _m_buffer
  8491  0063EE  0101               	movlb	1	; () banked
  8492  0063F0  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8493  0063F2  0ED1               	movlw	_m_buffer& (0+255)
  8494  0063F4  0800               	sublw	0
  8495  0063F6  0101               	movlb	1	; () banked
  8496  0063F8  25B9               	addwf	_p_buffer& (0+255),w,b
  8497  0063FA  0101               	movlb	1	; () banked
  8498  0063FC  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8499  0063FE  EC7D  F055         	call	_sendHIDBinary	;wreg free
  8500                           
  8501                           ;main.c: 518: _delay((unsigned long)((20)*(16000000/4000.0)));
  8502  006402  0E68               	movlw	104
  8503  006404  0101               	movlb	1	; () banked
  8504  006406  6F47               	movwf	??_send_complete_update& (0+255),b
  8505  006408  0EE4               	movlw	228
  8506  00640A                     u25257:
  8507  00640A  2EE8               	decfsz	wreg,f,c
  8508  00640C  D7FE               	goto	u25257
  8509  00640E  2F47               	decfsz	??_send_complete_update& (0+255),f,b
  8510  006410  D7FC               	goto	u25257
  8511  006412  D000               	nop2	
  8512                           
  8513                           ;main.c: 520: p_buffer = m_buffer;
  8514  006414  0ED1               	movlw	low _m_buffer
  8515  006416  0101               	movlb	1	; () banked
  8516  006418  6FB9               	movwf	_p_buffer& (0+255),b
  8517  00641A  0E02               	movlw	high _m_buffer
  8518  00641C  0101               	movlb	1	; () banked
  8519  00641E  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;main.c: 521: *(p_buffer++) = 0x4d;
  8523  006420  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8524  006424  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8525  006428  0E4D               	movlw	77
  8526  00642A  6EDF               	movwf	indf2,c
  8527                           
  8528                           ; BSR set to: 1
  8529  00642C  0101               	movlb	1	; () banked
  8530  00642E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8531  006430  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8532                           
  8533                           ; BSR set to: 1
  8534                           ;main.c: 522: *(p_buffer++) = 0x00;
  8535  006432  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8536  006436  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8537  00643A  0E00               	movlw	0
  8538  00643C  6EDF               	movwf	indf2,c
  8539                           
  8540                           ; BSR set to: 1
  8541  00643E  0101               	movlb	1	; () banked
  8542  006440  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8543  006442  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8544                           
  8545                           ; BSR set to: 1
  8546                           ;main.c: 523: *(p_buffer++) = 0x00;
  8547  006444  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8548  006448  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8549  00644C  0E00               	movlw	0
  8550  00644E  6EDF               	movwf	indf2,c
  8551                           
  8552                           ; BSR set to: 1
  8553  006450  0101               	movlb	1	; () banked
  8554  006452  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8555  006454  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8556                           
  8557                           ; BSR set to: 1
  8558                           ;main.c: 524: *(p_buffer++) = 04;
  8559  006456  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8560  00645A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8561  00645E  0E04               	movlw	4
  8562  006460  6EDF               	movwf	indf2,c
  8563                           
  8564                           ; BSR set to: 1
  8565  006462  0101               	movlb	1	; () banked
  8566  006464  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8567  006466  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;main.c: 525: *(p_buffer++) = 0xff;
  8571  006468  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8572  00646C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8573  006470  0EFF               	movlw	255
  8574  006472  6EDF               	movwf	indf2,c
  8575                           
  8576                           ; BSR set to: 1
  8577  006474  0101               	movlb	1	; () banked
  8578  006476  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8579  006478  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;main.c: 528: memcpy(m_var.label, UPTIME_LABEL, 3);
  8583  00647A  0EDE               	movlw	low _m_var
  8584  00647C  0101               	movlb	1	; () banked
  8585  00647E  6F00               	movwf	memcpy@d1& (0+255),b
  8586  006480  0E01               	movlw	high _m_var
  8587  006482  0101               	movlb	1	; () banked
  8588  006484  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8589  006486  0ECD               	movlw	low _UPTIME_LABEL
  8590  006488  0101               	movlb	1	; () banked
  8591  00648A  6F02               	movwf	memcpy@s1& (0+255),b
  8592  00648C  0E21               	movlw	high _UPTIME_LABEL
  8593  00648E  0101               	movlb	1	; () banked
  8594  006490  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8595  006492  0E00               	movlw	0
  8596  006494  0101               	movlb	1	; () banked
  8597  006496  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8598  006498  0E03               	movlw	3
  8599  00649A  6F04               	movwf	memcpy@n& (0+255),b
  8600  00649C  EC94  F059         	call	_memcpy	;wreg free
  8601                           
  8602                           ;main.c: 529: m_var.unit = 7;
  8603  0064A0  0E07               	movlw	7
  8604  0064A2  0101               	movlb	1	; () banked
  8605  0064A4  6FE4               	movwf	(_m_var+6)& (0+255),b
  8606                           
  8607                           ; BSR set to: 1
  8608                           ;main.c: 530: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  8609  0064A6  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  8610  0064AA  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  8611  0064AE  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  8612  0064B2  EC53  F049         	call	_floor	;wreg free
  8613  0064B6  C12D  F148         	movff	?_floor,_send_complete_update$6060
  8614  0064BA  C12E  F149         	movff	?_floor+1,_send_complete_update$6060+1
  8615  0064BE  C12F  F14A         	movff	?_floor+2,_send_complete_update$6060+2
  8616                           
  8617                           ;main.c: 530: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  8618  0064C2  C148  F114         	movff	_send_complete_update$6060,___fttol@f1
  8619  0064C6  C149  F115         	movff	_send_complete_update$6060+1,___fttol@f1+1
  8620  0064CA  C14A  F116         	movff	_send_complete_update$6060+2,___fttol@f1+2
  8621  0064CE  EC2D  F041         	call	___fttol	;wreg free
  8622  0064D2  0101               	movlb	1	; () banked
  8623  0064D4  5114               	movf	?___fttol& (0+255),w,b
  8624  0064D6  0101               	movlb	1	; () banked
  8625  0064D8  6FE2               	movwf	(_m_var+4)& (0+255),b
  8626                           
  8627                           ; BSR set to: 1
  8628                           ;main.c: 531: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8629  0064DA  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  8630  0064DE  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  8631  0064E2  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  8632  0064E6  EC53  F049         	call	_floor	;wreg free
  8633  0064EA  C12D  F135         	movff	?_floor,___ftneg@f1
  8634  0064EE  C12E  F136         	movff	?_floor+1,___ftneg@f1+1
  8635  0064F2  C12F  F137         	movff	?_floor+2,___ftneg@f1+2
  8636  0064F6  ECD3  F05C         	call	___ftneg	;wreg free
  8637  0064FA  C135  F14B         	movff	?___ftneg,_send_complete_update$6061
  8638  0064FE  C136  F14C         	movff	?___ftneg+1,_send_complete_update$6061+1
  8639  006502  C137  F14D         	movff	?___ftneg+2,_send_complete_update$6061+2
  8640                           
  8641                           ;main.c: 531: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8642  006506  0E00               	movlw	0
  8643  006508  0101               	movlb	1	; () banked
  8644  00650A  6F3B               	movwf	___ftmul@f2& (0+255),b
  8645  00650C  0EC8               	movlw	200
  8646  00650E  0101               	movlb	1	; () banked
  8647  006510  6F3C               	movwf	(___ftmul@f2+1)& (0+255),b
  8648  006512  0E42               	movlw	66
  8649  006514  0101               	movlb	1	; () banked
  8650  006516  6F3D               	movwf	(___ftmul@f2+2)& (0+255),b
  8651  006518  C1B0  F10B         	movff	_m_uptime_days,___ftadd@f2	;volatile
  8652  00651C  C1B1  F10C         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  8653  006520  C1B2  F10D         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  8654  006524  C14B  F108         	movff	_send_complete_update$6061,___ftadd@f1
  8655  006528  C14C  F109         	movff	_send_complete_update$6061+1,___ftadd@f1+1
  8656  00652C  C14D  F10A         	movff	_send_complete_update$6061+2,___ftadd@f1+2
  8657  006530  EC6E  F034         	call	___ftadd	;wreg free
  8658  006534  C108  F138         	movff	?___ftadd,___ftmul@f1
  8659  006538  C109  F139         	movff	?___ftadd+1,___ftmul@f1+1
  8660  00653C  C10A  F13A         	movff	?___ftadd+2,___ftmul@f1+2
  8661  006540  EC89  F03E         	call	___ftmul	;wreg free
  8662  006544  C138  F14E         	movff	?___ftmul,_send_complete_update$6062
  8663  006548  C139  F14F         	movff	?___ftmul+1,_send_complete_update$6062+1
  8664  00654C  C13A  F150         	movff	?___ftmul+2,_send_complete_update$6062+2
  8665                           
  8666                           ;main.c: 531: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8667  006550  C14E  F12D         	movff	_send_complete_update$6062,floor@x
  8668  006554  C14F  F12E         	movff	_send_complete_update$6062+1,floor@x+1
  8669  006558  C150  F12F         	movff	_send_complete_update$6062+2,floor@x+2
  8670  00655C  EC53  F049         	call	_floor	;wreg free
  8671  006560  C12D  F151         	movff	?_floor,_send_complete_update$6063
  8672  006564  C12E  F152         	movff	?_floor+1,_send_complete_update$6063+1
  8673  006568  C12F  F153         	movff	?_floor+2,_send_complete_update$6063+2
  8674                           
  8675                           ;main.c: 531: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8676  00656C  C151  F114         	movff	_send_complete_update$6063,___fttol@f1
  8677  006570  C152  F115         	movff	_send_complete_update$6063+1,___fttol@f1+1
  8678  006574  C153  F116         	movff	_send_complete_update$6063+2,___fttol@f1+2
  8679  006578  EC2D  F041         	call	___fttol	;wreg free
  8680  00657C  0101               	movlb	1	; () banked
  8681  00657E  5114               	movf	?___fttol& (0+255),w,b
  8682  006580  0101               	movlb	1	; () banked
  8683  006582  6FE3               	movwf	(_m_var+5)& (0+255),b
  8684                           
  8685                           ; BSR set to: 1
  8686                           ;main.c: 532: m_var.writable = 0;
  8687  006584  0E00               	movlw	0
  8688  006586  0101               	movlb	1	; () banked
  8689  006588  6FE5               	movwf	(_m_var+7)& (0+255),b
  8690                           
  8691                           ; BSR set to: 1
  8692                           ;main.c: 533: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  8693  00658A  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  8694  00658E  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  8695  006592  EE21  F0DE         	lfsr	2,_m_var
  8696  006596  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  8697  00659A  0E09               	movlw	9
  8698  00659C                     u23791:
  8699  00659C  CFDB FFEB          	movff	plusw2,plusw0
  8700  0065A0  06E8               	decf	wreg,f,c
  8701  0065A2  E2FC               	bc	u23791
  8702  0065A4  ECFE  F050         	call	_encode_ufixed16_variable	;wreg free
  8703  0065A8  0101               	movlb	1	; () banked
  8704  0065AA  6F47               	movwf	??_send_complete_update& (0+255),b
  8705  0065AC  0101               	movlb	1	; () banked
  8706  0065AE  5147               	movf	??_send_complete_update& (0+255),w,b
  8707  0065B0  0D01               	mullw	1
  8708  0065B2  50F3               	movf	prodl,w,c
  8709  0065B4  0101               	movlb	1	; () banked
  8710  0065B6  27B9               	addwf	_p_buffer& (0+255),f,b
  8711  0065B8  50F4               	movf	prodh,w,c
  8712  0065BA  0101               	movlb	1	; () banked
  8713  0065BC  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8714                           
  8715                           ; BSR set to: 1
  8716                           ;main.c: 535: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  8717  0065BE  0EDE               	movlw	low _m_var
  8718  0065C0  0101               	movlb	1	; () banked
  8719  0065C2  6F00               	movwf	memcpy@d1& (0+255),b
  8720  0065C4  0E01               	movlw	high _m_var
  8721  0065C6  0101               	movlb	1	; () banked
  8722  0065C8  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8723  0065CA  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
  8724  0065CC  0101               	movlb	1	; () banked
  8725  0065CE  6F02               	movwf	memcpy@s1& (0+255),b
  8726  0065D0  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  8727  0065D2  0101               	movlb	1	; () banked
  8728  0065D4  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8729  0065D6  0E00               	movlw	0
  8730  0065D8  0101               	movlb	1	; () banked
  8731  0065DA  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8732  0065DC  0E03               	movlw	3
  8733  0065DE  6F04               	movwf	memcpy@n& (0+255),b
  8734  0065E0  EC94  F059         	call	_memcpy	;wreg free
  8735                           
  8736                           ;main.c: 536: m_var.unit = 4;
  8737  0065E4  0E04               	movlw	4
  8738  0065E6  0101               	movlb	1	; () banked
  8739  0065E8  6FE4               	movwf	(_m_var+6)& (0+255),b
  8740                           
  8741                           ; BSR set to: 1
  8742                           ;main.c: 537: m_var.value_byte1 = m_update_frequency;
  8743  0065EA  C1FA  F1E2         	movff	_m_update_frequency,_m_var+4	;volatile
  8744                           
  8745                           ; BSR set to: 1
  8746                           ;main.c: 538: m_var.writable = 1;
  8747  0065EE  0E01               	movlw	1
  8748  0065F0  0101               	movlb	1	; () banked
  8749  0065F2  6FE5               	movwf	(_m_var+7)& (0+255),b
  8750                           
  8751                           ; BSR set to: 1
  8752                           ;main.c: 539: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8753  0065F4  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8754  0065F8  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8755  0065FC  EE21  F0DE         	lfsr	2,_m_var
  8756  006600  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8757  006604  0E09               	movlw	9
  8758  006606                     u23801:
  8759  006606  CFDB FFEB          	movff	plusw2,plusw0
  8760  00660A  06E8               	decf	wreg,f,c
  8761  00660C  E2FC               	bc	u23801
  8762  00660E  EC8C  F054         	call	_encode_uint8_variable	;wreg free
  8763  006612  0101               	movlb	1	; () banked
  8764  006614  6F47               	movwf	??_send_complete_update& (0+255),b
  8765  006616  0101               	movlb	1	; () banked
  8766  006618  5147               	movf	??_send_complete_update& (0+255),w,b
  8767  00661A  0D01               	mullw	1
  8768  00661C  50F3               	movf	prodl,w,c
  8769  00661E  0101               	movlb	1	; () banked
  8770  006620  27B9               	addwf	_p_buffer& (0+255),f,b
  8771  006622  50F4               	movf	prodh,w,c
  8772  006624  0101               	movlb	1	; () banked
  8773  006626  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8774                           
  8775                           ; BSR set to: 1
  8776                           ;main.c: 541: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8777  006628  0ED1               	movlw	low _m_buffer
  8778  00662A  0101               	movlb	1	; () banked
  8779  00662C  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8780  00662E  0E02               	movlw	high _m_buffer
  8781  006630  0101               	movlb	1	; () banked
  8782  006632  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8783  006634  0ED1               	movlw	_m_buffer& (0+255)
  8784  006636  0800               	sublw	0
  8785  006638  0101               	movlb	1	; () banked
  8786  00663A  25B9               	addwf	_p_buffer& (0+255),w,b
  8787  00663C  0101               	movlb	1	; () banked
  8788  00663E  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8789  006640  EC7D  F055         	call	_sendHIDBinary	;wreg free
  8790                           
  8791                           ;main.c: 542: _delay((unsigned long)((20)*(16000000/4000.0)));
  8792  006644  0E68               	movlw	104
  8793  006646  0101               	movlb	1	; () banked
  8794  006648  6F47               	movwf	??_send_complete_update& (0+255),b
  8795  00664A  0EE4               	movlw	228
  8796  00664C                     u25267:
  8797  00664C  2EE8               	decfsz	wreg,f,c
  8798  00664E  D7FE               	goto	u25267
  8799  006650  2F47               	decfsz	??_send_complete_update& (0+255),f,b
  8800  006652  D7FC               	goto	u25267
  8801  006654  D000               	nop2	
  8802  006656  0012               	return		;funcret
  8803  006658                     __end_of_send_complete_update:
  8804                           	opt stack 0
  8805                           tblptru	equ	0xFF8
  8806                           tblptrh	equ	0xFF7
  8807                           tblptrl	equ	0xFF6
  8808                           tablat	equ	0xFF5
  8809                           prodh	equ	0xFF4
  8810                           prodl	equ	0xFF3
  8811                           postinc0	equ	0xFEE
  8812                           plusw0	equ	0xFEB
  8813                           wreg	equ	0xFE8
  8814                           postdec1	equ	0xFE5
  8815                           fsr1h	equ	0xFE2
  8816                           fsr1l	equ	0xFE1
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           plusw2	equ	0xFDB
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function _floor *****************
  8826 ;; Defined at:
  8827 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  x               3   45[BANK1 ] unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  i               3   48[BANK1 ] unsigned char 
  8832 ;;  expon           2   51[BANK1 ] int 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  3   45[BANK1 ] int 
  8835 ;; Registers used:
  8836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8842 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8845 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8846 ;;Total ram usage:        8 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:   18
  8849 ;; This function calls:
  8850 ;;		___altoft
  8851 ;;		___ftadd
  8852 ;;		___ftge
  8853 ;;		___fttol
  8854 ;;		_frexp
  8855 ;; This function is called by:
  8856 ;;		_send_complete_update
  8857 ;;		_send_periodic_update
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text15
  8862  0092A6                     __ptext15:
  8863                           	opt stack 0
  8864  0092A6                     _floor:
  8865                           	opt stack 11
  8866                           
  8867                           ;incstack = 0
  8868  0092A6  C12D  F100         	movff	floor@x,frexp@value
  8869  0092AA  C12E  F101         	movff	floor@x+1,frexp@value+1
  8870  0092AE  C12F  F102         	movff	floor@x+2,frexp@value+2
  8871  0092B2  0E33               	movlw	low floor@expon
  8872  0092B4  0101               	movlb	1	; () banked
  8873  0092B6  6F03               	movwf	frexp@eptr& (0+255),b
  8874  0092B8  0E01               	movlw	high floor@expon
  8875  0092BA  0101               	movlb	1	; () banked
  8876  0092BC  6F04               	movwf	(frexp@eptr+1)& (0+255),b
  8877  0092BE  ECF6  F056         	call	_frexp	;wreg free
  8878  0092C2  0101               	movlb	1	; () banked
  8879  0092C4  AF34               	btfss	(floor@expon+1)& (0+255),7,b
  8880  0092C6  D017               	goto	l19282
  8881                           
  8882                           ; BSR set to: 1
  8883  0092C8  0101               	movlb	1	; () banked
  8884  0092CA  AF2F               	btfss	(floor@x+2)& (0+255),7,b
  8885  0092CC  D00A               	goto	l19278
  8886                           
  8887                           ; BSR set to: 1
  8888  0092CE  0E00               	movlw	0
  8889  0092D0  0101               	movlb	1	; () banked
  8890  0092D2  6F2D               	movwf	?_floor& (0+255),b
  8891  0092D4  0E80               	movlw	128
  8892  0092D6  0101               	movlb	1	; () banked
  8893  0092D8  6F2E               	movwf	(?_floor+1)& (0+255),b
  8894  0092DA  0EBF               	movlw	191
  8895  0092DC  0101               	movlb	1	; () banked
  8896  0092DE  6F2F               	movwf	(?_floor+2)& (0+255),b
  8897                           
  8898                           ; BSR set to: 1
  8899  0092E0  0012               	return	
  8900  0092E2                     l19278:
  8901                           
  8902                           ; BSR set to: 1
  8903  0092E2  0E00               	movlw	0
  8904  0092E4  0101               	movlb	1	; () banked
  8905  0092E6  6F2D               	movwf	?_floor& (0+255),b
  8906  0092E8  0E00               	movlw	0
  8907  0092EA  0101               	movlb	1	; () banked
  8908  0092EC  6F2E               	movwf	(?_floor+1)& (0+255),b
  8909  0092EE  0E00               	movlw	0
  8910  0092F0  0101               	movlb	1	; () banked
  8911  0092F2  6F2F               	movwf	(?_floor+2)& (0+255),b
  8912                           
  8913                           ; BSR set to: 1
  8914  0092F4  0012               	return	
  8915  0092F6                     l19282:
  8916                           
  8917                           ; BSR set to: 1
  8918  0092F6  0101               	movlb	1	; () banked
  8919  0092F8  5134               	movf	(floor@expon+1)& (0+255),w,b
  8920  0092FA  E105               	bnz	u21980
  8921  0092FC  0E15               	movlw	21
  8922  0092FE  0101               	movlb	1	; () banked
  8923  009300  5D33               	subwf	floor@expon& (0+255),w,b
  8924  009302  A0D8               	btfss	status,0,c
  8925  009304  D007               	goto	l19286
  8926  009306                     u21980:
  8927                           
  8928                           ; BSR set to: 1
  8929  009306  C12D  F12D         	movff	floor@x,?_floor
  8930  00930A  C12E  F12E         	movff	floor@x+1,?_floor+1
  8931  00930E  C12F  F12F         	movff	floor@x+2,?_floor+2
  8932  009312  0012               	return	
  8933  009314                     l19286:
  8934                           
  8935                           ; BSR set to: 1
  8936  009314  C12D  F114         	movff	floor@x,___fttol@f1
  8937  009318  C12E  F115         	movff	floor@x+1,___fttol@f1+1
  8938  00931C  C12F  F116         	movff	floor@x+2,___fttol@f1+2
  8939  009320  EC2D  F041         	call	___fttol	;wreg free
  8940  009324  C114  F123         	movff	?___fttol,___altoft@c
  8941  009328  C115  F124         	movff	?___fttol+1,___altoft@c+1
  8942  00932C  C116  F125         	movff	?___fttol+2,___altoft@c+2
  8943  009330  C117  F126         	movff	?___fttol+3,___altoft@c+3
  8944  009334  ECDF  F054         	call	___altoft	;wreg free
  8945  009338  C123  F130         	movff	?___altoft,floor@i
  8946  00933C  C124  F131         	movff	?___altoft+1,floor@i+1
  8947  009340  C125  F132         	movff	?___altoft+2,floor@i+2
  8948  009344  C12D  F100         	movff	floor@x,___ftge@ff1
  8949  009348  C12E  F101         	movff	floor@x+1,___ftge@ff1+1
  8950  00934C  C12F  F102         	movff	floor@x+2,___ftge@ff1+2
  8951  009350  C130  F103         	movff	floor@i,___ftge@ff2
  8952  009354  C131  F104         	movff	floor@i+1,___ftge@ff2+1
  8953  009358  C132  F105         	movff	floor@i+2,___ftge@ff2+2
  8954  00935C  EC4E  F04E         	call	___ftge	;wreg free
  8955  009360  0101               	movlb	1	; () banked
  8956  009362  B0D8               	btfsc	status,0,c
  8957  009364  D018               	goto	l2456
  8958                           
  8959                           ; BSR set to: 1
  8960  009366  C130  F108         	movff	floor@i,___ftadd@f1
  8961  00936A  C131  F109         	movff	floor@i+1,___ftadd@f1+1
  8962  00936E  C132  F10A         	movff	floor@i+2,___ftadd@f1+2
  8963  009372  0E00               	movlw	0
  8964  009374  0101               	movlb	1	; () banked
  8965  009376  6F0B               	movwf	___ftadd@f2& (0+255),b
  8966  009378  0E80               	movlw	128
  8967  00937A  0101               	movlb	1	; () banked
  8968  00937C  6F0C               	movwf	(___ftadd@f2+1)& (0+255),b
  8969  00937E  0EBF               	movlw	191
  8970  009380  0101               	movlb	1	; () banked
  8971  009382  6F0D               	movwf	(___ftadd@f2+2)& (0+255),b
  8972  009384  EC6E  F034         	call	___ftadd	;wreg free
  8973  009388  C108  F12D         	movff	?___ftadd,?_floor
  8974  00938C  C109  F12E         	movff	?___ftadd+1,?_floor+1
  8975  009390  C10A  F12F         	movff	?___ftadd+2,?_floor+2
  8976  009394  0012               	return	
  8977  009396                     l2456:
  8978                           
  8979                           ; BSR set to: 1
  8980  009396  C130  F12D         	movff	floor@i,?_floor
  8981  00939A  C131  F12E         	movff	floor@i+1,?_floor+1
  8982  00939E  C132  F12F         	movff	floor@i+2,?_floor+2
  8983  0093A2  0012               	return		;funcret
  8984  0093A4                     __end_of_floor:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           postinc0	equ	0xFEE
  8993                           plusw0	equ	0xFEB
  8994                           wreg	equ	0xFE8
  8995                           postdec1	equ	0xFE5
  8996                           fsr1h	equ	0xFE2
  8997                           fsr1l	equ	0xFE1
  8998                           indf2	equ	0xFDF
  8999                           postinc2	equ	0xFDE
  9000                           postdec2	equ	0xFDD
  9001                           plusw2	equ	0xFDB
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function _frexp *****************
  9007 ;; Defined at:
  9008 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  value           3    0[BANK1 ] int 
  9011 ;;  eptr            2    3[BANK1 ] PTR int 
  9012 ;;		 -> floor@expon(2), 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  3    0[BANK1 ] PTR int 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9024 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;Total ram usage:        7 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:   16
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_floor
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text16
  9039  00ADEC                     __ptext16:
  9040                           	opt stack 0
  9041  00ADEC                     _frexp:
  9042                           	opt stack 12
  9043                           
  9044                           ;incstack = 0
  9045  00ADEC  0101               	movlb	1	; () banked
  9046  00ADEE  5100               	movf	frexp@value& (0+255),w,b
  9047  00ADF0  0101               	movlb	1	; () banked
  9048  00ADF2  1101               	iorwf	(frexp@value+1)& (0+255),w,b
  9049  00ADF4  0101               	movlb	1	; () banked
  9050  00ADF6  1102               	iorwf	(frexp@value+2)& (0+255),w,b
  9051  00ADF8  A4D8               	btfss	status,2,c
  9052  00ADFA  D009               	goto	l18878
  9053                           
  9054                           ; BSR set to: 1
  9055  00ADFC  C103  FFD9         	movff	frexp@eptr,fsr2l
  9056  00AE00  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9057  00AE04  0E00               	movlw	0
  9058  00AE06  6EDE               	movwf	postinc2,c
  9059  00AE08  0E00               	movlw	0
  9060  00AE0A  6EDD               	movwf	postdec2,c
  9061                           
  9062                           ; BSR set to: 1
  9063                           ;	Return value of _frexp is never used
  9064  00AE0C  0012               	return	
  9065  00AE0E                     l18878:
  9066                           
  9067                           ; BSR set to: 1
  9068  00AE0E  0101               	movlb	1	; () banked
  9069  00AE10  5102               	movf	(frexp@value+2)& (0+255),w,b
  9070  00AE12  0B7F               	andlw	127
  9071  00AE14  0101               	movlb	1	; () banked
  9072  00AE16  6F05               	movwf	??_frexp& (0+255),b
  9073  00AE18  6B06               	clrf	(??_frexp+1)& (0+255),b
  9074  00AE1A  90D8               	bcf	status,0,c
  9075  00AE1C  0101               	movlb	1	; () banked
  9076  00AE1E  3705               	rlcf	??_frexp& (0+255),f,b
  9077  00AE20  3706               	rlcf	(??_frexp+1)& (0+255),f,b
  9078  00AE22  C103  FFD9         	movff	frexp@eptr,fsr2l
  9079  00AE26  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9080  00AE2A  C105  FFDE         	movff	??_frexp,postinc2
  9081  00AE2E  C106  FFDD         	movff	??_frexp+1,postdec2
  9082  00AE32  0101               	movlb	1	; () banked
  9083  00AE34  AF01               	btfss	(frexp@value+1)& (0+255),7,b
  9084  00AE36  D004               	goto	u21510
  9085  00AE38  0101               	movlb	1	; () banked
  9086  00AE3A  6B05               	clrf	??_frexp& (0+255),b
  9087  00AE3C  2B05               	incf	??_frexp& (0+255),f,b
  9088  00AE3E  D002               	goto	u21518
  9089  00AE40                     u21510:
  9090  00AE40  0101               	movlb	1	; () banked
  9091  00AE42  6B05               	clrf	??_frexp& (0+255),b
  9092  00AE44                     u21518:
  9093  00AE44  0101               	movlb	1	; () banked
  9094  00AE46  5105               	movf	??_frexp& (0+255),w,b
  9095  00AE48  C103  FFD9         	movff	frexp@eptr,fsr2l
  9096  00AE4C  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9097  00AE50  12DE               	iorwf	postinc2,f,c
  9098  00AE52  0E00               	movlw	0
  9099  00AE54  12DD               	iorwf	postdec2,f,c
  9100                           
  9101                           ; BSR set to: 1
  9102  00AE56  C103  FFD9         	movff	frexp@eptr,fsr2l
  9103  00AE5A  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9104  00AE5E  0E82               	movlw	130
  9105  00AE60  26DE               	addwf	postinc2,f,c
  9106  00AE62  0EFF               	movlw	255
  9107  00AE64  22DD               	addwfc	postdec2,f,c
  9108                           
  9109                           ; BSR set to: 1
  9110  00AE66  0101               	movlb	1	; () banked
  9111  00AE68  8102               	bsf	(frexp@value+2)& (0+255),0,b
  9112  00AE6A  8302               	bsf	(frexp@value+2)& (0+255),1,b
  9113  00AE6C  8502               	bsf	(frexp@value+2)& (0+255),2,b
  9114  00AE6E  8702               	bsf	(frexp@value+2)& (0+255),3,b
  9115  00AE70  8902               	bsf	(frexp@value+2)& (0+255),4,b
  9116  00AE72  8B02               	bsf	(frexp@value+2)& (0+255),5,b
  9117  00AE74  9D02               	bcf	(frexp@value+2)& (0+255),6,b
  9118                           
  9119                           ; BSR set to: 1
  9120  00AE76  0101               	movlb	1	; () banked
  9121  00AE78  9F01               	bcf	(frexp@value+1)& (0+255),7,b
  9122  00AE7A  0012               	return	
  9123  00AE7C                     __end_of_frexp:
  9124                           	opt stack 0
  9125                           tblptru	equ	0xFF8
  9126                           tblptrh	equ	0xFF7
  9127                           tblptrl	equ	0xFF6
  9128                           tablat	equ	0xFF5
  9129                           prodh	equ	0xFF4
  9130                           prodl	equ	0xFF3
  9131                           postinc0	equ	0xFEE
  9132                           plusw0	equ	0xFEB
  9133                           wreg	equ	0xFE8
  9134                           postdec1	equ	0xFE5
  9135                           fsr1h	equ	0xFE2
  9136                           fsr1l	equ	0xFE1
  9137                           indf2	equ	0xFDF
  9138                           postinc2	equ	0xFDE
  9139                           postdec2	equ	0xFDD
  9140                           plusw2	equ	0xFDB
  9141                           fsr2h	equ	0xFDA
  9142                           fsr2l	equ	0xFD9
  9143                           status	equ	0xFD8
  9144                           
  9145 ;; *************** function ___fttol *****************
  9146 ;; Defined at:
  9147 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  f1              3   20[BANK1 ] float 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  lval            4   30[BANK1 ] unsigned long 
  9152 ;;  exp1            1   34[BANK1 ] unsigned char 
  9153 ;;  sign1           1   29[BANK1 ] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  4   20[BANK1 ] long 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9163 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9164 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9165 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9166 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;Total ram usage:       15 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:   16
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_send_complete_update
  9174 ;;		_send_periodic_update
  9175 ;;		_floor
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text17
  9180  00825A                     __ptext17:
  9181                           	opt stack 0
  9182  00825A                     ___fttol:
  9183                           	opt stack 12
  9184                           
  9185                           ; BSR set to: 1
  9186                           ;incstack = 0
  9187  00825A  C116  F118         	movff	___fttol@f1+2,??___fttol
  9188  00825E  0101               	movlb	1	; () banked
  9189  008260  6B19               	clrf	(??___fttol+1)& (0+255),b
  9190  008262  6B1A               	clrf	(??___fttol+2)& (0+255),b
  9191  008264  0101               	movlb	1	; () banked
  9192  008266  3515               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9193  008268  0101               	movlb	1	; () banked
  9194  00826A  3718               	rlcf	??___fttol& (0+255),f,b
  9195  00826C  E301               	bnc	u21551
  9196  00826E  8119               	bsf	(??___fttol+1)& (0+255),0,b
  9197  008270                     u21551:
  9198  008270  0101               	movlb	1	; () banked
  9199  008272  5118               	movf	??___fttol& (0+255),w,b
  9200  008274  0101               	movlb	1	; () banked
  9201  008276  6F22               	movwf	___fttol@exp1& (0+255),b
  9202  008278  0101               	movlb	1	; () banked
  9203  00827A  5122               	movf	___fttol@exp1& (0+255),w,b
  9204  00827C  A4D8               	btfss	status,2,c
  9205  00827E  D00A               	goto	l18912
  9206                           
  9207                           ; BSR set to: 1
  9208  008280  0E00               	movlw	0
  9209  008282  0101               	movlb	1	; () banked
  9210  008284  6F14               	movwf	?___fttol& (0+255),b
  9211  008286  0E00               	movlw	0
  9212  008288  6F15               	movwf	(?___fttol+1)& (0+255),b
  9213  00828A  0E00               	movlw	0
  9214  00828C  6F16               	movwf	(?___fttol+2)& (0+255),b
  9215  00828E  0E00               	movlw	0
  9216  008290  6F17               	movwf	(?___fttol+3)& (0+255),b
  9217                           
  9218                           ; BSR set to: 1
  9219  008292  0012               	return	
  9220  008294                     l18912:
  9221                           
  9222                           ; BSR set to: 1
  9223  008294  0E17               	movlw	23
  9224  008296  0101               	movlb	1	; () banked
  9225  008298  6F18               	movwf	??___fttol& (0+255),b
  9226  00829A  C114  F119         	movff	___fttol@f1,??___fttol+1
  9227  00829E  C115  F11A         	movff	___fttol@f1+1,??___fttol+2
  9228  0082A2  C116  F11B         	movff	___fttol@f1+2,??___fttol+3
  9229  0082A6  0101               	movlb	1	; () banked
  9230  0082A8  2918               	incf	??___fttol& (0+255),w,b
  9231  0082AA  0101               	movlb	1	; () banked
  9232  0082AC  6F1C               	movwf	(??___fttol+4)& (0+255),b
  9233  0082AE  D005               	goto	u21570
  9234  0082B0                     u21575:
  9235  0082B0  0101               	movlb	1	; () banked
  9236  0082B2  90D8               	bcf	status,0,c
  9237  0082B4  331B               	rrcf	(??___fttol+3)& (0+255),f,b
  9238  0082B6  331A               	rrcf	(??___fttol+2)& (0+255),f,b
  9239  0082B8  3319               	rrcf	(??___fttol+1)& (0+255),f,b
  9240  0082BA                     u21570:
  9241  0082BA  0101               	movlb	1	; () banked
  9242  0082BC  2F1C               	decfsz	(??___fttol+4)& (0+255),f,b
  9243  0082BE  D7F8               	goto	u21575
  9244  0082C0  0101               	movlb	1	; () banked
  9245  0082C2  5119               	movf	(??___fttol+1)& (0+255),w,b
  9246  0082C4  0101               	movlb	1	; () banked
  9247  0082C6  6F1D               	movwf	___fttol@sign1& (0+255),b
  9248                           
  9249                           ; BSR set to: 1
  9250  0082C8  0101               	movlb	1	; () banked
  9251  0082CA  8F15               	bsf	(___fttol@f1+1)& (0+255),7,b
  9252                           
  9253                           ; BSR set to: 1
  9254  0082CC  0EFF               	movlw	255
  9255  0082CE  0101               	movlb	1	; () banked
  9256  0082D0  1714               	andwf	___fttol@f1& (0+255),f,b
  9257  0082D2  0EFF               	movlw	255
  9258  0082D4  0101               	movlb	1	; () banked
  9259  0082D6  1715               	andwf	(___fttol@f1+1)& (0+255),f,b
  9260  0082D8  0E00               	movlw	0
  9261  0082DA  0101               	movlb	1	; () banked
  9262  0082DC  1716               	andwf	(___fttol@f1+2)& (0+255),f,b
  9263                           
  9264                           ; BSR set to: 1
  9265  0082DE  0101               	movlb	1	; () banked
  9266  0082E0  5114               	movf	___fttol@f1& (0+255),w,b
  9267  0082E2  0101               	movlb	1	; () banked
  9268  0082E4  6F1E               	movwf	___fttol@lval& (0+255),b
  9269  0082E6  0101               	movlb	1	; () banked
  9270  0082E8  5115               	movf	(___fttol@f1+1)& (0+255),w,b
  9271  0082EA  0101               	movlb	1	; () banked
  9272  0082EC  6F1F               	movwf	(___fttol@lval+1)& (0+255),b
  9273  0082EE  0101               	movlb	1	; () banked
  9274  0082F0  5116               	movf	(___fttol@f1+2)& (0+255),w,b
  9275  0082F2  0101               	movlb	1	; () banked
  9276  0082F4  6F20               	movwf	(___fttol@lval+2)& (0+255),b
  9277  0082F6  0101               	movlb	1	; () banked
  9278  0082F8  6B21               	clrf	(___fttol@lval+3)& (0+255),b
  9279                           
  9280                           ; BSR set to: 1
  9281  0082FA  0E8E               	movlw	142
  9282  0082FC  0101               	movlb	1	; () banked
  9283  0082FE  5F22               	subwf	___fttol@exp1& (0+255),f,b
  9284                           
  9285                           ; BSR set to: 1
  9286  008300  0101               	movlb	1	; () banked
  9287  008302  AF22               	btfss	___fttol@exp1& (0+255),7,b
  9288  008304  D01A               	goto	l18934
  9289                           
  9290                           ; BSR set to: 1
  9291  008306  0101               	movlb	1	; () banked
  9292  008308  5122               	movf	___fttol@exp1& (0+255),w,b
  9293  00830A  0A80               	xorlw	128
  9294  00830C  0F8F               	addlw	143
  9295  00830E  B0D8               	btfsc	status,0,c
  9296  008310  D00A               	goto	l18930
  9297                           
  9298                           ; BSR set to: 1
  9299  008312  0E00               	movlw	0
  9300  008314  0101               	movlb	1	; () banked
  9301  008316  6F14               	movwf	?___fttol& (0+255),b
  9302  008318  0E00               	movlw	0
  9303  00831A  6F15               	movwf	(?___fttol+1)& (0+255),b
  9304  00831C  0E00               	movlw	0
  9305  00831E  6F16               	movwf	(?___fttol+2)& (0+255),b
  9306  008320  0E00               	movlw	0
  9307  008322  6F17               	movwf	(?___fttol+3)& (0+255),b
  9308                           
  9309                           ; BSR set to: 1
  9310  008324  0012               	return	
  9311  008326                     l18930:
  9312                           
  9313                           ; BSR set to: 1
  9314  008326  0101               	movlb	1	; () banked
  9315  008328  90D8               	bcf	status,0,c
  9316  00832A  3321               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9317  00832C  3320               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9318  00832E  331F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9319  008330  331E               	rrcf	___fttol@lval& (0+255),f,b
  9320                           
  9321                           ; BSR set to: 1
  9322  008332  0101               	movlb	1	; () banked
  9323  008334  3F22               	incfsz	___fttol@exp1& (0+255),f,b
  9324  008336  D7F7               	goto	l18930
  9325                           
  9326                           ; BSR set to: 1
  9327  008338  D01B               	goto	l18944
  9328  00833A                     l18934:
  9329                           
  9330                           ; BSR set to: 1
  9331  00833A  0E17               	movlw	23
  9332  00833C  0101               	movlb	1	; () banked
  9333  00833E  6522               	cpfsgt	___fttol@exp1& (0+255),b
  9334  008340  D012               	goto	l18942
  9335                           
  9336                           ; BSR set to: 1
  9337  008342  0E00               	movlw	0
  9338  008344  0101               	movlb	1	; () banked
  9339  008346  6F14               	movwf	?___fttol& (0+255),b
  9340  008348  0E00               	movlw	0
  9341  00834A  6F15               	movwf	(?___fttol+1)& (0+255),b
  9342  00834C  0E00               	movlw	0
  9343  00834E  6F16               	movwf	(?___fttol+2)& (0+255),b
  9344  008350  0E00               	movlw	0
  9345  008352  6F17               	movwf	(?___fttol+3)& (0+255),b
  9346                           
  9347                           ; BSR set to: 1
  9348  008354  0012               	return	
  9349  008356                     l18940:
  9350                           
  9351                           ; BSR set to: 1
  9352  008356  0101               	movlb	1	; () banked
  9353  008358  90D8               	bcf	status,0,c
  9354  00835A  371E               	rlcf	___fttol@lval& (0+255),f,b
  9355  00835C  371F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9356  00835E  3720               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9357  008360  3721               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9358  008362  0101               	movlb	1	; () banked
  9359  008364  0722               	decf	___fttol@exp1& (0+255),f,b
  9360  008366                     l18942:
  9361                           
  9362                           ; BSR set to: 1
  9363  008366  0101               	movlb	1	; () banked
  9364  008368  5122               	movf	___fttol@exp1& (0+255),w,b
  9365  00836A  0101               	movlb	1	; () banked
  9366  00836C  A4D8               	btfss	status,2,c
  9367  00836E  D7F3               	goto	l18940
  9368  008370                     l18944:
  9369                           
  9370                           ; BSR set to: 1
  9371  008370  0101               	movlb	1	; () banked
  9372  008372  511D               	movf	___fttol@sign1& (0+255),w,b
  9373  008374  0101               	movlb	1	; () banked
  9374  008376  B4D8               	btfsc	status,2,c
  9375  008378  D009               	goto	l18948
  9376                           
  9377                           ; BSR set to: 1
  9378  00837A  0101               	movlb	1	; () banked
  9379  00837C  1F21               	comf	(___fttol@lval+3)& (0+255),f,b
  9380  00837E  1F20               	comf	(___fttol@lval+2)& (0+255),f,b
  9381  008380  1F1F               	comf	(___fttol@lval+1)& (0+255),f,b
  9382  008382  6D1E               	negf	___fttol@lval& (0+255),b
  9383  008384  0E00               	movlw	0
  9384  008386  231F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9385  008388  2320               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9386  00838A  2321               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9387  00838C                     l18948:
  9388                           
  9389                           ; BSR set to: 1
  9390  00838C  C11E  F114         	movff	___fttol@lval,?___fttol
  9391  008390  C11F  F115         	movff	___fttol@lval+1,?___fttol+1
  9392  008394  C120  F116         	movff	___fttol@lval+2,?___fttol+2
  9393  008398  C121  F117         	movff	___fttol@lval+3,?___fttol+3
  9394  00839C  0012               	return	
  9395  00839E                     __end_of___fttol:
  9396                           	opt stack 0
  9397                           tblptru	equ	0xFF8
  9398                           tblptrh	equ	0xFF7
  9399                           tblptrl	equ	0xFF6
  9400                           tablat	equ	0xFF5
  9401                           prodh	equ	0xFF4
  9402                           prodl	equ	0xFF3
  9403                           postinc0	equ	0xFEE
  9404                           plusw0	equ	0xFEB
  9405                           wreg	equ	0xFE8
  9406                           postdec1	equ	0xFE5
  9407                           fsr1h	equ	0xFE2
  9408                           fsr1l	equ	0xFE1
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           postdec2	equ	0xFDD
  9412                           plusw2	equ	0xFDB
  9413                           fsr2h	equ	0xFDA
  9414                           fsr2l	equ	0xFD9
  9415                           status	equ	0xFD8
  9416                           
  9417 ;; *************** function ___ftge *****************
  9418 ;; Defined at:
  9419 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  ff1             3    0[BANK1 ] float 
  9422 ;;  ff2             3    3[BANK1 ] float 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;		None               void
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        9 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   16
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_floor
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text18
  9449  009C9C                     __ptext18:
  9450                           	opt stack 0
  9451  009C9C                     ___ftge:
  9452                           	opt stack 12
  9453                           
  9454                           ; BSR set to: 1
  9455                           ;incstack = 0
  9456  009C9C  0101               	movlb	1	; () banked
  9457  009C9E  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9458  009CA0  D01D               	goto	l18892
  9459                           
  9460                           ; BSR set to: 1
  9461  009CA2  C100  F106         	movff	___ftge@ff1,??___ftge
  9462  009CA6  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  9463  009CAA  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  9464  009CAE  0101               	movlb	1	; () banked
  9465  009CB0  1F06               	comf	??___ftge& (0+255),f,b
  9466  009CB2  1F07               	comf	(??___ftge+1)& (0+255),f,b
  9467  009CB4  1F08               	comf	(??___ftge+2)& (0+255),f,b
  9468  009CB6  2B06               	incf	??___ftge& (0+255),f,b
  9469  009CB8  0E00               	movlw	0
  9470  009CBA  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  9471  009CBC  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  9472  009CBE  0E00               	movlw	0
  9473  009CC0  0101               	movlb	1	; () banked
  9474  009CC2  2506               	addwf	??___ftge& (0+255),w,b
  9475  009CC4  0101               	movlb	1	; () banked
  9476  009CC6  6F00               	movwf	___ftge@ff1& (0+255),b
  9477  009CC8  0E00               	movlw	0
  9478  009CCA  0101               	movlb	1	; () banked
  9479  009CCC  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  9480  009CCE  0101               	movlb	1	; () banked
  9481  009CD0  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  9482  009CD2  0E80               	movlw	128
  9483  009CD4  0101               	movlb	1	; () banked
  9484  009CD6  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  9485  009CD8  0101               	movlb	1	; () banked
  9486  009CDA  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  9487  009CDC                     l18892:
  9488                           
  9489                           ; BSR set to: 1
  9490  009CDC  0101               	movlb	1	; () banked
  9491  009CDE  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9492  009CE0  D01D               	goto	l18896
  9493                           
  9494                           ; BSR set to: 1
  9495  009CE2  C103  F106         	movff	___ftge@ff2,??___ftge
  9496  009CE6  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  9497  009CEA  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  9498  009CEE  0101               	movlb	1	; () banked
  9499  009CF0  1F06               	comf	??___ftge& (0+255),f,b
  9500  009CF2  1F07               	comf	(??___ftge+1)& (0+255),f,b
  9501  009CF4  1F08               	comf	(??___ftge+2)& (0+255),f,b
  9502  009CF6  2B06               	incf	??___ftge& (0+255),f,b
  9503  009CF8  0E00               	movlw	0
  9504  009CFA  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  9505  009CFC  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  9506  009CFE  0E00               	movlw	0
  9507  009D00  0101               	movlb	1	; () banked
  9508  009D02  2506               	addwf	??___ftge& (0+255),w,b
  9509  009D04  0101               	movlb	1	; () banked
  9510  009D06  6F03               	movwf	___ftge@ff2& (0+255),b
  9511  009D08  0E00               	movlw	0
  9512  009D0A  0101               	movlb	1	; () banked
  9513  009D0C  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  9514  009D0E  0101               	movlb	1	; () banked
  9515  009D10  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  9516  009D12  0E80               	movlw	128
  9517  009D14  0101               	movlb	1	; () banked
  9518  009D16  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  9519  009D18  0101               	movlb	1	; () banked
  9520  009D1A  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  9521  009D1C                     l18896:
  9522                           
  9523                           ; BSR set to: 1
  9524  009D1C  0E00               	movlw	0
  9525  009D1E  0101               	movlb	1	; () banked
  9526  009D20  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  9527  009D22  0E00               	movlw	0
  9528  009D24  0101               	movlb	1	; () banked
  9529  009D26  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9530  009D28  0E80               	movlw	128
  9531  009D2A  0101               	movlb	1	; () banked
  9532  009D2C  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9533                           
  9534                           ; BSR set to: 1
  9535  009D2E  0E00               	movlw	0
  9536  009D30  0101               	movlb	1	; () banked
  9537  009D32  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  9538  009D34  0E00               	movlw	0
  9539  009D36  0101               	movlb	1	; () banked
  9540  009D38  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9541  009D3A  0E80               	movlw	128
  9542  009D3C  0101               	movlb	1	; () banked
  9543  009D3E  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9544  009D40  0101               	movlb	1	; () banked
  9545  009D42  5103               	movf	___ftge@ff2& (0+255),w,b
  9546  009D44  0101               	movlb	1	; () banked
  9547  009D46  5D00               	subwf	___ftge@ff1& (0+255),w,b
  9548  009D48  0101               	movlb	1	; () banked
  9549  009D4A  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  9550  009D4C  0101               	movlb	1	; () banked
  9551  009D4E  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9552  009D50  0101               	movlb	1	; () banked
  9553  009D52  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  9554  009D54  0101               	movlb	1	; () banked
  9555  009D56  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9556  009D58  B0D8               	btfsc	status,0,c
  9557  009D5A  D002               	goto	l18902
  9558                           
  9559                           ; BSR set to: 1
  9560  009D5C  90D8               	bcf	status,0,c
  9561  009D5E  0012               	return	
  9562  009D60                     l18902:
  9563                           
  9564                           ; BSR set to: 1
  9565  009D60  80D8               	bsf	status,0,c
  9566                           
  9567                           ; BSR set to: 1
  9568  009D62  0012               	return	
  9569  009D64                     __end_of___ftge:
  9570                           	opt stack 0
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           postinc0	equ	0xFEE
  9578                           plusw0	equ	0xFEB
  9579                           wreg	equ	0xFE8
  9580                           postdec1	equ	0xFE5
  9581                           fsr1h	equ	0xFE2
  9582                           fsr1l	equ	0xFE1
  9583                           indf2	equ	0xFDF
  9584                           postinc2	equ	0xFDE
  9585                           postdec2	equ	0xFDD
  9586                           plusw2	equ	0xFDB
  9587                           fsr2h	equ	0xFDA
  9588                           fsr2l	equ	0xFD9
  9589                           status	equ	0xFD8
  9590                           
  9591 ;; *************** function ___ftadd *****************
  9592 ;; Defined at:
  9593 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  f1              3    8[BANK1 ] float 
  9596 ;;  f2              3   11[BANK1 ] float 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  exp1            1   19[BANK1 ] unsigned char 
  9599 ;;  exp2            1   18[BANK1 ] unsigned char 
  9600 ;;  sign            1   17[BANK1 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  3    8[BANK1 ] float 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9610 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9613 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9614 ;;Total ram usage:       12 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   17
  9617 ;; This function calls:
  9618 ;;		___ftpack
  9619 ;; This function is called by:
  9620 ;;		_send_complete_update
  9621 ;;		_send_periodic_update
  9622 ;;		_floor
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text19
  9627  0068DC                     __ptext19:
  9628                           	opt stack 0
  9629  0068DC                     ___ftadd:
  9630                           	opt stack 11
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;incstack = 0
  9634  0068DC  C10A  F10E         	movff	___ftadd@f1+2,??___ftadd
  9635  0068E0  0101               	movlb	1	; () banked
  9636  0068E2  6B0F               	clrf	(??___ftadd+1)& (0+255),b
  9637  0068E4  6B10               	clrf	(??___ftadd+2)& (0+255),b
  9638  0068E6  0101               	movlb	1	; () banked
  9639  0068E8  3509               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  9640  0068EA  0101               	movlb	1	; () banked
  9641  0068EC  370E               	rlcf	??___ftadd& (0+255),f,b
  9642  0068EE  E301               	bnc	u21291
  9643  0068F0  810F               	bsf	(??___ftadd+1)& (0+255),0,b
  9644  0068F2                     u21291:
  9645  0068F2  0101               	movlb	1	; () banked
  9646  0068F4  510E               	movf	??___ftadd& (0+255),w,b
  9647  0068F6  0101               	movlb	1	; () banked
  9648  0068F8  6F13               	movwf	___ftadd@exp1& (0+255),b
  9649  0068FA  C10D  F10E         	movff	___ftadd@f2+2,??___ftadd
  9650  0068FE  0101               	movlb	1	; () banked
  9651  006900  6B0F               	clrf	(??___ftadd+1)& (0+255),b
  9652  006902  6B10               	clrf	(??___ftadd+2)& (0+255),b
  9653  006904  0101               	movlb	1	; () banked
  9654  006906  350C               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  9655  006908  0101               	movlb	1	; () banked
  9656  00690A  370E               	rlcf	??___ftadd& (0+255),f,b
  9657  00690C  E301               	bnc	u21301
  9658  00690E  810F               	bsf	(??___ftadd+1)& (0+255),0,b
  9659  006910                     u21301:
  9660  006910  0101               	movlb	1	; () banked
  9661  006912  510E               	movf	??___ftadd& (0+255),w,b
  9662  006914  0101               	movlb	1	; () banked
  9663  006916  6F12               	movwf	___ftadd@exp2& (0+255),b
  9664                           
  9665                           ; BSR set to: 1
  9666  006918  0101               	movlb	1	; () banked
  9667  00691A  5113               	movf	___ftadd@exp1& (0+255),w,b
  9668  00691C  0101               	movlb	1	; () banked
  9669  00691E  B4D8               	btfsc	status,2,c
  9670  006920  D011               	goto	l2493
  9671                           
  9672                           ; BSR set to: 1
  9673  006922  0101               	movlb	1	; () banked
  9674  006924  5112               	movf	___ftadd@exp2& (0+255),w,b
  9675  006926  0101               	movlb	1	; () banked
  9676  006928  5D13               	subwf	___ftadd@exp1& (0+255),w,b
  9677  00692A  B0D8               	btfsc	status,0,c
  9678  00692C  D012               	goto	l18810
  9679                           
  9680                           ; BSR set to: 1
  9681  00692E  0101               	movlb	1	; () banked
  9682  006930  5113               	movf	___ftadd@exp1& (0+255),w,b
  9683  006932  0800               	sublw	0
  9684  006934  0101               	movlb	1	; () banked
  9685  006936  2512               	addwf	___ftadd@exp2& (0+255),w,b
  9686  006938  0101               	movlb	1	; () banked
  9687  00693A  6F0E               	movwf	??___ftadd& (0+255),b
  9688  00693C  0E18               	movlw	24
  9689  00693E  0101               	movlb	1	; () banked
  9690  006940  650E               	cpfsgt	??___ftadd& (0+255),b
  9691  006942  D007               	goto	l18810
  9692  006944                     l2493:
  9693                           
  9694                           ; BSR set to: 1
  9695  006944  C10B  F108         	movff	___ftadd@f2,?___ftadd
  9696  006948  C10C  F109         	movff	___ftadd@f2+1,?___ftadd+1
  9697  00694C  C10D  F10A         	movff	___ftadd@f2+2,?___ftadd+2
  9698  006950  0012               	return	
  9699  006952                     l18810:
  9700                           
  9701                           ; BSR set to: 1
  9702  006952  0101               	movlb	1	; () banked
  9703  006954  5112               	movf	___ftadd@exp2& (0+255),w,b
  9704  006956  0101               	movlb	1	; () banked
  9705  006958  B4D8               	btfsc	status,2,c
  9706  00695A  D011               	goto	l2497
  9707                           
  9708                           ; BSR set to: 1
  9709  00695C  0101               	movlb	1	; () banked
  9710  00695E  5113               	movf	___ftadd@exp1& (0+255),w,b
  9711  006960  0101               	movlb	1	; () banked
  9712  006962  5D12               	subwf	___ftadd@exp2& (0+255),w,b
  9713  006964  B0D8               	btfsc	status,0,c
  9714  006966  D012               	goto	l18816
  9715                           
  9716                           ; BSR set to: 1
  9717  006968  0101               	movlb	1	; () banked
  9718  00696A  5112               	movf	___ftadd@exp2& (0+255),w,b
  9719  00696C  0800               	sublw	0
  9720  00696E  0101               	movlb	1	; () banked
  9721  006970  2513               	addwf	___ftadd@exp1& (0+255),w,b
  9722  006972  0101               	movlb	1	; () banked
  9723  006974  6F0E               	movwf	??___ftadd& (0+255),b
  9724  006976  0E18               	movlw	24
  9725  006978  0101               	movlb	1	; () banked
  9726  00697A  650E               	cpfsgt	??___ftadd& (0+255),b
  9727  00697C  D007               	goto	l18816
  9728  00697E                     l2497:
  9729                           
  9730                           ; BSR set to: 1
  9731  00697E  C108  F108         	movff	___ftadd@f1,?___ftadd
  9732  006982  C109  F109         	movff	___ftadd@f1+1,?___ftadd+1
  9733  006986  C10A  F10A         	movff	___ftadd@f1+2,?___ftadd+2
  9734  00698A  0012               	return	
  9735  00698C                     l18816:
  9736                           
  9737                           ; BSR set to: 1
  9738  00698C  0E06               	movlw	6
  9739  00698E  0101               	movlb	1	; () banked
  9740  006990  6F11               	movwf	___ftadd@sign& (0+255),b
  9741                           
  9742                           ; BSR set to: 1
  9743  006992  0101               	movlb	1	; () banked
  9744  006994  AF0A               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9745  006996  D002               	goto	l18822
  9746                           
  9747                           ; BSR set to: 1
  9748  006998  0101               	movlb	1	; () banked
  9749  00699A  8F11               	bsf	___ftadd@sign& (0+255),7,b
  9750  00699C                     l18822:
  9751                           
  9752                           ; BSR set to: 1
  9753  00699C  0101               	movlb	1	; () banked
  9754  00699E  AF0D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9755  0069A0  D002               	goto	l2499
  9756                           
  9757                           ; BSR set to: 1
  9758  0069A2  0101               	movlb	1	; () banked
  9759  0069A4  8D11               	bsf	___ftadd@sign& (0+255),6,b
  9760  0069A6                     l2499:
  9761                           
  9762                           ; BSR set to: 1
  9763  0069A6  0101               	movlb	1	; () banked
  9764  0069A8  8F09               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9765                           
  9766                           ; BSR set to: 1
  9767  0069AA  0EFF               	movlw	255
  9768  0069AC  0101               	movlb	1	; () banked
  9769  0069AE  1708               	andwf	___ftadd@f1& (0+255),f,b
  9770  0069B0  0EFF               	movlw	255
  9771  0069B2  0101               	movlb	1	; () banked
  9772  0069B4  1709               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9773  0069B6  0E00               	movlw	0
  9774  0069B8  0101               	movlb	1	; () banked
  9775  0069BA  170A               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9776  0069BC  0101               	movlb	1	; () banked
  9777  0069BE  8F0C               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9778                           
  9779                           ; BSR set to: 1
  9780  0069C0  0EFF               	movlw	255
  9781  0069C2  0101               	movlb	1	; () banked
  9782  0069C4  170B               	andwf	___ftadd@f2& (0+255),f,b
  9783  0069C6  0EFF               	movlw	255
  9784  0069C8  0101               	movlb	1	; () banked
  9785  0069CA  170C               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9786  0069CC  0E00               	movlw	0
  9787  0069CE  0101               	movlb	1	; () banked
  9788  0069D0  170D               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9789                           
  9790                           ; BSR set to: 1
  9791  0069D2  0101               	movlb	1	; () banked
  9792  0069D4  5112               	movf	___ftadd@exp2& (0+255),w,b
  9793  0069D6  0101               	movlb	1	; () banked
  9794  0069D8  5D13               	subwf	___ftadd@exp1& (0+255),w,b
  9795  0069DA  B0D8               	btfsc	status,0,c
  9796  0069DC  D025               	goto	l18842
  9797  0069DE                     l18832:
  9798                           
  9799                           ; BSR set to: 1
  9800  0069DE  0101               	movlb	1	; () banked
  9801  0069E0  90D8               	bcf	status,0,c
  9802  0069E2  370B               	rlcf	___ftadd@f2& (0+255),f,b
  9803  0069E4  370C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9804  0069E6  370D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9805  0069E8  0101               	movlb	1	; () banked
  9806  0069EA  0712               	decf	___ftadd@exp2& (0+255),f,b
  9807                           
  9808                           ; BSR set to: 1
  9809  0069EC  0101               	movlb	1	; () banked
  9810  0069EE  5113               	movf	___ftadd@exp1& (0+255),w,b
  9811  0069F0  0101               	movlb	1	; () banked
  9812  0069F2  1912               	xorwf	___ftadd@exp2& (0+255),w,b
  9813  0069F4  B4D8               	btfsc	status,2,c
  9814  0069F6  D011               	goto	l18840
  9815                           
  9816                           ; BSR set to: 1
  9817  0069F8  0101               	movlb	1	; () banked
  9818  0069FA  0711               	decf	___ftadd@sign& (0+255),f,b
  9819  0069FC  C111  F10E         	movff	___ftadd@sign,??___ftadd
  9820  006A00  0E07               	movlw	7
  9821  006A02  0101               	movlb	1	; () banked
  9822  006A04  170E               	andwf	??___ftadd& (0+255),f,b
  9823  006A06  B4D8               	btfsc	status,2,c
  9824  006A08  D008               	goto	l18840
  9825  006A0A  D7E9               	goto	l18832
  9826  006A0C                     l18838:
  9827                           
  9828                           ; BSR set to: 1
  9829  006A0C  0101               	movlb	1	; () banked
  9830  006A0E  90D8               	bcf	status,0,c
  9831  006A10  330A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9832  006A12  3309               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9833  006A14  3308               	rrcf	___ftadd@f1& (0+255),f,b
  9834  006A16  0101               	movlb	1	; () banked
  9835  006A18  2B13               	incf	___ftadd@exp1& (0+255),f,b
  9836  006A1A                     l18840:
  9837                           
  9838                           ; BSR set to: 1
  9839  006A1A  0101               	movlb	1	; () banked
  9840  006A1C  5112               	movf	___ftadd@exp2& (0+255),w,b
  9841  006A1E  0101               	movlb	1	; () banked
  9842  006A20  1913               	xorwf	___ftadd@exp1& (0+255),w,b
  9843  006A22  B4D8               	btfsc	status,2,c
  9844  006A24  D02B               	goto	l2508
  9845  006A26  D7F2               	goto	l18838
  9846  006A28                     l18842:
  9847                           
  9848                           ; BSR set to: 1
  9849  006A28  0101               	movlb	1	; () banked
  9850  006A2A  5113               	movf	___ftadd@exp1& (0+255),w,b
  9851  006A2C  0101               	movlb	1	; () banked
  9852  006A2E  5D12               	subwf	___ftadd@exp2& (0+255),w,b
  9853  006A30  B0D8               	btfsc	status,0,c
  9854  006A32  D024               	goto	l2508
  9855  006A34                     l18844:
  9856                           
  9857                           ; BSR set to: 1
  9858  006A34  0101               	movlb	1	; () banked
  9859  006A36  90D8               	bcf	status,0,c
  9860  006A38  3708               	rlcf	___ftadd@f1& (0+255),f,b
  9861  006A3A  3709               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9862  006A3C  370A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9863  006A3E  0101               	movlb	1	; () banked
  9864  006A40  0713               	decf	___ftadd@exp1& (0+255),f,b
  9865                           
  9866                           ; BSR set to: 1
  9867  006A42  0101               	movlb	1	; () banked
  9868  006A44  5113               	movf	___ftadd@exp1& (0+255),w,b
  9869  006A46  0101               	movlb	1	; () banked
  9870  006A48  1912               	xorwf	___ftadd@exp2& (0+255),w,b
  9871  006A4A  B4D8               	btfsc	status,2,c
  9872  006A4C  D011               	goto	l18852
  9873                           
  9874                           ; BSR set to: 1
  9875  006A4E  0101               	movlb	1	; () banked
  9876  006A50  0711               	decf	___ftadd@sign& (0+255),f,b
  9877  006A52  C111  F10E         	movff	___ftadd@sign,??___ftadd
  9878  006A56  0E07               	movlw	7
  9879  006A58  0101               	movlb	1	; () banked
  9880  006A5A  170E               	andwf	??___ftadd& (0+255),f,b
  9881  006A5C  B4D8               	btfsc	status,2,c
  9882  006A5E  D008               	goto	l18852
  9883  006A60  D7E9               	goto	l18844
  9884  006A62                     l18850:
  9885                           
  9886                           ; BSR set to: 1
  9887  006A62  0101               	movlb	1	; () banked
  9888  006A64  90D8               	bcf	status,0,c
  9889  006A66  330D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9890  006A68  330C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9891  006A6A  330B               	rrcf	___ftadd@f2& (0+255),f,b
  9892  006A6C  0101               	movlb	1	; () banked
  9893  006A6E  2B12               	incf	___ftadd@exp2& (0+255),f,b
  9894  006A70                     l18852:
  9895                           
  9896                           ; BSR set to: 1
  9897  006A70  0101               	movlb	1	; () banked
  9898  006A72  5112               	movf	___ftadd@exp2& (0+255),w,b
  9899  006A74  0101               	movlb	1	; () banked
  9900  006A76  1913               	xorwf	___ftadd@exp1& (0+255),w,b
  9901  006A78  A4D8               	btfss	status,2,c
  9902  006A7A  D7F3               	goto	l18850
  9903  006A7C                     l2508:
  9904                           
  9905                           ; BSR set to: 1
  9906  006A7C  0101               	movlb	1	; () banked
  9907  006A7E  AF11               	btfss	___ftadd@sign& (0+255),7,b
  9908  006A80  D012               	goto	l2517
  9909                           
  9910                           ; BSR set to: 1
  9911  006A82  0EFF               	movlw	255
  9912  006A84  0101               	movlb	1	; () banked
  9913  006A86  1B08               	xorwf	___ftadd@f1& (0+255),f,b
  9914  006A88  0EFF               	movlw	255
  9915  006A8A  0101               	movlb	1	; () banked
  9916  006A8C  1B09               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9917  006A8E  0EFF               	movlw	255
  9918  006A90  0101               	movlb	1	; () banked
  9919  006A92  1B0A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  9920  006A94  0E01               	movlw	1
  9921  006A96  0101               	movlb	1	; () banked
  9922  006A98  2708               	addwf	___ftadd@f1& (0+255),f,b
  9923  006A9A  0E00               	movlw	0
  9924  006A9C  0101               	movlb	1	; () banked
  9925  006A9E  2309               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  9926  006AA0  0E00               	movlw	0
  9927  006AA2  0101               	movlb	1	; () banked
  9928  006AA4  230A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  9929  006AA6                     l2517:
  9930                           
  9931                           ; BSR set to: 1
  9932  006AA6  0101               	movlb	1	; () banked
  9933  006AA8  AD11               	btfss	___ftadd@sign& (0+255),6,b
  9934  006AAA  D012               	goto	l18858
  9935                           
  9936                           ; BSR set to: 1
  9937  006AAC  0EFF               	movlw	255
  9938  006AAE  0101               	movlb	1	; () banked
  9939  006AB0  1B0B               	xorwf	___ftadd@f2& (0+255),f,b
  9940  006AB2  0EFF               	movlw	255
  9941  006AB4  0101               	movlb	1	; () banked
  9942  006AB6  1B0C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9943  006AB8  0EFF               	movlw	255
  9944  006ABA  0101               	movlb	1	; () banked
  9945  006ABC  1B0D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9946  006ABE  0E01               	movlw	1
  9947  006AC0  0101               	movlb	1	; () banked
  9948  006AC2  270B               	addwf	___ftadd@f2& (0+255),f,b
  9949  006AC4  0E00               	movlw	0
  9950  006AC6  0101               	movlb	1	; () banked
  9951  006AC8  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9952  006ACA  0E00               	movlw	0
  9953  006ACC  0101               	movlb	1	; () banked
  9954  006ACE  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9955  006AD0                     l18858:
  9956                           
  9957                           ; BSR set to: 1
  9958  006AD0  0E00               	movlw	0
  9959  006AD2  0101               	movlb	1	; () banked
  9960  006AD4  6F11               	movwf	___ftadd@sign& (0+255),b
  9961                           
  9962                           ; BSR set to: 1
  9963  006AD6  0101               	movlb	1	; () banked
  9964  006AD8  5108               	movf	___ftadd@f1& (0+255),w,b
  9965  006ADA  0101               	movlb	1	; () banked
  9966  006ADC  270B               	addwf	___ftadd@f2& (0+255),f,b
  9967  006ADE  0101               	movlb	1	; () banked
  9968  006AE0  5109               	movf	(___ftadd@f1+1)& (0+255),w,b
  9969  006AE2  0101               	movlb	1	; () banked
  9970  006AE4  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9971  006AE6  0101               	movlb	1	; () banked
  9972  006AE8  510A               	movf	(___ftadd@f1+2)& (0+255),w,b
  9973  006AEA  0101               	movlb	1	; () banked
  9974  006AEC  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9975                           
  9976                           ; BSR set to: 1
  9977  006AEE  0101               	movlb	1	; () banked
  9978  006AF0  AF0D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9979  006AF2  D015               	goto	l18868
  9980                           
  9981                           ; BSR set to: 1
  9982  006AF4  0EFF               	movlw	255
  9983  006AF6  0101               	movlb	1	; () banked
  9984  006AF8  1B0B               	xorwf	___ftadd@f2& (0+255),f,b
  9985  006AFA  0EFF               	movlw	255
  9986  006AFC  0101               	movlb	1	; () banked
  9987  006AFE  1B0C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9988  006B00  0EFF               	movlw	255
  9989  006B02  0101               	movlb	1	; () banked
  9990  006B04  1B0D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9991  006B06  0E01               	movlw	1
  9992  006B08  0101               	movlb	1	; () banked
  9993  006B0A  270B               	addwf	___ftadd@f2& (0+255),f,b
  9994  006B0C  0E00               	movlw	0
  9995  006B0E  0101               	movlb	1	; () banked
  9996  006B10  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9997  006B12  0E00               	movlw	0
  9998  006B14  0101               	movlb	1	; () banked
  9999  006B16  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10000                           
 10001                           ; BSR set to: 1
 10002  006B18  0E01               	movlw	1
 10003  006B1A  0101               	movlb	1	; () banked
 10004  006B1C  6F11               	movwf	___ftadd@sign& (0+255),b
 10005  006B1E                     l18868:
 10006                           
 10007                           ; BSR set to: 1
 10008  006B1E  C10B  F100         	movff	___ftadd@f2,___ftpack@arg
 10009  006B22  C10C  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
 10010  006B26  C10D  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
 10011  006B2A  C113  F103         	movff	___ftadd@exp1,___ftpack@exp
 10012  006B2E  C111  F104         	movff	___ftadd@sign,___ftpack@sign
 10013  006B32  ECC2  F047         	call	___ftpack	;wreg free
 10014  006B36  C100  F108         	movff	?___ftpack,?___ftadd
 10015  006B3A  C101  F109         	movff	?___ftpack+1,?___ftadd+1
 10016  006B3E  C102  F10A         	movff	?___ftpack+2,?___ftadd+2
 10017  006B42  0012               	return	
 10018  006B44                     __end_of___ftadd:
 10019                           	opt stack 0
 10020                           tblptru	equ	0xFF8
 10021                           tblptrh	equ	0xFF7
 10022                           tblptrl	equ	0xFF6
 10023                           tablat	equ	0xFF5
 10024                           prodh	equ	0xFF4
 10025                           prodl	equ	0xFF3
 10026                           postinc0	equ	0xFEE
 10027                           plusw0	equ	0xFEB
 10028                           wreg	equ	0xFE8
 10029                           postdec1	equ	0xFE5
 10030                           fsr1h	equ	0xFE2
 10031                           fsr1l	equ	0xFE1
 10032                           indf2	equ	0xFDF
 10033                           postinc2	equ	0xFDE
 10034                           postdec2	equ	0xFDD
 10035                           plusw2	equ	0xFDB
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function ___altoft *****************
 10041 ;; Defined at:
 10042 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  c               4   35[BANK1 ] long 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  sign            1   44[BANK1 ] unsigned char 
 10047 ;;  exp             1   43[BANK1 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  3   35[BANK1 ] float 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10057 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10059 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10060 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10061 ;;Total ram usage:       10 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:   17
 10064 ;; This function calls:
 10065 ;;		___ftpack
 10066 ;; This function is called by:
 10067 ;;		_floor
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text20
 10072  00A9BE                     __ptext20:
 10073                           	opt stack 0
 10074  00A9BE                     ___altoft:
 10075                           	opt stack 11
 10076                           
 10077                           ;incstack = 0
 10078  00A9BE  0E00               	movlw	0
 10079  00A9C0  0101               	movlb	1	; () banked
 10080  00A9C2  6F2C               	movwf	___altoft@sign& (0+255),b
 10081  00A9C4  0E8E               	movlw	142
 10082  00A9C6  0101               	movlb	1	; () banked
 10083  00A9C8  6F2B               	movwf	___altoft@exp& (0+255),b
 10084                           
 10085                           ; BSR set to: 1
 10086  00A9CA  0101               	movlb	1	; () banked
 10087  00A9CC  AF26               	btfss	(___altoft@c+3)& (0+255),7,b
 10088  00A9CE  D015               	goto	l18796
 10089                           
 10090                           ; BSR set to: 1
 10091  00A9D0  0101               	movlb	1	; () banked
 10092  00A9D2  1F26               	comf	(___altoft@c+3)& (0+255),f,b
 10093  00A9D4  1F25               	comf	(___altoft@c+2)& (0+255),f,b
 10094  00A9D6  1F24               	comf	(___altoft@c+1)& (0+255),f,b
 10095  00A9D8  6D23               	negf	___altoft@c& (0+255),b
 10096  00A9DA  0E00               	movlw	0
 10097  00A9DC  2324               	addwfc	(___altoft@c+1)& (0+255),f,b
 10098  00A9DE  2325               	addwfc	(___altoft@c+2)& (0+255),f,b
 10099  00A9E0  2326               	addwfc	(___altoft@c+3)& (0+255),f,b
 10100                           
 10101                           ; BSR set to: 1
 10102  00A9E2  0E01               	movlw	1
 10103  00A9E4  0101               	movlb	1	; () banked
 10104  00A9E6  6F2C               	movwf	___altoft@sign& (0+255),b
 10105                           
 10106                           ; BSR set to: 1
 10107  00A9E8  D008               	goto	l18796
 10108  00A9EA                     l18794:
 10109                           
 10110                           ; BSR set to: 1
 10111  00A9EA  0101               	movlb	1	; () banked
 10112  00A9EC  90D8               	bcf	status,0,c
 10113  00A9EE  3326               	rrcf	(___altoft@c+3)& (0+255),f,b
 10114  00A9F0  3325               	rrcf	(___altoft@c+2)& (0+255),f,b
 10115  00A9F2  3324               	rrcf	(___altoft@c+1)& (0+255),f,b
 10116  00A9F4  3323               	rrcf	___altoft@c& (0+255),f,b
 10117  00A9F6  0101               	movlb	1	; () banked
 10118  00A9F8  2B2B               	incf	___altoft@exp& (0+255),f,b
 10119  00A9FA                     l18796:
 10120                           
 10121                           ; BSR set to: 1
 10122  00A9FA  0E00               	movlw	0
 10123  00A9FC  0101               	movlb	1	; () banked
 10124  00A9FE  1523               	andwf	___altoft@c& (0+255),w,b
 10125  00AA00  0101               	movlb	1	; () banked
 10126  00AA02  6F27               	movwf	??___altoft& (0+255),b
 10127  00AA04  0E00               	movlw	0
 10128  00AA06  0101               	movlb	1	; () banked
 10129  00AA08  1524               	andwf	(___altoft@c+1)& (0+255),w,b
 10130  00AA0A  0101               	movlb	1	; () banked
 10131  00AA0C  6F28               	movwf	(??___altoft+1)& (0+255),b
 10132  00AA0E  0E00               	movlw	0
 10133  00AA10  0101               	movlb	1	; () banked
 10134  00AA12  1525               	andwf	(___altoft@c+2)& (0+255),w,b
 10135  00AA14  0101               	movlb	1	; () banked
 10136  00AA16  6F29               	movwf	(??___altoft+2)& (0+255),b
 10137  00AA18  0EFF               	movlw	255
 10138  00AA1A  0101               	movlb	1	; () banked
 10139  00AA1C  1526               	andwf	(___altoft@c+3)& (0+255),w,b
 10140  00AA1E  0101               	movlb	1	; () banked
 10141  00AA20  6F2A               	movwf	(??___altoft+3)& (0+255),b
 10142  00AA22  0101               	movlb	1	; () banked
 10143  00AA24  5127               	movf	??___altoft& (0+255),w,b
 10144  00AA26  0101               	movlb	1	; () banked
 10145  00AA28  1128               	iorwf	(??___altoft+1)& (0+255),w,b
 10146  00AA2A  0101               	movlb	1	; () banked
 10147  00AA2C  1129               	iorwf	(??___altoft+2)& (0+255),w,b
 10148  00AA2E  0101               	movlb	1	; () banked
 10149  00AA30  112A               	iorwf	(??___altoft+3)& (0+255),w,b
 10150  00AA32  A4D8               	btfss	status,2,c
 10151  00AA34  D7DA               	goto	l18794
 10152                           
 10153                           ; BSR set to: 1
 10154                           
 10155                           ; BSR set to: 1
 10156  00AA36  C123  F100         	movff	___altoft@c,___ftpack@arg
 10157  00AA3A  C124  F101         	movff	___altoft@c+1,___ftpack@arg+1
 10158  00AA3E  C125  F102         	movff	___altoft@c+2,___ftpack@arg+2
 10159  00AA42  C12B  F103         	movff	___altoft@exp,___ftpack@exp
 10160  00AA46  C12C  F104         	movff	___altoft@sign,___ftpack@sign
 10161  00AA4A  ECC2  F047         	call	___ftpack	;wreg free
 10162  00AA4E  C100  F123         	movff	?___ftpack,?___altoft
 10163  00AA52  C101  F124         	movff	?___ftpack+1,?___altoft+1
 10164  00AA56  C102  F125         	movff	?___ftpack+2,?___altoft+2
 10165  00AA5A  0012               	return	
 10166  00AA5C                     __end_of___altoft:
 10167                           	opt stack 0
 10168                           tblptru	equ	0xFF8
 10169                           tblptrh	equ	0xFF7
 10170                           tblptrl	equ	0xFF6
 10171                           tablat	equ	0xFF5
 10172                           prodh	equ	0xFF4
 10173                           prodl	equ	0xFF3
 10174                           postinc0	equ	0xFEE
 10175                           plusw0	equ	0xFEB
 10176                           wreg	equ	0xFE8
 10177                           postdec1	equ	0xFE5
 10178                           fsr1h	equ	0xFE2
 10179                           fsr1l	equ	0xFE1
 10180                           indf2	equ	0xFDF
 10181                           postinc2	equ	0xFDE
 10182                           postdec2	equ	0xFDD
 10183                           plusw2	equ	0xFDB
 10184                           fsr2h	equ	0xFDA
 10185                           fsr2l	equ	0xFD9
 10186                           status	equ	0xFD8
 10187                           
 10188 ;; *************** function ___ftneg *****************
 10189 ;; Defined at:
 10190 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  f1              3   53[BANK1 ] float 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  3   53[BANK1 ] float 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10204 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10207 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10208 ;;Total ram usage:        3 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:   16
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_send_complete_update
 10215 ;;		_send_periodic_update
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text21
 10220  00B9A6                     __ptext21:
 10221                           	opt stack 0
 10222  00B9A6                     ___ftneg:
 10223                           	opt stack 13
 10224                           
 10225                           ;incstack = 0
 10226  00B9A6  0101               	movlb	1	; () banked
 10227  00B9A8  5135               	movf	___ftneg@f1& (0+255),w,b
 10228  00B9AA  0101               	movlb	1	; () banked
 10229  00B9AC  1136               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10230  00B9AE  0101               	movlb	1	; () banked
 10231  00B9B0  1137               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 10232  00B9B2  B4D8               	btfsc	status,2,c
 10233  00B9B4  D009               	goto	l2550
 10234                           
 10235                           ; BSR set to: 1
 10236  00B9B6  0E00               	movlw	0
 10237  00B9B8  0101               	movlb	1	; () banked
 10238  00B9BA  1B35               	xorwf	___ftneg@f1& (0+255),f,b
 10239  00B9BC  0E00               	movlw	0
 10240  00B9BE  0101               	movlb	1	; () banked
 10241  00B9C0  1B36               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10242  00B9C2  0E80               	movlw	128
 10243  00B9C4  0101               	movlb	1	; () banked
 10244  00B9C6  1B37               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10245  00B9C8                     l2550:
 10246                           
 10247                           ; BSR set to: 1
 10248  00B9C8  C135  F135         	movff	___ftneg@f1,?___ftneg
 10249  00B9CC  C136  F136         	movff	___ftneg@f1+1,?___ftneg+1
 10250  00B9D0  C137  F137         	movff	___ftneg@f1+2,?___ftneg+2
 10251                           
 10252                           ; BSR set to: 1
 10253  00B9D4  0012               	return		;funcret
 10254  00B9D6                     __end_of___ftneg:
 10255                           	opt stack 0
 10256                           tblptru	equ	0xFF8
 10257                           tblptrh	equ	0xFF7
 10258                           tblptrl	equ	0xFF6
 10259                           tablat	equ	0xFF5
 10260                           prodh	equ	0xFF4
 10261                           prodl	equ	0xFF3
 10262                           postinc0	equ	0xFEE
 10263                           plusw0	equ	0xFEB
 10264                           wreg	equ	0xFE8
 10265                           postdec1	equ	0xFE5
 10266                           fsr1h	equ	0xFE2
 10267                           fsr1l	equ	0xFE1
 10268                           indf2	equ	0xFDF
 10269                           postinc2	equ	0xFDE
 10270                           postdec2	equ	0xFDD
 10271                           plusw2	equ	0xFDB
 10272                           fsr2h	equ	0xFDA
 10273                           fsr2l	equ	0xFD9
 10274                           status	equ	0xFD8
 10275                           
 10276 ;; *************** function ___ftmul *****************
 10277 ;; Defined at:
 10278 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  f1              3   56[BANK1 ] float 
 10281 ;;  f2              3   59[BANK1 ] float 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  f3_as_produc    3   66[BANK1 ] unsigned um
 10284 ;;  sign            1   70[BANK1 ] unsigned char 
 10285 ;;  cntr            1   69[BANK1 ] unsigned char 
 10286 ;;  exp             1   65[BANK1 ] unsigned char 
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  3   56[BANK1 ] float 
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10296 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10297 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10298 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10299 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;Total ram usage:       15 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:   17
 10303 ;; This function calls:
 10304 ;;		___ftpack
 10305 ;; This function is called by:
 10306 ;;		_send_complete_update
 10307 ;;		_send_periodic_update
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text22
 10312  007D12                     __ptext22:
 10313                           	opt stack 0
 10314  007D12                     ___ftmul:
 10315                           	opt stack 12
 10316                           
 10317                           ; BSR set to: 1
 10318                           ;incstack = 0
 10319  007D12  C13A  F13E         	movff	___ftmul@f1+2,??___ftmul
 10320  007D16  0101               	movlb	1	; () banked
 10321  007D18  6B3F               	clrf	(??___ftmul+1)& (0+255),b
 10322  007D1A  6B40               	clrf	(??___ftmul+2)& (0+255),b
 10323  007D1C  0101               	movlb	1	; () banked
 10324  007D1E  3539               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10325  007D20  0101               	movlb	1	; () banked
 10326  007D22  373E               	rlcf	??___ftmul& (0+255),f,b
 10327  007D24  E301               	bnc	u22211
 10328  007D26  813F               	bsf	(??___ftmul+1)& (0+255),0,b
 10329  007D28                     u22211:
 10330  007D28  0101               	movlb	1	; () banked
 10331  007D2A  513E               	movf	??___ftmul& (0+255),w,b
 10332  007D2C  0101               	movlb	1	; () banked
 10333  007D2E  6F41               	movwf	___ftmul@exp& (0+255),b
 10334  007D30  0101               	movlb	1	; () banked
 10335  007D32  5141               	movf	___ftmul@exp& (0+255),w,b
 10336  007D34  A4D8               	btfss	status,2,c
 10337  007D36  D00A               	goto	l19412
 10338                           
 10339                           ; BSR set to: 1
 10340  007D38  0E00               	movlw	0
 10341  007D3A  0101               	movlb	1	; () banked
 10342  007D3C  6F38               	movwf	?___ftmul& (0+255),b
 10343  007D3E  0E00               	movlw	0
 10344  007D40  0101               	movlb	1	; () banked
 10345  007D42  6F39               	movwf	(?___ftmul+1)& (0+255),b
 10346  007D44  0E00               	movlw	0
 10347  007D46  0101               	movlb	1	; () banked
 10348  007D48  6F3A               	movwf	(?___ftmul+2)& (0+255),b
 10349                           
 10350                           ; BSR set to: 1
 10351  007D4A  0012               	return	
 10352  007D4C                     l19412:
 10353                           
 10354                           ; BSR set to: 1
 10355  007D4C  C13D  F13E         	movff	___ftmul@f2+2,??___ftmul
 10356  007D50  0101               	movlb	1	; () banked
 10357  007D52  6B3F               	clrf	(??___ftmul+1)& (0+255),b
 10358  007D54  6B40               	clrf	(??___ftmul+2)& (0+255),b
 10359  007D56  0101               	movlb	1	; () banked
 10360  007D58  353C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10361  007D5A  0101               	movlb	1	; () banked
 10362  007D5C  373E               	rlcf	??___ftmul& (0+255),f,b
 10363  007D5E  E301               	bnc	u22231
 10364  007D60  813F               	bsf	(??___ftmul+1)& (0+255),0,b
 10365  007D62                     u22231:
 10366  007D62  0101               	movlb	1	; () banked
 10367  007D64  513E               	movf	??___ftmul& (0+255),w,b
 10368  007D66  0101               	movlb	1	; () banked
 10369  007D68  6F46               	movwf	___ftmul@sign& (0+255),b
 10370  007D6A  0101               	movlb	1	; () banked
 10371  007D6C  5146               	movf	___ftmul@sign& (0+255),w,b
 10372  007D6E  A4D8               	btfss	status,2,c
 10373  007D70  D00A               	goto	l19418
 10374                           
 10375                           ; BSR set to: 1
 10376  007D72  0E00               	movlw	0
 10377  007D74  0101               	movlb	1	; () banked
 10378  007D76  6F38               	movwf	?___ftmul& (0+255),b
 10379  007D78  0E00               	movlw	0
 10380  007D7A  0101               	movlb	1	; () banked
 10381  007D7C  6F39               	movwf	(?___ftmul+1)& (0+255),b
 10382  007D7E  0E00               	movlw	0
 10383  007D80  0101               	movlb	1	; () banked
 10384  007D82  6F3A               	movwf	(?___ftmul+2)& (0+255),b
 10385                           
 10386                           ; BSR set to: 1
 10387  007D84  0012               	return	
 10388  007D86                     l19418:
 10389                           
 10390                           ; BSR set to: 1
 10391  007D86  0101               	movlb	1	; () banked
 10392  007D88  5146               	movf	___ftmul@sign& (0+255),w,b
 10393  007D8A  0F7B               	addlw	123
 10394  007D8C  0101               	movlb	1	; () banked
 10395  007D8E  2741               	addwf	___ftmul@exp& (0+255),f,b
 10396                           
 10397                           ; BSR set to: 1
 10398  007D90  C13A  F146         	movff	___ftmul@f1+2,___ftmul@sign
 10399  007D94  0101               	movlb	1	; () banked
 10400  007D96  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10401  007D98  0101               	movlb	1	; () banked
 10402  007D9A  1B46               	xorwf	___ftmul@sign& (0+255),f,b
 10403  007D9C  0E80               	movlw	128
 10404  007D9E  0101               	movlb	1	; () banked
 10405  007DA0  1746               	andwf	___ftmul@sign& (0+255),f,b
 10406                           
 10407                           ; BSR set to: 1
 10408  007DA2  0101               	movlb	1	; () banked
 10409  007DA4  8F39               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10410                           
 10411                           ; BSR set to: 1
 10412  007DA6  0101               	movlb	1	; () banked
 10413  007DA8  8F3C               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10414                           
 10415                           ; BSR set to: 1
 10416  007DAA  0EFF               	movlw	255
 10417  007DAC  0101               	movlb	1	; () banked
 10418  007DAE  173B               	andwf	___ftmul@f2& (0+255),f,b
 10419  007DB0  0EFF               	movlw	255
 10420  007DB2  0101               	movlb	1	; () banked
 10421  007DB4  173C               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10422  007DB6  0E00               	movlw	0
 10423  007DB8  0101               	movlb	1	; () banked
 10424  007DBA  173D               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10425                           
 10426                           ; BSR set to: 1
 10427  007DBC  0E00               	movlw	0
 10428  007DBE  0101               	movlb	1	; () banked
 10429  007DC0  6F42               	movwf	___ftmul@f3_as_product& (0+255),b
 10430  007DC2  0E00               	movlw	0
 10431  007DC4  0101               	movlb	1	; () banked
 10432  007DC6  6F43               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10433  007DC8  0E00               	movlw	0
 10434  007DCA  0101               	movlb	1	; () banked
 10435  007DCC  6F44               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10436                           
 10437                           ; BSR set to: 1
 10438  007DCE  0E07               	movlw	7
 10439  007DD0  0101               	movlb	1	; () banked
 10440  007DD2  6F45               	movwf	___ftmul@cntr& (0+255),b
 10441  007DD4                     l19432:
 10442                           
 10443                           ; BSR set to: 1
 10444  007DD4  0101               	movlb	1	; () banked
 10445  007DD6  A138               	btfss	___ftmul@f1& (0+255),0,b
 10446  007DD8  D00C               	goto	l19436
 10447                           
 10448                           ; BSR set to: 1
 10449  007DDA  0101               	movlb	1	; () banked
 10450  007DDC  513B               	movf	___ftmul@f2& (0+255),w,b
 10451  007DDE  0101               	movlb	1	; () banked
 10452  007DE0  2742               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10453  007DE2  0101               	movlb	1	; () banked
 10454  007DE4  513C               	movf	(___ftmul@f2+1)& (0+255),w,b
 10455  007DE6  0101               	movlb	1	; () banked
 10456  007DE8  2343               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10457  007DEA  0101               	movlb	1	; () banked
 10458  007DEC  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10459  007DEE  0101               	movlb	1	; () banked
 10460  007DF0  2344               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10461  007DF2                     l19436:
 10462                           
 10463                           ; BSR set to: 1
 10464  007DF2  0101               	movlb	1	; () banked
 10465  007DF4  90D8               	bcf	status,0,c
 10466  007DF6  333A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10467  007DF8  3339               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10468  007DFA  3338               	rrcf	___ftmul@f1& (0+255),f,b
 10469  007DFC  0101               	movlb	1	; () banked
 10470  007DFE  90D8               	bcf	status,0,c
 10471  007E00  373B               	rlcf	___ftmul@f2& (0+255),f,b
 10472  007E02  373C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10473  007E04  373D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10474                           
 10475                           ; BSR set to: 1
 10476  007E06  0101               	movlb	1	; () banked
 10477  007E08  2F45               	decfsz	___ftmul@cntr& (0+255),f,b
 10478  007E0A  D7E4               	goto	l19432
 10479                           
 10480                           ; BSR set to: 1
 10481                           
 10482                           ; BSR set to: 1
 10483  007E0C  0E09               	movlw	9
 10484  007E0E  0101               	movlb	1	; () banked
 10485  007E10  6F45               	movwf	___ftmul@cntr& (0+255),b
 10486  007E12                     l19442:
 10487                           
 10488                           ; BSR set to: 1
 10489  007E12  0101               	movlb	1	; () banked
 10490  007E14  A138               	btfss	___ftmul@f1& (0+255),0,b
 10491  007E16  D00C               	goto	l19446
 10492                           
 10493                           ; BSR set to: 1
 10494  007E18  0101               	movlb	1	; () banked
 10495  007E1A  513B               	movf	___ftmul@f2& (0+255),w,b
 10496  007E1C  0101               	movlb	1	; () banked
 10497  007E1E  2742               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10498  007E20  0101               	movlb	1	; () banked
 10499  007E22  513C               	movf	(___ftmul@f2+1)& (0+255),w,b
 10500  007E24  0101               	movlb	1	; () banked
 10501  007E26  2343               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10502  007E28  0101               	movlb	1	; () banked
 10503  007E2A  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10504  007E2C  0101               	movlb	1	; () banked
 10505  007E2E  2344               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10506  007E30                     l19446:
 10507                           
 10508                           ; BSR set to: 1
 10509  007E30  0101               	movlb	1	; () banked
 10510  007E32  90D8               	bcf	status,0,c
 10511  007E34  333A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10512  007E36  3339               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10513  007E38  3338               	rrcf	___ftmul@f1& (0+255),f,b
 10514  007E3A  0101               	movlb	1	; () banked
 10515  007E3C  90D8               	bcf	status,0,c
 10516  007E3E  3344               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10517  007E40  3343               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10518  007E42  3342               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 1
 10521  007E44  0101               	movlb	1	; () banked
 10522  007E46  2F45               	decfsz	___ftmul@cntr& (0+255),f,b
 10523  007E48  D7E4               	goto	l19442
 10524                           
 10525                           ; BSR set to: 1
 10526                           
 10527                           ; BSR set to: 1
 10528  007E4A  C142  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
 10529  007E4E  C143  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10530  007E52  C144  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10531  007E56  C141  F103         	movff	___ftmul@exp,___ftpack@exp
 10532  007E5A  C146  F104         	movff	___ftmul@sign,___ftpack@sign
 10533  007E5E  ECC2  F047         	call	___ftpack	;wreg free
 10534  007E62  C100  F138         	movff	?___ftpack,?___ftmul
 10535  007E66  C101  F139         	movff	?___ftpack+1,?___ftmul+1
 10536  007E6A  C102  F13A         	movff	?___ftpack+2,?___ftmul+2
 10537  007E6E  0012               	return	
 10538  007E70                     __end_of___ftmul:
 10539                           	opt stack 0
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           postinc0	equ	0xFEE
 10547                           plusw0	equ	0xFEB
 10548                           wreg	equ	0xFE8
 10549                           postdec1	equ	0xFE5
 10550                           fsr1h	equ	0xFE2
 10551                           fsr1l	equ	0xFE1
 10552                           indf2	equ	0xFDF
 10553                           postinc2	equ	0xFDE
 10554                           postdec2	equ	0xFDD
 10555                           plusw2	equ	0xFDB
 10556                           fsr2h	equ	0xFDA
 10557                           fsr2l	equ	0xFD9
 10558                           status	equ	0xFD8
 10559                           
 10560 ;; *************** function ___ftpack *****************
 10561 ;; Defined at:
 10562 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  arg             3    0[BANK1 ] unsigned um
 10565 ;;  exp             1    3[BANK1 ] unsigned char 
 10566 ;;  sign            1    4[BANK1 ] unsigned char 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  3    0[BANK1 ] float 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10578 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;Total ram usage:        8 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:   16
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		___altoft
 10589 ;;		___ftadd
 10590 ;;		___ftmul
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text23
 10595  008F84                     __ptext23:
 10596                           	opt stack 0
 10597  008F84                     ___ftpack:
 10598                           	opt stack 11
 10599                           
 10600                           ;incstack = 0
 10601  008F84  0101               	movlb	1	; () banked
 10602  008F86  5103               	movf	___ftpack@exp& (0+255),w,b
 10603  008F88  0101               	movlb	1	; () banked
 10604  008F8A  B4D8               	btfsc	status,2,c
 10605  008F8C  D008               	goto	l17804
 10606                           
 10607                           ; BSR set to: 1
 10608  008F8E  0101               	movlb	1	; () banked
 10609  008F90  5100               	movf	___ftpack@arg& (0+255),w,b
 10610  008F92  0101               	movlb	1	; () banked
 10611  008F94  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10612  008F96  0101               	movlb	1	; () banked
 10613  008F98  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10614  008F9A  A4D8               	btfss	status,2,c
 10615  008F9C  D011               	goto	l17810
 10616  008F9E                     l17804:
 10617                           
 10618                           ; BSR set to: 1
 10619  008F9E  0E00               	movlw	0
 10620  008FA0  0101               	movlb	1	; () banked
 10621  008FA2  6F00               	movwf	?___ftpack& (0+255),b
 10622  008FA4  0E00               	movlw	0
 10623  008FA6  0101               	movlb	1	; () banked
 10624  008FA8  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10625  008FAA  0E00               	movlw	0
 10626  008FAC  0101               	movlb	1	; () banked
 10627  008FAE  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10628                           
 10629                           ; BSR set to: 1
 10630  008FB0  0012               	return	
 10631  008FB2                     l17808:
 10632                           
 10633                           ; BSR set to: 1
 10634  008FB2  0101               	movlb	1	; () banked
 10635  008FB4  2B03               	incf	___ftpack@exp& (0+255),f,b
 10636  008FB6  0101               	movlb	1	; () banked
 10637  008FB8  90D8               	bcf	status,0,c
 10638  008FBA  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10639  008FBC  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10640  008FBE  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10641  008FC0                     l17810:
 10642                           
 10643                           ; BSR set to: 1
 10644  008FC0  0E00               	movlw	0
 10645  008FC2  0101               	movlb	1	; () banked
 10646  008FC4  1500               	andwf	___ftpack@arg& (0+255),w,b
 10647  008FC6  0101               	movlb	1	; () banked
 10648  008FC8  6F05               	movwf	??___ftpack& (0+255),b
 10649  008FCA  0E00               	movlw	0
 10650  008FCC  0101               	movlb	1	; () banked
 10651  008FCE  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10652  008FD0  0101               	movlb	1	; () banked
 10653  008FD2  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10654  008FD4  0EFE               	movlw	254
 10655  008FD6  0101               	movlb	1	; () banked
 10656  008FD8  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10657  008FDA  0101               	movlb	1	; () banked
 10658  008FDC  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10659  008FDE  0101               	movlb	1	; () banked
 10660  008FE0  5105               	movf	??___ftpack& (0+255),w,b
 10661  008FE2  0101               	movlb	1	; () banked
 10662  008FE4  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10663  008FE6  0101               	movlb	1	; () banked
 10664  008FE8  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10665  008FEA  B4D8               	btfsc	status,2,c
 10666  008FEC  D011               	goto	l17816
 10667  008FEE  D7E1               	goto	l17808
 10668  008FF0                     l17812:
 10669                           
 10670                           ; BSR set to: 1
 10671  008FF0  0101               	movlb	1	; () banked
 10672  008FF2  2B03               	incf	___ftpack@exp& (0+255),f,b
 10673                           
 10674                           ; BSR set to: 1
 10675  008FF4  0E01               	movlw	1
 10676  008FF6  0101               	movlb	1	; () banked
 10677  008FF8  2700               	addwf	___ftpack@arg& (0+255),f,b
 10678  008FFA  0E00               	movlw	0
 10679  008FFC  0101               	movlb	1	; () banked
 10680  008FFE  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10681  009000  0E00               	movlw	0
 10682  009002  0101               	movlb	1	; () banked
 10683  009004  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10684  009006  0101               	movlb	1	; () banked
 10685  009008  90D8               	bcf	status,0,c
 10686  00900A  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10687  00900C  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10688  00900E  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10689  009010                     l17816:
 10690                           
 10691                           ; BSR set to: 1
 10692  009010  0E00               	movlw	0
 10693  009012  0101               	movlb	1	; () banked
 10694  009014  1500               	andwf	___ftpack@arg& (0+255),w,b
 10695  009016  0101               	movlb	1	; () banked
 10696  009018  6F05               	movwf	??___ftpack& (0+255),b
 10697  00901A  0E00               	movlw	0
 10698  00901C  0101               	movlb	1	; () banked
 10699  00901E  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10700  009020  0101               	movlb	1	; () banked
 10701  009022  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10702  009024  0EFF               	movlw	255
 10703  009026  0101               	movlb	1	; () banked
 10704  009028  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10705  00902A  0101               	movlb	1	; () banked
 10706  00902C  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10707  00902E  0101               	movlb	1	; () banked
 10708  009030  5105               	movf	??___ftpack& (0+255),w,b
 10709  009032  0101               	movlb	1	; () banked
 10710  009034  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10711  009036  0101               	movlb	1	; () banked
 10712  009038  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10713  00903A  B4D8               	btfsc	status,2,c
 10714  00903C  D008               	goto	l17820
 10715  00903E  D7D8               	goto	l17812
 10716  009040                     l17818:
 10717                           
 10718                           ; BSR set to: 1
 10719  009040  0101               	movlb	1	; () banked
 10720  009042  0703               	decf	___ftpack@exp& (0+255),f,b
 10721  009044  0101               	movlb	1	; () banked
 10722  009046  90D8               	bcf	status,0,c
 10723  009048  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10724  00904A  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10725  00904C  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10726  00904E                     l17820:
 10727                           
 10728                           ; BSR set to: 1
 10729  00904E  0101               	movlb	1	; () banked
 10730  009050  BF01               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10731  009052  D004               	goto	l2445
 10732                           
 10733                           ; BSR set to: 1
 10734  009054  0E02               	movlw	2
 10735  009056  0101               	movlb	1	; () banked
 10736  009058  6103               	cpfslt	___ftpack@exp& (0+255),b
 10737  00905A  D7F2               	goto	l17818
 10738  00905C                     l2445:
 10739                           
 10740                           ; BSR set to: 1
 10741  00905C  0101               	movlb	1	; () banked
 10742  00905E  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10743  009060  D002               	goto	l17826
 10744                           
 10745                           ; BSR set to: 1
 10746  009062  0101               	movlb	1	; () banked
 10747  009064  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10748  009066                     l17826:
 10749                           
 10750                           ; BSR set to: 1
 10751  009066  0101               	movlb	1	; () banked
 10752  009068  90D8               	bcf	status,0,c
 10753  00906A  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10754  00906C  0101               	movlb	1	; () banked
 10755  00906E  5103               	movf	___ftpack@exp& (0+255),w,b
 10756  009070  0101               	movlb	1	; () banked
 10757  009072  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10758                           
 10759                           ; BSR set to: 1
 10760  009074  0101               	movlb	1	; () banked
 10761  009076  5104               	movf	___ftpack@sign& (0+255),w,b
 10762  009078  0101               	movlb	1	; () banked
 10763  00907A  B4D8               	btfsc	status,2,c
 10764  00907C  D002               	goto	l17832
 10765                           
 10766                           ; BSR set to: 1
 10767  00907E  0101               	movlb	1	; () banked
 10768  009080  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10769  009082                     l17832:
 10770                           
 10771                           ; BSR set to: 1
 10772  009082  C100  F100         	movff	___ftpack@arg,?___ftpack
 10773  009086  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 10774  00908A  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 10775  00908E  0012               	return	
 10776  009090                     __end_of___ftpack:
 10777                           	opt stack 0
 10778                           tblptru	equ	0xFF8
 10779                           tblptrh	equ	0xFF7
 10780                           tblptrl	equ	0xFF6
 10781                           tablat	equ	0xFF5
 10782                           prodh	equ	0xFF4
 10783                           prodl	equ	0xFF3
 10784                           postinc0	equ	0xFEE
 10785                           plusw0	equ	0xFEB
 10786                           wreg	equ	0xFE8
 10787                           postdec1	equ	0xFE5
 10788                           fsr1h	equ	0xFE2
 10789                           fsr1l	equ	0xFE1
 10790                           indf2	equ	0xFDF
 10791                           postinc2	equ	0xFDE
 10792                           postdec2	equ	0xFDD
 10793                           plusw2	equ	0xFDB
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function _send_answer_to_update *****************
 10799 ;; Defined at:
 10800 ;;		line 548 in file "src/main.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;  tmp             1    0        unsigned char 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;		None               void
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10816 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;Total ram usage:        1 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:   18
 10821 ;; This function calls:
 10822 ;;		_dBm_to_mW_ufixed16
 10823 ;;		_encode_ufixed16_variable
 10824 ;;		_encode_uint8_variable
 10825 ;;		_memcpy
 10826 ;;		_sendHIDBinary
 10827 ;; This function is called by:
 10828 ;;		_main
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text24
 10833  007880                     __ptext24:
 10834                           	opt stack 0
 10835  007880                     _send_answer_to_update:
 10836                           	opt stack 12
 10837                           
 10838                           ;main.c: 550: p_buffer = m_buffer;
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;incstack = 0
 10842  007880  0ED1               	movlw	low _m_buffer
 10843  007882  0101               	movlb	1	; () banked
 10844  007884  6FB9               	movwf	_p_buffer& (0+255),b
 10845  007886  0E02               	movlw	high _m_buffer
 10846  007888  0101               	movlb	1	; () banked
 10847  00788A  6FBA               	movwf	(_p_buffer+1)& (0+255),b
 10848                           
 10849                           ; BSR set to: 1
 10850                           ;main.c: 551: *(p_buffer++) = 0x4d;
 10851  00788C  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10852  007890  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10853  007894  0E4D               	movlw	77
 10854  007896  6EDF               	movwf	indf2,c
 10855                           
 10856                           ; BSR set to: 1
 10857  007898  0101               	movlb	1	; () banked
 10858  00789A  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10859  00789C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10860                           
 10861                           ; BSR set to: 1
 10862                           ;main.c: 552: *(p_buffer++) = 0x00;
 10863  00789E  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10864  0078A2  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10865  0078A6  0E00               	movlw	0
 10866  0078A8  6EDF               	movwf	indf2,c
 10867                           
 10868                           ; BSR set to: 1
 10869  0078AA  0101               	movlb	1	; () banked
 10870  0078AC  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10871  0078AE  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10872                           
 10873                           ; BSR set to: 1
 10874                           ;main.c: 553: *(p_buffer++) = 0x00;
 10875  0078B0  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10876  0078B4  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10877  0078B8  0E00               	movlw	0
 10878  0078BA  6EDF               	movwf	indf2,c
 10879                           
 10880                           ; BSR set to: 1
 10881  0078BC  0101               	movlb	1	; () banked
 10882  0078BE  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10883  0078C0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10884                           
 10885                           ; BSR set to: 1
 10886                           ;main.c: 554: *(p_buffer++) = 04;
 10887  0078C2  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10888  0078C6  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10889  0078CA  0E04               	movlw	4
 10890  0078CC  6EDF               	movwf	indf2,c
 10891                           
 10892                           ; BSR set to: 1
 10893  0078CE  0101               	movlb	1	; () banked
 10894  0078D0  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10895  0078D2  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;main.c: 555: *(p_buffer++) = 0xff;
 10899  0078D4  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10900  0078D8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10901  0078DC  0EFF               	movlw	255
 10902  0078DE  6EDF               	movwf	indf2,c
 10903                           
 10904                           ; BSR set to: 1
 10905  0078E0  0101               	movlb	1	; () banked
 10906  0078E2  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10907  0078E4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;main.c: 557: if (Pwr_updated)
 10911  0078E6  0100               	movlb	0	; () banked
 10912  0078E8  519A               	movf	_Pwr_updated& (0+255),w,b
 10913  0078EA  B4D8               	btfsc	status,2,c
 10914  0078EC  D046               	goto	l21090
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;main.c: 558: {
 10918                           ;main.c: 560: memcpy(m_var.label, POWER_LABEL, 3);
 10919  0078EE  0EDE               	movlw	low _m_var
 10920  0078F0  0101               	movlb	1	; () banked
 10921  0078F2  6F00               	movwf	memcpy@d1& (0+255),b
 10922  0078F4  0E01               	movlw	high _m_var
 10923  0078F6  0101               	movlb	1	; () banked
 10924  0078F8  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 10925  0078FA  0EC1               	movlw	low _POWER_LABEL
 10926  0078FC  0101               	movlb	1	; () banked
 10927  0078FE  6F02               	movwf	memcpy@s1& (0+255),b
 10928  007900  0E21               	movlw	high _POWER_LABEL
 10929  007902  0101               	movlb	1	; () banked
 10930  007904  6F03               	movwf	(memcpy@s1+1)& (0+255),b
 10931  007906  0E00               	movlw	0
 10932  007908  0101               	movlb	1	; () banked
 10933  00790A  6F05               	movwf	(memcpy@n+1)& (0+255),b
 10934  00790C  0E03               	movlw	3
 10935  00790E  6F04               	movwf	memcpy@n& (0+255),b
 10936  007910  EC94  F059         	call	_memcpy	;wreg free
 10937                           
 10938                           ;main.c: 561: m_var.unit = 8;
 10939  007914  0E08               	movlw	8
 10940  007916  0101               	movlb	1	; () banked
 10941  007918  6FE4               	movwf	(_m_var+6)& (0+255),b
 10942                           
 10943                           ; BSR set to: 1
 10944                           ;main.c: 562: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
 10945  00791A  0EE2               	movlw	low (_m_var+4)
 10946  00791C  0101               	movlb	1	; () banked
 10947  00791E  6F00               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
 10948  007920  0E01               	movlw	high (_m_var+4)
 10949  007922  0101               	movlb	1	; () banked
 10950  007924  6F01               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
 10951  007926  0EE3               	movlw	low (_m_var+5)
 10952  007928  0101               	movlb	1	; () banked
 10953  00792A  6F02               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
 10954  00792C  0E01               	movlw	high (_m_var+5)
 10955  00792E  0101               	movlb	1	; () banked
 10956  007930  6F03               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
 10957  007932  0101               	movlb	1	; () banked
 10958  007934  51C8               	movf	_m_power& (0+255),w,b
 10959  007936  EC81  F045         	call	_dBm_to_mW_ufixed16
 10960                           
 10961                           ;main.c: 563: m_var.writable = 1;
 10962  00793A  0E01               	movlw	1
 10963  00793C  0101               	movlb	1	; () banked
 10964  00793E  6FE5               	movwf	(_m_var+7)& (0+255),b
 10965                           
 10966                           ; BSR set to: 1
 10967                           ;main.c: 564: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
 10968  007940  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
 10969  007944  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
 10970  007948  EE21  F0DE         	lfsr	2,_m_var
 10971  00794C  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
 10972  007950  0E09               	movlw	9
 10973  007952                     u23941:
 10974  007952  CFDB FFEB          	movff	plusw2,plusw0
 10975  007956  06E8               	decf	wreg,f,c
 10976  007958  E2FC               	bc	u23941
 10977  00795A  ECFE  F050         	call	_encode_ufixed16_variable	;wreg free
 10978  00795E  0101               	movlb	1	; () banked
 10979  007960  6F10               	movwf	??_send_answer_to_update& (0+255),b
 10980  007962  0101               	movlb	1	; () banked
 10981  007964  5110               	movf	??_send_answer_to_update& (0+255),w,b
 10982  007966  0D01               	mullw	1
 10983  007968  50F3               	movf	prodl,w,c
 10984  00796A  0101               	movlb	1	; () banked
 10985  00796C  27B9               	addwf	_p_buffer& (0+255),f,b
 10986  00796E  50F4               	movf	prodh,w,c
 10987  007970  0101               	movlb	1	; () banked
 10988  007972  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
 10989                           
 10990                           ; BSR set to: 1
 10991                           ;main.c: 565: Pwr_updated = 0;
 10992  007974  0E00               	movlw	0
 10993  007976  0100               	movlb	0	; () banked
 10994  007978  6F9A               	movwf	_Pwr_updated& (0+255),b
 10995  00797A                     l21090:
 10996                           
 10997                           ; BSR set to: 0
 10998                           ;main.c: 566: }
 10999                           ;main.c: 567: if (UpF_updated)
 11000  00797A  0100               	movlb	0	; () banked
 11001  00797C  519E               	movf	_UpF_updated& (0+255),w,b
 11002  00797E  B4D8               	btfsc	status,2,c
 11003  007980  D038               	goto	l21104
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;main.c: 568: {
 11007                           ;main.c: 570: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
 11008  007982  0EDE               	movlw	low _m_var
 11009  007984  0101               	movlb	1	; () banked
 11010  007986  6F00               	movwf	memcpy@d1& (0+255),b
 11011  007988  0E01               	movlw	high _m_var
 11012  00798A  0101               	movlb	1	; () banked
 11013  00798C  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 11014  00798E  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
 11015  007990  0101               	movlb	1	; () banked
 11016  007992  6F02               	movwf	memcpy@s1& (0+255),b
 11017  007994  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
 11018  007996  0101               	movlb	1	; () banked
 11019  007998  6F03               	movwf	(memcpy@s1+1)& (0+255),b
 11020  00799A  0E00               	movlw	0
 11021  00799C  0101               	movlb	1	; () banked
 11022  00799E  6F05               	movwf	(memcpy@n+1)& (0+255),b
 11023  0079A0  0E03               	movlw	3
 11024  0079A2  6F04               	movwf	memcpy@n& (0+255),b
 11025  0079A4  EC94  F059         	call	_memcpy	;wreg free
 11026                           
 11027                           ;main.c: 571: m_var.unit = 4;
 11028  0079A8  0E04               	movlw	4
 11029  0079AA  0101               	movlb	1	; () banked
 11030  0079AC  6FE4               	movwf	(_m_var+6)& (0+255),b
 11031                           
 11032                           ; BSR set to: 1
 11033                           ;main.c: 572: m_var.value_byte1 = m_update_frequency;
 11034  0079AE  C1FA  F1E2         	movff	_m_update_frequency,_m_var+4	;volatile
 11035                           
 11036                           ; BSR set to: 1
 11037                           ;main.c: 573: m_var.writable = 1;
 11038  0079B2  0E01               	movlw	1
 11039  0079B4  0101               	movlb	1	; () banked
 11040  0079B6  6FE5               	movwf	(_m_var+7)& (0+255),b
 11041                           
 11042                           ; BSR set to: 1
 11043                           ;main.c: 574: p_buffer += encode_uint8_variable(p_buffer, m_var);
 11044  0079B8  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
 11045  0079BC  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
 11046  0079C0  EE21  F0DE         	lfsr	2,_m_var
 11047  0079C4  EE01  F002         	lfsr	0,encode_uint8_variable@var
 11048  0079C8  0E09               	movlw	9
 11049  0079CA                     u23961:
 11050  0079CA  CFDB FFEB          	movff	plusw2,plusw0
 11051  0079CE  06E8               	decf	wreg,f,c
 11052  0079D0  E2FC               	bc	u23961
 11053  0079D2  EC8C  F054         	call	_encode_uint8_variable	;wreg free
 11054  0079D6  0101               	movlb	1	; () banked
 11055  0079D8  6F10               	movwf	??_send_answer_to_update& (0+255),b
 11056  0079DA  0101               	movlb	1	; () banked
 11057  0079DC  5110               	movf	??_send_answer_to_update& (0+255),w,b
 11058  0079DE  0D01               	mullw	1
 11059  0079E0  50F3               	movf	prodl,w,c
 11060  0079E2  0101               	movlb	1	; () banked
 11061  0079E4  27B9               	addwf	_p_buffer& (0+255),f,b
 11062  0079E6  50F4               	movf	prodh,w,c
 11063  0079E8  0101               	movlb	1	; () banked
 11064  0079EA  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
 11065                           
 11066                           ; BSR set to: 1
 11067                           ;main.c: 575: UpF_updated = 0;
 11068  0079EC  0E00               	movlw	0
 11069  0079EE  0100               	movlb	0	; () banked
 11070  0079F0  6F9E               	movwf	_UpF_updated& (0+255),b
 11071  0079F2                     l21104:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;main.c: 576: }
 11075                           ;main.c: 578: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
 11076  0079F2  0ED1               	movlw	low _m_buffer
 11077  0079F4  0101               	movlb	1	; () banked
 11078  0079F6  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
 11079  0079F8  0E02               	movlw	high _m_buffer
 11080  0079FA  0101               	movlb	1	; () banked
 11081  0079FC  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
 11082  0079FE  0ED1               	movlw	_m_buffer& (0+255)
 11083  007A00  0800               	sublw	0
 11084  007A02  0101               	movlb	1	; () banked
 11085  007A04  25B9               	addwf	_p_buffer& (0+255),w,b
 11086  007A06  0101               	movlb	1	; () banked
 11087  007A08  6F0C               	movwf	sendHIDBinary@length& (0+255),b
 11088  007A0A  EC7D  F055         	call	_sendHIDBinary	;wreg free
 11089                           
 11090                           ;main.c: 579: _delay((unsigned long)((20)*(16000000/4000.0)));
 11091  007A0E  0E68               	movlw	104
 11092  007A10  0101               	movlb	1	; () banked
 11093  007A12  6F10               	movwf	??_send_answer_to_update& (0+255),b
 11094  007A14  0EE4               	movlw	228
 11095  007A16                     u25277:
 11096  007A16  2EE8               	decfsz	wreg,f,c
 11097  007A18  D7FE               	goto	u25277
 11098  007A1A  2F10               	decfsz	??_send_answer_to_update& (0+255),f,b
 11099  007A1C  D7FC               	goto	u25277
 11100  007A1E  D000               	nop2	
 11101  007A20  0012               	return		;funcret
 11102  007A22                     __end_of_send_answer_to_update:
 11103                           	opt stack 0
 11104                           tblptru	equ	0xFF8
 11105                           tblptrh	equ	0xFF7
 11106                           tblptrl	equ	0xFF6
 11107                           tablat	equ	0xFF5
 11108                           prodh	equ	0xFF4
 11109                           prodl	equ	0xFF3
 11110                           postinc0	equ	0xFEE
 11111                           plusw0	equ	0xFEB
 11112                           wreg	equ	0xFE8
 11113                           postdec1	equ	0xFE5
 11114                           fsr1h	equ	0xFE2
 11115                           fsr1l	equ	0xFE1
 11116                           indf2	equ	0xFDF
 11117                           postinc2	equ	0xFDE
 11118                           postdec2	equ	0xFDD
 11119                           plusw2	equ	0xFDB
 11120                           fsr2h	equ	0xFDA
 11121                           fsr2l	equ	0xFD9
 11122                           status	equ	0xFD8
 11123                           
 11124 ;; *************** function _sendHIDBinary *****************
 11125 ;; Defined at:
 11126 ;;		line 681 in file "src/main.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
 11129 ;;		 -> m_buffer(32), 
 11130 ;;  length          1   12[BANK1 ] unsigned char 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      unsigned char 
 11135 ;; Registers used:
 11136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11142 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11143 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11145 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11146 ;;Total ram usage:        6 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:   17
 11149 ;; This function calls:
 11150 ;;		_USBTransferOnePacket
 11151 ;;		_memcpy
 11152 ;; This function is called by:
 11153 ;;		_main
 11154 ;;		_send_network_register
 11155 ;;		_send_complete_update
 11156 ;;		_send_answer_to_update
 11157 ;;		_send_periodic_update
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text25
 11162  00AAFA                     __ptext25:
 11163                           	opt stack 0
 11164  00AAFA                     _sendHIDBinary:
 11165                           	opt stack 12
 11166                           
 11167                           ;main.c: 683: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11168                           
 11169                           ;incstack = 0
 11170  00AAFA  0E1F               	movlw	31
 11171  00AAFC  644B               	cpfsgt	_USBDeviceState,c	;volatile
 11172  00AAFE  0012               	return	
 11173  00AB00  B265               	btfsc	3941,1,c	;volatile
 11174  00AB02  0012               	return	
 11175  00AB04                     l19158:
 11176                           
 11177                           ;main.c: 688: {
 11178                           ;main.c: 689: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
 11179  00AB04  0100               	movlb	0	; () banked
 11180  00AB06  5193               	movf	_USBInHandle& (0+255),w,b
 11181  00AB08  0100               	movlb	0	; () banked
 11182  00AB0A  1194               	iorwf	(_USBInHandle+1)& (0+255),w,b
 11183  00AB0C  B4D8               	btfsc	status,2,c
 11184  00AB0E  D013               	goto	l19162
 11185                           
 11186                           ; BSR set to: 0
 11187  00AB10  C093  FFD9         	movff	_USBInHandle,fsr2l
 11188  00AB14  C094  FFDA         	movff	_USBInHandle+1,fsr2h
 11189  00AB18  0100               	movlb	0	; () banked
 11190  00AB1A  AEDF               	btfss	indf2,7,c
 11191  00AB1C  D004               	goto	u21900
 11192  00AB1E  0101               	movlb	1	; () banked
 11193  00AB20  6B0D               	clrf	??_sendHIDBinary& (0+255),b
 11194  00AB22  2B0D               	incf	??_sendHIDBinary& (0+255),f,b
 11195  00AB24  D002               	goto	u21908
 11196  00AB26                     u21900:
 11197  00AB26  0101               	movlb	1	; () banked
 11198  00AB28  6B0D               	clrf	??_sendHIDBinary& (0+255),b
 11199  00AB2A                     u21908:
 11200  00AB2A  0101               	movlb	1	; () banked
 11201  00AB2C  510D               	movf	??_sendHIDBinary& (0+255),w,b
 11202  00AB2E  0101               	movlb	1	; () banked
 11203  00AB30  6F0E               	movwf	_sendHIDBinary$4970& (0+255),b
 11204  00AB32  6B0F               	clrf	(_sendHIDBinary$4970+1)& (0+255),b
 11205  00AB34  D005               	goto	l19164
 11206  00AB36                     l19162:
 11207  00AB36  0E00               	movlw	0
 11208  00AB38  0101               	movlb	1	; () banked
 11209  00AB3A  6F0F               	movwf	(_sendHIDBinary$4970+1)& (0+255),b
 11210  00AB3C  0E00               	movlw	0
 11211  00AB3E  6F0E               	movwf	_sendHIDBinary$4970& (0+255),b
 11212  00AB40                     l19164:
 11213                           
 11214                           ; BSR set to: 1
 11215  00AB40  0101               	movlb	1	; () banked
 11216  00AB42  510E               	movf	_sendHIDBinary$4970& (0+255),w,b
 11217  00AB44  0101               	movlb	1	; () banked
 11218  00AB46  110F               	iorwf	(_sendHIDBinary$4970+1)& (0+255),w,b
 11219  00AB48  A4D8               	btfss	status,2,c
 11220  00AB4A  D7DC               	goto	l19158
 11221                           
 11222                           ; BSR set to: 1
 11223                           ;main.c: 690: {
 11224                           ;main.c: 691: memcpy(&ToSendDataBuffer[0], buffer, length);
 11225  00AB4C  0E84               	movlw	low _ToSendDataBuffer
 11226  00AB4E  0101               	movlb	1	; () banked
 11227  00AB50  6F00               	movwf	memcpy@d1& (0+255),b
 11228  00AB52  0E03               	movlw	high _ToSendDataBuffer
 11229  00AB54  0101               	movlb	1	; () banked
 11230  00AB56  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 11231  00AB58  C10A  F102         	movff	sendHIDBinary@buffer,memcpy@s1
 11232  00AB5C  C10B  F103         	movff	sendHIDBinary@buffer+1,memcpy@s1+1
 11233  00AB60  C10C  F104         	movff	sendHIDBinary@length,memcpy@n
 11234  00AB64  0101               	movlb	1	; () banked
 11235  00AB66  6B05               	clrf	(memcpy@n+1)& (0+255),b
 11236  00AB68  EC94  F059         	call	_memcpy	;wreg free
 11237                           
 11238                           ;main.c: 692: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],length);
 11239  00AB6C  0E01               	movlw	1
 11240  00AB6E  0101               	movlb	1	; () banked
 11241  00AB70  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
 11242  00AB72  0E84               	movlw	low _ToSendDataBuffer
 11243  00AB74  0101               	movlb	1	; () banked
 11244  00AB76  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
 11245  00AB78  0E03               	movlw	high _ToSendDataBuffer
 11246  00AB7A  0101               	movlb	1	; () banked
 11247  00AB7C  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11248  00AB7E  C10C  F103         	movff	sendHIDBinary@length,USBTransferOnePacket@len
 11249  00AB82  0E01               	movlw	1
 11250  00AB84  ECA4  F04C         	call	_USBTransferOnePacket
 11251  00AB88  C100  F093         	movff	?_USBTransferOnePacket,_USBInHandle
 11252  00AB8C  C101  F094         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 11253                           
 11254                           ;main.c: 693: return 1;
 11255                           ;	Return value of _sendHIDBinary is never used
 11256  00AB90  0012               	return	
 11257  00AB92                     __end_of_sendHIDBinary:
 11258                           	opt stack 0
 11259                           tblptru	equ	0xFF8
 11260                           tblptrh	equ	0xFF7
 11261                           tblptrl	equ	0xFF6
 11262                           tablat	equ	0xFF5
 11263                           prodh	equ	0xFF4
 11264                           prodl	equ	0xFF3
 11265                           postinc0	equ	0xFEE
 11266                           plusw0	equ	0xFEB
 11267                           wreg	equ	0xFE8
 11268                           postdec1	equ	0xFE5
 11269                           fsr1h	equ	0xFE2
 11270                           fsr1l	equ	0xFE1
 11271                           indf2	equ	0xFDF
 11272                           postinc2	equ	0xFDE
 11273                           postdec2	equ	0xFDD
 11274                           plusw2	equ	0xFDB
 11275                           fsr2h	equ	0xFDA
 11276                           fsr2l	equ	0xFD9
 11277                           status	equ	0xFD8
 11278                           
 11279 ;; *************** function _encode_uint8_variable *****************
 11280 ;; Defined at:
 11281 ;;		line 118 in file "../../muta/muta_messages.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 11284 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 11285 ;;  var            10    2[BANK1 ] struct .
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  m_writable      1   14[BANK1 ] unsigned char 
 11288 ;;  m_signed        1   13[BANK1 ] unsigned char 
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      unsigned char 
 11291 ;; Registers used:
 11292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11298 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11299 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11300 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11301 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11302 ;;Total ram usage:       15 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:   16
 11305 ;; This function calls:
 11306 ;;		Nothing
 11307 ;; This function is called by:
 11308 ;;		_send_complete_update
 11309 ;;		_send_answer_to_update
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text26
 11314  00A918                     __ptext26:
 11315                           	opt stack 0
 11316  00A918                     _encode_uint8_variable:
 11317                           	opt stack 13
 11318                           
 11319                           ;muta_messages.c: 120: *(buffer++) = var.label[0];
 11320                           
 11321                           ;incstack = 0
 11322  00A918  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11323  00A91C  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11324  00A920  C102  FFDF         	movff	encode_uint8_variable@var,indf2
 11325  00A924  0101               	movlb	1	; () banked
 11326  00A926  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11327  00A928  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11328                           
 11329                           ; BSR set to: 1
 11330                           ;muta_messages.c: 121: *(buffer++) = var.label[1];
 11331  00A92A  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11332  00A92E  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11333  00A932  C103  FFDF         	movff	encode_uint8_variable@var+1,indf2
 11334  00A936  0101               	movlb	1	; () banked
 11335  00A938  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11336  00A93A  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11337                           
 11338                           ; BSR set to: 1
 11339                           ;muta_messages.c: 122: *(buffer++) = var.label[2];
 11340  00A93C  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11341  00A940  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11342  00A944  C104  FFDF         	movff	encode_uint8_variable@var+2,indf2
 11343                           
 11344                           ; BSR set to: 1
 11345  00A948  0101               	movlb	1	; () banked
 11346  00A94A  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11347  00A94C  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11348                           
 11349                           ; BSR set to: 1
 11350                           ;muta_messages.c: 123: uint8_t m_signed = 0;
 11351  00A94E  0E00               	movlw	0
 11352  00A950  0101               	movlb	1	; () banked
 11353  00A952  6F0D               	movwf	encode_uint8_variable@m_signed& (0+255),b
 11354                           
 11355                           ; BSR set to: 1
 11356                           ;muta_messages.c: 124: uint8_t m_writable = 0;
 11357  00A954  0E00               	movlw	0
 11358  00A956  0101               	movlb	1	; () banked
 11359  00A958  6F0E               	movwf	encode_uint8_variable@m_writable& (0+255),b
 11360                           
 11361                           ; BSR set to: 1
 11362                           ;muta_messages.c: 125: if (var._signed)
 11363  00A95A  0101               	movlb	1	; () banked
 11364  00A95C  510A               	movf	(encode_uint8_variable@var+8)& (0+255),w,b
 11365  00A95E  B4D8               	btfsc	status,2,c
 11366  00A960  D003               	goto	l2028
 11367                           
 11368                           ; BSR set to: 1
 11369                           ;muta_messages.c: 126: { m_signed = 1; }
 11370  00A962  0E01               	movlw	1
 11371  00A964  0101               	movlb	1	; () banked
 11372  00A966  6F0D               	movwf	encode_uint8_variable@m_signed& (0+255),b
 11373  00A968                     l2028:
 11374                           
 11375                           ; BSR set to: 1
 11376                           ;muta_messages.c: 127: if (var.writable)
 11377  00A968  0101               	movlb	1	; () banked
 11378  00A96A  5109               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
 11379  00A96C  B4D8               	btfsc	status,2,c
 11380  00A96E  D003               	goto	l19254
 11381                           
 11382                           ; BSR set to: 1
 11383                           ;muta_messages.c: 128: { m_writable = 1; }
 11384  00A970  0E01               	movlw	1
 11385  00A972  0101               	movlb	1	; () banked
 11386  00A974  6F0E               	movwf	encode_uint8_variable@m_writable& (0+255),b
 11387  00A976                     l19254:
 11388                           
 11389                           ; BSR set to: 1
 11390                           ;muta_messages.c: 129: var.type = (0 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
 11391  00A976  C10E  F10C         	movff	encode_uint8_variable@m_writable,??_encode_uint8_variable
 11392  00A97A  0101               	movlb	1	; () banked
 11393  00A97C  3B0C               	swapf	??_encode_uint8_variable& (0+255),f,b
 11394  00A97E  0EF0               	movlw	240
 11395  00A980  170C               	andwf	??_encode_uint8_variable& (0+255),f,b
 11396  00A982  0101               	movlb	1	; () banked
 11397  00A984  390D               	swapf	encode_uint8_variable@m_signed& (0+255),w,b
 11398  00A986  46E8               	rlncf	wreg,f,c
 11399  00A988  0BE0               	andlw	224
 11400  00A98A  0101               	movlb	1	; () banked
 11401  00A98C  250C               	addwf	??_encode_uint8_variable& (0+255),w,b
 11402  00A98E  0101               	movlb	1	; () banked
 11403  00A990  2508               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
 11404  00A992  0101               	movlb	1	; () banked
 11405  00A994  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
 11406                           
 11407                           ; BSR set to: 1
 11408                           ;muta_messages.c: 130: *(buffer++) = var.type;
 11409  00A996  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11410  00A99A  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11411  00A99E  C105  FFDF         	movff	encode_uint8_variable@var+3,indf2
 11412                           
 11413                           ; BSR set to: 1
 11414  00A9A2  0101               	movlb	1	; () banked
 11415  00A9A4  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11416  00A9A6  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11417                           
 11418                           ; BSR set to: 1
 11419                           ;muta_messages.c: 131: *(buffer++) = var.value_byte1;
 11420  00A9A8  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11421  00A9AC  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11422  00A9B0  C106  FFDF         	movff	encode_uint8_variable@var+4,indf2
 11423                           
 11424                           ; BSR set to: 1
 11425  00A9B4  0101               	movlb	1	; () banked
 11426  00A9B6  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11427  00A9B8  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11428                           
 11429                           ; BSR set to: 1
 11430                           ;muta_messages.c: 132: return 5;
 11431  00A9BA  0E05               	movlw	5
 11432  00A9BC  0012               	return	
 11433  00A9BE                     __end_of_encode_uint8_variable:
 11434                           	opt stack 0
 11435                           tblptru	equ	0xFF8
 11436                           tblptrh	equ	0xFF7
 11437                           tblptrl	equ	0xFF6
 11438                           tablat	equ	0xFF5
 11439                           prodh	equ	0xFF4
 11440                           prodl	equ	0xFF3
 11441                           postinc0	equ	0xFEE
 11442                           plusw0	equ	0xFEB
 11443                           wreg	equ	0xFE8
 11444                           postdec1	equ	0xFE5
 11445                           fsr1h	equ	0xFE2
 11446                           fsr1l	equ	0xFE1
 11447                           indf2	equ	0xFDF
 11448                           postinc2	equ	0xFDE
 11449                           postdec2	equ	0xFDD
 11450                           plusw2	equ	0xFDB
 11451                           fsr2h	equ	0xFDA
 11452                           fsr2l	equ	0xFD9
 11453                           status	equ	0xFD8
 11454                           
 11455 ;; *************** function _encode_ufixed16_variable *****************
 11456 ;; Defined at:
 11457 ;;		line 153 in file "../../muta/muta_messages.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 11460 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 11461 ;;  var            10    2[BANK1 ] struct .
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;  m_writable      1   14[BANK1 ] unsigned char 
 11464 ;;  m_signed        1   13[BANK1 ] unsigned char 
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  1    wreg      unsigned char 
 11467 ;; Registers used:
 11468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11474 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;Total ram usage:       15 bytes
 11479 ;; Hardware stack levels used:    1
 11480 ;; Hardware stack levels required when called:   16
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_send_complete_update
 11485 ;;		_send_answer_to_update
 11486 ;;		_send_periodic_update
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text27
 11491  00A1FC                     __ptext27:
 11492                           	opt stack 0
 11493  00A1FC                     _encode_ufixed16_variable:
 11494                           	opt stack 13
 11495                           
 11496                           ;muta_messages.c: 155: *(buffer++) = var.label[0];
 11497                           
 11498                           ; BSR set to: 1
 11499                           ;incstack = 0
 11500  00A1FC  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11501  00A200  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11502  00A204  C102  FFDF         	movff	encode_ufixed16_variable@var,indf2
 11503  00A208  0101               	movlb	1	; () banked
 11504  00A20A  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11505  00A20C  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11506                           
 11507                           ; BSR set to: 1
 11508                           ;muta_messages.c: 156: *(buffer++) = var.label[1];
 11509  00A20E  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11510  00A212  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11511  00A216  C103  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
 11512  00A21A  0101               	movlb	1	; () banked
 11513  00A21C  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11514  00A21E  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11515                           
 11516                           ; BSR set to: 1
 11517                           ;muta_messages.c: 157: *(buffer++) = var.label[2];
 11518  00A220  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11519  00A224  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11520  00A228  C104  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
 11521                           
 11522                           ; BSR set to: 1
 11523  00A22C  0101               	movlb	1	; () banked
 11524  00A22E  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11525  00A230  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;muta_messages.c: 158: uint8_t m_signed = 0;
 11529  00A232  0E00               	movlw	0
 11530  00A234  0101               	movlb	1	; () banked
 11531  00A236  6F0D               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
 11532                           
 11533                           ; BSR set to: 1
 11534                           ;muta_messages.c: 159: uint8_t m_writable = 0;
 11535  00A238  0E00               	movlw	0
 11536  00A23A  0101               	movlb	1	; () banked
 11537  00A23C  6F0E               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;muta_messages.c: 160: if (var._signed)
 11541  00A23E  0101               	movlb	1	; () banked
 11542  00A240  510A               	movf	(encode_ufixed16_variable@var+8)& (0+255),w,b
 11543  00A242  B4D8               	btfsc	status,2,c
 11544  00A244  D003               	goto	l2038
 11545                           
 11546                           ; BSR set to: 1
 11547                           ;muta_messages.c: 161: m_signed = 1;
 11548  00A246  0E01               	movlw	1
 11549  00A248  0101               	movlb	1	; () banked
 11550  00A24A  6F0D               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
 11551  00A24C                     l2038:
 11552                           
 11553                           ; BSR set to: 1
 11554                           ;muta_messages.c: 162: if (var.writable)
 11555  00A24C  0101               	movlb	1	; () banked
 11556  00A24E  5109               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
 11557  00A250  B4D8               	btfsc	status,2,c
 11558  00A252  D003               	goto	l19216
 11559                           
 11560                           ; BSR set to: 1
 11561                           ;muta_messages.c: 163: m_writable = 1;
 11562  00A254  0E01               	movlw	1
 11563  00A256  0101               	movlb	1	; () banked
 11564  00A258  6F0E               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
 11565  00A25A                     l19216:
 11566                           
 11567                           ; BSR set to: 1
 11568                           ;muta_messages.c: 164: var.type = (2 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
 11569  00A25A  C10E  F10C         	movff	encode_ufixed16_variable@m_writable,??_encode_ufixed16_variable
 11570  00A25E  0101               	movlb	1	; () banked
 11571  00A260  3B0C               	swapf	??_encode_ufixed16_variable& (0+255),f,b
 11572  00A262  0EF0               	movlw	240
 11573  00A264  170C               	andwf	??_encode_ufixed16_variable& (0+255),f,b
 11574  00A266  0101               	movlb	1	; () banked
 11575  00A268  390D               	swapf	encode_ufixed16_variable@m_signed& (0+255),w,b
 11576  00A26A  46E8               	rlncf	wreg,f,c
 11577  00A26C  0BE0               	andlw	224
 11578  00A26E  0101               	movlb	1	; () banked
 11579  00A270  250C               	addwf	??_encode_ufixed16_variable& (0+255),w,b
 11580  00A272  0101               	movlb	1	; () banked
 11581  00A274  2508               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
 11582  00A276  0F80               	addlw	128
 11583  00A278  0101               	movlb	1	; () banked
 11584  00A27A  6F05               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
 11585                           
 11586                           ; BSR set to: 1
 11587                           ;muta_messages.c: 165: *(buffer++) = var.type;
 11588  00A27C  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11589  00A280  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11590  00A284  C105  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
 11591                           
 11592                           ; BSR set to: 1
 11593  00A288  0101               	movlb	1	; () banked
 11594  00A28A  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11595  00A28C  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11596                           
 11597                           ; BSR set to: 1
 11598                           ;muta_messages.c: 166: *(buffer++) = var.value_byte2;
 11599  00A28E  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11600  00A292  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11601  00A296  C107  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
 11602                           
 11603                           ; BSR set to: 1
 11604  00A29A  0101               	movlb	1	; () banked
 11605  00A29C  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11606  00A29E  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11607                           
 11608                           ; BSR set to: 1
 11609                           ;muta_messages.c: 167: *(buffer++) = var.value_byte1;
 11610  00A2A0  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11611  00A2A4  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11612  00A2A8  C106  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
 11613                           
 11614                           ; BSR set to: 1
 11615  00A2AC  0101               	movlb	1	; () banked
 11616  00A2AE  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11617  00A2B0  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11618                           
 11619                           ; BSR set to: 1
 11620                           ;muta_messages.c: 168: return 6;
 11621  00A2B2  0E06               	movlw	6
 11622  00A2B4  0012               	return	
 11623  00A2B6                     __end_of_encode_ufixed16_variable:
 11624                           	opt stack 0
 11625                           tblptru	equ	0xFF8
 11626                           tblptrh	equ	0xFF7
 11627                           tblptrl	equ	0xFF6
 11628                           tablat	equ	0xFF5
 11629                           prodh	equ	0xFF4
 11630                           prodl	equ	0xFF3
 11631                           postinc0	equ	0xFEE
 11632                           plusw0	equ	0xFEB
 11633                           wreg	equ	0xFE8
 11634                           postdec1	equ	0xFE5
 11635                           fsr1h	equ	0xFE2
 11636                           fsr1l	equ	0xFE1
 11637                           indf2	equ	0xFDF
 11638                           postinc2	equ	0xFDE
 11639                           postdec2	equ	0xFDD
 11640                           plusw2	equ	0xFDB
 11641                           fsr2h	equ	0xFDA
 11642                           fsr2l	equ	0xFD9
 11643                           status	equ	0xFD8
 11644                           
 11645 ;; *************** function _dBm_to_mW_ufixed16 *****************
 11646 ;; Defined at:
 11647 ;;		line 45 in file "../../muta/muta_messages.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  power           1    wreg     unsigned char 
 11650 ;;  value1          2    0[BANK1 ] PTR unsigned char 
 11651 ;;		 -> m_var(10), 
 11652 ;;  value2          2    2[BANK1 ] PTR unsigned char 
 11653 ;;		 -> m_var(10), 
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;  power           1    4[BANK1 ] unsigned char 
 11656 ;; Return value:  Size  Location     Type
 11657 ;;		None               void
 11658 ;; Registers used:
 11659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11665 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;Total ram usage:        5 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:   16
 11672 ;; This function calls:
 11673 ;;		Nothing
 11674 ;; This function is called by:
 11675 ;;		_send_complete_update
 11676 ;;		_send_answer_to_update
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           	psect	text28
 11681  008B02                     __ptext28:
 11682                           	opt stack 0
 11683  008B02                     _dBm_to_mW_ufixed16:
 11684                           	opt stack 13
 11685                           
 11686                           ; BSR set to: 1
 11687                           ;incstack = 0
 11688                           ;dBm_to_mW_ufixed16@power stored from wreg
 11689  008B02  0101               	movlb	1	; () banked
 11690  008B04  6F04               	movwf	dBm_to_mW_ufixed16@power& (0+255),b
 11691                           
 11692                           ;muta_messages.c: 47: switch(power)
 11693  008B06  D075               	goto	l19194
 11694  008B08                     l19174:
 11695                           
 11696                           ;muta_messages.c: 50: *value1 = 20;
 11697  008B08  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11698  008B0C  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11699  008B10  0E14               	movlw	20
 11700  008B12  6EDF               	movwf	indf2,c
 11701                           
 11702                           ;muta_messages.c: 51: *value2 = 0;
 11703  008B14  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11704  008B18  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11705  008B1C  0E00               	movlw	0
 11706  008B1E  6EDF               	movwf	indf2,c
 11707                           
 11708                           ;muta_messages.c: 52: break;
 11709  008B20  0012               	return	
 11710  008B22                     l19176:
 11711                           
 11712                           ;muta_messages.c: 54: *value1 = 10;
 11713  008B22  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11714  008B26  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11715  008B2A  0E0A               	movlw	10
 11716  008B2C  6EDF               	movwf	indf2,c
 11717                           
 11718                           ;muta_messages.c: 55: *value2 = 0;
 11719  008B2E  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11720  008B32  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11721  008B36  0E00               	movlw	0
 11722  008B38  6EDF               	movwf	indf2,c
 11723                           
 11724                           ;muta_messages.c: 56: break;
 11725  008B3A  0012               	return	
 11726  008B3C                     l19178:
 11727                           
 11728                           ;muta_messages.c: 58: *value1 = 5;
 11729  008B3C  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11730  008B40  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11731  008B44  0E05               	movlw	5
 11732  008B46  6EDF               	movwf	indf2,c
 11733                           
 11734                           ;muta_messages.c: 59: *value2 = 0;
 11735  008B48  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11736  008B4C  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11737  008B50  0E00               	movlw	0
 11738  008B52  6EDF               	movwf	indf2,c
 11739                           
 11740                           ;muta_messages.c: 60: break;
 11741  008B54  0012               	return	
 11742  008B56                     l19180:
 11743                           
 11744                           ;muta_messages.c: 62: *value1 = 2;
 11745  008B56  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11746  008B5A  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11747  008B5E  0E02               	movlw	2
 11748  008B60  6EDF               	movwf	indf2,c
 11749                           
 11750                           ;muta_messages.c: 63: *value2 = 50;
 11751  008B62  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11752  008B66  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11753  008B6A  0E32               	movlw	50
 11754  008B6C  6EDF               	movwf	indf2,c
 11755                           
 11756                           ;muta_messages.c: 64: break;
 11757  008B6E  0012               	return	
 11758  008B70                     l19182:
 11759                           
 11760                           ;muta_messages.c: 66: *value1 = 1;
 11761  008B70  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11762  008B74  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11763  008B78  0E01               	movlw	1
 11764  008B7A  6EDF               	movwf	indf2,c
 11765                           
 11766                           ;muta_messages.c: 67: *value2 = 25;
 11767  008B7C  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11768  008B80  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11769  008B84  0E19               	movlw	25
 11770  008B86  6EDF               	movwf	indf2,c
 11771                           
 11772                           ;muta_messages.c: 68: break;
 11773  008B88  0012               	return	
 11774  008B8A                     l19184:
 11775                           
 11776                           ;muta_messages.c: 70: *value1 = 0;
 11777  008B8A  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11778  008B8E  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11779  008B92  0E00               	movlw	0
 11780  008B94  6EDF               	movwf	indf2,c
 11781                           
 11782                           ;muta_messages.c: 71: *value2 = 60;
 11783  008B96  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11784  008B9A  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11785  008B9E  0E3C               	movlw	60
 11786  008BA0  6EDF               	movwf	indf2,c
 11787                           
 11788                           ;muta_messages.c: 72: break;
 11789  008BA2  0012               	return	
 11790  008BA4                     l19186:
 11791                           
 11792                           ;muta_messages.c: 74: *value1 = 0;
 11793  008BA4  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11794  008BA8  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11795  008BAC  0E00               	movlw	0
 11796  008BAE  6EDF               	movwf	indf2,c
 11797                           
 11798                           ;muta_messages.c: 75: *value2 = 30;
 11799  008BB0  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11800  008BB4  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11801  008BB8  0E1E               	movlw	30
 11802  008BBA  6EDF               	movwf	indf2,c
 11803                           
 11804                           ;muta_messages.c: 76: break;
 11805  008BBC  0012               	return	
 11806  008BBE                     l19188:
 11807                           
 11808                           ;muta_messages.c: 78: *value1 = 0;
 11809  008BBE  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11810  008BC2  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11811  008BC6  0E00               	movlw	0
 11812  008BC8  6EDF               	movwf	indf2,c
 11813                           
 11814                           ;muta_messages.c: 79: *value2 = 15;
 11815  008BCA  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11816  008BCE  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11817  008BD2  0E0F               	movlw	15
 11818  008BD4  6EDF               	movwf	indf2,c
 11819                           
 11820                           ;muta_messages.c: 80: break;
 11821  008BD6  0012               	return	
 11822  008BD8                     l19190:
 11823                           
 11824                           ;muta_messages.c: 82: *value1 = 0;
 11825  008BD8  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11826  008BDC  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11827  008BE0  0E00               	movlw	0
 11828  008BE2  6EDF               	movwf	indf2,c
 11829                           
 11830                           ;muta_messages.c: 83: *value2 = 0;
 11831  008BE4  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11832  008BE8  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11833  008BEC  0E00               	movlw	0
 11834  008BEE  6EDF               	movwf	indf2,c
 11835                           
 11836                           ;muta_messages.c: 85: }
 11837                           
 11838                           ;muta_messages.c: 84: break;
 11839  008BF0  0012               	return	
 11840  008BF2                     l19194:
 11841  008BF2  0101               	movlb	1	; () banked
 11842  008BF4  5104               	movf	dBm_to_mW_ufixed16@power& (0+255),w,b
 11843                           
 11844                           ; Switch size 1, requested type "space"
 11845                           ; Number of cases is 8, Range of values is 0 to 7
 11846                           ; switch strategies available:
 11847                           ; Name         Instructions Cycles
 11848                           ; simple_byte           25    13 (average)
 11849                           ;	Chosen strategy is simple_byte
 11850  008BF6  0A00               	xorlw	0	; case 0
 11851  008BF8  B4D8               	btfsc	status,2,c
 11852  008BFA  D786               	goto	l19174
 11853  008BFC  0A01               	xorlw	1	; case 1
 11854  008BFE  B4D8               	btfsc	status,2,c
 11855  008C00  D790               	goto	l19176
 11856  008C02  0A03               	xorlw	3	; case 2
 11857  008C04  B4D8               	btfsc	status,2,c
 11858  008C06  D79A               	goto	l19178
 11859  008C08  0A01               	xorlw	1	; case 3
 11860  008C0A  B4D8               	btfsc	status,2,c
 11861  008C0C  D7A4               	goto	l19180
 11862  008C0E  0A07               	xorlw	7	; case 4
 11863  008C10  B4D8               	btfsc	status,2,c
 11864  008C12  D7AE               	goto	l19182
 11865  008C14  0A01               	xorlw	1	; case 5
 11866  008C16  B4D8               	btfsc	status,2,c
 11867  008C18  D7B8               	goto	l19184
 11868  008C1A  0A03               	xorlw	3	; case 6
 11869  008C1C  B4D8               	btfsc	status,2,c
 11870  008C1E  D7C2               	goto	l19186
 11871  008C20  0A01               	xorlw	1	; case 7
 11872  008C22  B4D8               	btfsc	status,2,c
 11873  008C24  D7CC               	goto	l19188
 11874  008C26  D7D8               	goto	l19190
 11875  008C28                     __end_of_dBm_to_mW_ufixed16:
 11876                           	opt stack 0
 11877                           tblptru	equ	0xFF8
 11878                           tblptrh	equ	0xFF7
 11879                           tblptrl	equ	0xFF6
 11880                           tablat	equ	0xFF5
 11881                           prodh	equ	0xFF4
 11882                           prodl	equ	0xFF3
 11883                           postinc0	equ	0xFEE
 11884                           plusw0	equ	0xFEB
 11885                           wreg	equ	0xFE8
 11886                           postdec1	equ	0xFE5
 11887                           fsr1h	equ	0xFE2
 11888                           fsr1l	equ	0xFE1
 11889                           indf2	equ	0xFDF
 11890                           postinc2	equ	0xFDE
 11891                           postdec2	equ	0xFDD
 11892                           plusw2	equ	0xFDB
 11893                           fsr2h	equ	0xFDA
 11894                           fsr2l	equ	0xFD9
 11895                           status	equ	0xFD8
 11896                           
 11897 ;; *************** function _sendHIDText *****************
 11898 ;; Defined at:
 11899 ;;		line 701 in file "src/main.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;  str             2    7[BANK1 ] PTR unsigned char 
 11902 ;;		 -> ToSendDataBuffer(64), 
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;  size            2   15[BANK1 ] int 
 11905 ;;  p               2   13[BANK1 ] PTR unsigned char 
 11906 ;;		 -> ToSendDataBuffer(64), 
 11907 ;;  c               1   10[BANK1 ] unsigned char 
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      unsigned char 
 11910 ;; Registers used:
 11911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11917 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;Total ram usage:       10 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:   17
 11924 ;; This function calls:
 11925 ;;		_USBTransferOnePacket
 11926 ;; This function is called by:
 11927 ;;		_main
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           	psect	text29
 11932  009EF2                     __ptext29:
 11933                           	opt stack 0
 11934  009EF2                     _sendHIDText:
 11935                           	opt stack 13
 11936                           
 11937                           ;main.c: 703: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11938                           
 11939                           ;incstack = 0
 11940  009EF2  0E1F               	movlw	31
 11941  009EF4  644B               	cpfsgt	_USBDeviceState,c	;volatile
 11942  009EF6  0012               	return	
 11943  009EF8  B265               	btfsc	3941,1,c	;volatile
 11944  009EFA  0012               	return	
 11945  009EFC                     l20568:
 11946                           
 11947                           ;main.c: 708: {
 11948                           ;main.c: 709: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
 11949  009EFC  0100               	movlb	0	; () banked
 11950  009EFE  5193               	movf	_USBInHandle& (0+255),w,b
 11951  009F00  0100               	movlb	0	; () banked
 11952  009F02  1194               	iorwf	(_USBInHandle+1)& (0+255),w,b
 11953  009F04  B4D8               	btfsc	status,2,c
 11954  009F06  D013               	goto	l20572
 11955                           
 11956                           ; BSR set to: 0
 11957  009F08  C093  FFD9         	movff	_USBInHandle,fsr2l
 11958  009F0C  C094  FFDA         	movff	_USBInHandle+1,fsr2h
 11959  009F10  0100               	movlb	0	; () banked
 11960  009F12  AEDF               	btfss	indf2,7,c
 11961  009F14  D004               	goto	u23450
 11962  009F16  0101               	movlb	1	; () banked
 11963  009F18  6B09               	clrf	??_sendHIDText& (0+255),b
 11964  009F1A  2B09               	incf	??_sendHIDText& (0+255),f,b
 11965  009F1C  D002               	goto	u23458
 11966  009F1E                     u23450:
 11967  009F1E  0101               	movlb	1	; () banked
 11968  009F20  6B09               	clrf	??_sendHIDText& (0+255),b
 11969  009F22                     u23458:
 11970  009F22  0101               	movlb	1	; () banked
 11971  009F24  5109               	movf	??_sendHIDText& (0+255),w,b
 11972  009F26  0101               	movlb	1	; () banked
 11973  009F28  6F0B               	movwf	_sendHIDText$4973& (0+255),b
 11974  009F2A  6B0C               	clrf	(_sendHIDText$4973+1)& (0+255),b
 11975  009F2C  D005               	goto	l20574
 11976  009F2E                     l20572:
 11977  009F2E  0E00               	movlw	0
 11978  009F30  0101               	movlb	1	; () banked
 11979  009F32  6F0C               	movwf	(_sendHIDText$4973+1)& (0+255),b
 11980  009F34  0E00               	movlw	0
 11981  009F36  6F0B               	movwf	_sendHIDText$4973& (0+255),b
 11982  009F38                     l20574:
 11983                           
 11984                           ; BSR set to: 1
 11985  009F38  0101               	movlb	1	; () banked
 11986  009F3A  510B               	movf	_sendHIDText$4973& (0+255),w,b
 11987  009F3C  0101               	movlb	1	; () banked
 11988  009F3E  110C               	iorwf	(_sendHIDText$4973+1)& (0+255),w,b
 11989  009F40  A4D8               	btfss	status,2,c
 11990  009F42  D7DC               	goto	l20568
 11991                           
 11992                           ; BSR set to: 1
 11993                           ;main.c: 710: {
 11994                           ;main.c: 711: uint8_t* p = &ToSendDataBuffer[0];
 11995  009F44  0E84               	movlw	low _ToSendDataBuffer
 11996  009F46  0101               	movlb	1	; () banked
 11997  009F48  6F0D               	movwf	sendHIDText@p& (0+255),b
 11998  009F4A  0E03               	movlw	high _ToSendDataBuffer
 11999  009F4C  0101               	movlb	1	; () banked
 12000  009F4E  6F0E               	movwf	(sendHIDText@p+1)& (0+255),b
 12001                           
 12002                           ; BSR set to: 1
 12003                           ;main.c: 712: int size = 0;
 12004  009F50  0E00               	movlw	0
 12005  009F52  0101               	movlb	1	; () banked
 12006  009F54  6F10               	movwf	(sendHIDText@size+1)& (0+255),b
 12007  009F56  0E00               	movlw	0
 12008  009F58  6F0F               	movwf	sendHIDText@size& (0+255),b
 12009                           
 12010                           ;main.c: 713: uint8_t c;
 12011                           ;main.c: 714: while ( c = *str++ )
 12012  009F5A  D00C               	goto	l20586
 12013  009F5C                     l20580:
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;main.c: 715: {
 12017                           ;main.c: 716: *p = c;
 12018  009F5C  C10D  FFD9         	movff	sendHIDText@p,fsr2l
 12019  009F60  C10E  FFDA         	movff	sendHIDText@p+1,fsr2h
 12020  009F64  C10A  FFDF         	movff	sendHIDText@c,indf2
 12021                           
 12022                           ; BSR set to: 1
 12023                           ;main.c: 717: p++;
 12024  009F68  0101               	movlb	1	; () banked
 12025  009F6A  4B0D               	infsnz	sendHIDText@p& (0+255),f,b
 12026  009F6C  2B0E               	incf	(sendHIDText@p+1)& (0+255),f,b
 12027                           
 12028                           ; BSR set to: 1
 12029                           ;main.c: 718: size++;
 12030  009F6E  0101               	movlb	1	; () banked
 12031  009F70  4B0F               	infsnz	sendHIDText@size& (0+255),f,b
 12032  009F72  2B10               	incf	(sendHIDText@size+1)& (0+255),f,b
 12033  009F74                     l20586:
 12034                           
 12035                           ; BSR set to: 1
 12036  009F74  C107  FFD9         	movff	sendHIDText@str,fsr2l
 12037  009F78  C108  FFDA         	movff	sendHIDText@str+1,fsr2h
 12038  009F7C  0101               	movlb	1	; () banked
 12039  009F7E  4B07               	infsnz	sendHIDText@str& (0+255),f,b
 12040  009F80  2B08               	incf	(sendHIDText@str+1)& (0+255),f,b
 12041  009F82  50DF               	movf	indf2,w,c
 12042  009F84  0101               	movlb	1	; () banked
 12043  009F86  6F0A               	movwf	sendHIDText@c& (0+255),b
 12044  009F88  0101               	movlb	1	; () banked
 12045  009F8A  510A               	movf	sendHIDText@c& (0+255),w,b
 12046  009F8C  A4D8               	btfss	status,2,c
 12047  009F8E  D7E6               	goto	l20580
 12048                           
 12049                           ; BSR set to: 1
 12050                           ;main.c: 719: }
 12051                           ;main.c: 720: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],size);
 12052                           
 12053                           ; BSR set to: 1
 12054  009F90  0E01               	movlw	1
 12055  009F92  0101               	movlb	1	; () banked
 12056  009F94  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
 12057  009F96  0E84               	movlw	low _ToSendDataBuffer
 12058  009F98  0101               	movlb	1	; () banked
 12059  009F9A  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
 12060  009F9C  0E03               	movlw	high _ToSendDataBuffer
 12061  009F9E  0101               	movlb	1	; () banked
 12062  009FA0  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12063  009FA2  C10F  F103         	movff	sendHIDText@size,USBTransferOnePacket@len
 12064  009FA6  0E01               	movlw	1
 12065  009FA8  ECA4  F04C         	call	_USBTransferOnePacket
 12066  009FAC  C100  F093         	movff	?_USBTransferOnePacket,_USBInHandle
 12067  009FB0  C101  F094         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 12068                           
 12069                           ;main.c: 721: return 1;
 12070                           ;	Return value of _sendHIDText is never used
 12071  009FB4  0012               	return	
 12072  009FB6                     __end_of_sendHIDText:
 12073                           	opt stack 0
 12074                           tblptru	equ	0xFF8
 12075                           tblptrh	equ	0xFF7
 12076                           tblptrl	equ	0xFF6
 12077                           tablat	equ	0xFF5
 12078                           prodh	equ	0xFF4
 12079                           prodl	equ	0xFF3
 12080                           postinc0	equ	0xFEE
 12081                           plusw0	equ	0xFEB
 12082                           wreg	equ	0xFE8
 12083                           postdec1	equ	0xFE5
 12084                           fsr1h	equ	0xFE2
 12085                           fsr1l	equ	0xFE1
 12086                           indf2	equ	0xFDF
 12087                           postinc2	equ	0xFDE
 12088                           postdec2	equ	0xFDD
 12089                           plusw2	equ	0xFDB
 12090                           fsr2h	equ	0xFDA
 12091                           fsr2l	equ	0xFD9
 12092                           status	equ	0xFD8
 12093                           
 12094 ;; *************** function _USBTransferOnePacket *****************
 12095 ;; Defined at:
 12096 ;;		line 995 in file "src/usb/usb_device.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;  ep              1    wreg     unsigned char 
 12099 ;;  dir             1    0[BANK1 ] unsigned char 
 12100 ;;  data            2    1[BANK1 ] PTR unsigned char 
 12101 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 12102 ;;  len             1    3[BANK1 ] unsigned char 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;  ep              1    4[BANK1 ] unsigned char 
 12105 ;;  handle          2    5[BANK1 ] PTR volatile struct __BD
 12106 ;;		 -> BDT(32), NULL(0), 
 12107 ;; Return value:  Size  Location     Type
 12108 ;;                  2    0[BANK1 ] PTR void 
 12109 ;; Registers used:
 12110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12111 ;; Tracked objects:
 12112 ;;		On entry : 0/0
 12113 ;;		On exit  : 0/0
 12114 ;;		Unchanged: 0/0
 12115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12116 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12117 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12119 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12120 ;;Total ram usage:        7 bytes
 12121 ;; Hardware stack levels used:    1
 12122 ;; Hardware stack levels required when called:   16
 12123 ;; This function calls:
 12124 ;;		Nothing
 12125 ;; This function is called by:
 12126 ;;		_main
 12127 ;;		_sendHIDBinary
 12128 ;;		_sendHIDText
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text30
 12133  009948                     __ptext30:
 12134                           	opt stack 0
 12135  009948                     _USBTransferOnePacket:
 12136                           	opt stack 12
 12137                           
 12138                           ;incstack = 0
 12139                           ;USBTransferOnePacket@ep stored from wreg
 12140  009948  0101               	movlb	1	; () banked
 12141  00994A  6F04               	movwf	USBTransferOnePacket@ep& (0+255),b
 12142                           
 12143                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12144                           ;usb_device.c: 1000: if(dir != 0)
 12145  00994C  0101               	movlb	1	; () banked
 12146  00994E  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12147  009950  0101               	movlb	1	; () banked
 12148  009952  B4D8               	btfsc	status,2,c
 12149  009954  D008               	goto	l18750
 12150                           
 12151                           ; BSR set to: 1
 12152                           ;usb_device.c: 1001: {
 12153                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12154  009956  0101               	movlb	1	; () banked
 12155  009958  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12156  00995A  0D02               	mullw	2
 12157  00995C  0E8B               	movlw	low _pBDTEntryIn
 12158  00995E  24F3               	addwf	prodl,w,c
 12159  009960  6ED9               	movwf	fsr2l,c
 12160  009962  0E00               	movlw	high _pBDTEntryIn
 12161  009964  D007               	goto	L1
 12162  009966                     l18750:
 12163                           
 12164                           ; BSR set to: 1
 12165                           ;usb_device.c: 1005: else
 12166                           ;usb_device.c: 1006: {
 12167                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12168  009966  0101               	movlb	1	; () banked
 12169  009968  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12170  00996A  0D02               	mullw	2
 12171  00996C  0E8F               	movlw	low _pBDTEntryOut
 12172  00996E  24F3               	addwf	prodl,w,c
 12173  009970  6ED9               	movwf	fsr2l,c
 12174  009972  0E00               	movlw	high _pBDTEntryOut
 12175  009974                     L1:
 12176  009974  20F4               	addwfc	prodh,w,c
 12177  009976  6EDA               	movwf	fsr2h,c
 12178  009978  CFDE F105          	movff	postinc2,USBTransferOnePacket@handle
 12179  00997C  CFDD F106          	movff	postdec2,USBTransferOnePacket@handle+1
 12180                           
 12181                           ; BSR set to: 1
 12182                           ;usb_device.c: 1009: }
 12183                           ;usb_device.c: 1013: if(handle == 0)
 12184                           
 12185                           ; BSR set to: 1
 12186  009980  0101               	movlb	1	; () banked
 12187  009982  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12188  009984  0101               	movlb	1	; () banked
 12189  009986  1106               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12190  009988  A4D8               	btfss	status,2,c
 12191  00998A  D007               	goto	l18758
 12192                           
 12193                           ; BSR set to: 1
 12194                           ;usb_device.c: 1014: {
 12195                           ;usb_device.c: 1015: return 0;
 12196  00998C  0E00               	movlw	0
 12197  00998E  0101               	movlb	1	; () banked
 12198  009990  6F00               	movwf	?_USBTransferOnePacket& (0+255),b
 12199  009992  0E00               	movlw	0
 12200  009994  0101               	movlb	1	; () banked
 12201  009996  6F01               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12202                           
 12203                           ; BSR set to: 1
 12204  009998  0012               	return	
 12205  00999A                     l18758:
 12206                           
 12207                           ; BSR set to: 1
 12208                           ;usb_device.c: 1016: }
 12209                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12210  00999A  0101               	movlb	1	; () banked
 12211  00999C  EE20 F002          	lfsr	2,2
 12212  0099A0  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12213  0099A2  26D9               	addwf	fsr2l,f,c
 12214  0099A4  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12215  0099A6  22DA               	addwfc	fsr2h,f,c
 12216  0099A8  C101  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12217  0099AC  C102  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12218                           
 12219                           ;usb_device.c: 1030: handle->CNT = len;
 12220  0099B0  0101               	movlb	1	; () banked
 12221  0099B2  EE20 F001          	lfsr	2,1
 12222  0099B6  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12223  0099B8  26D9               	addwf	fsr2l,f,c
 12224  0099BA  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12225  0099BC  22DA               	addwfc	fsr2h,f,c
 12226  0099BE  C103  FFDF         	movff	USBTransferOnePacket@len,indf2
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12230  0099C2  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12231  0099C6  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12232  0099CA  0E40               	movlw	64
 12233  0099CC  16DF               	andwf	indf2,f,c
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12237  0099CE  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12238  0099D2  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12239  0099D6  0E00               	movlw	0
 12240  0099D8  86DB               	bsf	plusw2,3,c
 12241                           
 12242                           ; BSR set to: 1
 12243                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12244  0099DA  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12245  0099DE  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12246  0099E2  0E00               	movlw	0
 12247  0099E4  8EDB               	bsf	plusw2,7,c
 12248                           
 12249                           ; BSR set to: 1
 12250                           ;usb_device.c: 1036: if(dir != 0)
 12251  0099E6  0101               	movlb	1	; () banked
 12252  0099E8  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12253  0099EA  0101               	movlb	1	; () banked
 12254  0099EC  B4D8               	btfsc	status,2,c
 12255  0099EE  D008               	goto	l18770
 12256                           
 12257                           ; BSR set to: 1
 12258                           ;usb_device.c: 1037: {
 12259                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12260  0099F0  0101               	movlb	1	; () banked
 12261  0099F2  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12262  0099F4  0D02               	mullw	2
 12263  0099F6  0E8B               	movlw	low _pBDTEntryIn
 12264  0099F8  24F3               	addwf	prodl,w,c
 12265  0099FA  6ED9               	movwf	fsr2l,c
 12266  0099FC  0E00               	movlw	high _pBDTEntryIn
 12267  0099FE  D007               	goto	L2
 12268  009A00                     l18770:
 12269                           
 12270                           ; BSR set to: 1
 12271                           ;usb_device.c: 1041: else
 12272                           ;usb_device.c: 1042: {
 12273                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12274  009A00  0101               	movlb	1	; () banked
 12275  009A02  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12276  009A04  0D02               	mullw	2
 12277  009A06  0E8F               	movlw	low _pBDTEntryOut
 12278  009A08  24F3               	addwf	prodl,w,c
 12279  009A0A  6ED9               	movwf	fsr2l,c
 12280  009A0C  0E00               	movlw	high _pBDTEntryOut
 12281  009A0E                     L2:
 12282  009A0E  20F4               	addwfc	prodh,w,c
 12283  009A10  6EDA               	movwf	fsr2h,c
 12284  009A12  0E04               	movlw	4
 12285  009A14  1ADF               	xorwf	indf2,f,c
 12286                           
 12287                           ; BSR set to: 1
 12288                           ;usb_device.c: 1045: }
 12289                           ;usb_device.c: 1046: return (void*)handle;
 12290                           
 12291                           ; BSR set to: 1
 12292  009A16  C105  F100         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12293  009A1A  C106  F101         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12294  009A1E  0012               	return	
 12295  009A20                     __end_of_USBTransferOnePacket:
 12296                           	opt stack 0
 12297                           tblptru	equ	0xFF8
 12298                           tblptrh	equ	0xFF7
 12299                           tblptrl	equ	0xFF6
 12300                           tablat	equ	0xFF5
 12301                           prodh	equ	0xFF4
 12302                           prodl	equ	0xFF3
 12303                           postinc0	equ	0xFEE
 12304                           plusw0	equ	0xFEB
 12305                           wreg	equ	0xFE8
 12306                           postdec1	equ	0xFE5
 12307                           fsr1h	equ	0xFE2
 12308                           fsr1l	equ	0xFE1
 12309                           indf2	equ	0xFDF
 12310                           postinc2	equ	0xFDE
 12311                           postdec2	equ	0xFDD
 12312                           plusw2	equ	0xFDB
 12313                           fsr2h	equ	0xFDA
 12314                           fsr2l	equ	0xFD9
 12315                           status	equ	0xFD8
 12316                           
 12317 ;; *************** function _decode_variable *****************
 12318 ;; Defined at:
 12319 ;;		line 195 in file "../../muta/muta_messages.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  p_buffer        2   10[BANK1 ] PTR unsigned char 
 12322 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;  var            10   22[BANK1 ] struct .
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  10   10[BANK1 ] struct .
 12327 ;; Registers used:
 12328 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12334 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12335 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12336 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12337 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12338 ;;Total ram usage:       22 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:   17
 12341 ;; This function calls:
 12342 ;;		_memcpy
 12343 ;; This function is called by:
 12344 ;;		_main
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text31
 12349  0094A0                     __ptext31:
 12350                           	opt stack 0
 12351  0094A0                     _decode_variable:
 12352                           	opt stack 13
 12353                           
 12354                           ;muta_messages.c: 197: MUTA_VARIABLE var;
 12355                           ;muta_messages.c: 198: memcpy(var.label, p_buffer, 3);
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;incstack = 0
 12359  0094A0  0E16               	movlw	low decode_variable@var
 12360  0094A2  0101               	movlb	1	; () banked
 12361  0094A4  6F00               	movwf	memcpy@d1& (0+255),b
 12362  0094A6  0E01               	movlw	high decode_variable@var
 12363  0094A8  0101               	movlb	1	; () banked
 12364  0094AA  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 12365  0094AC  C10A  F102         	movff	decode_variable@p_buffer,memcpy@s1
 12366  0094B0  C10B  F103         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 12367  0094B4  0E00               	movlw	0
 12368  0094B6  0101               	movlb	1	; () banked
 12369  0094B8  6F05               	movwf	(memcpy@n+1)& (0+255),b
 12370  0094BA  0E03               	movlw	3
 12371  0094BC  6F04               	movwf	memcpy@n& (0+255),b
 12372  0094BE  EC94  F059         	call	_memcpy	;wreg free
 12373                           
 12374                           ;muta_messages.c: 199: p_buffer += 3;
 12375  0094C2  0E03               	movlw	3
 12376  0094C4  0101               	movlb	1	; () banked
 12377  0094C6  270A               	addwf	decode_variable@p_buffer& (0+255),f,b
 12378  0094C8  0E00               	movlw	0
 12379  0094CA  230B               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 12380                           
 12381                           ; BSR set to: 1
 12382                           ;muta_messages.c: 201: var.unit = *p_buffer & 0b00001111;
 12383  0094CC  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12384  0094D0  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12385  0094D4  50DF               	movf	indf2,w,c
 12386  0094D6  0B0F               	andlw	15
 12387  0094D8  0101               	movlb	1	; () banked
 12388  0094DA  6F1C               	movwf	(decode_variable@var+6)& (0+255),b
 12389                           
 12390                           ; BSR set to: 1
 12391                           ;muta_messages.c: 202: if (*p_buffer & 0b00010000)
 12392  0094DC  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12393  0094E0  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12394  0094E4  0101               	movlb	1	; () banked
 12395  0094E6  A8DF               	btfss	indf2,4,c
 12396  0094E8  D002               	goto	l20970
 12397                           
 12398                           ; BSR set to: 1
 12399                           ;muta_messages.c: 203: var.writable = 1;
 12400  0094EA  0E01               	movlw	1
 12401  0094EC  D001               	goto	L3
 12402  0094EE                     l20970:
 12403                           
 12404                           ; BSR set to: 1
 12405                           ;muta_messages.c: 204: else
 12406                           ;muta_messages.c: 205: var.writable = 0;
 12407  0094EE  0E00               	movlw	0
 12408  0094F0                     L3:
 12409  0094F0  0101               	movlb	1	; () banked
 12410  0094F2  6F1D               	movwf	(decode_variable@var+7)& (0+255),b
 12411                           
 12412                           ; BSR set to: 1
 12413                           ;muta_messages.c: 206: if (*p_buffer & 0b00100000)
 12414                           
 12415                           ; BSR set to: 1
 12416  0094F4  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12417  0094F8  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12418  0094FC  0101               	movlb	1	; () banked
 12419  0094FE  AADF               	btfss	indf2,5,c
 12420  009500  D002               	goto	l20976
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;muta_messages.c: 207: var._signed = 1;
 12424  009502  0E01               	movlw	1
 12425  009504  D001               	goto	L4
 12426  009506                     l20976:
 12427                           
 12428                           ; BSR set to: 1
 12429                           ;muta_messages.c: 208: else
 12430                           ;muta_messages.c: 209: var._signed = 0;
 12431  009506  0E00               	movlw	0
 12432  009508                     L4:
 12433  009508  0101               	movlb	1	; () banked
 12434  00950A  6F1E               	movwf	(decode_variable@var+8)& (0+255),b
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;muta_messages.c: 211: var.type = (*p_buffer++ & 0b11000000) >> 6;
 12438                           
 12439                           ; BSR set to: 1
 12440  00950C  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12441  009510  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12442  009514  50DF               	movf	indf2,w,c
 12443  009516  0101               	movlb	1	; () banked
 12444  009518  6F14               	movwf	??_decode_variable& (0+255),b
 12445  00951A  0E06               	movlw	6
 12446  00951C  0101               	movlb	1	; () banked
 12447  00951E  6F15               	movwf	(??_decode_variable+1)& (0+255),b
 12448  009520                     u23845:
 12449  009520  0101               	movlb	1	; () banked
 12450  009522  90D8               	bcf	status,0,c
 12451  009524  3314               	rrcf	??_decode_variable& (0+255),f,b
 12452  009526  0101               	movlb	1	; () banked
 12453  009528  2F15               	decfsz	(??_decode_variable+1)& (0+255),f,b
 12454  00952A  D7FA               	goto	u23845
 12455  00952C  0101               	movlb	1	; () banked
 12456  00952E  5114               	movf	??_decode_variable& (0+255),w,b
 12457  009530  0B03               	andlw	3
 12458  009532  0101               	movlb	1	; () banked
 12459  009534  6F19               	movwf	(decode_variable@var+3)& (0+255),b
 12460                           
 12461                           ; BSR set to: 1
 12462  009536  0101               	movlb	1	; () banked
 12463  009538  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12464  00953A  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12465                           
 12466                           ; BSR set to: 1
 12467                           ;muta_messages.c: 212: var.value_byte1 = *p_buffer++;
 12468  00953C  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12469  009540  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12470  009544  50DF               	movf	indf2,w,c
 12471  009546  0101               	movlb	1	; () banked
 12472  009548  6F1A               	movwf	(decode_variable@var+4)& (0+255),b
 12473                           
 12474                           ; BSR set to: 1
 12475  00954A  0101               	movlb	1	; () banked
 12476  00954C  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12477  00954E  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12478                           
 12479                           ;muta_messages.c: 213: if ((var.type == 1) || (var.type == 2))
 12480  009550  0101               	movlb	1	; () banked
 12481  009552  0519               	decf	(decode_variable@var+3)& (0+255),w,b
 12482  009554  B4D8               	btfsc	status,2,c
 12483  009556  D005               	goto	l20988
 12484                           
 12485                           ; BSR set to: 1
 12486  009558  0E02               	movlw	2
 12487  00955A  0101               	movlb	1	; () banked
 12488  00955C  1919               	xorwf	(decode_variable@var+3)& (0+255),w,b
 12489  00955E  A4D8               	btfss	status,2,c
 12490  009560  D00C               	goto	l20994
 12491  009562                     l20988:
 12492                           
 12493                           ; BSR set to: 1
 12494                           ;muta_messages.c: 214: {
 12495                           ;muta_messages.c: 215: var.value_byte2 = *p_buffer++;
 12496  009562  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12497  009566  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12498  00956A  50DF               	movf	indf2,w,c
 12499  00956C  0101               	movlb	1	; () banked
 12500  00956E  6F1B               	movwf	(decode_variable@var+5)& (0+255),b
 12501                           
 12502                           ; BSR set to: 1
 12503  009570  0101               	movlb	1	; () banked
 12504  009572  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12505  009574  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12506                           
 12507                           ; BSR set to: 1
 12508                           ;muta_messages.c: 216: var.size = 6;
 12509  009576  0E06               	movlw	6
 12510  009578  D001               	goto	L5
 12511  00957A                     l20994:
 12512                           
 12513                           ; BSR set to: 1
 12514                           ;muta_messages.c: 218: else
 12515                           ;muta_messages.c: 219: var.size = 5;
 12516  00957A  0E05               	movlw	5
 12517  00957C                     L5:
 12518  00957C  0101               	movlb	1	; () banked
 12519  00957E  6F1F               	movwf	(decode_variable@var+9)& (0+255),b
 12520                           
 12521                           ; BSR set to: 1
 12522                           ;muta_messages.c: 220: return var;
 12523                           
 12524                           ; BSR set to: 1
 12525  009580  EE21  F016         	lfsr	2,decode_variable@var
 12526  009584  EE01  F00A         	lfsr	0,?_decode_variable
 12527  009588  0E09               	movlw	9
 12528  00958A                     u23871:
 12529  00958A  CFDB FFEB          	movff	plusw2,plusw0
 12530  00958E  06E8               	decf	wreg,f,c
 12531  009590  E2FC               	bc	u23871
 12532  009592  0012               	return	
 12533  009594                     __end_of_decode_variable:
 12534                           	opt stack 0
 12535                           tblptru	equ	0xFF8
 12536                           tblptrh	equ	0xFF7
 12537                           tblptrl	equ	0xFF6
 12538                           tablat	equ	0xFF5
 12539                           prodh	equ	0xFF4
 12540                           prodl	equ	0xFF3
 12541                           postinc0	equ	0xFEE
 12542                           plusw0	equ	0xFEB
 12543                           wreg	equ	0xFE8
 12544                           postdec1	equ	0xFE5
 12545                           fsr1h	equ	0xFE2
 12546                           fsr1l	equ	0xFE1
 12547                           indf2	equ	0xFDF
 12548                           postinc2	equ	0xFDE
 12549                           postdec2	equ	0xFDD
 12550                           plusw2	equ	0xFDB
 12551                           fsr2h	equ	0xFDA
 12552                           fsr2l	equ	0xFD9
 12553                           status	equ	0xFD8
 12554                           
 12555 ;; *************** function _memcpy *****************
 12556 ;; Defined at:
 12557 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  d1              2    0[BANK1 ] PTR void 
 12560 ;;		 -> decode_variable@var(10), m_var(10), m_buffer(32), ReceivedDataBuffer(64), 
 12561 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 12562 ;;  s1              2    2[BANK1 ] PTR const void 
 12563 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 12564 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 12565 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 12566 ;;  n               2    4[BANK1 ] unsigned int 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;  s               2    8[BANK1 ] PTR const unsigned char 
 12569 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 12570 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 12571 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 12572 ;;  d               2    6[BANK1 ] PTR unsigned char 
 12573 ;;		 -> decode_variable@var(10), m_var(10), m_buffer(32), ReceivedDataBuffer(64), 
 12574 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  2    0[BANK1 ] PTR void 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12584 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12585 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12587 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12588 ;;Total ram usage:       10 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:   16
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		_main
 12595 ;;		_send_network_register
 12596 ;;		_send_complete_update
 12597 ;;		_send_answer_to_update
 12598 ;;		_send_periodic_update
 12599 ;;		_sendHIDBinary
 12600 ;;		_decode_variable
 12601 ;;		_do_NETWORK_REGISTER
 12602 ;;		_do_PING
 12603 ;;		_do_UPDATE
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607                           	psect	text32
 12608  00B328                     __ptext32:
 12609                           	opt stack 0
 12610  00B328                     _memcpy:
 12611                           	opt stack 12
 12612                           
 12613                           ; BSR set to: 1
 12614                           ;incstack = 0
 12615  00B328  C102  F108         	movff	memcpy@s1,memcpy@s
 12616  00B32C  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
 12617  00B330  C100  F106         	movff	memcpy@d1,memcpy@d
 12618  00B334  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
 12619  00B338  D01C               	goto	l18784
 12620  00B33A                     l18778:
 12621  00B33A  C108  FFF6         	movff	memcpy@s,tblptrl
 12622  00B33E  C109  FFF7         	movff	memcpy@s+1,tblptrh
 12623  00B342  0E00               	movlw	low (__mediumconst shr (0+16))
 12624  00B344  6EF8               	movwf	tblptru,c
 12625  00B346  C106  FFD9         	movff	memcpy@d,fsr2l
 12626  00B34A  C107  FFDA         	movff	memcpy@d+1,fsr2h
 12627  00B34E  0E0E               	movlw	(high __ramtop+-1)
 12628  00B350  64F7               	cpfsgt	tblptrh,c
 12629  00B352  D003               	bra	u21257
 12630  00B354  0008               	tblrd		*
 12631  00B356  50F5               	movf	tablat,w,c
 12632  00B358  D005               	bra	u21250
 12633  00B35A                     u21257:
 12634  00B35A  CFF6 FFE9          	movff	tblptrl,fsr0l
 12635  00B35E  CFF7 FFEA          	movff	tblptrh,fsr0h
 12636  00B362  50EF               	movf	indf0,w,c
 12637  00B364                     u21250:
 12638  00B364  6EDF               	movwf	indf2,c
 12639  00B366  0101               	movlb	1	; () banked
 12640  00B368  4B08               	infsnz	memcpy@s& (0+255),f,b
 12641  00B36A  2B09               	incf	(memcpy@s+1)& (0+255),f,b
 12642                           
 12643                           ; BSR set to: 1
 12644  00B36C  0101               	movlb	1	; () banked
 12645  00B36E  4B06               	infsnz	memcpy@d& (0+255),f,b
 12646  00B370  2B07               	incf	(memcpy@d+1)& (0+255),f,b
 12647  00B372                     l18784:
 12648  00B372  0101               	movlb	1	; () banked
 12649  00B374  0704               	decf	memcpy@n& (0+255),f,b
 12650  00B376  A0D8               	btfss	status,0,c
 12651  00B378  0705               	decf	(memcpy@n+1)& (0+255),f,b
 12652  00B37A  0101               	movlb	1	; () banked
 12653  00B37C  2904               	incf	memcpy@n& (0+255),w,b
 12654  00B37E  E1DD               	bnz	l18778
 12655  00B380  0101               	movlb	1	; () banked
 12656  00B382  2905               	incf	(memcpy@n+1)& (0+255),w,b
 12657  00B384  B4D8               	btfsc	status,2,c
 12658  00B386  0012               	return	
 12659  00B388  D7D8               	goto	l18778
 12660  00B38A                     __end_of_memcpy:
 12661                           	opt stack 0
 12662                           tblptru	equ	0xFF8
 12663                           tblptrh	equ	0xFF7
 12664                           tblptrl	equ	0xFF6
 12665                           tablat	equ	0xFF5
 12666                           prodh	equ	0xFF4
 12667                           prodl	equ	0xFF3
 12668                           indf0	equ	0xFEF
 12669                           postinc0	equ	0xFEE
 12670                           plusw0	equ	0xFEB
 12671                           fsr0h	equ	0xFEA
 12672                           fsr0l	equ	0xFE9
 12673                           wreg	equ	0xFE8
 12674                           postdec1	equ	0xFE5
 12675                           fsr1h	equ	0xFE2
 12676                           fsr1l	equ	0xFE1
 12677                           indf2	equ	0xFDF
 12678                           postinc2	equ	0xFDE
 12679                           postdec2	equ	0xFDD
 12680                           plusw2	equ	0xFDB
 12681                           fsr2h	equ	0xFDA
 12682                           fsr2l	equ	0xFD9
 12683                           status	equ	0xFD8
 12684                           
 12685 ;; *************** function _dBm_to_mW *****************
 12686 ;; Defined at:
 12687 ;;		line 89 in file "../../muta/muta_messages.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  power           1    wreg     unsigned char 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;  power           1    2[BANK1 ] unsigned char 
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  2    0[BANK1 ] PTR const unsigned char 
 12694 ;; Registers used:
 12695 ;;		wreg, status,2, status,0
 12696 ;; Tracked objects:
 12697 ;;		On entry : 0/0
 12698 ;;		On exit  : 0/0
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12701 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12702 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12704 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12705 ;;Total ram usage:        3 bytes
 12706 ;; Hardware stack levels used:    1
 12707 ;; Hardware stack levels required when called:   16
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_main
 12712 ;; This function uses a non-reentrant model
 12713 ;;
 12714                           
 12715                           	psect	text33
 12716  00A2B6                     __ptext33:
 12717                           	opt stack 0
 12718  00A2B6                     _dBm_to_mW:
 12719                           	opt stack 14
 12720                           
 12721                           ; BSR set to: 1
 12722                           ;incstack = 0
 12723                           ;dBm_to_mW@power stored from wreg
 12724  00A2B6  0101               	movlb	1	; () banked
 12725  00A2B8  6F02               	movwf	dBm_to_mW@power& (0+255),b
 12726                           
 12727                           ;muta_messages.c: 91: switch(power)
 12728  00A2BA  D03F               	goto	l20958
 12729  00A2BC                     l20920:
 12730                           
 12731                           ;muta_messages.c: 94: return TX_POWER_13_DB_MW;
 12732  00A2BC  0EB4               	movlw	low _TX_POWER_13_DB_MW
 12733  00A2BE  0101               	movlb	1	; () banked
 12734  00A2C0  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12735  00A2C2  0E21               	movlw	high _TX_POWER_13_DB_MW
 12736  00A2C4  0101               	movlb	1	; () banked
 12737  00A2C6  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12738                           
 12739                           ; BSR set to: 1
 12740  00A2C8  0012               	return	
 12741  00A2CA                     l20924:
 12742                           
 12743                           ; BSR set to: 1
 12744                           ;muta_messages.c: 96: return TX_POWER_10_DB_MW;
 12745  00A2CA  0EAF               	movlw	low _TX_POWER_10_DB_MW
 12746  00A2CC  0101               	movlb	1	; () banked
 12747  00A2CE  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12748  00A2D0  0E21               	movlw	high _TX_POWER_10_DB_MW
 12749  00A2D2  0101               	movlb	1	; () banked
 12750  00A2D4  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12751                           
 12752                           ; BSR set to: 1
 12753  00A2D6  0012               	return	
 12754  00A2D8                     l20928:
 12755                           
 12756                           ; BSR set to: 1
 12757                           ;muta_messages.c: 98: return TX_POWER_7_DB_MW;
 12758  00A2D8  0EC5               	movlw	low _TX_POWER_7_DB_MW
 12759  00A2DA  0101               	movlb	1	; () banked
 12760  00A2DC  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12761  00A2DE  0E21               	movlw	high _TX_POWER_7_DB_MW
 12762  00A2E0  0101               	movlb	1	; () banked
 12763  00A2E2  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12764                           
 12765                           ; BSR set to: 1
 12766  00A2E4  0012               	return	
 12767  00A2E6                     l20932:
 12768                           
 12769                           ; BSR set to: 1
 12770                           ;muta_messages.c: 100: return TX_POWER_4_DB_MW;
 12771  00A2E6  0E97               	movlw	low _TX_POWER_4_DB_MW
 12772  00A2E8  0101               	movlb	1	; () banked
 12773  00A2EA  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12774  00A2EC  0E21               	movlw	high _TX_POWER_4_DB_MW
 12775  00A2EE  0101               	movlb	1	; () banked
 12776  00A2F0  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12777                           
 12778                           ; BSR set to: 1
 12779  00A2F2  0012               	return	
 12780  00A2F4                     l20936:
 12781                           
 12782                           ; BSR set to: 1
 12783                           ;muta_messages.c: 102: return TX_POWER_1_DB_MW;
 12784  00A2F4  0E89               	movlw	low _TX_POWER_1_DB_MW
 12785  00A2F6  0101               	movlb	1	; () banked
 12786  00A2F8  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12787  00A2FA  0E21               	movlw	high _TX_POWER_1_DB_MW
 12788  00A2FC  0101               	movlb	1	; () banked
 12789  00A2FE  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12790                           
 12791                           ; BSR set to: 1
 12792  00A300  0012               	return	
 12793  00A302                     l20940:
 12794                           
 12795                           ; BSR set to: 1
 12796                           ;muta_messages.c: 104: return TX_POWER_N_2_DB_MW;
 12797  00A302  0EA3               	movlw	low _TX_POWER_N_2_DB_MW
 12798  00A304  0101               	movlb	1	; () banked
 12799  00A306  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12800  00A308  0E21               	movlw	high _TX_POWER_N_2_DB_MW
 12801  00A30A  0101               	movlb	1	; () banked
 12802  00A30C  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12803                           
 12804                           ; BSR set to: 1
 12805  00A30E  0012               	return	
 12806  00A310                     l20944:
 12807                           
 12808                           ; BSR set to: 1
 12809                           ;muta_messages.c: 106: return TX_POWER_N_5_DB_MW;
 12810  00A310  0EA9               	movlw	low _TX_POWER_N_5_DB_MW
 12811  00A312  0101               	movlb	1	; () banked
 12812  00A314  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12813  00A316  0E21               	movlw	high _TX_POWER_N_5_DB_MW
 12814  00A318  0101               	movlb	1	; () banked
 12815  00A31A  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12816                           
 12817                           ; BSR set to: 1
 12818  00A31C  0012               	return	
 12819  00A31E                     l20948:
 12820                           
 12821                           ; BSR set to: 1
 12822                           ;muta_messages.c: 108: return TX_POWER_N_8_DB_MW;
 12823  00A31E  0E90               	movlw	low _TX_POWER_N_8_DB_MW
 12824  00A320  0101               	movlb	1	; () banked
 12825  00A322  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12826  00A324  0E21               	movlw	high _TX_POWER_N_8_DB_MW
 12827  00A326  0101               	movlb	1	; () banked
 12828  00A328  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12829                           
 12830                           ; BSR set to: 1
 12831  00A32A  0012               	return	
 12832  00A32C                     l20952:
 12833                           
 12834                           ; BSR set to: 1
 12835                           ;muta_messages.c: 110: return TX_POWER_INVALID;
 12836  00A32C  0E9D               	movlw	low _TX_POWER_INVALID
 12837  00A32E  0101               	movlb	1	; () banked
 12838  00A330  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12839  00A332  0E21               	movlw	high _TX_POWER_INVALID
 12840  00A334  0101               	movlb	1	; () banked
 12841  00A336  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12842                           
 12843                           ; BSR set to: 1
 12844                           ;muta_messages.c: 111: }
 12845                           
 12846                           ; BSR set to: 1
 12847  00A338  0012               	return	
 12848  00A33A                     l20958:
 12849  00A33A  0101               	movlb	1	; () banked
 12850  00A33C  5102               	movf	dBm_to_mW@power& (0+255),w,b
 12851                           
 12852                           ; Switch size 1, requested type "space"
 12853                           ; Number of cases is 8, Range of values is 0 to 7
 12854                           ; switch strategies available:
 12855                           ; Name         Instructions Cycles
 12856                           ; simple_byte           25    13 (average)
 12857                           ;	Chosen strategy is simple_byte
 12858  00A33E  0A00               	xorlw	0	; case 0
 12859  00A340  B4D8               	btfsc	status,2,c
 12860  00A342  D7BC               	goto	l20920
 12861  00A344  0A01               	xorlw	1	; case 1
 12862  00A346  B4D8               	btfsc	status,2,c
 12863  00A348  D7C0               	goto	l20924
 12864  00A34A  0A03               	xorlw	3	; case 2
 12865  00A34C  B4D8               	btfsc	status,2,c
 12866  00A34E  D7C4               	goto	l20928
 12867  00A350  0A01               	xorlw	1	; case 3
 12868  00A352  B4D8               	btfsc	status,2,c
 12869  00A354  D7C8               	goto	l20932
 12870  00A356  0A07               	xorlw	7	; case 4
 12871  00A358  B4D8               	btfsc	status,2,c
 12872  00A35A  D7CC               	goto	l20936
 12873  00A35C  0A01               	xorlw	1	; case 5
 12874  00A35E  B4D8               	btfsc	status,2,c
 12875  00A360  D7D0               	goto	l20940
 12876  00A362  0A03               	xorlw	3	; case 6
 12877  00A364  B4D8               	btfsc	status,2,c
 12878  00A366  D7D4               	goto	l20944
 12879  00A368  0A01               	xorlw	1	; case 7
 12880  00A36A  B4D8               	btfsc	status,2,c
 12881  00A36C  D7D8               	goto	l20948
 12882  00A36E  D7DE               	goto	l20952
 12883  00A370                     __end_of_dBm_to_mW:
 12884                           	opt stack 0
 12885                           tblptru	equ	0xFF8
 12886                           tblptrh	equ	0xFF7
 12887                           tblptrl	equ	0xFF6
 12888                           tablat	equ	0xFF5
 12889                           prodh	equ	0xFF4
 12890                           prodl	equ	0xFF3
 12891                           indf0	equ	0xFEF
 12892                           postinc0	equ	0xFEE
 12893                           plusw0	equ	0xFEB
 12894                           fsr0h	equ	0xFEA
 12895                           fsr0l	equ	0xFE9
 12896                           wreg	equ	0xFE8
 12897                           postdec1	equ	0xFE5
 12898                           fsr1h	equ	0xFE2
 12899                           fsr1l	equ	0xFE1
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           postdec2	equ	0xFDD
 12903                           plusw2	equ	0xFDB
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function _USBDeviceInit *****************
 12909 ;; Defined at:
 12910 ;;		line 298 in file "src/usb/usb_device.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  i               1    8[BANK1 ] unsigned char 
 12915 ;; Return value:  Size  Location     Type
 12916 ;;		None               void
 12917 ;; Registers used:
 12918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12925 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12927 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12928 ;;Total ram usage:        1 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:   17
 12931 ;; This function calls:
 12932 ;;		_memset
 12933 ;; This function is called by:
 12934 ;;		_main
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938                           	psect	text34
 12939  007BB2                     __ptext34:
 12940                           	opt stack 0
 12941  007BB2                     _USBDeviceInit:
 12942                           	opt stack 13
 12943                           
 12944                           ;usb_device.c: 300: uint8_t i;
 12945                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 12946                           
 12947                           ; BSR set to: 1
 12948                           ;incstack = 0
 12949  007BB2  98A0               	bcf	4000,4,c	;volatile
 12950                           
 12951                           ;usb_device.c: 305: {UEIR = 0;};
 12952  007BB4  0E00               	movlw	0
 12953  007BB6  6E63               	movwf	3939,c	;volatile
 12954                           
 12955                           ;usb_device.c: 308: {UIR = 0;};
 12956  007BB8  0E00               	movlw	0
 12957  007BBA  6E62               	movwf	3938,c	;volatile
 12958                           
 12959                           ;usb_device.c: 311: UEP0 = 0;
 12960  007BBC  0E00               	movlw	0
 12961  007BBE  010F               	movlb	15	; () banked
 12962  007BC0  6F26               	movwf	38,b	;volatile
 12963                           
 12964                           ; BSR set to: 15
 12965                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 12966  007BC2  0E27               	movlw	39
 12967  007BC4  0101               	movlb	1	; () banked
 12968  007BC6  6F00               	movwf	memset@p1& (0+255),b
 12969  007BC8  0E0F               	movlw	15
 12970  007BCA  0101               	movlb	1	; () banked
 12971  007BCC  6F01               	movwf	(memset@p1+1)& (0+255),b
 12972  007BCE  0E00               	movlw	0
 12973  007BD0  0101               	movlb	1	; () banked
 12974  007BD2  6F03               	movwf	(memset@c+1)& (0+255),b
 12975  007BD4  0E00               	movlw	0
 12976  007BD6  6F02               	movwf	memset@c& (0+255),b
 12977  007BD8  0E00               	movlw	0
 12978  007BDA  0101               	movlb	1	; () banked
 12979  007BDC  6F05               	movwf	(memset@n+1)& (0+255),b
 12980  007BDE  0E01               	movlw	1
 12981  007BE0  6F04               	movwf	memset@n& (0+255),b
 12982  007BE2  ECB9  F05C         	call	_memset	;wreg free
 12983                           
 12984                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12985  007BE6  0E16               	movlw	22
 12986  007BE8  010F               	movlb	15	; () banked
 12987  007BEA  6F39               	movwf	57,b	;volatile
 12988                           
 12989                           ; BSR set to: 15
 12990  007BEC  0E9F               	movlw	159
 12991  007BEE  010F               	movlb	15	; () banked
 12992  007BF0  6F37               	movwf	55,b	;volatile
 12993                           
 12994                           ; BSR set to: 15
 12995  007BF2  0E7B               	movlw	123
 12996  007BF4  010F               	movlb	15	; () banked
 12997  007BF6  6F36               	movwf	54,b	;volatile
 12998                           
 12999                           ; BSR set to: 15
 13000                           ;usb_device.c: 318: ;
 13001                           ;usb_device.c: 321: ;
 13002                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13003  007BF8  0E00               	movlw	0
 13004  007BFA  0101               	movlb	1	; () banked
 13005  007BFC  6F08               	movwf	USBDeviceInit@i& (0+255),b
 13006  007BFE                     l20488:
 13007                           
 13008                           ; BSR set to: 1
 13009  007BFE  0E07               	movlw	7
 13010  007C00  0101               	movlb	1	; () banked
 13011  007C02  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 13012  007C04  D001               	goto	l20492
 13013  007C06  D010               	goto	l1222
 13014  007C08                     l20492:
 13015                           
 13016                           ; BSR set to: 1
 13017                           ;usb_device.c: 325: {
 13018                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 13019  007C08  0101               	movlb	1	; () banked
 13020  007C0A  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13021  007C0C  0D04               	mullw	4
 13022  007C0E  0E00               	movlw	0
 13023  007C10  24F3               	addwf	prodl,w,c
 13024  007C12  6ED9               	movwf	fsr2l,c
 13025  007C14  0E0D               	movlw	13
 13026  007C16  20F4               	addwfc	prodh,w,c
 13027  007C18  6EDA               	movwf	fsr2h,c
 13028  007C1A  6ADE               	clrf	postinc2,c
 13029  007C1C  6ADE               	clrf	postinc2,c
 13030  007C1E  6ADE               	clrf	postinc2,c
 13031  007C20  6ADD               	clrf	postdec2,c
 13032                           
 13033                           ; BSR set to: 1
 13034  007C22  0101               	movlb	1	; () banked
 13035  007C24  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 13036  007C26  D7EB               	goto	l20488
 13037  007C28                     l1222:
 13038                           
 13039                           ; BSR set to: 1
 13040                           ;usb_device.c: 327: }
 13041                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 13042  007C28  8C65               	bsf	3941,6,c	;volatile
 13043                           
 13044                           ; BSR set to: 1
 13045                           ;usb_device.c: 333: UADDR = 0x00;
 13046  007C2A  0E00               	movlw	0
 13047  007C2C  010F               	movlb	15	; () banked
 13048  007C2E  6F38               	movwf	56,b	;volatile
 13049                           
 13050                           ; BSR set to: 15
 13051                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 13052  007C30  9865               	bcf	3941,4,c	;volatile
 13053                           
 13054                           ; BSR set to: 15
 13055                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 13056  007C32  9C65               	bcf	3941,6,c	;volatile
 13057                           
 13058                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 13059  007C34  D00C               	goto	l20512
 13060  007C36                     l20504:
 13061                           
 13062                           ;usb_device.c: 343: {
 13063                           ;usb_device.c: 344: (UIR &= 0xF7);
 13064  007C36  9662               	bcf	3938,3,c	;volatile
 13065                           
 13066                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 13067  007C38  0E00               	movlw	0
 13068  007C3A  0100               	movlb	0	; () banked
 13069  007C3C  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 13073  007C3E  0E00               	movlw	0
 13074  007C40  0100               	movlb	0	; () banked
 13075  007C42  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 13079  007C44  0E00               	movlw	0
 13080  007C46  0100               	movlb	0	; () banked
 13081  007C48  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 13082  007C4A  0E00               	movlw	0
 13083  007C4C  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 13084  007C4E                     l20512:
 13085  007C4E  B662               	btfsc	3938,3,c	;volatile
 13086  007C50  D7F2               	goto	l20504
 13087                           
 13088                           ;usb_device.c: 349: }
 13089                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 13090  007C52  0E01               	movlw	1
 13091  007C54  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13092                           
 13093                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 13094  007C56  0E01               	movlw	1
 13095  007C58  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13096                           
 13097                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 13098  007C5A  0E00               	movlw	0
 13099  007C5C  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13100                           
 13101                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 13102  007C5E  0E00               	movlw	0
 13103  007C60  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13104                           
 13105                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 13106  007C62  0E00               	movlw	0
 13107  007C64  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 13108                           
 13109                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 13110  007C66  0E00               	movlw	0
 13111  007C68  0101               	movlb	1	; () banked
 13112  007C6A  6F08               	movwf	USBDeviceInit@i& (0+255),b
 13113  007C6C                     l20516:
 13114                           
 13115                           ; BSR set to: 1
 13116  007C6C  0E01               	movlw	1
 13117  007C6E  0101               	movlb	1	; () banked
 13118  007C70  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 13119  007C72  D001               	goto	l20520
 13120  007C74  D033               	goto	l20526
 13121  007C76                     l20520:
 13122                           
 13123                           ; BSR set to: 1
 13124                           ;usb_device.c: 363: {
 13125                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 13126  007C76  0101               	movlb	1	; () banked
 13127  007C78  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13128  007C7A  0D02               	mullw	2
 13129  007C7C  0E8B               	movlw	low _pBDTEntryIn
 13130  007C7E  24F3               	addwf	prodl,w,c
 13131  007C80  6ED9               	movwf	fsr2l,c
 13132  007C82  0E00               	movlw	high _pBDTEntryIn
 13133  007C84  20F4               	addwfc	prodh,w,c
 13134  007C86  6EDA               	movwf	fsr2h,c
 13135  007C88  0E00               	movlw	0
 13136  007C8A  6EDE               	movwf	postinc2,c
 13137  007C8C  0E00               	movlw	0
 13138  007C8E  6EDD               	movwf	postdec2,c
 13139                           
 13140                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 13141  007C90  0101               	movlb	1	; () banked
 13142  007C92  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13143  007C94  0D02               	mullw	2
 13144  007C96  0E8F               	movlw	low _pBDTEntryOut
 13145  007C98  24F3               	addwf	prodl,w,c
 13146  007C9A  6ED9               	movwf	fsr2l,c
 13147  007C9C  0E00               	movlw	high _pBDTEntryOut
 13148  007C9E  20F4               	addwfc	prodh,w,c
 13149  007CA0  6EDA               	movwf	fsr2h,c
 13150  007CA2  0E00               	movlw	0
 13151  007CA4  6EDE               	movwf	postinc2,c
 13152  007CA6  0E00               	movlw	0
 13153  007CA8  6EDD               	movwf	postdec2,c
 13154                           
 13155                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 13156  007CAA  0101               	movlb	1	; () banked
 13157  007CAC  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13158  007CAE  0D01               	mullw	1
 13159  007CB0  0E95               	movlw	low _ep_data_in
 13160  007CB2  24F3               	addwf	prodl,w,c
 13161  007CB4  6ED9               	movwf	fsr2l,c
 13162  007CB6  0E00               	movlw	high _ep_data_in
 13163  007CB8  20F4               	addwfc	prodh,w,c
 13164  007CBA  6EDA               	movwf	fsr2h,c
 13165  007CBC  0E00               	movlw	0
 13166  007CBE  6EDF               	movwf	indf2,c
 13167                           
 13168                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 13169  007CC0  0101               	movlb	1	; () banked
 13170  007CC2  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13171  007CC4  0D01               	mullw	1
 13172  007CC6  0E97               	movlw	low _ep_data_out
 13173  007CC8  24F3               	addwf	prodl,w,c
 13174  007CCA  6ED9               	movwf	fsr2l,c
 13175  007CCC  0E00               	movlw	high _ep_data_out
 13176  007CCE  20F4               	addwfc	prodh,w,c
 13177  007CD0  6EDA               	movwf	fsr2h,c
 13178  007CD2  0E00               	movlw	0
 13179  007CD4  6EDF               	movwf	indf2,c
 13180                           
 13181                           ; BSR set to: 1
 13182  007CD6  0101               	movlb	1	; () banked
 13183  007CD8  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 13184  007CDA  D7C8               	goto	l20516
 13185  007CDC                     l20526:
 13186                           
 13187                           ; BSR set to: 1
 13188                           ;usb_device.c: 368: }
 13189                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13190  007CDC  0E08               	movlw	8
 13191  007CDE  0100               	movlb	0	; () banked
 13192  007CE0  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 13193  007CE2  0E0D               	movlw	13
 13194  007CE4  0100               	movlb	0	; () banked
 13195  007CE6  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 13199  007CE8  0E16               	movlw	22
 13200  007CEA  010F               	movlb	15	; () banked
 13201  007CEC  6F26               	movwf	38,b	;volatile
 13202                           
 13203                           ; BSR set to: 15
 13204                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13205  007CEE  0E0D               	movlw	13
 13206  007CF0  010D               	movlb	13	; () banked
 13207  007CF2  6F03               	movwf	3,b	;volatile
 13208  007CF4  0E20               	movlw	32
 13209  007CF6  6F02               	movwf	2,b	;volatile
 13210                           
 13211                           ; BSR set to: 13
 13212                           ;usb_device.c: 376: BDT[0].CNT = 8;
 13213  007CF8  0E08               	movlw	8
 13214  007CFA  010D               	movlb	13	; () banked
 13215  007CFC  6F01               	movwf	1,b	;volatile
 13216                           
 13217                           ; BSR set to: 13
 13218                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 13219  007CFE  0E04               	movlw	4
 13220  007D00  010D               	movlb	13	; () banked
 13221  007D02  6F00               	movwf	0,b	;volatile
 13222                           
 13223                           ; BSR set to: 13
 13224                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 13225  007D04  010D               	movlb	13	; () banked
 13226  007D06  8F00               	bsf	0,7,b	;volatile
 13227                           
 13228                           ; BSR set to: 13
 13229                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 13230  007D08  0E00               	movlw	0
 13231  007D0A  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 13232                           
 13233                           ; BSR set to: 13
 13234                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 13235  007D0C  0E00               	movlw	0
 13236  007D0E  6E4B               	movwf	_USBDeviceState,c	;volatile
 13237                           
 13238                           ; BSR set to: 13
 13239  007D10  0012               	return		;funcret
 13240  007D12                     __end_of_USBDeviceInit:
 13241                           	opt stack 0
 13242                           tblptru	equ	0xFF8
 13243                           tblptrh	equ	0xFF7
 13244                           tblptrl	equ	0xFF6
 13245                           tablat	equ	0xFF5
 13246                           prodh	equ	0xFF4
 13247                           prodl	equ	0xFF3
 13248                           indf0	equ	0xFEF
 13249                           postinc0	equ	0xFEE
 13250                           plusw0	equ	0xFEB
 13251                           fsr0h	equ	0xFEA
 13252                           fsr0l	equ	0xFE9
 13253                           wreg	equ	0xFE8
 13254                           postdec1	equ	0xFE5
 13255                           fsr1h	equ	0xFE2
 13256                           fsr1l	equ	0xFE1
 13257                           indf2	equ	0xFDF
 13258                           postinc2	equ	0xFDE
 13259                           postdec2	equ	0xFDD
 13260                           plusw2	equ	0xFDB
 13261                           fsr2h	equ	0xFDA
 13262                           fsr2l	equ	0xFD9
 13263                           status	equ	0xFD8
 13264                           
 13265 ;; *************** function _memset *****************
 13266 ;; Defined at:
 13267 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  p1              2    0[BANK1 ] PTR void 
 13270 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 13271 ;;  c               2    2[BANK1 ] int 
 13272 ;;  n               2    4[BANK1 ] unsigned int 
 13273 ;; Auto vars:     Size  Location     Type
 13274 ;;  p               2    6[BANK1 ] PTR unsigned char 
 13275 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  2    0[BANK1 ] PTR void 
 13278 ;; Registers used:
 13279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13285 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13286 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13288 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13289 ;;Total ram usage:        8 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:   16
 13292 ;; This function calls:
 13293 ;;		Nothing
 13294 ;; This function is called by:
 13295 ;;		_USBDeviceInit
 13296 ;; This function uses a non-reentrant model
 13297 ;;
 13298                           
 13299                           	psect	text35
 13300  00B972                     __ptext35:
 13301                           	opt stack 0
 13302  00B972                     _memset:
 13303                           	opt stack 13
 13304                           
 13305                           ; BSR set to: 13
 13306                           ;incstack = 0
 13307  00B972  C100  F106         	movff	memset@p1,memset@p
 13308  00B976  C101  F107         	movff	memset@p1+1,memset@p+1
 13309  00B97A  D009               	goto	l19152
 13310  00B97C                     l19148:
 13311  00B97C  C106  FFD9         	movff	memset@p,fsr2l
 13312  00B980  C107  FFDA         	movff	memset@p+1,fsr2h
 13313  00B984  C102  FFDF         	movff	memset@c,indf2
 13314  00B988  0101               	movlb	1	; () banked
 13315  00B98A  4B06               	infsnz	memset@p& (0+255),f,b
 13316  00B98C  2B07               	incf	(memset@p+1)& (0+255),f,b
 13317  00B98E                     l19152:
 13318  00B98E  0101               	movlb	1	; () banked
 13319  00B990  0704               	decf	memset@n& (0+255),f,b
 13320  00B992  A0D8               	btfss	status,0,c
 13321  00B994  0705               	decf	(memset@n+1)& (0+255),f,b
 13322  00B996  0101               	movlb	1	; () banked
 13323  00B998  2904               	incf	memset@n& (0+255),w,b
 13324  00B99A  E1F0               	bnz	l19148
 13325  00B99C  0101               	movlb	1	; () banked
 13326  00B99E  2905               	incf	(memset@n+1)& (0+255),w,b
 13327  00B9A0  B4D8               	btfsc	status,2,c
 13328  00B9A2  0012               	return	
 13329  00B9A4  D7EB               	goto	l19148
 13330  00B9A6                     __end_of_memset:
 13331                           	opt stack 0
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           indf0	equ	0xFEF
 13339                           postinc0	equ	0xFEE
 13340                           plusw0	equ	0xFEB
 13341                           fsr0h	equ	0xFEA
 13342                           fsr0l	equ	0xFE9
 13343                           wreg	equ	0xFE8
 13344                           postdec1	equ	0xFE5
 13345                           fsr1h	equ	0xFE2
 13346                           fsr1l	equ	0xFE1
 13347                           indf2	equ	0xFDF
 13348                           postinc2	equ	0xFDE
 13349                           postdec2	equ	0xFDD
 13350                           plusw2	equ	0xFDB
 13351                           fsr2h	equ	0xFDA
 13352                           fsr2l	equ	0xFD9
 13353                           status	equ	0xFD8
 13354                           
 13355 ;; *************** function _USBDeviceAttach *****************
 13356 ;; Defined at:
 13357 ;;		line 1352 in file "src/usb/usb_device.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;		None
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;		None               void
 13364 ;; Registers used:
 13365 ;;		wreg, status,2
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13375 ;;Total ram usage:        0 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:   16
 13378 ;; This function calls:
 13379 ;;		Nothing
 13380 ;; This function is called by:
 13381 ;;		_main
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           	psect	text36
 13386  00B894                     __ptext36:
 13387                           	opt stack 0
 13388  00B894                     _USBDeviceAttach:
 13389                           	opt stack 14
 13390                           
 13391                           ;usb_device.c: 1356: {
 13392                           ;usb_device.c: 1357: if(1 == 1)
 13393                           
 13394                           ; BSR set to: 1
 13395                           ;incstack = 0
 13396  00B894  504B               	movf	_USBDeviceState,w,c	;volatile
 13397  00B896  A4D8               	btfss	status,2,c
 13398  00B898  0012               	return	
 13399                           
 13400                           ;usb_device.c: 1358: {
 13401                           ;usb_device.c: 1360: UCON = 0;
 13402  00B89A  0E00               	movlw	0
 13403  00B89C  6E65               	movwf	3941,c	;volatile
 13404                           
 13405                           ;usb_device.c: 1363: UIE = 0;
 13406  00B89E  0E00               	movlw	0
 13407  00B8A0  010F               	movlb	15	; () banked
 13408  00B8A2  6F36               	movwf	54,b	;volatile
 13409                           
 13410                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 13411  00B8A4  0E16               	movlw	22
 13412  00B8A6  010F               	movlb	15	; () banked
 13413  00B8A8  6F39               	movwf	57,b	;volatile
 13414  00B8AA  0E9F               	movlw	159
 13415  00B8AC  010F               	movlb	15	; () banked
 13416  00B8AE  6F37               	movwf	55,b	;volatile
 13417  00B8B0  0E7B               	movlw	123
 13418  00B8B2  010F               	movlb	15	; () banked
 13419  00B8B4  6F36               	movwf	54,b	;volatile
 13420                           
 13421                           ; BSR set to: 15
 13422                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 0; PIE2bits.USBIE = 1;INTCONbit
      +                          s.GIEL = 1;INTCONbits.GIEH = 1;};
 13423  00B8B6  8ED0               	bsf	4048,7,c	;volatile
 13424                           
 13425                           ; BSR set to: 15
 13426  00B8B8  98A2               	bcf	4002,4,c	;volatile
 13427                           
 13428                           ; BSR set to: 15
 13429  00B8BA  88A0               	bsf	4000,4,c	;volatile
 13430                           
 13431                           ; BSR set to: 15
 13432  00B8BC  8CF2               	bsf	intcon,6,c	;volatile
 13433                           
 13434                           ; BSR set to: 15
 13435  00B8BE  8EF2               	bsf	intcon,7,c	;volatile
 13436                           
 13437                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 13438  00B8C0  D001               	goto	l1283
 13439  00B8C2                     l1284:
 13440  00B8C2  8665               	bsf	3941,3,c	;volatile
 13441  00B8C4                     l1283:
 13442  00B8C4  A665               	btfss	3941,3,c	;volatile
 13443  00B8C6  D7FD               	goto	l1284
 13444                           
 13445                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 13446  00B8C8  0E01               	movlw	1
 13447  00B8CA  6E4B               	movwf	_USBDeviceState,c	;volatile
 13448  00B8CC  0012               	return	
 13449  00B8CE                     __end_of_USBDeviceAttach:
 13450                           	opt stack 0
 13451                           tblptru	equ	0xFF8
 13452                           tblptrh	equ	0xFF7
 13453                           tblptrl	equ	0xFF6
 13454                           tablat	equ	0xFF5
 13455                           prodh	equ	0xFF4
 13456                           prodl	equ	0xFF3
 13457                           intcon	equ	0xFF2
 13458                           indf0	equ	0xFEF
 13459                           postinc0	equ	0xFEE
 13460                           plusw0	equ	0xFEB
 13461                           fsr0h	equ	0xFEA
 13462                           fsr0l	equ	0xFE9
 13463                           wreg	equ	0xFE8
 13464                           postdec1	equ	0xFE5
 13465                           fsr1h	equ	0xFE2
 13466                           fsr1l	equ	0xFE1
 13467                           indf2	equ	0xFDF
 13468                           postinc2	equ	0xFDE
 13469                           postdec2	equ	0xFDD
 13470                           plusw2	equ	0xFDB
 13471                           fsr2h	equ	0xFDA
 13472                           fsr2l	equ	0xFD9
 13473                           status	equ	0xFD8
 13474                           
 13475 ;; *************** function _SYSTEM_Initialize *****************
 13476 ;; Defined at:
 13477 ;;		line 60 in file "src/18F27J53/system.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;		None
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;  pll_startup_    2    0[BANK1 ] unsigned int 
 13482 ;; Return value:  Size  Location     Type
 13483 ;;		None               void
 13484 ;; Registers used:
 13485 ;;		wreg, status,2, status,0, cstack
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13492 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13494 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13495 ;;Total ram usage:        2 bytes
 13496 ;; Hardware stack levels used:    1
 13497 ;; Hardware stack levels required when called:   17
 13498 ;; This function calls:
 13499 ;;		_RtccWrOn
 13500 ;; This function is called by:
 13501 ;;		_main
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           	psect	text37
 13506  008624                     __ptext37:
 13507                           	opt stack 0
 13508  008624                     _SYSTEM_Initialize:
 13509                           	opt stack 13
 13510                           
 13511                           ;system.c: 64: unsigned int pll_startup_counter = 600;
 13512                           
 13513                           ;incstack = 0
 13514  008624  0E02               	movlw	2
 13515  008626  0101               	movlb	1	; () banked
 13516  008628  6F01               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 13517  00862A  0E58               	movlw	88
 13518  00862C  6F00               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 13519                           
 13520                           ; BSR set to: 1
 13521                           ;system.c: 65: OSCTUNEbits.PLLEN = 1;
 13522  00862E  8C9B               	bsf	3995,6,c	;volatile
 13523  008630                     l19552:
 13524                           
 13525                           ; BSR set to: 1
 13526  008630  0101               	movlb	1	; () banked
 13527  008632  0700               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 13528  008634  A0D8               	btfss	status,0,c
 13529  008636  0701               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 13530  008638  0101               	movlb	1	; () banked
 13531  00863A  2900               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 13532  00863C  E1F9               	bnz	l19552
 13533  00863E  0101               	movlb	1	; () banked
 13534  008640  2901               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 13535  008642  A4D8               	btfss	status,2,c
 13536  008644  D7F5               	goto	l19552
 13537                           
 13538                           ; BSR set to: 1
 13539                           ;system.c: 74: TRISA = 0;
 13540                           
 13541                           ; BSR set to: 1
 13542  008646  0E00               	movlw	0
 13543  008648  6E92               	movwf	3986,c	;volatile
 13544                           
 13545                           ;system.c: 75: TRISB = 0;
 13546  00864A  0E00               	movlw	0
 13547  00864C  6E93               	movwf	3987,c	;volatile
 13548                           
 13549                           ;system.c: 76: TRISC = 0;
 13550  00864E  0E00               	movlw	0
 13551  008650  6E94               	movwf	3988,c	;volatile
 13552                           
 13553                           ; BSR set to: 1
 13554                           ;system.c: 78: LATCbits.LATC0 = 1;
 13555  008652  808B               	bsf	3979,0,c	;volatile
 13556                           
 13557                           ;system.c: 83: RTCCFG = 0x0;
 13558  008654  0E00               	movlw	0
 13559  008656  010F               	movlb	15	; () banked
 13560  008658  6F3F               	movwf	63,b	;volatile
 13561                           
 13562                           ;system.c: 84: RTCCAL = 0x00;
 13563  00865A  0E00               	movlw	0
 13564  00865C  010F               	movlb	15	; () banked
 13565  00865E  6F3E               	movwf	62,b	;volatile
 13566                           
 13567                           ; BSR set to: 15
 13568                           ;system.c: 93: (RTCCFGbits.RTCWREN = 0);
 13569  008660  010F               	movlb	15	; () banked
 13570  008662  9B3F               	bcf	63,5,b	;volatile
 13571                           
 13572                           ; BSR set to: 15
 13573                           ;system.c: 94: RtccWrOn();
 13574  008664  ECB2  F05D         	call	_RtccWrOn	;wreg free
 13575                           
 13576                           ;system.c: 95: (RTCCFGbits.RTCEN=1);
 13577  008668  010F               	movlb	15	; () banked
 13578  00866A  8F3F               	bsf	63,7,b	;volatile
 13579                           
 13580                           ; BSR set to: 15
 13581                           ;system.c: 96: (ALRMCFGbits.ALRMEN=1);
 13582  00866C  010F               	movlb	15	; () banked
 13583  00866E  8F47               	bsf	71,7,b	;volatile
 13584                           
 13585                           ; BSR set to: 15
 13586                           ;system.c: 97: RTCCFGbits.RTCPTR0 = 0;
 13587  008670  010F               	movlb	15	; () banked
 13588  008672  913F               	bcf	63,0,b	;volatile
 13589                           
 13590                           ; BSR set to: 15
 13591                           ;system.c: 98: RTCCFGbits.RTCPTR1 = 0;
 13592  008674  010F               	movlb	15	; () banked
 13593  008676  933F               	bcf	63,1,b	;volatile
 13594                           
 13595                           ; BSR set to: 15
 13596                           ;system.c: 99: RTCVALHbits.RTCVALH = 0x00;
 13597  008678  0E00               	movlw	0
 13598  00867A  010F               	movlb	15	; () banked
 13599  00867C  6F3B               	movwf	59,b	;volatile
 13600                           
 13601                           ; BSR set to: 15
 13602                           ;system.c: 100: RTCVALLbits.RTCVALL = 0x00;
 13603  00867E  0E00               	movlw	0
 13604  008680  010F               	movlb	15	; () banked
 13605  008682  6F3A               	movwf	58,b	;volatile
 13606                           
 13607                           ; BSR set to: 15
 13608                           ;system.c: 102: ALRMCFGbits.AMASK = 0b0011;
 13609  008684  010F               	movlb	15	; () banked
 13610  008686  5147               	movf	71,w,b	;volatile
 13611  008688  0BC3               	andlw	-61
 13612  00868A  090C               	iorlw	12
 13613  00868C  6F47               	movwf	71,b	;volatile
 13614                           
 13615                           ; BSR set to: 15
 13616                           ;system.c: 104: ALRMCFGbits.CHIME = 1;
 13617  00868E  010F               	movlb	15	; () banked
 13618  008690  8D47               	bsf	71,6,b	;volatile
 13619                           
 13620                           ; BSR set to: 15
 13621                           ;system.c: 105: ALRMCFGbits.ALRMEN = 1;
 13622  008692  010F               	movlb	15	; () banked
 13623  008694  8F47               	bsf	71,7,b	;volatile
 13624                           
 13625                           ; BSR set to: 15
 13626                           ;system.c: 106: (RTCCFGbits.RTCWREN = 0);
 13627  008696  010F               	movlb	15	; () banked
 13628  008698  9B3F               	bcf	63,5,b	;volatile
 13629                           
 13630                           ; BSR set to: 15
 13631                           ;system.c: 109: IPR3bits.RTCCIP = 0;
 13632  00869A  90A5               	bcf	4005,0,c	;volatile
 13633                           
 13634                           ; BSR set to: 15
 13635                           ;system.c: 110: PIR3bits.RTCCIF = 0;
 13636  00869C  90A4               	bcf	4004,0,c	;volatile
 13637                           
 13638                           ; BSR set to: 15
 13639                           ;system.c: 111: PIE3bits.RTCCIE = 1;
 13640  00869E  80A3               	bsf	4003,0,c	;volatile
 13641                           
 13642                           ; BSR set to: 15
 13643                           ;system.c: 117: EECON2 = 0x55;
 13644  0086A0  0E55               	movlw	85
 13645  0086A2  6EA7               	movwf	4007,c	;volatile
 13646                           
 13647                           ; BSR set to: 15
 13648                           ;system.c: 118: EECON2 = 0xAA;
 13649  0086A4  0EAA               	movlw	170
 13650  0086A6  6EA7               	movwf	4007,c	;volatile
 13651                           
 13652                           ; BSR set to: 15
 13653                           ;system.c: 119: PPSCONbits.IOLOCK = 0;
 13654  0086A8  010E               	movlb	14	; () banked
 13655  0086AA  91BF               	bcf	191,0,b	;volatile
 13656                           
 13657                           ; BSR set to: 14
 13658                           ;system.c: 122: RPINR1 = 13;
 13659  0086AC  0E0D               	movlw	13
 13660  0086AE  010E               	movlb	14	; () banked
 13661  0086B0  6FE1               	movwf	225,b	;volatile
 13662                           
 13663                           ; BSR set to: 14
 13664                           ;system.c: 123: RPINR21 = 12;
 13665  0086B2  0E0C               	movlw	12
 13666  0086B4  010E               	movlb	14	; () banked
 13667  0086B6  6FFC               	movwf	252,b	;volatile
 13668                           
 13669                           ; BSR set to: 14
 13670                           ;system.c: 124: RPINR22 = 5;
 13671  0086B8  0E05               	movlw	5
 13672  0086BA  010E               	movlb	14	; () banked
 13673  0086BC  6FFD               	movwf	253,b	;volatile
 13674                           
 13675                           ; BSR set to: 14
 13676                           ;system.c: 127: RPOR4 = 10;
 13677  0086BE  0E0A               	movlw	10
 13678  0086C0  010E               	movlb	14	; () banked
 13679  0086C2  6FC4               	movwf	196,b	;volatile
 13680                           
 13681                           ; BSR set to: 14
 13682                           ;system.c: 128: RPOR5 = 11;
 13683  0086C4  0E0B               	movlw	11
 13684  0086C6  010E               	movlb	14	; () banked
 13685  0086C8  6FC5               	movwf	197,b	;volatile
 13686                           
 13687                           ; BSR set to: 14
 13688                           ;system.c: 132: RPOR11 = 14;
 13689  0086CA  0E0E               	movlw	14
 13690  0086CC  010E               	movlb	14	; () banked
 13691  0086CE  6FCB               	movwf	203,b	;volatile
 13692                           
 13693                           ; BSR set to: 14
 13694                           ;system.c: 136: EECON2 = 0x55;
 13695  0086D0  0E55               	movlw	85
 13696  0086D2  6EA7               	movwf	4007,c	;volatile
 13697                           
 13698                           ; BSR set to: 14
 13699                           ;system.c: 137: EECON2 = 0xAA;
 13700  0086D4  0EAA               	movlw	170
 13701  0086D6  6EA7               	movwf	4007,c	;volatile
 13702                           
 13703                           ; BSR set to: 14
 13704                           ;system.c: 138: PPSCONbits.IOLOCK = 1;
 13705  0086D8  010E               	movlb	14	; () banked
 13706  0086DA  81BF               	bsf	191,0,b	;volatile
 13707                           
 13708                           ; BSR set to: 14
 13709                           ;system.c: 147: ANCON0 = 0xFF;
 13710  0086DC  010F               	movlb	15	; () banked
 13711  0086DE  6948               	setf	72,b	;volatile
 13712                           
 13713                           ; BSR set to: 15
 13714                           ;system.c: 148: ANCON1 = 0x1F;
 13715  0086E0  0E1F               	movlw	31
 13716  0086E2  010F               	movlb	15	; () banked
 13717  0086E4  6F49               	movwf	73,b	;volatile
 13718                           
 13719                           ; BSR set to: 15
 13720                           ;system.c: 151: RTCEN = 0;
 13721  0086E6  010F               	movlb	15	; () banked
 13722  0086E8  9F3F               	bcf	63,7,b	;volatile
 13723                           
 13724                           ; BSR set to: 15
 13725                           ;system.c: 152: RTCOE = 0;
 13726  0086EA  010F               	movlb	15	; () banked
 13727  0086EC  953F               	bcf	63,2,b	;volatile
 13728                           
 13729                           ; BSR set to: 15
 13730                           ;system.c: 158: RCONbits.IPEN = 1;
 13731  0086EE  8ED0               	bsf	4048,7,c	;volatile
 13732                           
 13733                           ; BSR set to: 15
 13734                           ;system.c: 164: LATCbits.LATC6 = 1;
 13735  0086F0  8C8B               	bsf	3979,6,c	;volatile
 13736                           
 13737                           ; BSR set to: 15
 13738                           ;system.c: 165: LATBbits.LATB3 = 1;
 13739  0086F2  868A               	bsf	3978,3,c	;volatile
 13740                           
 13741                           ; BSR set to: 15
 13742                           ;system.c: 167: TRISCbits.TRISC6 = 0;
 13743  0086F4  9C94               	bcf	3988,6,c	;volatile
 13744                           
 13745                           ; BSR set to: 15
 13746                           ;system.c: 168: TRISBbits.TRISB3 = 0;
 13747  0086F6  9693               	bcf	3987,3,c	;volatile
 13748                           
 13749                           ; BSR set to: 15
 13750                           ;system.c: 171: TRISBbits.TRISB0 = 1;
 13751  0086F8  8093               	bsf	3987,0,c	;volatile
 13752                           
 13753                           ; BSR set to: 15
 13754                           ;system.c: 172: TRISCbits.TRISC2 = 1;
 13755  0086FA  8494               	bsf	3988,2,c	;volatile
 13756                           
 13757                           ; BSR set to: 15
 13758                           ;system.c: 175: INTCON2bits.INTEDG1 = 1;
 13759  0086FC  8AF1               	bsf	intcon2,5,c	;volatile
 13760                           
 13761                           ; BSR set to: 15
 13762                           ;system.c: 178: INTCON2bits.INTEDG0 = 1;
 13763  0086FE  8CF1               	bsf	intcon2,6,c	;volatile
 13764                           
 13765                           ; BSR set to: 15
 13766                           ;system.c: 180: INTCONbits.INT0IF = 0;
 13767  008700  92F2               	bcf	intcon,1,c	;volatile
 13768                           
 13769                           ; BSR set to: 15
 13770                           ;system.c: 181: INTCONbits.INT0IE = 1;
 13771  008702  88F2               	bsf	intcon,4,c	;volatile
 13772                           
 13773                           ; BSR set to: 15
 13774                           ;system.c: 183: INTCON3bits.INT1IF = 0;
 13775  008704  90F0               	bcf	intcon3,0,c	;volatile
 13776                           
 13777                           ; BSR set to: 15
 13778                           ;system.c: 184: INTCON3bits.INT1IP = 1;
 13779  008706  8CF0               	bsf	intcon3,6,c	;volatile
 13780                           
 13781                           ; BSR set to: 15
 13782                           ;system.c: 185: INTCON3bits.INT1IE = 1;
 13783  008708  86F0               	bsf	intcon3,3,c	;volatile
 13784                           
 13785                           ; BSR set to: 15
 13786                           ;system.c: 191: TRISCbits.TRISC1 = 1;
 13787  00870A  8294               	bsf	3988,1,c	;volatile
 13788                           
 13789                           ; BSR set to: 15
 13790                           ;system.c: 192: TRISBbits.TRISB1 = 0;
 13791  00870C  9293               	bcf	3987,1,c	;volatile
 13792                           
 13793                           ; BSR set to: 15
 13794                           ;system.c: 193: TRISBbits.TRISB2 = 0;
 13795  00870E  9493               	bcf	3987,2,c	;volatile
 13796                           
 13797                           ; BSR set to: 15
 13798                           ;system.c: 195: SSP2STAT = 0xC0;
 13799  008710  0EC0               	movlw	192
 13800  008712  6E73               	movwf	3955,c	;volatile
 13801                           
 13802                           ; BSR set to: 15
 13803                           ;system.c: 196: SSP2CON1 = 0x21;
 13804  008714  0E21               	movlw	33
 13805  008716  6E72               	movwf	3954,c	;volatile
 13806                           
 13807                           ; BSR set to: 15
 13808                           ;system.c: 199: LATAbits.LATA5 = 0;
 13809  008718  9A89               	bcf	3977,5,c	;volatile
 13810                           
 13811                           ; BSR set to: 15
 13812                           ;system.c: 200: TRISAbits.TRISA5 = 1;
 13813  00871A  8A92               	bsf	3986,5,c	;volatile
 13814                           
 13815                           ; BSR set to: 15
 13816                           ;system.c: 205: INTCONbits.GIEH = 1;
 13817  00871C  8EF2               	bsf	intcon,7,c	;volatile
 13818                           
 13819                           ; BSR set to: 15
 13820                           ;system.c: 206: INTCONbits.GIEL = 1;
 13821  00871E  8CF2               	bsf	intcon,6,c	;volatile
 13822                           
 13823                           ; BSR set to: 15
 13824                           ;system.c: 217: TRISCbits.TRISC0 = 1;
 13825  008720  8094               	bsf	3988,0,c	;volatile
 13826                           
 13827                           ; BSR set to: 15
 13828                           ;system.c: 220: CCPTMRS0 = 0x00;
 13829  008722  0E00               	movlw	0
 13830  008724  010F               	movlb	15	; () banked
 13831  008726  6F52               	movwf	82,b	;volatile
 13832                           
 13833                           ; BSR set to: 15
 13834                           ;system.c: 222: PR2 = 0xF9;
 13835  008728  0EF9               	movlw	249
 13836  00872A  6ECB               	movwf	4043,c	;volatile
 13837                           
 13838                           ; BSR set to: 15
 13839                           ;system.c: 223: CCP1CONbits.DC1B = 0b00;
 13840  00872C  0ECF               	movlw	-49
 13841  00872E  16BA               	andwf	4026,f,c	;volatile
 13842                           
 13843                           ; BSR set to: 15
 13844                           ;system.c: 224: CCP1CONbits.CCP1M = 0b1100;
 13845  008730  50BA               	movf	4026,w,c	;volatile
 13846  008732  0BF0               	andlw	-16
 13847  008734  090C               	iorlw	12
 13848  008736  6EBA               	movwf	4026,c	;volatile
 13849                           
 13850                           ; BSR set to: 15
 13851                           ;system.c: 225: CCPR1L = 0x00;
 13852  008738  0E00               	movlw	0
 13853  00873A  6EBB               	movwf	4027,c	;volatile
 13854                           
 13855                           ; BSR set to: 15
 13856                           ;system.c: 227: T2CONbits.T2CKPS = 0b10;
 13857  00873C  50CA               	movf	4042,w,c	;volatile
 13858  00873E  0BFC               	andlw	-4
 13859  008740  0902               	iorlw	2
 13860  008742  6ECA               	movwf	4042,c	;volatile
 13861                           
 13862                           ; BSR set to: 15
 13863                           ;system.c: 228: T2CONbits.TMR2ON = 0b1;
 13864  008744  84CA               	bsf	4042,2,c	;volatile
 13865                           
 13866                           ; BSR set to: 15
 13867                           ;system.c: 233: TRISCbits.TRISC0 = 0;
 13868  008746  9094               	bcf	3988,0,c	;volatile
 13869                           
 13870                           ; BSR set to: 15
 13871                           ;system.c: 238: T4CONbits.T4OUTPS = 0b1111;
 13872  008748  8676               	bsf	3958,3,c	;volatile
 13873  00874A  8876               	bsf	3958,4,c	;volatile
 13874  00874C  8A76               	bsf	3958,5,c	;volatile
 13875  00874E  8C76               	bsf	3958,6,c	;volatile
 13876                           
 13877                           ; BSR set to: 15
 13878                           ;system.c: 239: T4CONbits.T4CKPS = 0b11;
 13879  008750  0E03               	movlw	3
 13880  008752  1276               	iorwf	3958,f,c	;volatile
 13881                           
 13882                           ; BSR set to: 15
 13883                           ;system.c: 240: PR4 = 234;
 13884  008754  0EEA               	movlw	234
 13885  008756  6E77               	movwf	3959,c	;volatile
 13886                           
 13887                           ; BSR set to: 15
 13888                           ;system.c: 241: IPR3bits.TMR4IP = 0;
 13889  008758  96A5               	bcf	4005,3,c	;volatile
 13890                           
 13891                           ; BSR set to: 15
 13892                           ;system.c: 242: PIR3bits.TMR4IF = 0;
 13893  00875A  96A4               	bcf	4004,3,c	;volatile
 13894                           
 13895                           ; BSR set to: 15
 13896                           ;system.c: 243: PIE3bits.TMR4IE = 1;
 13897  00875C  86A3               	bsf	4003,3,c	;volatile
 13898                           
 13899                           ; BSR set to: 15
 13900                           ;system.c: 244: T4CONbits.TMR4ON = 1;
 13901  00875E  8476               	bsf	3958,2,c	;volatile
 13902                           
 13903                           ; BSR set to: 15
 13904  008760  0012               	return		;funcret
 13905  008762                     __end_of_SYSTEM_Initialize:
 13906                           	opt stack 0
 13907                           tblptru	equ	0xFF8
 13908                           tblptrh	equ	0xFF7
 13909                           tblptrl	equ	0xFF6
 13910                           tablat	equ	0xFF5
 13911                           prodh	equ	0xFF4
 13912                           prodl	equ	0xFF3
 13913                           intcon	equ	0xFF2
 13914                           intcon2	equ	0xFF1
 13915                           intcon3	equ	0xFF0
 13916                           indf0	equ	0xFEF
 13917                           postinc0	equ	0xFEE
 13918                           plusw0	equ	0xFEB
 13919                           fsr0h	equ	0xFEA
 13920                           fsr0l	equ	0xFE9
 13921                           wreg	equ	0xFE8
 13922                           postdec1	equ	0xFE5
 13923                           fsr1h	equ	0xFE2
 13924                           fsr1l	equ	0xFE1
 13925                           indf2	equ	0xFDF
 13926                           postinc2	equ	0xFDE
 13927                           postdec2	equ	0xFDD
 13928                           plusw2	equ	0xFDB
 13929                           fsr2h	equ	0xFDA
 13930                           fsr2l	equ	0xFD9
 13931                           status	equ	0xFD8
 13932                           
 13933 ;; *************** function _RtccWrOn *****************
 13934 ;; Defined at:
 13935 ;;		line 21 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\rtcc\RtccWrOn.c"
 13936 ;; Parameters:    Size  Location     Type
 13937 ;;		None
 13938 ;; Auto vars:     Size  Location     Type
 13939 ;;  data            2    0        unsigned int 
 13940 ;; Return value:  Size  Location     Type
 13941 ;;		None               void
 13942 ;; Registers used:
 13943 ;;		wreg, status,2
 13944 ;; Tracked objects:
 13945 ;;		On entry : 0/0
 13946 ;;		On exit  : 0/0
 13947 ;;		Unchanged: 0/0
 13948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13953 ;;Total ram usage:        0 bytes
 13954 ;; Hardware stack levels used:    1
 13955 ;; Hardware stack levels required when called:   16
 13956 ;; This function calls:
 13957 ;;		Nothing
 13958 ;; This function is called by:
 13959 ;;		_SYSTEM_Initialize
 13960 ;;		_update_variable
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text38
 13965  00BB64                     __ptext38:
 13966                           	opt stack 0
 13967  00BB64                     _RtccWrOn:
 13968                           	opt stack 13
 13969                           
 13970                           ; BSR set to: 15
 13971                           ;incstack = 0
 13972  00BB64  9CF2               	bcf	intcon,6,c	;volatile
 13973  00BB66  0E55               	movlw	85
 13974  00BB68  6EA7               	movwf	4007,c	;volatile
 13975  00BB6A  0EAA               	movlw	170
 13976  00BB6C  6EA7               	movwf	4007,c	;volatile
 13977  00BB6E  010F               	movlb	15	; () banked
 13978  00BB70  8B3F               	bsf	63,5,b	;volatile
 13979                           
 13980                           ; BSR set to: 15
 13981  00BB72  8CF2               	bsf	intcon,6,c	;volatile
 13982                           
 13983                           ; BSR set to: 15
 13984  00BB74  0012               	return		;funcret
 13985  00BB76                     __end_of_RtccWrOn:
 13986                           	opt stack 0
 13987                           tblptru	equ	0xFF8
 13988                           tblptrh	equ	0xFF7
 13989                           tblptrl	equ	0xFF6
 13990                           tablat	equ	0xFF5
 13991                           prodh	equ	0xFF4
 13992                           prodl	equ	0xFF3
 13993                           intcon	equ	0xFF2
 13994                           intcon2	equ	0xFF1
 13995                           intcon3	equ	0xFF0
 13996                           indf0	equ	0xFEF
 13997                           postinc0	equ	0xFEE
 13998                           plusw0	equ	0xFEB
 13999                           fsr0h	equ	0xFEA
 14000                           fsr0l	equ	0xFE9
 14001                           wreg	equ	0xFE8
 14002                           postdec1	equ	0xFE5
 14003                           fsr1h	equ	0xFE2
 14004                           fsr1l	equ	0xFE1
 14005                           indf2	equ	0xFDF
 14006                           postinc2	equ	0xFDE
 14007                           postdec2	equ	0xFDD
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8
 14012                           
 14013 ;; *************** function _MiApp_UnicastAddress *****************
 14014 ;; Defined at:
 14015 ;;		line 4566 in file "src/miwi/miwi_mesh.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;  DestAddress     2  125[BANK1 ] PTR unsigned char 
 14018 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), main@shortaddress
      +(2), 
 14019 ;;		 -> openSocketInfo.ShortAddress1(2), openSocketInfo(18), tempShortAddress(2), 
 14020 ;;  PermanentAdd    1  127[BANK1 ] unsigned char 
 14021 ;;  SecEn           1  128[BANK1 ] unsigned char 
 14022 ;; Auto vars:     Size  Location     Type
 14023 ;;  t2              4    4[BANK3 ] struct _MIWI_TICK
 14024 ;;  t1              4    0[BANK3 ] struct _MIWI_TICK
 14025 ;;  t2              4   12[BANK3 ] struct _MIWI_TICK
 14026 ;;  t1              4    8[BANK3 ] struct _MIWI_TICK
 14027 ;;  handle          1   18[BANK3 ] unsigned char 
 14028 ;;  i               1   17[BANK3 ] unsigned char 
 14029 ;;  MiWiFrameCon    1   16[BANK3 ] unsigned char 
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  1    wreg      unsigned char 
 14032 ;; Registers used:
 14033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14039 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14040 ;;      Locals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14041 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14042 ;;      Totals:         0       0      12       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14043 ;;Total ram usage:       31 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:   27
 14046 ;; This function calls:
 14047 ;;		_MiApp_DiscardMessage
 14048 ;;		_MiApp_MessageAvailable
 14049 ;;		_MiMAC_SendPacket
 14050 ;;		_MiWi_TickGet
 14051 ;;		_RouteMessage
 14052 ;;		_SearchForLongAddress
 14053 ;; This function is called by:
 14054 ;;		_main
 14055 ;;		_OpenSocket
 14056 ;;		_do_NETWORK_REGISTER
 14057 ;;		_do_POWER_TEST
 14058 ;;		_do_PING
 14059 ;;		_do_UPDATE
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           	psect	text39
 14064  005DBC                     __ptext39:
 14065                           	opt stack 0
 14066  005DBC                     _MiApp_UnicastAddress:
 14067                           	opt stack 3
 14068                           
 14069                           ;miwi_mesh.c: 4568: uint8_t handle;
 14070                           ;miwi_mesh.c: 4569: uint8_t i;
 14071                           ;miwi_mesh.c: 4570: uint8_t MiWiFrameControl;
 14072                           ;miwi_mesh.c: 4572: if( MiWiAckRequired && TxBuffer[11])
 14073                           
 14074                           ; BSR set to: 15
 14075                           ;incstack = 0
 14076  005DBC  0101               	movlb	1	; () banked
 14077  005DBE  51C1               	movf	_MiWiAckRequired& (0+255),w,b
 14078  005DC0  B4D8               	btfsc	status,2,c
 14079  005DC2  D00C               	goto	l20098
 14080                           
 14081                           ; BSR set to: 1
 14082  005DC4  0102               	movlb	2	; () banked
 14083  005DC6  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 14084  005DC8  B4D8               	btfsc	status,2,c
 14085  005DCA  D008               	goto	l20098
 14086                           
 14087                           ; BSR set to: 2
 14088                           ;miwi_mesh.c: 4573: {
 14089                           ;miwi_mesh.c: 4574: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 14090  005DCC  0101               	movlb	1	; () banked
 14091  005DCE  87B5               	bsf	_MiWiStateMachine& (0+255),3,b
 14092                           
 14093                           ;miwi_mesh.c: 4575: AcknowledgementSeq = MiWiSeqNum;
 14094  005DD0  C1C3  F1F8         	movff	_MiWiSeqNum,_AcknowledgementSeq
 14095                           
 14096                           ; BSR set to: 1
 14097                           ;miwi_mesh.c: 4576: MiWiFrameControl = 0x06;
 14098  005DD4  0E06               	movlw	6
 14099  005DD6  0103               	movlb	3	; () banked
 14100  005DD8  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14101                           
 14102                           ;miwi_mesh.c: 4577: }
 14103  005DDA  D005               	goto	l1014
 14104  005DDC                     l20098:
 14105                           
 14106                           ;miwi_mesh.c: 4578: else
 14107                           ;miwi_mesh.c: 4579: {
 14108                           ;miwi_mesh.c: 4580: MiWiFrameControl = 0x02;
 14109  005DDC  0E02               	movlw	2
 14110  005DDE  0103               	movlb	3	; () banked
 14111  005DE0  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14112                           
 14113                           ; BSR set to: 3
 14114                           ;miwi_mesh.c: 4581: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14115  005DE2  0101               	movlb	1	; () banked
 14116  005DE4  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14117  005DE6                     l1014:
 14118                           
 14119                           ;miwi_mesh.c: 4582: }
 14120                           ;miwi_mesh.c: 4584: if( PermanentAddr )
 14121  005DE6  0101               	movlb	1	; () banked
 14122  005DE8  517F               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 14123  005DEA  0101               	movlb	1	; () banked
 14124  005DEC  B4D8               	btfsc	status,2,c
 14125  005DEE  D160               	goto	l20222
 14126                           
 14127                           ; BSR set to: 1
 14128                           ;miwi_mesh.c: 4585: {
 14129                           ;miwi_mesh.c: 4586: for(i = 0; i < 4; i++)
 14130  005DF0  0E00               	movlw	0
 14131  005DF2  0103               	movlb	3	; () banked
 14132  005DF4  6FD5               	movwf	MiApp_UnicastAddress@i& (0+255),b
 14133  005DF6                     l20104:
 14134                           
 14135                           ; BSR set to: 3
 14136  005DF6  0E03               	movlw	3
 14137  005DF8  0103               	movlb	3	; () banked
 14138  005DFA  65D5               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 14139  005DFC  D001               	goto	l20108
 14140  005DFE  D019               	goto	l20114
 14141  005E00                     l20108:
 14142                           
 14143                           ; BSR set to: 3
 14144                           ;miwi_mesh.c: 4587: {
 14145                           ;miwi_mesh.c: 4588: tempLongAddress[i] = DestAddress[i];
 14146  005E00  0103               	movlb	3	; () banked
 14147  005E02  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14148  005E04  0D01               	mullw	1
 14149  005E06  50F3               	movf	prodl,w,c
 14150  005E08  0101               	movlb	1	; () banked
 14151  005E0A  257D               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14152  005E0C  6ED9               	movwf	fsr2l,c
 14153  005E0E  50F4               	movf	prodh,w,c
 14154  005E10  0101               	movlb	1	; () banked
 14155  005E12  217E               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14156  005E14  6EDA               	movwf	fsr2h,c
 14157  005E16  0103               	movlb	3	; () banked
 14158  005E18  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14159  005E1A  0D01               	mullw	1
 14160  005E1C  0EA6               	movlw	low _tempLongAddress
 14161  005E1E  24F3               	addwf	prodl,w,c
 14162  005E20  6EE1               	movwf	fsr1l,c
 14163  005E22  0E01               	movlw	high _tempLongAddress
 14164  005E24  20F4               	addwfc	prodh,w,c
 14165  005E26  6EE2               	movwf	fsr1h,c
 14166  005E28  CFDF FFE7          	movff	indf2,indf1
 14167                           
 14168                           ; BSR set to: 3
 14169  005E2C  0103               	movlb	3	; () banked
 14170  005E2E  2BD5               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 14171  005E30  D7E2               	goto	l20104
 14172  005E32                     l20114:
 14173                           
 14174                           ; BSR set to: 3
 14175                           ;miwi_mesh.c: 4589: }
 14176                           ;miwi_mesh.c: 4590: if( (handle = SearchForLongAddress()) == 0xFF )
 14177  005E32  ECB2  F04E         	call	_SearchForLongAddress	;wreg free
 14178  005E36  0103               	movlb	3	; () banked
 14179  005E38  6FD6               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 14180  005E3A  0103               	movlb	3	; () banked
 14181  005E3C  29D6               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 14182  005E3E  A4D8               	btfss	status,2,c
 14183  005E40  D03D               	goto	l20154
 14184  005E42                     l1019:
 14185                           
 14186                           ; BSR set to: 3
 14187                           ;miwi_mesh.c: 4594: TxBuffer[0] = defaultHops;
 14188  005E42  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 14189                           
 14190                           ; BSR set to: 3
 14191                           ;miwi_mesh.c: 4595: TxBuffer[1] = 0x02;
 14192  005E46  0E02               	movlw	2
 14193  005E48  0102               	movlb	2	; () banked
 14194  005E4A  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;miwi_mesh.c: 4596: TxBuffer[2] = 0xFF;
 14198  005E4C  0102               	movlb	2	; () banked
 14199  005E4E  69A8               	setf	(_TxBuffer+2)& (0+255),b
 14200                           
 14201                           ; BSR set to: 2
 14202                           ;miwi_mesh.c: 4597: TxBuffer[3] = 0xFF;
 14203  005E50  0102               	movlb	2	; () banked
 14204  005E52  69A9               	setf	(_TxBuffer+3)& (0+255),b
 14205                           
 14206                           ; BSR set to: 2
 14207                           ;miwi_mesh.c: 4598: TxBuffer[4] = 0xFF;
 14208  005E54  0102               	movlb	2	; () banked
 14209  005E56  69AA               	setf	(_TxBuffer+4)& (0+255),b
 14210                           
 14211                           ; BSR set to: 2
 14212                           ;miwi_mesh.c: 4599: TxBuffer[5] = 0xFF;
 14213  005E58  0102               	movlb	2	; () banked
 14214  005E5A  69AB               	setf	(_TxBuffer+5)& (0+255),b
 14215                           
 14216                           ; BSR set to: 2
 14217                           ;miwi_mesh.c: 4600: TxBuffer[6] = myPANID.v[0];
 14218  005E5C  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14219                           
 14220                           ; BSR set to: 2
 14221                           ;miwi_mesh.c: 4601: TxBuffer[7] = myPANID.v[1];
 14222  005E60  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14223                           
 14224                           ; BSR set to: 2
 14225                           ;miwi_mesh.c: 4602: TxBuffer[8] = myShortAddress.v[0];
 14226  005E64  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14227                           
 14228                           ; BSR set to: 2
 14229                           ;miwi_mesh.c: 4603: TxBuffer[9] = myShortAddress.v[1];
 14230  005E68  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14231                           
 14232                           ; BSR set to: 2
 14233                           ;miwi_mesh.c: 4604: TxBuffer[10] = MiWiSeqNum++;
 14234  005E6C  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14235                           
 14236                           ; BSR set to: 2
 14237  005E70  0101               	movlb	1	; () banked
 14238  005E72  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14239                           
 14240                           ; BSR set to: 1
 14241                           ;miwi_mesh.c: 4617: MTP.flags.Val = 0;
 14242  005E74  0E00               	movlw	0
 14243  005E76  0101               	movlb	1	; () banked
 14244  005E78  6FAD               	movwf	_MTP& (0+255),b
 14245                           
 14246                           ; BSR set to: 1
 14247                           ;miwi_mesh.c: 4618: MTP.flags.bits.ackReq = 1;
 14248  005E7A  0101               	movlb	1	; () banked
 14249  005E7C  8BAD               	bsf	_MTP& (0+255),5,b
 14250                           
 14251                           ; BSR set to: 1
 14252                           ;miwi_mesh.c: 4619: MTP.flags.bits.secEn = SecEn;
 14253  005E7E  0101               	movlb	1	; () banked
 14254  005E80  B180               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14255  005E82  D003               	bra	u23065
 14256  005E84  0101               	movlb	1	; () banked
 14257  005E86  97AD               	bcf	_MTP& (0+255),3,b
 14258  005E88  D002               	bra	u23066
 14259  005E8A                     u23065:
 14260  005E8A  0101               	movlb	1	; () banked
 14261  005E8C  87AD               	bsf	_MTP& (0+255),3,b
 14262  005E8E                     u23066:
 14263                           
 14264                           ; BSR set to: 1
 14265                           ;miwi_mesh.c: 4620: MTP.DestAddress = DestAddress;
 14266  005E8E  C17D  F1AE         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 14267  005E92  C17E  F1AF         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 14268                           
 14269                           ; BSR set to: 1
 14270                           ;miwi_mesh.c: 4626: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14271  005E96  0101               	movlb	1	; () banked
 14272  005E98  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14273                           
 14274                           ; BSR set to: 1
 14275                           ;miwi_mesh.c: 4628: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 14276  005E9A  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 14277  005E9E  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14278  005EA2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14279  005EA6  0EA6               	movlw	low _TxBuffer
 14280  005EA8  0101               	movlb	1	; () banked
 14281  005EAA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14282  005EAC  0E02               	movlw	high _TxBuffer
 14283  005EAE  0101               	movlb	1	; () banked
 14284  005EB0  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14285  005EB2  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14286  005EB6  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 14287  005EBA  0012               	return	
 14288  005EBC                     l20154:
 14289                           
 14290                           ;miwi_mesh.c: 4630: else
 14291                           ;miwi_mesh.c: 4631: {
 14292                           ;miwi_mesh.c: 4632: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 14293  005EBC  0103               	movlb	3	; () banked
 14294  005EBE  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14295  005EC0  0D09               	mullw	9
 14296  005EC2  0E08               	movlw	8
 14297  005EC4  26F3               	addwf	prodl,f,c
 14298  005EC6  0E00               	movlw	0
 14299  005EC8  22F4               	addwfc	prodh,f,c
 14300  005ECA  0E00               	movlw	low _ConnectionTable
 14301  005ECC  24F3               	addwf	prodl,w,c
 14302  005ECE  6ED9               	movwf	fsr2l,c
 14303  005ED0  0E06               	movlw	high _ConnectionTable
 14304  005ED2  20F4               	addwfc	prodh,w,c
 14305  005ED4  6EDA               	movwf	fsr2h,c
 14306  005ED6  A6DF               	btfss	indf2,3,c
 14307  005ED8  D7B4               	goto	l1019
 14308                           
 14309                           ; BSR set to: 3
 14310                           ;miwi_mesh.c: 4635: }
 14311                           ;miwi_mesh.c: 4637: if( MiWiAckRequired )
 14312                           
 14313                           ; BSR set to: 3
 14314                           
 14315                           ; BSR set to: 3
 14316                           ;miwi_mesh.c: 4633: {
 14317                           ;miwi_mesh.c: 4634: goto DIRECT_LONG_ADDRESS;
 14318  005EDA  0101               	movlb	1	; () banked
 14319  005EDC  51C1               	movf	_MiWiAckRequired& (0+255),w,b
 14320  005EDE  B4D8               	btfsc	status,2,c
 14321  005EE0  D011               	goto	l20162
 14322                           
 14323                           ; BSR set to: 1
 14324                           ;miwi_mesh.c: 4638: {
 14325                           ;miwi_mesh.c: 4639: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 14326  005EE2  0103               	movlb	3	; () banked
 14327  005EE4  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14328  005EE6  0D09               	mullw	9
 14329  005EE8  0E02               	movlw	2
 14330  005EEA  26F3               	addwf	prodl,f,c
 14331  005EEC  0E00               	movlw	0
 14332  005EEE  22F4               	addwfc	prodh,f,c
 14333  005EF0  0E00               	movlw	low _ConnectionTable
 14334  005EF2  24F3               	addwf	prodl,w,c
 14335  005EF4  6ED9               	movwf	fsr2l,c
 14336  005EF6  0E06               	movlw	high _ConnectionTable
 14337  005EF8  20F4               	addwfc	prodh,w,c
 14338  005EFA  6EDA               	movwf	fsr2h,c
 14339  005EFC  CFDE F1B3          	movff	postinc2,_AcknowledgementAddr
 14340  005F00  CFDD F1B4          	movff	postdec2,_AcknowledgementAddr+1
 14341  005F04                     l20162:
 14342                           
 14343                           ;miwi_mesh.c: 4640: }
 14344                           ;miwi_mesh.c: 4642: TxBuffer[0] = 4;
 14345  005F04  0E04               	movlw	4
 14346  005F06  0102               	movlb	2	; () banked
 14347  005F08  6FA6               	movwf	_TxBuffer& (0+255),b
 14348                           
 14349                           ; BSR set to: 2
 14350                           ;miwi_mesh.c: 4643: TxBuffer[1] = MiWiFrameControl;
 14351  005F0A  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14352                           
 14353                           ; BSR set to: 2
 14354                           ;miwi_mesh.c: 4644: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 14355  005F0E  0103               	movlb	3	; () banked
 14356  005F10  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14357  005F12  0D09               	mullw	9
 14358  005F14  0E00               	movlw	low _ConnectionTable
 14359  005F16  24F3               	addwf	prodl,w,c
 14360  005F18  6ED9               	movwf	fsr2l,c
 14361  005F1A  0E06               	movlw	high _ConnectionTable
 14362  005F1C  20F4               	addwfc	prodh,w,c
 14363  005F1E  6EDA               	movwf	fsr2h,c
 14364  005F20  50DF               	movf	indf2,w,c
 14365  005F22  0102               	movlb	2	; () banked
 14366  005F24  6FA8               	movwf	(_TxBuffer+2)& (0+255),b
 14367                           
 14368                           ; BSR set to: 2
 14369                           ;miwi_mesh.c: 4645: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 14370  005F26  0103               	movlb	3	; () banked
 14371  005F28  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14372  005F2A  0D09               	mullw	9
 14373  005F2C  0E01               	movlw	1
 14374  005F2E  26F3               	addwf	prodl,f,c
 14375  005F30  0E00               	movlw	0
 14376  005F32  22F4               	addwfc	prodh,f,c
 14377  005F34  0E00               	movlw	low _ConnectionTable
 14378  005F36  24F3               	addwf	prodl,w,c
 14379  005F38  6ED9               	movwf	fsr2l,c
 14380  005F3A  0E06               	movlw	high _ConnectionTable
 14381  005F3C  20F4               	addwfc	prodh,w,c
 14382  005F3E  6EDA               	movwf	fsr2h,c
 14383  005F40  50DF               	movf	indf2,w,c
 14384  005F42  0102               	movlb	2	; () banked
 14385  005F44  6FA9               	movwf	(_TxBuffer+3)& (0+255),b
 14386                           
 14387                           ; BSR set to: 2
 14388                           ;miwi_mesh.c: 4646: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 14389  005F46  0103               	movlb	3	; () banked
 14390  005F48  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14391  005F4A  0D09               	mullw	9
 14392  005F4C  0E02               	movlw	2
 14393  005F4E  26F3               	addwf	prodl,f,c
 14394  005F50  0E00               	movlw	0
 14395  005F52  22F4               	addwfc	prodh,f,c
 14396  005F54  0E00               	movlw	low _ConnectionTable
 14397  005F56  24F3               	addwf	prodl,w,c
 14398  005F58  6ED9               	movwf	fsr2l,c
 14399  005F5A  0E06               	movlw	high _ConnectionTable
 14400  005F5C  20F4               	addwfc	prodh,w,c
 14401  005F5E  6EDA               	movwf	fsr2h,c
 14402  005F60  50DF               	movf	indf2,w,c
 14403  005F62  0102               	movlb	2	; () banked
 14404  005F64  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 14405                           
 14406                           ; BSR set to: 2
 14407                           ;miwi_mesh.c: 4647: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 14408  005F66  0103               	movlb	3	; () banked
 14409  005F68  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14410  005F6A  0D09               	mullw	9
 14411  005F6C  0E03               	movlw	3
 14412  005F6E  26F3               	addwf	prodl,f,c
 14413  005F70  0E00               	movlw	0
 14414  005F72  22F4               	addwfc	prodh,f,c
 14415  005F74  0E00               	movlw	low _ConnectionTable
 14416  005F76  24F3               	addwf	prodl,w,c
 14417  005F78  6ED9               	movwf	fsr2l,c
 14418  005F7A  0E06               	movlw	high _ConnectionTable
 14419  005F7C  20F4               	addwfc	prodh,w,c
 14420  005F7E  6EDA               	movwf	fsr2h,c
 14421  005F80  50DF               	movf	indf2,w,c
 14422  005F82  0102               	movlb	2	; () banked
 14423  005F84  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 14424                           
 14425                           ; BSR set to: 2
 14426                           ;miwi_mesh.c: 4648: TxBuffer[6] = myPANID.v[0];
 14427  005F86  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14428                           
 14429                           ; BSR set to: 2
 14430                           ;miwi_mesh.c: 4649: TxBuffer[7] = myPANID.v[1];
 14431  005F8A  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14432                           
 14433                           ; BSR set to: 2
 14434                           ;miwi_mesh.c: 4650: TxBuffer[8] = myShortAddress.v[0];
 14435  005F8E  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14436                           
 14437                           ; BSR set to: 2
 14438                           ;miwi_mesh.c: 4651: TxBuffer[9] = myShortAddress.v[1];
 14439  005F92  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14440                           
 14441                           ; BSR set to: 2
 14442                           ;miwi_mesh.c: 4652: TxBuffer[10] = MiWiSeqNum++;
 14443  005F96  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14444                           
 14445                           ; BSR set to: 2
 14446  005F9A  0101               	movlb	1	; () banked
 14447  005F9C  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14448                           
 14449                           ; BSR set to: 1
 14450                           ;miwi_mesh.c: 4654: if( 0 == RouteMessage(ConnectionTable[handle].PANID, ConnectionTable
      +                          [handle].AltAddress, SecEn) )
 14451  005F9E  0103               	movlb	3	; () banked
 14452  005FA0  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14453  005FA2  0D09               	mullw	9
 14454  005FA4  0E00               	movlw	low _ConnectionTable
 14455  005FA6  24F3               	addwf	prodl,w,c
 14456  005FA8  6ED9               	movwf	fsr2l,c
 14457  005FAA  0E06               	movlw	high _ConnectionTable
 14458  005FAC  20F4               	addwfc	prodh,w,c
 14459  005FAE  6EDA               	movwf	fsr2h,c
 14460  005FB0  CFDE F13D          	movff	postinc2,RouteMessage@PANID
 14461  005FB4  CFDD F13E          	movff	postdec2,RouteMessage@PANID+1
 14462  005FB8  0103               	movlb	3	; () banked
 14463  005FBA  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14464  005FBC  0D09               	mullw	9
 14465  005FBE  0E02               	movlw	2
 14466  005FC0  26F3               	addwf	prodl,f,c
 14467  005FC2  0E00               	movlw	0
 14468  005FC4  22F4               	addwfc	prodh,f,c
 14469  005FC6  0E00               	movlw	low _ConnectionTable
 14470  005FC8  24F3               	addwf	prodl,w,c
 14471  005FCA  6ED9               	movwf	fsr2l,c
 14472  005FCC  0E06               	movlw	high _ConnectionTable
 14473  005FCE  20F4               	addwfc	prodh,w,c
 14474  005FD0  6EDA               	movwf	fsr2h,c
 14475  005FD2  CFDE F13F          	movff	postinc2,RouteMessage@ShortAddress
 14476  005FD6  CFDD F140          	movff	postdec2,RouteMessage@ShortAddress+1
 14477  005FDA  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 14478  005FDE  EC07  F024         	call	_RouteMessage	;wreg free
 14479  005FE2  0900               	iorlw	0
 14480  005FE4  A4D8               	btfss	status,2,c
 14481  005FE6  D004               	goto	l1024
 14482                           
 14483                           ;miwi_mesh.c: 4655: {
 14484                           ;miwi_mesh.c: 4656: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14485  005FE8  0101               	movlb	1	; () banked
 14486  005FEA  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;miwi_mesh.c: 4657: return 0;
 14490  005FEC  0E00               	movlw	0
 14491                           
 14492                           ; BSR set to: 1
 14493  005FEE  0012               	return	
 14494  005FF0                     l1024:
 14495                           
 14496                           ;miwi_mesh.c: 4659: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14497  005FF0  0101               	movlb	1	; () banked
 14498  005FF2  A7B5               	btfss	_MiWiStateMachine& (0+255),3,b
 14499  005FF4  D05B               	goto	l20218
 14500                           
 14501                           ; BSR set to: 1
 14502                           ;miwi_mesh.c: 4660: {
 14503                           ;miwi_mesh.c: 4661: MIWI_TICK t1, t2;
 14504                           ;miwi_mesh.c: 4662: t1 = MiWi_TickGet();
 14505  005FF6  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 14506  005FFA  C100  F3C4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 14507  005FFE  C101  F3C5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 14508  006002  C102  F3C6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 14509  006006  C103  F3C7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 14510  00600A                     l20198:
 14511                           
 14512                           ;miwi_mesh.c: 4664: {
 14513                           ;miwi_mesh.c: 4665: if( MiApp_MessageAvailable())
 14514  00600A  ECBB  F05D         	call	_MiApp_MessageAvailable	;wreg free
 14515  00600E  0900               	iorlw	0
 14516  006010  A4D8               	btfss	status,2,c
 14517                           
 14518                           ;miwi_mesh.c: 4666: {
 14519                           ;miwi_mesh.c: 4667: MiApp_DiscardMessage();
 14520  006012  ECC4  F05D         	call	_MiApp_DiscardMessage	;wreg free
 14521                           
 14522                           ;miwi_mesh.c: 4668: }
 14523                           ;miwi_mesh.c: 4670: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14524  006016  0101               	movlb	1	; () banked
 14525  006018  B7B5               	btfsc	_MiWiStateMachine& (0+255),3,b
 14526  00601A  D002               	goto	l20208
 14527                           
 14528                           ; BSR set to: 1
 14529                           ;miwi_mesh.c: 4671: {
 14530                           ;miwi_mesh.c: 4672: return 1;
 14531  00601C  0E01               	movlw	1
 14532                           
 14533                           ; BSR set to: 1
 14534  00601E  0012               	return	
 14535  006020                     l20208:
 14536                           
 14537                           ; BSR set to: 1
 14538                           ;miwi_mesh.c: 4673: }
 14539                           ;miwi_mesh.c: 4674: t2 = MiWi_TickGet();
 14540  006020  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 14541  006024  C100  F3C8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 14542  006028  C101  F3C9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 14543  00602C  C102  F3CA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 14544  006030  C103  F3CB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 14545                           
 14546                           ;miwi_mesh.c: 4675: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 14547  006034  C3C4  F181         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 14548  006038  C3C5  F182         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 14549  00603C  C3C6  F183         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 14550  006040  C3C7  F184         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 14551  006044  0101               	movlb	1	; () banked
 14552  006046  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 14553  006048  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14554  00604A  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14555  00604C  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14556  00604E  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 14557  006050  0E00               	movlw	0
 14558  006052  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14559  006054  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14560  006056  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14561  006058  0103               	movlb	3	; () banked
 14562  00605A  51C8               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 14563  00605C  0101               	movlb	1	; () banked
 14564  00605E  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 14565  006060  0101               	movlb	1	; () banked
 14566  006062  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 14567  006064  0103               	movlb	3	; () banked
 14568  006066  51C9               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 14569  006068  0101               	movlb	1	; () banked
 14570  00606A  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 14571  00606C  0101               	movlb	1	; () banked
 14572  00606E  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 14573  006070  0103               	movlb	3	; () banked
 14574  006072  51CA               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 14575  006074  0101               	movlb	1	; () banked
 14576  006076  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 14577  006078  0101               	movlb	1	; () banked
 14578  00607A  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 14579  00607C  0103               	movlb	3	; () banked
 14580  00607E  51CB               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 14581  006080  0101               	movlb	1	; () banked
 14582  006082  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 14583  006084  0101               	movlb	1	; () banked
 14584  006086  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 14585  006088  0101               	movlb	1	; () banked
 14586  00608A  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 14587  00608C  E10B               	bnz	u23130
 14588  00608E  0E21               	movlw	33
 14589  006090  0101               	movlb	1	; () banked
 14590  006092  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 14591  006094  0EA1               	movlw	161
 14592  006096  0101               	movlb	1	; () banked
 14593  006098  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 14594  00609A  0E07               	movlw	7
 14595  00609C  0101               	movlb	1	; () banked
 14596  00609E  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 14597  0060A0  A0D8               	btfss	status,0,c
 14598  0060A2  D7B3               	goto	l20198
 14599  0060A4                     u23130:
 14600                           
 14601                           ; BSR set to: 1
 14602                           ;miwi_mesh.c: 4676: {
 14603                           ;miwi_mesh.c: 4677: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14604  0060A4  0101               	movlb	1	; () banked
 14605  0060A6  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14606                           
 14607                           ; BSR set to: 1
 14608                           ;miwi_mesh.c: 4678: return 0;
 14609  0060A8  0E00               	movlw	0
 14610                           
 14611                           ; BSR set to: 1
 14612  0060AA  0012               	return	
 14613  0060AC                     l20218:
 14614                           
 14615                           ; BSR set to: 1
 14616                           ;miwi_mesh.c: 4679: }
 14617                           ;miwi_mesh.c: 4680: }
 14618                           ;miwi_mesh.c: 4681: }
 14619                           ;miwi_mesh.c: 4682: return 1;
 14620  0060AC  0E01               	movlw	1
 14621                           
 14622                           ; BSR set to: 1
 14623  0060AE  0012               	return	
 14624  0060B0                     l20222:
 14625                           
 14626                           ;miwi_mesh.c: 4740: }
 14627                           ;miwi_mesh.c: 4741: }
 14628                           ;miwi_mesh.c: 4743: TxBuffer[0] = 4;
 14629  0060B0  0E04               	movlw	4
 14630  0060B2  0102               	movlb	2	; () banked
 14631  0060B4  6FA6               	movwf	_TxBuffer& (0+255),b
 14632                           
 14633                           ; BSR set to: 2
 14634                           ;miwi_mesh.c: 4744: TxBuffer[1] = MiWiFrameControl;
 14635  0060B6  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14636                           
 14637                           ; BSR set to: 2
 14638                           ;miwi_mesh.c: 4745: TxBuffer[2] = myPANID.v[0];
 14639  0060BA  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 14640                           
 14641                           ; BSR set to: 2
 14642                           ;miwi_mesh.c: 4746: TxBuffer[3] = myPANID.v[1];
 14643  0060BE  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 14644                           
 14645                           ; BSR set to: 2
 14646                           ;miwi_mesh.c: 4747: TxBuffer[4] = DestAddress[0];
 14647  0060C2  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14648  0060C6  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14649  0060CA  50DF               	movf	indf2,w,c
 14650  0060CC  0102               	movlb	2	; () banked
 14651  0060CE  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 14652                           
 14653                           ; BSR set to: 2
 14654                           ;miwi_mesh.c: 4748: TxBuffer[5] = DestAddress[1];
 14655  0060D0  0101               	movlb	1	; () banked
 14656  0060D2  EE20 F001          	lfsr	2,1
 14657  0060D6  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14658  0060D8  26D9               	addwf	fsr2l,f,c
 14659  0060DA  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14660  0060DC  22DA               	addwfc	fsr2h,f,c
 14661  0060DE  50DF               	movf	indf2,w,c
 14662  0060E0  0102               	movlb	2	; () banked
 14663  0060E2  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 14664                           
 14665                           ; BSR set to: 2
 14666                           ;miwi_mesh.c: 4749: TxBuffer[6] = myPANID.v[0];
 14667  0060E4  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14668                           
 14669                           ; BSR set to: 2
 14670                           ;miwi_mesh.c: 4750: TxBuffer[7] = myPANID.v[1];
 14671  0060E8  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14672                           
 14673                           ; BSR set to: 2
 14674                           ;miwi_mesh.c: 4751: TxBuffer[8] = myShortAddress.v[0];
 14675  0060EC  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14676                           
 14677                           ; BSR set to: 2
 14678                           ;miwi_mesh.c: 4752: TxBuffer[9] = myShortAddress.v[1];
 14679  0060F0  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14680                           
 14681                           ; BSR set to: 2
 14682                           ;miwi_mesh.c: 4753: TxBuffer[10] = MiWiSeqNum++;
 14683  0060F4  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14684                           
 14685                           ; BSR set to: 2
 14686  0060F8  0101               	movlb	1	; () banked
 14687  0060FA  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14688                           
 14689                           ; BSR set to: 1
 14690                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[0] = DestAddress[0];
 14691  0060FC  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14692  006100  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14693  006104  50DF               	movf	indf2,w,c
 14694  006106  0101               	movlb	1	; () banked
 14695  006108  6FB3               	movwf	_AcknowledgementAddr& (0+255),b
 14696                           
 14697                           ; BSR set to: 1
 14698                           ;miwi_mesh.c: 4756: AcknowledgementAddr.v[1] = DestAddress[1];
 14699  00610A  0101               	movlb	1	; () banked
 14700  00610C  EE20 F001          	lfsr	2,1
 14701  006110  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14702  006112  26D9               	addwf	fsr2l,f,c
 14703  006114  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14704  006116  22DA               	addwfc	fsr2h,f,c
 14705  006118  50DF               	movf	indf2,w,c
 14706  00611A  0101               	movlb	1	; () banked
 14707  00611C  6FB4               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 14708                           
 14709                           ; BSR set to: 1
 14710                           ;miwi_mesh.c: 4759: tempShortAddress.v[0] = DestAddress[0];
 14711  00611E  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14712  006122  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14713  006126  50DF               	movf	indf2,w,c
 14714  006128  0101               	movlb	1	; () banked
 14715  00612A  6FF4               	movwf	_tempShortAddress& (0+255),b
 14716                           
 14717                           ; BSR set to: 1
 14718                           ;miwi_mesh.c: 4760: tempShortAddress.v[1] = DestAddress[1];
 14719  00612C  0101               	movlb	1	; () banked
 14720  00612E  EE20 F001          	lfsr	2,1
 14721  006132  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14722  006134  26D9               	addwf	fsr2l,f,c
 14723  006136  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14724  006138  22DA               	addwfc	fsr2h,f,c
 14725  00613A  50DF               	movf	indf2,w,c
 14726  00613C  0101               	movlb	1	; () banked
 14727  00613E  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 14728                           
 14729                           ; BSR set to: 1
 14730                           ;miwi_mesh.c: 4761: if( 0 == RouteMessage(myPANID, tempShortAddress, SecEn) )
 14731  006140  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 14732  006144  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 14733  006148  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 14734  00614C  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 14735  006150  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 14736  006154  EC07  F024         	call	_RouteMessage	;wreg free
 14737  006158  0900               	iorlw	0
 14738  00615A  A4D8               	btfss	status,2,c
 14739  00615C  D004               	goto	l1033
 14740                           
 14741                           ;miwi_mesh.c: 4762: {
 14742                           ;miwi_mesh.c: 4763: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14743  00615E  0101               	movlb	1	; () banked
 14744  006160  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14745                           
 14746                           ; BSR set to: 1
 14747                           ;miwi_mesh.c: 4764: return 0;
 14748  006162  0E00               	movlw	0
 14749                           
 14750                           ; BSR set to: 1
 14751  006164  0012               	return	
 14752  006166                     l1033:
 14753                           
 14754                           ;miwi_mesh.c: 4766: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14755  006166  0101               	movlb	1	; () banked
 14756  006168  A7B5               	btfss	_MiWiStateMachine& (0+255),3,b
 14757  00616A  D05B               	goto	l20286
 14758                           
 14759                           ; BSR set to: 1
 14760                           ;miwi_mesh.c: 4767: {
 14761                           ;miwi_mesh.c: 4768: MIWI_TICK t1, t2;
 14762                           ;miwi_mesh.c: 4769: t1 = MiWi_TickGet();
 14763  00616C  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 14764  006170  C100  F3CC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2749
 14765  006174  C101  F3CD         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2749+1
 14766  006178  C102  F3CE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2749+2
 14767  00617C  C103  F3CF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2749+3
 14768  006180                     l20266:
 14769                           
 14770                           ;miwi_mesh.c: 4771: {
 14771                           ;miwi_mesh.c: 4772: if( MiApp_MessageAvailable())
 14772  006180  ECBB  F05D         	call	_MiApp_MessageAvailable	;wreg free
 14773  006184  0900               	iorlw	0
 14774  006186  A4D8               	btfss	status,2,c
 14775                           
 14776                           ;miwi_mesh.c: 4773: {
 14777                           ;miwi_mesh.c: 4774: MiApp_DiscardMessage();
 14778  006188  ECC4  F05D         	call	_MiApp_DiscardMessage	;wreg free
 14779                           
 14780                           ;miwi_mesh.c: 4775: }
 14781                           ;miwi_mesh.c: 4776: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14782  00618C  0101               	movlb	1	; () banked
 14783  00618E  B7B5               	btfsc	_MiWiStateMachine& (0+255),3,b
 14784  006190  D002               	goto	l20276
 14785                           
 14786                           ; BSR set to: 1
 14787                           ;miwi_mesh.c: 4777: {
 14788                           ;miwi_mesh.c: 4778: return 1;
 14789  006192  0E01               	movlw	1
 14790                           
 14791                           ; BSR set to: 1
 14792  006194  0012               	return	
 14793  006196                     l20276:
 14794                           
 14795                           ; BSR set to: 1
 14796                           ;miwi_mesh.c: 4779: }
 14797                           ;miwi_mesh.c: 4780: t2 = MiWi_TickGet();
 14798  006196  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 14799  00619A  C100  F3D0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2760
 14800  00619E  C101  F3D1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2760+1
 14801  0061A2  C102  F3D2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2760+2
 14802  0061A6  C103  F3D3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2760+3
 14803                           
 14804                           ;miwi_mesh.c: 4781: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 14805  0061AA  C3CC  F181         	movff	MiApp_UnicastAddress@t1_2749,??_MiApp_UnicastAddress
 14806  0061AE  C3CD  F182         	movff	MiApp_UnicastAddress@t1_2749+1,??_MiApp_UnicastAddress+1
 14807  0061B2  C3CE  F183         	movff	MiApp_UnicastAddress@t1_2749+2,??_MiApp_UnicastAddress+2
 14808  0061B6  C3CF  F184         	movff	MiApp_UnicastAddress@t1_2749+3,??_MiApp_UnicastAddress+3
 14809  0061BA  0101               	movlb	1	; () banked
 14810  0061BC  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 14811  0061BE  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14812  0061C0  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14813  0061C2  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14814  0061C4  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 14815  0061C6  0E00               	movlw	0
 14816  0061C8  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14817  0061CA  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14818  0061CC  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14819  0061CE  0103               	movlb	3	; () banked
 14820  0061D0  51D0               	movf	MiApp_UnicastAddress@t2_2760& (0+255),w,b
 14821  0061D2  0101               	movlb	1	; () banked
 14822  0061D4  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 14823  0061D6  0101               	movlb	1	; () banked
 14824  0061D8  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 14825  0061DA  0103               	movlb	3	; () banked
 14826  0061DC  51D1               	movf	(MiApp_UnicastAddress@t2_2760+1)& (0+255),w,b
 14827  0061DE  0101               	movlb	1	; () banked
 14828  0061E0  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 14829  0061E2  0101               	movlb	1	; () banked
 14830  0061E4  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 14831  0061E6  0103               	movlb	3	; () banked
 14832  0061E8  51D2               	movf	(MiApp_UnicastAddress@t2_2760+2)& (0+255),w,b
 14833  0061EA  0101               	movlb	1	; () banked
 14834  0061EC  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 14835  0061EE  0101               	movlb	1	; () banked
 14836  0061F0  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 14837  0061F2  0103               	movlb	3	; () banked
 14838  0061F4  51D3               	movf	(MiApp_UnicastAddress@t2_2760+3)& (0+255),w,b
 14839  0061F6  0101               	movlb	1	; () banked
 14840  0061F8  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 14841  0061FA  0101               	movlb	1	; () banked
 14842  0061FC  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 14843  0061FE  0101               	movlb	1	; () banked
 14844  006200  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 14845  006202  E10B               	bnz	u23180
 14846  006204  0E21               	movlw	33
 14847  006206  0101               	movlb	1	; () banked
 14848  006208  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 14849  00620A  0EA1               	movlw	161
 14850  00620C  0101               	movlb	1	; () banked
 14851  00620E  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 14852  006210  0E07               	movlw	7
 14853  006212  0101               	movlb	1	; () banked
 14854  006214  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 14855  006216  A0D8               	btfss	status,0,c
 14856  006218  D7B3               	goto	l20266
 14857  00621A                     u23180:
 14858                           
 14859                           ; BSR set to: 1
 14860                           ;miwi_mesh.c: 4782: {
 14861                           ;miwi_mesh.c: 4783: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14862  00621A  0101               	movlb	1	; () banked
 14863  00621C  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14864                           
 14865                           ; BSR set to: 1
 14866                           ;miwi_mesh.c: 4784: return 0;
 14867  00621E  0E00               	movlw	0
 14868                           
 14869                           ; BSR set to: 1
 14870  006220  0012               	return	
 14871  006222                     l20286:
 14872                           
 14873                           ; BSR set to: 1
 14874                           ;miwi_mesh.c: 4785: }
 14875                           ;miwi_mesh.c: 4786: }
 14876                           ;miwi_mesh.c: 4787: }
 14877                           ;miwi_mesh.c: 4788: return 1;
 14878  006222  0E01               	movlw	1
 14879  006224  0012               	return	
 14880  006226                     __end_of_MiApp_UnicastAddress:
 14881                           	opt stack 0
 14882                           tblptru	equ	0xFF8
 14883                           tblptrh	equ	0xFF7
 14884                           tblptrl	equ	0xFF6
 14885                           tablat	equ	0xFF5
 14886                           prodh	equ	0xFF4
 14887                           prodl	equ	0xFF3
 14888                           intcon	equ	0xFF2
 14889                           intcon2	equ	0xFF1
 14890                           intcon3	equ	0xFF0
 14891                           indf0	equ	0xFEF
 14892                           postinc0	equ	0xFEE
 14893                           plusw0	equ	0xFEB
 14894                           fsr0h	equ	0xFEA
 14895                           fsr0l	equ	0xFE9
 14896                           wreg	equ	0xFE8
 14897                           indf1	equ	0xFE7
 14898                           postdec1	equ	0xFE5
 14899                           fsr1h	equ	0xFE2
 14900                           fsr1l	equ	0xFE1
 14901                           indf2	equ	0xFDF
 14902                           postinc2	equ	0xFDE
 14903                           postdec2	equ	0xFDD
 14904                           plusw2	equ	0xFDB
 14905                           fsr2h	equ	0xFDA
 14906                           fsr2l	equ	0xFD9
 14907                           status	equ	0xFD8
 14908                           
 14909 ;; *************** function _MiApp_MessageAvailable *****************
 14910 ;; Defined at:
 14911 ;;		line 4237 in file "src/miwi/miwi_mesh.c"
 14912 ;; Parameters:    Size  Location     Type
 14913 ;;		None
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;		None
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  1    wreg      unsigned char 
 14918 ;; Registers used:
 14919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14920 ;; Tracked objects:
 14921 ;;		On entry : 0/0
 14922 ;;		On exit  : 0/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;Total ram usage:        0 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:   26
 14932 ;; This function calls:
 14933 ;;		_MiWiTasks
 14934 ;; This function is called by:
 14935 ;;		_MiApp_UnicastAddress
 14936 ;;		_main
 14937 ;;		_MiApp_SearchConnection
 14938 ;;		_MiApp_EstablishConnection
 14939 ;;		_MiApp_UnicastConnection
 14940 ;;		_do_NETWORK_REGISTER
 14941 ;;		_do_POWER_TEST
 14942 ;;		_do_PING
 14943 ;;		_do_UPDATE
 14944 ;; This function uses a non-reentrant model
 14945 ;;
 14946                           
 14947                           	psect	text40
 14948  00BB76                     __ptext40:
 14949                           	opt stack 0
 14950  00BB76                     _MiApp_MessageAvailable:
 14951                           	opt stack 3
 14952                           
 14953                           ;miwi_mesh.c: 4239: MiWiTasks();
 14954                           
 14955                           ;incstack = 0
 14956  00BB76  ECE3  F011         	call	_MiWiTasks	;wreg free
 14957                           
 14958                           ;miwi_mesh.c: 4240: return MiWiStateMachine.bits.RxHasUserData;
 14959  00BB7A  0101               	movlb	1	; () banked
 14960  00BB7C  A5B5               	btfss	_MiWiStateMachine& (0+255),2,b
 14961  00BB7E  D002               	goto	u21760
 14962  00BB80  0E01               	movlw	1
 14963  00BB82  0012               	return	
 14964  00BB84                     u21760:
 14965  00BB84  0E00               	movlw	0
 14966  00BB86  0012               	return	
 14967  00BB88                     __end_of_MiApp_MessageAvailable:
 14968                           	opt stack 0
 14969                           tblptru	equ	0xFF8
 14970                           tblptrh	equ	0xFF7
 14971                           tblptrl	equ	0xFF6
 14972                           tablat	equ	0xFF5
 14973                           prodh	equ	0xFF4
 14974                           prodl	equ	0xFF3
 14975                           intcon	equ	0xFF2
 14976                           intcon2	equ	0xFF1
 14977                           intcon3	equ	0xFF0
 14978                           indf0	equ	0xFEF
 14979                           postinc0	equ	0xFEE
 14980                           plusw0	equ	0xFEB
 14981                           fsr0h	equ	0xFEA
 14982                           fsr0l	equ	0xFE9
 14983                           wreg	equ	0xFE8
 14984                           indf1	equ	0xFE7
 14985                           postdec1	equ	0xFE5
 14986                           fsr1h	equ	0xFE2
 14987                           fsr1l	equ	0xFE1
 14988                           indf2	equ	0xFDF
 14989                           postinc2	equ	0xFDE
 14990                           postdec2	equ	0xFDD
 14991                           plusw2	equ	0xFDB
 14992                           fsr2h	equ	0xFDA
 14993                           fsr2l	equ	0xFD9
 14994                           status	equ	0xFD8
 14995                           
 14996 ;; *************** function _MiWiTasks *****************
 14997 ;; Defined at:
 14998 ;;		line 283 in file "src/miwi/miwi_mesh.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;		None
 15001 ;; Auto vars:     Size  Location     Type
 15002 ;;  j               2  105[BANK1 ] unsigned int 
 15003 ;;  j               1  113[BANK1 ] unsigned char 
 15004 ;;  j               1  123[BANK1 ] unsigned char 
 15005 ;;  t2              4   90[BANK1 ] struct _MIWI_TICK
 15006 ;;  t1              4   86[BANK1 ] struct _MIWI_TICK
 15007 ;;  jitter          1   98[BANK1 ] unsigned char 
 15008 ;;  CoordAddress    2   94[BANK1 ] struct .
 15009 ;;  j               1  114[BANK1 ] unsigned char 
 15010 ;;  entry           1   97[BANK1 ] unsigned char 
 15011 ;;  CapacityByte    1  112[BANK1 ] struct .
 15012 ;;  cIndex          1  107[BANK1 ] unsigned char 
 15013 ;;  handle          1  119[BANK1 ] unsigned char 
 15014 ;;  associateSta    1   99[BANK1 ] unsigned char 
 15015 ;;  entry           1  122[BANK1 ] unsigned char 
 15016 ;;  coordinatorN    1  104[BANK1 ] unsigned char 
 15017 ;;  mask            1   96[BANK1 ] unsigned char 
 15018 ;;  rxIndex         1  111[BANK1 ] unsigned char 
 15019 ;;  sourceShortA    2  120[BANK1 ] struct .
 15020 ;;  sourcePANID     2  117[BANK1 ] struct .
 15021 ;;  destShortAdd    2  115[BANK1 ] struct .
 15022 ;;  destPANID       2  109[BANK1 ] struct .
 15023 ;;  j               1  108[BANK1 ] unsigned char 
 15024 ;;  t1              4  100[BANK1 ] struct _MIWI_TICK
 15025 ;;  t2              4   82[BANK1 ] struct _MIWI_TICK
 15026 ;;  i               1  124[BANK1 ] unsigned char 
 15027 ;; Return value:  Size  Location     Type
 15028 ;;		None               void
 15029 ;; Registers used:
 15030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/0
 15033 ;;		On exit  : 0/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15037 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15038 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15040 ;;Total ram usage:       51 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:   25
 15043 ;; This function calls:
 15044 ;;		_AddNodeToNetworkTable
 15045 ;;		_BroadcastJitter
 15046 ;;		_MiMAC_DiscardPacket
 15047 ;;		_MiMAC_ReceivedPacket
 15048 ;;		_MiMAC_SendPacket
 15049 ;;		_MiMAC_SetAltAddress
 15050 ;;		_MiWi_TickGet
 15051 ;;		_RouteMessage
 15052 ;;		_SearchForLongAddress
 15053 ;;		_SearchForShortAddress
 15054 ;;		_SendBeacon
 15055 ;;		_SendMACPacket
 15056 ;;		_UnicastShortAddress
 15057 ;;		_findNextNetworkEntry
 15058 ;; This function is called by:
 15059 ;;		_MiApp_MessageAvailable
 15060 ;;		_main
 15061 ;; This function uses a non-reentrant model
 15062 ;;
 15063                           
 15064                           	psect	text41
 15065  0023C6                     __ptext41:
 15066                           	opt stack 0
 15067  0023C6                     _MiWiTasks:
 15068                           	opt stack 5
 15069                           
 15070                           ;miwi_mesh.c: 285: uint8_t i;
 15071                           ;miwi_mesh.c: 286: MIWI_TICK t1, t2;
 15072                           ;miwi_mesh.c: 288: if( MiMAC_ReceivedPacket() )
 15073                           
 15074                           ; BSR set to: 1
 15075                           ;incstack = 0
 15076  0023C6  EC82  F02C         	call	_MiMAC_ReceivedPacket	;wreg free
 15077  0023CA  0900               	iorlw	0
 15078  0023CC  B4D8               	btfsc	status,2,c
 15079  0023CE  EF88  F01D         	goto	l18678
 15080                           
 15081                           ;miwi_mesh.c: 289: {
 15082                           ;miwi_mesh.c: 290: if( MiWiStateMachine.bits.RxHasUserData )
 15083  0023D2  0101               	movlb	1	; () banked
 15084  0023D4  B5B5               	btfsc	_MiWiStateMachine& (0+255),2,b
 15085  0023D6  0012               	return	
 15086                           
 15087                           ; BSR set to: 1
 15088                           ;miwi_mesh.c: 293: }
 15089                           ;miwi_mesh.c: 295: rxMessage.flags.Val = 0;
 15090                           
 15091                           ; BSR set to: 1
 15092                           
 15093                           ; BSR set to: 1
 15094                           ;miwi_mesh.c: 291: {
 15095                           ;miwi_mesh.c: 292: return;
 15096  0023D8  0E00               	movlw	0
 15097  0023DA  0101               	movlb	1	; () banked
 15098  0023DC  6F90               	movwf	_rxMessage& (0+255),b
 15099                           
 15100                           ; BSR set to: 1
 15101                           ;miwi_mesh.c: 296: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 15102  0023DE  0101               	movlb	1	; () banked
 15103  0023E0  A59A               	btfss	_MACRxPacket& (0+255),2,b
 15104  0023E2  D004               	goto	u19900
 15105  0023E4  0101               	movlb	1	; () banked
 15106  0023E6  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15107  0023E8  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15108  0023EA  D002               	goto	u19908
 15109  0023EC                     u19900:
 15110  0023EC  0101               	movlb	1	; () banked
 15111  0023EE  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15112  0023F0                     u19908:
 15113  0023F0  0101               	movlb	1	; () banked
 15114  0023F2  5190               	movf	_rxMessage& (0+255),w,b
 15115  0023F4  0101               	movlb	1	; () banked
 15116  0023F6  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15117  0023F8  0BFC               	andlw	-4
 15118  0023FA  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15119  0023FC  0101               	movlb	1	; () banked
 15120  0023FE  6F90               	movwf	_rxMessage& (0+255),b
 15121                           
 15122                           ; BSR set to: 1
 15123                           ;miwi_mesh.c: 297: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15124  002400  0101               	movlb	1	; () banked
 15125  002402  A79A               	btfss	_MACRxPacket& (0+255),3,b
 15126  002404  D003               	bra	u19915
 15127  002406  0101               	movlb	1	; () banked
 15128  002408  8790               	bsf	_rxMessage& (0+255),3,b
 15129  00240A  D002               	bra	u19917
 15130  00240C                     u19915:
 15131  00240C  0101               	movlb	1	; () banked
 15132  00240E  9790               	bcf	_rxMessage& (0+255),3,b
 15133  002410                     u19917:
 15134                           
 15135                           ; BSR set to: 1
 15136                           ;miwi_mesh.c: 298: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 15137  002410  0101               	movlb	1	; () banked
 15138  002412  519A               	movf	_MACRxPacket& (0+255),w,b
 15139  002414  0B03               	andlw	3
 15140  002416  06E8               	decf	wreg,f,c
 15141  002418  A4D8               	btfss	status,2,c
 15142  00241A  D004               	goto	u19920
 15143  00241C  0101               	movlb	1	; () banked
 15144  00241E  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15145  002420  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15146  002422  D002               	goto	u19938
 15147  002424                     u19920:
 15148  002424  0101               	movlb	1	; () banked
 15149  002426  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15150  002428                     u19938:
 15151  002428  0101               	movlb	1	; () banked
 15152  00242A  3B4A               	swapf	??_MiWiTasks& (0+255),f,b
 15153  00242C  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 15154  00242E  0101               	movlb	1	; () banked
 15155  002430  5190               	movf	_rxMessage& (0+255),w,b
 15156  002432  0101               	movlb	1	; () banked
 15157  002434  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15158  002436  0BDF               	andlw	-33
 15159  002438  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15160  00243A  0101               	movlb	1	; () banked
 15161  00243C  6F90               	movwf	_rxMessage& (0+255),b
 15162                           
 15163                           ; BSR set to: 1
 15164                           ;miwi_mesh.c: 299: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 15165  00243E  0101               	movlb	1	; () banked
 15166  002440  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 15167  002442  D003               	bra	u19945
 15168  002444  0101               	movlb	1	; () banked
 15169  002446  8D90               	bsf	_rxMessage& (0+255),6,b
 15170  002448  D002               	bra	u19947
 15171  00244A                     u19945:
 15172  00244A  0101               	movlb	1	; () banked
 15173  00244C  9D90               	bcf	_rxMessage& (0+255),6,b
 15174  00244E                     u19947:
 15175                           
 15176                           ; BSR set to: 1
 15177                           ;miwi_mesh.c: 300: if( MACRxPacket.flags.bits.sourcePrsnt )
 15178  00244E  0101               	movlb	1	; () banked
 15179  002450  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 15180  002452  D006               	goto	l17940
 15181                           
 15182                           ; BSR set to: 1
 15183                           ;miwi_mesh.c: 301: {
 15184                           ;miwi_mesh.c: 305: rxMessage.flags.bits.altSrcAddr = 1;
 15185  002454  0101               	movlb	1	; () banked
 15186  002456  8F90               	bsf	_rxMessage& (0+255),7,b
 15187                           
 15188                           ; BSR set to: 1
 15189                           ;miwi_mesh.c: 307: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 15190  002458  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 15191  00245C  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 15192  002460                     l17940:
 15193                           
 15194                           ; BSR set to: 1
 15195                           ;miwi_mesh.c: 308: }
 15196                           ;miwi_mesh.c: 312: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 15197  002460  C1A1  F199         	movff	_MACRxPacket+7,_rxMessage+9
 15198                           
 15199                           ; BSR set to: 1
 15200                           ;miwi_mesh.c: 313: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 15201  002464  C1A0  F198         	movff	_MACRxPacket+6,_rxMessage+8
 15202                           
 15203                           ; BSR set to: 1
 15204                           ;miwi_mesh.c: 315: MiWiStateMachine.bits.RxHasUserData = 0;
 15205  002468  0101               	movlb	1	; () banked
 15206  00246A  95B5               	bcf	_MiWiStateMachine& (0+255),2,b
 15207                           
 15208                           ;miwi_mesh.c: 318: switch(MACRxPacket.flags.bits.packetType)
 15209  00246C  EF76  F01D         	goto	l18674
 15210  002470                     l17946:
 15211                           
 15212                           ; BSR set to: 1
 15213                           ;miwi_mesh.c: 348: if( MACRxPacket.PayloadLen < 10 )
 15214  002470  0E0A               	movlw	10
 15215  002472  0101               	movlb	1	; () banked
 15216  002474  619F               	cpfslt	(_MACRxPacket+5)& (0+255),b
 15217  002476  D002               	goto	l17950
 15218  002478  EF84  F01D         	goto	l641
 15219  00247C                     l17950:
 15220                           
 15221                           ; BSR set to: 1
 15222                           ;miwi_mesh.c: 351: }
 15223                           ;miwi_mesh.c: 354: destPANID.v[0] = MACRxPacket.Payload[2];
 15224  00247C  0101               	movlb	1	; () banked
 15225  00247E  EE20 F002          	lfsr	2,2
 15226  002482  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15227  002484  26D9               	addwf	fsr2l,f,c
 15228  002486  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15229  002488  22DA               	addwfc	fsr2h,f,c
 15230  00248A  50DF               	movf	indf2,w,c
 15231  00248C  0101               	movlb	1	; () banked
 15232  00248E  6F6D               	movwf	MiWiTasks@destPANID& (0+255),b
 15233                           
 15234                           ;miwi_mesh.c: 355: destPANID.v[1] = MACRxPacket.Payload[3];
 15235  002490  0101               	movlb	1	; () banked
 15236  002492  EE20 F003          	lfsr	2,3
 15237  002496  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15238  002498  26D9               	addwf	fsr2l,f,c
 15239  00249A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15240  00249C  22DA               	addwfc	fsr2h,f,c
 15241  00249E  50DF               	movf	indf2,w,c
 15242  0024A0  0101               	movlb	1	; () banked
 15243  0024A2  6F6E               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 15244                           
 15245                           ;miwi_mesh.c: 356: destShortAddress.v[0] = MACRxPacket.Payload[4];
 15246  0024A4  0101               	movlb	1	; () banked
 15247  0024A6  EE20 F004          	lfsr	2,4
 15248  0024AA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15249  0024AC  26D9               	addwf	fsr2l,f,c
 15250  0024AE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15251  0024B0  22DA               	addwfc	fsr2h,f,c
 15252  0024B2  50DF               	movf	indf2,w,c
 15253  0024B4  0101               	movlb	1	; () banked
 15254  0024B6  6F73               	movwf	MiWiTasks@destShortAddress& (0+255),b
 15255                           
 15256                           ;miwi_mesh.c: 357: destShortAddress.v[1] = MACRxPacket.Payload[5];
 15257  0024B8  0101               	movlb	1	; () banked
 15258  0024BA  EE20 F005          	lfsr	2,5
 15259  0024BE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15260  0024C0  26D9               	addwf	fsr2l,f,c
 15261  0024C2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15262  0024C4  22DA               	addwfc	fsr2h,f,c
 15263  0024C6  50DF               	movf	indf2,w,c
 15264  0024C8  0101               	movlb	1	; () banked
 15265  0024CA  6F74               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 15266                           
 15267                           ;miwi_mesh.c: 358: sourcePANID.v[0] = MACRxPacket.Payload[6];
 15268  0024CC  0101               	movlb	1	; () banked
 15269  0024CE  EE20 F006          	lfsr	2,6
 15270  0024D2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15271  0024D4  26D9               	addwf	fsr2l,f,c
 15272  0024D6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15273  0024D8  22DA               	addwfc	fsr2h,f,c
 15274  0024DA  50DF               	movf	indf2,w,c
 15275  0024DC  0101               	movlb	1	; () banked
 15276  0024DE  6F75               	movwf	MiWiTasks@sourcePANID& (0+255),b
 15277                           
 15278                           ;miwi_mesh.c: 359: sourcePANID.v[1] = MACRxPacket.Payload[7];
 15279  0024E0  0101               	movlb	1	; () banked
 15280  0024E2  EE20 F007          	lfsr	2,7
 15281  0024E6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15282  0024E8  26D9               	addwf	fsr2l,f,c
 15283  0024EA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15284  0024EC  22DA               	addwfc	fsr2h,f,c
 15285  0024EE  50DF               	movf	indf2,w,c
 15286  0024F0  0101               	movlb	1	; () banked
 15287  0024F2  6F76               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 15288                           
 15289                           ;miwi_mesh.c: 360: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 15290  0024F4  0101               	movlb	1	; () banked
 15291  0024F6  EE20 F008          	lfsr	2,8
 15292  0024FA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15293  0024FC  26D9               	addwf	fsr2l,f,c
 15294  0024FE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15295  002500  22DA               	addwfc	fsr2h,f,c
 15296  002502  50DF               	movf	indf2,w,c
 15297  002504  0101               	movlb	1	; () banked
 15298  002506  6F78               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 15299                           
 15300                           ;miwi_mesh.c: 361: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 15301  002508  0101               	movlb	1	; () banked
 15302  00250A  EE20 F009          	lfsr	2,9
 15303  00250E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15304  002510  26D9               	addwf	fsr2l,f,c
 15305  002512  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15306  002514  22DA               	addwfc	fsr2h,f,c
 15307  002516  50DF               	movf	indf2,w,c
 15308  002518  0101               	movlb	1	; () banked
 15309  00251A  6F79               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;miwi_mesh.c: 363: rxMessage.flags.Val = 0;
 15313  00251C  0E00               	movlw	0
 15314  00251E  0101               	movlb	1	; () banked
 15315  002520  6F90               	movwf	_rxMessage& (0+255),b
 15316                           
 15317                           ; BSR set to: 1
 15318                           ;miwi_mesh.c: 364: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15319  002522  0101               	movlb	1	; () banked
 15320  002524  A79A               	btfss	_MACRxPacket& (0+255),3,b
 15321  002526  D003               	bra	u19975
 15322  002528  0101               	movlb	1	; () banked
 15323  00252A  8790               	bsf	_rxMessage& (0+255),3,b
 15324  00252C  D002               	bra	u19977
 15325  00252E                     u19975:
 15326  00252E  0101               	movlb	1	; () banked
 15327  002530  9790               	bcf	_rxMessage& (0+255),3,b
 15328  002532                     u19977:
 15329                           
 15330                           ; BSR set to: 1
 15331                           ;miwi_mesh.c: 366: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 15332  002532  0101               	movlb	1	; () banked
 15333  002534  5190               	movf	_rxMessage& (0+255),w,b
 15334  002536  0B03               	andlw	3
 15335  002538  0900               	iorlw	0
 15336  00253A  A4D8               	btfss	status,2,c
 15337  00253C  D007               	goto	l17960
 15338                           
 15339                           ; BSR set to: 1
 15340  00253E  0101               	movlb	1	; () banked
 15341  002540  2973               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 15342  002542  E103               	bnz	u19991
 15343  002544  0101               	movlb	1	; () banked
 15344  002546  2974               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 15345  002548  A4D8               	btfss	status,2,c
 15346  00254A                     u19991:
 15347  00254A  D11C               	goto	l18034
 15348  00254C                     l17960:
 15349                           
 15350                           ; BSR set to: 1
 15351                           ;miwi_mesh.c: 367: {
 15352                           ;miwi_mesh.c: 369: if( sourceShortAddress.Val == myShortAddress.Val &&
 15353                           ;miwi_mesh.c: 370: sourcePANID.Val == myPANID.Val )
 15354  00254C  0101               	movlb	1	; () banked
 15355  00254E  51F2               	movf	_myShortAddress& (0+255),w,b
 15356  002550  0101               	movlb	1	; () banked
 15357  002552  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 15358  002554  E112               	bnz	l17966
 15359  002556  0101               	movlb	1	; () banked
 15360  002558  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15361  00255A  0101               	movlb	1	; () banked
 15362  00255C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15363  00255E  A4D8               	btfss	status,2,c
 15364  002560  D00C               	goto	l17966
 15365                           
 15366                           ; BSR set to: 1
 15367  002562  0101               	movlb	1	; () banked
 15368  002564  51F0               	movf	_myPANID& (0+255),w,b
 15369  002566  0101               	movlb	1	; () banked
 15370  002568  1975               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 15371  00256A  E107               	bnz	l17966
 15372  00256C  0101               	movlb	1	; () banked
 15373  00256E  51F1               	movf	(_myPANID+1)& (0+255),w,b
 15374  002570  0101               	movlb	1	; () banked
 15375  002572  1976               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 15376  002574  B4D8               	btfsc	status,2,c
 15377  002576  EF84  F01D         	goto	l641
 15378  00257A                     l17966:
 15379                           
 15380                           ; BSR set to: 1
 15381                           ;miwi_mesh.c: 373: }
 15382                           ;miwi_mesh.c: 377: if(MACRxPacket.Payload[0]>1)
 15383  00257A  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15384  00257E  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15385  002582  0E01               	movlw	1
 15386  002584  64DF               	cpfsgt	indf2,c
 15387  002586  D041               	goto	l17986
 15388                           
 15389                           ; BSR set to: 1
 15390                           ;miwi_mesh.c: 378: {
 15391                           ;miwi_mesh.c: 379: MACRxPacket.Payload[0]--;
 15392  002588  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15393  00258C  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15394  002590  06DF               	decf	indf2,f,c
 15395                           
 15396                           ; BSR set to: 1
 15397                           ;miwi_mesh.c: 380: {TxData = 0;};
 15398  002592  0E00               	movlw	0
 15399  002594  0101               	movlb	1	; () banked
 15400  002596  6FC6               	movwf	_TxData& (0+255),b
 15401                           
 15402                           ; BSR set to: 1
 15403                           ;miwi_mesh.c: 381: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 15404  002598  0E00               	movlw	0
 15405  00259A  0101               	movlb	1	; () banked
 15406  00259C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15407  00259E  D01A               	goto	l17980
 15408  0025A0                     l17974:
 15409                           
 15410                           ; BSR set to: 1
 15411                           ;miwi_mesh.c: 382: {
 15412                           ;miwi_mesh.c: 383: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 15413  0025A0  0101               	movlb	1	; () banked
 15414  0025A2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15415  0025A4  0D01               	mullw	1
 15416  0025A6  50F3               	movf	prodl,w,c
 15417  0025A8  0101               	movlb	1	; () banked
 15418  0025AA  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 15419  0025AC  6ED9               	movwf	fsr2l,c
 15420  0025AE  50F4               	movf	prodh,w,c
 15421  0025B0  0101               	movlb	1	; () banked
 15422  0025B2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 15423  0025B4  6EDA               	movwf	fsr2h,c
 15424  0025B6  0101               	movlb	1	; () banked
 15425  0025B8  51C6               	movf	_TxData& (0+255),w,b
 15426  0025BA  0D01               	mullw	1
 15427  0025BC  0EA6               	movlw	low _TxBuffer
 15428  0025BE  24F3               	addwf	prodl,w,c
 15429  0025C0  6EE1               	movwf	fsr1l,c
 15430  0025C2  0E02               	movlw	high _TxBuffer
 15431  0025C4  20F4               	addwfc	prodh,w,c
 15432  0025C6  6EE2               	movwf	fsr1h,c
 15433  0025C8  CFDF FFE7          	movff	indf2,indf1
 15434                           
 15435                           ; BSR set to: 1
 15436  0025CC  0101               	movlb	1	; () banked
 15437  0025CE  2BC6               	incf	_TxData& (0+255),f,b
 15438                           
 15439                           ; BSR set to: 1
 15440  0025D0  0101               	movlb	1	; () banked
 15441  0025D2  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15442  0025D4                     l17980:
 15443                           
 15444                           ; BSR set to: 1
 15445  0025D4  0101               	movlb	1	; () banked
 15446  0025D6  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 15447  0025D8  0101               	movlb	1	; () banked
 15448  0025DA  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 15449  0025DC  A0D8               	btfss	status,0,c
 15450  0025DE  D7E0               	goto	l17974
 15451                           
 15452                           ; BSR set to: 1
 15453                           ;miwi_mesh.c: 384: }
 15454                           ;miwi_mesh.c: 386: MTP.flags.Val = MACRxPacket.flags.Val;
 15455  0025E0  C19A  F1AD         	movff	_MACRxPacket,_MTP
 15456                           
 15457                           ; BSR set to: 1
 15458                           ;miwi_mesh.c: 395: BroadcastJitter(20);
 15459  0025E4  0E14               	movlw	20
 15460  0025E6  ECB8  F051         	call	_BroadcastJitter
 15461                           
 15462                           ;miwi_mesh.c: 398: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15463  0025EA  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 15464  0025EE  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15465  0025F2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15466  0025F6  0EA6               	movlw	low _TxBuffer
 15467  0025F8  0101               	movlb	1	; () banked
 15468  0025FA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15469  0025FC  0E02               	movlw	high _TxBuffer
 15470  0025FE  0101               	movlb	1	; () banked
 15471  002600  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15472  002602  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15473  002606  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 15474  00260A                     l17986:
 15475                           
 15476                           ;miwi_mesh.c: 417: }
 15477                           ;miwi_mesh.c: 421: for(i = 0; i < 4; i++)
 15478  00260A  0E00               	movlw	0
 15479  00260C  0101               	movlb	1	; () banked
 15480  00260E  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15481  002610                     l17988:
 15482                           
 15483                           ; BSR set to: 1
 15484  002610  0E03               	movlw	3
 15485  002612  0101               	movlb	1	; () banked
 15486  002614  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15487  002616  D001               	goto	l17992
 15488  002618  D03D               	goto	l18004
 15489  00261A                     l17992:
 15490                           
 15491                           ; BSR set to: 1
 15492                           ;miwi_mesh.c: 422: {
 15493                           ;miwi_mesh.c: 423: if( BroadcastRecords[i].RxCounter &&
 15494                           ;miwi_mesh.c: 424: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 15495                           ;miwi_mesh.c: 425: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 15496  00261A  0101               	movlb	1	; () banked
 15497  00261C  517C               	movf	MiWiTasks@i& (0+255),w,b
 15498  00261E  0D08               	mullw	8
 15499  002620  0E03               	movlw	3
 15500  002622  26F3               	addwf	prodl,f,c
 15501  002624  0E00               	movlw	0
 15502  002626  22F4               	addwfc	prodh,f,c
 15503  002628  0E28               	movlw	low _BroadcastRecords
 15504  00262A  24F3               	addwf	prodl,w,c
 15505  00262C  6ED9               	movwf	fsr2l,c
 15506  00262E  0E02               	movlw	high _BroadcastRecords
 15507  002630  20F4               	addwfc	prodh,w,c
 15508  002632  6EDA               	movwf	fsr2h,c
 15509  002634  50DF               	movf	indf2,w,c
 15510  002636  B4D8               	btfsc	status,2,c
 15511  002638  D02A               	goto	l18000
 15512                           
 15513                           ; BSR set to: 1
 15514  00263A  0101               	movlb	1	; () banked
 15515  00263C  517C               	movf	MiWiTasks@i& (0+255),w,b
 15516  00263E  0D08               	mullw	8
 15517  002640  0E28               	movlw	low _BroadcastRecords
 15518  002642  24F3               	addwf	prodl,w,c
 15519  002644  6ED9               	movwf	fsr2l,c
 15520  002646  0E02               	movlw	high _BroadcastRecords
 15521  002648  20F4               	addwfc	prodh,w,c
 15522  00264A  6EDA               	movwf	fsr2h,c
 15523  00264C  0101               	movlb	1	; () banked
 15524  00264E  5178               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 15525  002650  18DE               	xorwf	postinc2,w,c
 15526  002652  E11D               	bnz	l18000
 15527  002654  0101               	movlb	1	; () banked
 15528  002656  5179               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15529  002658  18DE               	xorwf	postinc2,w,c
 15530  00265A  A4D8               	btfss	status,2,c
 15531  00265C  D018               	goto	l18000
 15532                           
 15533                           ; BSR set to: 1
 15534  00265E  0101               	movlb	1	; () banked
 15535  002660  EE20 F00A          	lfsr	2,10
 15536  002664  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15537  002666  26D9               	addwf	fsr2l,f,c
 15538  002668  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15539  00266A  22DA               	addwfc	fsr2h,f,c
 15540  00266C  0101               	movlb	1	; () banked
 15541  00266E  517C               	movf	MiWiTasks@i& (0+255),w,b
 15542  002670  0D08               	mullw	8
 15543  002672  0E02               	movlw	2
 15544  002674  26F3               	addwf	prodl,f,c
 15545  002676  0E00               	movlw	0
 15546  002678  22F4               	addwfc	prodh,f,c
 15547  00267A  0E28               	movlw	low _BroadcastRecords
 15548  00267C  24F3               	addwf	prodl,w,c
 15549  00267E  6EE1               	movwf	fsr1l,c
 15550  002680  0E02               	movlw	high _BroadcastRecords
 15551  002682  20F4               	addwfc	prodh,w,c
 15552  002684  6EE2               	movwf	fsr1h,c
 15553  002686  50DE               	movf	postinc2,w,c
 15554  002688  18E6               	xorwf	postinc1,w,c
 15555  00268A  B4D8               	btfsc	status,2,c
 15556  00268C  D003               	goto	l18004
 15557  00268E                     l18000:
 15558                           
 15559                           ; BSR set to: 1
 15560  00268E  0101               	movlb	1	; () banked
 15561  002690  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15562  002692  D7BE               	goto	l17988
 15563  002694                     l18004:
 15564                           
 15565                           ; BSR set to: 1
 15566                           ;miwi_mesh.c: 428: }
 15567                           ;miwi_mesh.c: 429: }
 15568                           ;miwi_mesh.c: 432: if( i < 4 )
 15569  002694  0E04               	movlw	4
 15570  002696  0101               	movlb	1	; () banked
 15571  002698  617C               	cpfslt	MiWiTasks@i& (0+255),b
 15572  00269A  D002               	goto	l18008
 15573  00269C  EF84  F01D         	goto	l641
 15574  0026A0                     l18008:
 15575                           
 15576                           ; BSR set to: 1
 15577                           ;miwi_mesh.c: 438: }
 15578                           ;miwi_mesh.c: 442: for(i = 0; i < 4; i++)
 15579  0026A0  0E00               	movlw	0
 15580  0026A2  0101               	movlb	1	; () banked
 15581  0026A4  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15582  0026A6                     l18010:
 15583                           
 15584                           ; BSR set to: 1
 15585  0026A6  0E03               	movlw	3
 15586  0026A8  0101               	movlb	1	; () banked
 15587  0026AA  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15588  0026AC  D001               	goto	l18014
 15589  0026AE  D013               	goto	l18022
 15590  0026B0                     l18014:
 15591                           
 15592                           ; BSR set to: 1
 15593                           ;miwi_mesh.c: 443: {
 15594                           ;miwi_mesh.c: 444: if( BroadcastRecords[i].RxCounter == 0 )
 15595  0026B0  0101               	movlb	1	; () banked
 15596  0026B2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15597  0026B4  0D08               	mullw	8
 15598  0026B6  0E03               	movlw	3
 15599  0026B8  26F3               	addwf	prodl,f,c
 15600  0026BA  0E00               	movlw	0
 15601  0026BC  22F4               	addwfc	prodh,f,c
 15602  0026BE  0E28               	movlw	low _BroadcastRecords
 15603  0026C0  24F3               	addwf	prodl,w,c
 15604  0026C2  6ED9               	movwf	fsr2l,c
 15605  0026C4  0E02               	movlw	high _BroadcastRecords
 15606  0026C6  20F4               	addwfc	prodh,w,c
 15607  0026C8  6EDA               	movwf	fsr2h,c
 15608  0026CA  50DF               	movf	indf2,w,c
 15609  0026CC  B4D8               	btfsc	status,2,c
 15610  0026CE  D003               	goto	l18022
 15611                           
 15612                           ; BSR set to: 1
 15613                           
 15614                           ; BSR set to: 1
 15615                           
 15616                           ; BSR set to: 1
 15617                           ;miwi_mesh.c: 445: {
 15618                           ;miwi_mesh.c: 446: break;
 15619  0026D0  0101               	movlb	1	; () banked
 15620  0026D2  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15621  0026D4  D7E8               	goto	l18010
 15622  0026D6                     l18022:
 15623                           
 15624                           ; BSR set to: 1
 15625                           ;miwi_mesh.c: 447: }
 15626                           ;miwi_mesh.c: 448: }
 15627                           ;miwi_mesh.c: 450: if( i < 4 )
 15628  0026D6  0E04               	movlw	4
 15629  0026D8  0101               	movlb	1	; () banked
 15630  0026DA  617C               	cpfslt	MiWiTasks@i& (0+255),b
 15631  0026DC  D04D               	goto	l18032
 15632                           
 15633                           ; BSR set to: 1
 15634                           ;miwi_mesh.c: 451: {
 15635                           ;miwi_mesh.c: 452: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 15636  0026DE  0101               	movlb	1	; () banked
 15637  0026E0  517C               	movf	MiWiTasks@i& (0+255),w,b
 15638  0026E2  0D08               	mullw	8
 15639  0026E4  0E28               	movlw	low _BroadcastRecords
 15640  0026E6  24F3               	addwf	prodl,w,c
 15641  0026E8  6ED9               	movwf	fsr2l,c
 15642  0026EA  0E02               	movlw	high _BroadcastRecords
 15643  0026EC  20F4               	addwfc	prodh,w,c
 15644  0026EE  6EDA               	movwf	fsr2h,c
 15645  0026F0  C178  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 15646  0026F4  C179  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;miwi_mesh.c: 453: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 15650  0026F8  0101               	movlb	1	; () banked
 15651  0026FA  EE20 F00A          	lfsr	2,10
 15652  0026FE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15653  002700  26D9               	addwf	fsr2l,f,c
 15654  002702  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15655  002704  22DA               	addwfc	fsr2h,f,c
 15656  002706  0101               	movlb	1	; () banked
 15657  002708  517C               	movf	MiWiTasks@i& (0+255),w,b
 15658  00270A  0D08               	mullw	8
 15659  00270C  0E02               	movlw	2
 15660  00270E  26F3               	addwf	prodl,f,c
 15661  002710  0E00               	movlw	0
 15662  002712  22F4               	addwfc	prodh,f,c
 15663  002714  0E28               	movlw	low _BroadcastRecords
 15664  002716  24F3               	addwf	prodl,w,c
 15665  002718  6EE1               	movwf	fsr1l,c
 15666  00271A  0E02               	movlw	high _BroadcastRecords
 15667  00271C  20F4               	addwfc	prodh,w,c
 15668  00271E  6EE2               	movwf	fsr1h,c
 15669  002720  CFDF FFE7          	movff	indf2,indf1
 15670                           
 15671                           ; BSR set to: 1
 15672                           ;miwi_mesh.c: 454: BroadcastRecords[i].RxCounter = 2 + 1;
 15673  002724  0101               	movlb	1	; () banked
 15674  002726  517C               	movf	MiWiTasks@i& (0+255),w,b
 15675  002728  0D08               	mullw	8
 15676  00272A  0E03               	movlw	3
 15677  00272C  26F3               	addwf	prodl,f,c
 15678  00272E  0E00               	movlw	0
 15679  002730  22F4               	addwfc	prodh,f,c
 15680  002732  0E28               	movlw	low _BroadcastRecords
 15681  002734  24F3               	addwf	prodl,w,c
 15682  002736  6ED9               	movwf	fsr2l,c
 15683  002738  0E02               	movlw	high _BroadcastRecords
 15684  00273A  20F4               	addwfc	prodh,w,c
 15685  00273C  6EDA               	movwf	fsr2h,c
 15686  00273E  0E03               	movlw	3
 15687  002740  6EDF               	movwf	indf2,c
 15688                           
 15689                           ; BSR set to: 1
 15690                           ;miwi_mesh.c: 456: BroadcastRecords[i].StartTick = MiWi_TickGet();
 15691  002742  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 15692  002746  0101               	movlb	1	; () banked
 15693  002748  517C               	movf	MiWiTasks@i& (0+255),w,b
 15694  00274A  0D08               	mullw	8
 15695  00274C  0E04               	movlw	4
 15696  00274E  26F3               	addwf	prodl,f,c
 15697  002750  0E00               	movlw	0
 15698  002752  22F4               	addwfc	prodh,f,c
 15699  002754  0E28               	movlw	low _BroadcastRecords
 15700  002756  24F3               	addwf	prodl,w,c
 15701  002758  6ED9               	movwf	fsr2l,c
 15702  00275A  0E02               	movlw	high _BroadcastRecords
 15703  00275C  20F4               	addwfc	prodh,w,c
 15704  00275E  6EDA               	movwf	fsr2h,c
 15705  002760  0101               	movlb	1	; () banked
 15706  002762  C100  FFDE         	movff	?_MiWi_TickGet,postinc2
 15707  002766  0101               	movlb	1	; () banked
 15708  002768  C101  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 15709  00276C  0101               	movlb	1	; () banked
 15710  00276E  C102  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 15711  002772  0101               	movlb	1	; () banked
 15712  002774  C103  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 15713  002778                     l18032:
 15714                           
 15715                           ; BSR set to: 1
 15716                           ;miwi_mesh.c: 458: }
 15717                           ;miwi_mesh.c: 460: rxMessage.flags.bits.broadcast = 1;
 15718  002778  0101               	movlb	1	; () banked
 15719  00277A  5190               	movf	_rxMessage& (0+255),w,b
 15720  00277C  0BFC               	andlw	-4
 15721  00277E  0901               	iorlw	1
 15722  002780  6F90               	movwf	_rxMessage& (0+255),b
 15723                           
 15724                           ;miwi_mesh.c: 461: goto ThisPacketIsForMe;
 15725  002782  D092               	goto	l18088
 15726  002784                     l18034:
 15727                           
 15728                           ; BSR set to: 1
 15729                           ;miwi_mesh.c: 462: }
 15730                           ;miwi_mesh.c: 465: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 15731  002784  0101               	movlb	1	; () banked
 15732  002786  51F0               	movf	_myPANID& (0+255),w,b
 15733  002788  0101               	movlb	1	; () banked
 15734  00278A  196D               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 15735  00278C  E105               	bnz	u20141
 15736  00278E  0101               	movlb	1	; () banked
 15737  002790  51F1               	movf	(_myPANID+1)& (0+255),w,b
 15738  002792  0101               	movlb	1	; () banked
 15739  002794  196E               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 15740  002796  A4D8               	btfss	status,2,c
 15741  002798                     u20141:
 15742  002798  D30F               	goto	l18268
 15743                           
 15744                           ; BSR set to: 1
 15745  00279A  0101               	movlb	1	; () banked
 15746  00279C  51F2               	movf	_myShortAddress& (0+255),w,b
 15747  00279E  0101               	movlb	1	; () banked
 15748  0027A0  1973               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 15749  0027A2  E105               	bnz	u20151
 15750  0027A4  0101               	movlb	1	; () banked
 15751  0027A6  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15752  0027A8  0101               	movlb	1	; () banked
 15753  0027AA  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 15754  0027AC  A4D8               	btfss	status,2,c
 15755  0027AE                     u20151:
 15756  0027AE  D304               	goto	l18268
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;miwi_mesh.c: 466: {
 15760                           ;miwi_mesh.c: 468: if(MACRxPacket.Payload[1] & 0x04)
 15761  0027B0  0101               	movlb	1	; () banked
 15762  0027B2  EE20 F001          	lfsr	2,1
 15763  0027B6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15764  0027B8  26D9               	addwf	fsr2l,f,c
 15765  0027BA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15766  0027BC  22DA               	addwfc	fsr2h,f,c
 15767  0027BE  0101               	movlb	1	; () banked
 15768  0027C0  A4DF               	btfss	indf2,2,c
 15769  0027C2  D072               	goto	l18088
 15770                           
 15771                           ; BSR set to: 1
 15772                           ;miwi_mesh.c: 469: {
 15773                           ;miwi_mesh.c: 470: TxBuffer[0] = defaultHops;
 15774  0027C4  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 15775                           
 15776                           ; BSR set to: 1
 15777                           ;miwi_mesh.c: 471: TxBuffer[1] = 0x02;
 15778  0027C8  0E02               	movlw	2
 15779  0027CA  0102               	movlb	2	; () banked
 15780  0027CC  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 15781                           
 15782                           ; BSR set to: 2
 15783                           ;miwi_mesh.c: 472: TxBuffer[2] = sourcePANID.v[0];
 15784  0027CE  C175  F2A8         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 15785                           
 15786                           ; BSR set to: 2
 15787                           ;miwi_mesh.c: 473: TxBuffer[3] = sourcePANID.v[1];
 15788  0027D2  C176  F2A9         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 15789                           
 15790                           ; BSR set to: 2
 15791                           ;miwi_mesh.c: 474: TxBuffer[4] = sourceShortAddress.v[0];
 15792  0027D6  C178  F2AA         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 15793                           
 15794                           ; BSR set to: 2
 15795                           ;miwi_mesh.c: 475: TxBuffer[5] = sourceShortAddress.v[1];
 15796  0027DA  C179  F2AB         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 15797                           
 15798                           ; BSR set to: 2
 15799                           ;miwi_mesh.c: 476: TxBuffer[6] = myPANID.v[0];
 15800  0027DE  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 15801                           
 15802                           ; BSR set to: 2
 15803                           ;miwi_mesh.c: 477: TxBuffer[7] = myPANID.v[1];
 15804  0027E2  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 15805                           
 15806                           ; BSR set to: 2
 15807                           ;miwi_mesh.c: 478: TxBuffer[8] = myShortAddress.v[0];
 15808  0027E6  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 15809                           
 15810                           ; BSR set to: 2
 15811                           ;miwi_mesh.c: 479: TxBuffer[9] = myShortAddress.v[1];
 15812  0027EA  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 15813                           
 15814                           ; BSR set to: 2
 15815                           ;miwi_mesh.c: 480: TxBuffer[10] = MACRxPacket.Payload[11-1];
 15816  0027EE  0101               	movlb	1	; () banked
 15817  0027F0  EE20 F00A          	lfsr	2,10
 15818  0027F4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15819  0027F6  26D9               	addwf	fsr2l,f,c
 15820  0027F8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15821  0027FA  22DA               	addwfc	fsr2h,f,c
 15822  0027FC  50DF               	movf	indf2,w,c
 15823  0027FE  0102               	movlb	2	; () banked
 15824  002800  6FB0               	movwf	(_TxBuffer+10)& (0+255),b
 15825                           
 15826                           ; BSR set to: 2
 15827                           ;miwi_mesh.c: 481: TxBuffer[11] = 0x00;
 15828  002802  0E00               	movlw	0
 15829  002804  0102               	movlb	2	; () banked
 15830  002806  6FB1               	movwf	(_TxBuffer+11)& (0+255),b
 15831                           
 15832                           ; BSR set to: 2
 15833                           ;miwi_mesh.c: 482: TxBuffer[12] = 0x30;
 15834  002808  0E30               	movlw	48
 15835  00280A  0102               	movlb	2	; () banked
 15836  00280C  6FB2               	movwf	(_TxBuffer+12)& (0+255),b
 15837                           
 15838                           ; BSR set to: 2
 15839                           ;miwi_mesh.c: 483: TxData = 13;
 15840  00280E  0E0D               	movlw	13
 15841  002810  0101               	movlb	1	; () banked
 15842  002812  6FC6               	movwf	_TxData& (0+255),b
 15843                           
 15844                           ; BSR set to: 1
 15845                           ;miwi_mesh.c: 486: if( sourceShortAddress.v[1] != myShortAddress.v[1] )
 15846  002814  0101               	movlb	1	; () banked
 15847  002816  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15848  002818  0101               	movlb	1	; () banked
 15849  00281A  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15850  00281C  B4D8               	btfsc	status,2,c
 15851  00281E  D00E               	goto	l18072
 15852                           
 15853                           ; BSR set to: 1
 15854                           ;miwi_mesh.c: 487: {
 15855                           ;miwi_mesh.c: 488: RouteMessage(sourcePANID, sourceShortAddress, 0);
 15856  002820  C175  F13D         	movff	MiWiTasks@sourcePANID,RouteMessage@PANID
 15857  002824  C176  F13E         	movff	MiWiTasks@sourcePANID+1,RouteMessage@PANID+1
 15858  002828  C178  F13F         	movff	MiWiTasks@sourceShortAddress,RouteMessage@ShortAddress
 15859  00282C  C179  F140         	movff	MiWiTasks@sourceShortAddress+1,RouteMessage@ShortAddress+1
 15860  002830  0E00               	movlw	0
 15861  002832  0101               	movlb	1	; () banked
 15862  002834  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 15863  002836  EC07  F024         	call	_RouteMessage	;wreg free
 15864                           
 15865                           ;miwi_mesh.c: 489: }
 15866  00283A  D034               	goto	l18086
 15867  00283C                     l18072:
 15868                           
 15869                           ;miwi_mesh.c: 490: else
 15870                           ;miwi_mesh.c: 491: {
 15871                           ;miwi_mesh.c: 492: MTP.flags.Val = 0;
 15872  00283C  0E00               	movlw	0
 15873  00283E  0101               	movlb	1	; () banked
 15874  002840  6FAD               	movwf	_MTP& (0+255),b
 15875                           
 15876                           ; BSR set to: 1
 15877                           ;miwi_mesh.c: 493: MTP.flags.bits.ackReq = 1;
 15878  002842  0101               	movlb	1	; () banked
 15879  002844  8BAD               	bsf	_MTP& (0+255),5,b
 15880                           
 15881                           ; BSR set to: 1
 15882                           ;miwi_mesh.c: 501: tempShortAddress.Val = sourceShortAddress.Val;
 15883  002846  C178  F1F4         	movff	MiWiTasks@sourceShortAddress,_tempShortAddress
 15884  00284A  C179  F1F5         	movff	MiWiTasks@sourceShortAddress+1,_tempShortAddress+1
 15885                           
 15886                           ; BSR set to: 1
 15887                           ;miwi_mesh.c: 502: tempPANID.Val = sourcePANID.Val;
 15888  00284E  C175  F1BB         	movff	MiWiTasks@sourcePANID,_tempPANID
 15889  002852  C176  F1BC         	movff	MiWiTasks@sourcePANID+1,_tempPANID+1
 15890                           
 15891                           ; BSR set to: 1
 15892                           ;miwi_mesh.c: 503: if( (i = SearchForShortAddress()) != 0xFF )
 15893  002856  EC85  F057         	call	_SearchForShortAddress	;wreg free
 15894  00285A  0101               	movlb	1	; () banked
 15895  00285C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15896  00285E  0101               	movlb	1	; () banked
 15897  002860  297C               	incf	MiWiTasks@i& (0+255),w,b
 15898  002862  B4D8               	btfsc	status,2,c
 15899  002864  D00F               	goto	l18084
 15900                           
 15901                           ; BSR set to: 1
 15902                           ;miwi_mesh.c: 504: {
 15903                           ;miwi_mesh.c: 505: MTP.DestAddress = ConnectionTable[i].Address;
 15904  002866  0101               	movlb	1	; () banked
 15905  002868  517C               	movf	MiWiTasks@i& (0+255),w,b
 15906  00286A  0D09               	mullw	9
 15907  00286C  0E04               	movlw	4
 15908  00286E  26F3               	addwf	prodl,f,c
 15909  002870  0E00               	movlw	0
 15910  002872  22F4               	addwfc	prodh,f,c
 15911  002874  0E00               	movlw	low _ConnectionTable
 15912  002876  24F3               	addwf	prodl,w,c
 15913  002878  0101               	movlb	1	; () banked
 15914  00287A  6FAE               	movwf	(_MTP+1)& (0+255),b
 15915  00287C  0E06               	movlw	high _ConnectionTable
 15916  00287E  20F4               	addwfc	prodh,w,c
 15917  002880  0101               	movlb	1	; () banked
 15918  002882  6FAF               	movwf	(_MTP+2)& (0+255),b
 15919  002884                     l18084:
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;miwi_mesh.c: 506: }
 15923                           ;miwi_mesh.c: 509: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15924  002884  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 15925  002888  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15926  00288C  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15927  002890  0EA6               	movlw	low _TxBuffer
 15928  002892  0101               	movlb	1	; () banked
 15929  002894  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15930  002896  0E02               	movlw	high _TxBuffer
 15931  002898  0101               	movlb	1	; () banked
 15932  00289A  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15933  00289C  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15934  0028A0  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 15935  0028A4                     l18086:
 15936                           
 15937                           ;miwi_mesh.c: 510: }
 15938                           ;miwi_mesh.c: 527: rxMessage.flags.bits.ackReq = 1;
 15939  0028A4  0101               	movlb	1	; () banked
 15940  0028A6  8590               	bsf	_rxMessage& (0+255),2,b
 15941  0028A8                     l18088:
 15942                           
 15943                           ; BSR set to: 1
 15944                           ;miwi_mesh.c: 532: if(MACRxPacket.Payload[11] == 0x00)
 15945  0028A8  0101               	movlb	1	; () banked
 15946  0028AA  EE20 F00B          	lfsr	2,11
 15947  0028AE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15948  0028B0  26D9               	addwf	fsr2l,f,c
 15949  0028B2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15950  0028B4  22DA               	addwfc	fsr2h,f,c
 15951  0028B6  50DF               	movf	indf2,w,c
 15952  0028B8  A4D8               	btfss	status,2,c
 15953  0028BA  D238               	goto	l18246
 15954                           
 15955                           ; BSR set to: 1
 15956                           ;miwi_mesh.c: 533: {
 15957                           ;miwi_mesh.c: 534: if( MACRxPacket.Payload[11+1] != 0x30)
 15958  0028BC  0101               	movlb	1	; () banked
 15959  0028BE  EE20 F00C          	lfsr	2,12
 15960  0028C2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15961  0028C4  26D9               	addwf	fsr2l,f,c
 15962  0028C6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15963  0028C8  22DA               	addwfc	fsr2h,f,c
 15964  0028CA  0E30               	movlw	48
 15965  0028CC  18DE               	xorwf	postinc2,w,c
 15966  0028CE  A4D8               	btfss	status,2,c
 15967  0028D0  D200               	goto	l18238
 15968  0028D2  D20F               	goto	l18240
 15969  0028D4                     l667:
 15970                           
 15971                           ; BSR set to: 1
 15972                           ;miwi_mesh.c: 688: {
 15973                           ;miwi_mesh.c: 689: uint8_t j;
 15974                           ;miwi_mesh.c: 692: if(openSocketInfo.status.bits.requestIsOpen == 0)
 15975  0028D4  0101               	movlb	1	; () banked
 15976  0028D6  B3CC               	btfsc	_openSocketInfo& (0+255),1,b
 15977  0028D8  D04E               	goto	l18112
 15978                           
 15979                           ; BSR set to: 1
 15980                           ;miwi_mesh.c: 693: {
 15981                           ;miwi_mesh.c: 696: openSocketInfo.socketStart = MiWi_TickGet();
 15982  0028DA  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 15983  0028DE  C100  F1DA         	movff	?_MiWi_TickGet,_openSocketInfo+14
 15984  0028E2  C101  F1DB         	movff	?_MiWi_TickGet+1,_openSocketInfo+15
 15985  0028E6  C102  F1DC         	movff	?_MiWi_TickGet+2,_openSocketInfo+16
 15986  0028EA  C103  F1DD         	movff	?_MiWi_TickGet+3,_openSocketInfo+17
 15987                           
 15988                           ;miwi_mesh.c: 697: openSocketInfo.ShortAddress1.v[0] = MACRxPacket.Payload[11-3];
 15989  0028EE  0101               	movlb	1	; () banked
 15990  0028F0  EE20 F008          	lfsr	2,8
 15991  0028F4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15992  0028F6  26D9               	addwf	fsr2l,f,c
 15993  0028F8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15994  0028FA  22DA               	addwfc	fsr2h,f,c
 15995  0028FC  50DF               	movf	indf2,w,c
 15996  0028FE  0101               	movlb	1	; () banked
 15997  002900  6FCE               	movwf	(_openSocketInfo+2)& (0+255),b
 15998                           
 15999                           ; BSR set to: 1
 16000                           ;miwi_mesh.c: 698: openSocketInfo.ShortAddress1.v[1] = MACRxPacket.Payload[11-2];
 16001  002902  0101               	movlb	1	; () banked
 16002  002904  EE20 F009          	lfsr	2,9
 16003  002908  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16004  00290A  26D9               	addwf	fsr2l,f,c
 16005  00290C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16006  00290E  22DA               	addwfc	fsr2h,f,c
 16007  002910  50DF               	movf	indf2,w,c
 16008  002912  0101               	movlb	1	; () banked
 16009  002914  6FCF               	movwf	(_openSocketInfo+3)& (0+255),b
 16010                           
 16011                           ; BSR set to: 1
 16012                           ;miwi_mesh.c: 701: for(j=0;j<4;j++)
 16013  002916  0E00               	movlw	0
 16014  002918  0101               	movlb	1	; () banked
 16015  00291A  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16016  00291C                     l18102:
 16017                           
 16018                           ; BSR set to: 1
 16019  00291C  0E03               	movlw	3
 16020  00291E  0101               	movlb	1	; () banked
 16021  002920  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16022  002922  D001               	goto	l18106
 16023  002924  D022               	goto	l670
 16024  002926                     l18106:
 16025                           
 16026                           ; BSR set to: 1
 16027                           ;miwi_mesh.c: 702: {
 16028                           ;miwi_mesh.c: 703: openSocketInfo.LongAddress1[j] = MACRxPacket.Payload[j+2+11];
 16029  002926  0101               	movlb	1	; () banked
 16030  002928  517B               	movf	MiWiTasks@j& (0+255),w,b
 16031  00292A  0101               	movlb	1	; () banked
 16032  00292C  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16033  00292E  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16034  002930  0E0D               	movlw	13
 16035  002932  0101               	movlb	1	; () banked
 16036  002934  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16037  002936  0E00               	movlw	0
 16038  002938  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16039  00293A  0101               	movlb	1	; () banked
 16040  00293C  514A               	movf	??_MiWiTasks& (0+255),w,b
 16041  00293E  0101               	movlb	1	; () banked
 16042  002940  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16043  002942  6ED9               	movwf	fsr2l,c
 16044  002944  0101               	movlb	1	; () banked
 16045  002946  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16046  002948  0101               	movlb	1	; () banked
 16047  00294A  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16048  00294C  6EDA               	movwf	fsr2h,c
 16049  00294E  0101               	movlb	1	; () banked
 16050  002950  517B               	movf	MiWiTasks@j& (0+255),w,b
 16051  002952  0D01               	mullw	1
 16052  002954  0ED0               	movlw	low (_openSocketInfo+4)
 16053  002956  24F3               	addwf	prodl,w,c
 16054  002958  6EE1               	movwf	fsr1l,c
 16055  00295A  0E01               	movlw	high (_openSocketInfo+4)
 16056  00295C  20F4               	addwfc	prodh,w,c
 16057  00295E  6EE2               	movwf	fsr1h,c
 16058  002960  CFDF FFE7          	movff	indf2,indf1
 16059                           
 16060                           ; BSR set to: 1
 16061  002964  0101               	movlb	1	; () banked
 16062  002966  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16063  002968  D7D9               	goto	l18102
 16064  00296A                     l670:
 16065                           
 16066                           ; BSR set to: 1
 16067                           ;miwi_mesh.c: 704: }
 16068                           ;miwi_mesh.c: 706: openSocketInfo.status.bits.requestIsOpen = 1;
 16069  00296A  0101               	movlb	1	; () banked
 16070  00296C  83CC               	bsf	_openSocketInfo& (0+255),1,b
 16071                           
 16072                           ;miwi_mesh.c: 707: openSocketInfo.status.bits.matchFound = 0;
 16073  00296E  0101               	movlb	1	; () banked
 16074  002970  91CC               	bcf	_openSocketInfo& (0+255),0,b
 16075                           
 16076                           ;miwi_mesh.c: 715: }
 16077  002972  EF84  F01D         	goto	l641
 16078  002976                     l18112:
 16079                           
 16080                           ; BSR set to: 1
 16081                           ;miwi_mesh.c: 716: else
 16082                           ;miwi_mesh.c: 717: {
 16083                           ;miwi_mesh.c: 720: if( (MACRxPacket.Payload[11-3] == openSocketInfo.ShortAddress1.v[0]) 
      +                          &&
 16084                           ;miwi_mesh.c: 721: (MACRxPacket.Payload[11-2] == openSocketInfo.ShortAddress1.v[1]))
 16085  002976  0101               	movlb	1	; () banked
 16086  002978  EE20 F008          	lfsr	2,8
 16087  00297C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16088  00297E  26D9               	addwf	fsr2l,f,c
 16089  002980  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16090  002982  22DA               	addwfc	fsr2h,f,c
 16091  002984  0101               	movlb	1	; () banked
 16092  002986  51CE               	movf	(_openSocketInfo+2)& (0+255),w,b
 16093  002988  18DE               	xorwf	postinc2,w,c
 16094  00298A  A4D8               	btfss	status,2,c
 16095  00298C  D00D               	goto	l18118
 16096                           
 16097                           ; BSR set to: 1
 16098  00298E  0101               	movlb	1	; () banked
 16099  002990  EE20 F009          	lfsr	2,9
 16100  002994  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16101  002996  26D9               	addwf	fsr2l,f,c
 16102  002998  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16103  00299A  22DA               	addwfc	fsr2h,f,c
 16104  00299C  0101               	movlb	1	; () banked
 16105  00299E  51CF               	movf	(_openSocketInfo+3)& (0+255),w,b
 16106  0029A0  18DE               	xorwf	postinc2,w,c
 16107  0029A2  B4D8               	btfsc	status,2,c
 16108  0029A4  EF84  F01D         	goto	l641
 16109  0029A8                     l18118:
 16110                           
 16111                           ; BSR set to: 1
 16112                           ;miwi_mesh.c: 727: else if(openSocketInfo.ShortAddress1.Val == 0x0000)
 16113  0029A8  0101               	movlb	1	; () banked
 16114  0029AA  51CE               	movf	(_openSocketInfo+2)& (0+255),w,b
 16115  0029AC  0101               	movlb	1	; () banked
 16116  0029AE  11CF               	iorwf	(_openSocketInfo+3)& (0+255),w,b
 16117  0029B0  A4D8               	btfss	status,2,c
 16118  0029B2  D06F               	goto	l18154
 16119                           
 16120                           ; BSR set to: 1
 16121                           ;miwi_mesh.c: 728: {
 16122                           ;miwi_mesh.c: 731: for(j=0;j<4;j++)
 16123  0029B4  0E00               	movlw	0
 16124  0029B6  0101               	movlb	1	; () banked
 16125  0029B8  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16126  0029BA                     l18122:
 16127                           
 16128                           ; BSR set to: 1
 16129  0029BA  0E03               	movlw	3
 16130  0029BC  0101               	movlb	1	; () banked
 16131  0029BE  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16132  0029C0  D001               	goto	l18126
 16133  0029C2  D036               	goto	l18132
 16134  0029C4                     l18126:
 16135                           
 16136                           ; BSR set to: 1
 16137                           ;miwi_mesh.c: 732: {
 16138                           ;miwi_mesh.c: 733: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 16139  0029C4  0101               	movlb	1	; () banked
 16140  0029C6  517B               	movf	MiWiTasks@j& (0+255),w,b
 16141  0029C8  0101               	movlb	1	; () banked
 16142  0029CA  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16143  0029CC  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16144  0029CE  0E0D               	movlw	13
 16145  0029D0  0101               	movlb	1	; () banked
 16146  0029D2  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16147  0029D4  0E00               	movlw	0
 16148  0029D6  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16149  0029D8  0101               	movlb	1	; () banked
 16150  0029DA  514A               	movf	??_MiWiTasks& (0+255),w,b
 16151  0029DC  0101               	movlb	1	; () banked
 16152  0029DE  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16153  0029E0  6ED9               	movwf	fsr2l,c
 16154  0029E2  0101               	movlb	1	; () banked
 16155  0029E4  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16156  0029E6  0101               	movlb	1	; () banked
 16157  0029E8  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16158  0029EA  6EDA               	movwf	fsr2h,c
 16159  0029EC  0101               	movlb	1	; () banked
 16160  0029EE  517B               	movf	MiWiTasks@j& (0+255),w,b
 16161  0029F0  0D01               	mullw	1
 16162  0029F2  0ED6               	movlw	low (_openSocketInfo+10)
 16163  0029F4  24F3               	addwf	prodl,w,c
 16164  0029F6  6EE1               	movwf	fsr1l,c
 16165  0029F8  0E01               	movlw	high (_openSocketInfo+10)
 16166  0029FA  20F4               	addwfc	prodh,w,c
 16167  0029FC  6EE2               	movwf	fsr1h,c
 16168  0029FE  CFDF FFE7          	movff	indf2,indf1
 16169                           
 16170                           ;miwi_mesh.c: 734: tempLongAddress[j] = openSocketInfo.LongAddress2[j];
 16171  002A02  0101               	movlb	1	; () banked
 16172  002A04  517B               	movf	MiWiTasks@j& (0+255),w,b
 16173  002A06  0D01               	mullw	1
 16174  002A08  0ED6               	movlw	low (_openSocketInfo+10)
 16175  002A0A  24F3               	addwf	prodl,w,c
 16176  002A0C  6ED9               	movwf	fsr2l,c
 16177  002A0E  0E01               	movlw	high (_openSocketInfo+10)
 16178  002A10  20F4               	addwfc	prodh,w,c
 16179  002A12  6EDA               	movwf	fsr2h,c
 16180  002A14  0101               	movlb	1	; () banked
 16181  002A16  517B               	movf	MiWiTasks@j& (0+255),w,b
 16182  002A18  0D01               	mullw	1
 16183  002A1A  0EA6               	movlw	low _tempLongAddress
 16184  002A1C  24F3               	addwf	prodl,w,c
 16185  002A1E  6EE1               	movwf	fsr1l,c
 16186  002A20  0E01               	movlw	high _tempLongAddress
 16187  002A22  20F4               	addwfc	prodh,w,c
 16188  002A24  6EE2               	movwf	fsr1h,c
 16189  002A26  CFDF FFE7          	movff	indf2,indf1
 16190                           
 16191                           ; BSR set to: 1
 16192  002A2A  0101               	movlb	1	; () banked
 16193  002A2C  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16194  002A2E  D7C5               	goto	l18122
 16195  002A30                     l18132:
 16196                           
 16197                           ; BSR set to: 1
 16198                           ;miwi_mesh.c: 735: }
 16199                           ;miwi_mesh.c: 739: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 16200  002A30  0101               	movlb	1	; () banked
 16201  002A32  EE20 F008          	lfsr	2,8
 16202  002A36  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16203  002A38  26D9               	addwf	fsr2l,f,c
 16204  002A3A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16205  002A3C  22DA               	addwfc	fsr2h,f,c
 16206  002A3E  50DF               	movf	indf2,w,c
 16207  002A40  0101               	movlb	1	; () banked
 16208  002A42  6FD4               	movwf	(_openSocketInfo+8)& (0+255),b
 16209                           
 16210                           ;miwi_mesh.c: 740: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 16211  002A44  0101               	movlb	1	; () banked
 16212  002A46  EE20 F009          	lfsr	2,9
 16213  002A4A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16214  002A4C  26D9               	addwf	fsr2l,f,c
 16215  002A4E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16216  002A50  22DA               	addwfc	fsr2h,f,c
 16217  002A52  50DF               	movf	indf2,w,c
 16218  002A54  0101               	movlb	1	; () banked
 16219  002A56  6FD5               	movwf	(_openSocketInfo+9)& (0+255),b
 16220                           
 16221                           ; BSR set to: 1
 16222                           ;miwi_mesh.c: 742: tempShortAddress.v[0] = openSocketInfo.ShortAddress2.v[0];
 16223  002A58  C1D4  F1F4         	movff	_openSocketInfo+8,_tempShortAddress
 16224                           
 16225                           ; BSR set to: 1
 16226                           ;miwi_mesh.c: 743: tempShortAddress.v[1] = openSocketInfo.ShortAddress2.v[1];
 16227  002A5C  C1D5  F1F5         	movff	_openSocketInfo+9,_tempShortAddress+1
 16228                           
 16229                           ; BSR set to: 1
 16230                           ;miwi_mesh.c: 744: tempPANID.Val = myPANID.Val;
 16231  002A60  C1F0  F1BB         	movff	_myPANID,_tempPANID
 16232  002A64  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 16233                           
 16234                           ; BSR set to: 1
 16235                           ;miwi_mesh.c: 747: openSocketInfo.socketHandle = SearchForShortAddress();
 16236  002A68  EC85  F057         	call	_SearchForShortAddress	;wreg free
 16237  002A6C  0101               	movlb	1	; () banked
 16238  002A6E  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16239                           
 16240                           ; BSR set to: 1
 16241                           ;miwi_mesh.c: 749: if(openSocketInfo.socketHandle == 0xFF)
 16242  002A70  0101               	movlb	1	; () banked
 16243  002A72  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16244  002A74  A4D8               	btfss	status,2,c
 16245  002A76  D0A0               	goto	l18188
 16246                           
 16247                           ; BSR set to: 1
 16248                           ;miwi_mesh.c: 750: {
 16249                           ;miwi_mesh.c: 753: tempNodeStatus.Val = 0x8D;
 16250  002A78  0E8D               	movlw	141
 16251  002A7A  0100               	movlb	0	; () banked
 16252  002A7C  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16253                           
 16254                           ; BSR set to: 0
 16255                           ;miwi_mesh.c: 754: if(tempShortAddress.v[0] & 0x80)
 16256  002A7E  0101               	movlb	1	; () banked
 16257  002A80  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 16258  002A82  D002               	goto	l18150
 16259                           
 16260                           ; BSR set to: 1
 16261                           ;miwi_mesh.c: 755: {
 16262                           ;miwi_mesh.c: 756: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16263  002A84  0100               	movlb	0	; () banked
 16264  002A86  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16265  002A88                     l18150:
 16266                           
 16267                           ;miwi_mesh.c: 757: }
 16268                           ;miwi_mesh.c: 759: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 16269  002A88  EC14  F046         	call	_AddNodeToNetworkTable	;wreg free
 16270  002A8C  0101               	movlb	1	; () banked
 16271  002A8E  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16272                           
 16273                           ; BSR set to: 1
 16274  002A90  D093               	goto	l18188
 16275  002A92                     l18154:
 16276                           
 16277                           ; BSR set to: 1
 16278                           ;miwi_mesh.c: 778: else
 16279                           ;miwi_mesh.c: 779: {
 16280                           ;miwi_mesh.c: 780: ;
 16281                           ;miwi_mesh.c: 784: {TxData = 11;};
 16282  002A92  0E0B               	movlw	11
 16283  002A94  0101               	movlb	1	; () banked
 16284  002A96  6FC6               	movwf	_TxData& (0+255),b
 16285                           
 16286                           ; BSR set to: 1
 16287                           ;miwi_mesh.c: 785: TxBuffer[TxData++] = 0x00;
 16288  002A98  0101               	movlb	1	; () banked
 16289  002A9A  51C6               	movf	_TxData& (0+255),w,b
 16290  002A9C  0D01               	mullw	1
 16291  002A9E  0EA6               	movlw	low _TxBuffer
 16292  002AA0  24F3               	addwf	prodl,w,c
 16293  002AA2  6ED9               	movwf	fsr2l,c
 16294  002AA4  0E02               	movlw	high _TxBuffer
 16295  002AA6  20F4               	addwfc	prodh,w,c
 16296  002AA8  6EDA               	movwf	fsr2h,c
 16297  002AAA  0E00               	movlw	0
 16298  002AAC  6EDF               	movwf	indf2,c
 16299                           
 16300                           ; BSR set to: 1
 16301  002AAE  0101               	movlb	1	; () banked
 16302  002AB0  2BC6               	incf	_TxData& (0+255),f,b
 16303                           
 16304                           ; BSR set to: 1
 16305                           ;miwi_mesh.c: 786: TxBuffer[TxData++] = 0x11;
 16306  002AB2  0101               	movlb	1	; () banked
 16307  002AB4  51C6               	movf	_TxData& (0+255),w,b
 16308  002AB6  0D01               	mullw	1
 16309  002AB8  0EA6               	movlw	low _TxBuffer
 16310  002ABA  24F3               	addwf	prodl,w,c
 16311  002ABC  6ED9               	movwf	fsr2l,c
 16312  002ABE  0E02               	movlw	high _TxBuffer
 16313  002AC0  20F4               	addwfc	prodh,w,c
 16314  002AC2  6EDA               	movwf	fsr2h,c
 16315  002AC4  0E11               	movlw	17
 16316  002AC6  6EDF               	movwf	indf2,c
 16317                           
 16318                           ; BSR set to: 1
 16319  002AC8  0101               	movlb	1	; () banked
 16320  002ACA  2BC6               	incf	_TxData& (0+255),f,b
 16321                           
 16322                           ;miwi_mesh.c: 789: for(j=0;j<4;j++)
 16323  002ACC  0E00               	movlw	0
 16324  002ACE  0101               	movlb	1	; () banked
 16325  002AD0  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16326  002AD2                     l18164:
 16327                           
 16328                           ; BSR set to: 1
 16329  002AD2  0E03               	movlw	3
 16330  002AD4  0101               	movlb	1	; () banked
 16331  002AD6  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16332  002AD8  D001               	goto	l18168
 16333  002ADA  D038               	goto	l18176
 16334  002ADC                     l18168:
 16335                           
 16336                           ; BSR set to: 1
 16337                           ;miwi_mesh.c: 790: {
 16338                           ;miwi_mesh.c: 791: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 16339  002ADC  0101               	movlb	1	; () banked
 16340  002ADE  517B               	movf	MiWiTasks@j& (0+255),w,b
 16341  002AE0  0101               	movlb	1	; () banked
 16342  002AE2  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16343  002AE4  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16344  002AE6  0E0D               	movlw	13
 16345  002AE8  0101               	movlb	1	; () banked
 16346  002AEA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16347  002AEC  0E00               	movlw	0
 16348  002AEE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16349  002AF0  0101               	movlb	1	; () banked
 16350  002AF2  514A               	movf	??_MiWiTasks& (0+255),w,b
 16351  002AF4  0101               	movlb	1	; () banked
 16352  002AF6  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16353  002AF8  6ED9               	movwf	fsr2l,c
 16354  002AFA  0101               	movlb	1	; () banked
 16355  002AFC  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16356  002AFE  0101               	movlb	1	; () banked
 16357  002B00  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16358  002B02  6EDA               	movwf	fsr2h,c
 16359  002B04  0101               	movlb	1	; () banked
 16360  002B06  517B               	movf	MiWiTasks@j& (0+255),w,b
 16361  002B08  0D01               	mullw	1
 16362  002B0A  0ED6               	movlw	low (_openSocketInfo+10)
 16363  002B0C  24F3               	addwf	prodl,w,c
 16364  002B0E  6EE1               	movwf	fsr1l,c
 16365  002B10  0E01               	movlw	high (_openSocketInfo+10)
 16366  002B12  20F4               	addwfc	prodh,w,c
 16367  002B14  6EE2               	movwf	fsr1h,c
 16368  002B16  CFDF FFE7          	movff	indf2,indf1
 16369                           
 16370                           ;miwi_mesh.c: 792: TxBuffer[TxData++] = openSocketInfo.LongAddress2[j];
 16371  002B1A  0101               	movlb	1	; () banked
 16372  002B1C  517B               	movf	MiWiTasks@j& (0+255),w,b
 16373  002B1E  0D01               	mullw	1
 16374  002B20  0ED6               	movlw	low (_openSocketInfo+10)
 16375  002B22  24F3               	addwf	prodl,w,c
 16376  002B24  6ED9               	movwf	fsr2l,c
 16377  002B26  0E01               	movlw	high (_openSocketInfo+10)
 16378  002B28  20F4               	addwfc	prodh,w,c
 16379  002B2A  6EDA               	movwf	fsr2h,c
 16380  002B2C  0101               	movlb	1	; () banked
 16381  002B2E  51C6               	movf	_TxData& (0+255),w,b
 16382  002B30  0D01               	mullw	1
 16383  002B32  0EA6               	movlw	low _TxBuffer
 16384  002B34  24F3               	addwf	prodl,w,c
 16385  002B36  6EE1               	movwf	fsr1l,c
 16386  002B38  0E02               	movlw	high _TxBuffer
 16387  002B3A  20F4               	addwfc	prodh,w,c
 16388  002B3C  6EE2               	movwf	fsr1h,c
 16389  002B3E  CFDF FFE7          	movff	indf2,indf1
 16390                           
 16391                           ; BSR set to: 1
 16392  002B42  0101               	movlb	1	; () banked
 16393  002B44  2BC6               	incf	_TxData& (0+255),f,b
 16394                           
 16395                           ; BSR set to: 1
 16396  002B46  0101               	movlb	1	; () banked
 16397  002B48  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16398  002B4A  D7C3               	goto	l18164
 16399  002B4C                     l18176:
 16400                           
 16401                           ; BSR set to: 1
 16402                           ;miwi_mesh.c: 793: }
 16403                           ;miwi_mesh.c: 795: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 16404  002B4C  0101               	movlb	1	; () banked
 16405  002B4E  EE20 F008          	lfsr	2,8
 16406  002B52  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16407  002B54  26D9               	addwf	fsr2l,f,c
 16408  002B56  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16409  002B58  22DA               	addwfc	fsr2h,f,c
 16410  002B5A  50DF               	movf	indf2,w,c
 16411  002B5C  0101               	movlb	1	; () banked
 16412  002B5E  6FD4               	movwf	(_openSocketInfo+8)& (0+255),b
 16413                           
 16414                           ;miwi_mesh.c: 796: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 16415  002B60  0101               	movlb	1	; () banked
 16416  002B62  EE20 F009          	lfsr	2,9
 16417  002B66  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16418  002B68  26D9               	addwf	fsr2l,f,c
 16419  002B6A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16420  002B6C  22DA               	addwfc	fsr2h,f,c
 16421  002B6E  50DF               	movf	indf2,w,c
 16422  002B70  0101               	movlb	1	; () banked
 16423  002B72  6FD5               	movwf	(_openSocketInfo+9)& (0+255),b
 16424                           
 16425                           ; BSR set to: 1
 16426                           ;miwi_mesh.c: 805: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[0];
 16427  002B74  0101               	movlb	1	; () banked
 16428  002B76  51C6               	movf	_TxData& (0+255),w,b
 16429  002B78  0D01               	mullw	1
 16430  002B7A  0EA6               	movlw	low _TxBuffer
 16431  002B7C  24F3               	addwf	prodl,w,c
 16432  002B7E  6ED9               	movwf	fsr2l,c
 16433  002B80  0E02               	movlw	high _TxBuffer
 16434  002B82  20F4               	addwfc	prodh,w,c
 16435  002B84  6EDA               	movwf	fsr2h,c
 16436  002B86  C1D4  FFDF         	movff	_openSocketInfo+8,indf2
 16437                           
 16438                           ; BSR set to: 1
 16439  002B8A  0101               	movlb	1	; () banked
 16440  002B8C  2BC6               	incf	_TxData& (0+255),f,b
 16441                           
 16442                           ; BSR set to: 1
 16443                           ;miwi_mesh.c: 806: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[1];
 16444  002B8E  0101               	movlb	1	; () banked
 16445  002B90  51C6               	movf	_TxData& (0+255),w,b
 16446  002B92  0D01               	mullw	1
 16447  002B94  0EA6               	movlw	low _TxBuffer
 16448  002B96  24F3               	addwf	prodl,w,c
 16449  002B98  6ED9               	movwf	fsr2l,c
 16450  002B9A  0E02               	movlw	high _TxBuffer
 16451  002B9C  20F4               	addwfc	prodh,w,c
 16452  002B9E  6EDA               	movwf	fsr2h,c
 16453  002BA0  C1D5  FFDF         	movff	_openSocketInfo+9,indf2
 16454                           
 16455                           ; BSR set to: 1
 16456  002BA4  0101               	movlb	1	; () banked
 16457  002BA6  2BC6               	incf	_TxData& (0+255),f,b
 16458                           
 16459                           ; BSR set to: 1
 16460                           ;miwi_mesh.c: 816: UnicastShortAddress(openSocketInfo.ShortAddress1.v);
 16461  002BA8  0ECE               	movlw	low (_openSocketInfo+2)
 16462  002BAA  0101               	movlb	1	; () banked
 16463  002BAC  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 16464  002BAE  0E01               	movlw	high (_openSocketInfo+2)
 16465  002BB0  0101               	movlb	1	; () banked
 16466  002BB2  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 16467  002BB4  EC61  F056         	call	_UnicastShortAddress	;wreg free
 16468  002BB8                     l18188:
 16469                           
 16470                           ;miwi_mesh.c: 817: openSocketInfo.status.bits.requestIsOpen = 1;
 16471  002BB8  0101               	movlb	1	; () banked
 16472  002BBA  83CC               	bsf	_openSocketInfo& (0+255),1,b
 16473                           
 16474                           ; BSR set to: 1
 16475                           ;miwi_mesh.c: 818: openSocketInfo.status.bits.matchFound = 1;
 16476  002BBC  0101               	movlb	1	; () banked
 16477  002BBE  81CC               	bsf	_openSocketInfo& (0+255),0,b
 16478                           
 16479                           ; BSR set to: 1
 16480                           ;miwi_mesh.c: 819: }
 16481                           ;miwi_mesh.c: 821: }
 16482                           ;miwi_mesh.c: 822: }
 16483                           ;miwi_mesh.c: 823: break;
 16484                           
 16485                           ; BSR set to: 1
 16486                           
 16487                           ; BSR set to: 1
 16488  002BC0  EF84  F01D         	goto	l641
 16489  002BC4                     l18192:
 16490                           
 16491                           ; BSR set to: 1
 16492                           ;miwi_mesh.c: 827: {
 16493                           ;miwi_mesh.c: 828: uint8_t j;
 16494                           ;miwi_mesh.c: 831: for(j=0;j<4;j++)
 16495  002BC4  0E00               	movlw	0
 16496  002BC6  0101               	movlb	1	; () banked
 16497  002BC8  6F71               	movwf	MiWiTasks@j_2488& (0+255),b
 16498  002BCA                     l18194:
 16499                           
 16500                           ; BSR set to: 1
 16501  002BCA  0E03               	movlw	3
 16502  002BCC  0101               	movlb	1	; () banked
 16503  002BCE  6571               	cpfsgt	MiWiTasks@j_2488& (0+255),b
 16504  002BD0  D001               	goto	l18198
 16505  002BD2  D022               	goto	l18204
 16506  002BD4                     l18198:
 16507                           
 16508                           ; BSR set to: 1
 16509                           ;miwi_mesh.c: 832: {
 16510                           ;miwi_mesh.c: 833: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 16511  002BD4  0101               	movlb	1	; () banked
 16512  002BD6  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 16513  002BD8  0101               	movlb	1	; () banked
 16514  002BDA  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16515  002BDC  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16516  002BDE  0E0D               	movlw	13
 16517  002BE0  0101               	movlb	1	; () banked
 16518  002BE2  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16519  002BE4  0E00               	movlw	0
 16520  002BE6  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16521  002BE8  0101               	movlb	1	; () banked
 16522  002BEA  514A               	movf	??_MiWiTasks& (0+255),w,b
 16523  002BEC  0101               	movlb	1	; () banked
 16524  002BEE  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16525  002BF0  6ED9               	movwf	fsr2l,c
 16526  002BF2  0101               	movlb	1	; () banked
 16527  002BF4  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16528  002BF6  0101               	movlb	1	; () banked
 16529  002BF8  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16530  002BFA  6EDA               	movwf	fsr2h,c
 16531  002BFC  0101               	movlb	1	; () banked
 16532  002BFE  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 16533  002C00  0D01               	mullw	1
 16534  002C02  0EA6               	movlw	low _tempLongAddress
 16535  002C04  24F3               	addwf	prodl,w,c
 16536  002C06  6EE1               	movwf	fsr1l,c
 16537  002C08  0E01               	movlw	high _tempLongAddress
 16538  002C0A  20F4               	addwfc	prodh,w,c
 16539  002C0C  6EE2               	movwf	fsr1h,c
 16540  002C0E  CFDF FFE7          	movff	indf2,indf1
 16541                           
 16542                           ; BSR set to: 1
 16543  002C12  0101               	movlb	1	; () banked
 16544  002C14  2B71               	incf	MiWiTasks@j_2488& (0+255),f,b
 16545  002C16  D7D9               	goto	l18194
 16546  002C18                     l18204:
 16547                           
 16548                           ; BSR set to: 1
 16549                           ;miwi_mesh.c: 834: }
 16550                           ;miwi_mesh.c: 837: tempNodeStatus.Val = 0x8D;
 16551  002C18  0E8D               	movlw	141
 16552  002C1A  0100               	movlb	0	; () banked
 16553  002C1C  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;miwi_mesh.c: 839: if(MACRxPacket.Payload[13+4] & 0x80)
 16557  002C1E  0101               	movlb	1	; () banked
 16558  002C20  EE20 F011          	lfsr	2,17
 16559  002C24  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16560  002C26  26D9               	addwf	fsr2l,f,c
 16561  002C28  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16562  002C2A  22DA               	addwfc	fsr2h,f,c
 16563  002C2C  0101               	movlb	1	; () banked
 16564  002C2E  AEDF               	btfss	indf2,7,c
 16565  002C30  D002               	goto	l18210
 16566                           
 16567                           ; BSR set to: 1
 16568                           ;miwi_mesh.c: 840: {
 16569                           ;miwi_mesh.c: 841: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16570  002C32  0100               	movlb	0	; () banked
 16571  002C34  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16572  002C36                     l18210:
 16573                           
 16574                           ;miwi_mesh.c: 842: }
 16575                           ;miwi_mesh.c: 845: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 16576  002C36  0101               	movlb	1	; () banked
 16577  002C38  EE20 F011          	lfsr	2,17
 16578  002C3C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16579  002C3E  26D9               	addwf	fsr2l,f,c
 16580  002C40  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16581  002C42  22DA               	addwfc	fsr2h,f,c
 16582  002C44  50DF               	movf	indf2,w,c
 16583  002C46  0101               	movlb	1	; () banked
 16584  002C48  6FF4               	movwf	_tempShortAddress& (0+255),b
 16585                           
 16586                           ;miwi_mesh.c: 846: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 16587  002C4A  0101               	movlb	1	; () banked
 16588  002C4C  EE20 F012          	lfsr	2,18
 16589  002C50  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16590  002C52  26D9               	addwf	fsr2l,f,c
 16591  002C54  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16592  002C56  22DA               	addwfc	fsr2h,f,c
 16593  002C58  50DF               	movf	indf2,w,c
 16594  002C5A  0101               	movlb	1	; () banked
 16595  002C5C  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 16596                           
 16597                           ; BSR set to: 1
 16598                           ;miwi_mesh.c: 849: tempPANID.Val = myPANID.Val;
 16599  002C5E  C1F0  F1BB         	movff	_myPANID,_tempPANID
 16600  002C62  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 16601                           
 16602                           ; BSR set to: 1
 16603                           ;miwi_mesh.c: 852: openSocketInfo.socketHandle = SearchForShortAddress();
 16604  002C66  EC85  F057         	call	_SearchForShortAddress	;wreg free
 16605  002C6A  0101               	movlb	1	; () banked
 16606  002C6C  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16607                           
 16608                           ; BSR set to: 1
 16609                           ;miwi_mesh.c: 854: if(openSocketInfo.socketHandle != 0xFF)
 16610  002C6E  0101               	movlb	1	; () banked
 16611  002C70  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16612  002C72  B4D8               	btfsc	status,2,c
 16613  002C74  D015               	goto	l18224
 16614                           
 16615                           ; BSR set to: 1
 16616                           ;miwi_mesh.c: 855: {
 16617                           ;miwi_mesh.c: 857: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 16618  002C76  0101               	movlb	1	; () banked
 16619  002C78  51CD               	movf	(_openSocketInfo+1)& (0+255),w,b
 16620  002C7A  0D09               	mullw	9
 16621  002C7C  0E08               	movlw	8
 16622  002C7E  26F3               	addwf	prodl,f,c
 16623  002C80  0E00               	movlw	0
 16624  002C82  22F4               	addwfc	prodh,f,c
 16625  002C84  0E00               	movlw	low _ConnectionTable
 16626  002C86  24F3               	addwf	prodl,w,c
 16627  002C88  6ED9               	movwf	fsr2l,c
 16628  002C8A  0E06               	movlw	high _ConnectionTable
 16629  002C8C  20F4               	addwfc	prodh,w,c
 16630  002C8E  6EDA               	movwf	fsr2h,c
 16631  002C90  50DF               	movf	indf2,w,c
 16632  002C92  0100               	movlb	0	; () banked
 16633  002C94  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;miwi_mesh.c: 858: tempNodeStatus.bits.longAddressValid = 1;
 16637  002C96  0100               	movlb	0	; () banked
 16638  002C98  85A0               	bsf	_tempNodeStatus& (0+255),2,b
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;miwi_mesh.c: 859: tempNodeStatus.bits.shortAddressValid = 1;
 16642  002C9A  0100               	movlb	0	; () banked
 16643  002C9C  87A0               	bsf	_tempNodeStatus& (0+255),3,b
 16644                           
 16645                           ;miwi_mesh.c: 860: }
 16646  002C9E  D008               	goto	l18230
 16647  002CA0                     l18224:
 16648                           
 16649                           ;miwi_mesh.c: 861: else
 16650                           ;miwi_mesh.c: 862: {
 16651                           ;miwi_mesh.c: 864: tempNodeStatus.Val = 0x8D;
 16652  002CA0  0E8D               	movlw	141
 16653  002CA2  0100               	movlb	0	; () banked
 16654  002CA4  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16655                           
 16656                           ; BSR set to: 0
 16657                           ;miwi_mesh.c: 865: if(tempShortAddress.v[0] & 0x80)
 16658  002CA6  0101               	movlb	1	; () banked
 16659  002CA8  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 16660  002CAA  D002               	goto	l18230
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;miwi_mesh.c: 866: {
 16664                           ;miwi_mesh.c: 867: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16665  002CAC  0100               	movlb	0	; () banked
 16666  002CAE  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16667  002CB0                     l18230:
 16668                           
 16669                           ;miwi_mesh.c: 868: }
 16670                           ;miwi_mesh.c: 869: }
 16671                           ;miwi_mesh.c: 871: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 16672  002CB0  EC14  F046         	call	_AddNodeToNetworkTable	;wreg free
 16673  002CB4  0101               	movlb	1	; () banked
 16674  002CB6  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16675                           
 16676                           ; BSR set to: 1
 16677                           ;miwi_mesh.c: 872: if( openSocketInfo.socketHandle < 0xFF )
 16678  002CB8  0101               	movlb	1	; () banked
 16679  002CBA  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16680  002CBC  B4D8               	btfsc	status,2,c
 16681  002CBE  D003               	goto	l691
 16682                           
 16683                           ; BSR set to: 1
 16684                           ;miwi_mesh.c: 873: {
 16685                           ;miwi_mesh.c: 883: openSocketInfo.status.bits.matchFound = 1;
 16686  002CC0  0101               	movlb	1	; () banked
 16687  002CC2  81CC               	bsf	_openSocketInfo& (0+255),0,b
 16688                           
 16689                           ;miwi_mesh.c: 884: }
 16690  002CC4  D002               	goto	l692
 16691  002CC6                     l691:
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;miwi_mesh.c: 885: else
 16695                           ;miwi_mesh.c: 886: {
 16696                           ;miwi_mesh.c: 887: openSocketInfo.status.bits.matchFound = 0;
 16697  002CC6  0101               	movlb	1	; () banked
 16698  002CC8  91CC               	bcf	_openSocketInfo& (0+255),0,b
 16699  002CCA                     l692:
 16700                           
 16701                           ; BSR set to: 1
 16702                           ;miwi_mesh.c: 888: }
 16703                           ;miwi_mesh.c: 891: openSocketInfo.status.bits.requestIsOpen = 0;
 16704  002CCA  0101               	movlb	1	; () banked
 16705  002CCC  93CC               	bcf	_openSocketInfo& (0+255),1,b
 16706                           
 16707                           ; BSR set to: 1
 16708                           ;miwi_mesh.c: 969: }
 16709                           
 16710                           ; BSR set to: 1
 16711                           ;miwi_mesh.c: 968: break;
 16712                           
 16713                           ;miwi_mesh.c: 965: default:
 16714                           
 16715                           ;miwi_mesh.c: 893: }
 16716                           ;miwi_mesh.c: 894: break;
 16717  002CCE  EF84  F01D         	goto	l641
 16718  002CD2                     l18238:
 16719                           
 16720                           ; BSR set to: 1
 16721  002CD2  0101               	movlb	1	; () banked
 16722  002CD4  EE20 F00C          	lfsr	2,12
 16723  002CD8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16724  002CDA  26D9               	addwf	fsr2l,f,c
 16725  002CDC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16726  002CDE  22DA               	addwfc	fsr2h,f,c
 16727  002CE0  50DF               	movf	indf2,w,c
 16728                           
 16729                           ; Switch size 1, requested type "space"
 16730                           ; Number of cases is 2, Range of values is 16 to 17
 16731                           ; switch strategies available:
 16732                           ; Name         Instructions Cycles
 16733                           ; simple_byte            7     4 (average)
 16734                           ;	Chosen strategy is simple_byte
 16735  002CE2  0A10               	xorlw	16	; case 16
 16736  002CE4  B4D8               	btfsc	status,2,c
 16737  002CE6  D5F6               	goto	l667
 16738  002CE8  0A01               	xorlw	1	; case 17
 16739  002CEA  B4D8               	btfsc	status,2,c
 16740  002CEC  D76B               	goto	l18192
 16741                           
 16742                           ; BSR set to: 1
 16743                           ;miwi_mesh.c: 970: }
 16744  002CEE  EF84  F01D         	goto	l641
 16745  002CF2                     l18240:
 16746                           
 16747                           ; BSR set to: 1
 16748                           ;miwi_mesh.c: 971: else
 16749                           ;miwi_mesh.c: 972: {
 16750                           ;miwi_mesh.c: 974: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 16751                           ;miwi_mesh.c: 975: sourceShortAddress.Val == AcknowledgementAddr.Val)
 16752  002CF2  0101               	movlb	1	; () banked
 16753  002CF4  EE20 F00A          	lfsr	2,10
 16754  002CF8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16755  002CFA  26D9               	addwf	fsr2l,f,c
 16756  002CFC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16757  002CFE  22DA               	addwfc	fsr2h,f,c
 16758  002D00  0101               	movlb	1	; () banked
 16759  002D02  51F8               	movf	_AcknowledgementSeq& (0+255),w,b
 16760  002D04  18DE               	xorwf	postinc2,w,c
 16761  002D06  A4D8               	btfss	status,2,c
 16762  002D08  EF84  F01D         	goto	l641
 16763                           
 16764                           ; BSR set to: 1
 16765  002D0C  0101               	movlb	1	; () banked
 16766  002D0E  51B3               	movf	_AcknowledgementAddr& (0+255),w,b
 16767  002D10  0101               	movlb	1	; () banked
 16768  002D12  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16769  002D14  E105               	bnz	u20401
 16770  002D16  0101               	movlb	1	; () banked
 16771  002D18  51B4               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 16772  002D1A  0101               	movlb	1	; () banked
 16773  002D1C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16774  002D1E  A4D8               	btfss	status,2,c
 16775  002D20                     u20401:
 16776  002D20  EF84  F01D         	goto	l641
 16777                           
 16778                           ; BSR set to: 1
 16779                           ;miwi_mesh.c: 976: {
 16780                           ;miwi_mesh.c: 977: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 16781  002D24  0101               	movlb	1	; () banked
 16782  002D26  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 16783                           
 16784                           ; BSR set to: 1
 16785                           ;miwi_mesh.c: 981: }
 16786                           ;miwi_mesh.c: 982: }
 16787                           
 16788                           ; BSR set to: 1
 16789                           ;miwi_mesh.c: 978: }
 16790                           ;miwi_mesh.c: 980: break;
 16791  002D28  EF84  F01D         	goto	l641
 16792  002D2C                     l18246:
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;miwi_mesh.c: 983: else
 16796                           ;miwi_mesh.c: 984: {
 16797                           ;miwi_mesh.c: 989: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 16798  002D2C  0101               	movlb	1	; () banked
 16799  002D2E  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 16800  002D30  0FF5               	addlw	245
 16801  002D32  0101               	movlb	1	; () banked
 16802  002D34  6F97               	movwf	(_rxMessage+7)& (0+255),b
 16803                           
 16804                           ;miwi_mesh.c: 990: rxMessage.Payload = &MACRxPacket.Payload[11];
 16805  002D36  0E0B               	movlw	11
 16806  002D38  0101               	movlb	1	; () banked
 16807  002D3A  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16808  002D3C  0101               	movlb	1	; () banked
 16809  002D3E  6F95               	movwf	(_rxMessage+5)& (0+255),b
 16810  002D40  0E00               	movlw	0
 16811  002D42  0101               	movlb	1	; () banked
 16812  002D44  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16813  002D46  0101               	movlb	1	; () banked
 16814  002D48  6F96               	movwf	(_rxMessage+6)& (0+255),b
 16815                           
 16816                           ; BSR set to: 1
 16817                           ;miwi_mesh.c: 991: rxMessage.SourcePANID.Val = sourcePANID.Val;
 16818  002D4A  C175  F191         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 16819  002D4E  C176  F192         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 16820                           
 16821                           ; BSR set to: 1
 16822                           ;miwi_mesh.c: 992: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 16823  002D52  0101               	movlb	1	; () banked
 16824  002D54  EE20 F008          	lfsr	2,8
 16825  002D58  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16826  002D5A  26D9               	addwf	fsr2l,f,c
 16827  002D5C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16828  002D5E  22DA               	addwfc	fsr2h,f,c
 16829  002D60  28DE               	incf	postinc2,w,c
 16830  002D62  A4D8               	btfss	status,2,c
 16831  002D64  D012               	goto	l697
 16832                           
 16833                           ; BSR set to: 1
 16834  002D66  0101               	movlb	1	; () banked
 16835  002D68  EE20 F009          	lfsr	2,9
 16836  002D6C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16837  002D6E  26D9               	addwf	fsr2l,f,c
 16838  002D70  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16839  002D72  22DA               	addwfc	fsr2h,f,c
 16840  002D74  28DE               	incf	postinc2,w,c
 16841  002D76  A4D8               	btfss	status,2,c
 16842  002D78  D008               	goto	l697
 16843                           
 16844                           ; BSR set to: 1
 16845                           ;miwi_mesh.c: 993: {
 16846                           ;miwi_mesh.c: 998: if( MACRxPacket.flags.bits.sourcePrsnt )
 16847  002D7A  0101               	movlb	1	; () banked
 16848  002D7C  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 16849  002D7E  D005               	goto	l697
 16850                           
 16851                           ; BSR set to: 1
 16852                           ;miwi_mesh.c: 999: {
 16853                           ;miwi_mesh.c: 1000: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16854  002D80  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 16855  002D84  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 16856                           
 16857                           ;miwi_mesh.c: 1001: }
 16858  002D88  D00C               	goto	l18262
 16859  002D8A                     l697:
 16860                           
 16861                           ; BSR set to: 1
 16862                           ;miwi_mesh.c: 1010: else
 16863                           ;miwi_mesh.c: 1011: {
 16864                           ;miwi_mesh.c: 1012: rxMessage.flags.bits.altSrcAddr = 1;
 16865  002D8A  0101               	movlb	1	; () banked
 16866  002D8C  8F90               	bsf	_rxMessage& (0+255),7,b
 16867                           
 16868                           ; BSR set to: 1
 16869                           ;miwi_mesh.c: 1013: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 16870  002D8E  0E08               	movlw	8
 16871  002D90  0101               	movlb	1	; () banked
 16872  002D92  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16873  002D94  0101               	movlb	1	; () banked
 16874  002D96  6F93               	movwf	(_rxMessage+3)& (0+255),b
 16875  002D98  0E00               	movlw	0
 16876  002D9A  0101               	movlb	1	; () banked
 16877  002D9C  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16878  002D9E  0101               	movlb	1	; () banked
 16879  002DA0  6F94               	movwf	(_rxMessage+4)& (0+255),b
 16880  002DA2                     l18262:
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;miwi_mesh.c: 1014: }
 16884                           ;miwi_mesh.c: 1015: rxMessage.flags.bits.srcPrsnt = 1;
 16885  002DA2  0101               	movlb	1	; () banked
 16886  002DA4  8D90               	bsf	_rxMessage& (0+255),6,b
 16887                           
 16888                           ; BSR set to: 1
 16889                           ;miwi_mesh.c: 1017: if( rxMessage.PayloadSize > 0 )
 16890  002DA6  0101               	movlb	1	; () banked
 16891  002DA8  5197               	movf	(_rxMessage+7)& (0+255),w,b
 16892  002DAA  B4D8               	btfsc	status,2,c
 16893  002DAC  EF84  F01D         	goto	l641
 16894                           
 16895                           ; BSR set to: 1
 16896                           ;miwi_mesh.c: 1018: {
 16897                           ;miwi_mesh.c: 1019: MiWiStateMachine.bits.RxHasUserData = 1;
 16898  002DB0  0101               	movlb	1	; () banked
 16899  002DB2  85B5               	bsf	_MiWiStateMachine& (0+255),2,b
 16900                           
 16901                           ; BSR set to: 1
 16902                           ;miwi_mesh.c: 1020: }
 16903                           ;miwi_mesh.c: 1022: }
 16904                           ;miwi_mesh.c: 1023: }
 16905                           
 16906                           ; BSR set to: 1
 16907  002DB4  EF84  F01D         	goto	l641
 16908  002DB8                     l18268:
 16909                           
 16910                           ; BSR set to: 1
 16911                           ;miwi_mesh.c: 1024: else
 16912                           ;miwi_mesh.c: 1025: {
 16913                           ;miwi_mesh.c: 1030: if( MACRxPacket.Payload[0] > 0 )
 16914  002DB8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 16915  002DBC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 16916  002DC0  50DF               	movf	indf2,w,c
 16917  002DC2  B4D8               	btfsc	status,2,c
 16918  002DC4  EF84  F01D         	goto	l641
 16919                           
 16920                           ; BSR set to: 1
 16921                           ;miwi_mesh.c: 1031: {
 16922                           ;miwi_mesh.c: 1032: MACRxPacket.Payload[0]--;
 16923  002DC8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 16924  002DCC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 16925  002DD0  06DF               	decf	indf2,f,c
 16926                           
 16927                           ; BSR set to: 1
 16928                           ;miwi_mesh.c: 1033: {TxData = 0;};
 16929  002DD2  0E00               	movlw	0
 16930  002DD4  0101               	movlb	1	; () banked
 16931  002DD6  6FC6               	movwf	_TxData& (0+255),b
 16932                           
 16933                           ; BSR set to: 1
 16934                           ;miwi_mesh.c: 1034: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 16935  002DD8  0E00               	movlw	0
 16936  002DDA  0101               	movlb	1	; () banked
 16937  002DDC  6F7C               	movwf	MiWiTasks@i& (0+255),b
 16938  002DDE  D01A               	goto	l18282
 16939  002DE0                     l18276:
 16940                           
 16941                           ; BSR set to: 1
 16942                           ;miwi_mesh.c: 1035: {
 16943                           ;miwi_mesh.c: 1036: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 16944  002DE0  0101               	movlb	1	; () banked
 16945  002DE2  517C               	movf	MiWiTasks@i& (0+255),w,b
 16946  002DE4  0D01               	mullw	1
 16947  002DE6  50F3               	movf	prodl,w,c
 16948  002DE8  0101               	movlb	1	; () banked
 16949  002DEA  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16950  002DEC  6ED9               	movwf	fsr2l,c
 16951  002DEE  50F4               	movf	prodh,w,c
 16952  002DF0  0101               	movlb	1	; () banked
 16953  002DF2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16954  002DF4  6EDA               	movwf	fsr2h,c
 16955  002DF6  0101               	movlb	1	; () banked
 16956  002DF8  51C6               	movf	_TxData& (0+255),w,b
 16957  002DFA  0D01               	mullw	1
 16958  002DFC  0EA6               	movlw	low _TxBuffer
 16959  002DFE  24F3               	addwf	prodl,w,c
 16960  002E00  6EE1               	movwf	fsr1l,c
 16961  002E02  0E02               	movlw	high _TxBuffer
 16962  002E04  20F4               	addwfc	prodh,w,c
 16963  002E06  6EE2               	movwf	fsr1h,c
 16964  002E08  CFDF FFE7          	movff	indf2,indf1
 16965                           
 16966                           ; BSR set to: 1
 16967  002E0C  0101               	movlb	1	; () banked
 16968  002E0E  2BC6               	incf	_TxData& (0+255),f,b
 16969                           
 16970                           ; BSR set to: 1
 16971  002E10  0101               	movlb	1	; () banked
 16972  002E12  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 16973  002E14                     l18282:
 16974                           
 16975                           ; BSR set to: 1
 16976  002E14  0101               	movlb	1	; () banked
 16977  002E16  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 16978  002E18  0101               	movlb	1	; () banked
 16979  002E1A  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 16980  002E1C  A0D8               	btfss	status,0,c
 16981  002E1E  D7E0               	goto	l18276
 16982                           
 16983                           ; BSR set to: 1
 16984                           ;miwi_mesh.c: 1037: }
 16985                           ;miwi_mesh.c: 1039: if( (destShortAddress.v[1] == myShortAddress.v[1]) &&
 16986                           ;miwi_mesh.c: 1040: (TxBuffer[11] == 0x00) &&
 16987                           ;miwi_mesh.c: 1041: (TxBuffer[12] == 0x30) )
 16988                           
 16989                           ; BSR set to: 1
 16990  002E20  0101               	movlb	1	; () banked
 16991  002E22  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 16992  002E24  0101               	movlb	1	; () banked
 16993  002E26  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 16994  002E28  A4D8               	btfss	status,2,c
 16995  002E2A  D03C               	goto	l18302
 16996                           
 16997                           ; BSR set to: 1
 16998  002E2C  0102               	movlb	2	; () banked
 16999  002E2E  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 17000  002E30  A4D8               	btfss	status,2,c
 17001  002E32  D038               	goto	l18302
 17002                           
 17003                           ; BSR set to: 2
 17004  002E34  0E30               	movlw	48
 17005  002E36  0102               	movlb	2	; () banked
 17006  002E38  19B2               	xorwf	(_TxBuffer+12)& (0+255),w,b
 17007  002E3A  A4D8               	btfss	status,2,c
 17008  002E3C  D033               	goto	l18302
 17009                           
 17010                           ; BSR set to: 2
 17011                           ;miwi_mesh.c: 1042: {
 17012                           ;miwi_mesh.c: 1043: MTP.flags.Val = 0;
 17013  002E3E  0E00               	movlw	0
 17014  002E40  0101               	movlb	1	; () banked
 17015  002E42  6FAD               	movwf	_MTP& (0+255),b
 17016                           
 17017                           ; BSR set to: 1
 17018                           ;miwi_mesh.c: 1044: MTP.flags.bits.ackReq = 1;
 17019  002E44  0101               	movlb	1	; () banked
 17020  002E46  8BAD               	bsf	_MTP& (0+255),5,b
 17021                           
 17022                           ; BSR set to: 1
 17023                           ;miwi_mesh.c: 1053: tempShortAddress.Val = destShortAddress.Val;
 17024  002E48  C173  F1F4         	movff	MiWiTasks@destShortAddress,_tempShortAddress
 17025  002E4C  C174  F1F5         	movff	MiWiTasks@destShortAddress+1,_tempShortAddress+1
 17026                           
 17027                           ; BSR set to: 1
 17028                           ;miwi_mesh.c: 1054: if( (i = SearchForShortAddress()) != 0xFF )
 17029  002E50  EC85  F057         	call	_SearchForShortAddress	;wreg free
 17030  002E54  0101               	movlb	1	; () banked
 17031  002E56  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17032  002E58  0101               	movlb	1	; () banked
 17033  002E5A  297C               	incf	MiWiTasks@i& (0+255),w,b
 17034  002E5C  B4D8               	btfsc	status,2,c
 17035  002E5E  EF84  F01D         	goto	l641
 17036                           
 17037                           ; BSR set to: 1
 17038                           ;miwi_mesh.c: 1055: {
 17039                           ;miwi_mesh.c: 1056: MTP.DestAddress = ConnectionTable[i].Address;
 17040  002E62  0101               	movlb	1	; () banked
 17041  002E64  517C               	movf	MiWiTasks@i& (0+255),w,b
 17042  002E66  0D09               	mullw	9
 17043  002E68  0E04               	movlw	4
 17044  002E6A  26F3               	addwf	prodl,f,c
 17045  002E6C  0E00               	movlw	0
 17046  002E6E  22F4               	addwfc	prodh,f,c
 17047  002E70  0E00               	movlw	low _ConnectionTable
 17048  002E72  24F3               	addwf	prodl,w,c
 17049  002E74  0101               	movlb	1	; () banked
 17050  002E76  6FAE               	movwf	(_MTP+1)& (0+255),b
 17051  002E78  0E06               	movlw	high _ConnectionTable
 17052  002E7A  20F4               	addwfc	prodh,w,c
 17053  002E7C  0101               	movlb	1	; () banked
 17054  002E7E  6FAF               	movwf	(_MTP+2)& (0+255),b
 17055                           
 17056                           ; BSR set to: 1
 17057                           ;miwi_mesh.c: 1057: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17058  002E80  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 17059  002E84  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17060  002E88  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17061  002E8C  0EA6               	movlw	low _TxBuffer
 17062  002E8E  0101               	movlb	1	; () banked
 17063  002E90  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17064  002E92  0E02               	movlw	high _TxBuffer
 17065  002E94  0101               	movlb	1	; () banked
 17066  002E96  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17067  002E98  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17068  002E9C  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 17069                           
 17070                           ;miwi_mesh.c: 1058: }
 17071                           ;miwi_mesh.c: 1060: }
 17072  002EA0  EF84  F01D         	goto	l641
 17073  002EA4                     l18302:
 17074                           
 17075                           ;miwi_mesh.c: 1061: else
 17076                           ;miwi_mesh.c: 1062: {
 17077                           ;miwi_mesh.c: 1063: RouteMessage(destPANID, destShortAddress, MACRxPacket.flags.bits.sec
      +                          En);
 17078  002EA4  C16D  F13D         	movff	MiWiTasks@destPANID,RouteMessage@PANID
 17079  002EA8  C16E  F13E         	movff	MiWiTasks@destPANID+1,RouteMessage@PANID+1
 17080  002EAC  C173  F13F         	movff	MiWiTasks@destShortAddress,RouteMessage@ShortAddress
 17081  002EB0  C174  F140         	movff	MiWiTasks@destShortAddress+1,RouteMessage@ShortAddress+1
 17082  002EB4  0E00               	movlw	0
 17083  002EB6  B79A               	btfsc	_MACRxPacket& (0+255),3,b
 17084  002EB8  0E01               	movlw	1
 17085  002EBA  0101               	movlb	1	; () banked
 17086  002EBC  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 17087  002EBE  EC07  F024         	call	_RouteMessage	;wreg free
 17088                           
 17089                           ;miwi_mesh.c: 1064: }
 17090                           ;miwi_mesh.c: 1065: }
 17091                           ;miwi_mesh.c: 1067: }
 17092                           ;miwi_mesh.c: 1069: }
 17093                           ;miwi_mesh.c: 1070: break;
 17094  002EC2  EF84  F01D         	goto	l641
 17095  002EC6                     l18304:
 17096                           
 17097                           ;miwi_mesh.c: 1074: {
 17098                           ;miwi_mesh.c: 1075: uint8_t rxIndex;
 17099                           ;miwi_mesh.c: 1080: rxIndex = 4;
 17100  002EC6  0E04               	movlw	4
 17101  002EC8  0101               	movlb	1	; () banked
 17102  002ECA  6F6F               	movwf	MiWiTasks@rxIndex& (0+255),b
 17103                           
 17104                           ; BSR set to: 1
 17105                           ;miwi_mesh.c: 1084: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 17106  002ECC  0101               	movlb	1	; () banked
 17107  002ECE  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17108  002ED0  0101               	movlb	1	; () banked
 17109  002ED2  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17110  002ED4  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17111  002ED6  0E04               	movlw	4
 17112  002ED8  0101               	movlb	1	; () banked
 17113  002EDA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17114  002EDC  0E00               	movlw	0
 17115  002EDE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17116  002EE0  0101               	movlb	1	; () banked
 17117  002EE2  514A               	movf	??_MiWiTasks& (0+255),w,b
 17118  002EE4  0101               	movlb	1	; () banked
 17119  002EE6  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17120  002EE8  6ED9               	movwf	fsr2l,c
 17121  002EEA  0101               	movlb	1	; () banked
 17122  002EEC  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17123  002EEE  0101               	movlb	1	; () banked
 17124  002EF0  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17125  002EF2  6EDA               	movwf	fsr2h,c
 17126  002EF4  0E4D               	movlw	77
 17127  002EF6  18DE               	xorwf	postinc2,w,c
 17128  002EF8  A4D8               	btfss	status,2,c
 17129  002EFA  EF84  F01D         	goto	l641
 17130                           
 17131                           ; BSR set to: 1
 17132                           ;miwi_mesh.c: 1091: }
 17133                           ;miwi_mesh.c: 1092: }
 17134                           ;miwi_mesh.c: 1095: {
 17135                           ;miwi_mesh.c: 1101: uint8_t coordinatorNumber = MACRxPacket.Payload[3];
 17136                           
 17137                           ; BSR set to: 1
 17138                           
 17139                           ; BSR set to: 1
 17140                           ;miwi_mesh.c: 1085: {
 17141                           ;miwi_mesh.c: 1089: {
 17142                           ;miwi_mesh.c: 1090: break;
 17143  002EFE  0101               	movlb	1	; () banked
 17144  002F00  EE20 F003          	lfsr	2,3
 17145  002F04  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17146  002F06  26D9               	addwf	fsr2l,f,c
 17147  002F08  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17148  002F0A  22DA               	addwfc	fsr2h,f,c
 17149  002F0C  50DF               	movf	indf2,w,c
 17150  002F0E  0101               	movlb	1	; () banked
 17151  002F10  6F68               	movwf	MiWiTasks@coordinatorNumber& (0+255),b
 17152                           
 17153                           ; BSR set to: 1
 17154                           ;miwi_mesh.c: 1103: uint8_t mask = 1<<(coordinatorNumber);
 17155  002F12  C168  F14A         	movff	MiWiTasks@coordinatorNumber,??_MiWiTasks
 17156  002F16  0E01               	movlw	1
 17157  002F18  0101               	movlb	1	; () banked
 17158  002F1A  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17159  002F1C  0101               	movlb	1	; () banked
 17160  002F1E  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 17161  002F20  D003               	goto	u20524
 17162  002F22                     u20525:
 17163  002F22  0101               	movlb	1	; () banked
 17164  002F24  90D8               	bcf	status,0,c
 17165  002F26  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 17166  002F28                     u20524:
 17167  002F28  0101               	movlb	1	; () banked
 17168  002F2A  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 17169  002F2C  D7FA               	goto	u20525
 17170  002F2E  0101               	movlb	1	; () banked
 17171  002F30  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17172  002F32  0101               	movlb	1	; () banked
 17173  002F34  6F60               	movwf	MiWiTasks@mask& (0+255),b
 17174                           
 17175                           ; BSR set to: 1
 17176                           ;miwi_mesh.c: 1109: if(MACRxPacket.Payload[2] == 0x00)
 17177  002F36  0101               	movlb	1	; () banked
 17178  002F38  EE20 F002          	lfsr	2,2
 17179  002F3C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17180  002F3E  26D9               	addwf	fsr2l,f,c
 17181  002F40  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17182  002F42  22DA               	addwfc	fsr2h,f,c
 17183  002F44  50DF               	movf	indf2,w,c
 17184  002F46  A4D8               	btfss	status,2,c
 17185  002F48  D004               	goto	l18318
 17186                           
 17187                           ; BSR set to: 1
 17188                           ;miwi_mesh.c: 1111: {
 17189                           ;miwi_mesh.c: 1113: knownCoordinators |= mask;
 17190  002F4A  0101               	movlb	1	; () banked
 17191  002F4C  5160               	movf	MiWiTasks@mask& (0+255),w,b
 17192  002F4E  0101               	movlb	1	; () banked
 17193  002F50  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 17194  002F52                     l18318:
 17195                           
 17196                           ; BSR set to: 1
 17197                           ;miwi_mesh.c: 1114: }
 17198                           ;miwi_mesh.c: 1116: RoutingTable[coordinatorNumber] = MACRxPacket.Payload[rxIndex+6];
 17199  002F52  0101               	movlb	1	; () banked
 17200  002F54  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17201  002F56  0101               	movlb	1	; () banked
 17202  002F58  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17203  002F5A  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17204  002F5C  0E06               	movlw	6
 17205  002F5E  0101               	movlb	1	; () banked
 17206  002F60  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17207  002F62  0E00               	movlw	0
 17208  002F64  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17209  002F66  0101               	movlb	1	; () banked
 17210  002F68  514A               	movf	??_MiWiTasks& (0+255),w,b
 17211  002F6A  0101               	movlb	1	; () banked
 17212  002F6C  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17213  002F6E  6ED9               	movwf	fsr2l,c
 17214  002F70  0101               	movlb	1	; () banked
 17215  002F72  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17216  002F74  0101               	movlb	1	; () banked
 17217  002F76  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17218  002F78  6EDA               	movwf	fsr2h,c
 17219  002F7A  0101               	movlb	1	; () banked
 17220  002F7C  5168               	movf	MiWiTasks@coordinatorNumber& (0+255),w,b
 17221  002F7E  0D01               	mullw	1
 17222  002F80  0E71               	movlw	low _RoutingTable
 17223  002F82  24F3               	addwf	prodl,w,c
 17224  002F84  6EE1               	movwf	fsr1l,c
 17225  002F86  0E00               	movlw	high _RoutingTable
 17226  002F88  20F4               	addwfc	prodh,w,c
 17227  002F8A  6EE2               	movwf	fsr1h,c
 17228  002F8C  CFDF FFE7          	movff	indf2,indf1
 17229                           
 17230                           ; BSR set to: 1
 17231                           ;miwi_mesh.c: 1120: }
 17232                           ;miwi_mesh.c: 1124: {
 17233                           ;miwi_mesh.c: 1125: uint8_t entry;
 17234                           ;miwi_mesh.c: 1127: tempPANID.v[0] = MACRxPacket.Payload[0];
 17235  002F90  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17236  002F94  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17237  002F98  50DF               	movf	indf2,w,c
 17238  002F9A  0101               	movlb	1	; () banked
 17239  002F9C  6FBB               	movwf	_tempPANID& (0+255),b
 17240                           
 17241                           ; BSR set to: 1
 17242                           ;miwi_mesh.c: 1128: tempPANID.v[1] = MACRxPacket.Payload[1];
 17243  002F9E  0101               	movlb	1	; () banked
 17244  002FA0  EE20 F001          	lfsr	2,1
 17245  002FA4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17246  002FA6  26D9               	addwf	fsr2l,f,c
 17247  002FA8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17248  002FAA  22DA               	addwfc	fsr2h,f,c
 17249  002FAC  50DF               	movf	indf2,w,c
 17250  002FAE  0101               	movlb	1	; () banked
 17251  002FB0  6FBC               	movwf	(_tempPANID+1)& (0+255),b
 17252                           
 17253                           ; BSR set to: 1
 17254                           ;miwi_mesh.c: 1129: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17255  002FB2  0101               	movlb	1	; () banked
 17256  002FB4  EE20 F002          	lfsr	2,2
 17257  002FB8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17258  002FBA  26D9               	addwf	fsr2l,f,c
 17259  002FBC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17260  002FBE  22DA               	addwfc	fsr2h,f,c
 17261  002FC0  50DF               	movf	indf2,w,c
 17262  002FC2  0101               	movlb	1	; () banked
 17263  002FC4  6FF4               	movwf	_tempShortAddress& (0+255),b
 17264                           
 17265                           ; BSR set to: 1
 17266                           ;miwi_mesh.c: 1130: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17267  002FC6  0101               	movlb	1	; () banked
 17268  002FC8  EE20 F003          	lfsr	2,3
 17269  002FCC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17270  002FCE  26D9               	addwf	fsr2l,f,c
 17271  002FD0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17272  002FD2  22DA               	addwfc	fsr2h,f,c
 17273  002FD4  50DF               	movf	indf2,w,c
 17274  002FD6  0101               	movlb	1	; () banked
 17275  002FD8  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17276                           
 17277                           ; BSR set to: 1
 17278                           ;miwi_mesh.c: 1132: entry = SearchForShortAddress();
 17279  002FDA  EC85  F057         	call	_SearchForShortAddress	;wreg free
 17280  002FDE  0101               	movlb	1	; () banked
 17281  002FE0  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 17282                           
 17283                           ; BSR set to: 1
 17284                           ;miwi_mesh.c: 1133: if(entry == 0xFF)
 17285  002FE2  0101               	movlb	1	; () banked
 17286  002FE4  297A               	incf	MiWiTasks@entry& (0+255),w,b
 17287  002FE6  A4D8               	btfss	status,2,c
 17288  002FE8  D005               	goto	l18334
 17289                           
 17290                           ; BSR set to: 1
 17291                           ;miwi_mesh.c: 1134: {
 17292                           ;miwi_mesh.c: 1137: entry = findNextNetworkEntry();
 17293  002FEA  ECD1  F05B         	call	_findNextNetworkEntry	;wreg free
 17294  002FEE  0101               	movlb	1	; () banked
 17295  002FF0  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 17296                           
 17297                           ;miwi_mesh.c: 1138: }
 17298  002FF2  D03E               	goto	l18352
 17299  002FF4                     l18334:
 17300                           
 17301                           ; BSR set to: 1
 17302                           ;miwi_mesh.c: 1139: else
 17303                           ;miwi_mesh.c: 1140: {
 17304                           ;miwi_mesh.c: 1141: for(i = 0; i < 4; i++)
 17305  002FF4  0E00               	movlw	0
 17306  002FF6  0101               	movlb	1	; () banked
 17307  002FF8  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17308  002FFA                     l18336:
 17309                           
 17310                           ; BSR set to: 1
 17311  002FFA  0E03               	movlw	3
 17312  002FFC  0101               	movlb	1	; () banked
 17313  002FFE  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17314  003000  D001               	goto	l18340
 17315  003002  D030               	goto	l18348
 17316  003004                     l18340:
 17317                           
 17318                           ; BSR set to: 1
 17319                           ;miwi_mesh.c: 1142: {
 17320                           ;miwi_mesh.c: 1143: if( ConnectionTable[entry].Address[i] != MACRxPacket.SourceAddress[i
      +                          ] )
 17321  003004  0101               	movlb	1	; () banked
 17322  003006  517C               	movf	MiWiTasks@i& (0+255),w,b
 17323  003008  0D01               	mullw	1
 17324  00300A  50F3               	movf	prodl,w,c
 17325  00300C  0101               	movlb	1	; () banked
 17326  00300E  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 17327  003010  6ED9               	movwf	fsr2l,c
 17328  003012  50F4               	movf	prodh,w,c
 17329  003014  0101               	movlb	1	; () banked
 17330  003016  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 17331  003018  6EDA               	movwf	fsr2h,c
 17332  00301A  0101               	movlb	1	; () banked
 17333  00301C  517C               	movf	MiWiTasks@i& (0+255),w,b
 17334  00301E  0D01               	mullw	1
 17335  003020  0E04               	movlw	4
 17336  003022  26F3               	addwf	prodl,f,c
 17337  003024  0E00               	movlw	0
 17338  003026  22F4               	addwfc	prodh,f,c
 17339  003028  0E00               	movlw	low _ConnectionTable
 17340  00302A  0101               	movlb	1	; () banked
 17341  00302C  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17342  00302E  0E06               	movlw	high _ConnectionTable
 17343  003030  0101               	movlb	1	; () banked
 17344  003032  6F4C               	movwf	(??_MiWiTasks+2)& (0+255),b
 17345  003034  50F3               	movf	prodl,w,c
 17346  003036  0101               	movlb	1	; () banked
 17347  003038  274B               	addwf	(??_MiWiTasks+1)& (0+255),f,b
 17348  00303A  50F4               	movf	prodh,w,c
 17349  00303C  0101               	movlb	1	; () banked
 17350  00303E  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 17351  003040  0101               	movlb	1	; () banked
 17352  003042  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17353  003044  0D09               	mullw	9
 17354  003046  50F3               	movf	prodl,w,c
 17355  003048  0101               	movlb	1	; () banked
 17356  00304A  254B               	addwf	(??_MiWiTasks+1)& (0+255),w,b
 17357  00304C  6EE1               	movwf	fsr1l,c
 17358  00304E  50F4               	movf	prodh,w,c
 17359  003050  0101               	movlb	1	; () banked
 17360  003052  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 17361  003054  6EE2               	movwf	fsr1h,c
 17362  003056  50DE               	movf	postinc2,w,c
 17363  003058  18E6               	xorwf	postinc1,w,c
 17364  00305A  A4D8               	btfss	status,2,c
 17365  00305C  D003               	goto	l18348
 17366                           
 17367                           ; BSR set to: 1
 17368                           
 17369                           ; BSR set to: 1
 17370                           
 17371                           ; BSR set to: 1
 17372                           ;miwi_mesh.c: 1144: {
 17373                           ;miwi_mesh.c: 1145: break;
 17374  00305E  0101               	movlb	1	; () banked
 17375  003060  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17376  003062  D7CB               	goto	l18336
 17377  003064                     l18348:
 17378                           
 17379                           ; BSR set to: 1
 17380                           ;miwi_mesh.c: 1146: }
 17381                           ;miwi_mesh.c: 1147: }
 17382                           ;miwi_mesh.c: 1148: if( i >= 4 )
 17383  003064  0E03               	movlw	3
 17384  003066  0101               	movlb	1	; () banked
 17385  003068  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17386  00306A  D002               	goto	l18352
 17387                           
 17388                           ; BSR set to: 1
 17389                           ;miwi_mesh.c: 1149: {
 17390                           ;miwi_mesh.c: 1150: entry = 0xFF;
 17391  00306C  0101               	movlb	1	; () banked
 17392  00306E  697A               	setf	MiWiTasks@entry& (0+255),b
 17393  003070                     l18352:
 17394                           
 17395                           ; BSR set to: 1
 17396                           ;miwi_mesh.c: 1151: }
 17397                           ;miwi_mesh.c: 1152: }
 17398                           ;miwi_mesh.c: 1154: if( entry < 0xFF )
 17399  003070  0101               	movlb	1	; () banked
 17400  003072  297A               	incf	MiWiTasks@entry& (0+255),w,b
 17401  003074  B4D8               	btfsc	status,2,c
 17402  003076  D0A9               	goto	l18370
 17403                           
 17404                           ; BSR set to: 1
 17405                           ;miwi_mesh.c: 1155: {
 17406                           ;miwi_mesh.c: 1156: ConnectionTable[entry].PANID.Val = tempPANID.Val;
 17407  003078  0101               	movlb	1	; () banked
 17408  00307A  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17409  00307C  0D09               	mullw	9
 17410  00307E  0E00               	movlw	low _ConnectionTable
 17411  003080  24F3               	addwf	prodl,w,c
 17412  003082  6ED9               	movwf	fsr2l,c
 17413  003084  0E06               	movlw	high _ConnectionTable
 17414  003086  20F4               	addwfc	prodh,w,c
 17415  003088  6EDA               	movwf	fsr2h,c
 17416  00308A  C1BB  FFDE         	movff	_tempPANID,postinc2
 17417  00308E  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 17418                           
 17419                           ;miwi_mesh.c: 1157: ConnectionTable[entry].AltAddress.Val = tempShortAddress.Val;
 17420  003092  0101               	movlb	1	; () banked
 17421  003094  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17422  003096  0D09               	mullw	9
 17423  003098  0E02               	movlw	2
 17424  00309A  26F3               	addwf	prodl,f,c
 17425  00309C  0E00               	movlw	0
 17426  00309E  22F4               	addwfc	prodh,f,c
 17427  0030A0  0E00               	movlw	low _ConnectionTable
 17428  0030A2  24F3               	addwf	prodl,w,c
 17429  0030A4  6ED9               	movwf	fsr2l,c
 17430  0030A6  0E06               	movlw	high _ConnectionTable
 17431  0030A8  20F4               	addwfc	prodh,w,c
 17432  0030AA  6EDA               	movwf	fsr2h,c
 17433  0030AC  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 17434  0030B0  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 17435                           
 17436                           ; BSR set to: 1
 17437                           ;miwi_mesh.c: 1159: for(i = 0; i < 4; i++)
 17438  0030B4  0E00               	movlw	0
 17439  0030B6  0101               	movlb	1	; () banked
 17440  0030B8  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17441  0030BA                     l18358:
 17442                           
 17443                           ; BSR set to: 1
 17444  0030BA  0E03               	movlw	3
 17445  0030BC  0101               	movlb	1	; () banked
 17446  0030BE  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17447  0030C0  D001               	goto	l18362
 17448  0030C2  D02E               	goto	l18368
 17449  0030C4                     l18362:
 17450                           
 17451                           ; BSR set to: 1
 17452                           ;miwi_mesh.c: 1160: {
 17453                           ;miwi_mesh.c: 1161: ConnectionTable[entry].Address[i] = MACRxPacket.SourceAddress[i];
 17454  0030C4  0101               	movlb	1	; () banked
 17455  0030C6  517C               	movf	MiWiTasks@i& (0+255),w,b
 17456  0030C8  0D01               	mullw	1
 17457  0030CA  50F3               	movf	prodl,w,c
 17458  0030CC  0101               	movlb	1	; () banked
 17459  0030CE  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 17460  0030D0  6ED9               	movwf	fsr2l,c
 17461  0030D2  50F4               	movf	prodh,w,c
 17462  0030D4  0101               	movlb	1	; () banked
 17463  0030D6  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 17464  0030D8  6EDA               	movwf	fsr2h,c
 17465  0030DA  0101               	movlb	1	; () banked
 17466  0030DC  517C               	movf	MiWiTasks@i& (0+255),w,b
 17467  0030DE  0D01               	mullw	1
 17468  0030E0  0E04               	movlw	4
 17469  0030E2  26F3               	addwf	prodl,f,c
 17470  0030E4  0E00               	movlw	0
 17471  0030E6  22F4               	addwfc	prodh,f,c
 17472  0030E8  0E00               	movlw	low _ConnectionTable
 17473  0030EA  0101               	movlb	1	; () banked
 17474  0030EC  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17475  0030EE  0E06               	movlw	high _ConnectionTable
 17476  0030F0  0101               	movlb	1	; () banked
 17477  0030F2  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17478  0030F4  50F3               	movf	prodl,w,c
 17479  0030F6  0101               	movlb	1	; () banked
 17480  0030F8  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17481  0030FA  50F4               	movf	prodh,w,c
 17482  0030FC  0101               	movlb	1	; () banked
 17483  0030FE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17484  003100  0101               	movlb	1	; () banked
 17485  003102  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17486  003104  0D09               	mullw	9
 17487  003106  50F3               	movf	prodl,w,c
 17488  003108  0101               	movlb	1	; () banked
 17489  00310A  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17490  00310C  6EE1               	movwf	fsr1l,c
 17491  00310E  50F4               	movf	prodh,w,c
 17492  003110  0101               	movlb	1	; () banked
 17493  003112  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17494  003114  6EE2               	movwf	fsr1h,c
 17495  003116  CFDF FFE7          	movff	indf2,indf1
 17496                           
 17497                           ; BSR set to: 1
 17498  00311A  0101               	movlb	1	; () banked
 17499  00311C  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17500  00311E  D7CD               	goto	l18358
 17501  003120                     l18368:
 17502                           
 17503                           ; BSR set to: 1
 17504                           ;miwi_mesh.c: 1162: }
 17505                           ;miwi_mesh.c: 1165: ConnectionTable[entry].status.Val = 0;
 17506  003120  0101               	movlb	1	; () banked
 17507  003122  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17508  003124  0D09               	mullw	9
 17509  003126  0E08               	movlw	8
 17510  003128  26F3               	addwf	prodl,f,c
 17511  00312A  0E00               	movlw	0
 17512  00312C  22F4               	addwfc	prodh,f,c
 17513  00312E  0E00               	movlw	low _ConnectionTable
 17514  003130  24F3               	addwf	prodl,w,c
 17515  003132  6ED9               	movwf	fsr2l,c
 17516  003134  0E06               	movlw	high _ConnectionTable
 17517  003136  20F4               	addwfc	prodh,w,c
 17518  003138  6EDA               	movwf	fsr2h,c
 17519  00313A  0E00               	movlw	0
 17520  00313C  6EDF               	movwf	indf2,c
 17521                           
 17522                           ;miwi_mesh.c: 1166: ConnectionTable[entry].status.bits.directConnection = 1;
 17523  00313E  0101               	movlb	1	; () banked
 17524  003140  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17525  003142  0D09               	mullw	9
 17526  003144  0E08               	movlw	8
 17527  003146  26F3               	addwf	prodl,f,c
 17528  003148  0E00               	movlw	0
 17529  00314A  22F4               	addwfc	prodh,f,c
 17530  00314C  0E00               	movlw	low _ConnectionTable
 17531  00314E  24F3               	addwf	prodl,w,c
 17532  003150  6ED9               	movwf	fsr2l,c
 17533  003152  0E06               	movlw	high _ConnectionTable
 17534  003154  20F4               	addwfc	prodh,w,c
 17535  003156  6EDA               	movwf	fsr2h,c
 17536  003158  82DF               	bsf	indf2,1,c
 17537                           
 17538                           ;miwi_mesh.c: 1167: ConnectionTable[entry].status.bits.RXOnWhenIdle = 1;
 17539  00315A  0101               	movlb	1	; () banked
 17540  00315C  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17541  00315E  0D09               	mullw	9
 17542  003160  0E08               	movlw	8
 17543  003162  26F3               	addwf	prodl,f,c
 17544  003164  0E00               	movlw	0
 17545  003166  22F4               	addwfc	prodh,f,c
 17546  003168  0E00               	movlw	low _ConnectionTable
 17547  00316A  24F3               	addwf	prodl,w,c
 17548  00316C  6ED9               	movwf	fsr2l,c
 17549  00316E  0E06               	movlw	high _ConnectionTable
 17550  003170  20F4               	addwfc	prodh,w,c
 17551  003172  6EDA               	movwf	fsr2h,c
 17552  003174  80DF               	bsf	indf2,0,c
 17553                           
 17554                           ;miwi_mesh.c: 1168: ConnectionTable[entry].status.bits.longAddressValid = 1;
 17555  003176  0101               	movlb	1	; () banked
 17556  003178  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17557  00317A  0D09               	mullw	9
 17558  00317C  0E08               	movlw	8
 17559  00317E  26F3               	addwf	prodl,f,c
 17560  003180  0E00               	movlw	0
 17561  003182  22F4               	addwfc	prodh,f,c
 17562  003184  0E00               	movlw	low _ConnectionTable
 17563  003186  24F3               	addwf	prodl,w,c
 17564  003188  6ED9               	movwf	fsr2l,c
 17565  00318A  0E06               	movlw	high _ConnectionTable
 17566  00318C  20F4               	addwfc	prodh,w,c
 17567  00318E  6EDA               	movwf	fsr2h,c
 17568  003190  84DF               	bsf	indf2,2,c
 17569                           
 17570                           ;miwi_mesh.c: 1169: ConnectionTable[entry].status.bits.shortAddressValid = 1;
 17571  003192  0101               	movlb	1	; () banked
 17572  003194  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17573  003196  0D09               	mullw	9
 17574  003198  0E08               	movlw	8
 17575  00319A  26F3               	addwf	prodl,f,c
 17576  00319C  0E00               	movlw	0
 17577  00319E  22F4               	addwfc	prodh,f,c
 17578  0031A0  0E00               	movlw	low _ConnectionTable
 17579  0031A2  24F3               	addwf	prodl,w,c
 17580  0031A4  6ED9               	movwf	fsr2l,c
 17581  0031A6  0E06               	movlw	high _ConnectionTable
 17582  0031A8  20F4               	addwfc	prodh,w,c
 17583  0031AA  6EDA               	movwf	fsr2h,c
 17584  0031AC  86DF               	bsf	indf2,3,c
 17585                           
 17586                           ;miwi_mesh.c: 1170: ConnectionTable[entry].status.bits.isValid = 1;
 17587  0031AE  0101               	movlb	1	; () banked
 17588  0031B0  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17589  0031B2  0D09               	mullw	9
 17590  0031B4  0E08               	movlw	8
 17591  0031B6  26F3               	addwf	prodl,f,c
 17592  0031B8  0E00               	movlw	0
 17593  0031BA  22F4               	addwfc	prodh,f,c
 17594  0031BC  0E00               	movlw	low _ConnectionTable
 17595  0031BE  24F3               	addwf	prodl,w,c
 17596  0031C0  6ED9               	movwf	fsr2l,c
 17597  0031C2  0E06               	movlw	high _ConnectionTable
 17598  0031C4  20F4               	addwfc	prodh,w,c
 17599  0031C6  6EDA               	movwf	fsr2h,c
 17600  0031C8  8EDF               	bsf	indf2,7,c
 17601  0031CA                     l18370:
 17602                           
 17603                           ; BSR set to: 1
 17604                           ;miwi_mesh.c: 1175: }
 17605                           ;miwi_mesh.c: 1176: }
 17606                           ;miwi_mesh.c: 1187: if(MiWiStateMachine.bits.searchingForNetwork)
 17607  0031CA  0101               	movlb	1	; () banked
 17608  0031CC  A1B5               	btfss	_MiWiStateMachine& (0+255),0,b
 17609  0031CE  EF84  F01D         	goto	l641
 17610                           
 17611                           ; BSR set to: 1
 17612                           ;miwi_mesh.c: 1188: {
 17613                           ;miwi_mesh.c: 1194: tempPANID.v[0] = MACRxPacket.Payload[0];
 17614  0031D2  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17615  0031D6  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17616  0031DA  50DF               	movf	indf2,w,c
 17617  0031DC  0101               	movlb	1	; () banked
 17618  0031DE  6FBB               	movwf	_tempPANID& (0+255),b
 17619                           
 17620                           ; BSR set to: 1
 17621                           ;miwi_mesh.c: 1195: tempPANID.v[1] = MACRxPacket.Payload[1];
 17622  0031E0  0101               	movlb	1	; () banked
 17623  0031E2  EE20 F001          	lfsr	2,1
 17624  0031E6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17625  0031E8  26D9               	addwf	fsr2l,f,c
 17626  0031EA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17627  0031EC  22DA               	addwfc	fsr2h,f,c
 17628  0031EE  50DF               	movf	indf2,w,c
 17629  0031F0  0101               	movlb	1	; () banked
 17630  0031F2  6FBC               	movwf	(_tempPANID+1)& (0+255),b
 17631                           
 17632                           ; BSR set to: 1
 17633                           ;miwi_mesh.c: 1196: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17634  0031F4  0101               	movlb	1	; () banked
 17635  0031F6  EE20 F002          	lfsr	2,2
 17636  0031FA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17637  0031FC  26D9               	addwf	fsr2l,f,c
 17638  0031FE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17639  003200  22DA               	addwfc	fsr2h,f,c
 17640  003202  50DF               	movf	indf2,w,c
 17641  003204  0101               	movlb	1	; () banked
 17642  003206  6FF4               	movwf	_tempShortAddress& (0+255),b
 17643                           
 17644                           ; BSR set to: 1
 17645                           ;miwi_mesh.c: 1197: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17646  003208  0101               	movlb	1	; () banked
 17647  00320A  EE20 F003          	lfsr	2,3
 17648  00320E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17649  003210  26D9               	addwf	fsr2l,f,c
 17650  003212  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17651  003214  22DA               	addwfc	fsr2h,f,c
 17652  003216  50DF               	movf	indf2,w,c
 17653  003218  0101               	movlb	1	; () banked
 17654  00321A  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17655                           
 17656                           ; BSR set to: 1
 17657                           ;miwi_mesh.c: 1201: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 17658  00321C  0101               	movlb	1	; () banked
 17659  00321E  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17660  003220  0D01               	mullw	1
 17661  003222  50F3               	movf	prodl,w,c
 17662  003224  0101               	movlb	1	; () banked
 17663  003226  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17664  003228  6ED9               	movwf	fsr2l,c
 17665  00322A  50F4               	movf	prodh,w,c
 17666  00322C  0101               	movlb	1	; () banked
 17667  00322E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17668  003230  6EDA               	movwf	fsr2h,c
 17669  003232  28DE               	incf	postinc2,w,c
 17670  003234  A4D8               	btfss	status,2,c
 17671  003236  EF84  F01D         	goto	l641
 17672                           
 17673                           ; BSR set to: 1
 17674                           ;miwi_mesh.c: 1202: {
 17675                           ;miwi_mesh.c: 1203: MIWI_CAPACITY_INFO CapacityByte;
 17676                           ;miwi_mesh.c: 1204: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 17677  00323A  0101               	movlb	1	; () banked
 17678  00323C  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17679  00323E  0101               	movlb	1	; () banked
 17680  003240  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17681  003242  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17682  003244  0E01               	movlw	1
 17683  003246  0101               	movlb	1	; () banked
 17684  003248  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17685  00324A  0E00               	movlw	0
 17686  00324C  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17687  00324E  0101               	movlb	1	; () banked
 17688  003250  514A               	movf	??_MiWiTasks& (0+255),w,b
 17689  003252  0101               	movlb	1	; () banked
 17690  003254  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17691  003256  6ED9               	movwf	fsr2l,c
 17692  003258  0101               	movlb	1	; () banked
 17693  00325A  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17694  00325C  0101               	movlb	1	; () banked
 17695  00325E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17696  003260  6EDA               	movwf	fsr2h,c
 17697  003262  50DF               	movf	indf2,w,c
 17698  003264  0101               	movlb	1	; () banked
 17699  003266  6F70               	movwf	MiWiTasks@CapacityByte& (0+255),b
 17700                           
 17701                           ; BSR set to: 1
 17702                           ;miwi_mesh.c: 1205: if( (ActiveScanResultIndex < 4) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 17703  003268  0E04               	movlw	4
 17704  00326A  0101               	movlb	1	; () banked
 17705  00326C  61BD               	cpfslt	_ActiveScanResultIndex& (0+255),b
 17706  00326E  EF84  F01D         	goto	l641
 17707                           
 17708                           ; BSR set to: 1
 17709  003272  0101               	movlb	1	; () banked
 17710  003274  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17711  003276  0B03               	andlw	3
 17712  003278  0101               	movlb	1	; () banked
 17713  00327A  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17714  00327C  0E02               	movlw	2
 17715  00327E  0101               	movlb	1	; () banked
 17716  003280  614A               	cpfslt	??_MiWiTasks& (0+255),b
 17717  003282  EF84  F01D         	goto	l641
 17718                           
 17719                           ; BSR set to: 1
 17720                           ;miwi_mesh.c: 1206: {
 17721                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 17722  003286  0101               	movlb	1	; () banked
 17723  003288  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17724  00328A  0D0A               	mullw	10
 17725  00328C  0E00               	movlw	low _ActiveScanResults
 17726  00328E  24F3               	addwf	prodl,w,c
 17727  003290  6ED9               	movwf	fsr2l,c
 17728  003292  0E02               	movlw	high _ActiveScanResults
 17729  003294  20F4               	addwfc	prodh,w,c
 17730  003296  6EDA               	movwf	fsr2h,c
 17731  003298  C1F6  FFDF         	movff	_currentChannel,indf2
 17732                           
 17733                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 17734  00329C  0101               	movlb	1	; () banked
 17735  00329E  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17736  0032A0  0D0A               	mullw	10
 17737  0032A2  0E07               	movlw	7
 17738  0032A4  26F3               	addwf	prodl,f,c
 17739  0032A6  0E00               	movlw	0
 17740  0032A8  22F4               	addwfc	prodh,f,c
 17741  0032AA  0E00               	movlw	low _ActiveScanResults
 17742  0032AC  24F3               	addwf	prodl,w,c
 17743  0032AE  6ED9               	movwf	fsr2l,c
 17744  0032B0  0E02               	movlw	high _ActiveScanResults
 17745  0032B2  20F4               	addwfc	prodh,w,c
 17746  0032B4  6EDA               	movwf	fsr2h,c
 17747  0032B6  C198  FFDF         	movff	_rxMessage+8,indf2
 17748                           
 17749                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 17750  0032BA  0101               	movlb	1	; () banked
 17751  0032BC  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17752  0032BE  0D0A               	mullw	10
 17753  0032C0  0E08               	movlw	8
 17754  0032C2  26F3               	addwf	prodl,f,c
 17755  0032C4  0E00               	movlw	0
 17756  0032C6  22F4               	addwfc	prodh,f,c
 17757  0032C8  0E00               	movlw	low _ActiveScanResults
 17758  0032CA  24F3               	addwf	prodl,w,c
 17759  0032CC  6ED9               	movwf	fsr2l,c
 17760  0032CE  0E02               	movlw	high _ActiveScanResults
 17761  0032D0  20F4               	addwfc	prodh,w,c
 17762  0032D2  6EDA               	movwf	fsr2h,c
 17763  0032D4  C199  FFDF         	movff	_rxMessage+9,indf2
 17764                           
 17765                           ;miwi_mesh.c: 1211: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 17766  0032D8  0101               	movlb	1	; () banked
 17767  0032DA  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17768  0032DC  0D0A               	mullw	10
 17769  0032DE  0E05               	movlw	5
 17770  0032E0  26F3               	addwf	prodl,f,c
 17771  0032E2  0E00               	movlw	0
 17772  0032E4  22F4               	addwfc	prodh,f,c
 17773  0032E6  0E00               	movlw	low _ActiveScanResults
 17774  0032E8  24F3               	addwf	prodl,w,c
 17775  0032EA  6ED9               	movwf	fsr2l,c
 17776  0032EC  0E02               	movlw	high _ActiveScanResults
 17777  0032EE  20F4               	addwfc	prodh,w,c
 17778  0032F0  6EDA               	movwf	fsr2h,c
 17779  0032F2  C1BB  FFDE         	movff	_tempPANID,postinc2
 17780  0032F6  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 17781                           
 17782                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 17783  0032FA  0101               	movlb	1	; () banked
 17784  0032FC  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17785  0032FE  0D0A               	mullw	10
 17786  003300  0E09               	movlw	9
 17787  003302  26F3               	addwf	prodl,f,c
 17788  003304  0E00               	movlw	0
 17789  003306  22F4               	addwfc	prodh,f,c
 17790  003308  0E00               	movlw	low _ActiveScanResults
 17791  00330A  24F3               	addwf	prodl,w,c
 17792  00330C  6ED9               	movwf	fsr2l,c
 17793  00330E  0E02               	movlw	high _ActiveScanResults
 17794  003310  20F4               	addwfc	prodh,w,c
 17795  003312  6EDA               	movwf	fsr2h,c
 17796  003314  0E00               	movlw	0
 17797  003316  6EDF               	movwf	indf2,c
 17798                           
 17799                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 17800  003318  0101               	movlb	1	; () banked
 17801  00331A  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17802  00331C  0D0A               	mullw	10
 17803  00331E  0E09               	movlw	9
 17804  003320  26F3               	addwf	prodl,f,c
 17805  003322  0E00               	movlw	0
 17806  003324  22F4               	addwfc	prodh,f,c
 17807  003326  0E00               	movlw	low _ActiveScanResults
 17808  003328  24F3               	addwf	prodl,w,c
 17809  00332A  6ED9               	movwf	fsr2l,c
 17810  00332C  0E02               	movlw	high _ActiveScanResults
 17811  00332E  20F4               	addwfc	prodh,w,c
 17812  003330  6EDA               	movwf	fsr2h,c
 17813  003332  0102               	movlb	2	; () banked
 17814  003334  8CDF               	bsf	indf2,6,c
 17815                           
 17816                           ;miwi_mesh.c: 1215: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 17817  003336  0101               	movlb	1	; () banked
 17818  003338  3170               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 17819  00333A  0B03               	andlw	3
 17820  00333C  0101               	movlb	1	; () banked
 17821  00333E  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17822  003340  0101               	movlb	1	; () banked
 17823  003342  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17824  003344  0D0A               	mullw	10
 17825  003346  0E09               	movlw	9
 17826  003348  26F3               	addwf	prodl,f,c
 17827  00334A  0E00               	movlw	0
 17828  00334C  22F4               	addwfc	prodh,f,c
 17829  00334E  0E00               	movlw	low _ActiveScanResults
 17830  003350  24F3               	addwf	prodl,w,c
 17831  003352  6ED9               	movwf	fsr2l,c
 17832  003354  0E02               	movlw	high _ActiveScanResults
 17833  003356  20F4               	addwfc	prodh,w,c
 17834  003358  6EDA               	movwf	fsr2h,c
 17835  00335A  0102               	movlb	2	; () banked
 17836  00335C  50DF               	movf	223,w,c
 17837  00335E  0101               	movlb	1	; () banked
 17838  003360  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 17839  003362  0BFC               	andlw	-4
 17840  003364  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 17841  003366  0102               	movlb	2	; () banked
 17842  003368  6EDF               	movwf	223,c
 17843                           
 17844                           ; BSR set to: 2
 17845                           ;miwi_mesh.c: 1216: if( CapacityByte.bits.Security )
 17846  00336A  0101               	movlb	1	; () banked
 17847  00336C  A770               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 17848  00336E  D00F               	goto	l18394
 17849                           
 17850                           ; BSR set to: 1
 17851                           ;miwi_mesh.c: 1217: {
 17852                           ;miwi_mesh.c: 1218: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 17853  003370  0101               	movlb	1	; () banked
 17854  003372  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17855  003374  0D0A               	mullw	10
 17856  003376  0E09               	movlw	9
 17857  003378  26F3               	addwf	prodl,f,c
 17858  00337A  0E00               	movlw	0
 17859  00337C  22F4               	addwfc	prodh,f,c
 17860  00337E  0E00               	movlw	low _ActiveScanResults
 17861  003380  24F3               	addwf	prodl,w,c
 17862  003382  6ED9               	movwf	fsr2l,c
 17863  003384  0E02               	movlw	high _ActiveScanResults
 17864  003386  20F4               	addwfc	prodh,w,c
 17865  003388  6EDA               	movwf	fsr2h,c
 17866  00338A  0102               	movlb	2	; () banked
 17867  00338C  86DF               	bsf	indf2,3,c
 17868  00338E                     l18394:
 17869                           
 17870                           ;miwi_mesh.c: 1219: }
 17871                           ;miwi_mesh.c: 1220: if( CapacityByte.bits.ConnMode <= 0x01 )
 17872  00338E  0101               	movlb	1	; () banked
 17873  003390  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17874  003392  0B03               	andlw	3
 17875  003394  0101               	movlb	1	; () banked
 17876  003396  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17877  003398  0E02               	movlw	2
 17878  00339A  0101               	movlb	1	; () banked
 17879  00339C  614A               	cpfslt	??_MiWiTasks& (0+255),b
 17880  00339E  D00F               	goto	l18398
 17881                           
 17882                           ; BSR set to: 1
 17883                           ;miwi_mesh.c: 1221: {
 17884                           ;miwi_mesh.c: 1222: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 17885  0033A0  0101               	movlb	1	; () banked
 17886  0033A2  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17887  0033A4  0D0A               	mullw	10
 17888  0033A6  0E09               	movlw	9
 17889  0033A8  26F3               	addwf	prodl,f,c
 17890  0033AA  0E00               	movlw	0
 17891  0033AC  22F4               	addwfc	prodh,f,c
 17892  0033AE  0E00               	movlw	low _ActiveScanResults
 17893  0033B0  24F3               	addwf	prodl,w,c
 17894  0033B2  6ED9               	movwf	fsr2l,c
 17895  0033B4  0E02               	movlw	high _ActiveScanResults
 17896  0033B6  20F4               	addwfc	prodh,w,c
 17897  0033B8  6EDA               	movwf	fsr2h,c
 17898  0033BA  0102               	movlb	2	; () banked
 17899  0033BC  8ADF               	bsf	indf2,5,c
 17900  0033BE                     l18398:
 17901                           
 17902                           ;miwi_mesh.c: 1223: }
 17903                           ;miwi_mesh.c: 1231: for(i = 0; i < 4; i++)
 17904  0033BE  0E00               	movlw	0
 17905  0033C0  0101               	movlb	1	; () banked
 17906  0033C2  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17907  0033C4                     l18400:
 17908                           
 17909                           ; BSR set to: 1
 17910  0033C4  0E03               	movlw	3
 17911  0033C6  0101               	movlb	1	; () banked
 17912  0033C8  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17913  0033CA  D001               	goto	l18404
 17914  0033CC  D02E               	goto	l18410
 17915  0033CE                     l18404:
 17916                           
 17917                           ; BSR set to: 1
 17918                           ;miwi_mesh.c: 1232: {
 17919                           ;miwi_mesh.c: 1233: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 17920  0033CE  0101               	movlb	1	; () banked
 17921  0033D0  517C               	movf	MiWiTasks@i& (0+255),w,b
 17922  0033D2  0D01               	mullw	1
 17923  0033D4  50F3               	movf	prodl,w,c
 17924  0033D6  0101               	movlb	1	; () banked
 17925  0033D8  2593               	addwf	(_rxMessage+3)& (0+255),w,b
 17926  0033DA  6ED9               	movwf	fsr2l,c
 17927  0033DC  50F4               	movf	prodh,w,c
 17928  0033DE  0101               	movlb	1	; () banked
 17929  0033E0  2194               	addwfc	(_rxMessage+4)& (0+255),w,b
 17930  0033E2  6EDA               	movwf	fsr2h,c
 17931  0033E4  0101               	movlb	1	; () banked
 17932  0033E6  517C               	movf	MiWiTasks@i& (0+255),w,b
 17933  0033E8  0D01               	mullw	1
 17934  0033EA  0E01               	movlw	1
 17935  0033EC  26F3               	addwf	prodl,f,c
 17936  0033EE  0E00               	movlw	0
 17937  0033F0  22F4               	addwfc	prodh,f,c
 17938  0033F2  0E00               	movlw	low _ActiveScanResults
 17939  0033F4  0101               	movlb	1	; () banked
 17940  0033F6  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17941  0033F8  0E02               	movlw	high _ActiveScanResults
 17942  0033FA  0101               	movlb	1	; () banked
 17943  0033FC  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17944  0033FE  50F3               	movf	prodl,w,c
 17945  003400  0101               	movlb	1	; () banked
 17946  003402  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17947  003404  50F4               	movf	prodh,w,c
 17948  003406  0101               	movlb	1	; () banked
 17949  003408  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17950  00340A  0101               	movlb	1	; () banked
 17951  00340C  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17952  00340E  0D0A               	mullw	10
 17953  003410  50F3               	movf	prodl,w,c
 17954  003412  0101               	movlb	1	; () banked
 17955  003414  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17956  003416  6EE1               	movwf	fsr1l,c
 17957  003418  50F4               	movf	prodh,w,c
 17958  00341A  0101               	movlb	1	; () banked
 17959  00341C  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17960  00341E  6EE2               	movwf	fsr1h,c
 17961  003420  CFDF FFE7          	movff	indf2,indf1
 17962                           
 17963                           ; BSR set to: 1
 17964  003424  0101               	movlb	1	; () banked
 17965  003426  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17966  003428  D7CD               	goto	l18400
 17967  00342A                     l18410:
 17968                           
 17969                           ; BSR set to: 1
 17970                           ;miwi_mesh.c: 1234: }
 17971                           ;miwi_mesh.c: 1242: ActiveScanResultIndex++;
 17972  00342A  0101               	movlb	1	; () banked
 17973  00342C  2BBD               	incf	_ActiveScanResultIndex& (0+255),f,b
 17974                           
 17975                           ; BSR set to: 1
 17976                           ;miwi_mesh.c: 1243: }
 17977                           ;miwi_mesh.c: 1244: }
 17978                           ;miwi_mesh.c: 1245: }
 17979                           ;miwi_mesh.c: 1246: }
 17980                           ;miwi_mesh.c: 1247: break;
 17981                           
 17982                           ; BSR set to: 1
 17983                           
 17984                           ; BSR set to: 1
 17985  00342E  D36C               	goto	l641
 17986  003430                     l18412:
 17987                           
 17988                           ;miwi_mesh.c: 1258: {
 17989                           ;miwi_mesh.c: 1259: uint8_t handle;
 17990                           ;miwi_mesh.c: 1260: uint8_t associateStatus = 0x00;
 17991  003430  0E00               	movlw	0
 17992  003432  0101               	movlb	1	; () banked
 17993  003434  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 17994                           
 17995                           ; BSR set to: 1
 17996                           ;miwi_mesh.c: 1262: if( ConnMode > 0x01 )
 17997  003436  0E01               	movlw	1
 17998  003438  0101               	movlb	1	; () banked
 17999  00343A  65BF               	cpfsgt	_ConnMode& (0+255),b
 18000  00343C  D001               	goto	l18418
 18001  00343E  D364               	goto	l641
 18002  003440                     l18418:
 18003                           
 18004                           ; BSR set to: 1
 18005                           ;miwi_mesh.c: 1265: }
 18006                           ;miwi_mesh.c: 1268: for(i = 0; i < 4; i++)
 18007  003440  0E00               	movlw	0
 18008  003442  0101               	movlb	1	; () banked
 18009  003444  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18010  003446                     l18420:
 18011                           
 18012                           ; BSR set to: 1
 18013  003446  0E03               	movlw	3
 18014  003448  0101               	movlb	1	; () banked
 18015  00344A  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18016  00344C  D001               	goto	l18424
 18017  00344E  D019               	goto	l18430
 18018  003450                     l18424:
 18019                           
 18020                           ; BSR set to: 1
 18021                           ;miwi_mesh.c: 1269: {
 18022                           ;miwi_mesh.c: 1270: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18023  003450  0101               	movlb	1	; () banked
 18024  003452  517C               	movf	MiWiTasks@i& (0+255),w,b
 18025  003454  0D01               	mullw	1
 18026  003456  50F3               	movf	prodl,w,c
 18027  003458  0101               	movlb	1	; () banked
 18028  00345A  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18029  00345C  6ED9               	movwf	fsr2l,c
 18030  00345E  50F4               	movf	prodh,w,c
 18031  003460  0101               	movlb	1	; () banked
 18032  003462  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18033  003464  6EDA               	movwf	fsr2h,c
 18034  003466  0101               	movlb	1	; () banked
 18035  003468  517C               	movf	MiWiTasks@i& (0+255),w,b
 18036  00346A  0D01               	mullw	1
 18037  00346C  0EA6               	movlw	low _tempLongAddress
 18038  00346E  24F3               	addwf	prodl,w,c
 18039  003470  6EE1               	movwf	fsr1l,c
 18040  003472  0E01               	movlw	high _tempLongAddress
 18041  003474  20F4               	addwfc	prodh,w,c
 18042  003476  6EE2               	movwf	fsr1h,c
 18043  003478  CFDF FFE7          	movff	indf2,indf1
 18044                           
 18045                           ; BSR set to: 1
 18046  00347C  0101               	movlb	1	; () banked
 18047  00347E  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18048  003480  D7E2               	goto	l18420
 18049  003482                     l18430:
 18050                           
 18051                           ; BSR set to: 1
 18052                           ;miwi_mesh.c: 1271: }
 18053                           ;miwi_mesh.c: 1273: handle = SearchForLongAddress();
 18054  003482  ECB2  F04E         	call	_SearchForLongAddress	;wreg free
 18055  003486  0101               	movlb	1	; () banked
 18056  003488  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18057                           
 18058                           ; BSR set to: 1
 18059                           ;miwi_mesh.c: 1274: if( handle == 0xFF )
 18060  00348A  0101               	movlb	1	; () banked
 18061  00348C  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18062  00348E  A4D8               	btfss	status,2,c
 18063  003490  D01C               	goto	l18448
 18064                           
 18065                           ; BSR set to: 1
 18066                           ;miwi_mesh.c: 1275: {
 18067                           ;miwi_mesh.c: 1276: if( ConnMode > 0x00 )
 18068  003492  0101               	movlb	1	; () banked
 18069  003494  51BF               	movf	_ConnMode& (0+255),w,b
 18070  003496  A4D8               	btfss	status,2,c
 18071  003498  D337               	goto	l641
 18072                           
 18073                           ; BSR set to: 1
 18074                           ;miwi_mesh.c: 1279: }
 18075                           ;miwi_mesh.c: 1280: tempNodeStatus.Val = 0xB7;
 18076                           
 18077                           ; BSR set to: 1
 18078                           
 18079                           ; BSR set to: 1
 18080                           ;miwi_mesh.c: 1277: {
 18081                           ;miwi_mesh.c: 1278: break;
 18082  00349A  0EB7               	movlw	183
 18083  00349C  0100               	movlb	0	; () banked
 18084  00349E  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18085                           
 18086                           ; BSR set to: 0
 18087                           ;miwi_mesh.c: 1281: tempPANID.Val = myPANID.Val;
 18088  0034A0  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18089  0034A4  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18090                           
 18091                           ; BSR set to: 0
 18092                           ;miwi_mesh.c: 1284: handle = AddNodeToNetworkTable();
 18093  0034A8  EC14  F046         	call	_AddNodeToNetworkTable	;wreg free
 18094  0034AC  0101               	movlb	1	; () banked
 18095  0034AE  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18096                           
 18097                           ; BSR set to: 1
 18098                           ;miwi_mesh.c: 1285: if( handle == 0xFF )
 18099  0034B0  0101               	movlb	1	; () banked
 18100  0034B2  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18101  0034B4  A4D8               	btfss	status,2,c
 18102  0034B6  D02A               	goto	l18452
 18103                           
 18104                           ; BSR set to: 1
 18105                           ;miwi_mesh.c: 1286: {
 18106                           ;miwi_mesh.c: 1287: associateStatus = 0x01;
 18107  0034B8  0E01               	movlw	1
 18108  0034BA  0101               	movlb	1	; () banked
 18109  0034BC  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 18110                           
 18111                           ;miwi_mesh.c: 1288: tempShortAddress.Val = 0xFFFE;
 18112  0034BE  0EFF               	movlw	255
 18113  0034C0  0101               	movlb	1	; () banked
 18114  0034C2  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18115  0034C4  0EFE               	movlw	254
 18116  0034C6  6FF4               	movwf	_tempShortAddress& (0+255),b
 18117                           
 18118                           ;miwi_mesh.c: 1289: goto START_ASSOCIATION_RESPONSE;
 18119  0034C8  D09E               	goto	l18504
 18120  0034CA                     l18448:
 18121                           
 18122                           ; BSR set to: 1
 18123                           ;miwi_mesh.c: 1295: else
 18124                           ;miwi_mesh.c: 1296: {
 18125                           ;miwi_mesh.c: 1297: if( ConnectionTable[handle].status.bits.shortAddressValid )
 18126  0034CA  0101               	movlb	1	; () banked
 18127  0034CC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18128  0034CE  0D09               	mullw	9
 18129  0034D0  0E08               	movlw	8
 18130  0034D2  26F3               	addwf	prodl,f,c
 18131  0034D4  0E00               	movlw	0
 18132  0034D6  22F4               	addwfc	prodh,f,c
 18133  0034D8  0E00               	movlw	low _ConnectionTable
 18134  0034DA  24F3               	addwf	prodl,w,c
 18135  0034DC  6ED9               	movwf	fsr2l,c
 18136  0034DE  0E06               	movlw	high _ConnectionTable
 18137  0034E0  20F4               	addwfc	prodh,w,c
 18138  0034E2  6EDA               	movwf	fsr2h,c
 18139  0034E4  A6DF               	btfss	indf2,3,c
 18140  0034E6  D012               	goto	l18452
 18141                           
 18142                           ; BSR set to: 1
 18143                           ;miwi_mesh.c: 1298: {
 18144                           ;miwi_mesh.c: 1299: tempShortAddress.Val = ConnectionTable[handle].AltAddress.Val;
 18145  0034E8  0101               	movlb	1	; () banked
 18146  0034EA  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18147  0034EC  0D09               	mullw	9
 18148  0034EE  0E02               	movlw	2
 18149  0034F0  26F3               	addwf	prodl,f,c
 18150  0034F2  0E00               	movlw	0
 18151  0034F4  22F4               	addwfc	prodh,f,c
 18152  0034F6  0E00               	movlw	low _ConnectionTable
 18153  0034F8  24F3               	addwf	prodl,w,c
 18154  0034FA  6ED9               	movwf	fsr2l,c
 18155  0034FC  0E06               	movlw	high _ConnectionTable
 18156  0034FE  20F4               	addwfc	prodh,w,c
 18157  003500  6EDA               	movwf	fsr2h,c
 18158  003502  CFDE F1F4          	movff	postinc2,_tempShortAddress
 18159  003506  CFDD F1F5          	movff	postdec2,_tempShortAddress+1
 18160                           
 18161                           ;miwi_mesh.c: 1300: goto START_ASSOCIATION_RESPONSE;
 18162  00350A  D07D               	goto	l18504
 18163  00350C                     l18452:
 18164                           
 18165                           ; BSR set to: 1
 18166                           ;miwi_mesh.c: 1301: }
 18167                           ;miwi_mesh.c: 1302: }
 18168                           ;miwi_mesh.c: 1305: if(handle != 0xFF)
 18169  00350C  0101               	movlb	1	; () banked
 18170  00350E  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18171  003510  B4D8               	btfsc	status,2,c
 18172  003512  D079               	goto	l18504
 18173                           
 18174                           ; BSR set to: 1
 18175                           ;miwi_mesh.c: 1306: {
 18176                           ;miwi_mesh.c: 1308: tempShortAddress.v[0] = handle + 1;
 18177  003514  0101               	movlb	1	; () banked
 18178  003516  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18179  003518  0101               	movlb	1	; () banked
 18180  00351A  6FF4               	movwf	_tempShortAddress& (0+255),b
 18181                           
 18182                           ; BSR set to: 1
 18183                           ;miwi_mesh.c: 1309: tempShortAddress.v[1] = myShortAddress.v[1];
 18184  00351C  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 18185                           
 18186                           ; BSR set to: 1
 18187                           ;miwi_mesh.c: 1310: tempPANID.Val = myPANID.Val;
 18188  003520  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18189  003524  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18190                           
 18191                           ;miwi_mesh.c: 1313: if(role == 0x02)
 18192  003528  0E02               	movlw	2
 18193  00352A  0101               	movlb	1	; () banked
 18194  00352C  19CA               	xorwf	_role& (0+255),w,b
 18195  00352E  A4D8               	btfss	status,2,c
 18196  003530  D047               	goto	l18488
 18197                           
 18198                           ; BSR set to: 1
 18199                           ;miwi_mesh.c: 1314: {
 18200                           ;miwi_mesh.c: 1315: if(MACRxPacket.Payload[1] & 0x40)
 18201  003532  0101               	movlb	1	; () banked
 18202  003534  EE20 F001          	lfsr	2,1
 18203  003538  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18204  00353A  26D9               	addwf	fsr2l,f,c
 18205  00353C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18206  00353E  22DA               	addwfc	fsr2h,f,c
 18207  003540  0101               	movlb	1	; () banked
 18208  003542  ACDF               	btfss	indf2,6,c
 18209  003544  D03D               	goto	l18488
 18210                           
 18211                           ; BSR set to: 1
 18212                           ;miwi_mesh.c: 1316: {
 18213                           ;miwi_mesh.c: 1318: uint8_t j;
 18214                           ;miwi_mesh.c: 1319: API_UINT16_UNION CoordAddress;
 18215                           ;miwi_mesh.c: 1320: uint8_t entry;
 18216                           ;miwi_mesh.c: 1322: CoordAddress.Val = tempShortAddress.Val;
 18217  003546  C1F4  F15E         	movff	_tempShortAddress,MiWiTasks@CoordAddress
 18218  00354A  C1F5  F15F         	movff	_tempShortAddress+1,MiWiTasks@CoordAddress+1
 18219                           
 18220                           ; BSR set to: 1
 18221                           ;miwi_mesh.c: 1323: tempShortAddress.v[0] = 0;
 18222  00354E  0E00               	movlw	0
 18223  003550  0101               	movlb	1	; () banked
 18224  003552  6FF4               	movwf	_tempShortAddress& (0+255),b
 18225                           
 18226                           ;miwi_mesh.c: 1326: for(j=1;j<8;j++)
 18227  003554  0E01               	movlw	1
 18228  003556  0101               	movlb	1	; () banked
 18229  003558  6F72               	movwf	MiWiTasks@j_2532& (0+255),b
 18230  00355A                     l18466:
 18231                           
 18232                           ; BSR set to: 1
 18233  00355A  0E07               	movlw	7
 18234  00355C  0101               	movlb	1	; () banked
 18235  00355E  6572               	cpfsgt	MiWiTasks@j_2532& (0+255),b
 18236  003560  D001               	goto	l746
 18237  003562  D025               	goto	l18484
 18238  003564                     l746:
 18239                           
 18240                           ; BSR set to: 1
 18241                           ;miwi_mesh.c: 1327: {
 18242                           ;miwi_mesh.c: 1328: tempShortAddress.v[1] = j;
 18243  003564  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 18244                           
 18245                           ; BSR set to: 1
 18246                           ;miwi_mesh.c: 1329: entry = SearchForShortAddress();
 18247  003568  EC85  F057         	call	_SearchForShortAddress	;wreg free
 18248  00356C  0101               	movlb	1	; () banked
 18249  00356E  6F61               	movwf	MiWiTasks@entry_2536& (0+255),b
 18250                           
 18251                           ; BSR set to: 1
 18252                           ;miwi_mesh.c: 1331: if(entry == 0xFF)
 18253  003570  0101               	movlb	1	; () banked
 18254  003572  2961               	incf	MiWiTasks@entry_2536& (0+255),w,b
 18255  003574  A4D8               	btfss	status,2,c
 18256  003576  D018               	goto	l18480
 18257                           
 18258                           ; BSR set to: 1
 18259                           ;miwi_mesh.c: 1332: {
 18260                           ;miwi_mesh.c: 1333: tempShortAddress.v[0] = 0x00;
 18261  003578  0E00               	movlw	0
 18262  00357A  0101               	movlb	1	; () banked
 18263  00357C  6FF4               	movwf	_tempShortAddress& (0+255),b
 18264                           
 18265                           ; BSR set to: 1
 18266                           ;miwi_mesh.c: 1334: tempShortAddress.v[1] = j;
 18267  00357E  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 18268                           
 18269                           ; BSR set to: 1
 18270                           ;miwi_mesh.c: 1335: knownCoordinators |= (1<<j);
 18271  003582  C172  F14A         	movff	MiWiTasks@j_2532,??_MiWiTasks
 18272  003586  0E01               	movlw	1
 18273  003588  0101               	movlb	1	; () banked
 18274  00358A  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18275  00358C  0101               	movlb	1	; () banked
 18276  00358E  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 18277  003590  D003               	goto	u20824
 18278  003592                     u20825:
 18279  003592  0101               	movlb	1	; () banked
 18280  003594  90D8               	bcf	status,0,c
 18281  003596  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 18282  003598                     u20824:
 18283  003598  0101               	movlb	1	; () banked
 18284  00359A  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 18285  00359C  D7FA               	goto	u20825
 18286  00359E  0101               	movlb	1	; () banked
 18287  0035A0  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18288  0035A2  0101               	movlb	1	; () banked
 18289  0035A4  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 18290                           
 18291                           ;miwi_mesh.c: 1339: break;
 18292  0035A6  D003               	goto	l18484
 18293  0035A8                     l18480:
 18294                           
 18295                           ; BSR set to: 1
 18296  0035A8  0101               	movlb	1	; () banked
 18297  0035AA  2B72               	incf	MiWiTasks@j_2532& (0+255),f,b
 18298  0035AC  D7D6               	goto	l18466
 18299  0035AE                     l18484:
 18300                           
 18301                           ; BSR set to: 1
 18302                           ;miwi_mesh.c: 1340: }
 18303                           ;miwi_mesh.c: 1341: }
 18304                           ;miwi_mesh.c: 1343: if(j==8)
 18305  0035AE  0E08               	movlw	8
 18306  0035B0  0101               	movlb	1	; () banked
 18307  0035B2  1972               	xorwf	MiWiTasks@j_2532& (0+255),w,b
 18308  0035B4  A4D8               	btfss	status,2,c
 18309  0035B6  D004               	goto	l18488
 18310                           
 18311                           ; BSR set to: 1
 18312                           ;miwi_mesh.c: 1344: {
 18313                           ;miwi_mesh.c: 1345: tempShortAddress.Val= CoordAddress.Val;
 18314  0035B8  C15E  F1F4         	movff	MiWiTasks@CoordAddress,_tempShortAddress
 18315  0035BC  C15F  F1F5         	movff	MiWiTasks@CoordAddress+1,_tempShortAddress+1
 18316  0035C0                     l18488:
 18317                           
 18318                           ; BSR set to: 1
 18319                           ;miwi_mesh.c: 1346: }
 18320                           ;miwi_mesh.c: 1348: }
 18321                           ;miwi_mesh.c: 1349: }
 18322                           ;miwi_mesh.c: 1352: tempNodeStatus.Val = 0xBF;
 18323  0035C0  0EBF               	movlw	191
 18324  0035C2  0100               	movlb	0	; () banked
 18325  0035C4  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18326                           
 18327                           ; BSR set to: 0
 18328                           ;miwi_mesh.c: 1355: if((MACRxPacket.Payload[1] & 0x01) == 0)
 18329  0035C6  0101               	movlb	1	; () banked
 18330  0035C8  EE20 F001          	lfsr	2,1
 18331  0035CC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18332  0035CE  26D9               	addwf	fsr2l,f,c
 18333  0035D0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18334  0035D2  22DA               	addwfc	fsr2h,f,c
 18335  0035D4  0101               	movlb	1	; () banked
 18336  0035D6  B0DF               	btfsc	indf2,0,c
 18337  0035D8  D004               	goto	l18496
 18338                           
 18339                           ; BSR set to: 1
 18340                           ;miwi_mesh.c: 1356: {
 18341                           ;miwi_mesh.c: 1357: tempNodeStatus.bits.RXOnWhenIdle = 0;
 18342  0035DA  0100               	movlb	0	; () banked
 18343  0035DC  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;miwi_mesh.c: 1358: tempShortAddress.v[0] |= 0x80;
 18347  0035DE  0101               	movlb	1	; () banked
 18348  0035E0  8FF4               	bsf	_tempShortAddress& (0+255),7,b
 18349  0035E2                     l18496:
 18350                           
 18351                           ; BSR set to: 1
 18352                           ;miwi_mesh.c: 1359: }
 18353                           ;miwi_mesh.c: 1362: handle = AddNodeToNetworkTable();
 18354  0035E2  EC14  F046         	call	_AddNodeToNetworkTable	;wreg free
 18355  0035E6  0101               	movlb	1	; () banked
 18356  0035E8  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18357                           
 18358                           ; BSR set to: 1
 18359                           ;miwi_mesh.c: 1364: ConnectionTable[handle].status.bits.FinishJoin = 1;
 18360  0035EA  0101               	movlb	1	; () banked
 18361  0035EC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18362  0035EE  0D09               	mullw	9
 18363  0035F0  0E08               	movlw	8
 18364  0035F2  26F3               	addwf	prodl,f,c
 18365  0035F4  0E00               	movlw	0
 18366  0035F6  22F4               	addwfc	prodh,f,c
 18367  0035F8  0E00               	movlw	low _ConnectionTable
 18368  0035FA  24F3               	addwf	prodl,w,c
 18369  0035FC  6ED9               	movwf	fsr2l,c
 18370  0035FE  0E06               	movlw	high _ConnectionTable
 18371  003600  20F4               	addwfc	prodh,w,c
 18372  003602  6EDA               	movwf	fsr2h,c
 18373  003604  88DF               	bsf	indf2,4,c
 18374  003606                     l18504:
 18375                           
 18376                           ; BSR set to: 1
 18377                           ;miwi_mesh.c: 1387: TxBuffer[0] = 0x02;
 18378  003606  0E02               	movlw	2
 18379  003608  0102               	movlb	2	; () banked
 18380  00360A  6FA6               	movwf	_TxBuffer& (0+255),b
 18381                           
 18382                           ; BSR set to: 2
 18383                           ;miwi_mesh.c: 1388: TxBuffer[1] = tempShortAddress.v[0];
 18384  00360C  C1F4  F2A7         	movff	_tempShortAddress,_TxBuffer+1
 18385                           
 18386                           ; BSR set to: 2
 18387                           ;miwi_mesh.c: 1389: TxBuffer[2] = tempShortAddress.v[1];
 18388  003610  C1F5  F2A8         	movff	_tempShortAddress+1,_TxBuffer+2
 18389                           
 18390                           ; BSR set to: 2
 18391                           ;miwi_mesh.c: 1390: TxBuffer[3] = associateStatus;
 18392  003614  C163  F2A9         	movff	MiWiTasks@associateStatus,_TxBuffer+3
 18393                           
 18394                           ; BSR set to: 2
 18395                           ;miwi_mesh.c: 1397: TxData = 4+0;
 18396  003618  0E04               	movlw	4
 18397  00361A  0101               	movlb	1	; () banked
 18398  00361C  6FC6               	movwf	_TxData& (0+255),b
 18399                           
 18400                           ; BSR set to: 1
 18401                           ;miwi_mesh.c: 1400: IncomingFrameCounter[handle].Val = 0;
 18402  00361E  0101               	movlb	1	; () banked
 18403  003620  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18404  003622  0D04               	mullw	4
 18405  003624  0E00               	movlw	low _IncomingFrameCounter
 18406  003626  24F3               	addwf	prodl,w,c
 18407  003628  6ED9               	movwf	fsr2l,c
 18408  00362A  0E05               	movlw	high _IncomingFrameCounter
 18409  00362C  20F4               	addwfc	prodh,w,c
 18410  00362E  6EDA               	movwf	fsr2h,c
 18411  003630  6ADE               	clrf	postinc2,c
 18412  003632  6ADE               	clrf	postinc2,c
 18413  003634  6ADE               	clrf	postinc2,c
 18414  003636  6ADD               	clrf	postdec2,c
 18415                           
 18416                           ; BSR set to: 1
 18417                           ;miwi_mesh.c: 1406: SendMACPacket(ConnectionTable[handle].Address, 0x01);
 18418  003638  0101               	movlb	1	; () banked
 18419  00363A  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18420  00363C  0D09               	mullw	9
 18421  00363E  0E04               	movlw	4
 18422  003640  26F3               	addwf	prodl,f,c
 18423  003642  0E00               	movlw	0
 18424  003644  22F4               	addwfc	prodh,f,c
 18425  003646  0E00               	movlw	low _ConnectionTable
 18426  003648  24F3               	addwf	prodl,w,c
 18427  00364A  0101               	movlb	1	; () banked
 18428  00364C  6F39               	movwf	SendMACPacket@Address& (0+255),b
 18429  00364E  0E06               	movlw	high _ConnectionTable
 18430  003650  20F4               	addwfc	prodh,w,c
 18431  003652  0101               	movlb	1	; () banked
 18432  003654  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 18433  003656  0E01               	movlw	1
 18434  003658  0101               	movlb	1	; () banked
 18435  00365A  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 18436  00365C  ECC9  F057         	call	_SendMACPacket	;wreg free
 18437                           
 18438                           ;miwi_mesh.c: 1408: }
 18439                           ;miwi_mesh.c: 1409: break;
 18440  003660  D253               	goto	l641
 18441  003662                     l18518:
 18442                           
 18443                           ;miwi_mesh.c: 1413: {
 18444                           ;miwi_mesh.c: 1414: if(MACRxPacket.Payload[3] == 0x00)
 18445  003662  0101               	movlb	1	; () banked
 18446  003664  EE20 F003          	lfsr	2,3
 18447  003668  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18448  00366A  26D9               	addwf	fsr2l,f,c
 18449  00366C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18450  00366E  22DA               	addwfc	fsr2h,f,c
 18451  003670  50DF               	movf	indf2,w,c
 18452  003672  A4D8               	btfss	status,2,c
 18453  003674  D0A4               	goto	l753
 18454                           
 18455                           ; BSR set to: 1
 18456                           ;miwi_mesh.c: 1415: {
 18457                           ;miwi_mesh.c: 1418: myShortAddress.v[0] = MACRxPacket.Payload[1];
 18458  003676  0101               	movlb	1	; () banked
 18459  003678  EE20 F001          	lfsr	2,1
 18460  00367C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18461  00367E  26D9               	addwf	fsr2l,f,c
 18462  003680  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18463  003682  22DA               	addwfc	fsr2h,f,c
 18464  003684  50DF               	movf	indf2,w,c
 18465  003686  0101               	movlb	1	; () banked
 18466  003688  6FF2               	movwf	_myShortAddress& (0+255),b
 18467                           
 18468                           ;miwi_mesh.c: 1419: myShortAddress.v[1] = MACRxPacket.Payload[2];
 18469  00368A  0101               	movlb	1	; () banked
 18470  00368C  EE20 F002          	lfsr	2,2
 18471  003690  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18472  003692  26D9               	addwf	fsr2l,f,c
 18473  003694  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18474  003696  22DA               	addwfc	fsr2h,f,c
 18475  003698  50DF               	movf	indf2,w,c
 18476  00369A  0101               	movlb	1	; () banked
 18477  00369C  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 18478                           
 18479                           ; BSR set to: 1
 18480                           ;miwi_mesh.c: 1422: if(myShortAddress.v[0] == 0x00)
 18481  00369E  0101               	movlb	1	; () banked
 18482  0036A0  51F2               	movf	_myShortAddress& (0+255),w,b
 18483  0036A2  A4D8               	btfss	status,2,c
 18484  0036A4  D025               	goto	l18530
 18485                           
 18486                           ; BSR set to: 1
 18487                           ;miwi_mesh.c: 1423: {
 18488                           ;miwi_mesh.c: 1424: ;
 18489                           ;miwi_mesh.c: 1425: role = 0x01;
 18490  0036A6  0E01               	movlw	1
 18491  0036A8  0101               	movlb	1	; () banked
 18492  0036AA  6FCA               	movwf	_role& (0+255),b
 18493                           
 18494                           ; BSR set to: 1
 18495                           ;miwi_mesh.c: 1426: MiWiCapacityInfo.bits.Role = role;
 18496  0036AC  C1CA  F14A         	movff	_role,??_MiWiTasks
 18497  0036B0  0101               	movlb	1	; () banked
 18498  0036B2  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 18499  0036B4  0101               	movlb	1	; () banked
 18500  0036B6  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 18501  0036B8  0101               	movlb	1	; () banked
 18502  0036BA  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18503  0036BC  0BF9               	andlw	-7
 18504  0036BE  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18505  0036C0  0101               	movlb	1	; () banked
 18506  0036C2  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 18507                           
 18508                           ; BSR set to: 1
 18509                           ;miwi_mesh.c: 1427: knownCoordinators |= ((1<<(myShortAddress.v[1] & 0x07)) + 1);
 18510  0036C4  C1F3  F14A         	movff	_myShortAddress+1,??_MiWiTasks
 18511  0036C8  0E07               	movlw	7
 18512  0036CA  0101               	movlb	1	; () banked
 18513  0036CC  174A               	andwf	??_MiWiTasks& (0+255),f,b
 18514  0036CE  0E01               	movlw	1
 18515  0036D0  0101               	movlb	1	; () banked
 18516  0036D2  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18517  0036D4  0101               	movlb	1	; () banked
 18518  0036D6  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 18519  0036D8  D003               	goto	u20884
 18520  0036DA                     u20885:
 18521  0036DA  0101               	movlb	1	; () banked
 18522  0036DC  90D8               	bcf	status,0,c
 18523  0036DE  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 18524  0036E0                     u20884:
 18525  0036E0  0101               	movlb	1	; () banked
 18526  0036E2  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 18527  0036E4  D7FA               	goto	u20885
 18528  0036E6  0101               	movlb	1	; () banked
 18529  0036E8  294B               	incf	(??_MiWiTasks+1)& (0+255),w,b
 18530  0036EA  0101               	movlb	1	; () banked
 18531  0036EC  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 18532                           
 18533                           ;miwi_mesh.c: 1429: }
 18534  0036EE  D00F               	goto	l18534
 18535  0036F0                     l18530:
 18536                           
 18537                           ; BSR set to: 1
 18538                           ;miwi_mesh.c: 1430: else
 18539                           ;miwi_mesh.c: 1431: {
 18540                           ;miwi_mesh.c: 1432: ;
 18541                           ;miwi_mesh.c: 1433: role = 0x00;
 18542  0036F0  0E00               	movlw	0
 18543  0036F2  0101               	movlb	1	; () banked
 18544  0036F4  6FCA               	movwf	_role& (0+255),b
 18545                           
 18546                           ; BSR set to: 1
 18547                           ;miwi_mesh.c: 1434: MiWiCapacityInfo.bits.Role = role;
 18548  0036F6  C1CA  F14A         	movff	_role,??_MiWiTasks
 18549  0036FA  0101               	movlb	1	; () banked
 18550  0036FC  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 18551  0036FE  0101               	movlb	1	; () banked
 18552  003700  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 18553  003702  0101               	movlb	1	; () banked
 18554  003704  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18555  003706  0BF9               	andlw	-7
 18556  003708  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18557  00370A  0101               	movlb	1	; () banked
 18558  00370C  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 18559  00370E                     l18534:
 18560                           
 18561                           ; BSR set to: 1
 18562                           ;miwi_mesh.c: 1435: }
 18563                           ;miwi_mesh.c: 1442: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18564  00370E  0EF2               	movlw	low _myShortAddress
 18565  003710  0101               	movlb	1	; () banked
 18566  003712  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18567  003714  0E01               	movlw	high _myShortAddress
 18568  003716  0101               	movlb	1	; () banked
 18569  003718  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18570  00371A  0EF0               	movlw	low _myPANID
 18571  00371C  0101               	movlb	1	; () banked
 18572  00371E  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18573  003720  0E01               	movlw	high _myPANID
 18574  003722  0101               	movlb	1	; () banked
 18575  003724  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18576  003726  ECD9  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 18577                           
 18578                           ;miwi_mesh.c: 1445: MiWiStateMachine.bits.memberOfNetwork = 1;
 18579  00372A  0101               	movlb	1	; () banked
 18580  00372C  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 18581                           
 18582                           ; BSR set to: 1
 18583                           ;miwi_mesh.c: 1448: tempNodeStatus.Val = 0xBF;
 18584  00372E  0EBF               	movlw	191
 18585  003730  0100               	movlb	0	; () banked
 18586  003732  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18587                           
 18588                           ; BSR set to: 0
 18589                           ;miwi_mesh.c: 1449: for(i = 0; i < 4; i++)
 18590  003734  0E00               	movlw	0
 18591  003736  0101               	movlb	1	; () banked
 18592  003738  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18593  00373A                     l18542:
 18594                           
 18595                           ; BSR set to: 1
 18596  00373A  0E03               	movlw	3
 18597  00373C  0101               	movlb	1	; () banked
 18598  00373E  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18599  003740  D001               	goto	l18546
 18600  003742  D019               	goto	l18552
 18601  003744                     l18546:
 18602                           
 18603                           ; BSR set to: 1
 18604                           ;miwi_mesh.c: 1450: {
 18605                           ;miwi_mesh.c: 1451: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18606  003744  0101               	movlb	1	; () banked
 18607  003746  517C               	movf	MiWiTasks@i& (0+255),w,b
 18608  003748  0D01               	mullw	1
 18609  00374A  50F3               	movf	prodl,w,c
 18610  00374C  0101               	movlb	1	; () banked
 18611  00374E  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18612  003750  6ED9               	movwf	fsr2l,c
 18613  003752  50F4               	movf	prodh,w,c
 18614  003754  0101               	movlb	1	; () banked
 18615  003756  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18616  003758  6EDA               	movwf	fsr2h,c
 18617  00375A  0101               	movlb	1	; () banked
 18618  00375C  517C               	movf	MiWiTasks@i& (0+255),w,b
 18619  00375E  0D01               	mullw	1
 18620  003760  0EA6               	movlw	low _tempLongAddress
 18621  003762  24F3               	addwf	prodl,w,c
 18622  003764  6EE1               	movwf	fsr1l,c
 18623  003766  0E01               	movlw	high _tempLongAddress
 18624  003768  20F4               	addwfc	prodh,w,c
 18625  00376A  6EE2               	movwf	fsr1h,c
 18626  00376C  CFDF FFE7          	movff	indf2,indf1
 18627                           
 18628                           ; BSR set to: 1
 18629  003770  0101               	movlb	1	; () banked
 18630  003772  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18631  003774  D7E2               	goto	l18542
 18632  003776                     l18552:
 18633                           
 18634                           ; BSR set to: 1
 18635                           ;miwi_mesh.c: 1452: }
 18636                           ;miwi_mesh.c: 1454: if(myShortAddress.v[0] == 0x00)
 18637  003776  0101               	movlb	1	; () banked
 18638  003778  51F2               	movf	_myShortAddress& (0+255),w,b
 18639  00377A  A4D8               	btfss	status,2,c
 18640  00377C  D005               	goto	l758
 18641                           
 18642                           ; BSR set to: 1
 18643                           ;miwi_mesh.c: 1455: {
 18644                           ;miwi_mesh.c: 1458: tempShortAddress.Val = 0x0000;
 18645  00377E  0E00               	movlw	0
 18646  003780  0101               	movlb	1	; () banked
 18647  003782  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18648  003784  0E00               	movlw	0
 18649  003786  D004               	goto	L6
 18650  003788                     l758:
 18651                           
 18652                           ; BSR set to: 1
 18653                           ;miwi_mesh.c: 1460: else
 18654                           ;miwi_mesh.c: 1461: {
 18655                           ;miwi_mesh.c: 1462: tempShortAddress.v[1] = myShortAddress.v[1];
 18656  003788  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 18657                           
 18658                           ; BSR set to: 1
 18659                           ;miwi_mesh.c: 1463: tempShortAddress.v[0] = 0x00;
 18660  00378C  0E00               	movlw	0
 18661  00378E  0101               	movlb	1	; () banked
 18662  003790                     L6:
 18663  003790  6FF4               	movwf	_tempShortAddress& (0+255),b
 18664                           
 18665                           ; BSR set to: 1
 18666                           ;miwi_mesh.c: 1464: }
 18667                           ;miwi_mesh.c: 1466: tempPANID.Val = myPANID.Val;
 18668                           
 18669                           ; BSR set to: 1
 18670  003792  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18671  003796  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18672                           
 18673                           ; BSR set to: 1
 18674                           ;miwi_mesh.c: 1469: myParent = AddNodeToNetworkTable();
 18675  00379A  EC14  F046         	call	_AddNodeToNetworkTable	;wreg free
 18676  00379E  0101               	movlb	1	; () banked
 18677  0037A0  6FC9               	movwf	_myParent& (0+255),b
 18678                           
 18679                           ; BSR set to: 1
 18680                           ;miwi_mesh.c: 1471: IncomingFrameCounter[myParent].Val = 0;
 18681  0037A2  0101               	movlb	1	; () banked
 18682  0037A4  51C9               	movf	_myParent& (0+255),w,b
 18683  0037A6  0D04               	mullw	4
 18684  0037A8  0E00               	movlw	low _IncomingFrameCounter
 18685  0037AA  24F3               	addwf	prodl,w,c
 18686  0037AC  6ED9               	movwf	fsr2l,c
 18687  0037AE  0E05               	movlw	high _IncomingFrameCounter
 18688  0037B0  20F4               	addwfc	prodh,w,c
 18689  0037B2  6EDA               	movwf	fsr2h,c
 18690  0037B4  6ADE               	clrf	postinc2,c
 18691  0037B6  6ADE               	clrf	postinc2,c
 18692  0037B8  6ADE               	clrf	postinc2,c
 18693  0037BA  6ADD               	clrf	postdec2,c
 18694                           
 18695                           ;miwi_mesh.c: 1491: ;
 18696                           ;miwi_mesh.c: 1492: }
 18697  0037BC  D1A5               	goto	l641
 18698  0037BE                     l753:
 18699                           
 18700                           ; BSR set to: 1
 18701                           ;miwi_mesh.c: 1493: else
 18702                           ;miwi_mesh.c: 1494: {
 18703                           ;miwi_mesh.c: 1496: myParent = 0xFF;
 18704  0037BE  0101               	movlb	1	; () banked
 18705  0037C0  69C9               	setf	_myParent& (0+255),b
 18706                           
 18707                           ;miwi_mesh.c: 1497: myPANID.Val = 0xFFFF;
 18708  0037C2  0101               	movlb	1	; () banked
 18709  0037C4  69F0               	setf	_myPANID& (0+255),b
 18710  0037C6  69F1               	setf	(_myPANID+1)& (0+255),b
 18711                           
 18712                           ;miwi_mesh.c: 1498: tempShortAddress.Val = 0xFFFF;
 18713  0037C8  0101               	movlb	1	; () banked
 18714  0037CA  69F4               	setf	_tempShortAddress& (0+255),b
 18715  0037CC  69F5               	setf	(_tempShortAddress+1)& (0+255),b
 18716                           
 18717                           ; BSR set to: 1
 18718                           ;miwi_mesh.c: 1499: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18719  0037CE  0EF4               	movlw	low _tempShortAddress
 18720  0037D0  0101               	movlb	1	; () banked
 18721  0037D2  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18722  0037D4  0E01               	movlw	high _tempShortAddress
 18723  0037D6  0101               	movlb	1	; () banked
 18724  0037D8  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18725  0037DA  0EF0               	movlw	low _myPANID
 18726  0037DC  0101               	movlb	1	; () banked
 18727  0037DE  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18728  0037E0  0E01               	movlw	high _myPANID
 18729  0037E2  0101               	movlb	1	; () banked
 18730  0037E4  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18731  0037E6  ECD9  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 18732                           
 18733                           ;miwi_mesh.c: 1505: }
 18734                           ;miwi_mesh.c: 1506: }
 18735                           ;miwi_mesh.c: 1507: break;
 18736  0037EA  D18E               	goto	l641
 18737  0037EC                     l18566:
 18738                           
 18739                           ;miwi_mesh.c: 1511: {
 18740                           ;miwi_mesh.c: 1512: uint8_t cIndex;
 18741                           ;miwi_mesh.c: 1527: {
 18742                           ;miwi_mesh.c: 1528: for(i = 0; i < 4; i++)
 18743  0037EC  0E00               	movlw	0
 18744  0037EE  0101               	movlb	1	; () banked
 18745  0037F0  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18746  0037F2                     l18568:
 18747                           
 18748                           ; BSR set to: 1
 18749  0037F2  0E03               	movlw	3
 18750  0037F4  0101               	movlb	1	; () banked
 18751  0037F6  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18752  0037F8  D001               	goto	l18572
 18753  0037FA  D019               	goto	l18578
 18754  0037FC                     l18572:
 18755                           
 18756                           ; BSR set to: 1
 18757                           ;miwi_mesh.c: 1529: {
 18758                           ;miwi_mesh.c: 1530: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18759  0037FC  0101               	movlb	1	; () banked
 18760  0037FE  517C               	movf	MiWiTasks@i& (0+255),w,b
 18761  003800  0D01               	mullw	1
 18762  003802  50F3               	movf	prodl,w,c
 18763  003804  0101               	movlb	1	; () banked
 18764  003806  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18765  003808  6ED9               	movwf	fsr2l,c
 18766  00380A  50F4               	movf	prodh,w,c
 18767  00380C  0101               	movlb	1	; () banked
 18768  00380E  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18769  003810  6EDA               	movwf	fsr2h,c
 18770  003812  0101               	movlb	1	; () banked
 18771  003814  517C               	movf	MiWiTasks@i& (0+255),w,b
 18772  003816  0D01               	mullw	1
 18773  003818  0EA6               	movlw	low _tempLongAddress
 18774  00381A  24F3               	addwf	prodl,w,c
 18775  00381C  6EE1               	movwf	fsr1l,c
 18776  00381E  0E01               	movlw	high _tempLongAddress
 18777  003820  20F4               	addwfc	prodh,w,c
 18778  003822  6EE2               	movwf	fsr1h,c
 18779  003824  CFDF FFE7          	movff	indf2,indf1
 18780                           
 18781                           ; BSR set to: 1
 18782  003828  0101               	movlb	1	; () banked
 18783  00382A  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18784  00382C  D7E2               	goto	l18568
 18785  00382E                     l18578:
 18786                           
 18787                           ; BSR set to: 1
 18788                           ;miwi_mesh.c: 1531: }
 18789                           ;miwi_mesh.c: 1532: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18790  00382E  ECB2  F04E         	call	_SearchForLongAddress	;wreg free
 18791  003832  0101               	movlb	1	; () banked
 18792  003834  6F6B               	movwf	MiWiTasks@cIndex& (0+255),b
 18793  003836  0101               	movlb	1	; () banked
 18794  003838  296B               	incf	MiWiTasks@cIndex& (0+255),w,b
 18795  00383A  B4D8               	btfsc	status,2,c
 18796  00383C  D165               	goto	l641
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;miwi_mesh.c: 1535: }
 18800                           ;miwi_mesh.c: 1536: }
 18801                           ;miwi_mesh.c: 1539: if( ConnectionTable[cIndex].status.bits.isFamily )
 18802                           
 18803                           ; BSR set to: 1
 18804                           
 18805                           ; BSR set to: 1
 18806                           ;miwi_mesh.c: 1533: {
 18807                           ;miwi_mesh.c: 1534: break;
 18808  00383E  0101               	movlb	1	; () banked
 18809  003840  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 18810  003842  0D09               	mullw	9
 18811  003844  0E08               	movlw	8
 18812  003846  26F3               	addwf	prodl,f,c
 18813  003848  0E00               	movlw	0
 18814  00384A  22F4               	addwfc	prodh,f,c
 18815  00384C  0E00               	movlw	low _ConnectionTable
 18816  00384E  24F3               	addwf	prodl,w,c
 18817  003850  6ED9               	movwf	fsr2l,c
 18818  003852  0E06               	movlw	high _ConnectionTable
 18819  003854  20F4               	addwfc	prodh,w,c
 18820  003856  6EDA               	movwf	fsr2h,c
 18821  003858  AADF               	btfss	indf2,5,c
 18822  00385A  D156               	goto	l641
 18823                           
 18824                           ; BSR set to: 1
 18825                           ;miwi_mesh.c: 1540: {
 18826                           ;miwi_mesh.c: 1541: if( cIndex != myParent )
 18827  00385C  0101               	movlb	1	; () banked
 18828  00385E  51C9               	movf	_myParent& (0+255),w,b
 18829  003860  0101               	movlb	1	; () banked
 18830  003862  196B               	xorwf	MiWiTasks@cIndex& (0+255),w,b
 18831  003864  B4D8               	btfsc	status,2,c
 18832  003866  D010               	goto	l18588
 18833                           
 18834                           ; BSR set to: 1
 18835                           ;miwi_mesh.c: 1542: {
 18836                           ;miwi_mesh.c: 1543: ConnectionTable[cIndex].status.Val = 0;
 18837  003868  0101               	movlb	1	; () banked
 18838  00386A  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 18839  00386C  0D09               	mullw	9
 18840  00386E  0E08               	movlw	8
 18841  003870  26F3               	addwf	prodl,f,c
 18842  003872  0E00               	movlw	0
 18843  003874  22F4               	addwfc	prodh,f,c
 18844  003876  0E00               	movlw	low _ConnectionTable
 18845  003878  24F3               	addwf	prodl,w,c
 18846  00387A  6ED9               	movwf	fsr2l,c
 18847  00387C  0E06               	movlw	high _ConnectionTable
 18848  00387E  20F4               	addwfc	prodh,w,c
 18849  003880  6EDA               	movwf	fsr2h,c
 18850  003882  0E00               	movlw	0
 18851  003884  6EDF               	movwf	indf2,c
 18852                           
 18853                           ;miwi_mesh.c: 1547: }
 18854  003886  D140               	goto	l641
 18855  003888                     l18588:
 18856                           
 18857                           ; BSR set to: 1
 18858                           ;miwi_mesh.c: 1548: else
 18859                           ;miwi_mesh.c: 1549: {
 18860                           ;miwi_mesh.c: 1551: for(i = 0; i < 64; i++)
 18861  003888  0E00               	movlw	0
 18862  00388A  0101               	movlb	1	; () banked
 18863  00388C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18864  00388E                     l18590:
 18865                           
 18866                           ; BSR set to: 1
 18867  00388E  0E3F               	movlw	63
 18868  003890  0101               	movlb	1	; () banked
 18869  003892  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18870  003894  D001               	goto	l18594
 18871  003896  D081               	goto	l769
 18872  003898                     l18594:
 18873                           
 18874                           ; BSR set to: 1
 18875                           ;miwi_mesh.c: 1552: {
 18876                           ;miwi_mesh.c: 1553: if( ConnectionTable[i].status.bits.isValid &&
 18877                           ;miwi_mesh.c: 1554: ConnectionTable[i].status.bits.isFamily && (i != myParent ))
 18878  003898  0101               	movlb	1	; () banked
 18879  00389A  517C               	movf	MiWiTasks@i& (0+255),w,b
 18880  00389C  0D09               	mullw	9
 18881  00389E  0E08               	movlw	8
 18882  0038A0  26F3               	addwf	prodl,f,c
 18883  0038A2  0E00               	movlw	0
 18884  0038A4  22F4               	addwfc	prodh,f,c
 18885  0038A6  0E00               	movlw	low _ConnectionTable
 18886  0038A8  24F3               	addwf	prodl,w,c
 18887  0038AA  6ED9               	movwf	fsr2l,c
 18888  0038AC  0E06               	movlw	high _ConnectionTable
 18889  0038AE  20F4               	addwfc	prodh,w,c
 18890  0038B0  6EDA               	movwf	fsr2h,c
 18891  0038B2  AEDF               	btfss	indf2,7,c
 18892  0038B4  D060               	goto	l18628
 18893                           
 18894                           ; BSR set to: 1
 18895  0038B6  0101               	movlb	1	; () banked
 18896  0038B8  517C               	movf	MiWiTasks@i& (0+255),w,b
 18897  0038BA  0D09               	mullw	9
 18898  0038BC  0E08               	movlw	8
 18899  0038BE  26F3               	addwf	prodl,f,c
 18900  0038C0  0E00               	movlw	0
 18901  0038C2  22F4               	addwfc	prodh,f,c
 18902  0038C4  0E00               	movlw	low _ConnectionTable
 18903  0038C6  24F3               	addwf	prodl,w,c
 18904  0038C8  6ED9               	movwf	fsr2l,c
 18905  0038CA  0E06               	movlw	high _ConnectionTable
 18906  0038CC  20F4               	addwfc	prodh,w,c
 18907  0038CE  6EDA               	movwf	fsr2h,c
 18908  0038D0  AADF               	btfss	indf2,5,c
 18909  0038D2  D051               	goto	l18628
 18910                           
 18911                           ; BSR set to: 1
 18912  0038D4  0101               	movlb	1	; () banked
 18913  0038D6  51C9               	movf	_myParent& (0+255),w,b
 18914  0038D8  0101               	movlb	1	; () banked
 18915  0038DA  197C               	xorwf	MiWiTasks@i& (0+255),w,b
 18916  0038DC  B4D8               	btfsc	status,2,c
 18917  0038DE  D04B               	goto	l18628
 18918                           
 18919                           ; BSR set to: 1
 18920                           ;miwi_mesh.c: 1555: {
 18921                           ;miwi_mesh.c: 1556: uint16_t j;
 18922                           ;miwi_mesh.c: 1558: {TxData = 0;};
 18923  0038E0  0E00               	movlw	0
 18924  0038E2  0101               	movlb	1	; () banked
 18925  0038E4  6FC6               	movwf	_TxData& (0+255),b
 18926                           
 18927                           ; BSR set to: 1
 18928                           ;miwi_mesh.c: 1559: TxBuffer[TxData++] = 0x03;
 18929  0038E6  0101               	movlb	1	; () banked
 18930  0038E8  51C6               	movf	_TxData& (0+255),w,b
 18931  0038EA  0D01               	mullw	1
 18932  0038EC  0EA6               	movlw	low _TxBuffer
 18933  0038EE  24F3               	addwf	prodl,w,c
 18934  0038F0  6ED9               	movwf	fsr2l,c
 18935  0038F2  0E02               	movlw	high _TxBuffer
 18936  0038F4  20F4               	addwfc	prodh,w,c
 18937  0038F6  6EDA               	movwf	fsr2h,c
 18938  0038F8  0E03               	movlw	3
 18939  0038FA  6EDF               	movwf	indf2,c
 18940                           
 18941                           ; BSR set to: 1
 18942  0038FC  0101               	movlb	1	; () banked
 18943  0038FE  2BC6               	incf	_TxData& (0+255),f,b
 18944                           
 18945                           ; BSR set to: 1
 18946                           ;miwi_mesh.c: 1560: MTP.flags.Val = 0;
 18947  003900  0E00               	movlw	0
 18948  003902  0101               	movlb	1	; () banked
 18949  003904  6FAD               	movwf	_MTP& (0+255),b
 18950                           
 18951                           ; BSR set to: 1
 18952                           ;miwi_mesh.c: 1561: MTP.flags.bits.ackReq = 1;
 18953  003906  0101               	movlb	1	; () banked
 18954  003908  8BAD               	bsf	_MTP& (0+255),5,b
 18955                           
 18956                           ; BSR set to: 1
 18957                           ;miwi_mesh.c: 1562: MTP.flags.bits.packetType = 0x01;
 18958  00390A  0101               	movlb	1	; () banked
 18959  00390C  51AD               	movf	_MTP& (0+255),w,b
 18960  00390E  0BFC               	andlw	-4
 18961  003910  0901               	iorlw	1
 18962  003912  6FAD               	movwf	_MTP& (0+255),b
 18963                           
 18964                           ; BSR set to: 1
 18965                           ;miwi_mesh.c: 1569: MTP.flags.bits.sourcePrsnt = 1;
 18966  003914  0101               	movlb	1	; () banked
 18967  003916  8FAD               	bsf	_MTP& (0+255),7,b
 18968                           
 18969                           ; BSR set to: 1
 18970                           ;miwi_mesh.c: 1570: MTP.DestAddress = ConnectionTable[i].Address;
 18971  003918  0101               	movlb	1	; () banked
 18972  00391A  517C               	movf	MiWiTasks@i& (0+255),w,b
 18973  00391C  0D09               	mullw	9
 18974  00391E  0E04               	movlw	4
 18975  003920  26F3               	addwf	prodl,f,c
 18976  003922  0E00               	movlw	0
 18977  003924  22F4               	addwfc	prodh,f,c
 18978  003926  0E00               	movlw	low _ConnectionTable
 18979  003928  24F3               	addwf	prodl,w,c
 18980  00392A  0101               	movlb	1	; () banked
 18981  00392C  6FAE               	movwf	(_MTP+1)& (0+255),b
 18982  00392E  0E06               	movlw	high _ConnectionTable
 18983  003930  20F4               	addwfc	prodh,w,c
 18984  003932  0101               	movlb	1	; () banked
 18985  003934  6FAF               	movwf	(_MTP+2)& (0+255),b
 18986                           
 18987                           ; BSR set to: 1
 18988                           ;miwi_mesh.c: 1572: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 18989  003936  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 18990  00393A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 18991  00393E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 18992  003942  0EA6               	movlw	low _TxBuffer
 18993  003944  0101               	movlb	1	; () banked
 18994  003946  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 18995  003948  0E02               	movlw	high _TxBuffer
 18996  00394A  0101               	movlb	1	; () banked
 18997  00394C  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 18998  00394E  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 18999  003952  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 19000                           
 19001                           ;miwi_mesh.c: 1573: for(j = 0; j < 0xFFF; j++) {}
 19002  003956  0E00               	movlw	0
 19003  003958  0101               	movlb	1	; () banked
 19004  00395A  6F6A               	movwf	(MiWiTasks@j_2544+1)& (0+255),b
 19005  00395C  0E00               	movlw	0
 19006  00395E  6F69               	movwf	MiWiTasks@j_2544& (0+255),b
 19007  003960                     l18620:
 19008                           
 19009                           ; BSR set to: 1
 19010  003960  0101               	movlb	1	; () banked
 19011  003962  2969               	incf	MiWiTasks@j_2544& (0+255),w,b
 19012  003964  0E0F               	movlw	15
 19013  003966  0101               	movlb	1	; () banked
 19014  003968  596A               	subwfb	(MiWiTasks@j_2544+1)& (0+255),w,b
 19015  00396A  B0D8               	btfsc	status,0,c
 19016  00396C  D004               	goto	l18628
 19017                           
 19018                           ; BSR set to: 1
 19019                           
 19020                           ; BSR set to: 1
 19021                           
 19022                           ; BSR set to: 1
 19023  00396E  0101               	movlb	1	; () banked
 19024  003970  4B69               	infsnz	MiWiTasks@j_2544& (0+255),f,b
 19025  003972  2B6A               	incf	(MiWiTasks@j_2544+1)& (0+255),f,b
 19026  003974  D7F5               	goto	l18620
 19027  003976                     l18628:
 19028                           
 19029                           ; BSR set to: 1
 19030                           ;miwi_mesh.c: 1574: }
 19031                           ;miwi_mesh.c: 1575: ConnectionTable[i].status.Val = 0;
 19032  003976  0101               	movlb	1	; () banked
 19033  003978  517C               	movf	MiWiTasks@i& (0+255),w,b
 19034  00397A  0D09               	mullw	9
 19035  00397C  0E08               	movlw	8
 19036  00397E  26F3               	addwf	prodl,f,c
 19037  003980  0E00               	movlw	0
 19038  003982  22F4               	addwfc	prodh,f,c
 19039  003984  0E00               	movlw	low _ConnectionTable
 19040  003986  24F3               	addwf	prodl,w,c
 19041  003988  6ED9               	movwf	fsr2l,c
 19042  00398A  0E06               	movlw	high _ConnectionTable
 19043  00398C  20F4               	addwfc	prodh,w,c
 19044  00398E  6EDA               	movwf	fsr2h,c
 19045  003990  0E00               	movlw	0
 19046  003992  6EDF               	movwf	indf2,c
 19047                           
 19048                           ; BSR set to: 1
 19049  003994  0101               	movlb	1	; () banked
 19050  003996  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 19051  003998  D77A               	goto	l18590
 19052  00399A                     l769:
 19053                           
 19054                           ; BSR set to: 1
 19055                           ;miwi_mesh.c: 1576: }
 19056                           ;miwi_mesh.c: 1577: myParent = 0xFF;
 19057  00399A  0101               	movlb	1	; () banked
 19058  00399C  69C9               	setf	_myParent& (0+255),b
 19059                           
 19060                           ;miwi_mesh.c: 1578: myShortAddress.Val = 0xFFFF;
 19061  00399E  0101               	movlb	1	; () banked
 19062  0039A0  69F2               	setf	_myShortAddress& (0+255),b
 19063  0039A2  69F3               	setf	(_myShortAddress+1)& (0+255),b
 19064                           
 19065                           ;miwi_mesh.c: 1579: myPANID.Val = 0xFFFF;
 19066  0039A4  0101               	movlb	1	; () banked
 19067  0039A6  69F0               	setf	_myPANID& (0+255),b
 19068  0039A8  69F1               	setf	(_myPANID+1)& (0+255),b
 19069                           
 19070                           ; BSR set to: 1
 19071                           ;miwi_mesh.c: 1580: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 19072  0039AA  0EF2               	movlw	low _myShortAddress
 19073  0039AC  0101               	movlb	1	; () banked
 19074  0039AE  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 19075  0039B0  0E01               	movlw	high _myShortAddress
 19076  0039B2  0101               	movlb	1	; () banked
 19077  0039B4  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 19078  0039B6  0EF0               	movlw	low _myPANID
 19079  0039B8  0101               	movlb	1	; () banked
 19080  0039BA  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 19081  0039BC  0E01               	movlw	high _myPANID
 19082  0039BE  0101               	movlb	1	; () banked
 19083  0039C0  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 19084  0039C2  ECD9  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 19085                           
 19086                           ;miwi_mesh.c: 1581: MiWiStateMachine.bits.memberOfNetwork = 0;
 19087  0039C6  0101               	movlb	1	; () banked
 19088  0039C8  93B5               	bcf	_MiWiStateMachine& (0+255),1,b
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;miwi_mesh.c: 1588: }
 19092                           ;miwi_mesh.c: 1589: }
 19093                           ;miwi_mesh.c: 1610: }
 19094                           ;miwi_mesh.c: 1611: break;
 19095                           
 19096                           ; BSR set to: 1
 19097  0039CA  D09E               	goto	l641
 19098  0039CC                     l18638:
 19099                           
 19100                           ;miwi_mesh.c: 1665: {
 19101                           ;miwi_mesh.c: 1666: if( ConnMode > 0x02 )
 19102  0039CC  0E02               	movlw	2
 19103  0039CE  0101               	movlb	1	; () banked
 19104  0039D0  65BF               	cpfsgt	_ConnMode& (0+255),b
 19105  0039D2  D001               	goto	l774
 19106  0039D4  D099               	goto	l641
 19107  0039D6                     l774:
 19108                           
 19109                           ; BSR set to: 1
 19110                           ;miwi_mesh.c: 1669: }
 19111                           ;miwi_mesh.c: 1672: if(MiWiStateMachine.bits.memberOfNetwork)
 19112  0039D6  0101               	movlb	1	; () banked
 19113  0039D8  A3B5               	btfss	_MiWiStateMachine& (0+255),1,b
 19114  0039DA  D096               	goto	l641
 19115                           
 19116                           ; BSR set to: 1
 19117                           ;miwi_mesh.c: 1673: {
 19118                           ;miwi_mesh.c: 1674: if( MACRxPacket.Payload[1] != currentChannel )
 19119  0039DC  0101               	movlb	1	; () banked
 19120  0039DE  EE20 F001          	lfsr	2,1
 19121  0039E2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 19122  0039E4  26D9               	addwf	fsr2l,f,c
 19123  0039E6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 19124  0039E8  22DA               	addwfc	fsr2h,f,c
 19125  0039EA  0101               	movlb	1	; () banked
 19126  0039EC  51F6               	movf	_currentChannel& (0+255),w,b
 19127  0039EE  18DE               	xorwf	postinc2,w,c
 19128  0039F0  A4D8               	btfss	status,2,c
 19129  0039F2  D08A               	goto	l641
 19130                           
 19131                           ; BSR set to: 1
 19132                           ;miwi_mesh.c: 1677: }
 19133                           ;miwi_mesh.c: 1681: if(role != 0x00)
 19134                           
 19135                           ; BSR set to: 1
 19136                           
 19137                           ; BSR set to: 1
 19138                           ;miwi_mesh.c: 1675: {
 19139                           ;miwi_mesh.c: 1676: break;
 19140  0039F4  0101               	movlb	1	; () banked
 19141  0039F6  51CA               	movf	_role& (0+255),w,b
 19142  0039F8  B4D8               	btfsc	status,2,c
 19143  0039FA  D086               	goto	l641
 19144                           
 19145                           ; BSR set to: 1
 19146                           ;miwi_mesh.c: 1682: {
 19147                           ;miwi_mesh.c: 1685: if (role == 0x01)
 19148  0039FC  0101               	movlb	1	; () banked
 19149  0039FE  05CA               	decf	_role& (0+255),w,b
 19150  003A00  A4D8               	btfss	status,2,c
 19151  003A02  D05F               	goto	l18666
 19152                           
 19153                           ; BSR set to: 1
 19154                           ;miwi_mesh.c: 1687: {
 19155                           ;miwi_mesh.c: 1691: uint8_t jitter = 20;
 19156  003A04  0E14               	movlw	20
 19157  003A06  0101               	movlb	1	; () banked
 19158  003A08  6F62               	movwf	MiWiTasks@jitter& (0+255),b
 19159                           
 19160                           ;miwi_mesh.c: 1692: MIWI_TICK t1, t2;
 19161                           ;miwi_mesh.c: 1693: while( jitter > 0 )
 19162  003A0A  D04D               	goto	l18662
 19163  003A0C                     l18652:
 19164                           
 19165                           ; BSR set to: 1
 19166                           ;miwi_mesh.c: 1694: {
 19167                           ;miwi_mesh.c: 1695: jitter--;
 19168  003A0C  0101               	movlb	1	; () banked
 19169  003A0E  0762               	decf	MiWiTasks@jitter& (0+255),f,b
 19170                           
 19171                           ; BSR set to: 1
 19172                           ;miwi_mesh.c: 1696: t1 = MiWi_TickGet();
 19173  003A10  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 19174  003A14  C100  F156         	movff	?_MiWi_TickGet,MiWiTasks@t1_2546
 19175  003A18  C101  F157         	movff	?_MiWi_TickGet+1,MiWiTasks@t1_2546+1
 19176  003A1C  C102  F158         	movff	?_MiWi_TickGet+2,MiWiTasks@t1_2546+2
 19177  003A20  C103  F159         	movff	?_MiWi_TickGet+3,MiWiTasks@t1_2546+3
 19178  003A24                     l18656:
 19179                           
 19180                           ;miwi_mesh.c: 1698: {
 19181                           ;miwi_mesh.c: 1699: t2 = MiWi_TickGet();
 19182  003A24  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 19183  003A28  C100  F15A         	movff	?_MiWi_TickGet,MiWiTasks@t2_2557
 19184  003A2C  C101  F15B         	movff	?_MiWi_TickGet+1,MiWiTasks@t2_2557+1
 19185  003A30  C102  F15C         	movff	?_MiWi_TickGet+2,MiWiTasks@t2_2557+2
 19186  003A34  C103  F15D         	movff	?_MiWi_TickGet+3,MiWiTasks@t2_2557+3
 19187                           
 19188                           ;miwi_mesh.c: 1700: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 19189  003A38  C156  F14A         	movff	MiWiTasks@t1_2546,??_MiWiTasks
 19190  003A3C  C157  F14B         	movff	MiWiTasks@t1_2546+1,??_MiWiTasks+1
 19191  003A40  C158  F14C         	movff	MiWiTasks@t1_2546+2,??_MiWiTasks+2
 19192  003A44  C159  F14D         	movff	MiWiTasks@t1_2546+3,??_MiWiTasks+3
 19193  003A48  0101               	movlb	1	; () banked
 19194  003A4A  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19195  003A4C  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19196  003A4E  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19197  003A50  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19198  003A52  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19199  003A54  0E00               	movlw	0
 19200  003A56  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19201  003A58  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19202  003A5A  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19203  003A5C  0101               	movlb	1	; () banked
 19204  003A5E  515A               	movf	MiWiTasks@t2_2557& (0+255),w,b
 19205  003A60  0101               	movlb	1	; () banked
 19206  003A62  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19207  003A64  0101               	movlb	1	; () banked
 19208  003A66  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 19209  003A68  0101               	movlb	1	; () banked
 19210  003A6A  515B               	movf	(MiWiTasks@t2_2557+1)& (0+255),w,b
 19211  003A6C  0101               	movlb	1	; () banked
 19212  003A6E  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19213  003A70  0101               	movlb	1	; () banked
 19214  003A72  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 19215  003A74  0101               	movlb	1	; () banked
 19216  003A76  515C               	movf	(MiWiTasks@t2_2557+2)& (0+255),w,b
 19217  003A78  0101               	movlb	1	; () banked
 19218  003A7A  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19219  003A7C  0101               	movlb	1	; () banked
 19220  003A7E  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 19221  003A80  0101               	movlb	1	; () banked
 19222  003A82  515D               	movf	(MiWiTasks@t2_2557+3)& (0+255),w,b
 19223  003A84  0101               	movlb	1	; () banked
 19224  003A86  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19225  003A88  0101               	movlb	1	; () banked
 19226  003A8A  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 19227  003A8C  0101               	movlb	1	; () banked
 19228  003A8E  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19229  003A90  0101               	movlb	1	; () banked
 19230  003A92  1150               	iorwf	(??_MiWiTasks+6)& (0+255),w,b
 19231  003A94  E108               	bnz	l18662
 19232  003A96  0EF5               	movlw	245
 19233  003A98  0101               	movlb	1	; () banked
 19234  003A9A  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19235  003A9C  0E01               	movlw	1
 19236  003A9E  0101               	movlb	1	; () banked
 19237  003AA0  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19238  003AA2  A0D8               	btfss	status,0,c
 19239  003AA4  D7BF               	goto	l18656
 19240  003AA6                     l18662:
 19241                           
 19242                           ; BSR set to: 1
 19243  003AA6  0101               	movlb	1	; () banked
 19244  003AA8  5162               	movf	MiWiTasks@jitter& (0+255),w,b
 19245  003AAA  0101               	movlb	1	; () banked
 19246  003AAC  A4D8               	btfss	status,2,c
 19247  003AAE  D7AE               	goto	l18652
 19248                           
 19249                           ; BSR set to: 1
 19250                           ;miwi_mesh.c: 1703: }
 19251                           ;miwi_mesh.c: 1704: }
 19252                           ;miwi_mesh.c: 1705: }
 19253                           ;miwi_mesh.c: 1709: BroadcastJitter(20);
 19254                           
 19255                           ; BSR set to: 1
 19256  003AB0  0E14               	movlw	20
 19257  003AB2  ECB8  F051         	call	_BroadcastJitter
 19258                           
 19259                           ;miwi_mesh.c: 1710: BroadcastJitter(20);
 19260  003AB6  0E14               	movlw	20
 19261  003AB8  ECB8  F051         	call	_BroadcastJitter
 19262                           
 19263                           ;miwi_mesh.c: 1711: BroadcastJitter(20);
 19264  003ABC  0E14               	movlw	20
 19265  003ABE  ECB8  F051         	call	_BroadcastJitter
 19266  003AC2                     l18666:
 19267                           
 19268                           ;miwi_mesh.c: 1712: }
 19269                           ;miwi_mesh.c: 1714: SendBeacon();
 19270  003AC2  ECB1  F043         	call	_SendBeacon	;wreg free
 19271                           
 19272                           ;miwi_mesh.c: 1764: }
 19273                           
 19274                           ;miwi_mesh.c: 1763: break;
 19275                           
 19276                           ;miwi_mesh.c: 1762: default:
 19277                           
 19278                           ;miwi_mesh.c: 1715: }
 19279                           ;miwi_mesh.c: 1716: }
 19280                           ;miwi_mesh.c: 1717: }
 19281                           ;miwi_mesh.c: 1718: break;
 19282  003AC6  D020               	goto	l641
 19283  003AC8                     l18670:
 19284  003AC8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 19285  003ACC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 19286  003AD0  50DF               	movf	indf2,w,c
 19287                           
 19288                           ; Switch size 1, requested type "space"
 19289                           ; Number of cases is 4, Range of values is 1 to 7
 19290                           ; switch strategies available:
 19291                           ; Name         Instructions Cycles
 19292                           ; simple_byte           13     7 (average)
 19293                           ;	Chosen strategy is simple_byte
 19294  003AD2  0A01               	xorlw	1	; case 1
 19295  003AD4  B4D8               	btfsc	status,2,c
 19296  003AD6  D4AC               	goto	l18412
 19297  003AD8  0A03               	xorlw	3	; case 2
 19298  003ADA  B4D8               	btfsc	status,2,c
 19299  003ADC  D5C2               	goto	l18518
 19300  003ADE  0A01               	xorlw	1	; case 3
 19301  003AE0  B4D8               	btfsc	status,2,c
 19302  003AE2  D684               	goto	l18566
 19303  003AE4  0A04               	xorlw	4	; case 7
 19304  003AE6  B4D8               	btfsc	status,2,c
 19305  003AE8  D771               	goto	l18638
 19306                           
 19307                           ;miwi_mesh.c: 1770: }
 19308                           
 19309                           ;miwi_mesh.c: 1768: break;
 19310                           
 19311                           ;miwi_mesh.c: 1767: default:
 19312                           
 19313                           ;miwi_mesh.c: 1765: break;
 19314  003AEA  D00E               	goto	l641
 19315  003AEC                     l18674:
 19316  003AEC  0101               	movlb	1	; () banked
 19317  003AEE  519A               	movf	_MACRxPacket& (0+255),w,b
 19318  003AF0  0B03               	andlw	3
 19319                           
 19320                           ; Switch size 1, requested type "space"
 19321                           ; Number of cases is 3, Range of values is 0 to 3
 19322                           ; switch strategies available:
 19323                           ; Name         Instructions Cycles
 19324                           ; simple_byte           10     6 (average)
 19325                           ;	Chosen strategy is simple_byte
 19326  003AF2  0A00               	xorlw	0	; case 0
 19327  003AF4  B4D8               	btfsc	status,2,c
 19328  003AF6  EF38  F012         	goto	l17946
 19329  003AFA  0A01               	xorlw	1	; case 1
 19330  003AFC  B4D8               	btfsc	status,2,c
 19331  003AFE  D7E4               	goto	l18670
 19332  003B00  0A02               	xorlw	2	; case 3
 19333  003B02  B4D8               	btfsc	status,2,c
 19334  003B04  EF63  F017         	goto	l18304
 19335  003B08                     l641:
 19336                           
 19337                           ;miwi_mesh.c: 1772: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 19338  003B08  0101               	movlb	1	; () banked
 19339  003B0A  A5B5               	btfss	_MiWiStateMachine& (0+255),2,b
 19340                           
 19341                           ; BSR set to: 1
 19342                           ;miwi_mesh.c: 1773: {
 19343                           ;miwi_mesh.c: 1774: MiMAC_DiscardPacket();
 19344  003B0C  EC59  F05D         	call	_MiMAC_DiscardPacket	;wreg free
 19345  003B10                     l18678:
 19346                           
 19347                           ;miwi_mesh.c: 1775: }
 19348                           ;miwi_mesh.c: 1776: }
 19349                           ;miwi_mesh.c: 1778: t1 = MiWi_TickGet();
 19350  003B10  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 19351  003B14  C100  F164         	movff	?_MiWi_TickGet,MiWiTasks@t1
 19352  003B18  C101  F165         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 19353  003B1C  C102  F166         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 19354  003B20  C103  F167         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 19355                           
 19356                           ;miwi_mesh.c: 1845: for(i = 0; i < 4; i++)
 19357  003B24  0E00               	movlw	0
 19358  003B26  0101               	movlb	1	; () banked
 19359  003B28  6F7C               	movwf	MiWiTasks@i& (0+255),b
 19360  003B2A                     l18682:
 19361                           
 19362                           ; BSR set to: 1
 19363  003B2A  0E03               	movlw	3
 19364  003B2C  0101               	movlb	1	; () banked
 19365  003B2E  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 19366  003B30  D001               	goto	l18686
 19367  003B32  D067               	goto	l790
 19368  003B34                     l18686:
 19369                           
 19370                           ; BSR set to: 1
 19371                           ;miwi_mesh.c: 1846: {
 19372                           ;miwi_mesh.c: 1847: if( BroadcastRecords[i].RxCounter > 0 )
 19373  003B34  0101               	movlb	1	; () banked
 19374  003B36  517C               	movf	MiWiTasks@i& (0+255),w,b
 19375  003B38  0D08               	mullw	8
 19376  003B3A  0E03               	movlw	3
 19377  003B3C  26F3               	addwf	prodl,f,c
 19378  003B3E  0E00               	movlw	0
 19379  003B40  22F4               	addwfc	prodh,f,c
 19380  003B42  0E28               	movlw	low _BroadcastRecords
 19381  003B44  24F3               	addwf	prodl,w,c
 19382  003B46  6ED9               	movwf	fsr2l,c
 19383  003B48  0E02               	movlw	high _BroadcastRecords
 19384  003B4A  20F4               	addwfc	prodh,w,c
 19385  003B4C  6EDA               	movwf	fsr2h,c
 19386  003B4E  50DF               	movf	indf2,w,c
 19387  003B50  B4D8               	btfsc	status,2,c
 19388  003B52  D054               	goto	l18692
 19389                           
 19390                           ; BSR set to: 1
 19391                           ;miwi_mesh.c: 1848: {
 19392                           ;miwi_mesh.c: 1849: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 19393  003B54  0101               	movlb	1	; () banked
 19394  003B56  517C               	movf	MiWiTasks@i& (0+255),w,b
 19395  003B58  0D08               	mullw	8
 19396  003B5A  0E04               	movlw	4
 19397  003B5C  26F3               	addwf	prodl,f,c
 19398  003B5E  0E00               	movlw	0
 19399  003B60  22F4               	addwfc	prodh,f,c
 19400  003B62  0E28               	movlw	low _BroadcastRecords
 19401  003B64  24F3               	addwf	prodl,w,c
 19402  003B66  6ED9               	movwf	fsr2l,c
 19403  003B68  0E02               	movlw	high _BroadcastRecords
 19404  003B6A  20F4               	addwfc	prodh,w,c
 19405  003B6C  6EDA               	movwf	fsr2h,c
 19406  003B6E  CFDE F14A          	movff	postinc2,??_MiWiTasks
 19407  003B72  CFDE F14B          	movff	postinc2,??_MiWiTasks+1
 19408  003B76  CFDE F14C          	movff	postinc2,??_MiWiTasks+2
 19409  003B7A  CFDE F14D          	movff	postinc2,??_MiWiTasks+3
 19410  003B7E  0101               	movlb	1	; () banked
 19411  003B80  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19412  003B82  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19413  003B84  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19414  003B86  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19415  003B88  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19416  003B8A  0E00               	movlw	0
 19417  003B8C  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19418  003B8E  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19419  003B90  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19420  003B92  0101               	movlb	1	; () banked
 19421  003B94  5164               	movf	MiWiTasks@t1& (0+255),w,b
 19422  003B96  0101               	movlb	1	; () banked
 19423  003B98  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19424  003B9A  0101               	movlb	1	; () banked
 19425  003B9C  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 19426  003B9E  0101               	movlb	1	; () banked
 19427  003BA0  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19428  003BA2  0101               	movlb	1	; () banked
 19429  003BA4  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19430  003BA6  0101               	movlb	1	; () banked
 19431  003BA8  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 19432  003BAA  0101               	movlb	1	; () banked
 19433  003BAC  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19434  003BAE  0101               	movlb	1	; () banked
 19435  003BB0  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19436  003BB2  0101               	movlb	1	; () banked
 19437  003BB4  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 19438  003BB6  0101               	movlb	1	; () banked
 19439  003BB8  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19440  003BBA  0101               	movlb	1	; () banked
 19441  003BBC  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19442  003BBE  0101               	movlb	1	; () banked
 19443  003BC0  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 19444  003BC2  0101               	movlb	1	; () banked
 19445  003BC4  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19446  003BC6  E10B               	bnz	u21140
 19447  003BC8  0E21               	movlw	33
 19448  003BCA  0101               	movlb	1	; () banked
 19449  003BCC  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19450  003BCE  0EA1               	movlw	161
 19451  003BD0  0101               	movlb	1	; () banked
 19452  003BD2  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19453  003BD4  0E07               	movlw	7
 19454  003BD6  0101               	movlb	1	; () banked
 19455  003BD8  5950               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 19456  003BDA  A0D8               	btfss	status,0,c
 19457  003BDC  D00F               	goto	l18692
 19458  003BDE                     u21140:
 19459                           
 19460                           ; BSR set to: 1
 19461                           ;miwi_mesh.c: 1850: {
 19462                           ;miwi_mesh.c: 1851: BroadcastRecords[i].RxCounter = 0;
 19463  003BDE  0101               	movlb	1	; () banked
 19464  003BE0  517C               	movf	MiWiTasks@i& (0+255),w,b
 19465  003BE2  0D08               	mullw	8
 19466  003BE4  0E03               	movlw	3
 19467  003BE6  26F3               	addwf	prodl,f,c
 19468  003BE8  0E00               	movlw	0
 19469  003BEA  22F4               	addwfc	prodh,f,c
 19470  003BEC  0E28               	movlw	low _BroadcastRecords
 19471  003BEE  24F3               	addwf	prodl,w,c
 19472  003BF0  6ED9               	movwf	fsr2l,c
 19473  003BF2  0E02               	movlw	high _BroadcastRecords
 19474  003BF4  20F4               	addwfc	prodh,w,c
 19475  003BF6  6EDA               	movwf	fsr2h,c
 19476  003BF8  0E00               	movlw	0
 19477  003BFA  6EDF               	movwf	indf2,c
 19478  003BFC                     l18692:
 19479                           
 19480                           ; BSR set to: 1
 19481  003BFC  0101               	movlb	1	; () banked
 19482  003BFE  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 19483  003C00  D794               	goto	l18682
 19484  003C02                     l790:
 19485                           
 19486                           ; BSR set to: 1
 19487                           ;miwi_mesh.c: 1852: }
 19488                           ;miwi_mesh.c: 1853: }
 19489                           ;miwi_mesh.c: 1854: }
 19490                           ;miwi_mesh.c: 1858: if(openSocketInfo.status.bits.requestIsOpen)
 19491  003C02  0101               	movlb	1	; () banked
 19492  003C04  A3CC               	btfss	_openSocketInfo& (0+255),1,b
 19493  003C06  0012               	return	
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;miwi_mesh.c: 1859: {
 19497                           ;miwi_mesh.c: 1860: if(openSocketInfo.status.bits.matchFound)
 19498  003C08  0101               	movlb	1	; () banked
 19499  003C0A  A1CC               	btfss	_openSocketInfo& (0+255),0,b
 19500  003C0C  D063               	goto	l18730
 19501                           
 19502                           ; BSR set to: 1
 19503                           ;miwi_mesh.c: 1861: {
 19504                           ;miwi_mesh.c: 1863: uint8_t j;
 19505                           ;miwi_mesh.c: 1865: ;
 19506                           ;miwi_mesh.c: 1867: {TxData = 11;};
 19507  003C0E  0E0B               	movlw	11
 19508  003C10  0101               	movlb	1	; () banked
 19509  003C12  6FC6               	movwf	_TxData& (0+255),b
 19510                           
 19511                           ; BSR set to: 1
 19512                           ;miwi_mesh.c: 1868: TxBuffer[TxData++] = 0x00;
 19513  003C14  0101               	movlb	1	; () banked
 19514  003C16  51C6               	movf	_TxData& (0+255),w,b
 19515  003C18  0D01               	mullw	1
 19516  003C1A  0EA6               	movlw	low _TxBuffer
 19517  003C1C  24F3               	addwf	prodl,w,c
 19518  003C1E  6ED9               	movwf	fsr2l,c
 19519  003C20  0E02               	movlw	high _TxBuffer
 19520  003C22  20F4               	addwfc	prodh,w,c
 19521  003C24  6EDA               	movwf	fsr2h,c
 19522  003C26  0E00               	movlw	0
 19523  003C28  6EDF               	movwf	indf2,c
 19524                           
 19525                           ; BSR set to: 1
 19526  003C2A  0101               	movlb	1	; () banked
 19527  003C2C  2BC6               	incf	_TxData& (0+255),f,b
 19528                           
 19529                           ; BSR set to: 1
 19530                           ;miwi_mesh.c: 1869: TxBuffer[TxData++] = 0x11;
 19531  003C2E  0101               	movlb	1	; () banked
 19532  003C30  51C6               	movf	_TxData& (0+255),w,b
 19533  003C32  0D01               	mullw	1
 19534  003C34  0EA6               	movlw	low _TxBuffer
 19535  003C36  24F3               	addwf	prodl,w,c
 19536  003C38  6ED9               	movwf	fsr2l,c
 19537  003C3A  0E02               	movlw	high _TxBuffer
 19538  003C3C  20F4               	addwfc	prodh,w,c
 19539  003C3E  6EDA               	movwf	fsr2h,c
 19540  003C40  0E11               	movlw	17
 19541  003C42  6EDF               	movwf	indf2,c
 19542                           
 19543                           ; BSR set to: 1
 19544  003C44  0101               	movlb	1	; () banked
 19545  003C46  2BC6               	incf	_TxData& (0+255),f,b
 19546                           
 19547                           ;miwi_mesh.c: 1873: for(j=0;j<4;j++)
 19548  003C48  0E00               	movlw	0
 19549  003C4A  0101               	movlb	1	; () banked
 19550  003C4C  6F6C               	movwf	MiWiTasks@j_2569& (0+255),b
 19551  003C4E                     l18708:
 19552                           
 19553                           ; BSR set to: 1
 19554  003C4E  0E03               	movlw	3
 19555  003C50  0101               	movlb	1	; () banked
 19556  003C52  656C               	cpfsgt	MiWiTasks@j_2569& (0+255),b
 19557  003C54  D001               	goto	l18712
 19558  003C56  D019               	goto	l18720
 19559  003C58                     l18712:
 19560                           
 19561                           ; BSR set to: 1
 19562                           ;miwi_mesh.c: 1874: {
 19563                           ;miwi_mesh.c: 1875: TxBuffer[TxData++] = openSocketInfo.LongAddress1[j];
 19564  003C58  0101               	movlb	1	; () banked
 19565  003C5A  516C               	movf	MiWiTasks@j_2569& (0+255),w,b
 19566  003C5C  0D01               	mullw	1
 19567  003C5E  0ED0               	movlw	low (_openSocketInfo+4)
 19568  003C60  24F3               	addwf	prodl,w,c
 19569  003C62  6ED9               	movwf	fsr2l,c
 19570  003C64  0E01               	movlw	high (_openSocketInfo+4)
 19571  003C66  20F4               	addwfc	prodh,w,c
 19572  003C68  6EDA               	movwf	fsr2h,c
 19573  003C6A  0101               	movlb	1	; () banked
 19574  003C6C  51C6               	movf	_TxData& (0+255),w,b
 19575  003C6E  0D01               	mullw	1
 19576  003C70  0EA6               	movlw	low _TxBuffer
 19577  003C72  24F3               	addwf	prodl,w,c
 19578  003C74  6EE1               	movwf	fsr1l,c
 19579  003C76  0E02               	movlw	high _TxBuffer
 19580  003C78  20F4               	addwfc	prodh,w,c
 19581  003C7A  6EE2               	movwf	fsr1h,c
 19582  003C7C  CFDF FFE7          	movff	indf2,indf1
 19583                           
 19584                           ; BSR set to: 1
 19585  003C80  0101               	movlb	1	; () banked
 19586  003C82  2BC6               	incf	_TxData& (0+255),f,b
 19587                           
 19588                           ; BSR set to: 1
 19589  003C84  0101               	movlb	1	; () banked
 19590  003C86  2B6C               	incf	MiWiTasks@j_2569& (0+255),f,b
 19591  003C88  D7E2               	goto	l18708
 19592  003C8A                     l18720:
 19593                           
 19594                           ; BSR set to: 1
 19595                           ;miwi_mesh.c: 1876: }
 19596                           ;miwi_mesh.c: 1878: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[0];
 19597  003C8A  0101               	movlb	1	; () banked
 19598  003C8C  51C6               	movf	_TxData& (0+255),w,b
 19599  003C8E  0D01               	mullw	1
 19600  003C90  0EA6               	movlw	low _TxBuffer
 19601  003C92  24F3               	addwf	prodl,w,c
 19602  003C94  6ED9               	movwf	fsr2l,c
 19603  003C96  0E02               	movlw	high _TxBuffer
 19604  003C98  20F4               	addwfc	prodh,w,c
 19605  003C9A  6EDA               	movwf	fsr2h,c
 19606  003C9C  C1CE  FFDF         	movff	_openSocketInfo+2,indf2
 19607                           
 19608                           ; BSR set to: 1
 19609  003CA0  0101               	movlb	1	; () banked
 19610  003CA2  2BC6               	incf	_TxData& (0+255),f,b
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;miwi_mesh.c: 1879: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[1];
 19614  003CA4  0101               	movlb	1	; () banked
 19615  003CA6  51C6               	movf	_TxData& (0+255),w,b
 19616  003CA8  0D01               	mullw	1
 19617  003CAA  0EA6               	movlw	low _TxBuffer
 19618  003CAC  24F3               	addwf	prodl,w,c
 19619  003CAE  6ED9               	movwf	fsr2l,c
 19620  003CB0  0E02               	movlw	high _TxBuffer
 19621  003CB2  20F4               	addwfc	prodh,w,c
 19622  003CB4  6EDA               	movwf	fsr2h,c
 19623  003CB6  C1CF  FFDF         	movff	_openSocketInfo+3,indf2
 19624  003CBA  0101               	movlb	1	; () banked
 19625  003CBC  2BC6               	incf	_TxData& (0+255),f,b
 19626                           
 19627                           ; BSR set to: 1
 19628                           ;miwi_mesh.c: 1889: UnicastShortAddress(openSocketInfo.ShortAddress2.v);
 19629  003CBE  0ED4               	movlw	low (_openSocketInfo+8)
 19630  003CC0  0101               	movlb	1	; () banked
 19631  003CC2  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 19632  003CC4  0E01               	movlw	high (_openSocketInfo+8)
 19633  003CC6  0101               	movlb	1	; () banked
 19634  003CC8  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 19635  003CCA  EC61  F056         	call	_UnicastShortAddress	;wreg free
 19636                           
 19637                           ;miwi_mesh.c: 1890: openSocketInfo.status.bits.requestIsOpen = 0;
 19638  003CCE  0101               	movlb	1	; () banked
 19639  003CD0  93CC               	bcf	_openSocketInfo& (0+255),1,b
 19640                           
 19641                           ;miwi_mesh.c: 1894: }
 19642  003CD2  0012               	return	
 19643  003CD4                     l18730:
 19644                           
 19645                           ; BSR set to: 1
 19646                           ;miwi_mesh.c: 1895: else
 19647                           ;miwi_mesh.c: 1896: {
 19648                           ;miwi_mesh.c: 1897: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 19649  003CD4  C1DA  F14A         	movff	_openSocketInfo+14,??_MiWiTasks
 19650  003CD8  C1DB  F14B         	movff	_openSocketInfo+15,??_MiWiTasks+1
 19651  003CDC  C1DC  F14C         	movff	_openSocketInfo+16,??_MiWiTasks+2
 19652  003CE0  C1DD  F14D         	movff	_openSocketInfo+17,??_MiWiTasks+3
 19653  003CE4  0101               	movlb	1	; () banked
 19654  003CE6  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19655  003CE8  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19656  003CEA  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19657  003CEC  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19658  003CEE  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19659  003CF0  0E00               	movlw	0
 19660  003CF2  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19661  003CF4  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19662  003CF6  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19663  003CF8  0101               	movlb	1	; () banked
 19664  003CFA  5164               	movf	MiWiTasks@t1& (0+255),w,b
 19665  003CFC  0101               	movlb	1	; () banked
 19666  003CFE  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19667  003D00  0101               	movlb	1	; () banked
 19668  003D02  6F52               	movwf	MiWiTasks@t2& (0+255),b
 19669  003D04  0101               	movlb	1	; () banked
 19670  003D06  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19671  003D08  0101               	movlb	1	; () banked
 19672  003D0A  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19673  003D0C  0101               	movlb	1	; () banked
 19674  003D0E  6F53               	movwf	(MiWiTasks@t2+1)& (0+255),b
 19675  003D10  0101               	movlb	1	; () banked
 19676  003D12  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19677  003D14  0101               	movlb	1	; () banked
 19678  003D16  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19679  003D18  0101               	movlb	1	; () banked
 19680  003D1A  6F54               	movwf	(MiWiTasks@t2+2)& (0+255),b
 19681  003D1C  0101               	movlb	1	; () banked
 19682  003D1E  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19683  003D20  0101               	movlb	1	; () banked
 19684  003D22  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19685  003D24  0101               	movlb	1	; () banked
 19686  003D26  6F55               	movwf	(MiWiTasks@t2+3)& (0+255),b
 19687                           
 19688                           ;miwi_mesh.c: 1899: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 19689  003D28  0101               	movlb	1	; () banked
 19690  003D2A  5155               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 19691  003D2C  E10B               	bnz	u21200
 19692  003D2E  0E61               	movlw	97
 19693  003D30  0101               	movlb	1	; () banked
 19694  003D32  5D52               	subwf	MiWiTasks@t2& (0+255),w,b
 19695  003D34  0EE3               	movlw	227
 19696  003D36  0101               	movlb	1	; () banked
 19697  003D38  5953               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 19698  003D3A  0E16               	movlw	22
 19699  003D3C  0101               	movlb	1	; () banked
 19700  003D3E  5954               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 19701  003D40  A0D8               	btfss	status,0,c
 19702  003D42  0012               	return	
 19703  003D44                     u21200:
 19704                           
 19705                           ; BSR set to: 1
 19706                           ;miwi_mesh.c: 1900: {
 19707                           ;miwi_mesh.c: 1902: openSocketInfo.status.bits.requestIsOpen = 0;
 19708  003D44  0101               	movlb	1	; () banked
 19709  003D46  93CC               	bcf	_openSocketInfo& (0+255),1,b
 19710                           
 19711                           ; BSR set to: 1
 19712                           
 19713                           ; BSR set to: 1
 19714  003D48  0012               	return	
 19715  003D4A                     __end_of_MiWiTasks:
 19716                           	opt stack 0
 19717                           tblptru	equ	0xFF8
 19718                           tblptrh	equ	0xFF7
 19719                           tblptrl	equ	0xFF6
 19720                           tablat	equ	0xFF5
 19721                           prodh	equ	0xFF4
 19722                           prodl	equ	0xFF3
 19723                           intcon	equ	0xFF2
 19724                           intcon2	equ	0xFF1
 19725                           intcon3	equ	0xFF0
 19726                           indf0	equ	0xFEF
 19727                           postinc0	equ	0xFEE
 19728                           plusw0	equ	0xFEB
 19729                           fsr0h	equ	0xFEA
 19730                           fsr0l	equ	0xFE9
 19731                           wreg	equ	0xFE8
 19732                           indf1	equ	0xFE7
 19733                           postinc1	equ	0xFE6
 19734                           postdec1	equ	0xFE5
 19735                           fsr1h	equ	0xFE2
 19736                           fsr1l	equ	0xFE1
 19737                           indf2	equ	0xFDF
 19738                           postinc2	equ	0xFDE
 19739                           postdec2	equ	0xFDD
 19740                           plusw2	equ	0xFDB
 19741                           fsr2h	equ	0xFDA
 19742                           fsr2l	equ	0xFD9
 19743                           status	equ	0xFD8
 19744                           
 19745 ;; *************** function _UnicastShortAddress *****************
 19746 ;; Defined at:
 19747 ;;		line 4508 in file "src/miwi/miwi_mesh.c"
 19748 ;; Parameters:    Size  Location     Type
 19749 ;;  DestAddress     2   72[BANK1 ] PTR unsigned char 
 19750 ;;		 -> openSocketInfo.ShortAddress2(2), openSocketInfo.ShortAddress1(2), openSocketInfo(18), 
 19751 ;; Auto vars:     Size  Location     Type
 19752 ;;		None
 19753 ;; Return value:  Size  Location     Type
 19754 ;;                  1    wreg      unsigned char 
 19755 ;; Registers used:
 19756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19757 ;; Tracked objects:
 19758 ;;		On entry : 0/0
 19759 ;;		On exit  : 0/0
 19760 ;;		Unchanged: 0/0
 19761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19762 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19765 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19766 ;;Total ram usage:        2 bytes
 19767 ;; Hardware stack levels used:    1
 19768 ;; Hardware stack levels required when called:   24
 19769 ;; This function calls:
 19770 ;;		_RouteMessage
 19771 ;; This function is called by:
 19772 ;;		_MiWiTasks
 19773 ;; This function uses a non-reentrant model
 19774 ;;
 19775                           
 19776                           	psect	text42
 19777  00ACC2                     __ptext42:
 19778                           	opt stack 0
 19779  00ACC2                     _UnicastShortAddress:
 19780                           	opt stack 5
 19781                           
 19782                           ;miwi_mesh.c: 4510: TxBuffer[0] = 4;
 19783                           
 19784                           ; BSR set to: 1
 19785                           ;incstack = 0
 19786  00ACC2  0E04               	movlw	4
 19787  00ACC4  0102               	movlb	2	; () banked
 19788  00ACC6  6FA6               	movwf	_TxBuffer& (0+255),b
 19789                           
 19790                           ;miwi_mesh.c: 4511: TxBuffer[1] = 0x02;
 19791  00ACC8  0E02               	movlw	2
 19792  00ACCA  0102               	movlb	2	; () banked
 19793  00ACCC  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 19794                           
 19795                           ; BSR set to: 2
 19796                           ;miwi_mesh.c: 4512: TxBuffer[2] = myPANID.v[0];
 19797  00ACCE  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 19798                           
 19799                           ; BSR set to: 2
 19800                           ;miwi_mesh.c: 4513: TxBuffer[3] = myPANID.v[1];
 19801  00ACD2  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 19802                           
 19803                           ; BSR set to: 2
 19804                           ;miwi_mesh.c: 4514: TxBuffer[4] = DestAddress[0];
 19805  00ACD6  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 19806  00ACDA  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 19807  00ACDE  50DF               	movf	indf2,w,c
 19808  00ACE0  0102               	movlb	2	; () banked
 19809  00ACE2  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 19810                           
 19811                           ; BSR set to: 2
 19812                           ;miwi_mesh.c: 4515: TxBuffer[5] = DestAddress[1];
 19813  00ACE4  0101               	movlb	1	; () banked
 19814  00ACE6  EE20 F001          	lfsr	2,1
 19815  00ACEA  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 19816  00ACEC  26D9               	addwf	fsr2l,f,c
 19817  00ACEE  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 19818  00ACF0  22DA               	addwfc	fsr2h,f,c
 19819  00ACF2  50DF               	movf	indf2,w,c
 19820  00ACF4  0102               	movlb	2	; () banked
 19821  00ACF6  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 19822                           
 19823                           ; BSR set to: 2
 19824                           ;miwi_mesh.c: 4516: TxBuffer[6] = myPANID.v[0];
 19825  00ACF8  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 19826                           
 19827                           ; BSR set to: 2
 19828                           ;miwi_mesh.c: 4517: TxBuffer[7] = myPANID.v[1];
 19829  00ACFC  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 19830                           
 19831                           ; BSR set to: 2
 19832                           ;miwi_mesh.c: 4518: TxBuffer[8] = myShortAddress.v[0];
 19833  00AD00  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 19834                           
 19835                           ; BSR set to: 2
 19836                           ;miwi_mesh.c: 4519: TxBuffer[9] = myShortAddress.v[1];
 19837  00AD04  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 19838                           
 19839                           ; BSR set to: 2
 19840                           ;miwi_mesh.c: 4520: TxBuffer[10] = MiWiSeqNum++;
 19841  00AD08  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 19842                           
 19843                           ; BSR set to: 2
 19844  00AD0C  0101               	movlb	1	; () banked
 19845  00AD0E  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 19846                           
 19847                           ; BSR set to: 1
 19848                           ;miwi_mesh.c: 4523: tempShortAddress.v[0] = DestAddress[0];
 19849  00AD10  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 19850  00AD14  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 19851  00AD18  50DF               	movf	indf2,w,c
 19852  00AD1A  0101               	movlb	1	; () banked
 19853  00AD1C  6FF4               	movwf	_tempShortAddress& (0+255),b
 19854                           
 19855                           ; BSR set to: 1
 19856                           ;miwi_mesh.c: 4524: tempShortAddress.v[1] = DestAddress[1];
 19857  00AD1E  0101               	movlb	1	; () banked
 19858  00AD20  EE20 F001          	lfsr	2,1
 19859  00AD24  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 19860  00AD26  26D9               	addwf	fsr2l,f,c
 19861  00AD28  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 19862  00AD2A  22DA               	addwfc	fsr2h,f,c
 19863  00AD2C  50DF               	movf	indf2,w,c
 19864  00AD2E  0101               	movlb	1	; () banked
 19865  00AD30  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 19866                           
 19867                           ; BSR set to: 1
 19868                           ;miwi_mesh.c: 4525: if( 0 == RouteMessage(myPANID, tempShortAddress, 0) )
 19869  00AD32  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 19870  00AD36  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 19871  00AD3A  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 19872  00AD3E  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 19873  00AD42  0E00               	movlw	0
 19874  00AD44  0101               	movlb	1	; () banked
 19875  00AD46  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 19876  00AD48  EC07  F024         	call	_RouteMessage	;wreg free
 19877  00AD4C  0900               	iorlw	0
 19878  00AD4E  A4D8               	btfss	status,2,c
 19879  00AD50  0012               	return	
 19880                           
 19881                           ;miwi_mesh.c: 4526: {
 19882                           ;miwi_mesh.c: 4527: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 19883  00AD52  0101               	movlb	1	; () banked
 19884  00AD54  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 19885                           
 19886                           ;miwi_mesh.c: 4528: return 0;
 19887                           ;	Return value of _UnicastShortAddress is never used
 19888  00AD56  0012               	return	
 19889  00AD58                     __end_of_UnicastShortAddress:
 19890                           	opt stack 0
 19891                           tblptru	equ	0xFF8
 19892                           tblptrh	equ	0xFF7
 19893                           tblptrl	equ	0xFF6
 19894                           tablat	equ	0xFF5
 19895                           prodh	equ	0xFF4
 19896                           prodl	equ	0xFF3
 19897                           intcon	equ	0xFF2
 19898                           intcon2	equ	0xFF1
 19899                           intcon3	equ	0xFF0
 19900                           indf0	equ	0xFEF
 19901                           postinc0	equ	0xFEE
 19902                           plusw0	equ	0xFEB
 19903                           fsr0h	equ	0xFEA
 19904                           fsr0l	equ	0xFE9
 19905                           wreg	equ	0xFE8
 19906                           indf1	equ	0xFE7
 19907                           postinc1	equ	0xFE6
 19908                           postdec1	equ	0xFE5
 19909                           fsr1h	equ	0xFE2
 19910                           fsr1l	equ	0xFE1
 19911                           indf2	equ	0xFDF
 19912                           postinc2	equ	0xFDE
 19913                           postdec2	equ	0xFDD
 19914                           plusw2	equ	0xFDB
 19915                           fsr2h	equ	0xFDA
 19916                           fsr2l	equ	0xFD9
 19917                           status	equ	0xFD8
 19918                           
 19919 ;; *************** function _RouteMessage *****************
 19920 ;; Defined at:
 19921 ;;		line 1932 in file "src/miwi/miwi_mesh.c"
 19922 ;; Parameters:    Size  Location     Type
 19923 ;;  PANID           2   61[BANK1 ] struct .
 19924 ;;  ShortAddress    2   63[BANK1 ] struct .
 19925 ;;  SecEn           1   65[BANK1 ] unsigned char 
 19926 ;; Auto vars:     Size  Location     Type
 19927 ;;  j               1   69[BANK1 ] unsigned char 
 19928 ;;  i               1   71[BANK1 ] unsigned char 
 19929 ;;  parentNode      1   70[BANK1 ] unsigned char 
 19930 ;; Return value:  Size  Location     Type
 19931 ;;                  1    wreg      unsigned char 
 19932 ;; Registers used:
 19933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19934 ;; Tracked objects:
 19935 ;;		On entry : 0/0
 19936 ;;		On exit  : 0/0
 19937 ;;		Unchanged: 0/0
 19938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19939 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19940 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19941 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19942 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19943 ;;Total ram usage:       11 bytes
 19944 ;; Hardware stack levels used:    1
 19945 ;; Hardware stack levels required when called:   23
 19946 ;; This function calls:
 19947 ;;		_MiMAC_SendPacket
 19948 ;;		_SearchForShortAddress
 19949 ;;		_SendBeacon
 19950 ;;		_SendMACPacket
 19951 ;; This function is called by:
 19952 ;;		_MiWiTasks
 19953 ;;		_UnicastShortAddress
 19954 ;;		_MiApp_UnicastAddress
 19955 ;;		_MiApp_UnicastConnection
 19956 ;; This function uses a non-reentrant model
 19957 ;;
 19958                           
 19959                           	psect	text43
 19960  00480E                     __ptext43:
 19961                           	opt stack 0
 19962  00480E                     _RouteMessage:
 19963                           	opt stack 5
 19964                           
 19965                           ;miwi_mesh.c: 1934: uint8_t parentNode = (ShortAddress.v[1] & 0x07);
 19966                           
 19967                           ;incstack = 0
 19968  00480E  0101               	movlb	1	; () banked
 19969  004810  5140               	movf	(RouteMessage@ShortAddress+1)& (0+255),w,b
 19970  004812  0B07               	andlw	7
 19971  004814  0101               	movlb	1	; () banked
 19972  004816  6F46               	movwf	RouteMessage@parentNode& (0+255),b
 19973                           
 19974                           ;miwi_mesh.c: 1935: uint8_t i;
 19975                           ;miwi_mesh.c: 1937: if( parentNode == myShortAddress.v[1] )
 19976  004818  0101               	movlb	1	; () banked
 19977  00481A  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 19978  00481C  0101               	movlb	1	; () banked
 19979  00481E  19F3               	xorwf	(_myShortAddress+1)& (0+255),w,b
 19980  004820  A4D8               	btfss	status,2,c
 19981  004822  D042               	goto	l17246
 19982                           
 19983                           ; BSR set to: 1
 19984                           ;miwi_mesh.c: 1938: {
 19985                           ;miwi_mesh.c: 1940: if( ShortAddress.v[0] > 0x80 )
 19986  004824  0E80               	movlw	128
 19987  004826  0101               	movlb	1	; () banked
 19988  004828  653F               	cpfsgt	RouteMessage@ShortAddress& (0+255),b
 19989  00482A  D002               	goto	l17226
 19990                           
 19991                           ; BSR set to: 1
 19992                           ;miwi_mesh.c: 1941: {
 19993                           ;miwi_mesh.c: 1956: return 0;
 19994  00482C  0E00               	movlw	0
 19995                           
 19996                           ; BSR set to: 1
 19997  00482E  0012               	return	
 19998  004830                     l17226:
 19999                           
 20000                           ; BSR set to: 1
 20001                           ;miwi_mesh.c: 1959: else
 20002                           ;miwi_mesh.c: 1960: {
 20003                           ;miwi_mesh.c: 1961: MTP.flags.Val = 0;
 20004  004830  0E00               	movlw	0
 20005  004832  0101               	movlb	1	; () banked
 20006  004834  6FAD               	movwf	_MTP& (0+255),b
 20007                           
 20008                           ; BSR set to: 1
 20009                           ;miwi_mesh.c: 1962: MTP.flags.bits.ackReq = 1;
 20010  004836  0101               	movlb	1	; () banked
 20011  004838  8BAD               	bsf	_MTP& (0+255),5,b
 20012                           
 20013                           ; BSR set to: 1
 20014                           ;miwi_mesh.c: 1963: MTP.flags.bits.secEn = SecEn;
 20015  00483A  0101               	movlb	1	; () banked
 20016  00483C  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20017  00483E  D003               	bra	u18795
 20018  004840  0101               	movlb	1	; () banked
 20019  004842  97AD               	bcf	_MTP& (0+255),3,b
 20020  004844  D002               	bra	u18796
 20021  004846                     u18795:
 20022  004846  0101               	movlb	1	; () banked
 20023  004848  87AD               	bsf	_MTP& (0+255),3,b
 20024  00484A                     u18796:
 20025                           
 20026                           ; BSR set to: 1
 20027                           ;miwi_mesh.c: 1965: tempShortAddress.Val = ShortAddress.Val;
 20028  00484A  C13F  F1F4         	movff	RouteMessage@ShortAddress,_tempShortAddress
 20029  00484E  C140  F1F5         	movff	RouteMessage@ShortAddress+1,_tempShortAddress+1
 20030                           
 20031                           ; BSR set to: 1
 20032                           ;miwi_mesh.c: 1973: if( (i = SearchForShortAddress()) != 0xFF )
 20033  004852  EC85  F057         	call	_SearchForShortAddress	;wreg free
 20034  004856  0101               	movlb	1	; () banked
 20035  004858  6F47               	movwf	RouteMessage@i& (0+255),b
 20036  00485A  0101               	movlb	1	; () banked
 20037  00485C  2947               	incf	RouteMessage@i& (0+255),w,b
 20038  00485E  B4D8               	btfsc	status,2,c
 20039  004860  D010               	goto	l17238
 20040                           
 20041                           ; BSR set to: 1
 20042                           ;miwi_mesh.c: 1974: {
 20043                           ;miwi_mesh.c: 1975: MTP.DestAddress = ConnectionTable[i].Address;
 20044  004862  0101               	movlb	1	; () banked
 20045  004864  5147               	movf	RouteMessage@i& (0+255),w,b
 20046  004866  0D09               	mullw	9
 20047  004868  0E04               	movlw	4
 20048  00486A  26F3               	addwf	prodl,f,c
 20049  00486C  0E00               	movlw	0
 20050  00486E  22F4               	addwfc	prodh,f,c
 20051  004870  0E00               	movlw	low _ConnectionTable
 20052  004872  24F3               	addwf	prodl,w,c
 20053  004874  0101               	movlb	1	; () banked
 20054  004876  6FAE               	movwf	(_MTP+1)& (0+255),b
 20055  004878  0E06               	movlw	high _ConnectionTable
 20056  00487A  20F4               	addwfc	prodh,w,c
 20057  00487C  0101               	movlb	1	; () banked
 20058  00487E  6FAF               	movwf	(_MTP+2)& (0+255),b
 20059                           
 20060                           ;miwi_mesh.c: 1976: }
 20061  004880  D002               	goto	l17242
 20062  004882                     l17238:
 20063                           
 20064                           ; BSR set to: 1
 20065                           ;miwi_mesh.c: 1977: else
 20066                           ;miwi_mesh.c: 1978: {
 20067                           ;miwi_mesh.c: 1981: return 0;
 20068  004882  0E00               	movlw	0
 20069                           
 20070                           ; BSR set to: 1
 20071  004884  0012               	return	
 20072  004886                     l17242:
 20073                           
 20074                           ; BSR set to: 1
 20075                           ;miwi_mesh.c: 1982: }
 20076                           ;miwi_mesh.c: 1984: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 20077  004886  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20078  00488A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20079  00488E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20080  004892  0EA6               	movlw	low _TxBuffer
 20081  004894  0101               	movlb	1	; () banked
 20082  004896  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20083  004898  0E02               	movlw	high _TxBuffer
 20084  00489A  0101               	movlb	1	; () banked
 20085  00489C  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20086  00489E  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20087  0048A2  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 20088  0048A6  0012               	return	
 20089  0048A8                     l17246:
 20090                           
 20091                           ;miwi_mesh.c: 1985: }
 20092                           ;miwi_mesh.c: 1986: }
 20093                           ;miwi_mesh.c: 1988: if( (knownCoordinators & (1 << parentNode) ) > 0 )
 20094  0048A8  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 20095  0048AC  0E01               	movlw	1
 20096  0048AE  0101               	movlb	1	; () banked
 20097  0048B0  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20098  0048B2  0101               	movlb	1	; () banked
 20099  0048B4  2B42               	incf	??_RouteMessage& (0+255),f,b
 20100  0048B6  D003               	goto	u18814
 20101  0048B8                     u18815:
 20102  0048B8  0101               	movlb	1	; () banked
 20103  0048BA  90D8               	bcf	status,0,c
 20104  0048BC  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20105  0048BE                     u18814:
 20106  0048BE  0101               	movlb	1	; () banked
 20107  0048C0  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20108  0048C2  D7FA               	goto	u18815
 20109  0048C4  0101               	movlb	1	; () banked
 20110  0048C6  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20111  0048C8  0101               	movlb	1	; () banked
 20112  0048CA  15C7               	andwf	_knownCoordinators& (0+255),w,b
 20113  0048CC  0900               	iorlw	0
 20114  0048CE  B4D8               	btfsc	status,2,c
 20115  0048D0  D08D               	goto	l17292
 20116                           
 20117                           ; BSR set to: 1
 20118                           ;miwi_mesh.c: 1989: {
 20119                           ;miwi_mesh.c: 1990: if( RouterFailures[parentNode] >= 3 )
 20120  0048D2  0101               	movlb	1	; () banked
 20121  0048D4  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20122  0048D6  0D01               	mullw	1
 20123  0048D8  0E69               	movlw	low _RouterFailures
 20124  0048DA  24F3               	addwf	prodl,w,c
 20125  0048DC  6ED9               	movwf	fsr2l,c
 20126  0048DE  0E00               	movlw	high _RouterFailures
 20127  0048E0  20F4               	addwfc	prodh,w,c
 20128  0048E2  6EDA               	movwf	fsr2h,c
 20129  0048E4  0E02               	movlw	2
 20130  0048E6  64DF               	cpfsgt	indf2,c
 20131  0048E8  D02D               	goto	l17264
 20132                           
 20133                           ; BSR set to: 1
 20134                           ;miwi_mesh.c: 1991: {
 20135                           ;miwi_mesh.c: 1992: RouterFailures[parentNode] = 0;
 20136  0048EA  0101               	movlb	1	; () banked
 20137  0048EC  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20138  0048EE  0D01               	mullw	1
 20139  0048F0  0E69               	movlw	low _RouterFailures
 20140  0048F2  24F3               	addwf	prodl,w,c
 20141  0048F4  6ED9               	movwf	fsr2l,c
 20142  0048F6  0E00               	movlw	high _RouterFailures
 20143  0048F8  20F4               	addwfc	prodh,w,c
 20144  0048FA  6EDA               	movwf	fsr2h,c
 20145  0048FC  0E00               	movlw	0
 20146  0048FE  6EDF               	movwf	indf2,c
 20147                           
 20148                           ; BSR set to: 1
 20149                           ;miwi_mesh.c: 1993: knownCoordinators &= ((1<<parentNode) ^ 0xFF);
 20150  004900  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 20151  004904  0E01               	movlw	1
 20152  004906  0101               	movlb	1	; () banked
 20153  004908  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20154  00490A  0101               	movlb	1	; () banked
 20155  00490C  2B42               	incf	??_RouteMessage& (0+255),f,b
 20156  00490E  D003               	goto	u18844
 20157  004910                     u18845:
 20158  004910  0101               	movlb	1	; () banked
 20159  004912  90D8               	bcf	status,0,c
 20160  004914  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20161  004916                     u18844:
 20162  004916  0101               	movlb	1	; () banked
 20163  004918  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20164  00491A  D7FA               	goto	u18845
 20165  00491C  0101               	movlb	1	; () banked
 20166  00491E  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20167  004920  0AFF               	xorlw	255
 20168  004922  0101               	movlb	1	; () banked
 20169  004924  17C7               	andwf	_knownCoordinators& (0+255),f,b
 20170                           
 20171                           ; BSR set to: 1
 20172                           ;miwi_mesh.c: 1994: RoutingTable[parentNode] = 0;
 20173  004926  0101               	movlb	1	; () banked
 20174  004928  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20175  00492A  0D01               	mullw	1
 20176  00492C  0E71               	movlw	low _RoutingTable
 20177  00492E  24F3               	addwf	prodl,w,c
 20178  004930  6ED9               	movwf	fsr2l,c
 20179  004932  0E00               	movlw	high _RoutingTable
 20180  004934  20F4               	addwfc	prodh,w,c
 20181  004936  6EDA               	movwf	fsr2h,c
 20182  004938  0E00               	movlw	0
 20183  00493A  6EDF               	movwf	indf2,c
 20184                           
 20185                           ; BSR set to: 1
 20186                           ;miwi_mesh.c: 1999: SendBeacon();
 20187  00493C  ECB1  F043         	call	_SendBeacon	;wreg free
 20188  004940                     l17258:
 20189                           
 20190                           ;miwi_mesh.c: 2000: return 0;
 20191  004940  0E00               	movlw	0
 20192  004942  0012               	return	
 20193  004944                     l17264:
 20194                           
 20195                           ;miwi_mesh.c: 2002: else
 20196                           ;miwi_mesh.c: 2003: {
 20197                           ;miwi_mesh.c: 2005: MTP.flags.Val = 0;
 20198  004944  0E00               	movlw	0
 20199  004946  0101               	movlb	1	; () banked
 20200  004948  6FAD               	movwf	_MTP& (0+255),b
 20201                           
 20202                           ; BSR set to: 1
 20203                           ;miwi_mesh.c: 2006: MTP.flags.bits.ackReq = 1;
 20204  00494A  0101               	movlb	1	; () banked
 20205  00494C  8BAD               	bsf	_MTP& (0+255),5,b
 20206                           
 20207                           ; BSR set to: 1
 20208                           ;miwi_mesh.c: 2007: MTP.flags.bits.secEn = SecEn;
 20209  00494E  0101               	movlb	1	; () banked
 20210  004950  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20211  004952  D003               	bra	u18855
 20212  004954  0101               	movlb	1	; () banked
 20213  004956  97AD               	bcf	_MTP& (0+255),3,b
 20214  004958  D002               	bra	u18856
 20215  00495A                     u18855:
 20216  00495A  0101               	movlb	1	; () banked
 20217  00495C  87AD               	bsf	_MTP& (0+255),3,b
 20218  00495E                     u18856:
 20219                           
 20220                           ;miwi_mesh.c: 2008: tempShortAddress.v[0] = 0;
 20221  00495E  0E00               	movlw	0
 20222  004960  0101               	movlb	1	; () banked
 20223  004962  6FF4               	movwf	_tempShortAddress& (0+255),b
 20224                           
 20225                           ; BSR set to: 1
 20226                           ;miwi_mesh.c: 2009: tempShortAddress.v[1] = parentNode;
 20227  004964  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 20228                           
 20229                           ; BSR set to: 1
 20230                           ;miwi_mesh.c: 2017: if( (i = SearchForShortAddress()) != 0xFF )
 20231  004968  EC85  F057         	call	_SearchForShortAddress	;wreg free
 20232  00496C  0101               	movlb	1	; () banked
 20233  00496E  6F47               	movwf	RouteMessage@i& (0+255),b
 20234  004970  0101               	movlb	1	; () banked
 20235  004972  2947               	incf	RouteMessage@i& (0+255),w,b
 20236  004974  B4D8               	btfsc	status,2,c
 20237  004976  D03A               	goto	l17292
 20238                           
 20239                           ; BSR set to: 1
 20240                           ;miwi_mesh.c: 2018: {
 20241                           ;miwi_mesh.c: 2019: MTP.DestAddress = ConnectionTable[i].Address;
 20242  004978  0101               	movlb	1	; () banked
 20243  00497A  5147               	movf	RouteMessage@i& (0+255),w,b
 20244  00497C  0D09               	mullw	9
 20245  00497E  0E04               	movlw	4
 20246  004980  26F3               	addwf	prodl,f,c
 20247  004982  0E00               	movlw	0
 20248  004984  22F4               	addwfc	prodh,f,c
 20249  004986  0E00               	movlw	low _ConnectionTable
 20250  004988  24F3               	addwf	prodl,w,c
 20251  00498A  0101               	movlb	1	; () banked
 20252  00498C  6FAE               	movwf	(_MTP+1)& (0+255),b
 20253  00498E  0E06               	movlw	high _ConnectionTable
 20254  004990  20F4               	addwfc	prodh,w,c
 20255  004992  0101               	movlb	1	; () banked
 20256  004994  6FAF               	movwf	(_MTP+2)& (0+255),b
 20257                           
 20258                           ; BSR set to: 1
 20259                           ;miwi_mesh.c: 2026: }
 20260                           ;miwi_mesh.c: 2028: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 20261                           
 20262                           ; BSR set to: 1
 20263                           
 20264                           ; BSR set to: 1
 20265                           ;miwi_mesh.c: 2021: else
 20266                           ;miwi_mesh.c: 2022: {
 20267                           ;miwi_mesh.c: 2025: goto ROUTE_THROUGH_NEIGHBOR;
 20268                           
 20269                           ;miwi_mesh.c: 2020: }
 20270  004996  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20271  00499A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20272  00499E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20273  0049A2  0EA6               	movlw	low _TxBuffer
 20274  0049A4  0101               	movlb	1	; () banked
 20275  0049A6  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20276  0049A8  0E02               	movlw	high _TxBuffer
 20277  0049AA  0101               	movlb	1	; () banked
 20278  0049AC  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20279  0049AE  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20280  0049B2  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 20281  0049B6  0900               	iorlw	0
 20282  0049B8  A4D8               	btfss	status,2,c
 20283  0049BA  D00B               	goto	l17286
 20284                           
 20285                           ;miwi_mesh.c: 2029: {
 20286                           ;miwi_mesh.c: 2030: RouterFailures[parentNode]++;
 20287  0049BC  0101               	movlb	1	; () banked
 20288  0049BE  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20289  0049C0  0D01               	mullw	1
 20290  0049C2  0E69               	movlw	low _RouterFailures
 20291  0049C4  24F3               	addwf	prodl,w,c
 20292  0049C6  6ED9               	movwf	fsr2l,c
 20293  0049C8  0E00               	movlw	high _RouterFailures
 20294  0049CA  20F4               	addwfc	prodh,w,c
 20295  0049CC  6EDA               	movwf	fsr2h,c
 20296  0049CE  2ADF               	incf	indf2,f,c
 20297  0049D0  D7B7               	goto	l17258
 20298  0049D2                     l17286:
 20299                           
 20300                           ;miwi_mesh.c: 2033: else
 20301                           ;miwi_mesh.c: 2034: {
 20302                           ;miwi_mesh.c: 2035: RouterFailures[parentNode] = 0;
 20303  0049D2  0101               	movlb	1	; () banked
 20304  0049D4  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20305  0049D6  0D01               	mullw	1
 20306  0049D8  0E69               	movlw	low _RouterFailures
 20307  0049DA  24F3               	addwf	prodl,w,c
 20308  0049DC  6ED9               	movwf	fsr2l,c
 20309  0049DE  0E00               	movlw	high _RouterFailures
 20310  0049E0  20F4               	addwfc	prodh,w,c
 20311  0049E2  6EDA               	movwf	fsr2h,c
 20312  0049E4  0E00               	movlw	0
 20313  0049E6  6EDF               	movwf	indf2,c
 20314                           
 20315                           ; BSR set to: 1
 20316                           ;miwi_mesh.c: 2036: return 1;
 20317  0049E8  0E01               	movlw	1
 20318                           
 20319                           ; BSR set to: 1
 20320  0049EA  0012               	return	
 20321  0049EC                     l17292:
 20322                           
 20323                           ;miwi_mesh.c: 2042: for(i = 0; i < 8; i++)
 20324  0049EC  0E00               	movlw	0
 20325  0049EE  0101               	movlb	1	; () banked
 20326  0049F0  6F47               	movwf	RouteMessage@i& (0+255),b
 20327  0049F2                     l17294:
 20328                           
 20329                           ; BSR set to: 1
 20330  0049F2  0E07               	movlw	7
 20331  0049F4  0101               	movlb	1	; () banked
 20332  0049F6  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20333  0049F8  D001               	goto	l17298
 20334  0049FA  D0DF               	goto	l17360
 20335  0049FC                     l17298:
 20336                           
 20337                           ; BSR set to: 1
 20338                           ;miwi_mesh.c: 2043: {
 20339                           ;miwi_mesh.c: 2044: if( (RoutingTable[i] & (1 << parentNode) ) > 0 )
 20340  0049FC  0101               	movlb	1	; () banked
 20341  0049FE  5147               	movf	RouteMessage@i& (0+255),w,b
 20342  004A00  0D01               	mullw	1
 20343  004A02  0E71               	movlw	low _RoutingTable
 20344  004A04  24F3               	addwf	prodl,w,c
 20345  004A06  6ED9               	movwf	fsr2l,c
 20346  004A08  0E00               	movlw	high _RoutingTable
 20347  004A0A  20F4               	addwfc	prodh,w,c
 20348  004A0C  6EDA               	movwf	fsr2h,c
 20349  004A0E  50DF               	movf	indf2,w,c
 20350  004A10  0101               	movlb	1	; () banked
 20351  004A12  6F42               	movwf	??_RouteMessage& (0+255),b
 20352  004A14  C146  F143         	movff	RouteMessage@parentNode,??_RouteMessage+1
 20353  004A18  0E01               	movlw	1
 20354  004A1A  0101               	movlb	1	; () banked
 20355  004A1C  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 20356  004A1E  0101               	movlb	1	; () banked
 20357  004A20  2B43               	incf	(??_RouteMessage+1)& (0+255),f,b
 20358  004A22  D003               	goto	u18894
 20359  004A24                     u18895:
 20360  004A24  0101               	movlb	1	; () banked
 20361  004A26  90D8               	bcf	status,0,c
 20362  004A28  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 20363  004A2A                     u18894:
 20364  004A2A  0101               	movlb	1	; () banked
 20365  004A2C  2F43               	decfsz	(??_RouteMessage+1)& (0+255),f,b
 20366  004A2E  D7FA               	goto	u18895
 20367  004A30  0101               	movlb	1	; () banked
 20368  004A32  5144               	movf	(??_RouteMessage+2)& (0+255),w,b
 20369  004A34  0101               	movlb	1	; () banked
 20370  004A36  1542               	andwf	??_RouteMessage& (0+255),w,b
 20371  004A38  0900               	iorlw	0
 20372  004A3A  B4D8               	btfsc	status,2,c
 20373  004A3C  D0BB               	goto	l17356
 20374                           
 20375                           ; BSR set to: 1
 20376                           ;miwi_mesh.c: 2045: {
 20377                           ;miwi_mesh.c: 2046: if( RouterFailures[i] >= 3 )
 20378  004A3E  0101               	movlb	1	; () banked
 20379  004A40  5147               	movf	RouteMessage@i& (0+255),w,b
 20380  004A42  0D01               	mullw	1
 20381  004A44  0E69               	movlw	low _RouterFailures
 20382  004A46  24F3               	addwf	prodl,w,c
 20383  004A48  6ED9               	movwf	fsr2l,c
 20384  004A4A  0E00               	movlw	high _RouterFailures
 20385  004A4C  20F4               	addwfc	prodh,w,c
 20386  004A4E  6EDA               	movwf	fsr2h,c
 20387  004A50  0E02               	movlw	2
 20388  004A52  64DF               	cpfsgt	indf2,c
 20389  004A54  D05A               	goto	l17330
 20390                           
 20391                           ; BSR set to: 1
 20392                           ;miwi_mesh.c: 2047: {
 20393                           ;miwi_mesh.c: 2048: RouterFailures[i] = 0;
 20394  004A56  0101               	movlb	1	; () banked
 20395  004A58  5147               	movf	RouteMessage@i& (0+255),w,b
 20396  004A5A  0D01               	mullw	1
 20397  004A5C  0E69               	movlw	low _RouterFailures
 20398  004A5E  24F3               	addwf	prodl,w,c
 20399  004A60  6ED9               	movwf	fsr2l,c
 20400  004A62  0E00               	movlw	high _RouterFailures
 20401  004A64  20F4               	addwfc	prodh,w,c
 20402  004A66  6EDA               	movwf	fsr2h,c
 20403  004A68  0E00               	movlw	0
 20404  004A6A  6EDF               	movwf	indf2,c
 20405                           
 20406                           ; BSR set to: 1
 20407                           ;miwi_mesh.c: 2049: knownCoordinators &= ((1<<i) ^ 0xFF);
 20408  004A6C  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 20409  004A70  0E01               	movlw	1
 20410  004A72  0101               	movlb	1	; () banked
 20411  004A74  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20412  004A76  0101               	movlb	1	; () banked
 20413  004A78  2B42               	incf	??_RouteMessage& (0+255),f,b
 20414  004A7A  D003               	goto	u18924
 20415  004A7C                     u18925:
 20416  004A7C  0101               	movlb	1	; () banked
 20417  004A7E  90D8               	bcf	status,0,c
 20418  004A80  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20419  004A82                     u18924:
 20420  004A82  0101               	movlb	1	; () banked
 20421  004A84  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20422  004A86  D7FA               	goto	u18925
 20423  004A88  0101               	movlb	1	; () banked
 20424  004A8A  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20425  004A8C  0AFF               	xorlw	255
 20426  004A8E  0101               	movlb	1	; () banked
 20427  004A90  17C7               	andwf	_knownCoordinators& (0+255),f,b
 20428                           
 20429                           ; BSR set to: 1
 20430                           ;miwi_mesh.c: 2050: RoutingTable[i] = 0;
 20431  004A92  0101               	movlb	1	; () banked
 20432  004A94  5147               	movf	RouteMessage@i& (0+255),w,b
 20433  004A96  0D01               	mullw	1
 20434  004A98  0E71               	movlw	low _RoutingTable
 20435  004A9A  24F3               	addwf	prodl,w,c
 20436  004A9C  6ED9               	movwf	fsr2l,c
 20437  004A9E  0E00               	movlw	high _RoutingTable
 20438  004AA0  20F4               	addwfc	prodh,w,c
 20439  004AA2  6EDA               	movwf	fsr2h,c
 20440  004AA4  0E00               	movlw	0
 20441  004AA6  6EDF               	movwf	indf2,c
 20442                           
 20443                           ; BSR set to: 1
 20444                           ;miwi_mesh.c: 2055: if( role != 0x00 )
 20445  004AA8  0101               	movlb	1	; () banked
 20446  004AAA  51CA               	movf	_role& (0+255),w,b
 20447  004AAC  B4D8               	btfsc	status,2,c
 20448  004AAE  D003               	goto	l17312
 20449                           
 20450                           ; BSR set to: 1
 20451                           ;miwi_mesh.c: 2056: {
 20452                           ;miwi_mesh.c: 2057: SendBeacon();
 20453  004AB0  ECB1  F043         	call	_SendBeacon	;wreg free
 20454                           
 20455                           ;miwi_mesh.c: 2058: }
 20456  004AB4  D028               	goto	l17324
 20457  004AB6                     l17312:
 20458                           
 20459                           ;miwi_mesh.c: 2059: else
 20460                           ;miwi_mesh.c: 2060: {
 20461                           ;miwi_mesh.c: 2062: {TxData = 0;};
 20462  004AB6  0E00               	movlw	0
 20463  004AB8  0101               	movlb	1	; () banked
 20464  004ABA  6FC6               	movwf	_TxData& (0+255),b
 20465                           
 20466                           ; BSR set to: 1
 20467                           ;miwi_mesh.c: 2063: TxBuffer[TxData++] = 0x07;
 20468  004ABC  0101               	movlb	1	; () banked
 20469  004ABE  51C6               	movf	_TxData& (0+255),w,b
 20470  004AC0  0D01               	mullw	1
 20471  004AC2  0EA6               	movlw	low _TxBuffer
 20472  004AC4  24F3               	addwf	prodl,w,c
 20473  004AC6  6ED9               	movwf	fsr2l,c
 20474  004AC8  0E02               	movlw	high _TxBuffer
 20475  004ACA  20F4               	addwfc	prodh,w,c
 20476  004ACC  6EDA               	movwf	fsr2h,c
 20477  004ACE  0E07               	movlw	7
 20478  004AD0  6EDF               	movwf	indf2,c
 20479                           
 20480                           ; BSR set to: 1
 20481  004AD2  0101               	movlb	1	; () banked
 20482  004AD4  2BC6               	incf	_TxData& (0+255),f,b
 20483                           
 20484                           ; BSR set to: 1
 20485                           ;miwi_mesh.c: 2064: TxBuffer[TxData++] = currentChannel;
 20486  004AD6  0101               	movlb	1	; () banked
 20487  004AD8  51C6               	movf	_TxData& (0+255),w,b
 20488  004ADA  0D01               	mullw	1
 20489  004ADC  0EA6               	movlw	low _TxBuffer
 20490  004ADE  24F3               	addwf	prodl,w,c
 20491  004AE0  6ED9               	movwf	fsr2l,c
 20492  004AE2  0E02               	movlw	high _TxBuffer
 20493  004AE4  20F4               	addwfc	prodh,w,c
 20494  004AE6  6EDA               	movwf	fsr2h,c
 20495  004AE8  C1F6  FFDF         	movff	_currentChannel,indf2
 20496                           
 20497                           ; BSR set to: 1
 20498  004AEC  0101               	movlb	1	; () banked
 20499  004AEE  2BC6               	incf	_TxData& (0+255),f,b
 20500                           
 20501                           ; BSR set to: 1
 20502                           ;miwi_mesh.c: 2069: SendMACPacket((0), 0x01);
 20503  004AF0  0E00               	movlw	0
 20504  004AF2  0101               	movlb	1	; () banked
 20505  004AF4  6F39               	movwf	SendMACPacket@Address& (0+255),b
 20506  004AF6  0E00               	movlw	0
 20507  004AF8  0101               	movlb	1	; () banked
 20508  004AFA  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 20509  004AFC  0E01               	movlw	1
 20510  004AFE  0101               	movlb	1	; () banked
 20511  004B00  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 20512  004B02  ECC9  F057         	call	_SendMACPacket	;wreg free
 20513  004B06                     l17324:
 20514                           
 20515                           ;miwi_mesh.c: 2071: }
 20516                           ;miwi_mesh.c: 2072: return 0;
 20517  004B06  0E00               	movlw	0
 20518  004B08  0012               	return	
 20519  004B0A                     l17330:
 20520                           
 20521                           ;miwi_mesh.c: 2074: else
 20522                           ;miwi_mesh.c: 2075: {
 20523                           ;miwi_mesh.c: 2077: MTP.flags.Val = 0;
 20524  004B0A  0E00               	movlw	0
 20525  004B0C  0101               	movlb	1	; () banked
 20526  004B0E  6FAD               	movwf	_MTP& (0+255),b
 20527                           
 20528                           ; BSR set to: 1
 20529                           ;miwi_mesh.c: 2078: MTP.flags.bits.ackReq = 1;
 20530  004B10  0101               	movlb	1	; () banked
 20531  004B12  8BAD               	bsf	_MTP& (0+255),5,b
 20532                           
 20533                           ; BSR set to: 1
 20534                           ;miwi_mesh.c: 2079: MTP.flags.bits.secEn = SecEn;
 20535  004B14  0101               	movlb	1	; () banked
 20536  004B16  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20537  004B18  D003               	bra	u18945
 20538  004B1A  0101               	movlb	1	; () banked
 20539  004B1C  97AD               	bcf	_MTP& (0+255),3,b
 20540  004B1E  D002               	bra	u18946
 20541  004B20                     u18945:
 20542  004B20  0101               	movlb	1	; () banked
 20543  004B22  87AD               	bsf	_MTP& (0+255),3,b
 20544  004B24                     u18946:
 20545                           
 20546                           ;miwi_mesh.c: 2080: tempShortAddress.v[0] = 0;
 20547  004B24  0E00               	movlw	0
 20548  004B26  0101               	movlb	1	; () banked
 20549  004B28  6FF4               	movwf	_tempShortAddress& (0+255),b
 20550                           
 20551                           ; BSR set to: 1
 20552                           ;miwi_mesh.c: 2081: tempShortAddress.v[1] = i;
 20553  004B2A  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 20554                           
 20555                           ; BSR set to: 1
 20556                           ;miwi_mesh.c: 2089: if( (i = SearchForShortAddress()) != 0xFF )
 20557  004B2E  EC85  F057         	call	_SearchForShortAddress	;wreg free
 20558  004B32  0101               	movlb	1	; () banked
 20559  004B34  6F47               	movwf	RouteMessage@i& (0+255),b
 20560  004B36  0101               	movlb	1	; () banked
 20561  004B38  2947               	incf	RouteMessage@i& (0+255),w,b
 20562  004B3A  B4D8               	btfsc	status,2,c
 20563  004B3C  D03E               	goto	l17360
 20564                           
 20565                           ; BSR set to: 1
 20566                           ;miwi_mesh.c: 2090: {
 20567                           ;miwi_mesh.c: 2091: MTP.DestAddress = ConnectionTable[i].Address;
 20568  004B3E  0101               	movlb	1	; () banked
 20569  004B40  5147               	movf	RouteMessage@i& (0+255),w,b
 20570  004B42  0D09               	mullw	9
 20571  004B44  0E04               	movlw	4
 20572  004B46  26F3               	addwf	prodl,f,c
 20573  004B48  0E00               	movlw	0
 20574  004B4A  22F4               	addwfc	prodh,f,c
 20575  004B4C  0E00               	movlw	low _ConnectionTable
 20576  004B4E  24F3               	addwf	prodl,w,c
 20577  004B50  0101               	movlb	1	; () banked
 20578  004B52  6FAE               	movwf	(_MTP+1)& (0+255),b
 20579  004B54  0E06               	movlw	high _ConnectionTable
 20580  004B56  20F4               	addwfc	prodh,w,c
 20581  004B58  0101               	movlb	1	; () banked
 20582  004B5A  6FAF               	movwf	(_MTP+2)& (0+255),b
 20583                           
 20584                           ; BSR set to: 1
 20585                           ;miwi_mesh.c: 2098: }
 20586                           ;miwi_mesh.c: 2100: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 20587                           
 20588                           ; BSR set to: 1
 20589                           
 20590                           ; BSR set to: 1
 20591                           ;miwi_mesh.c: 2093: else
 20592                           ;miwi_mesh.c: 2094: {
 20593                           ;miwi_mesh.c: 2097: goto ROUTE_THROUGH_TREE;
 20594                           
 20595                           ;miwi_mesh.c: 2092: }
 20596  004B5C  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20597  004B60  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20598  004B64  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20599  004B68  0EA6               	movlw	low _TxBuffer
 20600  004B6A  0101               	movlb	1	; () banked
 20601  004B6C  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20602  004B6E  0E02               	movlw	high _TxBuffer
 20603  004B70  0101               	movlb	1	; () banked
 20604  004B72  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20605  004B74  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20606  004B78  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 20607  004B7C  0900               	iorlw	0
 20608  004B7E  A4D8               	btfss	status,2,c
 20609  004B80  D00C               	goto	l17350
 20610                           
 20611                           ;miwi_mesh.c: 2101: {
 20612                           ;miwi_mesh.c: 2102: RouterFailures[i]++;
 20613  004B82  0101               	movlb	1	; () banked
 20614  004B84  5147               	movf	RouteMessage@i& (0+255),w,b
 20615  004B86  0D01               	mullw	1
 20616  004B88  0E69               	movlw	low _RouterFailures
 20617  004B8A  24F3               	addwf	prodl,w,c
 20618  004B8C  6ED9               	movwf	fsr2l,c
 20619  004B8E  0E00               	movlw	high _RouterFailures
 20620  004B90  20F4               	addwfc	prodh,w,c
 20621  004B92  6EDA               	movwf	fsr2h,c
 20622  004B94  2ADF               	incf	indf2,f,c
 20623                           
 20624                           ; BSR set to: 1
 20625                           ;miwi_mesh.c: 2103: return 0;
 20626  004B96  0E00               	movlw	0
 20627                           
 20628                           ; BSR set to: 1
 20629  004B98  0012               	return	
 20630  004B9A                     l17350:
 20631                           
 20632                           ;miwi_mesh.c: 2104: }
 20633                           ;miwi_mesh.c: 2105: RouterFailures[i] = 0;
 20634  004B9A  0101               	movlb	1	; () banked
 20635  004B9C  5147               	movf	RouteMessage@i& (0+255),w,b
 20636  004B9E  0D01               	mullw	1
 20637  004BA0  0E69               	movlw	low _RouterFailures
 20638  004BA2  24F3               	addwf	prodl,w,c
 20639  004BA4  6ED9               	movwf	fsr2l,c
 20640  004BA6  0E00               	movlw	high _RouterFailures
 20641  004BA8  20F4               	addwfc	prodh,w,c
 20642  004BAA  6EDA               	movwf	fsr2h,c
 20643  004BAC  0E00               	movlw	0
 20644  004BAE  6EDF               	movwf	indf2,c
 20645                           
 20646                           ; BSR set to: 1
 20647                           ;miwi_mesh.c: 2106: return 1;
 20648  004BB0  0E01               	movlw	1
 20649                           
 20650                           ; BSR set to: 1
 20651  004BB2  0012               	return	
 20652  004BB4                     l17356:
 20653  004BB4  0101               	movlb	1	; () banked
 20654  004BB6  2B47               	incf	RouteMessage@i& (0+255),f,b
 20655  004BB8  D71C               	goto	l17294
 20656  004BBA                     l17360:
 20657                           
 20658                           ; BSR set to: 1
 20659                           ;miwi_mesh.c: 2112: if( role != 0x02 )
 20660  004BBA  0E02               	movlw	2
 20661  004BBC  0101               	movlb	1	; () banked
 20662  004BBE  19CA               	xorwf	_role& (0+255),w,b
 20663  004BC0  B4D8               	btfsc	status,2,c
 20664  004BC2  D115               	goto	l17448
 20665                           
 20666                           ; BSR set to: 1
 20667                           ;miwi_mesh.c: 2113: {
 20668                           ;miwi_mesh.c: 2114: MTP.flags.Val = 0;
 20669  004BC4  0E00               	movlw	0
 20670  004BC6  0101               	movlb	1	; () banked
 20671  004BC8  6FAD               	movwf	_MTP& (0+255),b
 20672                           
 20673                           ; BSR set to: 1
 20674                           ;miwi_mesh.c: 2115: MTP.flags.bits.ackReq = 1;
 20675  004BCA  0101               	movlb	1	; () banked
 20676  004BCC  8BAD               	bsf	_MTP& (0+255),5,b
 20677                           
 20678                           ; BSR set to: 1
 20679                           ;miwi_mesh.c: 2116: MTP.flags.bits.secEn = SecEn;
 20680  004BCE  0101               	movlb	1	; () banked
 20681  004BD0  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20682  004BD2  D003               	bra	u18995
 20683  004BD4  0101               	movlb	1	; () banked
 20684  004BD6  97AD               	bcf	_MTP& (0+255),3,b
 20685  004BD8  D002               	bra	u18996
 20686  004BDA                     u18995:
 20687  004BDA  0101               	movlb	1	; () banked
 20688  004BDC  87AD               	bsf	_MTP& (0+255),3,b
 20689  004BDE                     u18996:
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;miwi_mesh.c: 2118: if( role == 0x01)
 20693  004BDE  0101               	movlb	1	; () banked
 20694  004BE0  05CA               	decf	_role& (0+255),w,b
 20695  004BE2  A4D8               	btfss	status,2,c
 20696  004BE4  D034               	goto	l17382
 20697                           
 20698                           ; BSR set to: 1
 20699                           ;miwi_mesh.c: 2119: {
 20700                           ;miwi_mesh.c: 2123: for(i = 0; i < 4; i++)
 20701  004BE6  0E00               	movlw	0
 20702  004BE8  0101               	movlb	1	; () banked
 20703  004BEA  6F47               	movwf	RouteMessage@i& (0+255),b
 20704  004BEC                     l17372:
 20705                           
 20706                           ; BSR set to: 1
 20707  004BEC  0E03               	movlw	3
 20708  004BEE  0101               	movlb	1	; () banked
 20709  004BF0  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20710  004BF2  D001               	goto	l17376
 20711  004BF4  D0D1               	goto	l17432
 20712  004BF6                     l17376:
 20713                           
 20714                           ; BSR set to: 1
 20715                           ;miwi_mesh.c: 2124: {
 20716                           ;miwi_mesh.c: 2125: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 20717  004BF6  0101               	movlb	1	; () banked
 20718  004BF8  5147               	movf	RouteMessage@i& (0+255),w,b
 20719  004BFA  0D01               	mullw	1
 20720  004BFC  0E04               	movlw	4
 20721  004BFE  26F3               	addwf	prodl,f,c
 20722  004C00  0E00               	movlw	0
 20723  004C02  22F4               	addwfc	prodh,f,c
 20724  004C04  0E00               	movlw	low _ConnectionTable
 20725  004C06  0101               	movlb	1	; () banked
 20726  004C08  6F42               	movwf	??_RouteMessage& (0+255),b
 20727  004C0A  0E06               	movlw	high _ConnectionTable
 20728  004C0C  0101               	movlb	1	; () banked
 20729  004C0E  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20730  004C10  50F3               	movf	prodl,w,c
 20731  004C12  0101               	movlb	1	; () banked
 20732  004C14  2742               	addwf	??_RouteMessage& (0+255),f,b
 20733  004C16  50F4               	movf	prodh,w,c
 20734  004C18  0101               	movlb	1	; () banked
 20735  004C1A  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20736  004C1C  0101               	movlb	1	; () banked
 20737  004C1E  51C9               	movf	_myParent& (0+255),w,b
 20738  004C20  0D09               	mullw	9
 20739  004C22  50F3               	movf	prodl,w,c
 20740  004C24  0101               	movlb	1	; () banked
 20741  004C26  2542               	addwf	??_RouteMessage& (0+255),w,b
 20742  004C28  6ED9               	movwf	fsr2l,c
 20743  004C2A  50F4               	movf	prodh,w,c
 20744  004C2C  0101               	movlb	1	; () banked
 20745  004C2E  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20746  004C30  6EDA               	movwf	fsr2h,c
 20747  004C32  0101               	movlb	1	; () banked
 20748  004C34  5147               	movf	RouteMessage@i& (0+255),w,b
 20749  004C36  0D01               	mullw	1
 20750  004C38  0EA6               	movlw	low _tempLongAddress
 20751  004C3A  24F3               	addwf	prodl,w,c
 20752  004C3C  6EE1               	movwf	fsr1l,c
 20753  004C3E  0E01               	movlw	high _tempLongAddress
 20754  004C40  20F4               	addwfc	prodh,w,c
 20755  004C42  6EE2               	movwf	fsr1h,c
 20756  004C44  CFDF FFE7          	movff	indf2,indf1
 20757                           
 20758                           ; BSR set to: 1
 20759  004C48  0101               	movlb	1	; () banked
 20760  004C4A  2B47               	incf	RouteMessage@i& (0+255),f,b
 20761  004C4C  D7CF               	goto	l17372
 20762  004C4E                     l17382:
 20763                           
 20764                           ; BSR set to: 1
 20765                           ;miwi_mesh.c: 2129: else
 20766                           ;miwi_mesh.c: 2130: {
 20767                           ;miwi_mesh.c: 2131: for(i = 0; i < 8; i++)
 20768  004C4E  0E00               	movlw	0
 20769  004C50  0101               	movlb	1	; () banked
 20770  004C52  6F47               	movwf	RouteMessage@i& (0+255),b
 20771  004C54                     l17384:
 20772                           
 20773                           ; BSR set to: 1
 20774  004C54  0E07               	movlw	7
 20775  004C56  0101               	movlb	1	; () banked
 20776  004C58  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20777  004C5A  D001               	goto	l17388
 20778  004C5C  D01F               	goto	l17398
 20779  004C5E                     l17388:
 20780                           
 20781                           ; BSR set to: 1
 20782                           ;miwi_mesh.c: 2132: {
 20783                           ;miwi_mesh.c: 2133: if( knownCoordinators && (0x01 << i) )
 20784  004C5E  0101               	movlb	1	; () banked
 20785  004C60  51C7               	movf	_knownCoordinators& (0+255),w,b
 20786  004C62  B4D8               	btfsc	status,2,c
 20787  004C64  D018               	goto	l17394
 20788                           
 20789                           ; BSR set to: 1
 20790  004C66  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 20791  004C6A  0E01               	movlw	1
 20792  004C6C  0101               	movlb	1	; () banked
 20793  004C6E  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20794  004C70  0E00               	movlw	0
 20795  004C72  0101               	movlb	1	; () banked
 20796  004C74  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 20797  004C76  0101               	movlb	1	; () banked
 20798  004C78  2B42               	incf	??_RouteMessage& (0+255),f,b
 20799  004C7A  D004               	goto	u19054
 20800  004C7C                     u19055:
 20801  004C7C  90D8               	bcf	status,0,c
 20802  004C7E  0101               	movlb	1	; () banked
 20803  004C80  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20804  004C82  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 20805  004C84                     u19054:
 20806  004C84  0101               	movlb	1	; () banked
 20807  004C86  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20808  004C88  D7F9               	goto	u19055
 20809  004C8A  0101               	movlb	1	; () banked
 20810  004C8C  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20811  004C8E  0101               	movlb	1	; () banked
 20812  004C90  1144               	iorwf	(??_RouteMessage+2)& (0+255),w,b
 20813  004C92  A4D8               	btfss	status,2,c
 20814  004C94  D003               	goto	l17398
 20815  004C96                     l17394:
 20816                           
 20817                           ; BSR set to: 1
 20818  004C96  0101               	movlb	1	; () banked
 20819  004C98  2B47               	incf	RouteMessage@i& (0+255),f,b
 20820  004C9A  D7DC               	goto	l17384
 20821  004C9C                     l17398:
 20822                           
 20823                           ; BSR set to: 1
 20824                           ;miwi_mesh.c: 2136: }
 20825                           ;miwi_mesh.c: 2137: }
 20826                           ;miwi_mesh.c: 2138: if( i < 8 )
 20827  004C9C  0E08               	movlw	8
 20828  004C9E  0101               	movlb	1	; () banked
 20829  004CA0  6147               	cpfslt	RouteMessage@i& (0+255),b
 20830  004CA2  D005               	goto	l17404
 20831                           
 20832                           ; BSR set to: 1
 20833                           ;miwi_mesh.c: 2139: {
 20834                           ;miwi_mesh.c: 2140: tempShortAddress.v[1] = i;
 20835  004CA4  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 20836                           
 20837                           ; BSR set to: 1
 20838                           ;miwi_mesh.c: 2141: tempShortAddress.v[0] = 0;
 20839  004CA8  0E00               	movlw	0
 20840  004CAA  0101               	movlb	1	; () banked
 20841  004CAC  D004               	goto	L7
 20842  004CAE                     l17404:
 20843                           
 20844                           ; BSR set to: 1
 20845                           ;miwi_mesh.c: 2143: else
 20846                           ;miwi_mesh.c: 2144: {
 20847                           ;miwi_mesh.c: 2146: tempShortAddress.Val = 0;
 20848  004CAE  0E00               	movlw	0
 20849  004CB0  0101               	movlb	1	; () banked
 20850  004CB2  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 20851  004CB4  0E00               	movlw	0
 20852  004CB6                     L7:
 20853  004CB6  6FF4               	movwf	_tempShortAddress& (0+255),b
 20854                           
 20855                           ; BSR set to: 1
 20856                           ;miwi_mesh.c: 2147: }
 20857                           ;miwi_mesh.c: 2150: {
 20858                           ;miwi_mesh.c: 2151: uint8_t j;
 20859                           ;miwi_mesh.c: 2153: if( (j = SearchForShortAddress()) < 64 )
 20860                           
 20861                           ; BSR set to: 1
 20862  004CB8  EC85  F057         	call	_SearchForShortAddress	;wreg free
 20863  004CBC  0101               	movlb	1	; () banked
 20864  004CBE  6F45               	movwf	RouteMessage@j& (0+255),b
 20865  004CC0  0E40               	movlw	64
 20866  004CC2  0101               	movlb	1	; () banked
 20867  004CC4  6145               	cpfslt	RouteMessage@j& (0+255),b
 20868  004CC6  D034               	goto	l17420
 20869                           
 20870                           ; BSR set to: 1
 20871                           ;miwi_mesh.c: 2154: {
 20872                           ;miwi_mesh.c: 2155: for(i = 0; i < 4; i++)
 20873  004CC8  0E00               	movlw	0
 20874  004CCA  0101               	movlb	1	; () banked
 20875  004CCC  6F47               	movwf	RouteMessage@i& (0+255),b
 20876  004CCE                     l17410:
 20877                           
 20878                           ; BSR set to: 1
 20879  004CCE  0E03               	movlw	3
 20880  004CD0  0101               	movlb	1	; () banked
 20881  004CD2  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20882  004CD4  D001               	goto	l17414
 20883  004CD6  D060               	goto	l17432
 20884  004CD8                     l17414:
 20885                           
 20886                           ; BSR set to: 1
 20887                           ;miwi_mesh.c: 2156: {
 20888                           ;miwi_mesh.c: 2157: tempLongAddress[i] = ConnectionTable[j].Address[i];
 20889  004CD8  0101               	movlb	1	; () banked
 20890  004CDA  5147               	movf	RouteMessage@i& (0+255),w,b
 20891  004CDC  0D01               	mullw	1
 20892  004CDE  0E04               	movlw	4
 20893  004CE0  26F3               	addwf	prodl,f,c
 20894  004CE2  0E00               	movlw	0
 20895  004CE4  22F4               	addwfc	prodh,f,c
 20896  004CE6  0E00               	movlw	low _ConnectionTable
 20897  004CE8  0101               	movlb	1	; () banked
 20898  004CEA  6F42               	movwf	??_RouteMessage& (0+255),b
 20899  004CEC  0E06               	movlw	high _ConnectionTable
 20900  004CEE  0101               	movlb	1	; () banked
 20901  004CF0  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20902  004CF2  50F3               	movf	prodl,w,c
 20903  004CF4  0101               	movlb	1	; () banked
 20904  004CF6  2742               	addwf	??_RouteMessage& (0+255),f,b
 20905  004CF8  50F4               	movf	prodh,w,c
 20906  004CFA  0101               	movlb	1	; () banked
 20907  004CFC  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20908  004CFE  0101               	movlb	1	; () banked
 20909  004D00  5145               	movf	RouteMessage@j& (0+255),w,b
 20910  004D02  0D09               	mullw	9
 20911  004D04  50F3               	movf	prodl,w,c
 20912  004D06  0101               	movlb	1	; () banked
 20913  004D08  2542               	addwf	??_RouteMessage& (0+255),w,b
 20914  004D0A  6ED9               	movwf	fsr2l,c
 20915  004D0C  50F4               	movf	prodh,w,c
 20916  004D0E  0101               	movlb	1	; () banked
 20917  004D10  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20918  004D12  6EDA               	movwf	fsr2h,c
 20919  004D14  0101               	movlb	1	; () banked
 20920  004D16  5147               	movf	RouteMessage@i& (0+255),w,b
 20921  004D18  0D01               	mullw	1
 20922  004D1A  0EA6               	movlw	low _tempLongAddress
 20923  004D1C  24F3               	addwf	prodl,w,c
 20924  004D1E  6EE1               	movwf	fsr1l,c
 20925  004D20  0E01               	movlw	high _tempLongAddress
 20926  004D22  20F4               	addwfc	prodh,w,c
 20927  004D24  6EE2               	movwf	fsr1h,c
 20928  004D26  CFDF FFE7          	movff	indf2,indf1
 20929                           
 20930                           ; BSR set to: 1
 20931  004D2A  0101               	movlb	1	; () banked
 20932  004D2C  2B47               	incf	RouteMessage@i& (0+255),f,b
 20933  004D2E  D7CF               	goto	l17410
 20934  004D30                     l17420:
 20935                           
 20936                           ; BSR set to: 1
 20937                           ;miwi_mesh.c: 2160: else
 20938                           ;miwi_mesh.c: 2161: {
 20939                           ;miwi_mesh.c: 2162: for(i = 0; i < 4; i++)
 20940  004D30  0E00               	movlw	0
 20941  004D32  0101               	movlb	1	; () banked
 20942  004D34  6F47               	movwf	RouteMessage@i& (0+255),b
 20943  004D36                     l17422:
 20944                           
 20945                           ; BSR set to: 1
 20946  004D36  0E03               	movlw	3
 20947  004D38  0101               	movlb	1	; () banked
 20948  004D3A  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20949  004D3C  D001               	goto	l17426
 20950  004D3E  D02C               	goto	l17432
 20951  004D40                     l17426:
 20952                           
 20953                           ; BSR set to: 1
 20954                           ;miwi_mesh.c: 2163: {
 20955                           ;miwi_mesh.c: 2164: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 20956  004D40  0101               	movlb	1	; () banked
 20957  004D42  5147               	movf	RouteMessage@i& (0+255),w,b
 20958  004D44  0D01               	mullw	1
 20959  004D46  0E04               	movlw	4
 20960  004D48  26F3               	addwf	prodl,f,c
 20961  004D4A  0E00               	movlw	0
 20962  004D4C  22F4               	addwfc	prodh,f,c
 20963  004D4E  0E00               	movlw	low _ConnectionTable
 20964  004D50  0101               	movlb	1	; () banked
 20965  004D52  6F42               	movwf	??_RouteMessage& (0+255),b
 20966  004D54  0E06               	movlw	high _ConnectionTable
 20967  004D56  0101               	movlb	1	; () banked
 20968  004D58  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20969  004D5A  50F3               	movf	prodl,w,c
 20970  004D5C  0101               	movlb	1	; () banked
 20971  004D5E  2742               	addwf	??_RouteMessage& (0+255),f,b
 20972  004D60  50F4               	movf	prodh,w,c
 20973  004D62  0101               	movlb	1	; () banked
 20974  004D64  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20975  004D66  0101               	movlb	1	; () banked
 20976  004D68  51C9               	movf	_myParent& (0+255),w,b
 20977  004D6A  0D09               	mullw	9
 20978  004D6C  50F3               	movf	prodl,w,c
 20979  004D6E  0101               	movlb	1	; () banked
 20980  004D70  2542               	addwf	??_RouteMessage& (0+255),w,b
 20981  004D72  6ED9               	movwf	fsr2l,c
 20982  004D74  50F4               	movf	prodh,w,c
 20983  004D76  0101               	movlb	1	; () banked
 20984  004D78  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20985  004D7A  6EDA               	movwf	fsr2h,c
 20986  004D7C  0101               	movlb	1	; () banked
 20987  004D7E  5147               	movf	RouteMessage@i& (0+255),w,b
 20988  004D80  0D01               	mullw	1
 20989  004D82  0EA6               	movlw	low _tempLongAddress
 20990  004D84  24F3               	addwf	prodl,w,c
 20991  004D86  6EE1               	movwf	fsr1l,c
 20992  004D88  0E01               	movlw	high _tempLongAddress
 20993  004D8A  20F4               	addwfc	prodh,w,c
 20994  004D8C  6EE2               	movwf	fsr1h,c
 20995  004D8E  CFDF FFE7          	movff	indf2,indf1
 20996                           
 20997                           ; BSR set to: 1
 20998  004D92  0101               	movlb	1	; () banked
 20999  004D94  2B47               	incf	RouteMessage@i& (0+255),f,b
 21000  004D96  D7CF               	goto	l17422
 21001  004D98                     l17432:
 21002                           
 21003                           ; BSR set to: 1
 21004                           ;miwi_mesh.c: 2165: }
 21005                           ;miwi_mesh.c: 2166: }
 21006                           ;miwi_mesh.c: 2167: }
 21007                           ;miwi_mesh.c: 2170: }
 21008                           ;miwi_mesh.c: 2178: MTP.DestAddress = ConnectionTable[myParent].Address;
 21009  004D98  0101               	movlb	1	; () banked
 21010  004D9A  51C9               	movf	_myParent& (0+255),w,b
 21011  004D9C  0D09               	mullw	9
 21012  004D9E  0E04               	movlw	4
 21013  004DA0  26F3               	addwf	prodl,f,c
 21014  004DA2  0E00               	movlw	0
 21015  004DA4  22F4               	addwfc	prodh,f,c
 21016  004DA6  0E00               	movlw	low _ConnectionTable
 21017  004DA8  24F3               	addwf	prodl,w,c
 21018  004DAA  0101               	movlb	1	; () banked
 21019  004DAC  6FAE               	movwf	(_MTP+1)& (0+255),b
 21020  004DAE  0E06               	movlw	high _ConnectionTable
 21021  004DB0  20F4               	addwfc	prodh,w,c
 21022  004DB2  0101               	movlb	1	; () banked
 21023  004DB4  6FAF               	movwf	(_MTP+2)& (0+255),b
 21024                           
 21025                           ; BSR set to: 1
 21026                           ;miwi_mesh.c: 2181: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 21027  004DB6  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21028  004DBA  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21029  004DBE  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21030  004DC2  0EA6               	movlw	low _TxBuffer
 21031  004DC4  0101               	movlb	1	; () banked
 21032  004DC6  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21033  004DC8  0E02               	movlw	high _TxBuffer
 21034  004DCA  0101               	movlb	1	; () banked
 21035  004DCC  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21036  004DCE  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21037  004DD2  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 21038  004DD6  0900               	iorlw	0
 21039  004DD8  A4D8               	btfss	status,2,c
 21040  004DDA  D004               	goto	l17442
 21041                           
 21042                           ;miwi_mesh.c: 2182: {
 21043                           ;miwi_mesh.c: 2183: RouterFailures[0]++;
 21044  004DDC  0100               	movlb	0	; () banked
 21045  004DDE  2B69               	incf	_RouterFailures& (0+255),f,b
 21046                           
 21047                           ; BSR set to: 0
 21048                           ;miwi_mesh.c: 2184: return 0;
 21049  004DE0  0E00               	movlw	0
 21050                           
 21051                           ; BSR set to: 0
 21052  004DE2  0012               	return	
 21053  004DE4                     l17442:
 21054                           
 21055                           ;miwi_mesh.c: 2185: }
 21056                           ;miwi_mesh.c: 2186: RouterFailures[0] = 0;
 21057  004DE4  0E00               	movlw	0
 21058  004DE6  0100               	movlb	0	; () banked
 21059  004DE8  6F69               	movwf	_RouterFailures& (0+255),b
 21060                           
 21061                           ; BSR set to: 0
 21062                           ;miwi_mesh.c: 2187: return 1;
 21063  004DEA  0E01               	movlw	1
 21064                           
 21065                           ; BSR set to: 0
 21066  004DEC  0012               	return	
 21067  004DEE                     l17448:
 21068                           
 21069                           ;miwi_mesh.c: 2188: }
 21070                           ;miwi_mesh.c: 2192: MTP.flags.Val = 0;
 21071  004DEE  0E00               	movlw	0
 21072  004DF0  0101               	movlb	1	; () banked
 21073  004DF2  6FAD               	movwf	_MTP& (0+255),b
 21074                           
 21075                           ; BSR set to: 1
 21076                           ;miwi_mesh.c: 2193: MTP.flags.bits.ackReq = 1;
 21077  004DF4  0101               	movlb	1	; () banked
 21078  004DF6  8BAD               	bsf	_MTP& (0+255),5,b
 21079                           
 21080                           ; BSR set to: 1
 21081                           ;miwi_mesh.c: 2194: MTP.flags.bits.secEn = SecEn;
 21082  004DF8  0101               	movlb	1	; () banked
 21083  004DFA  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 21084  004DFC  D003               	bra	u19155
 21085  004DFE  0101               	movlb	1	; () banked
 21086  004E00  97AD               	bcf	_MTP& (0+255),3,b
 21087  004E02  D002               	bra	u19156
 21088  004E04                     u19155:
 21089  004E04  0101               	movlb	1	; () banked
 21090  004E06  87AD               	bsf	_MTP& (0+255),3,b
 21091  004E08                     u19156:
 21092                           
 21093                           ; BSR set to: 1
 21094                           ;miwi_mesh.c: 2196: tempShortAddress.v[1] = parentNode;
 21095  004E08  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 21096                           
 21097                           ;miwi_mesh.c: 2197: tempShortAddress.v[0] = 0;
 21098  004E0C  0E00               	movlw	0
 21099  004E0E  0101               	movlb	1	; () banked
 21100  004E10  6FF4               	movwf	_tempShortAddress& (0+255),b
 21101                           
 21102                           ; BSR set to: 1
 21103                           ;miwi_mesh.c: 2205: MTP.DestAddress = ConnectionTable[myParent].Address;
 21104  004E12  0101               	movlb	1	; () banked
 21105  004E14  51C9               	movf	_myParent& (0+255),w,b
 21106  004E16  0D09               	mullw	9
 21107  004E18  0E04               	movlw	4
 21108  004E1A  26F3               	addwf	prodl,f,c
 21109  004E1C  0E00               	movlw	0
 21110  004E1E  22F4               	addwfc	prodh,f,c
 21111  004E20  0E00               	movlw	low _ConnectionTable
 21112  004E22  24F3               	addwf	prodl,w,c
 21113  004E24  0101               	movlb	1	; () banked
 21114  004E26  6FAE               	movwf	(_MTP+1)& (0+255),b
 21115  004E28  0E06               	movlw	high _ConnectionTable
 21116  004E2A  20F4               	addwfc	prodh,w,c
 21117  004E2C  0101               	movlb	1	; () banked
 21118  004E2E  6FAF               	movwf	(_MTP+2)& (0+255),b
 21119                           
 21120                           ; BSR set to: 1
 21121                           ;miwi_mesh.c: 2208: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 21122  004E30  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21123  004E34  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21124  004E38  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21125  004E3C  0EA6               	movlw	low _TxBuffer
 21126  004E3E  0101               	movlb	1	; () banked
 21127  004E40  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21128  004E42  0E02               	movlw	high _TxBuffer
 21129  004E44  0101               	movlb	1	; () banked
 21130  004E46  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21131  004E48  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21132  004E4C  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 21133  004E50  0900               	iorlw	0
 21134  004E52  A4D8               	btfss	status,2,c
 21135  004E54  D004               	goto	l17466
 21136                           
 21137                           ;miwi_mesh.c: 2209: {
 21138                           ;miwi_mesh.c: 2210: RouterFailures[0]++;
 21139  004E56  0100               	movlb	0	; () banked
 21140  004E58  2B69               	incf	_RouterFailures& (0+255),f,b
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;miwi_mesh.c: 2211: return 0;
 21144  004E5A  0E00               	movlw	0
 21145                           
 21146                           ; BSR set to: 0
 21147  004E5C  0012               	return	
 21148  004E5E                     l17466:
 21149                           
 21150                           ;miwi_mesh.c: 2212: }
 21151                           ;miwi_mesh.c: 2213: RouterFailures[0] = 0;
 21152  004E5E  0E00               	movlw	0
 21153  004E60  0100               	movlb	0	; () banked
 21154  004E62  6F69               	movwf	_RouterFailures& (0+255),b
 21155                           
 21156                           ; BSR set to: 0
 21157                           ;miwi_mesh.c: 2214: return 1;
 21158  004E64  0E01               	movlw	1
 21159  004E66  0012               	return	
 21160  004E68                     __end_of_RouteMessage:
 21161                           	opt stack 0
 21162                           tblptru	equ	0xFF8
 21163                           tblptrh	equ	0xFF7
 21164                           tblptrl	equ	0xFF6
 21165                           tablat	equ	0xFF5
 21166                           prodh	equ	0xFF4
 21167                           prodl	equ	0xFF3
 21168                           intcon	equ	0xFF2
 21169                           intcon2	equ	0xFF1
 21170                           intcon3	equ	0xFF0
 21171                           indf0	equ	0xFEF
 21172                           postinc0	equ	0xFEE
 21173                           plusw0	equ	0xFEB
 21174                           fsr0h	equ	0xFEA
 21175                           fsr0l	equ	0xFE9
 21176                           wreg	equ	0xFE8
 21177                           indf1	equ	0xFE7
 21178                           postinc1	equ	0xFE6
 21179                           postdec1	equ	0xFE5
 21180                           fsr1h	equ	0xFE2
 21181                           fsr1l	equ	0xFE1
 21182                           indf2	equ	0xFDF
 21183                           postinc2	equ	0xFDE
 21184                           postdec2	equ	0xFDD
 21185                           plusw2	equ	0xFDB
 21186                           fsr2h	equ	0xFDA
 21187                           fsr2l	equ	0xFD9
 21188                           status	equ	0xFD8
 21189                           
 21190 ;; *************** function _SendBeacon *****************
 21191 ;; Defined at:
 21192 ;;		line 3277 in file "src/miwi/miwi_mesh.c"
 21193 ;; Parameters:    Size  Location     Type
 21194 ;;		None
 21195 ;; Auto vars:     Size  Location     Type
 21196 ;;  i               1    0        unsigned char 
 21197 ;; Return value:  Size  Location     Type
 21198 ;;		None               void
 21199 ;; Registers used:
 21200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21201 ;; Tracked objects:
 21202 ;;		On entry : 0/0
 21203 ;;		On exit  : 0/0
 21204 ;;		Unchanged: 0/0
 21205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21210 ;;Total ram usage:        0 bytes
 21211 ;; Hardware stack levels used:    1
 21212 ;; Hardware stack levels required when called:   22
 21213 ;; This function calls:
 21214 ;;		_SendMACPacket
 21215 ;; This function is called by:
 21216 ;;		_MiWiTasks
 21217 ;;		_RouteMessage
 21218 ;; This function uses a non-reentrant model
 21219 ;;
 21220                           
 21221                           	psect	text44
 21222  008762                     __ptext44:
 21223                           	opt stack 0
 21224  008762                     _SendBeacon:
 21225                           	opt stack 5
 21226                           
 21227                           ;miwi_mesh.c: 3279: uint8_t i;
 21228                           ;miwi_mesh.c: 3281: {TxData = 0;};
 21229                           
 21230                           ;incstack = 0
 21231  008762  0E00               	movlw	0
 21232  008764  0101               	movlb	1	; () banked
 21233  008766  6FC6               	movwf	_TxData& (0+255),b
 21234                           
 21235                           ; BSR set to: 1
 21236                           ;miwi_mesh.c: 3283: TxBuffer[TxData++] = myPANID.v[0];
 21237  008768  0101               	movlb	1	; () banked
 21238  00876A  51C6               	movf	_TxData& (0+255),w,b
 21239  00876C  0D01               	mullw	1
 21240  00876E  0EA6               	movlw	low _TxBuffer
 21241  008770  24F3               	addwf	prodl,w,c
 21242  008772  6ED9               	movwf	fsr2l,c
 21243  008774  0E02               	movlw	high _TxBuffer
 21244  008776  20F4               	addwfc	prodh,w,c
 21245  008778  6EDA               	movwf	fsr2h,c
 21246  00877A  C1F0  FFDF         	movff	_myPANID,indf2
 21247                           
 21248                           ; BSR set to: 1
 21249  00877E  0101               	movlb	1	; () banked
 21250  008780  2BC6               	incf	_TxData& (0+255),f,b
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;miwi_mesh.c: 3284: TxBuffer[TxData++] = myPANID.v[1];
 21254  008782  0101               	movlb	1	; () banked
 21255  008784  51C6               	movf	_TxData& (0+255),w,b
 21256  008786  0D01               	mullw	1
 21257  008788  0EA6               	movlw	low _TxBuffer
 21258  00878A  24F3               	addwf	prodl,w,c
 21259  00878C  6ED9               	movwf	fsr2l,c
 21260  00878E  0E02               	movlw	high _TxBuffer
 21261  008790  20F4               	addwfc	prodh,w,c
 21262  008792  6EDA               	movwf	fsr2h,c
 21263  008794  C1F1  FFDF         	movff	_myPANID+1,indf2
 21264                           
 21265                           ; BSR set to: 1
 21266  008798  0101               	movlb	1	; () banked
 21267  00879A  2BC6               	incf	_TxData& (0+255),f,b
 21268                           
 21269                           ; BSR set to: 1
 21270                           ;miwi_mesh.c: 3285: TxBuffer[TxData++] = myShortAddress.v[0];
 21271  00879C  0101               	movlb	1	; () banked
 21272  00879E  51C6               	movf	_TxData& (0+255),w,b
 21273  0087A0  0D01               	mullw	1
 21274  0087A2  0EA6               	movlw	low _TxBuffer
 21275  0087A4  24F3               	addwf	prodl,w,c
 21276  0087A6  6ED9               	movwf	fsr2l,c
 21277  0087A8  0E02               	movlw	high _TxBuffer
 21278  0087AA  20F4               	addwfc	prodh,w,c
 21279  0087AC  6EDA               	movwf	fsr2h,c
 21280  0087AE  C1F2  FFDF         	movff	_myShortAddress,indf2
 21281                           
 21282                           ; BSR set to: 1
 21283  0087B2  0101               	movlb	1	; () banked
 21284  0087B4  2BC6               	incf	_TxData& (0+255),f,b
 21285                           
 21286                           ; BSR set to: 1
 21287                           ;miwi_mesh.c: 3286: TxBuffer[TxData++] = myShortAddress.v[1];
 21288  0087B6  0101               	movlb	1	; () banked
 21289  0087B8  51C6               	movf	_TxData& (0+255),w,b
 21290  0087BA  0D01               	mullw	1
 21291  0087BC  0EA6               	movlw	low _TxBuffer
 21292  0087BE  24F3               	addwf	prodl,w,c
 21293  0087C0  6ED9               	movwf	fsr2l,c
 21294  0087C2  0E02               	movlw	high _TxBuffer
 21295  0087C4  20F4               	addwfc	prodh,w,c
 21296  0087C6  6EDA               	movwf	fsr2h,c
 21297  0087C8  C1F3  FFDF         	movff	_myShortAddress+1,indf2
 21298                           
 21299                           ; BSR set to: 1
 21300  0087CC  0101               	movlb	1	; () banked
 21301  0087CE  2BC6               	incf	_TxData& (0+255),f,b
 21302                           
 21303                           ; BSR set to: 1
 21304                           ;miwi_mesh.c: 3288: TxBuffer[TxData++] = 0xFF;
 21305  0087D0  0101               	movlb	1	; () banked
 21306  0087D2  51C6               	movf	_TxData& (0+255),w,b
 21307  0087D4  0D01               	mullw	1
 21308  0087D6  0EA6               	movlw	low _TxBuffer
 21309  0087D8  24F3               	addwf	prodl,w,c
 21310  0087DA  6ED9               	movwf	fsr2l,c
 21311  0087DC  0E02               	movlw	high _TxBuffer
 21312  0087DE  20F4               	addwfc	prodh,w,c
 21313  0087E0  6EDA               	movwf	fsr2h,c
 21314  0087E2  0EFF               	movlw	255
 21315  0087E4  6EDF               	movwf	indf2,c
 21316                           
 21317                           ; BSR set to: 1
 21318  0087E6  0101               	movlb	1	; () banked
 21319  0087E8  2BC6               	incf	_TxData& (0+255),f,b
 21320                           
 21321                           ; BSR set to: 1
 21322                           ;miwi_mesh.c: 3289: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 21323  0087EA  0101               	movlb	1	; () banked
 21324  0087EC  51C6               	movf	_TxData& (0+255),w,b
 21325  0087EE  0D01               	mullw	1
 21326  0087F0  0EA6               	movlw	low _TxBuffer
 21327  0087F2  24F3               	addwf	prodl,w,c
 21328  0087F4  6ED9               	movwf	fsr2l,c
 21329  0087F6  0E02               	movlw	high _TxBuffer
 21330  0087F8  20F4               	addwfc	prodh,w,c
 21331  0087FA  6EDA               	movwf	fsr2h,c
 21332  0087FC  C1C2  FFDF         	movff	_MiWiCapacityInfo,indf2
 21333                           
 21334                           ; BSR set to: 1
 21335  008800  0101               	movlb	1	; () banked
 21336  008802  2BC6               	incf	_TxData& (0+255),f,b
 21337                           
 21338                           ; BSR set to: 1
 21339                           ;miwi_mesh.c: 3290: TxBuffer[TxData++] = 0x00;
 21340  008804  0101               	movlb	1	; () banked
 21341  008806  51C6               	movf	_TxData& (0+255),w,b
 21342  008808  0D01               	mullw	1
 21343  00880A  0EA6               	movlw	low _TxBuffer
 21344  00880C  24F3               	addwf	prodl,w,c
 21345  00880E  6ED9               	movwf	fsr2l,c
 21346  008810  0E02               	movlw	high _TxBuffer
 21347  008812  20F4               	addwfc	prodh,w,c
 21348  008814  6EDA               	movwf	fsr2h,c
 21349  008816  0E00               	movlw	0
 21350  008818  6EDF               	movwf	indf2,c
 21351                           
 21352                           ; BSR set to: 1
 21353  00881A  0101               	movlb	1	; () banked
 21354  00881C  2BC6               	incf	_TxData& (0+255),f,b
 21355                           
 21356                           ; BSR set to: 1
 21357                           ;miwi_mesh.c: 3291: TxBuffer[TxData++] = 0x00;
 21358  00881E  0101               	movlb	1	; () banked
 21359  008820  51C6               	movf	_TxData& (0+255),w,b
 21360  008822  0D01               	mullw	1
 21361  008824  0EA6               	movlw	low _TxBuffer
 21362  008826  24F3               	addwf	prodl,w,c
 21363  008828  6ED9               	movwf	fsr2l,c
 21364  00882A  0E02               	movlw	high _TxBuffer
 21365  00882C  20F4               	addwfc	prodh,w,c
 21366  00882E  6EDA               	movwf	fsr2h,c
 21367  008830  0E00               	movlw	0
 21368  008832  6EDF               	movwf	indf2,c
 21369                           
 21370                           ; BSR set to: 1
 21371  008834  0101               	movlb	1	; () banked
 21372  008836  2BC6               	incf	_TxData& (0+255),f,b
 21373                           
 21374                           ; BSR set to: 1
 21375                           ;miwi_mesh.c: 3292: TxBuffer[TxData++] = 0x4D;
 21376  008838  0101               	movlb	1	; () banked
 21377  00883A  51C6               	movf	_TxData& (0+255),w,b
 21378  00883C  0D01               	mullw	1
 21379  00883E  0EA6               	movlw	low _TxBuffer
 21380  008840  24F3               	addwf	prodl,w,c
 21381  008842  6ED9               	movwf	fsr2l,c
 21382  008844  0E02               	movlw	high _TxBuffer
 21383  008846  20F4               	addwfc	prodh,w,c
 21384  008848  6EDA               	movwf	fsr2h,c
 21385  00884A  0E4D               	movlw	77
 21386  00884C  6EDF               	movwf	indf2,c
 21387                           
 21388                           ; BSR set to: 1
 21389  00884E  0101               	movlb	1	; () banked
 21390  008850  2BC6               	incf	_TxData& (0+255),f,b
 21391                           
 21392                           ; BSR set to: 1
 21393                           ;miwi_mesh.c: 3293: TxBuffer[TxData++] = 0x41;
 21394  008852  0101               	movlb	1	; () banked
 21395  008854  51C6               	movf	_TxData& (0+255),w,b
 21396  008856  0D01               	mullw	1
 21397  008858  0EA6               	movlw	low _TxBuffer
 21398  00885A  24F3               	addwf	prodl,w,c
 21399  00885C  6ED9               	movwf	fsr2l,c
 21400  00885E  0E02               	movlw	high _TxBuffer
 21401  008860  20F4               	addwfc	prodh,w,c
 21402  008862  6EDA               	movwf	fsr2h,c
 21403  008864  0E41               	movlw	65
 21404  008866  6EDF               	movwf	indf2,c
 21405                           
 21406                           ; BSR set to: 1
 21407  008868  0101               	movlb	1	; () banked
 21408  00886A  2BC6               	incf	_TxData& (0+255),f,b
 21409                           
 21410                           ; BSR set to: 1
 21411                           ;miwi_mesh.c: 3294: TxBuffer[TxData++] = knownCoordinators;
 21412  00886C  0101               	movlb	1	; () banked
 21413  00886E  51C6               	movf	_TxData& (0+255),w,b
 21414  008870  0D01               	mullw	1
 21415  008872  0EA6               	movlw	low _TxBuffer
 21416  008874  24F3               	addwf	prodl,w,c
 21417  008876  6ED9               	movwf	fsr2l,c
 21418  008878  0E02               	movlw	high _TxBuffer
 21419  00887A  20F4               	addwfc	prodh,w,c
 21420  00887C  6EDA               	movwf	fsr2h,c
 21421  00887E  C1C7  FFDF         	movff	_knownCoordinators,indf2
 21422                           
 21423                           ; BSR set to: 1
 21424  008882  0101               	movlb	1	; () banked
 21425  008884  2BC6               	incf	_TxData& (0+255),f,b
 21426                           
 21427                           ; BSR set to: 1
 21428                           ;miwi_mesh.c: 3305: SendMACPacket((0), 0x03);
 21429  008886  0E00               	movlw	0
 21430  008888  0101               	movlb	1	; () banked
 21431  00888A  6F39               	movwf	SendMACPacket@Address& (0+255),b
 21432  00888C  0E00               	movlw	0
 21433  00888E  0101               	movlb	1	; () banked
 21434  008890  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 21435  008892  0E03               	movlw	3
 21436  008894  0101               	movlb	1	; () banked
 21437  008896  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 21438  008898  ECC9  F057         	call	_SendMACPacket	;wreg free
 21439  00889C  0012               	return		;funcret
 21440  00889E                     __end_of_SendBeacon:
 21441                           	opt stack 0
 21442                           tblptru	equ	0xFF8
 21443                           tblptrh	equ	0xFF7
 21444                           tblptrl	equ	0xFF6
 21445                           tablat	equ	0xFF5
 21446                           prodh	equ	0xFF4
 21447                           prodl	equ	0xFF3
 21448                           intcon	equ	0xFF2
 21449                           intcon2	equ	0xFF1
 21450                           intcon3	equ	0xFF0
 21451                           indf0	equ	0xFEF
 21452                           postinc0	equ	0xFEE
 21453                           plusw0	equ	0xFEB
 21454                           fsr0h	equ	0xFEA
 21455                           fsr0l	equ	0xFE9
 21456                           wreg	equ	0xFE8
 21457                           indf1	equ	0xFE7
 21458                           postinc1	equ	0xFE6
 21459                           postdec1	equ	0xFE5
 21460                           fsr1h	equ	0xFE2
 21461                           fsr1l	equ	0xFE1
 21462                           indf2	equ	0xFDF
 21463                           postinc2	equ	0xFDE
 21464                           postdec2	equ	0xFDD
 21465                           plusw2	equ	0xFDB
 21466                           fsr2h	equ	0xFDA
 21467                           fsr2l	equ	0xFD9
 21468                           status	equ	0xFD8
 21469                           
 21470 ;; *************** function _SendMACPacket *****************
 21471 ;; Defined at:
 21472 ;;		line 2252 in file "src/miwi/miwi_mesh.c"
 21473 ;; Parameters:    Size  Location     Type
 21474 ;;  Address         2   57[BANK1 ] PTR unsigned char 
 21475 ;;		 -> ConnectionTable(576), NULL(0), 
 21476 ;;  PacketType      1   59[BANK1 ] unsigned char 
 21477 ;; Auto vars:     Size  Location     Type
 21478 ;;		None
 21479 ;; Return value:  Size  Location     Type
 21480 ;;                  1    wreg      unsigned char 
 21481 ;; Registers used:
 21482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21483 ;; Tracked objects:
 21484 ;;		On entry : 0/0
 21485 ;;		On exit  : 0/0
 21486 ;;		Unchanged: 0/0
 21487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21488 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21490 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21491 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21492 ;;Total ram usage:        4 bytes
 21493 ;; Hardware stack levels used:    1
 21494 ;; Hardware stack levels required when called:   21
 21495 ;; This function calls:
 21496 ;;		_MiMAC_SendPacket
 21497 ;; This function is called by:
 21498 ;;		_MiWiTasks
 21499 ;;		_RouteMessage
 21500 ;;		_SendBeacon
 21501 ;;		_MiApp_SearchConnection
 21502 ;;		_MiApp_EstablishConnection
 21503 ;; This function uses a non-reentrant model
 21504 ;;
 21505                           
 21506                           	psect	text45
 21507  00AF92                     __ptext45:
 21508                           	opt stack 0
 21509  00AF92                     _SendMACPacket:
 21510                           	opt stack 6
 21511                           
 21512                           ;miwi_mesh.c: 2255: MTP.flags.Val = 0;
 21513                           
 21514                           ;incstack = 0
 21515  00AF92  0E00               	movlw	0
 21516  00AF94  0101               	movlb	1	; () banked
 21517  00AF96  6FAD               	movwf	_MTP& (0+255),b
 21518                           
 21519                           ; BSR set to: 1
 21520                           ;miwi_mesh.c: 2257: MTP.flags.bits.packetType = PacketType;
 21521  00AF98  0101               	movlb	1	; () banked
 21522  00AF9A  51AD               	movf	_MTP& (0+255),w,b
 21523  00AF9C  0101               	movlb	1	; () banked
 21524  00AF9E  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 21525  00AFA0  0BFC               	andlw	-4
 21526  00AFA2  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 21527  00AFA4  0101               	movlb	1	; () banked
 21528  00AFA6  6FAD               	movwf	_MTP& (0+255),b
 21529                           
 21530                           ; BSR set to: 1
 21531                           ;miwi_mesh.c: 2258: if( Address == (0) )
 21532  00AFA8  0101               	movlb	1	; () banked
 21533  00AFAA  5139               	movf	SendMACPacket@Address& (0+255),w,b
 21534  00AFAC  0101               	movlb	1	; () banked
 21535  00AFAE  113A               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 21536  00AFB0  A4D8               	btfss	status,2,c
 21537  00AFB2  D002               	goto	l17076
 21538                           
 21539                           ; BSR set to: 1
 21540                           ;miwi_mesh.c: 2259: {
 21541                           ;miwi_mesh.c: 2260: MTP.flags.bits.broadcast = 1;
 21542  00AFB4  0101               	movlb	1	; () banked
 21543  00AFB6  85AD               	bsf	_MTP& (0+255),2,b
 21544  00AFB8                     l17076:
 21545                           
 21546                           ; BSR set to: 1
 21547                           ;miwi_mesh.c: 2261: }
 21548                           ;miwi_mesh.c: 2262: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 21549  00AFB8  0101               	movlb	1	; () banked
 21550  00AFBA  B5AD               	btfsc	_MTP& (0+255),2,b
 21551  00AFBC  D004               	goto	u18610
 21552  00AFBE  0101               	movlb	1	; () banked
 21553  00AFC0  6B3C               	clrf	??_SendMACPacket& (0+255),b
 21554  00AFC2  2B3C               	incf	??_SendMACPacket& (0+255),f,b
 21555  00AFC4  D002               	goto	u18628
 21556  00AFC6                     u18610:
 21557  00AFC6  0101               	movlb	1	; () banked
 21558  00AFC8  6B3C               	clrf	??_SendMACPacket& (0+255),b
 21559  00AFCA                     u18628:
 21560  00AFCA  0101               	movlb	1	; () banked
 21561  00AFCC  3B3C               	swapf	??_SendMACPacket& (0+255),f,b
 21562  00AFCE  473C               	rlncf	??_SendMACPacket& (0+255),f,b
 21563  00AFD0  0101               	movlb	1	; () banked
 21564  00AFD2  51AD               	movf	_MTP& (0+255),w,b
 21565  00AFD4  0101               	movlb	1	; () banked
 21566  00AFD6  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 21567  00AFD8  0BDF               	andlw	-33
 21568  00AFDA  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 21569  00AFDC  0101               	movlb	1	; () banked
 21570  00AFDE  6FAD               	movwf	_MTP& (0+255),b
 21571                           
 21572                           ; BSR set to: 1
 21573                           ;miwi_mesh.c: 2263: MTP.flags.bits.sourcePrsnt = 1;
 21574  00AFE0  0101               	movlb	1	; () banked
 21575  00AFE2  8FAD               	bsf	_MTP& (0+255),7,b
 21576                           
 21577                           ;miwi_mesh.c: 2265: MTP.DestAddress = Address;
 21578  00AFE4  C139  F1AE         	movff	SendMACPacket@Address,_MTP+1
 21579  00AFE8  C13A  F1AF         	movff	SendMACPacket@Address+1,_MTP+2
 21580                           
 21581                           ; BSR set to: 1
 21582                           ;miwi_mesh.c: 2288: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 21583                           ;	Return value of _SendMACPacket is never used
 21584  00AFEC  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21585  00AFF0  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21586  00AFF4  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21587  00AFF8  0EA6               	movlw	low _TxBuffer
 21588  00AFFA  0101               	movlb	1	; () banked
 21589  00AFFC  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21590  00AFFE  0E02               	movlw	high _TxBuffer
 21591  00B000  0101               	movlb	1	; () banked
 21592  00B002  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21593  00B004  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21594  00B008  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 21595  00B00C  0012               	return	
 21596  00B00E                     __end_of_SendMACPacket:
 21597                           	opt stack 0
 21598                           tblptru	equ	0xFF8
 21599                           tblptrh	equ	0xFF7
 21600                           tblptrl	equ	0xFF6
 21601                           tablat	equ	0xFF5
 21602                           prodh	equ	0xFF4
 21603                           prodl	equ	0xFF3
 21604                           intcon	equ	0xFF2
 21605                           intcon2	equ	0xFF1
 21606                           intcon3	equ	0xFF0
 21607                           indf0	equ	0xFEF
 21608                           postinc0	equ	0xFEE
 21609                           plusw0	equ	0xFEB
 21610                           fsr0h	equ	0xFEA
 21611                           fsr0l	equ	0xFE9
 21612                           wreg	equ	0xFE8
 21613                           indf1	equ	0xFE7
 21614                           postinc1	equ	0xFE6
 21615                           postdec1	equ	0xFE5
 21616                           fsr1h	equ	0xFE2
 21617                           fsr1l	equ	0xFE1
 21618                           indf2	equ	0xFDF
 21619                           postinc2	equ	0xFDE
 21620                           postdec2	equ	0xFDD
 21621                           plusw2	equ	0xFDB
 21622                           fsr2h	equ	0xFDA
 21623                           fsr2l	equ	0xFD9
 21624                           status	equ	0xFD8
 21625                           
 21626 ;; *************** function _MiMAC_SendPacket *****************
 21627 ;; Defined at:
 21628 ;;		line 727 in file "src/miwi/drv_mrf_miwi_89xa.c"
 21629 ;; Parameters:    Size  Location     Type
 21630 ;;  transParam      3   47[BANK1 ] struct .
 21631 ;;  MACPayload      2   50[BANK1 ] PTR unsigned char 
 21632 ;;		 -> TxBuffer(43), 
 21633 ;;  MACPayloadLe    1   52[BANK1 ] unsigned char 
 21634 ;; Auto vars:     Size  Location     Type
 21635 ;;  headerLen       1   54[BANK1 ] unsigned char 
 21636 ;;  i               1   56[BANK1 ] unsigned char 
 21637 ;;  TxIndex         1   55[BANK1 ] unsigned char 
 21638 ;; Return value:  Size  Location     Type
 21639 ;;                  1    wreg      unsigned char 
 21640 ;; Registers used:
 21641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21642 ;; Tracked objects:
 21643 ;;		On entry : 0/0
 21644 ;;		On exit  : 0/0
 21645 ;;		Unchanged: 0/0
 21646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21647 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21648 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21649 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21650 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21651 ;;Total ram usage:       10 bytes
 21652 ;; Hardware stack levels used:    1
 21653 ;; Hardware stack levels required when called:   20
 21654 ;; This function calls:
 21655 ;;		_CCM_Enc
 21656 ;;		_TxPacket
 21657 ;; This function is called by:
 21658 ;;		_MiWiTasks
 21659 ;;		_RouteMessage
 21660 ;;		_SendMACPacket
 21661 ;;		_MiApp_UnicastAddress
 21662 ;;		_MiApp_BroadcastPacket
 21663 ;;		_MiApp_RemoveConnection
 21664 ;; This function uses a non-reentrant model
 21665 ;;
 21666                           
 21667                           	psect	text46
 21668  006B44                     __ptext46:
 21669                           	opt stack 0
 21670  006B44                     _MiMAC_SendPacket:
 21671                           	opt stack 6
 21672                           
 21673                           ;drv_mrf_miwi_89xa.c: 731: uint8_t i;
 21674                           ;drv_mrf_miwi_89xa.c: 732: uint8_t TxIndex;
 21675                           ;drv_mrf_miwi_89xa.c: 734: if( MACPayloadLen > 32 )
 21676                           
 21677                           ;incstack = 0
 21678  006B44  0E20               	movlw	32
 21679  006B46  0101               	movlb	1	; () banked
 21680  006B48  6534               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 21681  006B4A  D002               	goto	l16988
 21682                           
 21683                           ; BSR set to: 1
 21684                           ;drv_mrf_miwi_89xa.c: 735: {
 21685                           ;drv_mrf_miwi_89xa.c: 736: return 0;
 21686  006B4C  0E00               	movlw	0
 21687                           
 21688                           ; BSR set to: 1
 21689  006B4E  0012               	return	
 21690  006B50                     l16988:
 21691                           
 21692                           ; BSR set to: 1
 21693                           ;drv_mrf_miwi_89xa.c: 737: }
 21694                           ;drv_mrf_miwi_89xa.c: 742: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 21695  006B50  0101               	movlb	1	; () banked
 21696  006B52  B52F               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 21697  006B54  D004               	goto	u18480
 21698  006B56  0101               	movlb	1	; () banked
 21699  006B58  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 21700  006B5A  2B35               	incf	??_MiMAC_SendPacket& (0+255),f,b
 21701  006B5C  D002               	goto	u18498
 21702  006B5E                     u18480:
 21703  006B5E  0101               	movlb	1	; () banked
 21704  006B60  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 21705  006B62                     u18498:
 21706  006B62  0101               	movlb	1	; () banked
 21707  006B64  3B35               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 21708  006B66  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 21709  006B68  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 21710  006B6A  0101               	movlb	1	; () banked
 21711  006B6C  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 21712  006B6E  0101               	movlb	1	; () banked
 21713  006B70  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 21714  006B72  0BBF               	andlw	-65
 21715  006B74  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 21716  006B76  0101               	movlb	1	; () banked
 21717  006B78  6F2F               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 21718                           
 21719                           ;drv_mrf_miwi_89xa.c: 749: if( transParam.flags.bits.packetType == 0x01 )
 21720  006B7A  0101               	movlb	1	; () banked
 21721  006B7C  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 21722  006B7E  0B03               	andlw	3
 21723  006B80  06E8               	decf	wreg,f,c
 21724  006B82  A4D8               	btfss	status,2,c
 21725  006B84  D002               	goto	l322
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;drv_mrf_miwi_89xa.c: 750: {
 21729                           ;drv_mrf_miwi_89xa.c: 751: transParam.flags.bits.sourcePrsnt = 1;
 21730  006B86  0101               	movlb	1	; () banked
 21731  006B88  8F2F               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 21732  006B8A                     l322:
 21733                           
 21734                           ; BSR set to: 1
 21735                           ;drv_mrf_miwi_89xa.c: 752: }
 21736                           ;drv_mrf_miwi_89xa.c: 754: MACTxBuffer[0] = transParam.flags.Val;
 21737  006B8A  C12F  F266         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 21738                           
 21739                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[1] = MACSeq++;
 21740  006B8E  C1C0  F267         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 21741                           
 21742                           ; BSR set to: 1
 21743  006B92  0101               	movlb	1	; () banked
 21744  006B94  2BC0               	incf	_MACSeq& (0+255),f,b
 21745                           
 21746                           ; BSR set to: 1
 21747                           ;drv_mrf_miwi_89xa.c: 758: TxIndex = 2;
 21748  006B96  0E02               	movlw	2
 21749  006B98  0101               	movlb	1	; () banked
 21750  006B9A  6F37               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 21751                           
 21752                           ; BSR set to: 1
 21753                           ;drv_mrf_miwi_89xa.c: 760: if( transParam.flags.bits.destPrsnt )
 21754  006B9C  0101               	movlb	1	; () banked
 21755  006B9E  AD2F               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 21756  006BA0  D02B               	goto	l327
 21757                           
 21758                           ; BSR set to: 1
 21759                           ;drv_mrf_miwi_89xa.c: 761: {
 21760                           ;drv_mrf_miwi_89xa.c: 762: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 21761  006BA2  0E00               	movlw	0
 21762  006BA4  0101               	movlb	1	; () banked
 21763  006BA6  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21764  006BA8  D01A               	goto	l17006
 21765  006BAA                     l17000:
 21766                           
 21767                           ; BSR set to: 1
 21768                           ;drv_mrf_miwi_89xa.c: 763: {
 21769                           ;drv_mrf_miwi_89xa.c: 764: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 21770  006BAA  0101               	movlb	1	; () banked
 21771  006BAC  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21772  006BAE  0D01               	mullw	1
 21773  006BB0  50F3               	movf	prodl,w,c
 21774  006BB2  0101               	movlb	1	; () banked
 21775  006BB4  2530               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 21776  006BB6  6ED9               	movwf	fsr2l,c
 21777  006BB8  50F4               	movf	prodh,w,c
 21778  006BBA  0101               	movlb	1	; () banked
 21779  006BBC  2131               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 21780  006BBE  6EDA               	movwf	fsr2h,c
 21781  006BC0  0101               	movlb	1	; () banked
 21782  006BC2  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21783  006BC4  0D01               	mullw	1
 21784  006BC6  0E66               	movlw	low _MACTxBuffer
 21785  006BC8  24F3               	addwf	prodl,w,c
 21786  006BCA  6EE1               	movwf	fsr1l,c
 21787  006BCC  0E02               	movlw	high _MACTxBuffer
 21788  006BCE  20F4               	addwfc	prodh,w,c
 21789  006BD0  6EE2               	movwf	fsr1h,c
 21790  006BD2  CFDF FFE7          	movff	indf2,indf1
 21791                           
 21792                           ; BSR set to: 1
 21793  006BD6  0101               	movlb	1	; () banked
 21794  006BD8  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21795                           
 21796                           ; BSR set to: 1
 21797  006BDA  0101               	movlb	1	; () banked
 21798  006BDC  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21799  006BDE                     l17006:
 21800                           
 21801                           ; BSR set to: 1
 21802  006BDE  0101               	movlb	1	; () banked
 21803  006BE0  31AA               	rrcf	_MACInitParams& (0+255),w,b
 21804  006BE2  32E8               	rrcf	wreg,f,c
 21805  006BE4  32E8               	rrcf	wreg,f,c
 21806  006BE6  0B0F               	andlw	15
 21807  006BE8  0101               	movlb	1	; () banked
 21808  006BEA  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 21809  006BEC  0101               	movlb	1	; () banked
 21810  006BEE  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 21811  006BF0  0101               	movlb	1	; () banked
 21812  006BF2  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21813  006BF4  A0D8               	btfss	status,0,c
 21814  006BF6  D7D9               	goto	l17000
 21815  006BF8                     l327:
 21816                           
 21817                           ; BSR set to: 1
 21818                           ;drv_mrf_miwi_89xa.c: 770: }
 21819                           ;drv_mrf_miwi_89xa.c: 772: if( transParam.flags.bits.sourcePrsnt )
 21820  006BF8  0101               	movlb	1	; () banked
 21821  006BFA  AF2F               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 21822  006BFC  D02B               	goto	l328
 21823                           
 21824                           ; BSR set to: 1
 21825                           ;drv_mrf_miwi_89xa.c: 773: {
 21826                           ;drv_mrf_miwi_89xa.c: 774: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 21827  006BFE  0E00               	movlw	0
 21828  006C00  0101               	movlb	1	; () banked
 21829  006C02  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21830  006C04  D01A               	goto	l17016
 21831  006C06                     l17010:
 21832                           
 21833                           ; BSR set to: 1
 21834                           ;drv_mrf_miwi_89xa.c: 775: {
 21835                           ;drv_mrf_miwi_89xa.c: 776: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 21836  006C06  0101               	movlb	1	; () banked
 21837  006C08  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21838  006C0A  0D01               	mullw	1
 21839  006C0C  50F3               	movf	prodl,w,c
 21840  006C0E  0101               	movlb	1	; () banked
 21841  006C10  25AB               	addwf	(_MACInitParams+1)& (0+255),w,b
 21842  006C12  6ED9               	movwf	fsr2l,c
 21843  006C14  50F4               	movf	prodh,w,c
 21844  006C16  0101               	movlb	1	; () banked
 21845  006C18  21AC               	addwfc	(_MACInitParams+2)& (0+255),w,b
 21846  006C1A  6EDA               	movwf	fsr2h,c
 21847  006C1C  0101               	movlb	1	; () banked
 21848  006C1E  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21849  006C20  0D01               	mullw	1
 21850  006C22  0E66               	movlw	low _MACTxBuffer
 21851  006C24  24F3               	addwf	prodl,w,c
 21852  006C26  6EE1               	movwf	fsr1l,c
 21853  006C28  0E02               	movlw	high _MACTxBuffer
 21854  006C2A  20F4               	addwfc	prodh,w,c
 21855  006C2C  6EE2               	movwf	fsr1h,c
 21856  006C2E  CFDF FFE7          	movff	indf2,indf1
 21857                           
 21858                           ; BSR set to: 1
 21859  006C32  0101               	movlb	1	; () banked
 21860  006C34  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21861                           
 21862                           ; BSR set to: 1
 21863  006C36  0101               	movlb	1	; () banked
 21864  006C38  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21865  006C3A                     l17016:
 21866                           
 21867                           ; BSR set to: 1
 21868  006C3A  0101               	movlb	1	; () banked
 21869  006C3C  31AA               	rrcf	_MACInitParams& (0+255),w,b
 21870  006C3E  32E8               	rrcf	wreg,f,c
 21871  006C40  32E8               	rrcf	wreg,f,c
 21872  006C42  0B0F               	andlw	15
 21873  006C44  0101               	movlb	1	; () banked
 21874  006C46  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 21875  006C48  0101               	movlb	1	; () banked
 21876  006C4A  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 21877  006C4C  0101               	movlb	1	; () banked
 21878  006C4E  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21879  006C50  A0D8               	btfss	status,0,c
 21880  006C52  D7D9               	goto	l17010
 21881  006C54                     l328:
 21882                           
 21883                           ; BSR set to: 1
 21884                           ;drv_mrf_miwi_89xa.c: 777: }
 21885                           ;drv_mrf_miwi_89xa.c: 779: }
 21886                           ;drv_mrf_miwi_89xa.c: 782: if( transParam.flags.bits.secEn )
 21887  006C54  0101               	movlb	1	; () banked
 21888  006C56  A72F               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 21889  006C58  D071               	goto	l17054
 21890                           
 21891                           ; BSR set to: 1
 21892                           ;drv_mrf_miwi_89xa.c: 783: {
 21893                           ;drv_mrf_miwi_89xa.c: 785: for(i = 0; i < 4; i++)
 21894  006C5A  0E00               	movlw	0
 21895  006C5C  0101               	movlb	1	; () banked
 21896  006C5E  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21897  006C60                     l17020:
 21898                           
 21899                           ; BSR set to: 1
 21900  006C60  0E03               	movlw	3
 21901  006C62  0101               	movlb	1	; () banked
 21902  006C64  6538               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 21903  006C66  D001               	goto	l17024
 21904  006C68  D019               	goto	l17032
 21905  006C6A                     l17024:
 21906                           
 21907                           ; BSR set to: 1
 21908                           ;drv_mrf_miwi_89xa.c: 786: {
 21909                           ;drv_mrf_miwi_89xa.c: 787: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 21910  006C6A  0101               	movlb	1	; () banked
 21911  006C6C  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21912  006C6E  0D01               	mullw	1
 21913  006C70  0EA2               	movlw	low _OutgoingFrameCounter
 21914  006C72  24F3               	addwf	prodl,w,c
 21915  006C74  6ED9               	movwf	fsr2l,c
 21916  006C76  0E01               	movlw	high _OutgoingFrameCounter
 21917  006C78  20F4               	addwfc	prodh,w,c
 21918  006C7A  6EDA               	movwf	fsr2h,c
 21919  006C7C  0101               	movlb	1	; () banked
 21920  006C7E  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21921  006C80  0D01               	mullw	1
 21922  006C82  0E66               	movlw	low _MACTxBuffer
 21923  006C84  24F3               	addwf	prodl,w,c
 21924  006C86  6EE1               	movwf	fsr1l,c
 21925  006C88  0E02               	movlw	high _MACTxBuffer
 21926  006C8A  20F4               	addwfc	prodh,w,c
 21927  006C8C  6EE2               	movwf	fsr1h,c
 21928  006C8E  CFDF FFE7          	movff	indf2,indf1
 21929                           
 21930                           ; BSR set to: 1
 21931  006C92  0101               	movlb	1	; () banked
 21932  006C94  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21933                           
 21934                           ; BSR set to: 1
 21935  006C96  0101               	movlb	1	; () banked
 21936  006C98  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21937  006C9A  D7E2               	goto	l17020
 21938  006C9C                     l17032:
 21939                           
 21940                           ; BSR set to: 1
 21941                           ;drv_mrf_miwi_89xa.c: 788: }
 21942                           ;drv_mrf_miwi_89xa.c: 789: OutgoingFrameCounter.Val++;
 21943  006C9C  0E01               	movlw	1
 21944  006C9E  0101               	movlb	1	; () banked
 21945  006CA0  27A2               	addwf	_OutgoingFrameCounter& (0+255),f,b
 21946  006CA2  0E00               	movlw	0
 21947  006CA4  23A3               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 21948  006CA6  23A4               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 21949  006CA8  23A5               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 21950                           
 21951                           ; BSR set to: 1
 21952                           ;drv_mrf_miwi_89xa.c: 796: MACTxBuffer[TxIndex++] = 0x00;
 21953  006CAA  0101               	movlb	1	; () banked
 21954  006CAC  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21955  006CAE  0D01               	mullw	1
 21956  006CB0  0E66               	movlw	low _MACTxBuffer
 21957  006CB2  24F3               	addwf	prodl,w,c
 21958  006CB4  6ED9               	movwf	fsr2l,c
 21959  006CB6  0E02               	movlw	high _MACTxBuffer
 21960  006CB8  20F4               	addwfc	prodh,w,c
 21961  006CBA  6EDA               	movwf	fsr2h,c
 21962  006CBC  0E00               	movlw	0
 21963  006CBE  6EDF               	movwf	indf2,c
 21964                           
 21965                           ; BSR set to: 1
 21966  006CC0  0101               	movlb	1	; () banked
 21967  006CC2  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21968                           
 21969                           ; BSR set to: 1
 21970                           ;drv_mrf_miwi_89xa.c: 798: {
 21971                           ;drv_mrf_miwi_89xa.c: 799: uint8_t headerLen;
 21972                           ;drv_mrf_miwi_89xa.c: 801: headerLen = TxIndex;
 21973  006CC4  C137  F136         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 21974                           
 21975                           ; BSR set to: 1
 21976                           ;drv_mrf_miwi_89xa.c: 803: for(i = 0; i < MACPayloadLen; i++)
 21977  006CC8  0E00               	movlw	0
 21978  006CCA  0101               	movlb	1	; () banked
 21979  006CCC  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21980  006CCE  D01A               	goto	l17048
 21981  006CD0                     l17042:
 21982                           
 21983                           ; BSR set to: 1
 21984                           ;drv_mrf_miwi_89xa.c: 804: {
 21985                           ;drv_mrf_miwi_89xa.c: 805: MACTxBuffer[TxIndex++] = MACPayload[i];
 21986  006CD0  0101               	movlb	1	; () banked
 21987  006CD2  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21988  006CD4  0D01               	mullw	1
 21989  006CD6  50F3               	movf	prodl,w,c
 21990  006CD8  0101               	movlb	1	; () banked
 21991  006CDA  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 21992  006CDC  6ED9               	movwf	fsr2l,c
 21993  006CDE  50F4               	movf	prodh,w,c
 21994  006CE0  0101               	movlb	1	; () banked
 21995  006CE2  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 21996  006CE4  6EDA               	movwf	fsr2h,c
 21997  006CE6  0101               	movlb	1	; () banked
 21998  006CE8  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21999  006CEA  0D01               	mullw	1
 22000  006CEC  0E66               	movlw	low _MACTxBuffer
 22001  006CEE  24F3               	addwf	prodl,w,c
 22002  006CF0  6EE1               	movwf	fsr1l,c
 22003  006CF2  0E02               	movlw	high _MACTxBuffer
 22004  006CF4  20F4               	addwfc	prodh,w,c
 22005  006CF6  6EE2               	movwf	fsr1h,c
 22006  006CF8  CFDF FFE7          	movff	indf2,indf1
 22007                           
 22008                           ; BSR set to: 1
 22009  006CFC  0101               	movlb	1	; () banked
 22010  006CFE  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22011                           
 22012                           ; BSR set to: 1
 22013  006D00  0101               	movlb	1	; () banked
 22014  006D02  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22015  006D04                     l17048:
 22016                           
 22017                           ; BSR set to: 1
 22018  006D04  0101               	movlb	1	; () banked
 22019  006D06  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22020  006D08  0101               	movlb	1	; () banked
 22021  006D0A  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22022  006D0C  A0D8               	btfss	status,0,c
 22023  006D0E  D7E0               	goto	l17042
 22024                           
 22025                           ; BSR set to: 1
 22026                           ;drv_mrf_miwi_89xa.c: 806: }
 22027                           ;drv_mrf_miwi_89xa.c: 826: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 22028                           
 22029                           ; BSR set to: 1
 22030  006D10  0E66               	movlw	low _MACTxBuffer
 22031  006D12  0101               	movlb	1	; () banked
 22032  006D14  6F24               	movwf	CCM_Enc@text& (0+255),b
 22033  006D16  0E02               	movlw	high _MACTxBuffer
 22034  006D18  0101               	movlb	1	; () banked
 22035  006D1A  6F25               	movwf	(CCM_Enc@text+1)& (0+255),b
 22036  006D1C  C136  F126         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 22037  006D20  C134  F127         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 22038  006D24  0EF1               	movlw	low _key
 22039  006D26  0101               	movlb	1	; () banked
 22040  006D28  6F28               	movwf	CCM_Enc@key& (0+255),b
 22041  006D2A  0E02               	movlw	high _key
 22042  006D2C  0101               	movlb	1	; () banked
 22043  006D2E  6F29               	movwf	(CCM_Enc@key+1)& (0+255),b
 22044  006D30  EC4F  F044         	call	_CCM_Enc	;wreg free
 22045                           
 22046                           ;drv_mrf_miwi_89xa.c: 827: TxIndex += 2;
 22047  006D34  0E02               	movlw	2
 22048  006D36  0101               	movlb	1	; () banked
 22049  006D38  2737               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22050                           
 22051                           ;drv_mrf_miwi_89xa.c: 834: }
 22052                           ;drv_mrf_miwi_89xa.c: 835: }
 22053  006D3A  D024               	goto	l17064
 22054  006D3C                     l17054:
 22055                           
 22056                           ; BSR set to: 1
 22057                           ;drv_mrf_miwi_89xa.c: 836: else
 22058                           ;drv_mrf_miwi_89xa.c: 840: for(i = 0; i < MACPayloadLen; i++)
 22059  006D3C  0E00               	movlw	0
 22060  006D3E  0101               	movlb	1	; () banked
 22061  006D40  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 22062  006D42  D01A               	goto	l17062
 22063  006D44                     l17056:
 22064                           
 22065                           ; BSR set to: 1
 22066                           ;drv_mrf_miwi_89xa.c: 841: {
 22067                           ;drv_mrf_miwi_89xa.c: 842: MACTxBuffer[TxIndex++] = MACPayload[i];
 22068  006D44  0101               	movlb	1	; () banked
 22069  006D46  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22070  006D48  0D01               	mullw	1
 22071  006D4A  50F3               	movf	prodl,w,c
 22072  006D4C  0101               	movlb	1	; () banked
 22073  006D4E  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 22074  006D50  6ED9               	movwf	fsr2l,c
 22075  006D52  50F4               	movf	prodh,w,c
 22076  006D54  0101               	movlb	1	; () banked
 22077  006D56  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 22078  006D58  6EDA               	movwf	fsr2h,c
 22079  006D5A  0101               	movlb	1	; () banked
 22080  006D5C  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22081  006D5E  0D01               	mullw	1
 22082  006D60  0E66               	movlw	low _MACTxBuffer
 22083  006D62  24F3               	addwf	prodl,w,c
 22084  006D64  6EE1               	movwf	fsr1l,c
 22085  006D66  0E02               	movlw	high _MACTxBuffer
 22086  006D68  20F4               	addwfc	prodh,w,c
 22087  006D6A  6EE2               	movwf	fsr1h,c
 22088  006D6C  CFDF FFE7          	movff	indf2,indf1
 22089                           
 22090                           ; BSR set to: 1
 22091  006D70  0101               	movlb	1	; () banked
 22092  006D72  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22093                           
 22094                           ; BSR set to: 1
 22095  006D74  0101               	movlb	1	; () banked
 22096  006D76  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22097  006D78                     l17062:
 22098                           
 22099                           ; BSR set to: 1
 22100  006D78  0101               	movlb	1	; () banked
 22101  006D7A  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22102  006D7C  0101               	movlb	1	; () banked
 22103  006D7E  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22104  006D80  A0D8               	btfss	status,0,c
 22105  006D82  D7E0               	goto	l17056
 22106  006D84                     l17064:
 22107                           
 22108                           ; BSR set to: 1
 22109                           ;drv_mrf_miwi_89xa.c: 843: }
 22110                           ;drv_mrf_miwi_89xa.c: 845: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 22111  006D84  0E00               	movlw	0
 22112  006D86  B3AA               	btfsc	_MACInitParams& (0+255),1,b
 22113  006D88  0E01               	movlw	1
 22114  006D8A  0101               	movlb	1	; () banked
 22115  006D8C  6F0A               	movwf	TxPacket@CCA& (0+255),b
 22116  006D8E  0101               	movlb	1	; () banked
 22117  006D90  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22118  006D92  EC6B  F03B         	call	_TxPacket
 22119  006D96  0012               	return	
 22120  006D98                     __end_of_MiMAC_SendPacket:
 22121                           	opt stack 0
 22122                           tblptru	equ	0xFF8
 22123                           tblptrh	equ	0xFF7
 22124                           tblptrl	equ	0xFF6
 22125                           tablat	equ	0xFF5
 22126                           prodh	equ	0xFF4
 22127                           prodl	equ	0xFF3
 22128                           intcon	equ	0xFF2
 22129                           intcon2	equ	0xFF1
 22130                           intcon3	equ	0xFF0
 22131                           indf0	equ	0xFEF
 22132                           postinc0	equ	0xFEE
 22133                           plusw0	equ	0xFEB
 22134                           fsr0h	equ	0xFEA
 22135                           fsr0l	equ	0xFE9
 22136                           wreg	equ	0xFE8
 22137                           indf1	equ	0xFE7
 22138                           postinc1	equ	0xFE6
 22139                           postdec1	equ	0xFE5
 22140                           fsr1h	equ	0xFE2
 22141                           fsr1l	equ	0xFE1
 22142                           indf2	equ	0xFDF
 22143                           postinc2	equ	0xFDE
 22144                           postdec2	equ	0xFDD
 22145                           plusw2	equ	0xFDB
 22146                           fsr2h	equ	0xFDA
 22147                           fsr2l	equ	0xFD9
 22148                           status	equ	0xFD8
 22149                           
 22150 ;; *************** function _TxPacket *****************
 22151 ;; Defined at:
 22152 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22153 ;; Parameters:    Size  Location     Type
 22154 ;;  TxPacketLen     1    wreg     unsigned char 
 22155 ;;  CCA             1   10[BANK1 ] unsigned char 
 22156 ;; Auto vars:     Size  Location     Type
 22157 ;;  TxPacketLen     1   31[BANK1 ] unsigned char 
 22158 ;;  allowedTxFai    1   29[BANK1 ] unsigned char 
 22159 ;;  t2              4   23[BANK1 ] struct _MIWI_TICK
 22160 ;;  t1              4   19[BANK1 ] struct _MIWI_TICK
 22161 ;;  rssival         1   33[BANK1 ] unsigned char 
 22162 ;;  i               1   32[BANK1 ] unsigned char 
 22163 ;;  status          1   30[BANK1 ] unsigned char 
 22164 ;;  reTry           1   28[BANK1 ] unsigned char 
 22165 ;;  CCARetries      1   27[BANK1 ] unsigned char 
 22166 ;; Return value:  Size  Location     Type
 22167 ;;                  1    wreg      unsigned char 
 22168 ;; Registers used:
 22169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22170 ;; Tracked objects:
 22171 ;;		On entry : 0/0
 22172 ;;		On exit  : 0/0
 22173 ;;		Unchanged: 0/0
 22174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22175 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22176 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22177 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22178 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22179 ;;Total ram usage:       24 bytes
 22180 ;; Hardware stack levels used:    1
 22181 ;; Hardware stack levels required when called:   19
 22182 ;; This function calls:
 22183 ;;		_MiWi_TickGet
 22184 ;;		_RegisterRead
 22185 ;;		_RegisterSet
 22186 ;;		_SetRFMode
 22187 ;;		_WriteFIFO
 22188 ;; This function is called by:
 22189 ;;		_MiMAC_SendPacket
 22190 ;; This function uses a non-reentrant model
 22191 ;;
 22192                           
 22193                           	psect	text47
 22194  0076D6                     __ptext47:
 22195                           	opt stack 0
 22196  0076D6                     _TxPacket:
 22197                           	opt stack 6
 22198                           
 22199                           ;incstack = 0
 22200                           ;TxPacket@TxPacketLen stored from wreg
 22201  0076D6  0101               	movlb	1	; () banked
 22202  0076D8  6F1F               	movwf	TxPacket@TxPacketLen& (0+255),b
 22203                           
 22204                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 22205                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 22206                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 22207                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 22208                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 22209                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 22210  0076DA  0E03               	movlw	3
 22211  0076DC  0101               	movlb	1	; () banked
 22212  0076DE  6F1C               	movwf	TxPacket@reTry& (0+255),b
 22213                           
 22214                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 22215  0076E0  D0C3               	goto	l16944
 22216  0076E2                     l16876:
 22217                           
 22218                           ; BSR set to: 1
 22219                           ;drv_mrf_miwi_89xa.c: 305: {
 22220                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 22221                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 22222  0076E2  0E00               	movlw	0
 22223  0076E4  0101               	movlb	1	; () banked
 22224  0076E6  6F1D               	movwf	TxPacket@allowedTxFailure& (0+255),b
 22225  0076E8                     l262:
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 22229  0076E8  0E00               	movlw	0
 22230  0076EA  0100               	movlb	0	; () banked
 22231  0076EC  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 22232                           
 22233                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 22234  0076EE  0E00               	movlw	0
 22235  0076F0  0101               	movlb	1	; () banked
 22236  0076F2  6F1B               	movwf	TxPacket@CCARetries& (0+255),b
 22237                           
 22238                           ; BSR set to: 1
 22239                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 22240  0076F4  0101               	movlb	1	; () banked
 22241  0076F6  510A               	movf	TxPacket@CCA& (0+255),w,b
 22242  0076F8  0101               	movlb	1	; () banked
 22243  0076FA  B4D8               	btfsc	status,2,c
 22244  0076FC  D019               	goto	l263
 22245  0076FE                     l16880:
 22246                           
 22247                           ; BSR set to: 1
 22248                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 22249  0076FE  0E28               	movlw	40
 22250  007700  EC83  F05A         	call	_RegisterRead
 22251  007704  0101               	movlb	1	; () banked
 22252  007706  6F21               	movwf	TxPacket@rssival& (0+255),b
 22253                           
 22254                           ; BSR set to: 1
 22255                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 22256  007708  0101               	movlb	1	; () banked
 22257  00770A  90D8               	bcf	status,0,c
 22258  00770C  3121               	rrcf	TxPacket@rssival& (0+255),w,b
 22259  00770E  0101               	movlb	1	; () banked
 22260  007710  6F21               	movwf	TxPacket@rssival& (0+255),b
 22261                           
 22262                           ; BSR set to: 1
 22263                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 22264  007712  0E41               	movlw	65
 22265  007714  0101               	movlb	1	; () banked
 22266  007716  6521               	cpfsgt	TxPacket@rssival& (0+255),b
 22267  007718  D00B               	goto	l263
 22268                           
 22269                           ; BSR set to: 1
 22270                           ;drv_mrf_miwi_89xa.c: 326: {
 22271                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 22272  00771A  0101               	movlb	1	; () banked
 22273  00771C  2B1B               	incf	TxPacket@CCARetries& (0+255),f,b
 22274  00771E  051B               	decf	TxPacket@CCARetries& (0+255),w,b
 22275  007720  0101               	movlb	1	; () banked
 22276  007722  6F0B               	movwf	??_TxPacket& (0+255),b
 22277  007724  0E04               	movlw	4
 22278  007726  0101               	movlb	1	; () banked
 22279  007728  650B               	cpfsgt	??_TxPacket& (0+255),b
 22280  00772A  D7E9               	goto	l16880
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;drv_mrf_miwi_89xa.c: 328: {
 22284                           ;drv_mrf_miwi_89xa.c: 329: return 0;
 22285  00772C  0E00               	movlw	0
 22286                           
 22287                           ; BSR set to: 1
 22288  00772E  0012               	return	
 22289  007730                     l263:
 22290                           
 22291                           ; BSR set to: 1
 22292                           ;drv_mrf_miwi_89xa.c: 333: }
 22293                           ;drv_mrf_miwi_89xa.c: 334: }
 22294                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 22295  007730  98F2               	bcf	intcon,4,c	;volatile
 22296                           
 22297                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 22298  007732  96F0               	bcf	intcon3,3,c	;volatile
 22299                           
 22300                           ; BSR set to: 1
 22301                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 22302  007734  0E20               	movlw	32
 22303  007736  ECC9  F055         	call	_SetRFMode
 22304                           
 22305                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 22306  00773A  0E1A               	movlw	26
 22307  00773C  0101               	movlb	1	; () banked
 22308  00773E  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 22309  007740  0EC9               	movlw	201
 22310  007742  6F02               	movwf	RegisterSet@setting& (0+255),b
 22311  007744  EC04  F05B         	call	_RegisterSet	;wreg free
 22312                           
 22313                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 22314  007748  0101               	movlb	1	; () banked
 22315  00774A  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 22316  00774C  EC8F  F05B         	call	_WriteFIFO
 22317                           
 22318                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 22319  007750  0E00               	movlw	0
 22320  007752  0101               	movlb	1	; () banked
 22321  007754  6F20               	movwf	TxPacket@i& (0+255),b
 22322  007756  D00E               	goto	l16904
 22323  007758                     l16900:
 22324                           
 22325                           ; BSR set to: 1
 22326                           ;drv_mrf_miwi_89xa.c: 346: {
 22327                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 22328  007758  0101               	movlb	1	; () banked
 22329  00775A  5120               	movf	TxPacket@i& (0+255),w,b
 22330  00775C  0D01               	mullw	1
 22331  00775E  0E66               	movlw	low _MACTxBuffer
 22332  007760  24F3               	addwf	prodl,w,c
 22333  007762  6ED9               	movwf	fsr2l,c
 22334  007764  0E02               	movlw	high _MACTxBuffer
 22335  007766  20F4               	addwfc	prodh,w,c
 22336  007768  6EDA               	movwf	fsr2h,c
 22337  00776A  50DF               	movf	indf2,w,c
 22338  00776C  EC8F  F05B         	call	_WriteFIFO
 22339  007770  0101               	movlb	1	; () banked
 22340  007772  2B20               	incf	TxPacket@i& (0+255),f,b
 22341  007774                     l16904:
 22342                           
 22343                           ; BSR set to: 1
 22344  007774  0101               	movlb	1	; () banked
 22345  007776  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 22346  007778  0101               	movlb	1	; () banked
 22347  00777A  5D20               	subwf	TxPacket@i& (0+255),w,b
 22348  00777C  A0D8               	btfss	status,0,c
 22349  00777E  D7EC               	goto	l16900
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;drv_mrf_miwi_89xa.c: 348: }
 22353                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 22354                           
 22355                           ; BSR set to: 1
 22356  007780  0E80               	movlw	128
 22357  007782  ECC9  F055         	call	_SetRFMode
 22358                           
 22359                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 22360  007786  88F2               	bsf	intcon,4,c	;volatile
 22361                           
 22362                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 22363  007788  86F0               	bsf	intcon3,3,c	;volatile
 22364  00778A                     l16912:
 22365  00778A  0100               	movlb	0	; () banked
 22366  00778C  5199               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 22367  00778E  B4D8               	btfsc	status,2,c
 22368                           
 22369                           ; BSR set to: 0
 22370  007790  B0F0               	btfsc	intcon3,0,c	;volatile
 22371  007792  D001               	goto	l16916
 22372  007794  D7FA               	goto	l16912
 22373  007796                     l16916:
 22374                           
 22375                           ; BSR set to: 0
 22376                           ;drv_mrf_miwi_89xa.c: 357: };
 22377                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 22378  007796  0E00               	movlw	0
 22379  007798  0100               	movlb	0	; () banked
 22380  00779A  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 22381                           
 22382                           ; BSR set to: 0
 22383                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 22384  00779C  0E20               	movlw	32
 22385  00779E  ECC9  F055         	call	_SetRFMode
 22386                           
 22387                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 22388  0077A2  0E60               	movlw	96
 22389  0077A4  ECC9  F055         	call	_SetRFMode
 22390                           
 22391                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 22392  0077A8  0102               	movlb	2	; () banked
 22393  0077AA  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 22394  0077AC  D05B               	goto	l16942
 22395                           
 22396                           ; BSR set to: 2
 22397                           ;drv_mrf_miwi_89xa.c: 367: {
 22398                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 22399  0077AE  C267  F09D         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 22400                           
 22401                           ; BSR set to: 2
 22402                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 22403  0077B2  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 22404  0077B6  C100  F113         	movff	?_MiWi_TickGet,TxPacket@t1
 22405  0077BA  C101  F114         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 22406  0077BE  C102  F115         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 22407  0077C2  C103  F116         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 22408  0077C6                     l16928:
 22409                           
 22410                           ;drv_mrf_miwi_89xa.c: 371: {
 22411                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 22412  0077C6  0100               	movlb	0	; () banked
 22413  0077C8  519F               	movf	_hasAck& (0+255),w,b	;volatile
 22414  0077CA  A4D8               	btfss	status,2,c
 22415  0077CC  D04B               	goto	l16942
 22416                           
 22417                           ;drv_mrf_miwi_89xa.c: 376: }
 22418                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 22419                           
 22420                           ; BSR set to: 1
 22421                           
 22422                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;drv_mrf_miwi_89xa.c: 373: {
 22426                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 22427  0077CE  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 22428  0077D2  C100  F117         	movff	?_MiWi_TickGet,TxPacket@t2
 22429  0077D6  C101  F118         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 22430  0077DA  C102  F119         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 22431  0077DE  C103  F11A         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 22432                           
 22433                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 22434  0077E2  C113  F10B         	movff	TxPacket@t1,??_TxPacket
 22435  0077E6  C114  F10C         	movff	TxPacket@t1+1,??_TxPacket+1
 22436  0077EA  C115  F10D         	movff	TxPacket@t1+2,??_TxPacket+2
 22437  0077EE  C116  F10E         	movff	TxPacket@t1+3,??_TxPacket+3
 22438  0077F2  0101               	movlb	1	; () banked
 22439  0077F4  1F0B               	comf	??_TxPacket& (0+255),f,b
 22440  0077F6  1F0C               	comf	(??_TxPacket+1)& (0+255),f,b
 22441  0077F8  1F0D               	comf	(??_TxPacket+2)& (0+255),f,b
 22442  0077FA  1F0E               	comf	(??_TxPacket+3)& (0+255),f,b
 22443  0077FC  2B0B               	incf	??_TxPacket& (0+255),f,b
 22444  0077FE  0E00               	movlw	0
 22445  007800  230C               	addwfc	(??_TxPacket+1)& (0+255),f,b
 22446  007802  230D               	addwfc	(??_TxPacket+2)& (0+255),f,b
 22447  007804  230E               	addwfc	(??_TxPacket+3)& (0+255),f,b
 22448  007806  0101               	movlb	1	; () banked
 22449  007808  5117               	movf	TxPacket@t2& (0+255),w,b
 22450  00780A  0101               	movlb	1	; () banked
 22451  00780C  250B               	addwf	??_TxPacket& (0+255),w,b
 22452  00780E  0101               	movlb	1	; () banked
 22453  007810  6F0F               	movwf	(??_TxPacket+4)& (0+255),b
 22454  007812  0101               	movlb	1	; () banked
 22455  007814  5118               	movf	(TxPacket@t2+1)& (0+255),w,b
 22456  007816  0101               	movlb	1	; () banked
 22457  007818  210C               	addwfc	(??_TxPacket+1)& (0+255),w,b
 22458  00781A  0101               	movlb	1	; () banked
 22459  00781C  6F10               	movwf	(??_TxPacket+5)& (0+255),b
 22460  00781E  0101               	movlb	1	; () banked
 22461  007820  5119               	movf	(TxPacket@t2+2)& (0+255),w,b
 22462  007822  0101               	movlb	1	; () banked
 22463  007824  210D               	addwfc	(??_TxPacket+2)& (0+255),w,b
 22464  007826  0101               	movlb	1	; () banked
 22465  007828  6F11               	movwf	(??_TxPacket+6)& (0+255),b
 22466  00782A  0101               	movlb	1	; () banked
 22467  00782C  511A               	movf	(TxPacket@t2+3)& (0+255),w,b
 22468  00782E  0101               	movlb	1	; () banked
 22469  007830  210E               	addwfc	(??_TxPacket+3)& (0+255),w,b
 22470  007832  0101               	movlb	1	; () banked
 22471  007834  6F12               	movwf	(??_TxPacket+7)& (0+255),b
 22472  007836  0101               	movlb	1	; () banked
 22473  007838  5112               	movf	(??_TxPacket+7)& (0+255),w,b
 22474  00783A  0101               	movlb	1	; () banked
 22475  00783C  1111               	iorwf	(??_TxPacket+6)& (0+255),w,b
 22476  00783E  E108               	bnz	l16938
 22477  007840  0EA9               	movlw	169
 22478  007842  0101               	movlb	1	; () banked
 22479  007844  5D0F               	subwf	(??_TxPacket+4)& (0+255),w,b
 22480  007846  0E61               	movlw	97
 22481  007848  0101               	movlb	1	; () banked
 22482  00784A  5910               	subwfb	(??_TxPacket+5)& (0+255),w,b
 22483  00784C  A0D8               	btfss	status,0,c
 22484  00784E  D7BB               	goto	l16928
 22485  007850                     l16938:
 22486                           
 22487                           ; BSR set to: 1
 22488                           ;drv_mrf_miwi_89xa.c: 381: }
 22489                           ;drv_mrf_miwi_89xa.c: 382: }
 22490                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 22491  007850  0101               	movlb	1	; () banked
 22492  007852  2B1D               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 22493  007854  051D               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 22494  007856  0101               	movlb	1	; () banked
 22495  007858  6F0B               	movwf	??_TxPacket& (0+255),b
 22496  00785A  0E04               	movlw	4
 22497  00785C  0101               	movlb	1	; () banked
 22498  00785E  610B               	cpfslt	??_TxPacket& (0+255),b
 22499  007860  D003               	goto	l16944
 22500  007862  D742               	goto	l262
 22501  007864                     l16942:
 22502                           
 22503                           ;drv_mrf_miwi_89xa.c: 388: else
 22504                           ;drv_mrf_miwi_89xa.c: 390: {
 22505                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 22506  007864  0E01               	movlw	1
 22507  007866  D007               	goto	L8
 22508  007868                     l16944:
 22509                           
 22510                           ; BSR set to: 1
 22511  007868  0101               	movlb	1	; () banked
 22512  00786A  071C               	decf	TxPacket@reTry& (0+255),f,b
 22513  00786C  0101               	movlb	1	; () banked
 22514  00786E  291C               	incf	TxPacket@reTry& (0+255),w,b
 22515  007870  A4D8               	btfss	status,2,c
 22516  007872  D737               	goto	l16876
 22517                           
 22518                           ; BSR set to: 1
 22519                           ;drv_mrf_miwi_89xa.c: 393: }
 22520                           ;drv_mrf_miwi_89xa.c: 394: }
 22521                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 22522                           
 22523                           ; BSR set to: 1
 22524  007874  0E00               	movlw	0
 22525  007876                     L8:
 22526  007876  0101               	movlb	1	; () banked
 22527  007878  6F1E               	movwf	TxPacket@status& (0+255),b
 22528                           
 22529                           ; BSR set to: 1
 22530                           ;drv_mrf_miwi_89xa.c: 398: return status;
 22531                           
 22532                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 22533  00787A  0101               	movlb	1	; () banked
 22534  00787C  511E               	movf	TxPacket@status& (0+255),w,b
 22535  00787E  0012               	return	
 22536  007880                     __end_of_TxPacket:
 22537                           	opt stack 0
 22538                           tblptru	equ	0xFF8
 22539                           tblptrh	equ	0xFF7
 22540                           tblptrl	equ	0xFF6
 22541                           tablat	equ	0xFF5
 22542                           prodh	equ	0xFF4
 22543                           prodl	equ	0xFF3
 22544                           intcon	equ	0xFF2
 22545                           intcon2	equ	0xFF1
 22546                           intcon3	equ	0xFF0
 22547                           indf0	equ	0xFEF
 22548                           postinc0	equ	0xFEE
 22549                           plusw0	equ	0xFEB
 22550                           fsr0h	equ	0xFEA
 22551                           fsr0l	equ	0xFE9
 22552                           wreg	equ	0xFE8
 22553                           indf1	equ	0xFE7
 22554                           postinc1	equ	0xFE6
 22555                           postdec1	equ	0xFE5
 22556                           fsr1h	equ	0xFE2
 22557                           fsr1l	equ	0xFE1
 22558                           indf2	equ	0xFDF
 22559                           postinc2	equ	0xFDE
 22560                           postdec2	equ	0xFDD
 22561                           plusw2	equ	0xFDB
 22562                           fsr2h	equ	0xFDA
 22563                           fsr2l	equ	0xFD9
 22564                           status	equ	0xFD8
 22565                           
 22566 ;; *************** function _WriteFIFO *****************
 22567 ;; Defined at:
 22568 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22569 ;; Parameters:    Size  Location     Type
 22570 ;;  Data            1    wreg     unsigned char 
 22571 ;; Auto vars:     Size  Location     Type
 22572 ;;  Data            1    2[BANK1 ] unsigned char 
 22573 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 22574 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 22575 ;; Return value:  Size  Location     Type
 22576 ;;		None               void
 22577 ;; Registers used:
 22578 ;;		wreg, status,2, cstack
 22579 ;; Tracked objects:
 22580 ;;		On entry : 0/0
 22581 ;;		On exit  : 0/0
 22582 ;;		Unchanged: 0/0
 22583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22585 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22587 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22588 ;;Total ram usage:        3 bytes
 22589 ;; Hardware stack levels used:    1
 22590 ;; Hardware stack levels required when called:   17
 22591 ;; This function calls:
 22592 ;;		_SPIPut
 22593 ;; This function is called by:
 22594 ;;		_TxPacket
 22595 ;; This function uses a non-reentrant model
 22596 ;;
 22597                           
 22598                           	psect	text48
 22599  00B71E                     __ptext48:
 22600                           	opt stack 0
 22601  00B71E                     _WriteFIFO:
 22602                           	opt stack 7
 22603                           
 22604                           ; BSR set to: 1
 22605                           ;incstack = 0
 22606                           ;WriteFIFO@Data stored from wreg
 22607  00B71E  0101               	movlb	1	; () banked
 22608  00B720  6F02               	movwf	WriteFIFO@Data& (0+255),b
 22609                           
 22610                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 22611  00B722  0E00               	movlw	0
 22612  00B724  B6F0               	btfsc	intcon3,3,c	;volatile
 22613  00B726  0E01               	movlw	1
 22614  00B728  0101               	movlb	1	; () banked
 22615  00B72A  6F03               	movwf	WriteFIFO@IRQ1select& (0+255),b
 22616                           
 22617                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 22618  00B72C  0E00               	movlw	0
 22619  00B72E  B8F2               	btfsc	intcon,4,c	;volatile
 22620  00B730  0E01               	movlw	1
 22621  00B732  0101               	movlb	1	; () banked
 22622  00B734  6F04               	movwf	WriteFIFO@IRQ0select& (0+255),b
 22623                           
 22624                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 22625  00B736  98F2               	bcf	intcon,4,c	;volatile
 22626                           
 22627                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 22628  00B738  96F0               	bcf	intcon3,3,c	;volatile
 22629                           
 22630                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 22631  00B73A  9C8B               	bcf	3979,6,c	;volatile
 22632                           
 22633                           ; BSR set to: 1
 22634                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 22635  00B73C  0101               	movlb	1	; () banked
 22636  00B73E  5102               	movf	WriteFIFO@Data& (0+255),w,b
 22637  00B740  EC7D  F05D         	call	_SPIPut
 22638                           
 22639                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 22640  00B744  8C8B               	bsf	3979,6,c	;volatile
 22641                           
 22642                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 22643  00B746  0101               	movlb	1	; () banked
 22644  00B748  B103               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 22645  00B74A  D002               	bra	u18175
 22646  00B74C  96F0               	bcf	intcon3,3,c	;volatile
 22647  00B74E  D001               	bra	u18176
 22648  00B750                     u18175:
 22649  00B750  86F0               	bsf	intcon3,3,c	;volatile
 22650  00B752                     u18176:
 22651                           
 22652                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 22653  00B752  0101               	movlb	1	; () banked
 22654  00B754  B104               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 22655  00B756  D002               	bra	u18185
 22656  00B758  98F2               	bcf	intcon,4,c	;volatile
 22657  00B75A  D001               	bra	u18186
 22658  00B75C                     u18185:
 22659  00B75C  88F2               	bsf	intcon,4,c	;volatile
 22660  00B75E                     u18186:
 22661  00B75E  0012               	return		;funcret
 22662  00B760                     __end_of_WriteFIFO:
 22663                           	opt stack 0
 22664                           tblptru	equ	0xFF8
 22665                           tblptrh	equ	0xFF7
 22666                           tblptrl	equ	0xFF6
 22667                           tablat	equ	0xFF5
 22668                           prodh	equ	0xFF4
 22669                           prodl	equ	0xFF3
 22670                           intcon	equ	0xFF2
 22671                           intcon2	equ	0xFF1
 22672                           intcon3	equ	0xFF0
 22673                           indf0	equ	0xFEF
 22674                           postinc0	equ	0xFEE
 22675                           plusw0	equ	0xFEB
 22676                           fsr0h	equ	0xFEA
 22677                           fsr0l	equ	0xFE9
 22678                           wreg	equ	0xFE8
 22679                           indf1	equ	0xFE7
 22680                           postinc1	equ	0xFE6
 22681                           postdec1	equ	0xFE5
 22682                           fsr1h	equ	0xFE2
 22683                           fsr1l	equ	0xFE1
 22684                           indf2	equ	0xFDF
 22685                           postinc2	equ	0xFDE
 22686                           postdec2	equ	0xFDD
 22687                           plusw2	equ	0xFDB
 22688                           fsr2h	equ	0xFDA
 22689                           fsr2l	equ	0xFD9
 22690                           status	equ	0xFD8
 22691                           
 22692 ;; *************** function _CCM_Enc *****************
 22693 ;; Defined at:
 22694 ;;		line 239 in file "src/miwi/drv_mrf_miwi_security.c"
 22695 ;; Parameters:    Size  Location     Type
 22696 ;;  text            2   36[BANK1 ] PTR unsigned char 
 22697 ;;		 -> MACTxBuffer(64), 
 22698 ;;  headerLen       1   38[BANK1 ] unsigned char 
 22699 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 22700 ;;  key             2   40[BANK1 ] PTR unsigned char 
 22701 ;;		 -> key(8), 
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;  i               1   46[BANK1 ] unsigned char 
 22704 ;; Return value:  Size  Location     Type
 22705 ;;		None               void
 22706 ;; Registers used:
 22707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/0
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22713 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22714 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22715 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22716 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22717 ;;Total ram usage:       11 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   18
 22720 ;; This function calls:
 22721 ;;		_CBC_MAC
 22722 ;;		_CTR
 22723 ;; This function is called by:
 22724 ;;		_MiMAC_SendPacket
 22725 ;; This function uses a non-reentrant model
 22726 ;;
 22727                           
 22728                           	psect	text49
 22729  00889E                     __ptext49:
 22730                           	opt stack 0
 22731  00889E                     _CCM_Enc:
 22732                           	opt stack 7
 22733                           
 22734                           ;drv_mrf_miwi_security.c: 244: uint8_t i;
 22735                           ;drv_mrf_miwi_security.c: 251: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 22736                           
 22737                           ;incstack = 0
 22738  00889E  C124  F117         	movff	CCM_Enc@text,CBC_MAC@text
 22739  0088A2  C125  F118         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 22740  0088A6  0101               	movlb	1	; () banked
 22741  0088A8  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22742  0088AA  0101               	movlb	1	; () banked
 22743  0088AC  2527               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 22744  0088AE  0101               	movlb	1	; () banked
 22745  0088B0  6F19               	movwf	CBC_MAC@len& (0+255),b
 22746  0088B2  C128  F11A         	movff	CCM_Enc@key,CBC_MAC@key
 22747  0088B6  C129  F11B         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 22748  0088BA  0EEC               	movlw	low _tmpBlock
 22749  0088BC  0101               	movlb	1	; () banked
 22750  0088BE  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 22751  0088C0  0E01               	movlw	high _tmpBlock
 22752  0088C2  0101               	movlb	1	; () banked
 22753  0088C4  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22754  0088C6  ECCE  F048         	call	_CBC_MAC	;wreg free
 22755                           
 22756                           ;drv_mrf_miwi_security.c: 253: for(i = 0; i < 4; i++)
 22757  0088CA  0E00               	movlw	0
 22758  0088CC  0101               	movlb	1	; () banked
 22759  0088CE  6F2E               	movwf	CCM_Enc@i& (0+255),b
 22760  0088D0                     l16954:
 22761                           
 22762                           ; BSR set to: 1
 22763  0088D0  0E03               	movlw	3
 22764  0088D2  0101               	movlb	1	; () banked
 22765  0088D4  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 22766  0088D6  D001               	goto	l16958
 22767  0088D8  D028               	goto	l16964
 22768  0088DA                     l16958:
 22769                           
 22770                           ; BSR set to: 1
 22771                           ;drv_mrf_miwi_security.c: 254: {
 22772                           ;drv_mrf_miwi_security.c: 255: text[headerLen + payloadLen + i] = tmpBlock[i];
 22773  0088DA  0101               	movlb	1	; () banked
 22774  0088DC  512E               	movf	CCM_Enc@i& (0+255),w,b
 22775  0088DE  0D01               	mullw	1
 22776  0088E0  0EEC               	movlw	low _tmpBlock
 22777  0088E2  24F3               	addwf	prodl,w,c
 22778  0088E4  6ED9               	movwf	fsr2l,c
 22779  0088E6  0E01               	movlw	high _tmpBlock
 22780  0088E8  20F4               	addwfc	prodh,w,c
 22781  0088EA  6EDA               	movwf	fsr2h,c
 22782  0088EC  0101               	movlb	1	; () banked
 22783  0088EE  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 22784  0088F0  C126  F12A         	movff	CCM_Enc@headerLen,??_CCM_Enc
 22785  0088F4  0101               	movlb	1	; () banked
 22786  0088F6  6B2B               	clrf	(??_CCM_Enc+1)& (0+255),b
 22787  0088F8  0101               	movlb	1	; () banked
 22788  0088FA  272A               	addwf	??_CCM_Enc& (0+255),f,b
 22789  0088FC  0E00               	movlw	0
 22790  0088FE  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 22791  008900  0101               	movlb	1	; () banked
 22792  008902  512E               	movf	CCM_Enc@i& (0+255),w,b
 22793  008904  0101               	movlb	1	; () banked
 22794  008906  272A               	addwf	??_CCM_Enc& (0+255),f,b
 22795  008908  0E00               	movlw	0
 22796  00890A  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 22797  00890C  0101               	movlb	1	; () banked
 22798  00890E  512A               	movf	??_CCM_Enc& (0+255),w,b
 22799  008910  0101               	movlb	1	; () banked
 22800  008912  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22801  008914  6EE1               	movwf	fsr1l,c
 22802  008916  0101               	movlb	1	; () banked
 22803  008918  512B               	movf	(??_CCM_Enc+1)& (0+255),w,b
 22804  00891A  0101               	movlb	1	; () banked
 22805  00891C  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22806  00891E  6EE2               	movwf	fsr1h,c
 22807  008920  CFDF FFE7          	movff	indf2,indf1
 22808                           
 22809                           ; BSR set to: 1
 22810  008924  0101               	movlb	1	; () banked
 22811  008926  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 22812  008928  D7D3               	goto	l16954
 22813  00892A                     l16964:
 22814                           
 22815                           ; BSR set to: 1
 22816                           ;drv_mrf_miwi_security.c: 256: }
 22817                           ;drv_mrf_miwi_security.c: 258: for(i = 0; i < 4-1; i++)
 22818  00892A  0E00               	movlw	0
 22819  00892C  0101               	movlb	1	; () banked
 22820  00892E  6F2E               	movwf	CCM_Enc@i& (0+255),b
 22821  008930                     l16966:
 22822                           
 22823                           ; BSR set to: 1
 22824  008930  0E02               	movlw	2
 22825  008932  0101               	movlb	1	; () banked
 22826  008934  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 22827  008936  D001               	goto	l16970
 22828  008938  D02D               	goto	l16980
 22829  00893A                     l16970:
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;drv_mrf_miwi_security.c: 259: {
 22833                           ;drv_mrf_miwi_security.c: 260: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 22834  00893A  0101               	movlb	1	; () banked
 22835  00893C  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22836  00893E  0101               	movlb	1	; () banked
 22837  008940  5D2E               	subwf	CCM_Enc@i& (0+255),w,b
 22838  008942  A0D8               	btfss	status,0,c
 22839  008944  D006               	goto	l16974
 22840                           
 22841                           ; BSR set to: 1
 22842  008946  0E00               	movlw	0
 22843  008948  0101               	movlb	1	; () banked
 22844  00894A  6F2D               	movwf	(_CCM_Enc$1978+1)& (0+255),b
 22845  00894C  0E00               	movlw	0
 22846  00894E  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 22847  008950  D013               	goto	l486
 22848  008952                     l16974:
 22849                           
 22850                           ; BSR set to: 1
 22851  008952  0101               	movlb	1	; () banked
 22852  008954  512E               	movf	CCM_Enc@i& (0+255),w,b
 22853  008956  0D01               	mullw	1
 22854  008958  50F3               	movf	prodl,w,c
 22855  00895A  0101               	movlb	1	; () banked
 22856  00895C  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22857  00895E  6ED9               	movwf	fsr2l,c
 22858  008960  50F4               	movf	prodh,w,c
 22859  008962  0101               	movlb	1	; () banked
 22860  008964  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22861  008966  6EDA               	movwf	fsr2h,c
 22862  008968  50DF               	movf	indf2,w,c
 22863  00896A  0101               	movlb	1	; () banked
 22864  00896C  6F2A               	movwf	??_CCM_Enc& (0+255),b
 22865  00896E  0101               	movlb	1	; () banked
 22866  008970  512A               	movf	??_CCM_Enc& (0+255),w,b
 22867  008972  0101               	movlb	1	; () banked
 22868  008974  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 22869  008976  6B2D               	clrf	(_CCM_Enc$1978+1)& (0+255),b
 22870  008978                     l486:
 22871                           
 22872                           ; BSR set to: 1
 22873  008978  0101               	movlb	1	; () banked
 22874  00897A  512E               	movf	CCM_Enc@i& (0+255),w,b
 22875  00897C  0D01               	mullw	1
 22876  00897E  0EEC               	movlw	low _tmpBlock
 22877  008980  24F3               	addwf	prodl,w,c
 22878  008982  6ED9               	movwf	fsr2l,c
 22879  008984  0E01               	movlw	high _tmpBlock
 22880  008986  20F4               	addwfc	prodh,w,c
 22881  008988  6EDA               	movwf	fsr2h,c
 22882  00898A  C12C  FFDF         	movff	_CCM_Enc$1978,indf2
 22883                           
 22884                           ; BSR set to: 1
 22885  00898E  0101               	movlb	1	; () banked
 22886  008990  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 22887  008992  D7CE               	goto	l16966
 22888  008994                     l16980:
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;drv_mrf_miwi_security.c: 261: }
 22892                           ;drv_mrf_miwi_security.c: 263: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 22893  008994  0101               	movlb	1	; () banked
 22894  008996  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22895  008998  0D01               	mullw	1
 22896  00899A  50F3               	movf	prodl,w,c
 22897  00899C  0101               	movlb	1	; () banked
 22898  00899E  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22899  0089A0  0101               	movlb	1	; () banked
 22900  0089A2  6F17               	movwf	CTR@text& (0+255),b
 22901  0089A4  50F4               	movf	prodh,w,c
 22902  0089A6  0101               	movlb	1	; () banked
 22903  0089A8  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22904  0089AA  0101               	movlb	1	; () banked
 22905  0089AC  6F18               	movwf	(CTR@text+1)& (0+255),b
 22906  0089AE  0101               	movlb	1	; () banked
 22907  0089B0  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 22908  0089B2  0F04               	addlw	4
 22909  0089B4  0101               	movlb	1	; () banked
 22910  0089B6  6F19               	movwf	CTR@len& (0+255),b
 22911  0089B8  C128  F11A         	movff	CCM_Enc@key,CTR@key
 22912  0089BC  C129  F11B         	movff	CCM_Enc@key+1,CTR@key+1
 22913  0089C0  0EEC               	movlw	low _tmpBlock
 22914  0089C2  0101               	movlb	1	; () banked
 22915  0089C4  6F1C               	movwf	CTR@nounce& (0+255),b
 22916  0089C6  0E01               	movlw	high _tmpBlock
 22917  0089C8  0101               	movlb	1	; () banked
 22918  0089CA  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 22919  0089CC  ECA6  F046         	call	_CTR	;wreg free
 22920  0089D0  0012               	return		;funcret
 22921  0089D2                     __end_of_CCM_Enc:
 22922                           	opt stack 0
 22923                           tblptru	equ	0xFF8
 22924                           tblptrh	equ	0xFF7
 22925                           tblptrl	equ	0xFF6
 22926                           tablat	equ	0xFF5
 22927                           prodh	equ	0xFF4
 22928                           prodl	equ	0xFF3
 22929                           intcon	equ	0xFF2
 22930                           intcon2	equ	0xFF1
 22931                           intcon3	equ	0xFF0
 22932                           indf0	equ	0xFEF
 22933                           postinc0	equ	0xFEE
 22934                           plusw0	equ	0xFEB
 22935                           fsr0h	equ	0xFEA
 22936                           fsr0l	equ	0xFE9
 22937                           wreg	equ	0xFE8
 22938                           indf1	equ	0xFE7
 22939                           postinc1	equ	0xFE6
 22940                           postdec1	equ	0xFE5
 22941                           fsr1h	equ	0xFE2
 22942                           fsr1l	equ	0xFE1
 22943                           indf2	equ	0xFDF
 22944                           postinc2	equ	0xFDE
 22945                           postdec2	equ	0xFDD
 22946                           plusw2	equ	0xFDB
 22947                           fsr2h	equ	0xFDA
 22948                           fsr2l	equ	0xFD9
 22949                           status	equ	0xFD8
 22950                           
 22951 ;; *************** function _MiMAC_ReceivedPacket *****************
 22952 ;; Defined at:
 22953 ;;		line 850 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22954 ;; Parameters:    Size  Location     Type
 22955 ;;		None
 22956 ;; Auto vars:     Size  Location     Type
 22957 ;;  FrameCounter    4   63[BANK1 ] struct .
 22958 ;;  k               1   67[BANK1 ] unsigned char 
 22959 ;;  PayloadIndex    1   69[BANK1 ] unsigned char 
 22960 ;;  j               1   68[BANK1 ] unsigned char 
 22961 ;;  currentTick     4   59[BANK1 ] struct _MIWI_TICK
 22962 ;;  i               1   70[BANK1 ] unsigned char 
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1    wreg      unsigned char 
 22965 ;; Registers used:
 22966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22973 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22974 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22975 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22976 ;;Total ram usage:       20 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; Hardware stack levels required when called:   19
 22979 ;; This function calls:
 22980 ;;		_CCM_Dec
 22981 ;;		_MiWi_TickGet
 22982 ;;		_isSameAddress
 22983 ;; This function is called by:
 22984 ;;		_MiWiTasks
 22985 ;; This function uses a non-reentrant model
 22986 ;;
 22987                           
 22988                           	psect	text50
 22989  005904                     __ptext50:
 22990                           	opt stack 0
 22991  005904                     _MiMAC_ReceivedPacket:
 22992                           	opt stack 10
 22993                           
 22994                           ;drv_mrf_miwi_89xa.c: 852: uint8_t i;
 22995                           ;drv_mrf_miwi_89xa.c: 853: MIWI_TICK currentTick;
 22996                           ;drv_mrf_miwi_89xa.c: 857: for(i = 0; i < 5; i++)
 22997                           
 22998                           ;incstack = 0
 22999  005904  0E00               	movlw	0
 23000  005906  0101               	movlb	1	; () banked
 23001  005908  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 23002  00590A                     l17574:
 23003                           
 23004                           ; BSR set to: 1
 23005  00590A  0E04               	movlw	4
 23006  00590C  0101               	movlb	1	; () banked
 23007  00590E  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23008  005910  D001               	goto	l17578
 23009  005912  D084               	goto	l17592
 23010  005914                     l17578:
 23011                           
 23012                           ; BSR set to: 1
 23013                           ;drv_mrf_miwi_89xa.c: 858: {
 23014                           ;drv_mrf_miwi_89xa.c: 859: currentTick = MiWi_TickGet();
 23015  005914  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 23016  005918  C100  F13B         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 23017  00591C  C101  F13C         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 23018  005920  C102  F13D         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 23019  005924  C103  F13E         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 23020                           
 23021                           ;drv_mrf_miwi_89xa.c: 860: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 23022                           ;drv_mrf_miwi_89xa.c: 861: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 23023  005928  0101               	movlb	1	; () banked
 23024  00592A  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23025  00592C  0D06               	mullw	6
 23026  00592E  0E48               	movlw	low _AckInfo
 23027  005930  24F3               	addwf	prodl,w,c
 23028  005932  6ED9               	movwf	fsr2l,c
 23029  005934  0E02               	movlw	high _AckInfo
 23030  005936  20F4               	addwfc	prodh,w,c
 23031  005938  6EDA               	movwf	fsr2h,c
 23032  00593A  50DF               	movf	indf2,w,c
 23033  00593C  B4D8               	btfsc	status,2,c
 23034  00593E  D06B               	goto	l17588
 23035                           
 23036                           ; BSR set to: 1
 23037  005940  0101               	movlb	1	; () banked
 23038  005942  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23039  005944  0D06               	mullw	6
 23040  005946  0E02               	movlw	2
 23041  005948  26F3               	addwf	prodl,f,c
 23042  00594A  0E00               	movlw	0
 23043  00594C  22F4               	addwfc	prodh,f,c
 23044  00594E  0E48               	movlw	low _AckInfo
 23045  005950  24F3               	addwf	prodl,w,c
 23046  005952  6ED9               	movwf	fsr2l,c
 23047  005954  0E02               	movlw	high _AckInfo
 23048  005956  20F4               	addwfc	prodh,w,c
 23049  005958  6EDA               	movwf	fsr2h,c
 23050  00595A  0101               	movlb	1	; () banked
 23051  00595C  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23052  00595E  5CDE               	subwf	postinc2,w,c
 23053  005960  0101               	movlb	1	; () banked
 23054  005962  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23055  005964  58DE               	subwfb	postinc2,w,c
 23056  005966  0101               	movlb	1	; () banked
 23057  005968  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23058  00596A  58DE               	subwfb	postinc2,w,c
 23059  00596C  0101               	movlb	1	; () banked
 23060  00596E  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23061  005970  58DE               	subwfb	postinc2,w,c
 23062  005972  B0D8               	btfsc	status,0,c
 23063  005974  D050               	goto	l17588
 23064                           
 23065                           ; BSR set to: 1
 23066  005976  0101               	movlb	1	; () banked
 23067  005978  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23068  00597A  0D06               	mullw	6
 23069  00597C  0E02               	movlw	2
 23070  00597E  26F3               	addwf	prodl,f,c
 23071  005980  0E00               	movlw	0
 23072  005982  22F4               	addwfc	prodh,f,c
 23073  005984  0E48               	movlw	low _AckInfo
 23074  005986  24F3               	addwf	prodl,w,c
 23075  005988  6ED9               	movwf	fsr2l,c
 23076  00598A  0E02               	movlw	high _AckInfo
 23077  00598C  20F4               	addwfc	prodh,w,c
 23078  00598E  6EDA               	movwf	fsr2h,c
 23079  005990  CFDE F133          	movff	postinc2,??_MiMAC_ReceivedPacket
 23080  005994  CFDE F134          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 23081  005998  CFDE F135          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 23082  00599C  CFDE F136          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 23083  0059A0  0101               	movlb	1	; () banked
 23084  0059A2  1F33               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23085  0059A4  1F34               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23086  0059A6  1F35               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23087  0059A8  1F36               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23088  0059AA  2B33               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23089  0059AC  0E00               	movlw	0
 23090  0059AE  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23091  0059B0  2335               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23092  0059B2  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23093  0059B4  0101               	movlb	1	; () banked
 23094  0059B6  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23095  0059B8  0101               	movlb	1	; () banked
 23096  0059BA  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23097  0059BC  0101               	movlb	1	; () banked
 23098  0059BE  6F37               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 23099  0059C0  0101               	movlb	1	; () banked
 23100  0059C2  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23101  0059C4  0101               	movlb	1	; () banked
 23102  0059C6  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23103  0059C8  0101               	movlb	1	; () banked
 23104  0059CA  6F38               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 23105  0059CC  0101               	movlb	1	; () banked
 23106  0059CE  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23107  0059D0  0101               	movlb	1	; () banked
 23108  0059D2  2135               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23109  0059D4  0101               	movlb	1	; () banked
 23110  0059D6  6F39               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 23111  0059D8  0101               	movlb	1	; () banked
 23112  0059DA  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23113  0059DC  0101               	movlb	1	; () banked
 23114  0059DE  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23115  0059E0  0101               	movlb	1	; () banked
 23116  0059E2  6F3A               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 23117  0059E4  0101               	movlb	1	; () banked
 23118  0059E6  513A               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 23119  0059E8  E10B               	bnz	u19320
 23120  0059EA  0E21               	movlw	33
 23121  0059EC  0101               	movlb	1	; () banked
 23122  0059EE  5D37               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 23123  0059F0  0EA1               	movlw	161
 23124  0059F2  0101               	movlb	1	; () banked
 23125  0059F4  5938               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 23126  0059F6  0E07               	movlw	7
 23127  0059F8  0101               	movlb	1	; () banked
 23128  0059FA  5939               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 23129  0059FC  A0D8               	btfss	status,0,c
 23130  0059FE  D00B               	goto	l17588
 23131  005A00                     u19320:
 23132                           
 23133                           ; BSR set to: 1
 23134                           ;drv_mrf_miwi_89xa.c: 862: {
 23135                           ;drv_mrf_miwi_89xa.c: 863: AckInfo[i].Valid = 0;
 23136  005A00  0101               	movlb	1	; () banked
 23137  005A02  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23138  005A04  0D06               	mullw	6
 23139  005A06  0E48               	movlw	low _AckInfo
 23140  005A08  24F3               	addwf	prodl,w,c
 23141  005A0A  6ED9               	movwf	fsr2l,c
 23142  005A0C  0E02               	movlw	high _AckInfo
 23143  005A0E  20F4               	addwfc	prodh,w,c
 23144  005A10  6EDA               	movwf	fsr2h,c
 23145  005A12  0E00               	movlw	0
 23146  005A14  6EDF               	movwf	indf2,c
 23147  005A16                     l17588:
 23148                           
 23149                           ; BSR set to: 1
 23150  005A16  0101               	movlb	1	; () banked
 23151  005A18  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23152  005A1A  D777               	goto	l17574
 23153  005A1C                     l17592:
 23154                           
 23155                           ; BSR set to: 1
 23156                           ;drv_mrf_miwi_89xa.c: 864: }
 23157                           ;drv_mrf_miwi_89xa.c: 865: }
 23158                           ;drv_mrf_miwi_89xa.c: 868: if( ReceivedBankIndex != 0xFF )
 23159  005A1C  0101               	movlb	1	; () banked
 23160  005A1E  29C5               	incf	_ReceivedBankIndex& (0+255),w,b
 23161  005A20  B4D8               	btfsc	status,2,c
 23162  005A22  D002               	goto	l17598
 23163                           
 23164                           ; BSR set to: 1
 23165                           ;drv_mrf_miwi_89xa.c: 869: {
 23166                           ;drv_mrf_miwi_89xa.c: 870: return 0;
 23167  005A24  0E00               	movlw	0
 23168                           
 23169                           ; BSR set to: 1
 23170  005A26  0012               	return	
 23171  005A28                     l17598:
 23172                           
 23173                           ; BSR set to: 1
 23174                           ;drv_mrf_miwi_89xa.c: 871: }
 23175                           ;drv_mrf_miwi_89xa.c: 873: for(i = 0; i < 2; i++)
 23176  005A28  0E00               	movlw	0
 23177  005A2A  0101               	movlb	1	; () banked
 23178  005A2C  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 23179  005A2E                     l17600:
 23180                           
 23181                           ; BSR set to: 1
 23182  005A2E  0E01               	movlw	1
 23183  005A30  0101               	movlb	1	; () banked
 23184  005A32  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23185  005A34  D001               	goto	l17604
 23186  005A36  D1C0               	goto	l17702
 23187  005A38                     l17604:
 23188                           
 23189                           ; BSR set to: 1
 23190                           ;drv_mrf_miwi_89xa.c: 874: {
 23191                           ;drv_mrf_miwi_89xa.c: 875: if( RxPacket[i].flags.bits.Valid )
 23192  005A38  0101               	movlb	1	; () banked
 23193  005A3A  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23194  005A3C  0D42               	mullw	66
 23195  005A3E  0E00               	movlw	low _RxPacket
 23196  005A40  24F3               	addwf	prodl,w,c
 23197  005A42  6ED9               	movwf	fsr2l,c
 23198  005A44  0E03               	movlw	high _RxPacket
 23199  005A46  20F4               	addwfc	prodh,w,c
 23200  005A48  6EDA               	movwf	fsr2h,c
 23201  005A4A  0103               	movlb	3	; () banked
 23202  005A4C  A0DF               	btfss	indf2,0,c
 23203  005A4E  D1B1               	goto	l17698
 23204                           
 23205                           ; BSR set to: 3
 23206                           ;drv_mrf_miwi_89xa.c: 876: {
 23207                           ;drv_mrf_miwi_89xa.c: 877: uint8_t PayloadIndex;
 23208                           ;drv_mrf_miwi_89xa.c: 878: uint8_t j;
 23209                           ;drv_mrf_miwi_89xa.c: 880: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 23210  005A50  0101               	movlb	1	; () banked
 23211  005A52  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23212  005A54  0D42               	mullw	66
 23213  005A56  0E01               	movlw	1
 23214  005A58  26F3               	addwf	prodl,f,c
 23215  005A5A  0E00               	movlw	0
 23216  005A5C  22F4               	addwfc	prodh,f,c
 23217  005A5E  0E00               	movlw	low _RxPacket
 23218  005A60  24F3               	addwf	prodl,w,c
 23219  005A62  6ED9               	movwf	fsr2l,c
 23220  005A64  0E03               	movlw	high _RxPacket
 23221  005A66  20F4               	addwfc	prodh,w,c
 23222  005A68  6EDA               	movwf	fsr2h,c
 23223  005A6A  50DF               	movf	indf2,w,c
 23224  005A6C  0101               	movlb	1	; () banked
 23225  005A6E  6F9A               	movwf	_MACRxPacket& (0+255),b
 23226                           
 23227                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 23228  005A70  0101               	movlb	1	; () banked
 23229  005A72  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23230  005A74  0D42               	mullw	66
 23231  005A76  0E41               	movlw	65
 23232  005A78  26F3               	addwf	prodl,f,c
 23233  005A7A  0E00               	movlw	0
 23234  005A7C  22F4               	addwfc	prodh,f,c
 23235  005A7E  0E00               	movlw	low _RxPacket
 23236  005A80  24F3               	addwf	prodl,w,c
 23237  005A82  6ED9               	movwf	fsr2l,c
 23238  005A84  0E03               	movlw	high _RxPacket
 23239  005A86  20F4               	addwfc	prodh,w,c
 23240  005A88  6EDA               	movwf	fsr2h,c
 23241  005A8A  50DF               	movf	indf2,w,c
 23242  005A8C  0101               	movlb	1	; () banked
 23243  005A8E  6F9F               	movwf	(_MACRxPacket+5)& (0+255),b
 23244                           
 23245                           ; BSR set to: 1
 23246                           ;drv_mrf_miwi_89xa.c: 882: PayloadIndex = 2;
 23247  005A90  0E02               	movlw	2
 23248  005A92  0101               	movlb	1	; () banked
 23249  005A94  6F45               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 23250                           
 23251                           ; BSR set to: 1
 23252                           ;drv_mrf_miwi_89xa.c: 884: if( MACRxPacket.flags.bits.destPrsnt )
 23253  005A96  0101               	movlb	1	; () banked
 23254  005A98  AD9A               	btfss	_MACRxPacket& (0+255),6,b
 23255  005A9A  D007               	goto	l17614
 23256                           
 23257                           ; BSR set to: 1
 23258                           ;drv_mrf_miwi_89xa.c: 885: {
 23259                           ;drv_mrf_miwi_89xa.c: 886: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 23260  005A9C  0101               	movlb	1	; () banked
 23261  005A9E  31AA               	rrcf	_MACInitParams& (0+255),w,b
 23262  005AA0  32E8               	rrcf	wreg,f,c
 23263  005AA2  32E8               	rrcf	wreg,f,c
 23264  005AA4  0B0F               	andlw	15
 23265  005AA6  0101               	movlb	1	; () banked
 23266  005AA8  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23267  005AAA                     l17614:
 23268                           
 23269                           ; BSR set to: 1
 23270                           ;drv_mrf_miwi_89xa.c: 887: }
 23271                           ;drv_mrf_miwi_89xa.c: 889: if( MACRxPacket.flags.bits.sourcePrsnt )
 23272  005AAA  0101               	movlb	1	; () banked
 23273  005AAC  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 23274  005AAE  D028               	goto	l17620
 23275                           
 23276                           ; BSR set to: 1
 23277                           ;drv_mrf_miwi_89xa.c: 890: {
 23278                           ;drv_mrf_miwi_89xa.c: 891: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 23279  005AB0  0101               	movlb	1	; () banked
 23280  005AB2  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23281  005AB4  0D01               	mullw	1
 23282  005AB6  0E01               	movlw	1
 23283  005AB8  26F3               	addwf	prodl,f,c
 23284  005ABA  0E00               	movlw	0
 23285  005ABC  22F4               	addwfc	prodh,f,c
 23286  005ABE  0E00               	movlw	low _RxPacket
 23287  005AC0  0101               	movlb	1	; () banked
 23288  005AC2  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23289  005AC4  0E03               	movlw	high _RxPacket
 23290  005AC6  0101               	movlb	1	; () banked
 23291  005AC8  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23292  005ACA  50F3               	movf	prodl,w,c
 23293  005ACC  0101               	movlb	1	; () banked
 23294  005ACE  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23295  005AD0  50F4               	movf	prodh,w,c
 23296  005AD2  0101               	movlb	1	; () banked
 23297  005AD4  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23298  005AD6  0101               	movlb	1	; () banked
 23299  005AD8  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23300  005ADA  0D42               	mullw	66
 23301  005ADC  50F3               	movf	prodl,w,c
 23302  005ADE  0101               	movlb	1	; () banked
 23303  005AE0  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23304  005AE2  0101               	movlb	1	; () banked
 23305  005AE4  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 23306  005AE6  50F4               	movf	prodh,w,c
 23307  005AE8  0101               	movlb	1	; () banked
 23308  005AEA  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23309  005AEC  0101               	movlb	1	; () banked
 23310  005AEE  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 23311                           
 23312                           ; BSR set to: 1
 23313                           ;drv_mrf_miwi_89xa.c: 892: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 23314  005AF0  0101               	movlb	1	; () banked
 23315  005AF2  31AA               	rrcf	_MACInitParams& (0+255),w,b
 23316  005AF4  32E8               	rrcf	wreg,f,c
 23317  005AF6  32E8               	rrcf	wreg,f,c
 23318  005AF8  0B0F               	andlw	15
 23319  005AFA  0101               	movlb	1	; () banked
 23320  005AFC  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23321                           
 23322                           ;drv_mrf_miwi_89xa.c: 893: }
 23323  005AFE  D006               	goto	l17622
 23324  005B00                     l17620:
 23325                           
 23326                           ; BSR set to: 1
 23327                           ;drv_mrf_miwi_89xa.c: 894: else
 23328                           ;drv_mrf_miwi_89xa.c: 895: {
 23329                           ;drv_mrf_miwi_89xa.c: 896: MACRxPacket.SourceAddress = (0);
 23330  005B00  0E00               	movlw	0
 23331  005B02  0101               	movlb	1	; () banked
 23332  005B04  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 23333  005B06  0E00               	movlw	0
 23334  005B08  0101               	movlb	1	; () banked
 23335  005B0A  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 23336  005B0C                     l17622:
 23337                           
 23338                           ; BSR set to: 1
 23339                           ;drv_mrf_miwi_89xa.c: 897: }
 23340                           ;drv_mrf_miwi_89xa.c: 901: if( MACRxPacket.flags.bits.secEn )
 23341  005B0C  0101               	movlb	1	; () banked
 23342  005B0E  A79A               	btfss	_MACRxPacket& (0+255),3,b
 23343  005B10  D126               	goto	l17686
 23344                           
 23345                           ; BSR set to: 1
 23346                           ;drv_mrf_miwi_89xa.c: 902: {
 23347                           ;drv_mrf_miwi_89xa.c: 904: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 23348  005B12  0101               	movlb	1	; () banked
 23349  005B14  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23350  005B16  0D42               	mullw	66
 23351  005B18  0101               	movlb	1	; () banked
 23352  005B1A  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23353  005B1C  0101               	movlb	1	; () banked
 23354  005B1E  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23355  005B20  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23356  005B22  0E05               	movlw	5
 23357  005B24  0101               	movlb	1	; () banked
 23358  005B26  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23359  005B28  0E00               	movlw	0
 23360  005B2A  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23361  005B2C  0E00               	movlw	low _RxPacket
 23362  005B2E  0101               	movlb	1	; () banked
 23363  005B30  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 23364  005B32  0E03               	movlw	high _RxPacket
 23365  005B34  0101               	movlb	1	; () banked
 23366  005B36  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 23367  005B38  0101               	movlb	1	; () banked
 23368  005B3A  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23369  005B3C  0101               	movlb	1	; () banked
 23370  005B3E  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23371  005B40  0101               	movlb	1	; () banked
 23372  005B42  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23373  005B44  0101               	movlb	1	; () banked
 23374  005B46  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23375  005B48  50F3               	movf	prodl,w,c
 23376  005B4A  0101               	movlb	1	; () banked
 23377  005B4C  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23378  005B4E  6ED9               	movwf	fsr2l,c
 23379  005B50  50F4               	movf	prodh,w,c
 23380  005B52  0101               	movlb	1	; () banked
 23381  005B54  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23382  005B56  6EDA               	movwf	fsr2h,c
 23383  005B58  50DF               	movf	indf2,w,c
 23384  005B5A  B4D8               	btfsc	status,2,c
 23385  005B5C  D00D               	goto	l356
 23386                           
 23387                           ; BSR set to: 1
 23388                           ;drv_mrf_miwi_89xa.c: 905: {
 23389                           ;drv_mrf_miwi_89xa.c: 906: RxPacket[i].flags.Val = 0;
 23390  005B5E  0101               	movlb	1	; () banked
 23391  005B60  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23392  005B62  0D42               	mullw	66
 23393  005B64  0E00               	movlw	low _RxPacket
 23394  005B66  24F3               	addwf	prodl,w,c
 23395  005B68  6ED9               	movwf	fsr2l,c
 23396  005B6A  0E03               	movlw	high _RxPacket
 23397  005B6C  20F4               	addwfc	prodh,w,c
 23398  005B6E  6EDA               	movwf	fsr2h,c
 23399  005B70  0E00               	movlw	0
 23400  005B72  6EDF               	movwf	indf2,c
 23401                           
 23402                           ; BSR set to: 1
 23403                           ;drv_mrf_miwi_89xa.c: 907: return 0;
 23404  005B74  0E00               	movlw	0
 23405                           
 23406                           ; BSR set to: 1
 23407  005B76  0012               	return	
 23408  005B78                     l356:
 23409                           
 23410                           ; BSR set to: 1
 23411                           ;drv_mrf_miwi_89xa.c: 908: }
 23412                           ;drv_mrf_miwi_89xa.c: 911: if( MACRxPacket.flags.bits.sourcePrsnt )
 23413  005B78  0101               	movlb	1	; () banked
 23414  005B7A  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 23415  005B7C  D0A9               	goto	l17674
 23416                           
 23417                           ; BSR set to: 1
 23418                           ;drv_mrf_miwi_89xa.c: 912: {
 23419                           ;drv_mrf_miwi_89xa.c: 913: for(j = 0; j < 64; j++)
 23420  005B7E  0E00               	movlw	0
 23421  005B80  0101               	movlb	1	; () banked
 23422  005B82  6F44               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 23423  005B84                     l17634:
 23424                           
 23425                           ; BSR set to: 1
 23426  005B84  0E3F               	movlw	63
 23427  005B86  0101               	movlb	1	; () banked
 23428  005B88  6544               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 23429  005B8A  D001               	goto	l17638
 23430  005B8C  D02A               	goto	l17648
 23431  005B8E                     l17638:
 23432                           
 23433                           ; BSR set to: 1
 23434                           ;drv_mrf_miwi_89xa.c: 914: {
 23435                           ;drv_mrf_miwi_89xa.c: 915: if( (ConnectionTable[j].status.bits.isValid) &&
 23436                           ;drv_mrf_miwi_89xa.c: 916: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 23437  005B8E  0101               	movlb	1	; () banked
 23438  005B90  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23439  005B92  0D09               	mullw	9
 23440  005B94  0E08               	movlw	8
 23441  005B96  26F3               	addwf	prodl,f,c
 23442  005B98  0E00               	movlw	0
 23443  005B9A  22F4               	addwfc	prodh,f,c
 23444  005B9C  0E00               	movlw	low _ConnectionTable
 23445  005B9E  24F3               	addwf	prodl,w,c
 23446  005BA0  6ED9               	movwf	fsr2l,c
 23447  005BA2  0E06               	movlw	high _ConnectionTable
 23448  005BA4  20F4               	addwfc	prodh,w,c
 23449  005BA6  6EDA               	movwf	fsr2h,c
 23450  005BA8  AEDF               	btfss	indf2,7,c
 23451  005BAA  D018               	goto	l17644
 23452                           
 23453                           ; BSR set to: 1
 23454  005BAC  0101               	movlb	1	; () banked
 23455  005BAE  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23456  005BB0  0D09               	mullw	9
 23457  005BB2  0E04               	movlw	4
 23458  005BB4  26F3               	addwf	prodl,f,c
 23459  005BB6  0E00               	movlw	0
 23460  005BB8  22F4               	addwfc	prodh,f,c
 23461  005BBA  0E00               	movlw	low _ConnectionTable
 23462  005BBC  24F3               	addwf	prodl,w,c
 23463  005BBE  0101               	movlb	1	; () banked
 23464  005BC0  6F00               	movwf	isSameAddress@Address1& (0+255),b
 23465  005BC2  0E06               	movlw	high _ConnectionTable
 23466  005BC4  20F4               	addwfc	prodh,w,c
 23467  005BC6  0101               	movlb	1	; () banked
 23468  005BC8  6F01               	movwf	(isSameAddress@Address1+1)& (0+255),b
 23469  005BCA  C19B  F102         	movff	_MACRxPacket+1,isSameAddress@Address2
 23470  005BCE  C19C  F103         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 23471  005BD2  ECDB  F05A         	call	_isSameAddress	;wreg free
 23472  005BD6  0900               	iorlw	0
 23473  005BD8  A4D8               	btfss	status,2,c
 23474  005BDA  D003               	goto	l17648
 23475  005BDC                     l17644:
 23476  005BDC  0101               	movlb	1	; () banked
 23477  005BDE  2B44               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 23478  005BE0  D7D1               	goto	l17634
 23479  005BE2                     l17648:
 23480                           
 23481                           ;drv_mrf_miwi_89xa.c: 919: }
 23482                           ;drv_mrf_miwi_89xa.c: 920: }
 23483                           ;drv_mrf_miwi_89xa.c: 921: if( j < 64 )
 23484  005BE2  0E40               	movlw	64
 23485  005BE4  0101               	movlb	1	; () banked
 23486  005BE6  6144               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 23487  005BE8  D073               	goto	l17674
 23488                           
 23489                           ; BSR set to: 1
 23490                           ;drv_mrf_miwi_89xa.c: 922: {
 23491                           ;drv_mrf_miwi_89xa.c: 923: API_UINT32_UNION FrameCounter;
 23492                           ;drv_mrf_miwi_89xa.c: 924: uint8_t k;
 23493                           ;drv_mrf_miwi_89xa.c: 926: for(k = 0; k < 4; k++)
 23494  005BEA  0E00               	movlw	0
 23495  005BEC  0101               	movlb	1	; () banked
 23496  005BEE  6F43               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 23497  005BF0                     l17652:
 23498                           
 23499                           ; BSR set to: 1
 23500  005BF0  0E03               	movlw	3
 23501  005BF2  0101               	movlb	1	; () banked
 23502  005BF4  6543               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 23503  005BF6  D001               	goto	l17656
 23504  005BF8  D036               	goto	l17662
 23505  005BFA                     l17656:
 23506                           
 23507                           ; BSR set to: 1
 23508                           ;drv_mrf_miwi_89xa.c: 927: {
 23509                           ;drv_mrf_miwi_89xa.c: 928: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 23510  005BFA  0101               	movlb	1	; () banked
 23511  005BFC  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23512  005BFE  0D42               	mullw	66
 23513  005C00  0101               	movlb	1	; () banked
 23514  005C02  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 23515  005C04  C145  F133         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 23516  005C08  0101               	movlb	1	; () banked
 23517  005C0A  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23518  005C0C  0101               	movlb	1	; () banked
 23519  005C0E  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23520  005C10  0E00               	movlw	0
 23521  005C12  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23522  005C14  0E01               	movlw	1
 23523  005C16  0101               	movlb	1	; () banked
 23524  005C18  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23525  005C1A  0E00               	movlw	0
 23526  005C1C  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23527  005C1E  0E00               	movlw	low _RxPacket
 23528  005C20  0101               	movlb	1	; () banked
 23529  005C22  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 23530  005C24  0E03               	movlw	high _RxPacket
 23531  005C26  0101               	movlb	1	; () banked
 23532  005C28  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 23533  005C2A  0101               	movlb	1	; () banked
 23534  005C2C  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23535  005C2E  0101               	movlb	1	; () banked
 23536  005C30  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23537  005C32  0101               	movlb	1	; () banked
 23538  005C34  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23539  005C36  0101               	movlb	1	; () banked
 23540  005C38  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23541  005C3A  50F3               	movf	prodl,w,c
 23542  005C3C  0101               	movlb	1	; () banked
 23543  005C3E  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23544  005C40  6ED9               	movwf	fsr2l,c
 23545  005C42  50F4               	movf	prodh,w,c
 23546  005C44  0101               	movlb	1	; () banked
 23547  005C46  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23548  005C48  6EDA               	movwf	fsr2h,c
 23549  005C4A  0101               	movlb	1	; () banked
 23550  005C4C  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 23551  005C4E  0D01               	mullw	1
 23552  005C50  0E3F               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 23553  005C52  24F3               	addwf	prodl,w,c
 23554  005C54  6EE1               	movwf	fsr1l,c
 23555  005C56  0E01               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 23556  005C58  20F4               	addwfc	prodh,w,c
 23557  005C5A  6EE2               	movwf	fsr1h,c
 23558  005C5C  CFDF FFE7          	movff	indf2,indf1
 23559                           
 23560                           ; BSR set to: 1
 23561  005C60  0101               	movlb	1	; () banked
 23562  005C62  2B43               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 23563  005C64  D7C5               	goto	l17652
 23564  005C66                     l17662:
 23565                           
 23566                           ; BSR set to: 1
 23567                           ;drv_mrf_miwi_89xa.c: 929: }
 23568                           ;drv_mrf_miwi_89xa.c: 931: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 23569  005C66  0101               	movlb	1	; () banked
 23570  005C68  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23571  005C6A  0D04               	mullw	4
 23572  005C6C  0E00               	movlw	low _IncomingFrameCounter
 23573  005C6E  24F3               	addwf	prodl,w,c
 23574  005C70  6ED9               	movwf	fsr2l,c
 23575  005C72  0E05               	movlw	high _IncomingFrameCounter
 23576  005C74  20F4               	addwfc	prodh,w,c
 23577  005C76  6EDA               	movwf	fsr2h,c
 23578  005C78  50DE               	movf	postinc2,w,c
 23579  005C7A  0101               	movlb	1	; () banked
 23580  005C7C  5D3F               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 23581  005C7E  50DE               	movf	postinc2,w,c
 23582  005C80  0101               	movlb	1	; () banked
 23583  005C82  5940               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 23584  005C84  50DE               	movf	postinc2,w,c
 23585  005C86  0101               	movlb	1	; () banked
 23586  005C88  5941               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 23587  005C8A  50DE               	movf	postinc2,w,c
 23588  005C8C  0101               	movlb	1	; () banked
 23589  005C8E  5942               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 23590  005C90  B0D8               	btfsc	status,0,c
 23591  005C92  D00D               	goto	l17672
 23592                           
 23593                           ; BSR set to: 1
 23594                           ;drv_mrf_miwi_89xa.c: 932: {
 23595                           ;drv_mrf_miwi_89xa.c: 933: RxPacket[i].flags.Val = 0;
 23596  005C94  0101               	movlb	1	; () banked
 23597  005C96  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23598  005C98  0D42               	mullw	66
 23599  005C9A  0E00               	movlw	low _RxPacket
 23600  005C9C  24F3               	addwf	prodl,w,c
 23601  005C9E  6ED9               	movwf	fsr2l,c
 23602  005CA0  0E03               	movlw	high _RxPacket
 23603  005CA2  20F4               	addwfc	prodh,w,c
 23604  005CA4  6EDA               	movwf	fsr2h,c
 23605  005CA6  0E00               	movlw	0
 23606  005CA8  6EDF               	movwf	indf2,c
 23607                           
 23608                           ; BSR set to: 1
 23609                           ;drv_mrf_miwi_89xa.c: 934: return 0;
 23610  005CAA  0E00               	movlw	0
 23611                           
 23612                           ; BSR set to: 1
 23613  005CAC  0012               	return	
 23614  005CAE                     l17672:
 23615                           
 23616                           ; BSR set to: 1
 23617                           ;drv_mrf_miwi_89xa.c: 936: else
 23618                           ;drv_mrf_miwi_89xa.c: 937: {
 23619                           ;drv_mrf_miwi_89xa.c: 938: IncomingFrameCounter[j].Val = FrameCounter.Val;
 23620  005CAE  0101               	movlb	1	; () banked
 23621  005CB0  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23622  005CB2  0D04               	mullw	4
 23623  005CB4  0E00               	movlw	low _IncomingFrameCounter
 23624  005CB6  24F3               	addwf	prodl,w,c
 23625  005CB8  6ED9               	movwf	fsr2l,c
 23626  005CBA  0E05               	movlw	high _IncomingFrameCounter
 23627  005CBC  20F4               	addwfc	prodh,w,c
 23628  005CBE  6EDA               	movwf	fsr2h,c
 23629  005CC0  C13F  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 23630  005CC4  C140  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 23631  005CC8  C141  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 23632  005CCC  C142  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 23633  005CD0                     l17674:
 23634                           
 23635                           ; BSR set to: 1
 23636                           ;drv_mrf_miwi_89xa.c: 939: }
 23637                           ;drv_mrf_miwi_89xa.c: 940: }
 23638                           ;drv_mrf_miwi_89xa.c: 941: }
 23639                           ;drv_mrf_miwi_89xa.c: 944: PayloadIndex += 5;
 23640  005CD0  0E05               	movlw	5
 23641  005CD2  0101               	movlb	1	; () banked
 23642  005CD4  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23643                           
 23644                           ; BSR set to: 1
 23645                           ;drv_mrf_miwi_89xa.c: 966: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 23646  005CD6  0101               	movlb	1	; () banked
 23647  005CD8  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23648  005CDA  0D42               	mullw	66
 23649  005CDC  0E01               	movlw	1
 23650  005CDE  26F3               	addwf	prodl,f,c
 23651  005CE0  0E00               	movlw	0
 23652  005CE2  22F4               	addwfc	prodh,f,c
 23653  005CE4  0E00               	movlw	low _RxPacket
 23654  005CE6  24F3               	addwf	prodl,w,c
 23655  005CE8  0101               	movlb	1	; () banked
 23656  005CEA  6F24               	movwf	CCM_Dec@text& (0+255),b
 23657  005CEC  0E03               	movlw	high _RxPacket
 23658  005CEE  20F4               	addwfc	prodh,w,c
 23659  005CF0  0101               	movlb	1	; () banked
 23660  005CF2  6F25               	movwf	(CCM_Dec@text+1)& (0+255),b
 23661  005CF4  C145  F126         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 23662  005CF8  0101               	movlb	1	; () banked
 23663  005CFA  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23664  005CFC  0D42               	mullw	66
 23665  005CFE  0E41               	movlw	65
 23666  005D00  26F3               	addwf	prodl,f,c
 23667  005D02  0E00               	movlw	0
 23668  005D04  22F4               	addwfc	prodh,f,c
 23669  005D06  0E00               	movlw	low _RxPacket
 23670  005D08  24F3               	addwf	prodl,w,c
 23671  005D0A  6ED9               	movwf	fsr2l,c
 23672  005D0C  0E03               	movlw	high _RxPacket
 23673  005D0E  20F4               	addwfc	prodh,w,c
 23674  005D10  6EDA               	movwf	fsr2h,c
 23675  005D12  50DF               	movf	indf2,w,c
 23676  005D14  0101               	movlb	1	; () banked
 23677  005D16  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23678  005D18  0101               	movlb	1	; () banked
 23679  005D1A  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23680  005D1C  0800               	sublw	0
 23681  005D1E  0101               	movlb	1	; () banked
 23682  005D20  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23683  005D22  0101               	movlb	1	; () banked
 23684  005D24  6F27               	movwf	CCM_Dec@payloadLen& (0+255),b
 23685  005D26  0EF1               	movlw	low _key
 23686  005D28  0101               	movlb	1	; () banked
 23687  005D2A  6F28               	movwf	CCM_Dec@key& (0+255),b
 23688  005D2C  0E02               	movlw	high _key
 23689  005D2E  0101               	movlb	1	; () banked
 23690  005D30  6F29               	movwf	(CCM_Dec@key+1)& (0+255),b
 23691  005D32  EC38  F03F         	call	_CCM_Dec	;wreg free
 23692  005D36  0900               	iorlw	0
 23693  005D38  A4D8               	btfss	status,2,c
 23694  005D3A  D00D               	goto	l17684
 23695                           
 23696                           ;drv_mrf_miwi_89xa.c: 967: {
 23697                           ;drv_mrf_miwi_89xa.c: 968: RxPacket[i].flags.Val = 0;
 23698  005D3C  0101               	movlb	1	; () banked
 23699  005D3E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23700  005D40  0D42               	mullw	66
 23701  005D42  0E00               	movlw	low _RxPacket
 23702  005D44  24F3               	addwf	prodl,w,c
 23703  005D46  6ED9               	movwf	fsr2l,c
 23704  005D48  0E03               	movlw	high _RxPacket
 23705  005D4A  20F4               	addwfc	prodh,w,c
 23706  005D4C  6EDA               	movwf	fsr2h,c
 23707  005D4E  0E00               	movlw	0
 23708  005D50  6EDF               	movwf	indf2,c
 23709                           
 23710                           ; BSR set to: 1
 23711                           ;drv_mrf_miwi_89xa.c: 969: return 0;
 23712  005D52  0E00               	movlw	0
 23713                           
 23714                           ; BSR set to: 1
 23715  005D54  0012               	return	
 23716  005D56                     l17684:
 23717                           
 23718                           ;drv_mrf_miwi_89xa.c: 970: }
 23719                           ;drv_mrf_miwi_89xa.c: 987: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 23720  005D56  0101               	movlb	1	; () banked
 23721  005D58  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23722  005D5A  0F02               	addlw	2
 23723  005D5C  D002               	goto	L9
 23724  005D5E                     l17686:
 23725                           
 23726                           ; BSR set to: 1
 23727                           ;drv_mrf_miwi_89xa.c: 989: else
 23728                           ;drv_mrf_miwi_89xa.c: 990: {
 23729                           ;drv_mrf_miwi_89xa.c: 991: MACRxPacket.PayloadLen -= PayloadIndex;
 23730  005D5E  0101               	movlb	1	; () banked
 23731  005D60  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23732  005D62                     L9:
 23733  005D62  0101               	movlb	1	; () banked
 23734  005D64  5F9F               	subwf	(_MACRxPacket+5)& (0+255),f,b
 23735                           
 23736                           ; BSR set to: 1
 23737                           ;drv_mrf_miwi_89xa.c: 992: }
 23738                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 23739                           
 23740                           ; BSR set to: 1
 23741  005D66  0101               	movlb	1	; () banked
 23742  005D68  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23743  005D6A  0D01               	mullw	1
 23744  005D6C  0E01               	movlw	1
 23745  005D6E  26F3               	addwf	prodl,f,c
 23746  005D70  0E00               	movlw	0
 23747  005D72  22F4               	addwfc	prodh,f,c
 23748  005D74  0E00               	movlw	low _RxPacket
 23749  005D76  0101               	movlb	1	; () banked
 23750  005D78  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23751  005D7A  0E03               	movlw	high _RxPacket
 23752  005D7C  0101               	movlb	1	; () banked
 23753  005D7E  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23754  005D80  50F3               	movf	prodl,w,c
 23755  005D82  0101               	movlb	1	; () banked
 23756  005D84  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23757  005D86  50F4               	movf	prodh,w,c
 23758  005D88  0101               	movlb	1	; () banked
 23759  005D8A  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23760  005D8C  0101               	movlb	1	; () banked
 23761  005D8E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23762  005D90  0D42               	mullw	66
 23763  005D92  50F3               	movf	prodl,w,c
 23764  005D94  0101               	movlb	1	; () banked
 23765  005D96  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23766  005D98  0101               	movlb	1	; () banked
 23767  005D9A  6F9D               	movwf	(_MACRxPacket+3)& (0+255),b
 23768  005D9C  50F4               	movf	prodh,w,c
 23769  005D9E  0101               	movlb	1	; () banked
 23770  005DA0  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23771  005DA2  0101               	movlb	1	; () banked
 23772  005DA4  6F9E               	movwf	(_MACRxPacket+4)& (0+255),b
 23773                           
 23774                           ; BSR set to: 1
 23775                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.RSSIValue = RSSILock;
 23776  005DA6  C1C4  F1A0         	movff	_RSSILock,_MACRxPacket+6
 23777                           
 23778                           ; BSR set to: 1
 23779                           ;drv_mrf_miwi_89xa.c: 1005: ReceivedBankIndex = i;
 23780  005DAA  C146  F1C5         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 23781                           
 23782                           ; BSR set to: 1
 23783                           ;drv_mrf_miwi_89xa.c: 1006: return 1;
 23784  005DAE  0E01               	movlw	1
 23785                           
 23786                           ; BSR set to: 1
 23787  005DB0  0012               	return	
 23788  005DB2                     l17698:
 23789  005DB2  0101               	movlb	1	; () banked
 23790  005DB4  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23791  005DB6  D63B               	goto	l17600
 23792  005DB8                     l17702:
 23793                           
 23794                           ; BSR set to: 1
 23795                           ;drv_mrf_miwi_89xa.c: 1007: }
 23796                           ;drv_mrf_miwi_89xa.c: 1008: }
 23797                           ;drv_mrf_miwi_89xa.c: 1010: return 0;
 23798  005DB8  0E00               	movlw	0
 23799  005DBA  0012               	return	
 23800  005DBC                     __end_of_MiMAC_ReceivedPacket:
 23801                           	opt stack 0
 23802                           tblptru	equ	0xFF8
 23803                           tblptrh	equ	0xFF7
 23804                           tblptrl	equ	0xFF6
 23805                           tablat	equ	0xFF5
 23806                           prodh	equ	0xFF4
 23807                           prodl	equ	0xFF3
 23808                           intcon	equ	0xFF2
 23809                           intcon2	equ	0xFF1
 23810                           intcon3	equ	0xFF0
 23811                           indf0	equ	0xFEF
 23812                           postinc0	equ	0xFEE
 23813                           plusw0	equ	0xFEB
 23814                           fsr0h	equ	0xFEA
 23815                           fsr0l	equ	0xFE9
 23816                           wreg	equ	0xFE8
 23817                           indf1	equ	0xFE7
 23818                           postinc1	equ	0xFE6
 23819                           postdec1	equ	0xFE5
 23820                           fsr1h	equ	0xFE2
 23821                           fsr1l	equ	0xFE1
 23822                           indf2	equ	0xFDF
 23823                           postinc2	equ	0xFDE
 23824                           postdec2	equ	0xFDD
 23825                           plusw2	equ	0xFDB
 23826                           fsr2h	equ	0xFDA
 23827                           fsr2l	equ	0xFD9
 23828                           status	equ	0xFD8
 23829                           
 23830 ;; *************** function _isSameAddress *****************
 23831 ;; Defined at:
 23832 ;;		line 3443 in file "src/miwi/miwi_mesh.c"
 23833 ;; Parameters:    Size  Location     Type
 23834 ;;  Address1        2    0[BANK1 ] PTR unsigned char 
 23835 ;;		 -> ConnectionTable(576), 
 23836 ;;  Address2        2    2[BANK1 ] PTR unsigned char 
 23837 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 23838 ;; Auto vars:     Size  Location     Type
 23839 ;;  i               1    6[BANK1 ] unsigned char 
 23840 ;; Return value:  Size  Location     Type
 23841 ;;                  1    wreg      unsigned char 
 23842 ;; Registers used:
 23843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23844 ;; Tracked objects:
 23845 ;;		On entry : 0/0
 23846 ;;		On exit  : 0/0
 23847 ;;		Unchanged: 0/0
 23848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23849 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23850 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23851 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23852 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23853 ;;Total ram usage:        7 bytes
 23854 ;; Hardware stack levels used:    1
 23855 ;; Hardware stack levels required when called:   16
 23856 ;; This function calls:
 23857 ;;		Nothing
 23858 ;; This function is called by:
 23859 ;;		_MiMAC_ReceivedPacket
 23860 ;; This function uses a non-reentrant model
 23861 ;;
 23862                           
 23863                           	psect	text51
 23864  00B5B6                     __ptext51:
 23865                           	opt stack 0
 23866  00B5B6                     _isSameAddress:
 23867                           	opt stack 12
 23868                           
 23869                           ;miwi_mesh.c: 3445: uint8_t i;
 23870                           ;miwi_mesh.c: 3447: for(i = 0; i < 4; i++)
 23871                           
 23872                           ; BSR set to: 1
 23873                           ;incstack = 0
 23874  00B5B6  0E00               	movlw	0
 23875  00B5B8  0101               	movlb	1	; () banked
 23876  00B5BA  6F06               	movwf	isSameAddress@i& (0+255),b
 23877  00B5BC                     l17158:
 23878                           
 23879                           ; BSR set to: 1
 23880  00B5BC  0E03               	movlw	3
 23881  00B5BE  0101               	movlb	1	; () banked
 23882  00B5C0  6506               	cpfsgt	isSameAddress@i& (0+255),b
 23883  00B5C2  D001               	goto	l17162
 23884  00B5C4  D01F               	goto	l17172
 23885  00B5C6                     l17162:
 23886                           
 23887                           ; BSR set to: 1
 23888                           ;miwi_mesh.c: 3448: {
 23889                           ;miwi_mesh.c: 3449: if( Address1[i] != Address2[i] )
 23890  00B5C6  0101               	movlb	1	; () banked
 23891  00B5C8  5106               	movf	isSameAddress@i& (0+255),w,b
 23892  00B5CA  0D01               	mullw	1
 23893  00B5CC  50F3               	movf	prodl,w,c
 23894  00B5CE  0101               	movlb	1	; () banked
 23895  00B5D0  2502               	addwf	isSameAddress@Address2& (0+255),w,b
 23896  00B5D2  6ED9               	movwf	fsr2l,c
 23897  00B5D4  50F4               	movf	prodh,w,c
 23898  00B5D6  0101               	movlb	1	; () banked
 23899  00B5D8  2103               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 23900  00B5DA  6EDA               	movwf	fsr2h,c
 23901  00B5DC  0101               	movlb	1	; () banked
 23902  00B5DE  5106               	movf	isSameAddress@i& (0+255),w,b
 23903  00B5E0  0D01               	mullw	1
 23904  00B5E2  50F3               	movf	prodl,w,c
 23905  00B5E4  0101               	movlb	1	; () banked
 23906  00B5E6  2500               	addwf	isSameAddress@Address1& (0+255),w,b
 23907  00B5E8  6EE1               	movwf	fsr1l,c
 23908  00B5EA  50F4               	movf	prodh,w,c
 23909  00B5EC  0101               	movlb	1	; () banked
 23910  00B5EE  2101               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 23911  00B5F0  6EE2               	movwf	fsr1h,c
 23912  00B5F2  50DE               	movf	postinc2,w,c
 23913  00B5F4  18E6               	xorwf	postinc1,w,c
 23914  00B5F6  B4D8               	btfsc	status,2,c
 23915  00B5F8  D002               	goto	l17168
 23916                           
 23917                           ; BSR set to: 1
 23918                           ;miwi_mesh.c: 3450: {
 23919                           ;miwi_mesh.c: 3451: return 0;
 23920  00B5FA  0E00               	movlw	0
 23921                           
 23922                           ; BSR set to: 1
 23923  00B5FC  0012               	return	
 23924  00B5FE                     l17168:
 23925                           
 23926                           ; BSR set to: 1
 23927  00B5FE  0101               	movlb	1	; () banked
 23928  00B600  2B06               	incf	isSameAddress@i& (0+255),f,b
 23929  00B602  D7DC               	goto	l17158
 23930  00B604                     l17172:
 23931                           
 23932                           ; BSR set to: 1
 23933                           ;miwi_mesh.c: 3452: }
 23934                           ;miwi_mesh.c: 3453: }
 23935                           ;miwi_mesh.c: 3454: return 1;
 23936  00B604  0E01               	movlw	1
 23937  00B606  0012               	return	
 23938  00B608                     __end_of_isSameAddress:
 23939                           	opt stack 0
 23940                           tblptru	equ	0xFF8
 23941                           tblptrh	equ	0xFF7
 23942                           tblptrl	equ	0xFF6
 23943                           tablat	equ	0xFF5
 23944                           prodh	equ	0xFF4
 23945                           prodl	equ	0xFF3
 23946                           intcon	equ	0xFF2
 23947                           intcon2	equ	0xFF1
 23948                           intcon3	equ	0xFF0
 23949                           indf0	equ	0xFEF
 23950                           postinc0	equ	0xFEE
 23951                           plusw0	equ	0xFEB
 23952                           fsr0h	equ	0xFEA
 23953                           fsr0l	equ	0xFE9
 23954                           wreg	equ	0xFE8
 23955                           indf1	equ	0xFE7
 23956                           postinc1	equ	0xFE6
 23957                           postdec1	equ	0xFE5
 23958                           fsr1h	equ	0xFE2
 23959                           fsr1l	equ	0xFE1
 23960                           indf2	equ	0xFDF
 23961                           postinc2	equ	0xFDE
 23962                           postdec2	equ	0xFDD
 23963                           plusw2	equ	0xFDB
 23964                           fsr2h	equ	0xFDA
 23965                           fsr2l	equ	0xFD9
 23966                           status	equ	0xFD8
 23967                           
 23968 ;; *************** function _CCM_Dec *****************
 23969 ;; Defined at:
 23970 ;;		line 298 in file "src/miwi/drv_mrf_miwi_security.c"
 23971 ;; Parameters:    Size  Location     Type
 23972 ;;  text            2   36[BANK1 ] PTR unsigned char 
 23973 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 23974 ;;  headerLen       1   38[BANK1 ] unsigned char 
 23975 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 23976 ;;  key             2   40[BANK1 ] PTR unsigned char 
 23977 ;;		 -> key(8), 
 23978 ;; Auto vars:     Size  Location     Type
 23979 ;;  i               1   50[BANK1 ] unsigned char 
 23980 ;; Return value:  Size  Location     Type
 23981 ;;                  1    wreg      unsigned char 
 23982 ;; Registers used:
 23983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23984 ;; Tracked objects:
 23985 ;;		On entry : 0/0
 23986 ;;		On exit  : 0/0
 23987 ;;		Unchanged: 0/0
 23988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23989 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23990 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23991 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23992 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23993 ;;Total ram usage:       15 bytes
 23994 ;; Hardware stack levels used:    1
 23995 ;; Hardware stack levels required when called:   18
 23996 ;; This function calls:
 23997 ;;		_CBC_MAC
 23998 ;;		_CTR
 23999 ;; This function is called by:
 24000 ;;		_MiMAC_ReceivedPacket
 24001 ;; This function uses a non-reentrant model
 24002 ;;
 24003                           
 24004                           	psect	text52
 24005  007E70                     __ptext52:
 24006                           	opt stack 0
 24007  007E70                     _CCM_Dec:
 24008                           	opt stack 10
 24009                           
 24010                           ;drv_mrf_miwi_security.c: 300: uint8_t i;
 24011                           ;drv_mrf_miwi_security.c: 307: for(i = 0; i < 4-1; i++)
 24012                           
 24013                           ; BSR set to: 1
 24014                           ;incstack = 0
 24015  007E70  0E00               	movlw	0
 24016  007E72  0101               	movlb	1	; () banked
 24017  007E74  6F32               	movwf	CCM_Dec@i& (0+255),b
 24018  007E76                     l17178:
 24019                           
 24020                           ; BSR set to: 1
 24021  007E76  0E02               	movlw	2
 24022  007E78  0101               	movlb	1	; () banked
 24023  007E7A  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 24024  007E7C  D001               	goto	l17182
 24025  007E7E  D02D               	goto	l17192
 24026  007E80                     l17182:
 24027                           
 24028                           ; BSR set to: 1
 24029                           ;drv_mrf_miwi_security.c: 308: {
 24030                           ;drv_mrf_miwi_security.c: 309: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 24031  007E80  0101               	movlb	1	; () banked
 24032  007E82  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24033  007E84  0101               	movlb	1	; () banked
 24034  007E86  5D32               	subwf	CCM_Dec@i& (0+255),w,b
 24035  007E88  A0D8               	btfss	status,0,c
 24036  007E8A  D006               	goto	l17186
 24037                           
 24038                           ; BSR set to: 1
 24039  007E8C  0E00               	movlw	0
 24040  007E8E  0101               	movlb	1	; () banked
 24041  007E90  6F31               	movwf	(_CCM_Dec$1986+1)& (0+255),b
 24042  007E92  0E00               	movlw	0
 24043  007E94  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 24044  007E96  D013               	goto	l495
 24045  007E98                     l17186:
 24046                           
 24047                           ; BSR set to: 1
 24048  007E98  0101               	movlb	1	; () banked
 24049  007E9A  5132               	movf	CCM_Dec@i& (0+255),w,b
 24050  007E9C  0D01               	mullw	1
 24051  007E9E  50F3               	movf	prodl,w,c
 24052  007EA0  0101               	movlb	1	; () banked
 24053  007EA2  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24054  007EA4  6ED9               	movwf	fsr2l,c
 24055  007EA6  50F4               	movf	prodh,w,c
 24056  007EA8  0101               	movlb	1	; () banked
 24057  007EAA  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24058  007EAC  6EDA               	movwf	fsr2h,c
 24059  007EAE  50DF               	movf	indf2,w,c
 24060  007EB0  0101               	movlb	1	; () banked
 24061  007EB2  6F2A               	movwf	??_CCM_Dec& (0+255),b
 24062  007EB4  0101               	movlb	1	; () banked
 24063  007EB6  512A               	movf	??_CCM_Dec& (0+255),w,b
 24064  007EB8  0101               	movlb	1	; () banked
 24065  007EBA  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 24066  007EBC  6B31               	clrf	(_CCM_Dec$1986+1)& (0+255),b
 24067  007EBE                     l495:
 24068                           
 24069                           ; BSR set to: 1
 24070  007EBE  0101               	movlb	1	; () banked
 24071  007EC0  5132               	movf	CCM_Dec@i& (0+255),w,b
 24072  007EC2  0D01               	mullw	1
 24073  007EC4  0EEC               	movlw	low _tmpBlock
 24074  007EC6  24F3               	addwf	prodl,w,c
 24075  007EC8  6ED9               	movwf	fsr2l,c
 24076  007ECA  0E01               	movlw	high _tmpBlock
 24077  007ECC  20F4               	addwfc	prodh,w,c
 24078  007ECE  6EDA               	movwf	fsr2h,c
 24079  007ED0  C130  FFDF         	movff	_CCM_Dec$1986,indf2
 24080                           
 24081                           ; BSR set to: 1
 24082  007ED4  0101               	movlb	1	; () banked
 24083  007ED6  2B32               	incf	CCM_Dec@i& (0+255),f,b
 24084  007ED8  D7CE               	goto	l17178
 24085  007EDA                     l17192:
 24086                           
 24087                           ; BSR set to: 1
 24088                           ;drv_mrf_miwi_security.c: 310: }
 24089                           ;drv_mrf_miwi_security.c: 311: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 24090  007EDA  0101               	movlb	1	; () banked
 24091  007EDC  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24092  007EDE  0D01               	mullw	1
 24093  007EE0  50F3               	movf	prodl,w,c
 24094  007EE2  0101               	movlb	1	; () banked
 24095  007EE4  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24096  007EE6  0101               	movlb	1	; () banked
 24097  007EE8  6F17               	movwf	CTR@text& (0+255),b
 24098  007EEA  50F4               	movf	prodh,w,c
 24099  007EEC  0101               	movlb	1	; () banked
 24100  007EEE  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24101  007EF0  0101               	movlb	1	; () banked
 24102  007EF2  6F18               	movwf	(CTR@text+1)& (0+255),b
 24103  007EF4  C127  F119         	movff	CCM_Dec@payloadLen,CTR@len
 24104  007EF8  C128  F11A         	movff	CCM_Dec@key,CTR@key
 24105  007EFC  C129  F11B         	movff	CCM_Dec@key+1,CTR@key+1
 24106  007F00  0EEC               	movlw	low _tmpBlock
 24107  007F02  0101               	movlb	1	; () banked
 24108  007F04  6F1C               	movwf	CTR@nounce& (0+255),b
 24109  007F06  0E01               	movlw	high _tmpBlock
 24110  007F08  0101               	movlb	1	; () banked
 24111  007F0A  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 24112  007F0C  ECA6  F046         	call	_CTR	;wreg free
 24113                           
 24114                           ;drv_mrf_miwi_security.c: 313: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 24115  007F10  C124  F117         	movff	CCM_Dec@text,CBC_MAC@text
 24116  007F14  C125  F118         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 24117  007F18  0101               	movlb	1	; () banked
 24118  007F1A  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24119  007F1C  0101               	movlb	1	; () banked
 24120  007F1E  2527               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 24121  007F20  0FFE               	addlw	254
 24122  007F22  0101               	movlb	1	; () banked
 24123  007F24  6F19               	movwf	CBC_MAC@len& (0+255),b
 24124  007F26  C128  F11A         	movff	CCM_Dec@key,CBC_MAC@key
 24125  007F2A  C129  F11B         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 24126  007F2E  0EEC               	movlw	low _tmpBlock
 24127  007F30  0101               	movlb	1	; () banked
 24128  007F32  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 24129  007F34  0E01               	movlw	high _tmpBlock
 24130  007F36  0101               	movlb	1	; () banked
 24131  007F38  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 24132  007F3A  ECCE  F048         	call	_CBC_MAC	;wreg free
 24133                           
 24134                           ;drv_mrf_miwi_security.c: 314: for(i = 0; i < 2; i++)
 24135  007F3E  0E00               	movlw	0
 24136  007F40  0101               	movlb	1	; () banked
 24137  007F42  6F32               	movwf	CCM_Dec@i& (0+255),b
 24138  007F44                     l17198:
 24139                           
 24140                           ; BSR set to: 1
 24141  007F44  0E01               	movlw	1
 24142  007F46  0101               	movlb	1	; () banked
 24143  007F48  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 24144  007F4A  D001               	goto	l17202
 24145  007F4C  D03A               	goto	l17212
 24146  007F4E                     l17202:
 24147                           
 24148                           ; BSR set to: 1
 24149                           ;drv_mrf_miwi_security.c: 315: {
 24150                           ;drv_mrf_miwi_security.c: 316: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 24151  007F4E  0EFE               	movlw	254
 24152  007F50  0101               	movlb	1	; () banked
 24153  007F52  6F2A               	movwf	??_CCM_Dec& (0+255),b
 24154  007F54  0EFF               	movlw	255
 24155  007F56  0101               	movlb	1	; () banked
 24156  007F58  6F2B               	movwf	(??_CCM_Dec+1)& (0+255),b
 24157  007F5A  0101               	movlb	1	; () banked
 24158  007F5C  5127               	movf	CCM_Dec@payloadLen& (0+255),w,b
 24159  007F5E  C126  F12C         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 24160  007F62  0101               	movlb	1	; () banked
 24161  007F64  6B2D               	clrf	(??_CCM_Dec+3)& (0+255),b
 24162  007F66  0101               	movlb	1	; () banked
 24163  007F68  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24164  007F6A  0E00               	movlw	0
 24165  007F6C  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24166  007F6E  0101               	movlb	1	; () banked
 24167  007F70  5132               	movf	CCM_Dec@i& (0+255),w,b
 24168  007F72  0101               	movlb	1	; () banked
 24169  007F74  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24170  007F76  0E00               	movlw	0
 24171  007F78  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24172  007F7A  0101               	movlb	1	; () banked
 24173  007F7C  512A               	movf	??_CCM_Dec& (0+255),w,b
 24174  007F7E  0101               	movlb	1	; () banked
 24175  007F80  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24176  007F82  0101               	movlb	1	; () banked
 24177  007F84  512B               	movf	(??_CCM_Dec+1)& (0+255),w,b
 24178  007F86  0101               	movlb	1	; () banked
 24179  007F88  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24180  007F8A  0101               	movlb	1	; () banked
 24181  007F8C  512C               	movf	(??_CCM_Dec+2)& (0+255),w,b
 24182  007F8E  0101               	movlb	1	; () banked
 24183  007F90  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24184  007F92  6ED9               	movwf	fsr2l,c
 24185  007F94  0101               	movlb	1	; () banked
 24186  007F96  512D               	movf	(??_CCM_Dec+3)& (0+255),w,b
 24187  007F98  0101               	movlb	1	; () banked
 24188  007F9A  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24189  007F9C  6EDA               	movwf	fsr2h,c
 24190  007F9E  0101               	movlb	1	; () banked
 24191  007FA0  5132               	movf	CCM_Dec@i& (0+255),w,b
 24192  007FA2  0D01               	mullw	1
 24193  007FA4  0EEC               	movlw	low _tmpBlock
 24194  007FA6  24F3               	addwf	prodl,w,c
 24195  007FA8  6EE1               	movwf	fsr1l,c
 24196  007FAA  0E01               	movlw	high _tmpBlock
 24197  007FAC  20F4               	addwfc	prodh,w,c
 24198  007FAE  6EE2               	movwf	fsr1h,c
 24199  007FB0  50DE               	movf	postinc2,w,c
 24200  007FB2  18E6               	xorwf	postinc1,w,c
 24201  007FB4  B4D8               	btfsc	status,2,c
 24202  007FB6  D002               	goto	l17208
 24203                           
 24204                           ; BSR set to: 1
 24205                           ;drv_mrf_miwi_security.c: 317: {
 24206                           ;drv_mrf_miwi_security.c: 321: return 0;
 24207  007FB8  0E00               	movlw	0
 24208                           
 24209                           ; BSR set to: 1
 24210  007FBA  0012               	return	
 24211  007FBC                     l17208:
 24212                           
 24213                           ; BSR set to: 1
 24214  007FBC  0101               	movlb	1	; () banked
 24215  007FBE  2B32               	incf	CCM_Dec@i& (0+255),f,b
 24216  007FC0  D7C1               	goto	l17198
 24217  007FC2                     l17212:
 24218                           
 24219                           ; BSR set to: 1
 24220                           ;drv_mrf_miwi_security.c: 322: }
 24221                           ;drv_mrf_miwi_security.c: 323: }
 24222                           ;drv_mrf_miwi_security.c: 327: return 1;
 24223  007FC2  0E01               	movlw	1
 24224  007FC4  0012               	return	
 24225  007FC6                     __end_of_CCM_Dec:
 24226                           	opt stack 0
 24227                           tblptru	equ	0xFF8
 24228                           tblptrh	equ	0xFF7
 24229                           tblptrl	equ	0xFF6
 24230                           tablat	equ	0xFF5
 24231                           prodh	equ	0xFF4
 24232                           prodl	equ	0xFF3
 24233                           intcon	equ	0xFF2
 24234                           intcon2	equ	0xFF1
 24235                           intcon3	equ	0xFF0
 24236                           indf0	equ	0xFEF
 24237                           postinc0	equ	0xFEE
 24238                           plusw0	equ	0xFEB
 24239                           fsr0h	equ	0xFEA
 24240                           fsr0l	equ	0xFE9
 24241                           wreg	equ	0xFE8
 24242                           indf1	equ	0xFE7
 24243                           postinc1	equ	0xFE6
 24244                           postdec1	equ	0xFE5
 24245                           fsr1h	equ	0xFE2
 24246                           fsr1l	equ	0xFE1
 24247                           indf2	equ	0xFDF
 24248                           postinc2	equ	0xFDE
 24249                           postdec2	equ	0xFDD
 24250                           plusw2	equ	0xFDB
 24251                           fsr2h	equ	0xFDA
 24252                           fsr2l	equ	0xFD9
 24253                           status	equ	0xFD8
 24254                           
 24255 ;; *************** function _CTR *****************
 24256 ;; Defined at:
 24257 ;;		line 117 in file "src/miwi/drv_mrf_miwi_security.c"
 24258 ;; Parameters:    Size  Location     Type
 24259 ;;  text            2   23[BANK1 ] PTR unsigned char 
 24260 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 24261 ;;  len             1   25[BANK1 ] unsigned char 
 24262 ;;  key             2   26[BANK1 ] PTR unsigned char 
 24263 ;;		 -> key(8), 
 24264 ;;  nounce          2   28[BANK1 ] PTR unsigned char 
 24265 ;;		 -> tmpBlock(4), 
 24266 ;; Auto vars:     Size  Location     Type
 24267 ;;  j               1   35[BANK1 ] unsigned char 
 24268 ;;  i               1   34[BANK1 ] unsigned char 
 24269 ;;  block           1   33[BANK1 ] unsigned char 
 24270 ;; Return value:  Size  Location     Type
 24271 ;;		None               void
 24272 ;; Registers used:
 24273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24274 ;; Tracked objects:
 24275 ;;		On entry : 0/0
 24276 ;;		On exit  : 0/0
 24277 ;;		Unchanged: 0/0
 24278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24279 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24280 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24281 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24282 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24283 ;;Total ram usage:       13 bytes
 24284 ;; Hardware stack levels used:    1
 24285 ;; Hardware stack levels required when called:   17
 24286 ;; This function calls:
 24287 ;;		___awdiv
 24288 ;;		_encode
 24289 ;; This function is called by:
 24290 ;;		_CCM_Enc
 24291 ;;		_CCM_Dec
 24292 ;; This function uses a non-reentrant model
 24293 ;;
 24294                           
 24295                           	psect	text53
 24296  008D4C                     __ptext53:
 24297                           	opt stack 0
 24298  008D4C                     _CTR:
 24299                           	opt stack 7
 24300                           
 24301                           ;drv_mrf_miwi_security.c: 119: uint8_t block = len/4+1;
 24302                           
 24303                           ; BSR set to: 1
 24304                           ;incstack = 0
 24305  008D4C  C119  F106         	movff	CTR@len,___awdiv@dividend
 24306  008D50  0101               	movlb	1	; () banked
 24307  008D52  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24308  008D54  0E00               	movlw	0
 24309  008D56  0101               	movlb	1	; () banked
 24310  008D58  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24311  008D5A  0E04               	movlw	4
 24312  008D5C  6F08               	movwf	___awdiv@divisor& (0+255),b
 24313  008D5E  EC9F  F050         	call	___awdiv	;wreg free
 24314  008D62  0101               	movlb	1	; () banked
 24315  008D64  2906               	incf	?___awdiv& (0+255),w,b
 24316  008D66  0101               	movlb	1	; () banked
 24317  008D68  6F21               	movwf	CTR@block& (0+255),b
 24318                           
 24319                           ; BSR set to: 1
 24320                           ;drv_mrf_miwi_security.c: 120: uint8_t i, j;
 24321                           ;drv_mrf_miwi_security.c: 127: for(i = 0; i < block; i++)
 24322  008D6A  0E00               	movlw	0
 24323  008D6C  0101               	movlb	1	; () banked
 24324  008D6E  6F22               	movwf	CTR@i& (0+255),b
 24325  008D70  D076               	goto	l16834
 24326  008D72                     l16802:
 24327                           
 24328                           ; BSR set to: 1
 24329                           ;drv_mrf_miwi_security.c: 128: {
 24330                           ;drv_mrf_miwi_security.c: 129: for(j = 0; j < 4-1; j++)
 24331  008D72  0E00               	movlw	0
 24332  008D74  0101               	movlb	1	; () banked
 24333  008D76  6F23               	movwf	CTR@j& (0+255),b
 24334  008D78                     l16804:
 24335                           
 24336                           ; BSR set to: 1
 24337  008D78  0E02               	movlw	2
 24338  008D7A  0101               	movlb	1	; () banked
 24339  008D7C  6523               	cpfsgt	CTR@j& (0+255),b
 24340  008D7E  D001               	goto	l16808
 24341  008D80  D019               	goto	l460
 24342  008D82                     l16808:
 24343                           
 24344                           ; BSR set to: 1
 24345                           ;drv_mrf_miwi_security.c: 130: {
 24346                           ;drv_mrf_miwi_security.c: 131: tmpBlock[j] = nounce[j];
 24347  008D82  0101               	movlb	1	; () banked
 24348  008D84  5123               	movf	CTR@j& (0+255),w,b
 24349  008D86  0D01               	mullw	1
 24350  008D88  50F3               	movf	prodl,w,c
 24351  008D8A  0101               	movlb	1	; () banked
 24352  008D8C  251C               	addwf	CTR@nounce& (0+255),w,b
 24353  008D8E  6ED9               	movwf	fsr2l,c
 24354  008D90  50F4               	movf	prodh,w,c
 24355  008D92  0101               	movlb	1	; () banked
 24356  008D94  211D               	addwfc	(CTR@nounce+1)& (0+255),w,b
 24357  008D96  6EDA               	movwf	fsr2h,c
 24358  008D98  0101               	movlb	1	; () banked
 24359  008D9A  5123               	movf	CTR@j& (0+255),w,b
 24360  008D9C  0D01               	mullw	1
 24361  008D9E  0EEC               	movlw	low _tmpBlock
 24362  008DA0  24F3               	addwf	prodl,w,c
 24363  008DA2  6EE1               	movwf	fsr1l,c
 24364  008DA4  0E01               	movlw	high _tmpBlock
 24365  008DA6  20F4               	addwfc	prodh,w,c
 24366  008DA8  6EE2               	movwf	fsr1h,c
 24367  008DAA  CFDF FFE7          	movff	indf2,indf1
 24368                           
 24369                           ; BSR set to: 1
 24370  008DAE  0101               	movlb	1	; () banked
 24371  008DB0  2B23               	incf	CTR@j& (0+255),f,b
 24372  008DB2  D7E2               	goto	l16804
 24373  008DB4                     l460:
 24374                           
 24375                           ; BSR set to: 1
 24376                           ;drv_mrf_miwi_security.c: 132: }
 24377                           ;drv_mrf_miwi_security.c: 133: tmpBlock[4-1] = i;
 24378  008DB4  C122  F1EF         	movff	CTR@i,_tmpBlock+3
 24379                           
 24380                           ; BSR set to: 1
 24381                           ;drv_mrf_miwi_security.c: 134: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 24382  008DB8  0EEC               	movlw	low _tmpBlock
 24383  008DBA  0101               	movlb	1	; () banked
 24384  008DBC  6F00               	movwf	encode@text& (0+255),b
 24385  008DBE  0E01               	movlw	high _tmpBlock
 24386  008DC0  0101               	movlb	1	; () banked
 24387  008DC2  6F01               	movwf	(encode@text+1)& (0+255),b
 24388  008DC4  C11A  F102         	movff	CTR@key,encode@key
 24389  008DC8  C11B  F103         	movff	CTR@key+1,encode@key+1
 24390  008DCC  ECCC  F036         	call	_encode	;wreg free
 24391                           
 24392                           ;drv_mrf_miwi_security.c: 135: for(j = 0; j < 4; j++)
 24393  008DD0  0E00               	movlw	0
 24394  008DD2  0101               	movlb	1	; () banked
 24395  008DD4  6F23               	movwf	CTR@j& (0+255),b
 24396  008DD6                     l16818:
 24397                           
 24398                           ; BSR set to: 1
 24399  008DD6  0E03               	movlw	3
 24400  008DD8  0101               	movlb	1	; () banked
 24401  008DDA  6523               	cpfsgt	CTR@j& (0+255),b
 24402  008DDC  D001               	goto	l16822
 24403  008DDE  D03D               	goto	l16832
 24404  008DE0                     l16822:
 24405                           
 24406                           ; BSR set to: 1
 24407                           ;drv_mrf_miwi_security.c: 136: {
 24408                           ;drv_mrf_miwi_security.c: 137: if( (i * 4 + j) >= len )
 24409  008DE0  0101               	movlb	1	; () banked
 24410  008DE2  5119               	movf	CTR@len& (0+255),w,b
 24411  008DE4  0101               	movlb	1	; () banked
 24412  008DE6  6F1E               	movwf	??_CTR& (0+255),b
 24413  008DE8  6B1F               	clrf	(??_CTR+1)& (0+255),b
 24414  008DEA  0101               	movlb	1	; () banked
 24415  008DEC  5122               	movf	CTR@i& (0+255),w,b
 24416  008DEE  0D04               	mullw	4
 24417  008DF0  0101               	movlb	1	; () banked
 24418  008DF2  5123               	movf	CTR@j& (0+255),w,b
 24419  008DF4  26F3               	addwf	prodl,f,c
 24420  008DF6  0E00               	movlw	0
 24421  008DF8  22F4               	addwfc	prodh,f,c
 24422  008DFA  0101               	movlb	1	; () banked
 24423  008DFC  511E               	movf	??_CTR& (0+255),w,b
 24424  008DFE  5CF3               	subwf	prodl,w,c
 24425  008E00  50F4               	movf	prodh,w,c
 24426  008E02  0A80               	xorlw	128
 24427  008E04  0101               	movlb	1	; () banked
 24428  008E06  6F20               	movwf	(??_CTR+2)& (0+255),b
 24429  008E08  0101               	movlb	1	; () banked
 24430  008E0A  511F               	movf	(??_CTR+1)& (0+255),w,b
 24431  008E0C  0A80               	xorlw	128
 24432  008E0E  0101               	movlb	1	; () banked
 24433  008E10  5920               	subwfb	(??_CTR+2)& (0+255),w,b
 24434  008E12  B0D8               	btfsc	status,0,c
 24435  008E14  D022               	goto	l16832
 24436                           
 24437                           ; BSR set to: 1
 24438                           ;drv_mrf_miwi_security.c: 140: }
 24439                           ;drv_mrf_miwi_security.c: 141: text[i * 4 + j] ^= tmpBlock[j];
 24440                           
 24441                           ; BSR set to: 1
 24442                           
 24443                           ; BSR set to: 1
 24444                           ;drv_mrf_miwi_security.c: 138: {
 24445                           ;drv_mrf_miwi_security.c: 139: break;
 24446  008E16  0101               	movlb	1	; () banked
 24447  008E18  5123               	movf	CTR@j& (0+255),w,b
 24448  008E1A  0D01               	mullw	1
 24449  008E1C  0EEC               	movlw	low _tmpBlock
 24450  008E1E  24F3               	addwf	prodl,w,c
 24451  008E20  6ED9               	movwf	fsr2l,c
 24452  008E22  0E01               	movlw	high _tmpBlock
 24453  008E24  20F4               	addwfc	prodh,w,c
 24454  008E26  6EDA               	movwf	fsr2h,c
 24455  008E28  50DF               	movf	indf2,w,c
 24456  008E2A  0101               	movlb	1	; () banked
 24457  008E2C  6F1E               	movwf	??_CTR& (0+255),b
 24458  008E2E  0101               	movlb	1	; () banked
 24459  008E30  5122               	movf	CTR@i& (0+255),w,b
 24460  008E32  0D04               	mullw	4
 24461  008E34  0101               	movlb	1	; () banked
 24462  008E36  5123               	movf	CTR@j& (0+255),w,b
 24463  008E38  26F3               	addwf	prodl,f,c
 24464  008E3A  0E00               	movlw	0
 24465  008E3C  22F4               	addwfc	prodh,f,c
 24466  008E3E  50F3               	movf	prodl,w,c
 24467  008E40  0101               	movlb	1	; () banked
 24468  008E42  2517               	addwf	CTR@text& (0+255),w,b
 24469  008E44  6ED9               	movwf	fsr2l,c
 24470  008E46  50F4               	movf	prodh,w,c
 24471  008E48  0101               	movlb	1	; () banked
 24472  008E4A  2118               	addwfc	(CTR@text+1)& (0+255),w,b
 24473  008E4C  6EDA               	movwf	fsr2h,c
 24474  008E4E  0101               	movlb	1	; () banked
 24475  008E50  511E               	movf	??_CTR& (0+255),w,b
 24476  008E52  1ADF               	xorwf	indf2,f,c
 24477                           
 24478                           ; BSR set to: 1
 24479  008E54  0101               	movlb	1	; () banked
 24480  008E56  2B23               	incf	CTR@j& (0+255),f,b
 24481  008E58  D7BE               	goto	l16818
 24482  008E5A                     l16832:
 24483                           
 24484                           ; BSR set to: 1
 24485  008E5A  0101               	movlb	1	; () banked
 24486  008E5C  2B22               	incf	CTR@i& (0+255),f,b
 24487  008E5E                     l16834:
 24488                           
 24489                           ; BSR set to: 1
 24490  008E5E  0101               	movlb	1	; () banked
 24491  008E60  5121               	movf	CTR@block& (0+255),w,b
 24492  008E62  0101               	movlb	1	; () banked
 24493  008E64  5D22               	subwf	CTR@i& (0+255),w,b
 24494  008E66  B0D8               	btfsc	status,0,c
 24495  008E68  0012               	return	
 24496  008E6A  D783               	goto	l16802
 24497  008E6C                     __end_of_CTR:
 24498                           	opt stack 0
 24499                           tblptru	equ	0xFF8
 24500                           tblptrh	equ	0xFF7
 24501                           tblptrl	equ	0xFF6
 24502                           tablat	equ	0xFF5
 24503                           prodh	equ	0xFF4
 24504                           prodl	equ	0xFF3
 24505                           intcon	equ	0xFF2
 24506                           intcon2	equ	0xFF1
 24507                           intcon3	equ	0xFF0
 24508                           indf0	equ	0xFEF
 24509                           postinc0	equ	0xFEE
 24510                           plusw0	equ	0xFEB
 24511                           fsr0h	equ	0xFEA
 24512                           fsr0l	equ	0xFE9
 24513                           wreg	equ	0xFE8
 24514                           indf1	equ	0xFE7
 24515                           postinc1	equ	0xFE6
 24516                           postdec1	equ	0xFE5
 24517                           fsr1h	equ	0xFE2
 24518                           fsr1l	equ	0xFE1
 24519                           indf2	equ	0xFDF
 24520                           postinc2	equ	0xFDE
 24521                           postdec2	equ	0xFDD
 24522                           plusw2	equ	0xFDB
 24523                           fsr2h	equ	0xFDA
 24524                           fsr2l	equ	0xFD9
 24525                           status	equ	0xFD8
 24526                           
 24527 ;; *************** function _CBC_MAC *****************
 24528 ;; Defined at:
 24529 ;;		line 174 in file "src/miwi/drv_mrf_miwi_security.c"
 24530 ;; Parameters:    Size  Location     Type
 24531 ;;  text            2   23[BANK1 ] PTR unsigned char 
 24532 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 24533 ;;  len             1   25[BANK1 ] unsigned char 
 24534 ;;  key             2   26[BANK1 ] PTR unsigned char 
 24535 ;;		 -> key(8), 
 24536 ;;  MIC             2   28[BANK1 ] PTR unsigned char 
 24537 ;;		 -> tmpBlock(4), 
 24538 ;; Auto vars:     Size  Location     Type
 24539 ;;  i               1   35[BANK1 ] unsigned char 
 24540 ;;  j               1   34[BANK1 ] unsigned char 
 24541 ;;  block           1   33[BANK1 ] unsigned char 
 24542 ;; Return value:  Size  Location     Type
 24543 ;;		None               void
 24544 ;; Registers used:
 24545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24546 ;; Tracked objects:
 24547 ;;		On entry : 0/0
 24548 ;;		On exit  : 0/0
 24549 ;;		Unchanged: 0/0
 24550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24551 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24552 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24553 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24555 ;;Total ram usage:       13 bytes
 24556 ;; Hardware stack levels used:    1
 24557 ;; Hardware stack levels required when called:   17
 24558 ;; This function calls:
 24559 ;;		___awdiv
 24560 ;;		_encode
 24561 ;; This function is called by:
 24562 ;;		_CCM_Enc
 24563 ;;		_CCM_Dec
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text54
 24568  00919C                     __ptext54:
 24569                           	opt stack 0
 24570  00919C                     _CBC_MAC:
 24571                           	opt stack 7
 24572                           
 24573                           ;drv_mrf_miwi_security.c: 179: uint8_t block = len / 4 + 1;
 24574                           
 24575                           ; BSR set to: 1
 24576                           ;incstack = 0
 24577  00919C  C119  F106         	movff	CBC_MAC@len,___awdiv@dividend
 24578  0091A0  0101               	movlb	1	; () banked
 24579  0091A2  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24580  0091A4  0E00               	movlw	0
 24581  0091A6  0101               	movlb	1	; () banked
 24582  0091A8  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24583  0091AA  0E04               	movlw	4
 24584  0091AC  6F08               	movwf	___awdiv@divisor& (0+255),b
 24585  0091AE  EC9F  F050         	call	___awdiv	;wreg free
 24586  0091B2  0101               	movlb	1	; () banked
 24587  0091B4  2906               	incf	?___awdiv& (0+255),w,b
 24588  0091B6  0101               	movlb	1	; () banked
 24589  0091B8  6F21               	movwf	CBC_MAC@block& (0+255),b
 24590                           
 24591                           ; BSR set to: 1
 24592                           ;drv_mrf_miwi_security.c: 180: uint8_t i, j;
 24593                           ;drv_mrf_miwi_security.c: 187: for(i = 0; i < 4; i++)
 24594  0091BA  0E00               	movlw	0
 24595  0091BC  0101               	movlb	1	; () banked
 24596  0091BE  6F23               	movwf	CBC_MAC@i& (0+255),b
 24597  0091C0                     l16840:
 24598                           
 24599                           ; BSR set to: 1
 24600  0091C0  0E03               	movlw	3
 24601  0091C2  0101               	movlb	1	; () banked
 24602  0091C4  6523               	cpfsgt	CBC_MAC@i& (0+255),b
 24603  0091C6  D001               	goto	l16844
 24604  0091C8  D010               	goto	l16850
 24605  0091CA                     l16844:
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;drv_mrf_miwi_security.c: 188: {
 24609                           ;drv_mrf_miwi_security.c: 189: MIC[i] = 0;
 24610  0091CA  0101               	movlb	1	; () banked
 24611  0091CC  5123               	movf	CBC_MAC@i& (0+255),w,b
 24612  0091CE  0D01               	mullw	1
 24613  0091D0  50F3               	movf	prodl,w,c
 24614  0091D2  0101               	movlb	1	; () banked
 24615  0091D4  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 24616  0091D6  6ED9               	movwf	fsr2l,c
 24617  0091D8  50F4               	movf	prodh,w,c
 24618  0091DA  0101               	movlb	1	; () banked
 24619  0091DC  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24620  0091DE  6EDA               	movwf	fsr2h,c
 24621  0091E0  0E00               	movlw	0
 24622  0091E2  6EDF               	movwf	indf2,c
 24623                           
 24624                           ; BSR set to: 1
 24625  0091E4  0101               	movlb	1	; () banked
 24626  0091E6  2B23               	incf	CBC_MAC@i& (0+255),f,b
 24627  0091E8  D7EB               	goto	l16840
 24628  0091EA                     l16850:
 24629                           
 24630                           ; BSR set to: 1
 24631                           ;drv_mrf_miwi_security.c: 190: }
 24632                           ;drv_mrf_miwi_security.c: 192: for(i = 0; i < block; i++)
 24633  0091EA  0E00               	movlw	0
 24634  0091EC  0101               	movlb	1	; () banked
 24635  0091EE  6F23               	movwf	CBC_MAC@i& (0+255),b
 24636  0091F0  D053               	goto	l16872
 24637  0091F2                     l16852:
 24638                           
 24639                           ; BSR set to: 1
 24640                           ;drv_mrf_miwi_security.c: 193: {
 24641                           ;drv_mrf_miwi_security.c: 194: for(j = 0; j < 4; j++)
 24642  0091F2  0E00               	movlw	0
 24643  0091F4  0101               	movlb	1	; () banked
 24644  0091F6  6F22               	movwf	CBC_MAC@j& (0+255),b
 24645  0091F8                     l16854:
 24646                           
 24647                           ; BSR set to: 1
 24648  0091F8  0E03               	movlw	3
 24649  0091FA  0101               	movlb	1	; () banked
 24650  0091FC  6522               	cpfsgt	CBC_MAC@j& (0+255),b
 24651  0091FE  D001               	goto	l16858
 24652  009200  D03F               	goto	l16868
 24653  009202                     l16858:
 24654                           
 24655                           ; BSR set to: 1
 24656                           ;drv_mrf_miwi_security.c: 195: {
 24657                           ;drv_mrf_miwi_security.c: 196: if( (i * 4 + j) >= len )
 24658  009202  0101               	movlb	1	; () banked
 24659  009204  5119               	movf	CBC_MAC@len& (0+255),w,b
 24660  009206  0101               	movlb	1	; () banked
 24661  009208  6F1E               	movwf	??_CBC_MAC& (0+255),b
 24662  00920A  6B1F               	clrf	(??_CBC_MAC+1)& (0+255),b
 24663  00920C  0101               	movlb	1	; () banked
 24664  00920E  5123               	movf	CBC_MAC@i& (0+255),w,b
 24665  009210  0D04               	mullw	4
 24666  009212  0101               	movlb	1	; () banked
 24667  009214  5122               	movf	CBC_MAC@j& (0+255),w,b
 24668  009216  26F3               	addwf	prodl,f,c
 24669  009218  0E00               	movlw	0
 24670  00921A  22F4               	addwfc	prodh,f,c
 24671  00921C  0101               	movlb	1	; () banked
 24672  00921E  511E               	movf	??_CBC_MAC& (0+255),w,b
 24673  009220  5CF3               	subwf	prodl,w,c
 24674  009222  50F4               	movf	prodh,w,c
 24675  009224  0A80               	xorlw	128
 24676  009226  0101               	movlb	1	; () banked
 24677  009228  6F20               	movwf	(??_CBC_MAC+2)& (0+255),b
 24678  00922A  0101               	movlb	1	; () banked
 24679  00922C  511F               	movf	(??_CBC_MAC+1)& (0+255),w,b
 24680  00922E  0A80               	xorlw	128
 24681  009230  0101               	movlb	1	; () banked
 24682  009232  5920               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 24683  009234  B0D8               	btfsc	status,0,c
 24684  009236  D024               	goto	l16868
 24685                           
 24686                           ; BSR set to: 1
 24687                           ;drv_mrf_miwi_security.c: 199: }
 24688                           ;drv_mrf_miwi_security.c: 200: MIC[j] ^= text[i * 4 + j];
 24689                           
 24690                           ; BSR set to: 1
 24691                           
 24692                           ; BSR set to: 1
 24693                           ;drv_mrf_miwi_security.c: 197: {
 24694                           ;drv_mrf_miwi_security.c: 198: break;
 24695  009238  0101               	movlb	1	; () banked
 24696  00923A  5123               	movf	CBC_MAC@i& (0+255),w,b
 24697  00923C  0D04               	mullw	4
 24698  00923E  0101               	movlb	1	; () banked
 24699  009240  5122               	movf	CBC_MAC@j& (0+255),w,b
 24700  009242  26F3               	addwf	prodl,f,c
 24701  009244  0E00               	movlw	0
 24702  009246  22F4               	addwfc	prodh,f,c
 24703  009248  50F3               	movf	prodl,w,c
 24704  00924A  0101               	movlb	1	; () banked
 24705  00924C  2517               	addwf	CBC_MAC@text& (0+255),w,b
 24706  00924E  6ED9               	movwf	fsr2l,c
 24707  009250  50F4               	movf	prodh,w,c
 24708  009252  0101               	movlb	1	; () banked
 24709  009254  2118               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 24710  009256  6EDA               	movwf	fsr2h,c
 24711  009258  50DF               	movf	indf2,w,c
 24712  00925A  0101               	movlb	1	; () banked
 24713  00925C  6F1E               	movwf	??_CBC_MAC& (0+255),b
 24714  00925E  0101               	movlb	1	; () banked
 24715  009260  5122               	movf	CBC_MAC@j& (0+255),w,b
 24716  009262  0D01               	mullw	1
 24717  009264  50F3               	movf	prodl,w,c
 24718  009266  0101               	movlb	1	; () banked
 24719  009268  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 24720  00926A  6ED9               	movwf	fsr2l,c
 24721  00926C  50F4               	movf	prodh,w,c
 24722  00926E  0101               	movlb	1	; () banked
 24723  009270  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24724  009272  6EDA               	movwf	fsr2h,c
 24725  009274  0101               	movlb	1	; () banked
 24726  009276  511E               	movf	??_CBC_MAC& (0+255),w,b
 24727  009278  1ADF               	xorwf	indf2,f,c
 24728                           
 24729                           ; BSR set to: 1
 24730  00927A  0101               	movlb	1	; () banked
 24731  00927C  2B22               	incf	CBC_MAC@j& (0+255),f,b
 24732  00927E  D7BC               	goto	l16854
 24733  009280                     l16868:
 24734                           
 24735                           ; BSR set to: 1
 24736                           ;drv_mrf_miwi_security.c: 201: }
 24737                           ;drv_mrf_miwi_security.c: 202: encode((uint16_t *)MIC, (uint16_t *)key);
 24738  009280  C11C  F100         	movff	CBC_MAC@MIC,encode@text
 24739  009284  C11D  F101         	movff	CBC_MAC@MIC+1,encode@text+1
 24740  009288  C11A  F102         	movff	CBC_MAC@key,encode@key
 24741  00928C  C11B  F103         	movff	CBC_MAC@key+1,encode@key+1
 24742  009290  ECCC  F036         	call	_encode	;wreg free
 24743  009294  0101               	movlb	1	; () banked
 24744  009296  2B23               	incf	CBC_MAC@i& (0+255),f,b
 24745  009298                     l16872:
 24746                           
 24747                           ; BSR set to: 1
 24748  009298  0101               	movlb	1	; () banked
 24749  00929A  5121               	movf	CBC_MAC@block& (0+255),w,b
 24750  00929C  0101               	movlb	1	; () banked
 24751  00929E  5D23               	subwf	CBC_MAC@i& (0+255),w,b
 24752  0092A0  B0D8               	btfsc	status,0,c
 24753  0092A2  0012               	return	
 24754  0092A4  D7A6               	goto	l16852
 24755  0092A6                     __end_of_CBC_MAC:
 24756                           	opt stack 0
 24757                           tblptru	equ	0xFF8
 24758                           tblptrh	equ	0xFF7
 24759                           tblptrl	equ	0xFF6
 24760                           tablat	equ	0xFF5
 24761                           prodh	equ	0xFF4
 24762                           prodl	equ	0xFF3
 24763                           intcon	equ	0xFF2
 24764                           intcon2	equ	0xFF1
 24765                           intcon3	equ	0xFF0
 24766                           indf0	equ	0xFEF
 24767                           postinc0	equ	0xFEE
 24768                           plusw0	equ	0xFEB
 24769                           fsr0h	equ	0xFEA
 24770                           fsr0l	equ	0xFE9
 24771                           wreg	equ	0xFE8
 24772                           indf1	equ	0xFE7
 24773                           postinc1	equ	0xFE6
 24774                           postdec1	equ	0xFE5
 24775                           fsr1h	equ	0xFE2
 24776                           fsr1l	equ	0xFE1
 24777                           indf2	equ	0xFDF
 24778                           postinc2	equ	0xFDE
 24779                           postdec2	equ	0xFDD
 24780                           plusw2	equ	0xFDB
 24781                           fsr2h	equ	0xFDA
 24782                           fsr2l	equ	0xFD9
 24783                           status	equ	0xFD8
 24784                           
 24785 ;; *************** function _encode *****************
 24786 ;; Defined at:
 24787 ;;		line 76 in file "src/miwi/drv_mrf_miwi_security.c"
 24788 ;; Parameters:    Size  Location     Type
 24789 ;;  text            2    0[BANK1 ] PTR unsigned int 
 24790 ;;		 -> tmpBlock(4), 
 24791 ;;  key             2    2[BANK1 ] PTR unsigned int 
 24792 ;;		 -> key(8), 
 24793 ;; Auto vars:     Size  Location     Type
 24794 ;;  sum             2   21[BANK1 ] unsigned int 
 24795 ;;  part2           2   19[BANK1 ] unsigned int 
 24796 ;;  part1           2   17[BANK1 ] unsigned int 
 24797 ;;  delta           2   14[BANK1 ] unsigned int 
 24798 ;;  i               1   16[BANK1 ] unsigned char 
 24799 ;; Return value:  Size  Location     Type
 24800 ;;		None               void
 24801 ;; Registers used:
 24802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24803 ;; Tracked objects:
 24804 ;;		On entry : 0/0
 24805 ;;		On exit  : 0/0
 24806 ;;		Unchanged: 0/0
 24807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24808 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24809 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24810 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24811 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24812 ;;Total ram usage:       23 bytes
 24813 ;; Hardware stack levels used:    1
 24814 ;; Hardware stack levels required when called:   16
 24815 ;; This function calls:
 24816 ;;		Nothing
 24817 ;; This function is called by:
 24818 ;;		_CTR
 24819 ;;		_CBC_MAC
 24820 ;; This function uses a non-reentrant model
 24821 ;;
 24822                           
 24823                           	psect	text55
 24824  006D98                     __ptext55:
 24825                           	opt stack 0
 24826  006D98                     _encode:
 24827                           	opt stack 7
 24828                           
 24829                           ;drv_mrf_miwi_security.c: 78: uint16_t part1=text[0], part2=text[1];
 24830                           
 24831                           ; BSR set to: 1
 24832                           ;incstack = 0
 24833  006D98  C100  FFD9         	movff	encode@text,fsr2l
 24834  006D9C  C101  FFDA         	movff	encode@text+1,fsr2h
 24835  006DA0  CFDE F111          	movff	postinc2,encode@part1
 24836  006DA4  CFDD F112          	movff	postdec2,encode@part1+1
 24837  006DA8  0101               	movlb	1	; () banked
 24838  006DAA  EE20 F002          	lfsr	2,2
 24839  006DAE  5100               	movf	encode@text& (0+255),w,b
 24840  006DB0  26D9               	addwf	fsr2l,f,c
 24841  006DB2  5101               	movf	(encode@text+1)& (0+255),w,b
 24842  006DB4  22DA               	addwfc	fsr2h,f,c
 24843  006DB6  CFDE F113          	movff	postinc2,encode@part2
 24844  006DBA  CFDD F114          	movff	postdec2,encode@part2+1
 24845                           
 24846                           ; BSR set to: 1
 24847                           ;drv_mrf_miwi_security.c: 79: uint16_t sum=0, delta=0x9E37;
 24848  006DBE  0E00               	movlw	0
 24849  006DC0  0101               	movlb	1	; () banked
 24850  006DC2  6F16               	movwf	(encode@sum+1)& (0+255),b
 24851  006DC4  0E00               	movlw	0
 24852  006DC6  6F15               	movwf	encode@sum& (0+255),b
 24853                           
 24854                           ; BSR set to: 1
 24855  006DC8  0E9E               	movlw	158
 24856  006DCA  0101               	movlb	1	; () banked
 24857  006DCC  6F0F               	movwf	(encode@delta+1)& (0+255),b
 24858  006DCE  0E37               	movlw	55
 24859  006DD0  6F0E               	movwf	encode@delta& (0+255),b
 24860                           
 24861                           ; BSR set to: 1
 24862                           ;drv_mrf_miwi_security.c: 80: uint8_t i;
 24863                           ;drv_mrf_miwi_security.c: 82: for(i=0; i<32; i++)
 24864  006DD2  0E00               	movlw	0
 24865  006DD4  0101               	movlb	1	; () banked
 24866  006DD6  6F10               	movwf	encode@i& (0+255),b
 24867  006DD8                     l16654:
 24868                           
 24869                           ; BSR set to: 1
 24870  006DD8  0E1F               	movlw	31
 24871  006DDA  0101               	movlb	1	; () banked
 24872  006DDC  6510               	cpfsgt	encode@i& (0+255),b
 24873  006DDE  D001               	goto	l16658
 24874  006DE0  D0D4               	goto	l16668
 24875  006DE2                     l16658:
 24876                           
 24877                           ; BSR set to: 1
 24878                           ;drv_mrf_miwi_security.c: 83: {
 24879                           ;drv_mrf_miwi_security.c: 84: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 24880  006DE2  0E03               	movlw	3
 24881  006DE4  0101               	movlb	1	; () banked
 24882  006DE6  1515               	andwf	encode@sum& (0+255),w,b
 24883  006DE8  0101               	movlb	1	; () banked
 24884  006DEA  6F04               	movwf	??_encode& (0+255),b
 24885  006DEC  0E00               	movlw	0
 24886  006DEE  0101               	movlb	1	; () banked
 24887  006DF0  1516               	andwf	(encode@sum+1)& (0+255),w,b
 24888  006DF2  0101               	movlb	1	; () banked
 24889  006DF4  6F05               	movwf	(??_encode+1)& (0+255),b
 24890  006DF6  90D8               	bcf	status,0,c
 24891  006DF8  0101               	movlb	1	; () banked
 24892  006DFA  3704               	rlcf	??_encode& (0+255),f,b
 24893  006DFC  3705               	rlcf	(??_encode+1)& (0+255),f,b
 24894  006DFE  0101               	movlb	1	; () banked
 24895  006E00  5104               	movf	??_encode& (0+255),w,b
 24896  006E02  0101               	movlb	1	; () banked
 24897  006E04  2502               	addwf	encode@key& (0+255),w,b
 24898  006E06  6ED9               	movwf	fsr2l,c
 24899  006E08  0101               	movlb	1	; () banked
 24900  006E0A  5105               	movf	(??_encode+1)& (0+255),w,b
 24901  006E0C  0101               	movlb	1	; () banked
 24902  006E0E  2103               	addwfc	(encode@key+1)& (0+255),w,b
 24903  006E10  6EDA               	movwf	fsr2h,c
 24904  006E12  CFDE F106          	movff	postinc2,??_encode+2
 24905  006E16  CFDD F107          	movff	postdec2,??_encode+3
 24906  006E1A  0101               	movlb	1	; () banked
 24907  006E1C  5115               	movf	encode@sum& (0+255),w,b
 24908  006E1E  0101               	movlb	1	; () banked
 24909  006E20  2706               	addwf	(??_encode+2)& (0+255),f,b
 24910  006E22  0101               	movlb	1	; () banked
 24911  006E24  5116               	movf	(encode@sum+1)& (0+255),w,b
 24912  006E26  0101               	movlb	1	; () banked
 24913  006E28  2307               	addwfc	(??_encode+3)& (0+255),f,b
 24914  006E2A  C113  F108         	movff	encode@part2,??_encode+4
 24915  006E2E  C114  F109         	movff	encode@part2+1,??_encode+5
 24916  006E32  0E05               	movlw	5
 24917  006E34  0101               	movlb	1	; () banked
 24918  006E36  6F0A               	movwf	(??_encode+6)& (0+255),b
 24919  006E38                     u18015:
 24920  006E38  0101               	movlb	1	; () banked
 24921  006E3A  90D8               	bcf	status,0,c
 24922  006E3C  3309               	rrcf	(??_encode+5)& (0+255),f,b
 24923  006E3E  3308               	rrcf	(??_encode+4)& (0+255),f,b
 24924  006E40  0101               	movlb	1	; () banked
 24925  006E42  2F0A               	decfsz	(??_encode+6)& (0+255),f,b
 24926  006E44  D7F9               	goto	u18015
 24927  006E46  C113  F10B         	movff	encode@part2,??_encode+7
 24928  006E4A  C114  F10C         	movff	encode@part2+1,??_encode+8
 24929  006E4E  0101               	movlb	1	; () banked
 24930  006E50  3B0B               	swapf	(??_encode+7)& (0+255),f,b
 24931  006E52  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 24932  006E54  0EF0               	movlw	240
 24933  006E56  170C               	andwf	(??_encode+8)& (0+255),f,b
 24934  006E58  510B               	movf	(??_encode+7)& (0+255),w,b
 24935  006E5A  0B0F               	andlw	15
 24936  006E5C  130C               	iorwf	(??_encode+8)& (0+255),f,b
 24937  006E5E  0EF0               	movlw	240
 24938  006E60  170B               	andwf	(??_encode+7)& (0+255),f,b
 24939  006E62  0101               	movlb	1	; () banked
 24940  006E64  5108               	movf	(??_encode+4)& (0+255),w,b
 24941  006E66  0101               	movlb	1	; () banked
 24942  006E68  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 24943  006E6A  0101               	movlb	1	; () banked
 24944  006E6C  5109               	movf	(??_encode+5)& (0+255),w,b
 24945  006E6E  0101               	movlb	1	; () banked
 24946  006E70  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 24947  006E72  0101               	movlb	1	; () banked
 24948  006E74  5113               	movf	encode@part2& (0+255),w,b
 24949  006E76  0101               	movlb	1	; () banked
 24950  006E78  270B               	addwf	(??_encode+7)& (0+255),f,b
 24951  006E7A  0101               	movlb	1	; () banked
 24952  006E7C  5114               	movf	(encode@part2+1)& (0+255),w,b
 24953  006E7E  0101               	movlb	1	; () banked
 24954  006E80  230C               	addwfc	(??_encode+8)& (0+255),f,b
 24955  006E82  0101               	movlb	1	; () banked
 24956  006E84  5106               	movf	(??_encode+2)& (0+255),w,b
 24957  006E86  0101               	movlb	1	; () banked
 24958  006E88  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 24959  006E8A  0101               	movlb	1	; () banked
 24960  006E8C  5107               	movf	(??_encode+3)& (0+255),w,b
 24961  006E8E  0101               	movlb	1	; () banked
 24962  006E90  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 24963  006E92  0101               	movlb	1	; () banked
 24964  006E94  510B               	movf	(??_encode+7)& (0+255),w,b
 24965  006E96  0101               	movlb	1	; () banked
 24966  006E98  2711               	addwf	encode@part1& (0+255),f,b
 24967  006E9A  0101               	movlb	1	; () banked
 24968  006E9C  510C               	movf	(??_encode+8)& (0+255),w,b
 24969  006E9E  0101               	movlb	1	; () banked
 24970  006EA0  2312               	addwfc	(encode@part1+1)& (0+255),f,b
 24971                           
 24972                           ; BSR set to: 1
 24973                           ;drv_mrf_miwi_security.c: 85: sum += delta;
 24974  006EA2  0101               	movlb	1	; () banked
 24975  006EA4  510E               	movf	encode@delta& (0+255),w,b
 24976  006EA6  0101               	movlb	1	; () banked
 24977  006EA8  2715               	addwf	encode@sum& (0+255),f,b
 24978  006EAA  0101               	movlb	1	; () banked
 24979  006EAC  510F               	movf	(encode@delta+1)& (0+255),w,b
 24980  006EAE  0101               	movlb	1	; () banked
 24981  006EB0  2316               	addwfc	(encode@sum+1)& (0+255),f,b
 24982                           
 24983                           ; BSR set to: 1
 24984                           ;drv_mrf_miwi_security.c: 86: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 24985  006EB2  C115  F104         	movff	encode@sum,??_encode
 24986  006EB6  C116  F105         	movff	encode@sum+1,??_encode+1
 24987  006EBA  0E0B               	movlw	11
 24988  006EBC  0101               	movlb	1	; () banked
 24989  006EBE  6F06               	movwf	(??_encode+2)& (0+255),b
 24990  006EC0                     u18025:
 24991  006EC0  0101               	movlb	1	; () banked
 24992  006EC2  90D8               	bcf	status,0,c
 24993  006EC4  3305               	rrcf	(??_encode+1)& (0+255),f,b
 24994  006EC6  3304               	rrcf	??_encode& (0+255),f,b
 24995  006EC8  0101               	movlb	1	; () banked
 24996  006ECA  2F06               	decfsz	(??_encode+2)& (0+255),f,b
 24997  006ECC  D7F9               	goto	u18025
 24998  006ECE  0E03               	movlw	3
 24999  006ED0  0101               	movlb	1	; () banked
 25000  006ED2  1704               	andwf	??_encode& (0+255),f,b
 25001  006ED4  0E00               	movlw	0
 25002  006ED6  1705               	andwf	(??_encode+1)& (0+255),f,b
 25003  006ED8  90D8               	bcf	status,0,c
 25004  006EDA  0101               	movlb	1	; () banked
 25005  006EDC  3704               	rlcf	??_encode& (0+255),f,b
 25006  006EDE  3705               	rlcf	(??_encode+1)& (0+255),f,b
 25007  006EE0  0101               	movlb	1	; () banked
 25008  006EE2  5104               	movf	??_encode& (0+255),w,b
 25009  006EE4  0101               	movlb	1	; () banked
 25010  006EE6  2502               	addwf	encode@key& (0+255),w,b
 25011  006EE8  6ED9               	movwf	fsr2l,c
 25012  006EEA  0101               	movlb	1	; () banked
 25013  006EEC  5105               	movf	(??_encode+1)& (0+255),w,b
 25014  006EEE  0101               	movlb	1	; () banked
 25015  006EF0  2103               	addwfc	(encode@key+1)& (0+255),w,b
 25016  006EF2  6EDA               	movwf	fsr2h,c
 25017  006EF4  CFDE F107          	movff	postinc2,??_encode+3
 25018  006EF8  CFDD F108          	movff	postdec2,??_encode+4
 25019  006EFC  0101               	movlb	1	; () banked
 25020  006EFE  5115               	movf	encode@sum& (0+255),w,b
 25021  006F00  0101               	movlb	1	; () banked
 25022  006F02  2707               	addwf	(??_encode+3)& (0+255),f,b
 25023  006F04  0101               	movlb	1	; () banked
 25024  006F06  5116               	movf	(encode@sum+1)& (0+255),w,b
 25025  006F08  0101               	movlb	1	; () banked
 25026  006F0A  2308               	addwfc	(??_encode+4)& (0+255),f,b
 25027  006F0C  C111  F109         	movff	encode@part1,??_encode+5
 25028  006F10  C112  F10A         	movff	encode@part1+1,??_encode+6
 25029  006F14  0E05               	movlw	5
 25030  006F16  0101               	movlb	1	; () banked
 25031  006F18  6F0B               	movwf	(??_encode+7)& (0+255),b
 25032  006F1A                     u18035:
 25033  006F1A  0101               	movlb	1	; () banked
 25034  006F1C  90D8               	bcf	status,0,c
 25035  006F1E  330A               	rrcf	(??_encode+6)& (0+255),f,b
 25036  006F20  3309               	rrcf	(??_encode+5)& (0+255),f,b
 25037  006F22  0101               	movlb	1	; () banked
 25038  006F24  2F0B               	decfsz	(??_encode+7)& (0+255),f,b
 25039  006F26  D7F9               	goto	u18035
 25040  006F28  C111  F10C         	movff	encode@part1,??_encode+8
 25041  006F2C  C112  F10D         	movff	encode@part1+1,??_encode+9
 25042  006F30  0101               	movlb	1	; () banked
 25043  006F32  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 25044  006F34  3B0D               	swapf	(??_encode+9)& (0+255),f,b
 25045  006F36  0EF0               	movlw	240
 25046  006F38  170D               	andwf	(??_encode+9)& (0+255),f,b
 25047  006F3A  510C               	movf	(??_encode+8)& (0+255),w,b
 25048  006F3C  0B0F               	andlw	15
 25049  006F3E  130D               	iorwf	(??_encode+9)& (0+255),f,b
 25050  006F40  0EF0               	movlw	240
 25051  006F42  170C               	andwf	(??_encode+8)& (0+255),f,b
 25052  006F44  0101               	movlb	1	; () banked
 25053  006F46  5109               	movf	(??_encode+5)& (0+255),w,b
 25054  006F48  0101               	movlb	1	; () banked
 25055  006F4A  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25056  006F4C  0101               	movlb	1	; () banked
 25057  006F4E  510A               	movf	(??_encode+6)& (0+255),w,b
 25058  006F50  0101               	movlb	1	; () banked
 25059  006F52  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 25060  006F54  0101               	movlb	1	; () banked
 25061  006F56  5111               	movf	encode@part1& (0+255),w,b
 25062  006F58  0101               	movlb	1	; () banked
 25063  006F5A  270C               	addwf	(??_encode+8)& (0+255),f,b
 25064  006F5C  0101               	movlb	1	; () banked
 25065  006F5E  5112               	movf	(encode@part1+1)& (0+255),w,b
 25066  006F60  0101               	movlb	1	; () banked
 25067  006F62  230D               	addwfc	(??_encode+9)& (0+255),f,b
 25068  006F64  0101               	movlb	1	; () banked
 25069  006F66  5107               	movf	(??_encode+3)& (0+255),w,b
 25070  006F68  0101               	movlb	1	; () banked
 25071  006F6A  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25072  006F6C  0101               	movlb	1	; () banked
 25073  006F6E  5108               	movf	(??_encode+4)& (0+255),w,b
 25074  006F70  0101               	movlb	1	; () banked
 25075  006F72  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 25076  006F74  0101               	movlb	1	; () banked
 25077  006F76  510C               	movf	(??_encode+8)& (0+255),w,b
 25078  006F78  0101               	movlb	1	; () banked
 25079  006F7A  2713               	addwf	encode@part2& (0+255),f,b
 25080  006F7C  0101               	movlb	1	; () banked
 25081  006F7E  510D               	movf	(??_encode+9)& (0+255),w,b
 25082  006F80  0101               	movlb	1	; () banked
 25083  006F82  2314               	addwfc	(encode@part2+1)& (0+255),f,b
 25084                           
 25085                           ; BSR set to: 1
 25086  006F84  0101               	movlb	1	; () banked
 25087  006F86  2B10               	incf	encode@i& (0+255),f,b
 25088  006F88  D727               	goto	l16654
 25089  006F8A                     l16668:
 25090                           
 25091                           ; BSR set to: 1
 25092                           ;drv_mrf_miwi_security.c: 87: }
 25093                           ;drv_mrf_miwi_security.c: 88: text[0]=part1; text[1]=part2;
 25094  006F8A  C100  FFD9         	movff	encode@text,fsr2l
 25095  006F8E  C101  FFDA         	movff	encode@text+1,fsr2h
 25096  006F92  C111  FFDE         	movff	encode@part1,postinc2
 25097  006F96  C112  FFDD         	movff	encode@part1+1,postdec2
 25098                           
 25099                           ; BSR set to: 1
 25100  006F9A  0101               	movlb	1	; () banked
 25101  006F9C  EE20 F002          	lfsr	2,2
 25102  006FA0  5100               	movf	encode@text& (0+255),w,b
 25103  006FA2  26D9               	addwf	fsr2l,f,c
 25104  006FA4  5101               	movf	(encode@text+1)& (0+255),w,b
 25105  006FA6  22DA               	addwfc	fsr2h,f,c
 25106  006FA8  C113  FFDE         	movff	encode@part2,postinc2
 25107  006FAC  C114  FFDD         	movff	encode@part2+1,postdec2
 25108                           
 25109                           ; BSR set to: 1
 25110  006FB0  0012               	return		;funcret
 25111  006FB2                     __end_of_encode:
 25112                           	opt stack 0
 25113                           tblptru	equ	0xFF8
 25114                           tblptrh	equ	0xFF7
 25115                           tblptrl	equ	0xFF6
 25116                           tablat	equ	0xFF5
 25117                           prodh	equ	0xFF4
 25118                           prodl	equ	0xFF3
 25119                           intcon	equ	0xFF2
 25120                           intcon2	equ	0xFF1
 25121                           intcon3	equ	0xFF0
 25122                           indf0	equ	0xFEF
 25123                           postinc0	equ	0xFEE
 25124                           plusw0	equ	0xFEB
 25125                           fsr0h	equ	0xFEA
 25126                           fsr0l	equ	0xFE9
 25127                           wreg	equ	0xFE8
 25128                           indf1	equ	0xFE7
 25129                           postinc1	equ	0xFE6
 25130                           postdec1	equ	0xFE5
 25131                           fsr1h	equ	0xFE2
 25132                           fsr1l	equ	0xFE1
 25133                           indf2	equ	0xFDF
 25134                           postinc2	equ	0xFDE
 25135                           postdec2	equ	0xFDD
 25136                           plusw2	equ	0xFDB
 25137                           fsr2h	equ	0xFDA
 25138                           fsr2l	equ	0xFD9
 25139                           status	equ	0xFD8
 25140                           
 25141 ;; *************** function _BroadcastJitter *****************
 25142 ;; Defined at:
 25143 ;;		line 247 in file "src/miwi/miwi_mesh.c"
 25144 ;; Parameters:    Size  Location     Type
 25145 ;;  range           1    wreg     unsigned char 
 25146 ;; Auto vars:     Size  Location     Type
 25147 ;;  range           1   26[BANK1 ] unsigned char 
 25148 ;;  t2              4   22[BANK1 ] struct _MIWI_TICK
 25149 ;;  t1              4   18[BANK1 ] struct _MIWI_TICK
 25150 ;;  jitter          1   27[BANK1 ] unsigned char 
 25151 ;; Return value:  Size  Location     Type
 25152 ;;		None               void
 25153 ;; Registers used:
 25154 ;;		wreg, status,2, status,0, cstack
 25155 ;; Tracked objects:
 25156 ;;		On entry : 0/0
 25157 ;;		On exit  : 0/0
 25158 ;;		Unchanged: 0/0
 25159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25161 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25162 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25163 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25164 ;;Total ram usage:       18 bytes
 25165 ;; Hardware stack levels used:    1
 25166 ;; Hardware stack levels required when called:   17
 25167 ;; This function calls:
 25168 ;;		_MiWi_TickGet
 25169 ;;		___lbmod
 25170 ;; This function is called by:
 25171 ;;		_MiWiTasks
 25172 ;; This function uses a non-reentrant model
 25173 ;;
 25174                           
 25175                           	psect	text56
 25176  00A370                     __ptext56:
 25177                           	opt stack 0
 25178  00A370                     _BroadcastJitter:
 25179                           	opt stack 12
 25180                           
 25181                           ; BSR set to: 1
 25182                           ;incstack = 0
 25183                           ;BroadcastJitter@range stored from wreg
 25184  00A370  0101               	movlb	1	; () banked
 25185  00A372  6F1A               	movwf	BroadcastJitter@range& (0+255),b
 25186                           
 25187                           ;miwi_mesh.c: 249: uint8_t jitter = TMR1L % range;
 25188  00A374  C11A  F100         	movff	BroadcastJitter@range,___lbmod@divisor	;volatile
 25189  00A378  50CE               	movf	4046,w,c	;volatile
 25190  00A37A  EC6D  F05B         	call	___lbmod
 25191  00A37E  0101               	movlb	1	; () banked
 25192  00A380  6F1B               	movwf	BroadcastJitter@jitter& (0+255),b
 25193                           
 25194                           ;miwi_mesh.c: 250: MIWI_TICK t1, t2;
 25195                           ;miwi_mesh.c: 252: while( jitter > 0 )
 25196  00A382  D04D               	goto	l17724
 25197  00A384                     l17714:
 25198                           
 25199                           ; BSR set to: 1
 25200                           ;miwi_mesh.c: 253: {
 25201                           ;miwi_mesh.c: 254: jitter--;
 25202  00A384  0101               	movlb	1	; () banked
 25203  00A386  071B               	decf	BroadcastJitter@jitter& (0+255),f,b
 25204                           
 25205                           ; BSR set to: 1
 25206                           ;miwi_mesh.c: 255: t1 = MiWi_TickGet();
 25207  00A388  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 25208  00A38C  C100  F112         	movff	?_MiWi_TickGet,BroadcastJitter@t1
 25209  00A390  C101  F113         	movff	?_MiWi_TickGet+1,BroadcastJitter@t1+1
 25210  00A394  C102  F114         	movff	?_MiWi_TickGet+2,BroadcastJitter@t1+2
 25211  00A398  C103  F115         	movff	?_MiWi_TickGet+3,BroadcastJitter@t1+3
 25212  00A39C                     l17718:
 25213                           
 25214                           ;miwi_mesh.c: 257: {
 25215                           ;miwi_mesh.c: 258: t2 = MiWi_TickGet();
 25216  00A39C  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 25217  00A3A0  C100  F116         	movff	?_MiWi_TickGet,BroadcastJitter@t2
 25218  00A3A4  C101  F117         	movff	?_MiWi_TickGet+1,BroadcastJitter@t2+1
 25219  00A3A8  C102  F118         	movff	?_MiWi_TickGet+2,BroadcastJitter@t2+2
 25220  00A3AC  C103  F119         	movff	?_MiWi_TickGet+3,BroadcastJitter@t2+3
 25221                           
 25222                           ;miwi_mesh.c: 259: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 25223  00A3B0  C112  F10A         	movff	BroadcastJitter@t1,??_BroadcastJitter
 25224  00A3B4  C113  F10B         	movff	BroadcastJitter@t1+1,??_BroadcastJitter+1
 25225  00A3B8  C114  F10C         	movff	BroadcastJitter@t1+2,??_BroadcastJitter+2
 25226  00A3BC  C115  F10D         	movff	BroadcastJitter@t1+3,??_BroadcastJitter+3
 25227  00A3C0  0101               	movlb	1	; () banked
 25228  00A3C2  1F0A               	comf	??_BroadcastJitter& (0+255),f,b
 25229  00A3C4  1F0B               	comf	(??_BroadcastJitter+1)& (0+255),f,b
 25230  00A3C6  1F0C               	comf	(??_BroadcastJitter+2)& (0+255),f,b
 25231  00A3C8  1F0D               	comf	(??_BroadcastJitter+3)& (0+255),f,b
 25232  00A3CA  2B0A               	incf	??_BroadcastJitter& (0+255),f,b
 25233  00A3CC  0E00               	movlw	0
 25234  00A3CE  230B               	addwfc	(??_BroadcastJitter+1)& (0+255),f,b
 25235  00A3D0  230C               	addwfc	(??_BroadcastJitter+2)& (0+255),f,b
 25236  00A3D2  230D               	addwfc	(??_BroadcastJitter+3)& (0+255),f,b
 25237  00A3D4  0101               	movlb	1	; () banked
 25238  00A3D6  5116               	movf	BroadcastJitter@t2& (0+255),w,b
 25239  00A3D8  0101               	movlb	1	; () banked
 25240  00A3DA  250A               	addwf	??_BroadcastJitter& (0+255),w,b
 25241  00A3DC  0101               	movlb	1	; () banked
 25242  00A3DE  6F0E               	movwf	(??_BroadcastJitter+4)& (0+255),b
 25243  00A3E0  0101               	movlb	1	; () banked
 25244  00A3E2  5117               	movf	(BroadcastJitter@t2+1)& (0+255),w,b
 25245  00A3E4  0101               	movlb	1	; () banked
 25246  00A3E6  210B               	addwfc	(??_BroadcastJitter+1)& (0+255),w,b
 25247  00A3E8  0101               	movlb	1	; () banked
 25248  00A3EA  6F0F               	movwf	(??_BroadcastJitter+5)& (0+255),b
 25249  00A3EC  0101               	movlb	1	; () banked
 25250  00A3EE  5118               	movf	(BroadcastJitter@t2+2)& (0+255),w,b
 25251  00A3F0  0101               	movlb	1	; () banked
 25252  00A3F2  210C               	addwfc	(??_BroadcastJitter+2)& (0+255),w,b
 25253  00A3F4  0101               	movlb	1	; () banked
 25254  00A3F6  6F10               	movwf	(??_BroadcastJitter+6)& (0+255),b
 25255  00A3F8  0101               	movlb	1	; () banked
 25256  00A3FA  5119               	movf	(BroadcastJitter@t2+3)& (0+255),w,b
 25257  00A3FC  0101               	movlb	1	; () banked
 25258  00A3FE  210D               	addwfc	(??_BroadcastJitter+3)& (0+255),w,b
 25259  00A400  0101               	movlb	1	; () banked
 25260  00A402  6F11               	movwf	(??_BroadcastJitter+7)& (0+255),b
 25261  00A404  0101               	movlb	1	; () banked
 25262  00A406  5111               	movf	(??_BroadcastJitter+7)& (0+255),w,b
 25263  00A408  0101               	movlb	1	; () banked
 25264  00A40A  1110               	iorwf	(??_BroadcastJitter+6)& (0+255),w,b
 25265  00A40C  E108               	bnz	l17724
 25266  00A40E  0EF5               	movlw	245
 25267  00A410  0101               	movlb	1	; () banked
 25268  00A412  5D0E               	subwf	(??_BroadcastJitter+4)& (0+255),w,b
 25269  00A414  0E01               	movlw	1
 25270  00A416  0101               	movlb	1	; () banked
 25271  00A418  590F               	subwfb	(??_BroadcastJitter+5)& (0+255),w,b
 25272  00A41A  A0D8               	btfss	status,0,c
 25273  00A41C  D7BF               	goto	l17718
 25274  00A41E                     l17724:
 25275                           
 25276                           ; BSR set to: 1
 25277  00A41E  0101               	movlb	1	; () banked
 25278  00A420  511B               	movf	BroadcastJitter@jitter& (0+255),w,b
 25279  00A422  0101               	movlb	1	; () banked
 25280  00A424  B4D8               	btfsc	status,2,c
 25281  00A426  0012               	return	
 25282  00A428  D7AD               	goto	l17714
 25283  00A42A                     __end_of_BroadcastJitter:
 25284                           	opt stack 0
 25285                           tblptru	equ	0xFF8
 25286                           tblptrh	equ	0xFF7
 25287                           tblptrl	equ	0xFF6
 25288                           tablat	equ	0xFF5
 25289                           prodh	equ	0xFF4
 25290                           prodl	equ	0xFF3
 25291                           intcon	equ	0xFF2
 25292                           intcon2	equ	0xFF1
 25293                           intcon3	equ	0xFF0
 25294                           indf0	equ	0xFEF
 25295                           postinc0	equ	0xFEE
 25296                           plusw0	equ	0xFEB
 25297                           fsr0h	equ	0xFEA
 25298                           fsr0l	equ	0xFE9
 25299                           wreg	equ	0xFE8
 25300                           indf1	equ	0xFE7
 25301                           postinc1	equ	0xFE6
 25302                           postdec1	equ	0xFE5
 25303                           fsr1h	equ	0xFE2
 25304                           fsr1l	equ	0xFE1
 25305                           indf2	equ	0xFDF
 25306                           postinc2	equ	0xFDE
 25307                           postdec2	equ	0xFDD
 25308                           plusw2	equ	0xFDB
 25309                           fsr2h	equ	0xFDA
 25310                           fsr2l	equ	0xFD9
 25311                           status	equ	0xFD8
 25312                           
 25313 ;; *************** function ___lbmod *****************
 25314 ;; Defined at:
 25315 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
 25316 ;; Parameters:    Size  Location     Type
 25317 ;;  dividend        1    wreg     unsigned char 
 25318 ;;  divisor         1    0[BANK1 ] unsigned char 
 25319 ;; Auto vars:     Size  Location     Type
 25320 ;;  dividend        1    1[BANK1 ] unsigned char 
 25321 ;;  rem             1    3[BANK1 ] unsigned char 
 25322 ;;  counter         1    2[BANK1 ] unsigned char 
 25323 ;; Return value:  Size  Location     Type
 25324 ;;                  1    wreg      unsigned char 
 25325 ;; Registers used:
 25326 ;;		wreg, status,2, status,0
 25327 ;; Tracked objects:
 25328 ;;		On entry : 0/0
 25329 ;;		On exit  : 0/0
 25330 ;;		Unchanged: 0/0
 25331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25332 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25333 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25335 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25336 ;;Total ram usage:        4 bytes
 25337 ;; Hardware stack levels used:    1
 25338 ;; Hardware stack levels required when called:   16
 25339 ;; This function calls:
 25340 ;;		Nothing
 25341 ;; This function is called by:
 25342 ;;		_BroadcastJitter
 25343 ;; This function uses a non-reentrant model
 25344 ;;
 25345                           
 25346                           	psect	text57
 25347  00B6DA                     __ptext57:
 25348                           	opt stack 0
 25349  00B6DA                     ___lbmod:
 25350                           	opt stack 12
 25351                           
 25352                           ; BSR set to: 1
 25353                           ;incstack = 0
 25354                           ;___lbmod@dividend stored from wreg
 25355  00B6DA  0101               	movlb	1	; () banked
 25356  00B6DC  6F01               	movwf	___lbmod@dividend& (0+255),b
 25357  00B6DE  0E08               	movlw	8
 25358  00B6E0  0101               	movlb	1	; () banked
 25359  00B6E2  6F02               	movwf	___lbmod@counter& (0+255),b
 25360  00B6E4  0E00               	movlw	0
 25361  00B6E6  0101               	movlb	1	; () banked
 25362  00B6E8  6F03               	movwf	___lbmod@rem& (0+255),b
 25363  00B6EA                     l17530:
 25364                           
 25365                           ; BSR set to: 1
 25366  00B6EA  90D8               	bcf	status,0,c
 25367  00B6EC  0101               	movlb	1	; () banked
 25368  00B6EE  3501               	rlcf	___lbmod@dividend& (0+255),w,b
 25369  00B6F0  0101               	movlb	1	; () banked
 25370  00B6F2  3503               	rlcf	___lbmod@rem& (0+255),w,b
 25371  00B6F4  0101               	movlb	1	; () banked
 25372  00B6F6  6F03               	movwf	___lbmod@rem& (0+255),b
 25373                           
 25374                           ; BSR set to: 1
 25375  00B6F8  0101               	movlb	1	; () banked
 25376  00B6FA  90D8               	bcf	status,0,c
 25377  00B6FC  3701               	rlcf	___lbmod@dividend& (0+255),f,b
 25378                           
 25379                           ; BSR set to: 1
 25380  00B6FE  0101               	movlb	1	; () banked
 25381  00B700  5100               	movf	___lbmod@divisor& (0+255),w,b
 25382  00B702  0101               	movlb	1	; () banked
 25383  00B704  5D03               	subwf	___lbmod@rem& (0+255),w,b
 25384  00B706  A0D8               	btfss	status,0,c
 25385  00B708  D004               	goto	l17538
 25386                           
 25387                           ; BSR set to: 1
 25388  00B70A  0101               	movlb	1	; () banked
 25389  00B70C  5100               	movf	___lbmod@divisor& (0+255),w,b
 25390  00B70E  0101               	movlb	1	; () banked
 25391  00B710  5F03               	subwf	___lbmod@rem& (0+255),f,b
 25392  00B712                     l17538:
 25393                           
 25394                           ; BSR set to: 1
 25395  00B712  0101               	movlb	1	; () banked
 25396  00B714  2F02               	decfsz	___lbmod@counter& (0+255),f,b
 25397  00B716  D7E9               	goto	l17530
 25398                           
 25399                           ; BSR set to: 1
 25400                           
 25401                           ; BSR set to: 1
 25402  00B718  0101               	movlb	1	; () banked
 25403  00B71A  5103               	movf	___lbmod@rem& (0+255),w,b
 25404  00B71C  0012               	return	
 25405  00B71E                     __end_of___lbmod:
 25406                           	opt stack 0
 25407                           tblptru	equ	0xFF8
 25408                           tblptrh	equ	0xFF7
 25409                           tblptrl	equ	0xFF6
 25410                           tablat	equ	0xFF5
 25411                           prodh	equ	0xFF4
 25412                           prodl	equ	0xFF3
 25413                           intcon	equ	0xFF2
 25414                           intcon2	equ	0xFF1
 25415                           intcon3	equ	0xFF0
 25416                           indf0	equ	0xFEF
 25417                           postinc0	equ	0xFEE
 25418                           plusw0	equ	0xFEB
 25419                           fsr0h	equ	0xFEA
 25420                           fsr0l	equ	0xFE9
 25421                           wreg	equ	0xFE8
 25422                           indf1	equ	0xFE7
 25423                           postinc1	equ	0xFE6
 25424                           postdec1	equ	0xFE5
 25425                           fsr1h	equ	0xFE2
 25426                           fsr1l	equ	0xFE1
 25427                           indf2	equ	0xFDF
 25428                           postinc2	equ	0xFDE
 25429                           postdec2	equ	0xFDD
 25430                           plusw2	equ	0xFDB
 25431                           fsr2h	equ	0xFDA
 25432                           fsr2l	equ	0xFD9
 25433                           status	equ	0xFD8
 25434                           
 25435 ;; *************** function _AddNodeToNetworkTable *****************
 25436 ;; Defined at:
 25437 ;;		line 3373 in file "src/miwi/miwi_mesh.c"
 25438 ;; Parameters:    Size  Location     Type
 25439 ;;		None
 25440 ;; Auto vars:     Size  Location     Type
 25441 ;;  i               1    8[BANK1 ] unsigned char 
 25442 ;;  handle          1    9[BANK1 ] unsigned char 
 25443 ;; Return value:  Size  Location     Type
 25444 ;;                  1    wreg      unsigned char 
 25445 ;; Registers used:
 25446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25447 ;; Tracked objects:
 25448 ;;		On entry : 0/0
 25449 ;;		On exit  : 0/0
 25450 ;;		Unchanged: 0/0
 25451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25453 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25454 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25455 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25456 ;;Total ram usage:        4 bytes
 25457 ;; Hardware stack levels used:    1
 25458 ;; Hardware stack levels required when called:   17
 25459 ;; This function calls:
 25460 ;;		_SearchForLongAddress
 25461 ;;		_SearchForShortAddress
 25462 ;;		_findNextNetworkEntry
 25463 ;; This function is called by:
 25464 ;;		_MiWiTasks
 25465 ;;		_OpenSocket
 25466 ;; This function uses a non-reentrant model
 25467 ;;
 25468                           
 25469                           	psect	text58
 25470  008C28                     __ptext58:
 25471                           	opt stack 0
 25472  008C28                     _AddNodeToNetworkTable:
 25473                           	opt stack 12
 25474                           
 25475                           ;miwi_mesh.c: 3375: uint8_t handle = 0xFF;
 25476                           
 25477                           ; BSR set to: 1
 25478                           ;incstack = 0
 25479  008C28  0101               	movlb	1	; () banked
 25480  008C2A  6909               	setf	AddNodeToNetworkTable@handle& (0+255),b
 25481                           
 25482                           ;miwi_mesh.c: 3377: if(tempNodeStatus.bits.longAddressValid)
 25483  008C2C  0100               	movlb	0	; () banked
 25484  008C2E  A5A0               	btfss	_tempNodeStatus& (0+255),2,b
 25485  008C30  D003               	goto	l899
 25486                           
 25487                           ; BSR set to: 0
 25488                           ;miwi_mesh.c: 3378: {
 25489                           ;miwi_mesh.c: 3379: handle = SearchForLongAddress();
 25490  008C32  ECB2  F04E         	call	_SearchForLongAddress	;wreg free
 25491  008C36  D005               	goto	L10
 25492  008C38                     l899:
 25493                           
 25494                           ; BSR set to: 0
 25495                           ;miwi_mesh.c: 3381: else
 25496                           ;miwi_mesh.c: 3382: {
 25497                           ;miwi_mesh.c: 3383: if(tempNodeStatus.bits.shortAddressValid)
 25498  008C38  0100               	movlb	0	; () banked
 25499  008C3A  A7A0               	btfss	_tempNodeStatus& (0+255),3,b
 25500  008C3C  D004               	goto	l17732
 25501                           
 25502                           ; BSR set to: 0
 25503                           ;miwi_mesh.c: 3384: {
 25504                           ;miwi_mesh.c: 3385: handle = SearchForShortAddress();
 25505  008C3E  EC85  F057         	call	_SearchForShortAddress	;wreg free
 25506  008C42                     L10:
 25507  008C42  0101               	movlb	1	; () banked
 25508  008C44  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 25509  008C46                     l17732:
 25510                           
 25511                           ;miwi_mesh.c: 3386: }
 25512                           ;miwi_mesh.c: 3387: }
 25513                           ;miwi_mesh.c: 3389: if(handle==0xFF)
 25514  008C46  0101               	movlb	1	; () banked
 25515  008C48  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 25516  008C4A  A4D8               	btfss	status,2,c
 25517  008C4C  D004               	goto	l17736
 25518                           
 25519                           ; BSR set to: 1
 25520                           ;miwi_mesh.c: 3390: {
 25521                           ;miwi_mesh.c: 3391: handle = findNextNetworkEntry();
 25522  008C4E  ECD1  F05B         	call	_findNextNetworkEntry	;wreg free
 25523  008C52  0101               	movlb	1	; () banked
 25524  008C54  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 25525  008C56                     l17736:
 25526                           
 25527                           ; BSR set to: 1
 25528                           ;miwi_mesh.c: 3392: }
 25529                           ;miwi_mesh.c: 3394: if(handle != 0xFF)
 25530  008C56  0101               	movlb	1	; () banked
 25531  008C58  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 25532  008C5A  B4D8               	btfsc	status,2,c
 25533  008C5C  D074               	goto	l17756
 25534                           
 25535                           ; BSR set to: 1
 25536                           ;miwi_mesh.c: 3395: {
 25537                           ;miwi_mesh.c: 3401: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 25538  008C5E  0101               	movlb	1	; () banked
 25539  008C60  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25540  008C62  0D09               	mullw	9
 25541  008C64  0E08               	movlw	8
 25542  008C66  26F3               	addwf	prodl,f,c
 25543  008C68  0E00               	movlw	0
 25544  008C6A  22F4               	addwfc	prodh,f,c
 25545  008C6C  0E00               	movlw	low _ConnectionTable
 25546  008C6E  24F3               	addwf	prodl,w,c
 25547  008C70  6ED9               	movwf	fsr2l,c
 25548  008C72  0E06               	movlw	high _ConnectionTable
 25549  008C74  20F4               	addwfc	prodh,w,c
 25550  008C76  6EDA               	movwf	fsr2h,c
 25551  008C78  C0A0  FFDF         	movff	_tempNodeStatus,indf2
 25552                           
 25553                           ; BSR set to: 1
 25554                           ;miwi_mesh.c: 3402: if(tempNodeStatus.bits.longAddressValid)
 25555  008C7C  0100               	movlb	0	; () banked
 25556  008C7E  A5A0               	btfss	_tempNodeStatus& (0+255),2,b
 25557  008C80  D034               	goto	l904
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;miwi_mesh.c: 3403: {
 25561                           ;miwi_mesh.c: 3404: uint8_t i;
 25562                           ;miwi_mesh.c: 3405: for(i = 0; i < 4; i++)
 25563  008C82  0E00               	movlw	0
 25564  008C84  0101               	movlb	1	; () banked
 25565  008C86  6F08               	movwf	AddNodeToNetworkTable@i& (0+255),b
 25566  008C88                     l17744:
 25567                           
 25568                           ; BSR set to: 1
 25569  008C88  0E03               	movlw	3
 25570  008C8A  0101               	movlb	1	; () banked
 25571  008C8C  6508               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 25572  008C8E  D001               	goto	l17748
 25573  008C90  D02C               	goto	l904
 25574  008C92                     l17748:
 25575                           
 25576                           ; BSR set to: 1
 25577                           ;miwi_mesh.c: 3406: {
 25578                           ;miwi_mesh.c: 3407: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 25579  008C92  0101               	movlb	1	; () banked
 25580  008C94  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 25581  008C96  0D01               	mullw	1
 25582  008C98  0EA6               	movlw	low _tempLongAddress
 25583  008C9A  24F3               	addwf	prodl,w,c
 25584  008C9C  6ED9               	movwf	fsr2l,c
 25585  008C9E  0E01               	movlw	high _tempLongAddress
 25586  008CA0  20F4               	addwfc	prodh,w,c
 25587  008CA2  6EDA               	movwf	fsr2h,c
 25588  008CA4  0101               	movlb	1	; () banked
 25589  008CA6  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 25590  008CA8  0D01               	mullw	1
 25591  008CAA  0E04               	movlw	4
 25592  008CAC  26F3               	addwf	prodl,f,c
 25593  008CAE  0E00               	movlw	0
 25594  008CB0  22F4               	addwfc	prodh,f,c
 25595  008CB2  0E00               	movlw	low _ConnectionTable
 25596  008CB4  0101               	movlb	1	; () banked
 25597  008CB6  6F06               	movwf	??_AddNodeToNetworkTable& (0+255),b
 25598  008CB8  0E06               	movlw	high _ConnectionTable
 25599  008CBA  0101               	movlb	1	; () banked
 25600  008CBC  6F07               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 25601  008CBE  50F3               	movf	prodl,w,c
 25602  008CC0  0101               	movlb	1	; () banked
 25603  008CC2  2706               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 25604  008CC4  50F4               	movf	prodh,w,c
 25605  008CC6  0101               	movlb	1	; () banked
 25606  008CC8  2307               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 25607  008CCA  0101               	movlb	1	; () banked
 25608  008CCC  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25609  008CCE  0D09               	mullw	9
 25610  008CD0  50F3               	movf	prodl,w,c
 25611  008CD2  0101               	movlb	1	; () banked
 25612  008CD4  2506               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 25613  008CD6  6EE1               	movwf	fsr1l,c
 25614  008CD8  50F4               	movf	prodh,w,c
 25615  008CDA  0101               	movlb	1	; () banked
 25616  008CDC  2107               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 25617  008CDE  6EE2               	movwf	fsr1h,c
 25618  008CE0  CFDF FFE7          	movff	indf2,indf1
 25619                           
 25620                           ; BSR set to: 1
 25621  008CE4  0101               	movlb	1	; () banked
 25622  008CE6  2B08               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 25623  008CE8  D7CF               	goto	l17744
 25624  008CEA                     l904:
 25625                           
 25626                           ;miwi_mesh.c: 3408: }
 25627                           ;miwi_mesh.c: 3409: }
 25628                           ;miwi_mesh.c: 3411: if(tempNodeStatus.bits.shortAddressValid)
 25629  008CEA  0100               	movlb	0	; () banked
 25630  008CEC  A7A0               	btfss	_tempNodeStatus& (0+255),3,b
 25631  008CEE  D011               	goto	l907
 25632                           
 25633                           ; BSR set to: 0
 25634                           ;miwi_mesh.c: 3412: {
 25635                           ;miwi_mesh.c: 3413: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 25636  008CF0  0101               	movlb	1	; () banked
 25637  008CF2  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25638  008CF4  0D09               	mullw	9
 25639  008CF6  0E02               	movlw	2
 25640  008CF8  26F3               	addwf	prodl,f,c
 25641  008CFA  0E00               	movlw	0
 25642  008CFC  22F4               	addwfc	prodh,f,c
 25643  008CFE  0E00               	movlw	low _ConnectionTable
 25644  008D00  24F3               	addwf	prodl,w,c
 25645  008D02  6ED9               	movwf	fsr2l,c
 25646  008D04  0E06               	movlw	high _ConnectionTable
 25647  008D06  20F4               	addwfc	prodh,w,c
 25648  008D08  6EDA               	movwf	fsr2h,c
 25649  008D0A  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 25650  008D0E  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 25651  008D12                     l907:
 25652                           
 25653                           ;miwi_mesh.c: 3414: }
 25654                           ;miwi_mesh.c: 3416: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 25655  008D12  0101               	movlb	1	; () banked
 25656  008D14  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25657  008D16  0D09               	mullw	9
 25658  008D18  0E00               	movlw	low _ConnectionTable
 25659  008D1A  24F3               	addwf	prodl,w,c
 25660  008D1C  6ED9               	movwf	fsr2l,c
 25661  008D1E  0E06               	movlw	high _ConnectionTable
 25662  008D20  20F4               	addwfc	prodh,w,c
 25663  008D22  6EDA               	movwf	fsr2h,c
 25664  008D24  C1BB  FFDE         	movff	_tempPANID,postinc2
 25665  008D28  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 25666                           
 25667                           ;miwi_mesh.c: 3418: IncomingFrameCounter[handle].Val = 0;
 25668  008D2C  0101               	movlb	1	; () banked
 25669  008D2E  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25670  008D30  0D04               	mullw	4
 25671  008D32  0E00               	movlw	low _IncomingFrameCounter
 25672  008D34  24F3               	addwf	prodl,w,c
 25673  008D36  6ED9               	movwf	fsr2l,c
 25674  008D38  0E05               	movlw	high _IncomingFrameCounter
 25675  008D3A  20F4               	addwfc	prodh,w,c
 25676  008D3C  6EDA               	movwf	fsr2h,c
 25677  008D3E  6ADE               	clrf	postinc2,c
 25678  008D40  6ADE               	clrf	postinc2,c
 25679  008D42  6ADE               	clrf	postinc2,c
 25680  008D44  6ADD               	clrf	postdec2,c
 25681  008D46                     l17756:
 25682                           
 25683                           ; BSR set to: 1
 25684                           ;miwi_mesh.c: 3420: }
 25685                           ;miwi_mesh.c: 3422: return handle;
 25686  008D46  0101               	movlb	1	; () banked
 25687  008D48  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25688  008D4A  0012               	return	
 25689  008D4C                     __end_of_AddNodeToNetworkTable:
 25690                           	opt stack 0
 25691                           tblptru	equ	0xFF8
 25692                           tblptrh	equ	0xFF7
 25693                           tblptrl	equ	0xFF6
 25694                           tablat	equ	0xFF5
 25695                           prodh	equ	0xFF4
 25696                           prodl	equ	0xFF3
 25697                           intcon	equ	0xFF2
 25698                           intcon2	equ	0xFF1
 25699                           intcon3	equ	0xFF0
 25700                           indf0	equ	0xFEF
 25701                           postinc0	equ	0xFEE
 25702                           plusw0	equ	0xFEB
 25703                           fsr0h	equ	0xFEA
 25704                           fsr0l	equ	0xFE9
 25705                           wreg	equ	0xFE8
 25706                           indf1	equ	0xFE7
 25707                           postinc1	equ	0xFE6
 25708                           postdec1	equ	0xFE5
 25709                           fsr1h	equ	0xFE2
 25710                           fsr1l	equ	0xFE1
 25711                           indf2	equ	0xFDF
 25712                           postinc2	equ	0xFDE
 25713                           postdec2	equ	0xFDD
 25714                           plusw2	equ	0xFDB
 25715                           fsr2h	equ	0xFDA
 25716                           fsr2l	equ	0xFD9
 25717                           status	equ	0xFD8
 25718                           
 25719 ;; *************** function _findNextNetworkEntry *****************
 25720 ;; Defined at:
 25721 ;;		line 2584 in file "src/miwi/miwi_mesh.c"
 25722 ;; Parameters:    Size  Location     Type
 25723 ;;		None
 25724 ;; Auto vars:     Size  Location     Type
 25725 ;;  i               1    0[BANK1 ] unsigned char 
 25726 ;; Return value:  Size  Location     Type
 25727 ;;                  1    wreg      unsigned char 
 25728 ;; Registers used:
 25729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25730 ;; Tracked objects:
 25731 ;;		On entry : 0/0
 25732 ;;		On exit  : 0/0
 25733 ;;		Unchanged: 0/0
 25734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25736 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25738 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25739 ;;Total ram usage:        1 bytes
 25740 ;; Hardware stack levels used:    1
 25741 ;; Hardware stack levels required when called:   16
 25742 ;; This function calls:
 25743 ;;		Nothing
 25744 ;; This function is called by:
 25745 ;;		_MiWiTasks
 25746 ;;		_AddNodeToNetworkTable
 25747 ;;		_MiApp_EstablishConnection
 25748 ;; This function uses a non-reentrant model
 25749 ;;
 25750                           
 25751                           	psect	text59
 25752  00B7A2                     __ptext59:
 25753                           	opt stack 0
 25754  00B7A2                     _findNextNetworkEntry:
 25755                           	opt stack 13
 25756                           
 25757                           ;miwi_mesh.c: 2586: uint8_t i;
 25758                           ;miwi_mesh.c: 2588: for(i=0;i<64;i++)
 25759                           
 25760                           ; BSR set to: 1
 25761                           ;incstack = 0
 25762  00B7A2  0E00               	movlw	0
 25763  00B7A4  0101               	movlb	1	; () banked
 25764  00B7A6  6F00               	movwf	findNextNetworkEntry@i& (0+255),b
 25765  00B7A8                     l17474:
 25766                           
 25767                           ; BSR set to: 1
 25768  00B7A8  0E3F               	movlw	63
 25769  00B7AA  0101               	movlb	1	; () banked
 25770  00B7AC  6500               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 25771  00B7AE  D001               	goto	l17478
 25772  00B7B0  D015               	goto	l17488
 25773  00B7B2                     l17478:
 25774                           
 25775                           ; BSR set to: 1
 25776                           ;miwi_mesh.c: 2589: {
 25777                           ;miwi_mesh.c: 2590: if(ConnectionTable[i].status.bits.isValid == 0)
 25778  00B7B2  0101               	movlb	1	; () banked
 25779  00B7B4  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 25780  00B7B6  0D09               	mullw	9
 25781  00B7B8  0E08               	movlw	8
 25782  00B7BA  26F3               	addwf	prodl,f,c
 25783  00B7BC  0E00               	movlw	0
 25784  00B7BE  22F4               	addwfc	prodh,f,c
 25785  00B7C0  0E00               	movlw	low _ConnectionTable
 25786  00B7C2  24F3               	addwf	prodl,w,c
 25787  00B7C4  6ED9               	movwf	fsr2l,c
 25788  00B7C6  0E06               	movlw	high _ConnectionTable
 25789  00B7C8  20F4               	addwfc	prodh,w,c
 25790  00B7CA  6EDA               	movwf	fsr2h,c
 25791  00B7CC  BEDF               	btfsc	indf2,7,c
 25792  00B7CE  D003               	goto	l17484
 25793                           
 25794                           ; BSR set to: 1
 25795                           ;miwi_mesh.c: 2591: {
 25796                           ;miwi_mesh.c: 2592: return i;
 25797  00B7D0  0101               	movlb	1	; () banked
 25798  00B7D2  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 25799                           
 25800                           ; BSR set to: 1
 25801  00B7D4  0012               	return	
 25802  00B7D6                     l17484:
 25803                           
 25804                           ; BSR set to: 1
 25805  00B7D6  0101               	movlb	1	; () banked
 25806  00B7D8  2B00               	incf	findNextNetworkEntry@i& (0+255),f,b
 25807  00B7DA  D7E6               	goto	l17474
 25808  00B7DC                     l17488:
 25809                           
 25810                           ; BSR set to: 1
 25811                           ;miwi_mesh.c: 2593: }
 25812                           ;miwi_mesh.c: 2594: }
 25813                           ;miwi_mesh.c: 2595: return 0xFF;
 25814  00B7DC  0EFF               	movlw	255
 25815  00B7DE  0012               	return	
 25816  00B7E0                     __end_of_findNextNetworkEntry:
 25817                           	opt stack 0
 25818                           tblptru	equ	0xFF8
 25819                           tblptrh	equ	0xFF7
 25820                           tblptrl	equ	0xFF6
 25821                           tablat	equ	0xFF5
 25822                           prodh	equ	0xFF4
 25823                           prodl	equ	0xFF3
 25824                           intcon	equ	0xFF2
 25825                           intcon2	equ	0xFF1
 25826                           intcon3	equ	0xFF0
 25827                           indf0	equ	0xFEF
 25828                           postinc0	equ	0xFEE
 25829                           plusw0	equ	0xFEB
 25830                           fsr0h	equ	0xFEA
 25831                           fsr0l	equ	0xFE9
 25832                           wreg	equ	0xFE8
 25833                           indf1	equ	0xFE7
 25834                           postinc1	equ	0xFE6
 25835                           postdec1	equ	0xFE5
 25836                           fsr1h	equ	0xFE2
 25837                           fsr1l	equ	0xFE1
 25838                           indf2	equ	0xFDF
 25839                           postinc2	equ	0xFDE
 25840                           postdec2	equ	0xFDD
 25841                           plusw2	equ	0xFDB
 25842                           fsr2h	equ	0xFDA
 25843                           fsr2l	equ	0xFD9
 25844                           status	equ	0xFD8
 25845                           
 25846 ;; *************** function _SearchForShortAddress *****************
 25847 ;; Defined at:
 25848 ;;		line 3246 in file "src/miwi/miwi_mesh.c"
 25849 ;; Parameters:    Size  Location     Type
 25850 ;;		None
 25851 ;; Auto vars:     Size  Location     Type
 25852 ;;  i               1    2[BANK1 ] unsigned char 
 25853 ;; Return value:  Size  Location     Type
 25854 ;;                  1    wreg      unsigned char 
 25855 ;; Registers used:
 25856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25857 ;; Tracked objects:
 25858 ;;		On entry : 0/0
 25859 ;;		On exit  : 0/0
 25860 ;;		Unchanged: 0/0
 25861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25863 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25864 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25865 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25866 ;;Total ram usage:        3 bytes
 25867 ;; Hardware stack levels used:    1
 25868 ;; Hardware stack levels required when called:   16
 25869 ;; This function calls:
 25870 ;;		Nothing
 25871 ;; This function is called by:
 25872 ;;		_MiWiTasks
 25873 ;;		_RouteMessage
 25874 ;;		_AddNodeToNetworkTable
 25875 ;;		_OpenSocket
 25876 ;; This function uses a non-reentrant model
 25877 ;;
 25878                           
 25879                           	psect	text60
 25880  00AF0A                     __ptext60:
 25881                           	opt stack 0
 25882  00AF0A                     _SearchForShortAddress:
 25883                           	opt stack 11
 25884                           
 25885                           ;miwi_mesh.c: 3248: uint8_t i;
 25886                           ;miwi_mesh.c: 3250: for(i=0;i<64;i++)
 25887                           
 25888                           ; BSR set to: 1
 25889                           ;incstack = 0
 25890  00AF0A  0E00               	movlw	0
 25891  00AF0C  0101               	movlb	1	; () banked
 25892  00AF0E  6F02               	movwf	SearchForShortAddress@i& (0+255),b
 25893  00AF10                     l17086:
 25894                           
 25895                           ; BSR set to: 1
 25896  00AF10  0E3F               	movlw	63
 25897  00AF12  0101               	movlb	1	; () banked
 25898  00AF14  6502               	cpfsgt	SearchForShortAddress@i& (0+255),b
 25899  00AF16  D001               	goto	l17090
 25900  00AF18  D03A               	goto	l17104
 25901  00AF1A                     l17090:
 25902                           
 25903                           ; BSR set to: 1
 25904                           ;miwi_mesh.c: 3251: {
 25905                           ;miwi_mesh.c: 3252: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 25906  00AF1A  0101               	movlb	1	; () banked
 25907  00AF1C  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25908  00AF1E  0D09               	mullw	9
 25909  00AF20  0E08               	movlw	8
 25910  00AF22  26F3               	addwf	prodl,f,c
 25911  00AF24  0E00               	movlw	0
 25912  00AF26  22F4               	addwfc	prodh,f,c
 25913  00AF28  0E00               	movlw	low _ConnectionTable
 25914  00AF2A  24F3               	addwf	prodl,w,c
 25915  00AF2C  6ED9               	movwf	fsr2l,c
 25916  00AF2E  0E06               	movlw	high _ConnectionTable
 25917  00AF30  20F4               	addwfc	prodh,w,c
 25918  00AF32  6EDA               	movwf	fsr2h,c
 25919  00AF34  AEDF               	btfss	indf2,7,c
 25920  00AF36  D028               	goto	l17100
 25921                           
 25922                           ; BSR set to: 1
 25923  00AF38  0101               	movlb	1	; () banked
 25924  00AF3A  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25925  00AF3C  0D09               	mullw	9
 25926  00AF3E  0E08               	movlw	8
 25927  00AF40  26F3               	addwf	prodl,f,c
 25928  00AF42  0E00               	movlw	0
 25929  00AF44  22F4               	addwfc	prodh,f,c
 25930  00AF46  0E00               	movlw	low _ConnectionTable
 25931  00AF48  24F3               	addwf	prodl,w,c
 25932  00AF4A  6ED9               	movwf	fsr2l,c
 25933  00AF4C  0E06               	movlw	high _ConnectionTable
 25934  00AF4E  20F4               	addwfc	prodh,w,c
 25935  00AF50  6EDA               	movwf	fsr2h,c
 25936  00AF52  A6DF               	btfss	indf2,3,c
 25937  00AF54  D019               	goto	l17100
 25938                           
 25939                           ; BSR set to: 1
 25940                           ;miwi_mesh.c: 3253: {
 25941                           ;miwi_mesh.c: 3254: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 25942  00AF56  0101               	movlb	1	; () banked
 25943  00AF58  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25944  00AF5A  0D09               	mullw	9
 25945  00AF5C  0E02               	movlw	2
 25946  00AF5E  26F3               	addwf	prodl,f,c
 25947  00AF60  0E00               	movlw	0
 25948  00AF62  22F4               	addwfc	prodh,f,c
 25949  00AF64  0E00               	movlw	low _ConnectionTable
 25950  00AF66  24F3               	addwf	prodl,w,c
 25951  00AF68  6ED9               	movwf	fsr2l,c
 25952  00AF6A  0E06               	movlw	high _ConnectionTable
 25953  00AF6C  20F4               	addwfc	prodh,w,c
 25954  00AF6E  6EDA               	movwf	fsr2h,c
 25955  00AF70  0101               	movlb	1	; () banked
 25956  00AF72  51F4               	movf	_tempShortAddress& (0+255),w,b
 25957  00AF74  18DE               	xorwf	postinc2,w,c
 25958  00AF76  E108               	bnz	l17100
 25959  00AF78  0101               	movlb	1	; () banked
 25960  00AF7A  51F5               	movf	(_tempShortAddress+1)& (0+255),w,b
 25961  00AF7C  18DE               	xorwf	postinc2,w,c
 25962  00AF7E  A4D8               	btfss	status,2,c
 25963  00AF80  D003               	goto	l17100
 25964                           
 25965                           ; BSR set to: 1
 25966                           ;miwi_mesh.c: 3255: {
 25967                           ;miwi_mesh.c: 3256: return i;
 25968  00AF82  0101               	movlb	1	; () banked
 25969  00AF84  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25970                           
 25971                           ; BSR set to: 1
 25972  00AF86  0012               	return	
 25973  00AF88                     l17100:
 25974                           
 25975                           ; BSR set to: 1
 25976  00AF88  0101               	movlb	1	; () banked
 25977  00AF8A  2B02               	incf	SearchForShortAddress@i& (0+255),f,b
 25978  00AF8C  D7C1               	goto	l17086
 25979  00AF8E                     l17104:
 25980                           
 25981                           ; BSR set to: 1
 25982                           ;miwi_mesh.c: 3257: }
 25983                           ;miwi_mesh.c: 3258: }
 25984                           ;miwi_mesh.c: 3259: }
 25985                           ;miwi_mesh.c: 3260: return 0xFF;
 25986  00AF8E  0EFF               	movlw	255
 25987  00AF90  0012               	return	
 25988  00AF92                     __end_of_SearchForShortAddress:
 25989                           	opt stack 0
 25990                           tblptru	equ	0xFF8
 25991                           tblptrh	equ	0xFF7
 25992                           tblptrl	equ	0xFF6
 25993                           tablat	equ	0xFF5
 25994                           prodh	equ	0xFF4
 25995                           prodl	equ	0xFF3
 25996                           intcon	equ	0xFF2
 25997                           intcon2	equ	0xFF1
 25998                           intcon3	equ	0xFF0
 25999                           indf0	equ	0xFEF
 26000                           postinc0	equ	0xFEE
 26001                           plusw0	equ	0xFEB
 26002                           fsr0h	equ	0xFEA
 26003                           fsr0l	equ	0xFE9
 26004                           wreg	equ	0xFE8
 26005                           indf1	equ	0xFE7
 26006                           postinc1	equ	0xFE6
 26007                           postdec1	equ	0xFE5
 26008                           fsr1h	equ	0xFE2
 26009                           fsr1l	equ	0xFE1
 26010                           indf2	equ	0xFDF
 26011                           postinc2	equ	0xFDE
 26012                           postdec2	equ	0xFDD
 26013                           plusw2	equ	0xFDB
 26014                           fsr2h	equ	0xFDA
 26015                           fsr2l	equ	0xFD9
 26016                           status	equ	0xFD8
 26017                           
 26018 ;; *************** function _SearchForLongAddress *****************
 26019 ;; Defined at:
 26020 ;;		line 3327 in file "src/miwi/miwi_mesh.c"
 26021 ;; Parameters:    Size  Location     Type
 26022 ;;		None
 26023 ;; Auto vars:     Size  Location     Type
 26024 ;;  i               1    5[BANK1 ] unsigned char 
 26025 ;;  j               1    4[BANK1 ] unsigned char 
 26026 ;; Return value:  Size  Location     Type
 26027 ;;                  1    wreg      unsigned char 
 26028 ;; Registers used:
 26029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26030 ;; Tracked objects:
 26031 ;;		On entry : 0/0
 26032 ;;		On exit  : 0/0
 26033 ;;		Unchanged: 0/0
 26034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26036 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26037 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26038 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26039 ;;Total ram usage:        6 bytes
 26040 ;; Hardware stack levels used:    1
 26041 ;; Hardware stack levels required when called:   16
 26042 ;; This function calls:
 26043 ;;		Nothing
 26044 ;; This function is called by:
 26045 ;;		_MiWiTasks
 26046 ;;		_AddNodeToNetworkTable
 26047 ;;		_MiApp_UnicastAddress
 26048 ;;		_MiApp_EstablishConnection
 26049 ;; This function uses a non-reentrant model
 26050 ;;
 26051                           
 26052                           	psect	text61
 26053  009D64                     __ptext61:
 26054                           	opt stack 0
 26055  009D64                     _SearchForLongAddress:
 26056                           	opt stack 13
 26057                           
 26058                           ;miwi_mesh.c: 3329: uint8_t i,j;
 26059                           ;miwi_mesh.c: 3331: for(i=0;i<64;i++)
 26060                           
 26061                           ; BSR set to: 1
 26062                           ;incstack = 0
 26063  009D64  0E00               	movlw	0
 26064  009D66  0101               	movlb	1	; () banked
 26065  009D68  6F05               	movwf	SearchForLongAddress@i& (0+255),b
 26066  009D6A                     l17494:
 26067                           
 26068                           ; BSR set to: 1
 26069  009D6A  0E3F               	movlw	63
 26070  009D6C  0101               	movlb	1	; () banked
 26071  009D6E  6505               	cpfsgt	SearchForLongAddress@i& (0+255),b
 26072  009D70  D001               	goto	l17498
 26073  009D72  D05A               	goto	l17524
 26074  009D74                     l17498:
 26075                           
 26076                           ; BSR set to: 1
 26077                           ;miwi_mesh.c: 3332: {
 26078                           ;miwi_mesh.c: 3333: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 26079  009D74  0101               	movlb	1	; () banked
 26080  009D76  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26081  009D78  0D09               	mullw	9
 26082  009D7A  0E08               	movlw	8
 26083  009D7C  26F3               	addwf	prodl,f,c
 26084  009D7E  0E00               	movlw	0
 26085  009D80  22F4               	addwfc	prodh,f,c
 26086  009D82  0E00               	movlw	low _ConnectionTable
 26087  009D84  24F3               	addwf	prodl,w,c
 26088  009D86  6ED9               	movwf	fsr2l,c
 26089  009D88  0E06               	movlw	high _ConnectionTable
 26090  009D8A  20F4               	addwfc	prodh,w,c
 26091  009D8C  6EDA               	movwf	fsr2h,c
 26092  009D8E  AEDF               	btfss	indf2,7,c
 26093  009D90  D048               	goto	l17520
 26094                           
 26095                           ; BSR set to: 1
 26096  009D92  0101               	movlb	1	; () banked
 26097  009D94  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26098  009D96  0D09               	mullw	9
 26099  009D98  0E08               	movlw	8
 26100  009D9A  26F3               	addwf	prodl,f,c
 26101  009D9C  0E00               	movlw	0
 26102  009D9E  22F4               	addwfc	prodh,f,c
 26103  009DA0  0E00               	movlw	low _ConnectionTable
 26104  009DA2  24F3               	addwf	prodl,w,c
 26105  009DA4  6ED9               	movwf	fsr2l,c
 26106  009DA6  0E06               	movlw	high _ConnectionTable
 26107  009DA8  20F4               	addwfc	prodh,w,c
 26108  009DAA  6EDA               	movwf	fsr2h,c
 26109  009DAC  A4DF               	btfss	indf2,2,c
 26110  009DAE  D039               	goto	l17520
 26111                           
 26112                           ; BSR set to: 1
 26113                           ;miwi_mesh.c: 3334: {
 26114                           ;miwi_mesh.c: 3335: for(j=0;j<4;j++)
 26115  009DB0  0E00               	movlw	0
 26116  009DB2  0101               	movlb	1	; () banked
 26117  009DB4  6F04               	movwf	SearchForLongAddress@j& (0+255),b
 26118  009DB6                     l17504:
 26119                           
 26120                           ; BSR set to: 1
 26121  009DB6  0E03               	movlw	3
 26122  009DB8  0101               	movlb	1	; () banked
 26123  009DBA  6504               	cpfsgt	SearchForLongAddress@j& (0+255),b
 26124  009DBC  D001               	goto	l17508
 26125  009DBE  D02E               	goto	l17516
 26126  009DC0                     l17508:
 26127                           
 26128                           ; BSR set to: 1
 26129                           ;miwi_mesh.c: 3336: {
 26130                           ;miwi_mesh.c: 3337: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 26131  009DC0  0101               	movlb	1	; () banked
 26132  009DC2  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 26133  009DC4  0D01               	mullw	1
 26134  009DC6  0EA6               	movlw	low _tempLongAddress
 26135  009DC8  24F3               	addwf	prodl,w,c
 26136  009DCA  6ED9               	movwf	fsr2l,c
 26137  009DCC  0E01               	movlw	high _tempLongAddress
 26138  009DCE  20F4               	addwfc	prodh,w,c
 26139  009DD0  6EDA               	movwf	fsr2h,c
 26140  009DD2  0101               	movlb	1	; () banked
 26141  009DD4  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 26142  009DD6  0D01               	mullw	1
 26143  009DD8  0E04               	movlw	4
 26144  009DDA  26F3               	addwf	prodl,f,c
 26145  009DDC  0E00               	movlw	0
 26146  009DDE  22F4               	addwfc	prodh,f,c
 26147  009DE0  0E00               	movlw	low _ConnectionTable
 26148  009DE2  0101               	movlb	1	; () banked
 26149  009DE4  6F01               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 26150  009DE6  0E06               	movlw	high _ConnectionTable
 26151  009DE8  0101               	movlb	1	; () banked
 26152  009DEA  6F02               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 26153  009DEC  50F3               	movf	prodl,w,c
 26154  009DEE  0101               	movlb	1	; () banked
 26155  009DF0  2701               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 26156  009DF2  50F4               	movf	prodh,w,c
 26157  009DF4  0101               	movlb	1	; () banked
 26158  009DF6  2302               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 26159  009DF8  0101               	movlb	1	; () banked
 26160  009DFA  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26161  009DFC  0D09               	mullw	9
 26162  009DFE  50F3               	movf	prodl,w,c
 26163  009E00  0101               	movlb	1	; () banked
 26164  009E02  2501               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 26165  009E04  6EE1               	movwf	fsr1l,c
 26166  009E06  50F4               	movf	prodh,w,c
 26167  009E08  0101               	movlb	1	; () banked
 26168  009E0A  2102               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 26169  009E0C  6EE2               	movwf	fsr1h,c
 26170  009E0E  50DE               	movf	postinc2,w,c
 26171  009E10  18E6               	xorwf	postinc1,w,c
 26172  009E12  A4D8               	btfss	status,2,c
 26173  009E14  D006               	goto	l17520
 26174                           
 26175                           ; BSR set to: 1
 26176                           
 26177                           ; BSR set to: 1
 26178                           
 26179                           ; BSR set to: 1
 26180                           ;miwi_mesh.c: 3338: {
 26181                           ;miwi_mesh.c: 3339: goto EndOfSearchLoop;
 26182  009E16  0101               	movlb	1	; () banked
 26183  009E18  2B04               	incf	SearchForLongAddress@j& (0+255),f,b
 26184  009E1A  D7CD               	goto	l17504
 26185  009E1C                     l17516:
 26186                           
 26187                           ; BSR set to: 1
 26188                           ;miwi_mesh.c: 3340: }
 26189                           ;miwi_mesh.c: 3341: }
 26190                           ;miwi_mesh.c: 3342: return i;
 26191  009E1C  0101               	movlb	1	; () banked
 26192  009E1E  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26193                           
 26194                           ; BSR set to: 1
 26195  009E20  0012               	return	
 26196  009E22                     l17520:
 26197                           
 26198                           ; BSR set to: 1
 26199                           ;miwi_mesh.c: 3345: ;
 26200  009E22  0101               	movlb	1	; () banked
 26201  009E24  2B05               	incf	SearchForLongAddress@i& (0+255),f,b
 26202  009E26  D7A1               	goto	l17494
 26203  009E28                     l17524:
 26204                           
 26205                           ; BSR set to: 1
 26206                           ;miwi_mesh.c: 3346: }
 26207                           ;miwi_mesh.c: 3347: return 0xFF;
 26208  009E28  0EFF               	movlw	255
 26209  009E2A  0012               	return	
 26210  009E2C                     __end_of_SearchForLongAddress:
 26211                           	opt stack 0
 26212                           tblptru	equ	0xFF8
 26213                           tblptrh	equ	0xFF7
 26214                           tblptrl	equ	0xFF6
 26215                           tablat	equ	0xFF5
 26216                           prodh	equ	0xFF4
 26217                           prodl	equ	0xFF3
 26218                           intcon	equ	0xFF2
 26219                           intcon2	equ	0xFF1
 26220                           intcon3	equ	0xFF0
 26221                           indf0	equ	0xFEF
 26222                           postinc0	equ	0xFEE
 26223                           plusw0	equ	0xFEB
 26224                           fsr0h	equ	0xFEA
 26225                           fsr0l	equ	0xFE9
 26226                           wreg	equ	0xFE8
 26227                           indf1	equ	0xFE7
 26228                           postinc1	equ	0xFE6
 26229                           postdec1	equ	0xFE5
 26230                           fsr1h	equ	0xFE2
 26231                           fsr1l	equ	0xFE1
 26232                           indf2	equ	0xFDF
 26233                           postinc2	equ	0xFDE
 26234                           postdec2	equ	0xFDD
 26235                           plusw2	equ	0xFDB
 26236                           fsr2h	equ	0xFDA
 26237                           fsr2l	equ	0xFD9
 26238                           status	equ	0xFD8
 26239                           
 26240 ;; *************** function _MiApp_DiscardMessage *****************
 26241 ;; Defined at:
 26242 ;;		line 4243 in file "src/miwi/miwi_mesh.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;		None
 26245 ;; Auto vars:     Size  Location     Type
 26246 ;;		None
 26247 ;; Return value:  Size  Location     Type
 26248 ;;		None               void
 26249 ;; Registers used:
 26250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26251 ;; Tracked objects:
 26252 ;;		On entry : 0/0
 26253 ;;		On exit  : 0/0
 26254 ;;		Unchanged: 0/0
 26255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26260 ;;Total ram usage:        0 bytes
 26261 ;; Hardware stack levels used:    1
 26262 ;; Hardware stack levels required when called:   17
 26263 ;; This function calls:
 26264 ;;		_MiMAC_DiscardPacket
 26265 ;; This function is called by:
 26266 ;;		_MiApp_UnicastAddress
 26267 ;;		_main
 26268 ;;		_MiApp_SearchConnection
 26269 ;;		_MiApp_EstablishConnection
 26270 ;;		_MiApp_UnicastConnection
 26271 ;;		_do_NETWORK_REGISTER
 26272 ;;		_do_POWER_TEST
 26273 ;;		_do_PING
 26274 ;;		_do_UPDATE
 26275 ;; This function uses a non-reentrant model
 26276 ;;
 26277                           
 26278                           	psect	text62
 26279  00BB88                     __ptext62:
 26280                           	opt stack 0
 26281  00BB88                     _MiApp_DiscardMessage:
 26282                           	opt stack 12
 26283                           
 26284                           ;miwi_mesh.c: 4245: MiWiStateMachine.bits.RxHasUserData = 0;
 26285                           
 26286                           ; BSR set to: 1
 26287                           ;incstack = 0
 26288  00BB88  0101               	movlb	1	; () banked
 26289  00BB8A  95B5               	bcf	_MiWiStateMachine& (0+255),2,b
 26290                           
 26291                           ; BSR set to: 1
 26292                           ;miwi_mesh.c: 4246: MiMAC_DiscardPacket();
 26293  00BB8C  EC59  F05D         	call	_MiMAC_DiscardPacket	;wreg free
 26294  00BB90  0012               	return		;funcret
 26295  00BB92                     __end_of_MiApp_DiscardMessage:
 26296                           	opt stack 0
 26297                           tblptru	equ	0xFF8
 26298                           tblptrh	equ	0xFF7
 26299                           tblptrl	equ	0xFF6
 26300                           tablat	equ	0xFF5
 26301                           prodh	equ	0xFF4
 26302                           prodl	equ	0xFF3
 26303                           intcon	equ	0xFF2
 26304                           intcon2	equ	0xFF1
 26305                           intcon3	equ	0xFF0
 26306                           indf0	equ	0xFEF
 26307                           postinc0	equ	0xFEE
 26308                           plusw0	equ	0xFEB
 26309                           fsr0h	equ	0xFEA
 26310                           fsr0l	equ	0xFE9
 26311                           wreg	equ	0xFE8
 26312                           indf1	equ	0xFE7
 26313                           postinc1	equ	0xFE6
 26314                           postdec1	equ	0xFE5
 26315                           fsr1h	equ	0xFE2
 26316                           fsr1l	equ	0xFE1
 26317                           indf2	equ	0xFDF
 26318                           postinc2	equ	0xFDE
 26319                           postdec2	equ	0xFDD
 26320                           plusw2	equ	0xFDB
 26321                           fsr2h	equ	0xFDA
 26322                           fsr2l	equ	0xFD9
 26323                           status	equ	0xFD8
 26324                           
 26325 ;; *************** function _MiMAC_DiscardPacket *****************
 26326 ;; Defined at:
 26327 ;;		line 1048 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26328 ;; Parameters:    Size  Location     Type
 26329 ;;		None
 26330 ;; Auto vars:     Size  Location     Type
 26331 ;;		None
 26332 ;; Return value:  Size  Location     Type
 26333 ;;		None               void
 26334 ;; Registers used:
 26335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26336 ;; Tracked objects:
 26337 ;;		On entry : 0/0
 26338 ;;		On exit  : 0/0
 26339 ;;		Unchanged: 0/0
 26340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26345 ;;Total ram usage:        0 bytes
 26346 ;; Hardware stack levels used:    1
 26347 ;; Hardware stack levels required when called:   16
 26348 ;; This function calls:
 26349 ;;		Nothing
 26350 ;; This function is called by:
 26351 ;;		_MiWiTasks
 26352 ;;		_MiApp_DiscardMessage
 26353 ;; This function uses a non-reentrant model
 26354 ;;
 26355                           
 26356                           	psect	text63
 26357  00BAB2                     __ptext63:
 26358                           	opt stack 0
 26359  00BAB2                     _MiMAC_DiscardPacket:
 26360                           	opt stack 13
 26361                           
 26362                           ;drv_mrf_miwi_89xa.c: 1050: if( ReceivedBankIndex < 2 )
 26363                           
 26364                           ;incstack = 0
 26365  00BAB2  0E02               	movlw	2
 26366  00BAB4  0101               	movlb	1	; () banked
 26367  00BAB6  61C5               	cpfslt	_ReceivedBankIndex& (0+255),b
 26368  00BAB8  0012               	return	
 26369                           
 26370                           ; BSR set to: 1
 26371                           ;drv_mrf_miwi_89xa.c: 1051: {
 26372                           ;drv_mrf_miwi_89xa.c: 1052: RxPacket[ReceivedBankIndex].flags.Val = 0;
 26373  00BABA  0101               	movlb	1	; () banked
 26374  00BABC  51C5               	movf	_ReceivedBankIndex& (0+255),w,b
 26375  00BABE  0D42               	mullw	66
 26376  00BAC0  0E00               	movlw	low _RxPacket
 26377  00BAC2  24F3               	addwf	prodl,w,c
 26378  00BAC4  6ED9               	movwf	fsr2l,c
 26379  00BAC6  0E03               	movlw	high _RxPacket
 26380  00BAC8  20F4               	addwfc	prodh,w,c
 26381  00BACA  6EDA               	movwf	fsr2h,c
 26382  00BACC  0E00               	movlw	0
 26383  00BACE  6EDF               	movwf	indf2,c
 26384                           
 26385                           ; BSR set to: 1
 26386                           ;drv_mrf_miwi_89xa.c: 1053: ReceivedBankIndex = 0xFF;
 26387  00BAD0  0101               	movlb	1	; () banked
 26388  00BAD2  69C5               	setf	_ReceivedBankIndex& (0+255),b
 26389  00BAD4  0012               	return	
 26390  00BAD6                     __end_of_MiMAC_DiscardPacket:
 26391                           	opt stack 0
 26392                           tblptru	equ	0xFF8
 26393                           tblptrh	equ	0xFF7
 26394                           tblptrl	equ	0xFF6
 26395                           tablat	equ	0xFF5
 26396                           prodh	equ	0xFF4
 26397                           prodl	equ	0xFF3
 26398                           intcon	equ	0xFF2
 26399                           intcon2	equ	0xFF1
 26400                           intcon3	equ	0xFF0
 26401                           indf0	equ	0xFEF
 26402                           postinc0	equ	0xFEE
 26403                           plusw0	equ	0xFEB
 26404                           fsr0h	equ	0xFEA
 26405                           fsr0l	equ	0xFE9
 26406                           wreg	equ	0xFE8
 26407                           indf1	equ	0xFE7
 26408                           postinc1	equ	0xFE6
 26409                           postdec1	equ	0xFE5
 26410                           fsr1h	equ	0xFE2
 26411                           fsr1l	equ	0xFE1
 26412                           indf2	equ	0xFDF
 26413                           postinc2	equ	0xFDE
 26414                           postdec2	equ	0xFDD
 26415                           plusw2	equ	0xFDB
 26416                           fsr2h	equ	0xFDA
 26417                           fsr2l	equ	0xFD9
 26418                           status	equ	0xFD8
 26419                           
 26420 ;; *************** function _MiApp_StartConnection *****************
 26421 ;; Defined at:
 26422 ;;		line 4853 in file "src/miwi/miwi_mesh.c"
 26423 ;; Parameters:    Size  Location     Type
 26424 ;;  Mode            1    wreg     unsigned char 
 26425 ;;  ScanDuration    1   65[BANK1 ] unsigned char 
 26426 ;;  ChannelMap      4   66[BANK1 ] unsigned long 
 26427 ;; Auto vars:     Size  Location     Type
 26428 ;;  Mode            1   71[BANK1 ] unsigned char 
 26429 ;;  RSSIValue       1   73[BANK1 ] unsigned char 
 26430 ;;  channel         1   72[BANK1 ] unsigned char 
 26431 ;; Return value:  Size  Location     Type
 26432 ;;                  1    wreg      unsigned char 
 26433 ;; Registers used:
 26434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26435 ;; Tracked objects:
 26436 ;;		On entry : 0/0
 26437 ;;		On exit  : 0/0
 26438 ;;		Unchanged: 0/0
 26439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26440 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26441 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26442 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26443 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26444 ;;Total ram usage:        9 bytes
 26445 ;; Hardware stack levels used:    1
 26446 ;; Hardware stack levels required when called:   22
 26447 ;; This function calls:
 26448 ;;		_MiApp_NoiseDetection
 26449 ;;		_MiApp_SetChannel
 26450 ;;		_MiMAC_SetAltAddress
 26451 ;; This function is called by:
 26452 ;;		_main
 26453 ;; This function uses a non-reentrant model
 26454 ;;
 26455                           
 26456                           	psect	text64
 26457  009090                     __ptext64:
 26458                           	opt stack 0
 26459  009090                     _MiApp_StartConnection:
 26460                           	opt stack 8
 26461                           
 26462                           ; BSR set to: 1
 26463                           ;incstack = 0
 26464                           ;MiApp_StartConnection@Mode stored from wreg
 26465  009090  0101               	movlb	1	; () banked
 26466  009092  6F47               	movwf	MiApp_StartConnection@Mode& (0+255),b
 26467                           
 26468                           ;miwi_mesh.c: 4855: switch(Mode)
 26469  009094  D079               	goto	l20472
 26470  009096                     l20432:
 26471                           
 26472                           ;miwi_mesh.c: 4859: myShortAddress.Val = 0;
 26473  009096  0E00               	movlw	0
 26474  009098  0101               	movlb	1	; () banked
 26475  00909A  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 26476  00909C  0E00               	movlw	0
 26477  00909E  6FF2               	movwf	_myShortAddress& (0+255),b
 26478                           
 26479                           ; BSR set to: 1
 26480                           ;miwi_mesh.c: 4860: myParent = 0xFF;
 26481  0090A0  0101               	movlb	1	; () banked
 26482  0090A2  69C9               	setf	_myParent& (0+255),b
 26483                           
 26484                           ;miwi_mesh.c: 4865: myPANID.Val = 0x1337;
 26485  0090A4  0E13               	movlw	19
 26486  0090A6  0101               	movlb	1	; () banked
 26487  0090A8  6FF1               	movwf	(_myPANID+1)& (0+255),b
 26488  0090AA  0E37               	movlw	55
 26489  0090AC  6FF0               	movwf	_myPANID& (0+255),b
 26490                           
 26491                           ; BSR set to: 1
 26492                           ;miwi_mesh.c: 4867: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26493  0090AE  0EF2               	movlw	low _myShortAddress
 26494  0090B0  0101               	movlb	1	; () banked
 26495  0090B2  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26496  0090B4  0E01               	movlw	high _myShortAddress
 26497  0090B6  0101               	movlb	1	; () banked
 26498  0090B8  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26499  0090BA  0EF0               	movlw	low _myPANID
 26500  0090BC  0101               	movlb	1	; () banked
 26501  0090BE  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26502  0090C0  0E01               	movlw	high _myPANID
 26503  0090C2  0101               	movlb	1	; () banked
 26504  0090C4  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26505  0090C6  ECD9  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 26506                           
 26507                           ;miwi_mesh.c: 4868: MiWiStateMachine.bits.memberOfNetwork = 1;
 26508  0090CA  0101               	movlb	1	; () banked
 26509  0090CC  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 26510                           
 26511                           ; BSR set to: 1
 26512                           ;miwi_mesh.c: 4869: role = 0x02;
 26513  0090CE  0E02               	movlw	2
 26514  0090D0  0101               	movlb	1	; () banked
 26515  0090D2  6FCA               	movwf	_role& (0+255),b
 26516                           
 26517                           ; BSR set to: 1
 26518                           ;miwi_mesh.c: 4870: MiWiCapacityInfo.bits.Role = role;
 26519  0090D4  C1CA  F146         	movff	_role,??_MiApp_StartConnection
 26520  0090D8  0101               	movlb	1	; () banked
 26521  0090DA  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 26522  0090DC  0101               	movlb	1	; () banked
 26523  0090DE  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 26524  0090E0  0101               	movlb	1	; () banked
 26525  0090E2  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26526  0090E4  0BF9               	andlw	-7
 26527  0090E6  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26528  0090E8  0101               	movlb	1	; () banked
 26529  0090EA  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 26530                           
 26531                           ; BSR set to: 1
 26532                           ;miwi_mesh.c: 4871: knownCoordinators = 0x01;
 26533  0090EC  0E01               	movlw	1
 26534  0090EE  0101               	movlb	1	; () banked
 26535  0090F0  6FC7               	movwf	_knownCoordinators& (0+255),b
 26536                           
 26537                           ; BSR set to: 1
 26538                           ;miwi_mesh.c: 4881: return 1;
 26539                           ;	Return value of _MiApp_StartConnection is never used
 26540  0090F2  0012               	return	
 26541  0090F4                     l20448:
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;miwi_mesh.c: 4886: {
 26545                           ;miwi_mesh.c: 4887: uint8_t channel;
 26546                           ;miwi_mesh.c: 4888: uint8_t RSSIValue;
 26547                           ;miwi_mesh.c: 4890: channel = MiApp_NoiseDetection(ChannelMap, ScanDuration, 0x00, &RSSI
      +                          Value);
 26548  0090F4  C142  F11D         	movff	MiApp_StartConnection@ChannelMap,MiApp_NoiseDetection@ChannelMap
 26549  0090F8  C143  F11E         	movff	MiApp_StartConnection@ChannelMap+1,MiApp_NoiseDetection@ChannelMap+1
 26550  0090FC  C144  F11F         	movff	MiApp_StartConnection@ChannelMap+2,MiApp_NoiseDetection@ChannelMap+2
 26551  009100  C145  F120         	movff	MiApp_StartConnection@ChannelMap+3,MiApp_NoiseDetection@ChannelMap+3
 26552  009104  C141  F121         	movff	MiApp_StartConnection@ScanDuration,MiApp_NoiseDetection@ScanDuration
 26553  009108  0E00               	movlw	0
 26554  00910A  0101               	movlb	1	; () banked
 26555  00910C  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
 26556  00910E  0E49               	movlw	low MiApp_StartConnection@RSSIValue
 26557  009110  0101               	movlb	1	; () banked
 26558  009112  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
 26559  009114  0E01               	movlw	high MiApp_StartConnection@RSSIValue
 26560  009116  0101               	movlb	1	; () banked
 26561  009118  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
 26562  00911A  ECD9  F037         	call	_MiApp_NoiseDetection	;wreg free
 26563  00911E  0101               	movlb	1	; () banked
 26564  009120  6F48               	movwf	MiApp_StartConnection@channel& (0+255),b
 26565                           
 26566                           ; BSR set to: 1
 26567                           ;miwi_mesh.c: 4891: MiApp_SetChannel(channel);
 26568  009122  0101               	movlb	1	; () banked
 26569  009124  5148               	movf	MiApp_StartConnection@channel& (0+255),w,b
 26570  009126  EC6B  F05D         	call	_MiApp_SetChannel
 26571                           
 26572                           ;miwi_mesh.c: 4892: ;
 26573                           ;miwi_mesh.c: 4893: ;
 26574                           ;miwi_mesh.c: 4894: ;
 26575                           ;miwi_mesh.c: 4895: MiWiStateMachine.bits.memberOfNetwork = 1;
 26576  00912A  0101               	movlb	1	; () banked
 26577  00912C  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 26578                           
 26579                           ; BSR set to: 1
 26580                           ;miwi_mesh.c: 4896: myShortAddress.Val = 0;
 26581  00912E  0E00               	movlw	0
 26582  009130  0101               	movlb	1	; () banked
 26583  009132  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 26584  009134  0E00               	movlw	0
 26585  009136  6FF2               	movwf	_myShortAddress& (0+255),b
 26586                           
 26587                           ; BSR set to: 1
 26588                           ;miwi_mesh.c: 4897: myParent = 0xFF;
 26589  009138  0101               	movlb	1	; () banked
 26590  00913A  69C9               	setf	_myParent& (0+255),b
 26591                           
 26592                           ; BSR set to: 1
 26593                           ;miwi_mesh.c: 4902: myPANID.Val = 0x1337;
 26594  00913C  0E13               	movlw	19
 26595  00913E  0101               	movlb	1	; () banked
 26596  009140  6FF1               	movwf	(_myPANID+1)& (0+255),b
 26597  009142  0E37               	movlw	55
 26598  009144  6FF0               	movwf	_myPANID& (0+255),b
 26599                           
 26600                           ; BSR set to: 1
 26601                           ;miwi_mesh.c: 4904: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26602  009146  0EF2               	movlw	low _myShortAddress
 26603  009148  0101               	movlb	1	; () banked
 26604  00914A  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26605  00914C  0E01               	movlw	high _myShortAddress
 26606  00914E  0101               	movlb	1	; () banked
 26607  009150  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26608  009152  0EF0               	movlw	low _myPANID
 26609  009154  0101               	movlb	1	; () banked
 26610  009156  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26611  009158  0E01               	movlw	high _myPANID
 26612  00915A  0101               	movlb	1	; () banked
 26613  00915C  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26614  00915E  ECD9  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 26615                           
 26616                           ;miwi_mesh.c: 4905: role = 0x02;
 26617  009162  0E02               	movlw	2
 26618  009164  0101               	movlb	1	; () banked
 26619  009166  6FCA               	movwf	_role& (0+255),b
 26620                           
 26621                           ; BSR set to: 1
 26622                           ;miwi_mesh.c: 4906: MiWiCapacityInfo.bits.Role = role;
 26623  009168  C1CA  F146         	movff	_role,??_MiApp_StartConnection
 26624  00916C  0101               	movlb	1	; () banked
 26625  00916E  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 26626  009170  0101               	movlb	1	; () banked
 26627  009172  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 26628  009174  0101               	movlb	1	; () banked
 26629  009176  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26630  009178  0BF9               	andlw	-7
 26631  00917A  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26632  00917C  0101               	movlb	1	; () banked
 26633  00917E  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 26634                           
 26635                           ; BSR set to: 1
 26636                           ;miwi_mesh.c: 4907: knownCoordinators = 0x01;
 26637  009180  0E01               	movlw	1
 26638  009182  0101               	movlb	1	; () banked
 26639  009184  6FC7               	movwf	_knownCoordinators& (0+255),b
 26640                           
 26641                           ; BSR set to: 1
 26642                           ;miwi_mesh.c: 4929: }
 26643                           
 26644                           ; BSR set to: 1
 26645                           ;miwi_mesh.c: 4928: break;
 26646                           
 26647                           ;miwi_mesh.c: 4927: default:
 26648                           
 26649                           ; BSR set to: 1
 26650                           ;miwi_mesh.c: 4925: return 0;
 26651                           ;	Return value of _MiApp_StartConnection is never used
 26652                           
 26653                           ;miwi_mesh.c: 4918: }
 26654                           ;miwi_mesh.c: 4923: case 0x02:
 26655                           
 26656                           ; BSR set to: 1
 26657                           ;miwi_mesh.c: 4917: return 1;
 26658                           ;	Return value of _MiApp_StartConnection is never used
 26659  009186  0012               	return	
 26660  009188                     l20472:
 26661  009188  0101               	movlb	1	; () banked
 26662  00918A  5147               	movf	MiApp_StartConnection@Mode& (0+255),w,b
 26663                           
 26664                           ; Switch size 1, requested type "space"
 26665                           ; Number of cases is 3, Range of values is 0 to 2
 26666                           ; switch strategies available:
 26667                           ; Name         Instructions Cycles
 26668                           ; simple_byte           10     6 (average)
 26669                           ;	Chosen strategy is simple_byte
 26670  00918C  0A00               	xorlw	0	; case 0
 26671  00918E  B4D8               	btfsc	status,2,c
 26672  009190  D782               	goto	l20432
 26673  009192  0A01               	xorlw	1	; case 1
 26674  009194  B4D8               	btfsc	status,2,c
 26675  009196  D7AE               	goto	l20448
 26676  009198  0A03               	xorlw	3	; case 2
 26677  00919A  0012               	return	
 26678  00919C                     __end_of_MiApp_StartConnection:
 26679                           	opt stack 0
 26680                           tblptru	equ	0xFF8
 26681                           tblptrh	equ	0xFF7
 26682                           tblptrl	equ	0xFF6
 26683                           tablat	equ	0xFF5
 26684                           prodh	equ	0xFF4
 26685                           prodl	equ	0xFF3
 26686                           intcon	equ	0xFF2
 26687                           intcon2	equ	0xFF1
 26688                           intcon3	equ	0xFF0
 26689                           indf0	equ	0xFEF
 26690                           postinc0	equ	0xFEE
 26691                           plusw0	equ	0xFEB
 26692                           fsr0h	equ	0xFEA
 26693                           fsr0l	equ	0xFE9
 26694                           wreg	equ	0xFE8
 26695                           indf1	equ	0xFE7
 26696                           postinc1	equ	0xFE6
 26697                           postdec1	equ	0xFE5
 26698                           fsr1h	equ	0xFE2
 26699                           fsr1l	equ	0xFE1
 26700                           indf2	equ	0xFDF
 26701                           postinc2	equ	0xFDE
 26702                           postdec2	equ	0xFDD
 26703                           plusw2	equ	0xFDB
 26704                           fsr2h	equ	0xFDA
 26705                           fsr2l	equ	0xFD9
 26706                           status	equ	0xFD8
 26707                           
 26708 ;; *************** function _MiApp_NoiseDetection *****************
 26709 ;; Defined at:
 26710 ;;		line 4980 in file "src/miwi/miwi_mesh.c"
 26711 ;; Parameters:    Size  Location     Type
 26712 ;;  ChannelMap      4   29[BANK1 ] unsigned long 
 26713 ;;  ScanDuration    1   33[BANK1 ] unsigned char 
 26714 ;;  DetectionMod    1   34[BANK1 ] unsigned char 
 26715 ;;  RSSIValue       2   35[BANK1 ] PTR unsigned char 
 26716 ;;		 -> noise_level(1), MiApp_StartConnection@RSSIValue(1), 
 26717 ;; Auto vars:     Size  Location     Type
 26718 ;;  maxRSSI         1   64[BANK1 ] unsigned char 
 26719 ;;  RSSIcheck       1   61[BANK1 ] unsigned char 
 26720 ;;  k               1   60[BANK1 ] unsigned char 
 26721 ;;  j               1   59[BANK1 ] unsigned char 
 26722 ;;  t2              4   54[BANK1 ] struct _MIWI_TICK
 26723 ;;  t1              4   50[BANK1 ] struct _MIWI_TICK
 26724 ;;  channelMask     4   46[BANK1 ] unsigned long 
 26725 ;;  i               1   63[BANK1 ] unsigned char 
 26726 ;;  minRSSI         1   62[BANK1 ] unsigned char 
 26727 ;;  OptimalChann    1   58[BANK1 ] unsigned char 
 26728 ;; Return value:  Size  Location     Type
 26729 ;;                  1    wreg      unsigned char 
 26730 ;; Registers used:
 26731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26732 ;; Tracked objects:
 26733 ;;		On entry : 0/0
 26734 ;;		On exit  : 0/0
 26735 ;;		Unchanged: 0/0
 26736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26737 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26738 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26739 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26740 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26741 ;;Total ram usage:       36 bytes
 26742 ;; Hardware stack levels used:    1
 26743 ;; Hardware stack levels required when called:   21
 26744 ;; This function calls:
 26745 ;;		_MiApp_SetChannel
 26746 ;;		_MiMAC_ChannelAssessment
 26747 ;;		_MiWi_TickGet
 26748 ;;		___awdiv
 26749 ;; This function is called by:
 26750 ;;		_MiApp_StartConnection
 26751 ;;		_main
 26752 ;; This function uses a non-reentrant model
 26753 ;;
 26754                           
 26755                           	psect	text65
 26756  006FB2                     __ptext65:
 26757                           	opt stack 0
 26758  006FB2                     _MiApp_NoiseDetection:
 26759                           	opt stack 8
 26760                           
 26761                           ;miwi_mesh.c: 4982: uint8_t i;
 26762                           ;miwi_mesh.c: 4983: uint8_t OptimalChannel;
 26763                           ;miwi_mesh.c: 4984: uint8_t minRSSI = 0xFF;
 26764                           
 26765                           ; BSR set to: 1
 26766                           ;incstack = 0
 26767  006FB2  0101               	movlb	1	; () banked
 26768  006FB4  693E               	setf	MiApp_NoiseDetection@minRSSI& (0+255),b
 26769                           
 26770                           ; BSR set to: 1
 26771                           ;miwi_mesh.c: 4985: uint32_t channelMask = 0x00000001;
 26772  006FB6  0E01               	movlw	1
 26773  006FB8  0101               	movlb	1	; () banked
 26774  006FBA  6F2E               	movwf	MiApp_NoiseDetection@channelMask& (0+255),b
 26775  006FBC  0E00               	movlw	0
 26776  006FBE  6F2F               	movwf	(MiApp_NoiseDetection@channelMask+1)& (0+255),b
 26777  006FC0  0E00               	movlw	0
 26778  006FC2  6F30               	movwf	(MiApp_NoiseDetection@channelMask+2)& (0+255),b
 26779  006FC4  0E00               	movlw	0
 26780  006FC6  6F31               	movwf	(MiApp_NoiseDetection@channelMask+3)& (0+255),b
 26781                           
 26782                           ;miwi_mesh.c: 4986: MIWI_TICK t1, t2;
 26783                           ;miwi_mesh.c: 4988: if( DetectionMode != 0x00 )
 26784  006FC8  0101               	movlb	1	; () banked
 26785  006FCA  5122               	movf	MiApp_NoiseDetection@DetectionMode& (0+255),w,b
 26786  006FCC  0101               	movlb	1	; () banked
 26787  006FCE  B4D8               	btfsc	status,2,c
 26788  006FD0  D002               	goto	l19100
 26789                           
 26790                           ; BSR set to: 1
 26791                           ;miwi_mesh.c: 4989: {
 26792                           ;miwi_mesh.c: 4990: return 0xFF;
 26793  006FD2  0EFF               	movlw	255
 26794                           
 26795                           ; BSR set to: 1
 26796  006FD4  0012               	return	
 26797  006FD6                     l19100:
 26798                           
 26799                           ; BSR set to: 1
 26800                           ;miwi_mesh.c: 4991: }
 26801                           ;miwi_mesh.c: 4993: ;
 26802                           ;miwi_mesh.c: 4994: i = 0;
 26803  006FD6  0E00               	movlw	0
 26804  006FD8  0101               	movlb	1	; () banked
 26805  006FDA  6F3F               	movwf	MiApp_NoiseDetection@i& (0+255),b
 26806                           
 26807                           ;miwi_mesh.c: 4995: while( i < 32 )
 26808  006FDC  D0DA               	goto	l19140
 26809  006FDE                     l19102:
 26810                           
 26811                           ; BSR set to: 1
 26812                           ;miwi_mesh.c: 4996: {
 26813                           ;miwi_mesh.c: 4997: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 26814  006FDE  C13F  F125         	movff	MiApp_NoiseDetection@i,??_MiApp_NoiseDetection
 26815  006FE2  C12E  F126         	movff	MiApp_NoiseDetection@channelMask,??_MiApp_NoiseDetection+1
 26816  006FE6  C12F  F127         	movff	MiApp_NoiseDetection@channelMask+1,??_MiApp_NoiseDetection+2
 26817  006FEA  C130  F128         	movff	MiApp_NoiseDetection@channelMask+2,??_MiApp_NoiseDetection+3
 26818  006FEE  C131  F129         	movff	MiApp_NoiseDetection@channelMask+3,??_MiApp_NoiseDetection+4
 26819  006FF2  0101               	movlb	1	; () banked
 26820  006FF4  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 26821  006FF6  D006               	goto	u21780
 26822  006FF8                     u21785:
 26823  006FF8  90D8               	bcf	status,0,c
 26824  006FFA  0101               	movlb	1	; () banked
 26825  006FFC  3726               	rlcf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26826  006FFE  3727               	rlcf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26827  007000  3728               	rlcf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26828  007002  3729               	rlcf	(??_MiApp_NoiseDetection+4)& (0+255),f,b
 26829  007004                     u21780:
 26830  007004  0101               	movlb	1	; () banked
 26831  007006  2F25               	decfsz	??_MiApp_NoiseDetection& (0+255),f,b
 26832  007008  D7F7               	goto	u21785
 26833  00700A  0101               	movlb	1	; () banked
 26834  00700C  511D               	movf	MiApp_NoiseDetection@ChannelMap& (0+255),w,b
 26835  00700E  0101               	movlb	1	; () banked
 26836  007010  1526               	andwf	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 26837  007012  0101               	movlb	1	; () banked
 26838  007014  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 26839  007016  0101               	movlb	1	; () banked
 26840  007018  511E               	movf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),w,b
 26841  00701A  0101               	movlb	1	; () banked
 26842  00701C  1527               	andwf	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 26843  00701E  0101               	movlb	1	; () banked
 26844  007020  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 26845  007022  0101               	movlb	1	; () banked
 26846  007024  511F               	movf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),w,b
 26847  007026  0101               	movlb	1	; () banked
 26848  007028  1528               	andwf	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 26849  00702A  0101               	movlb	1	; () banked
 26850  00702C  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 26851  00702E  0101               	movlb	1	; () banked
 26852  007030  5120               	movf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),w,b
 26853  007032  0101               	movlb	1	; () banked
 26854  007034  1529               	andwf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 26855  007036  0101               	movlb	1	; () banked
 26856  007038  6F2D               	movwf	(??_MiApp_NoiseDetection+8)& (0+255),b
 26857  00703A  0101               	movlb	1	; () banked
 26858  00703C  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 26859  00703E  0101               	movlb	1	; () banked
 26860  007040  112B               	iorwf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 26861  007042  0101               	movlb	1	; () banked
 26862  007044  112C               	iorwf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 26863  007046  0101               	movlb	1	; () banked
 26864  007048  112D               	iorwf	(??_MiApp_NoiseDetection+8)& (0+255),w,b
 26865  00704A  B4D8               	btfsc	status,2,c
 26866  00704C  D0A0               	goto	l19138
 26867                           
 26868                           ; BSR set to: 1
 26869                           ;miwi_mesh.c: 4998: {
 26870                           ;miwi_mesh.c: 4999: uint8_t RSSIcheck;
 26871                           ;miwi_mesh.c: 5000: uint8_t maxRSSI = 0;
 26872  00704E  0E00               	movlw	0
 26873  007050  0101               	movlb	1	; () banked
 26874  007052  6F40               	movwf	MiApp_NoiseDetection@maxRSSI& (0+255),b
 26875                           
 26876                           ; BSR set to: 1
 26877                           ;miwi_mesh.c: 5001: uint8_t j, k;
 26878                           ;miwi_mesh.c: 5004: MiApp_SetChannel(i);
 26879  007054  0101               	movlb	1	; () banked
 26880  007056  513F               	movf	MiApp_NoiseDetection@i& (0+255),w,b
 26881  007058  EC6B  F05D         	call	_MiApp_SetChannel
 26882                           
 26883                           ;miwi_mesh.c: 5006: t2 = MiWi_TickGet();
 26884  00705C  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 26885  007060  C100  F136         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t2
 26886  007064  C101  F137         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t2+1
 26887  007068  C102  F138         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t2+2
 26888  00706C  C103  F139         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t2+3
 26889  007070                     l19110:
 26890                           
 26891                           ;miwi_mesh.c: 5009: {
 26892                           ;miwi_mesh.c: 5010: RSSIcheck = MiMAC_ChannelAssessment(0x01);
 26893  007070  0E01               	movlw	1
 26894  007072  ECE9  F044         	call	_MiMAC_ChannelAssessment
 26895  007076  0101               	movlb	1	; () banked
 26896  007078  6F3D               	movwf	MiApp_NoiseDetection@RSSIcheck& (0+255),b
 26897                           
 26898                           ; BSR set to: 1
 26899                           ;miwi_mesh.c: 5011: if( RSSIcheck > maxRSSI )
 26900  00707A  0101               	movlb	1	; () banked
 26901  00707C  513D               	movf	MiApp_NoiseDetection@RSSIcheck& (0+255),w,b
 26902  00707E  0101               	movlb	1	; () banked
 26903  007080  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 26904  007082  A0D8               	btfss	status,0,c
 26905                           
 26906                           ; BSR set to: 1
 26907                           ;miwi_mesh.c: 5012: {
 26908                           ;miwi_mesh.c: 5013: maxRSSI = RSSIcheck;
 26909  007084  C13D  F140         	movff	MiApp_NoiseDetection@RSSIcheck,MiApp_NoiseDetection@maxRSSI
 26910                           
 26911                           ; BSR set to: 1
 26912                           ;miwi_mesh.c: 5014: }
 26913                           ;miwi_mesh.c: 5018: t1 = MiWi_TickGet();
 26914                           
 26915                           ; BSR set to: 1
 26916  007088  EC7E  F058         	call	_MiWi_TickGet	;wreg free
 26917  00708C  C100  F132         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t1
 26918  007090  C101  F133         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t1+1
 26919  007094  C102  F134         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t1+2
 26920  007098  C103  F135         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t1+3
 26921                           
 26922                           ;miwi_mesh.c: 5019: if( (t1.Val - t2.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 26923  00709C  C136  F125         	movff	MiApp_NoiseDetection@t2,??_MiApp_NoiseDetection
 26924  0070A0  C137  F126         	movff	MiApp_NoiseDetection@t2+1,??_MiApp_NoiseDetection+1
 26925  0070A4  C138  F127         	movff	MiApp_NoiseDetection@t2+2,??_MiApp_NoiseDetection+2
 26926  0070A8  C139  F128         	movff	MiApp_NoiseDetection@t2+3,??_MiApp_NoiseDetection+3
 26927  0070AC  0101               	movlb	1	; () banked
 26928  0070AE  1F25               	comf	??_MiApp_NoiseDetection& (0+255),f,b
 26929  0070B0  1F26               	comf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26930  0070B2  1F27               	comf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26931  0070B4  1F28               	comf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26932  0070B6  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 26933  0070B8  0E00               	movlw	0
 26934  0070BA  2326               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26935  0070BC  2327               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26936  0070BE  2328               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26937  0070C0  0101               	movlb	1	; () banked
 26938  0070C2  5132               	movf	MiApp_NoiseDetection@t1& (0+255),w,b
 26939  0070C4  0101               	movlb	1	; () banked
 26940  0070C6  2525               	addwf	??_MiApp_NoiseDetection& (0+255),w,b
 26941  0070C8  0101               	movlb	1	; () banked
 26942  0070CA  6F29               	movwf	(??_MiApp_NoiseDetection+4)& (0+255),b
 26943  0070CC  0101               	movlb	1	; () banked
 26944  0070CE  5133               	movf	(MiApp_NoiseDetection@t1+1)& (0+255),w,b
 26945  0070D0  0101               	movlb	1	; () banked
 26946  0070D2  2126               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 26947  0070D4  0101               	movlb	1	; () banked
 26948  0070D6  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 26949  0070D8  0101               	movlb	1	; () banked
 26950  0070DA  5134               	movf	(MiApp_NoiseDetection@t1+2)& (0+255),w,b
 26951  0070DC  0101               	movlb	1	; () banked
 26952  0070DE  2127               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 26953  0070E0  0101               	movlb	1	; () banked
 26954  0070E2  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 26955  0070E4  0101               	movlb	1	; () banked
 26956  0070E6  5135               	movf	(MiApp_NoiseDetection@t1+3)& (0+255),w,b
 26957  0070E8  0101               	movlb	1	; () banked
 26958  0070EA  2128               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 26959  0070EC  0101               	movlb	1	; () banked
 26960  0070EE  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 26961  0070F0  0101               	movlb	1	; () banked
 26962  0070F2  5121               	movf	MiApp_NoiseDetection@ScanDuration& (0+255),w,b
 26963  0070F4  0D04               	mullw	4
 26964  0070F6  0E35               	movlw	low _ScanTime
 26965  0070F8  24F3               	addwf	prodl,w,c
 26966  0070FA  6EF6               	movwf	tblptrl,c
 26967  0070FC  0E20               	movlw	high _ScanTime
 26968  0070FE  20F4               	addwfc	prodh,w,c
 26969  007100  6EF7               	movwf	tblptrh,c
 26970  007102                     	if	1	;There are 3 active tblptr bytes
 26971  007102  6AF8               	clrf	tblptru,c
 26972  007104  0E00               	movlw	low (__mediumconst shr (0+16))
 26973  007106  22F8               	addwfc	tblptru,f,c
 26974  007108                     	endif
 26975  007108  0101               	movlb	1	; () banked
 26976  00710A  5129               	movf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 26977  00710C  0009               	tblrd		*+
 26978  00710E  5CF5               	subwf	tablat,w,c
 26979  007110  0101               	movlb	1	; () banked
 26980  007112  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 26981  007114  0009               	tblrd		*+
 26982  007116  58F5               	subwfb	tablat,w,c
 26983  007118  0101               	movlb	1	; () banked
 26984  00711A  512B               	movf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 26985  00711C  0009               	tblrd		*+
 26986  00711E  58F5               	subwfb	tablat,w,c
 26987  007120  0101               	movlb	1	; () banked
 26988  007122  512C               	movf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 26989  007124  0009               	tblrd		*+
 26990  007126  58F5               	subwfb	tablat,w,c
 26991  007128  B0D8               	btfsc	status,0,c
 26992  00712A  D7A2               	goto	l19110
 26993                           
 26994                           ; BSR set to: 1
 26995                           ;miwi_mesh.c: 5023: }
 26996                           ;miwi_mesh.c: 5024: }
 26997                           ;miwi_mesh.c: 5026: ;
 26998                           ;miwi_mesh.c: 5027: ;
 26999                           ;miwi_mesh.c: 5028: ;
 27000                           ;miwi_mesh.c: 5029: j = maxRSSI/5;
 27001                           
 27002                           ; BSR set to: 1
 27003                           
 27004                           ; BSR set to: 1
 27005                           
 27006                           ; BSR set to: 1
 27007                           
 27008                           ; BSR set to: 1
 27009                           ;miwi_mesh.c: 5020: {
 27010                           ;miwi_mesh.c: 5022: break;
 27011  00712C  C140  F106         	movff	MiApp_NoiseDetection@maxRSSI,___awdiv@dividend
 27012  007130  0101               	movlb	1	; () banked
 27013  007132  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27014  007134  0E00               	movlw	0
 27015  007136  0101               	movlb	1	; () banked
 27016  007138  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27017  00713A  0E05               	movlw	5
 27018  00713C  6F08               	movwf	___awdiv@divisor& (0+255),b
 27019  00713E  EC9F  F050         	call	___awdiv	;wreg free
 27020  007142  0101               	movlb	1	; () banked
 27021  007144  5106               	movf	?___awdiv& (0+255),w,b
 27022  007146  0101               	movlb	1	; () banked
 27023  007148  6F3B               	movwf	MiApp_NoiseDetection@j& (0+255),b
 27024                           
 27025                           ; BSR set to: 1
 27026                           ;miwi_mesh.c: 5030: for(k = 0; k < j; k++)
 27027  00714A  0E00               	movlw	0
 27028  00714C  0101               	movlb	1	; () banked
 27029  00714E  6F3C               	movwf	MiApp_NoiseDetection@k& (0+255),b
 27030  007150  D002               	goto	l19128
 27031  007152                     l19126:
 27032                           
 27033                           ; BSR set to: 1
 27034                           ;miwi_mesh.c: 5031: {
 27035                           ;miwi_mesh.c: 5032: ;
 27036  007152  0101               	movlb	1	; () banked
 27037  007154  2B3C               	incf	MiApp_NoiseDetection@k& (0+255),f,b
 27038  007156                     l19128:
 27039                           
 27040                           ; BSR set to: 1
 27041  007156  0101               	movlb	1	; () banked
 27042  007158  513B               	movf	MiApp_NoiseDetection@j& (0+255),w,b
 27043  00715A  0101               	movlb	1	; () banked
 27044  00715C  5D3C               	subwf	MiApp_NoiseDetection@k& (0+255),w,b
 27045  00715E  A0D8               	btfss	status,0,c
 27046  007160  D7F8               	goto	l19126
 27047                           
 27048                           ; BSR set to: 1
 27049                           ;miwi_mesh.c: 5033: }
 27050                           ;miwi_mesh.c: 5034: ;
 27051                           ;miwi_mesh.c: 5035: ;
 27052                           ;miwi_mesh.c: 5037: if( maxRSSI < minRSSI )
 27053                           
 27054                           ; BSR set to: 1
 27055  007162  0101               	movlb	1	; () banked
 27056  007164  513E               	movf	MiApp_NoiseDetection@minRSSI& (0+255),w,b
 27057  007166  0101               	movlb	1	; () banked
 27058  007168  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 27059  00716A  B0D8               	btfsc	status,0,c
 27060  00716C  D010               	goto	l19138
 27061                           
 27062                           ; BSR set to: 1
 27063                           ;miwi_mesh.c: 5038: {
 27064                           ;miwi_mesh.c: 5039: minRSSI = maxRSSI;
 27065  00716E  C140  F13E         	movff	MiApp_NoiseDetection@maxRSSI,MiApp_NoiseDetection@minRSSI
 27066                           
 27067                           ;miwi_mesh.c: 5040: OptimalChannel = i;
 27068  007172  C13F  F13A         	movff	MiApp_NoiseDetection@i,MiApp_NoiseDetection@OptimalChannel
 27069                           
 27070                           ; BSR set to: 1
 27071                           ;miwi_mesh.c: 5041: if( RSSIValue )
 27072  007176  0101               	movlb	1	; () banked
 27073  007178  5123               	movf	MiApp_NoiseDetection@RSSIValue& (0+255),w,b
 27074  00717A  0101               	movlb	1	; () banked
 27075  00717C  1124               	iorwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),w,b
 27076  00717E  B4D8               	btfsc	status,2,c
 27077  007180  D006               	goto	l19138
 27078                           
 27079                           ; BSR set to: 1
 27080                           ;miwi_mesh.c: 5042: {
 27081                           ;miwi_mesh.c: 5043: *RSSIValue = minRSSI;
 27082  007182  C123  FFD9         	movff	MiApp_NoiseDetection@RSSIValue,fsr2l
 27083  007186  C124  FFDA         	movff	MiApp_NoiseDetection@RSSIValue+1,fsr2h
 27084  00718A  C13E  FFDF         	movff	MiApp_NoiseDetection@minRSSI,indf2
 27085  00718E                     l19138:
 27086                           
 27087                           ; BSR set to: 1
 27088                           ;miwi_mesh.c: 5044: }
 27089                           ;miwi_mesh.c: 5045: }
 27090                           ;miwi_mesh.c: 5046: }
 27091                           ;miwi_mesh.c: 5047: i++;
 27092  00718E  0101               	movlb	1	; () banked
 27093  007190  2B3F               	incf	MiApp_NoiseDetection@i& (0+255),f,b
 27094  007192                     l19140:
 27095                           
 27096                           ; BSR set to: 1
 27097  007192  0E1F               	movlw	31
 27098  007194  0101               	movlb	1	; () banked
 27099  007196  653F               	cpfsgt	MiApp_NoiseDetection@i& (0+255),b
 27100  007198  D722               	goto	l19102
 27101                           
 27102                           ; BSR set to: 1
 27103                           ;miwi_mesh.c: 5048: }
 27104                           ;miwi_mesh.c: 5050: return OptimalChannel;
 27105                           
 27106                           ; BSR set to: 1
 27107  00719A  0101               	movlb	1	; () banked
 27108  00719C  513A               	movf	MiApp_NoiseDetection@OptimalChannel& (0+255),w,b
 27109  00719E  0012               	return	
 27110  0071A0                     __end_of_MiApp_NoiseDetection:
 27111                           	opt stack 0
 27112                           tblptru	equ	0xFF8
 27113                           tblptrh	equ	0xFF7
 27114                           tblptrl	equ	0xFF6
 27115                           tablat	equ	0xFF5
 27116                           prodh	equ	0xFF4
 27117                           prodl	equ	0xFF3
 27118                           intcon	equ	0xFF2
 27119                           intcon2	equ	0xFF1
 27120                           intcon3	equ	0xFF0
 27121                           indf0	equ	0xFEF
 27122                           postinc0	equ	0xFEE
 27123                           plusw0	equ	0xFEB
 27124                           fsr0h	equ	0xFEA
 27125                           fsr0l	equ	0xFE9
 27126                           wreg	equ	0xFE8
 27127                           indf1	equ	0xFE7
 27128                           postinc1	equ	0xFE6
 27129                           postdec1	equ	0xFE5
 27130                           fsr1h	equ	0xFE2
 27131                           fsr1l	equ	0xFE1
 27132                           indf2	equ	0xFDF
 27133                           postinc2	equ	0xFDE
 27134                           postdec2	equ	0xFDD
 27135                           plusw2	equ	0xFDB
 27136                           fsr2h	equ	0xFDA
 27137                           fsr2l	equ	0xFD9
 27138                           status	equ	0xFD8
 27139                           
 27140 ;; *************** function _MiWi_TickGet *****************
 27141 ;; Defined at:
 27142 ;;		line 105 in file "src/18F27J53/symbol.c"
 27143 ;; Parameters:    Size  Location     Type
 27144 ;;		None
 27145 ;; Auto vars:     Size  Location     Type
 27146 ;;  currentTime     4    6[BANK1 ] struct _MIWI_TICK
 27147 ;;  failureCount    1    5[BANK1 ] unsigned char 
 27148 ;; Return value:  Size  Location     Type
 27149 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 27150 ;; Registers used:
 27151 ;;		wreg, status,2, status,0
 27152 ;; Tracked objects:
 27153 ;;		On entry : 0/0
 27154 ;;		On exit  : 0/0
 27155 ;;		Unchanged: 0/0
 27156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27157 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27158 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27159 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27160 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27161 ;;Total ram usage:       10 bytes
 27162 ;; Hardware stack levels used:    1
 27163 ;; Hardware stack levels required when called:   16
 27164 ;; This function calls:
 27165 ;;		Nothing
 27166 ;; This function is called by:
 27167 ;;		_TxPacket
 27168 ;;		_MiMAC_ReceivedPacket
 27169 ;;		_BroadcastJitter
 27170 ;;		_MiWiTasks
 27171 ;;		_MiApp_UnicastAddress
 27172 ;;		_MiApp_NoiseDetection
 27173 ;;		_OpenSocket
 27174 ;;		_MiApp_SearchConnection
 27175 ;;		_MiApp_EstablishConnection
 27176 ;;		_MiApp_UnicastConnection
 27177 ;; This function uses a non-reentrant model
 27178 ;;
 27179                           
 27180                           	psect	text66
 27181  00B0FC                     __ptext66:
 27182                           	opt stack 0
 27183  00B0FC                     _MiWi_TickGet:
 27184                           	opt stack 8
 27185                           
 27186                           ;symbol.c: 107: MIWI_TICK currentTime;
 27187                           ;symbol.c: 110: uint8_t failureCounter;
 27188                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 27189                           
 27190                           ; BSR set to: 1
 27191                           ;incstack = 0
 27192  00B0FC  909D               	bcf	3997,0,c	;volatile
 27193                           
 27194                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 27195  00B0FE  0E00               	movlw	0
 27196  00B100  0101               	movlb	1	; () banked
 27197  00B102  6F08               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 27198                           
 27199                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 27200  00B104  0E00               	movlw	0
 27201  00B106  0101               	movlb	1	; () banked
 27202  00B108  6F09               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 27203                           
 27204                           ;symbol.c: 119: failureCounter = 0;
 27205  00B10A  0E00               	movlw	0
 27206  00B10C  0101               	movlb	1	; () banked
 27207  00B10E  6F05               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 27208  00B110                     l16720:
 27209                           
 27210                           ; BSR set to: 1
 27211                           ;symbol.c: 122: {
 27212                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 27213  00B110  CFCE F106          	movff	4046,MiWi_TickGet@currentTime	;volatile
 27214                           
 27215                           ; BSR set to: 1
 27216                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 27217  00B114  CFCF F107          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 27218                           
 27219                           ; BSR set to: 1
 27220                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 27221  00B118  0101               	movlb	1	; () banked
 27222  00B11A  2906               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 27223  00B11C  E10D               	bnz	l62
 27224  00B11E  0101               	movlb	1	; () banked
 27225  00B120  2907               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 27226  00B122  A4D8               	btfss	status,2,c
 27227  00B124  D009               	goto	l62
 27228                           
 27229                           ; BSR set to: 1
 27230  00B126  0101               	movlb	1	; () banked
 27231  00B128  2B05               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 27232  00B12A  0505               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 27233  00B12C  0101               	movlb	1	; () banked
 27234  00B12E  6F04               	movwf	??_MiWi_TickGet& (0+255),b
 27235  00B130  0E02               	movlw	2
 27236  00B132  0101               	movlb	1	; () banked
 27237  00B134  6504               	cpfsgt	??_MiWi_TickGet& (0+255),b
 27238  00B136  D7EC               	goto	l16720
 27239  00B138                     l62:
 27240                           
 27241                           ; BSR set to: 1
 27242                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 27243  00B138  A09E               	btfss	3998,0,c	;volatile
 27244  00B13A  D008               	goto	l16734
 27245                           
 27246                           ; BSR set to: 1
 27247                           ;symbol.c: 130: {
 27248                           ;symbol.c: 132: {
 27249                           ;symbol.c: 135: currentTime.byte.b2++;
 27250  00B13C  0101               	movlb	1	; () banked
 27251  00B13E  2B08               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 27252                           
 27253                           ; BSR set to: 1
 27254                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 27255  00B140  0100               	movlb	0	; () banked
 27256  00B142  29A1               	incf	_timerExtension1& (0+255),w,b	;volatile
 27257  00B144  A4D8               	btfss	status,2,c
 27258  00B146  D002               	goto	l16734
 27259                           
 27260                           ; BSR set to: 0
 27261                           ;symbol.c: 137: {
 27262                           ;symbol.c: 138: currentTime.byte.b3++;
 27263  00B148  0101               	movlb	1	; () banked
 27264  00B14A  2B09               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 27265  00B14C                     l16734:
 27266                           
 27267                           ;symbol.c: 139: }
 27268                           ;symbol.c: 140: }
 27269                           ;symbol.c: 141: }
 27270                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 27271  00B14C  0100               	movlb	0	; () banked
 27272  00B14E  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 27273  00B150  0101               	movlb	1	; () banked
 27274  00B152  2708               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 27275                           
 27276                           ; BSR set to: 1
 27277                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 27278  00B154  0100               	movlb	0	; () banked
 27279  00B156  51A2               	movf	_timerExtension2& (0+255),w,b	;volatile
 27280  00B158  0101               	movlb	1	; () banked
 27281  00B15A  2709               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 27282                           
 27283                           ; BSR set to: 1
 27284                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 27285  00B15C  809D               	bsf	3997,0,c	;volatile
 27286                           
 27287                           ; BSR set to: 1
 27288                           ;symbol.c: 150: return currentTime;
 27289  00B15E  C106  F100         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 27290  00B162  C107  F101         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 27291  00B166  C108  F102         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 27292  00B16A  C109  F103         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 27293  00B16E  0012               	return	
 27294  00B170                     __end_of_MiWi_TickGet:
 27295                           	opt stack 0
 27296                           tblptru	equ	0xFF8
 27297                           tblptrh	equ	0xFF7
 27298                           tblptrl	equ	0xFF6
 27299                           tablat	equ	0xFF5
 27300                           prodh	equ	0xFF4
 27301                           prodl	equ	0xFF3
 27302                           intcon	equ	0xFF2
 27303                           intcon2	equ	0xFF1
 27304                           intcon3	equ	0xFF0
 27305                           indf0	equ	0xFEF
 27306                           postinc0	equ	0xFEE
 27307                           plusw0	equ	0xFEB
 27308                           fsr0h	equ	0xFEA
 27309                           fsr0l	equ	0xFE9
 27310                           wreg	equ	0xFE8
 27311                           indf1	equ	0xFE7
 27312                           postinc1	equ	0xFE6
 27313                           postdec1	equ	0xFE5
 27314                           fsr1h	equ	0xFE2
 27315                           fsr1l	equ	0xFE1
 27316                           indf2	equ	0xFDF
 27317                           postinc2	equ	0xFDE
 27318                           postdec2	equ	0xFDD
 27319                           plusw2	equ	0xFDB
 27320                           fsr2h	equ	0xFDA
 27321                           fsr2l	equ	0xFD9
 27322                           status	equ	0xFD8
 27323                           
 27324 ;; *************** function _MiMAC_ChannelAssessment *****************
 27325 ;; Defined at:
 27326 ;;		line 1092 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27327 ;; Parameters:    Size  Location     Type
 27328 ;;  AssessmentMo    1    wreg     unsigned char 
 27329 ;; Auto vars:     Size  Location     Type
 27330 ;;  AssessmentMo    1   24[BANK1 ] unsigned char 
 27331 ;;  result          6   18[BANK1 ] unsigned char [6]
 27332 ;;  count           2   26[BANK1 ] unsigned int 
 27333 ;;  i               1   28[BANK1 ] unsigned char 
 27334 ;;  k               1   25[BANK1 ] unsigned char 
 27335 ;; Return value:  Size  Location     Type
 27336 ;;                  1    wreg      unsigned char 
 27337 ;; Registers used:
 27338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27339 ;; Tracked objects:
 27340 ;;		On entry : 0/0
 27341 ;;		On exit  : 0/0
 27342 ;;		Unchanged: 0/0
 27343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27345 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27348 ;;Total ram usage:       15 bytes
 27349 ;; Hardware stack levels used:    1
 27350 ;; Hardware stack levels required when called:   19
 27351 ;; This function calls:
 27352 ;;		_RegisterRead
 27353 ;;		___awdiv
 27354 ;;		___lwdiv
 27355 ;; This function is called by:
 27356 ;;		_MiApp_NoiseDetection
 27357 ;; This function uses a non-reentrant model
 27358 ;;
 27359                           
 27360                           	psect	text67
 27361  0089D2                     __ptext67:
 27362                           	opt stack 0
 27363  0089D2                     _MiMAC_ChannelAssessment:
 27364                           	opt stack 9
 27365                           
 27366                           ; BSR set to: 1
 27367                           ;incstack = 0
 27368                           ;MiMAC_ChannelAssessment@AssessmentMode stored from wreg
 27369  0089D2  0101               	movlb	1	; () banked
 27370  0089D4  6F18               	movwf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),b
 27371                           
 27372                           ;drv_mrf_miwi_89xa.c: 1094: uint8_t i;
 27373                           ;drv_mrf_miwi_89xa.c: 1095: uint8_t k;
 27374                           ;drv_mrf_miwi_89xa.c: 1096: uint16_t count=0;
 27375  0089D6  0E00               	movlw	0
 27376  0089D8  0101               	movlb	1	; () banked
 27377  0089DA  6F1B               	movwf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 27378  0089DC  0E00               	movlw	0
 27379  0089DE  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 27380                           
 27381                           ; BSR set to: 1
 27382                           ;drv_mrf_miwi_89xa.c: 1097: uint8_t result[6] = {42, 78, 114, 150, 186 ,222};
 27383  0089E0  EE22  F0F9         	lfsr	2,MiMAC_ChannelAssessment@F10758
 27384  0089E4  EE11  F012         	lfsr	1,MiMAC_ChannelAssessment@result
 27385  0089E8  0E05               	movlw	5
 27386  0089EA                     u19791:
 27387  0089EA  CFDB FFE3          	movff	plusw2,plusw1
 27388  0089EE  06E8               	decf	wreg,f,c
 27389  0089F0  E2FC               	bc	u19791
 27390                           
 27391                           ; BSR set to: 1
 27392                           ;drv_mrf_miwi_89xa.c: 1099: for(i = 0; i < 0xFF; i++)
 27393  0089F2  0E00               	movlw	0
 27394  0089F4  0101               	movlb	1	; () banked
 27395  0089F6  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27396  0089F8                     l17878:
 27397                           
 27398                           ; BSR set to: 1
 27399  0089F8  0101               	movlb	1	; () banked
 27400  0089FA  291C               	incf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27401  0089FC  B4D8               	btfsc	status,2,c
 27402  0089FE  D041               	goto	l17904
 27403                           
 27404                           ; BSR set to: 1
 27405                           ;drv_mrf_miwi_89xa.c: 1100: {
 27406                           ;drv_mrf_miwi_89xa.c: 1101: if( AssessmentMode == 0x00 )
 27407                           
 27408                           ; BSR set to: 1
 27409                           
 27410                           ; BSR set to: 1
 27411  008A00  0101               	movlb	1	; () banked
 27412  008A02  5118               	movf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 27413  008A04  0101               	movlb	1	; () banked
 27414  008A06  A4D8               	btfss	status,2,c
 27415  008A08  D012               	goto	l17886
 27416                           
 27417                           ; BSR set to: 1
 27418                           ;drv_mrf_miwi_89xa.c: 1102: {
 27419                           ;drv_mrf_miwi_89xa.c: 1103: count += ((RegisterRead(0x2800>>8)/2));
 27420  008A0A  0E28               	movlw	40
 27421  008A0C  EC83  F05A         	call	_RegisterRead
 27422  008A10  0101               	movlb	1	; () banked
 27423  008A12  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27424  008A14  0101               	movlb	1	; () banked
 27425  008A16  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27426  008A18  0101               	movlb	1	; () banked
 27427  008A1A  6F06               	movwf	___awdiv@dividend& (0+255),b
 27428  008A1C  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27429  008A1E  0E00               	movlw	0
 27430  008A20  0101               	movlb	1	; () banked
 27431  008A22  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27432  008A24  0E02               	movlw	2
 27433  008A26  6F08               	movwf	___awdiv@divisor& (0+255),b
 27434  008A28  EC9F  F050         	call	___awdiv	;wreg free
 27435  008A2C  D015               	goto	L11
 27436  008A2E                     l17886:
 27437                           
 27438                           ; BSR set to: 1
 27439                           ;drv_mrf_miwi_89xa.c: 1105: else if( AssessmentMode == 0x01 )
 27440  008A2E  0101               	movlb	1	; () banked
 27441  008A30  0518               	decf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 27442  008A32  A4D8               	btfss	status,2,c
 27443  008A34  D019               	goto	l17890
 27444                           
 27445                           ; BSR set to: 1
 27446                           ;drv_mrf_miwi_89xa.c: 1106: {
 27447                           ;drv_mrf_miwi_89xa.c: 1107: count += ((RegisterRead(0x2800>>8)/2));
 27448  008A36  0E28               	movlw	40
 27449  008A38  EC83  F05A         	call	_RegisterRead
 27450  008A3C  0101               	movlb	1	; () banked
 27451  008A3E  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27452  008A40  0101               	movlb	1	; () banked
 27453  008A42  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27454  008A44  0101               	movlb	1	; () banked
 27455  008A46  6F06               	movwf	___awdiv@dividend& (0+255),b
 27456  008A48  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27457  008A4A  0E00               	movlw	0
 27458  008A4C  0101               	movlb	1	; () banked
 27459  008A4E  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27460  008A50  0E02               	movlw	2
 27461  008A52  6F08               	movwf	___awdiv@divisor& (0+255),b
 27462  008A54  EC9F  F050         	call	___awdiv	;wreg free
 27463  008A58                     L11:
 27464  008A58  0101               	movlb	1	; () banked
 27465  008A5A  5106               	movf	?___awdiv& (0+255),w,b
 27466  008A5C  0101               	movlb	1	; () banked
 27467  008A5E  271A               	addwf	MiMAC_ChannelAssessment@count& (0+255),f,b
 27468  008A60  0101               	movlb	1	; () banked
 27469  008A62  5107               	movf	(?___awdiv+1)& (0+255),w,b
 27470  008A64  0101               	movlb	1	; () banked
 27471  008A66  231B               	addwfc	(MiMAC_ChannelAssessment@count+1)& (0+255),f,b
 27472  008A68                     l17890:
 27473                           
 27474                           ; BSR set to: 1
 27475                           ;drv_mrf_miwi_89xa.c: 1109: }
 27476                           ;drv_mrf_miwi_89xa.c: 1110: for(k = 0; k < 0xFF; k++) {}
 27477  008A68  0E00               	movlw	0
 27478  008A6A  0101               	movlb	1	; () banked
 27479  008A6C  6F19               	movwf	MiMAC_ChannelAssessment@k& (0+255),b
 27480  008A6E                     l17892:
 27481                           
 27482                           ; BSR set to: 1
 27483  008A6E  0101               	movlb	1	; () banked
 27484  008A70  2919               	incf	MiMAC_ChannelAssessment@k& (0+255),w,b
 27485  008A72  B4D8               	btfsc	status,2,c
 27486  008A74  D003               	goto	l17900
 27487                           
 27488                           ; BSR set to: 1
 27489                           
 27490                           ; BSR set to: 1
 27491                           
 27492                           ; BSR set to: 1
 27493  008A76  0101               	movlb	1	; () banked
 27494  008A78  2B19               	incf	MiMAC_ChannelAssessment@k& (0+255),f,b
 27495  008A7A  D7F9               	goto	l17892
 27496  008A7C                     l17900:
 27497                           
 27498                           ; BSR set to: 1
 27499  008A7C  0101               	movlb	1	; () banked
 27500  008A7E  2B1C               	incf	MiMAC_ChannelAssessment@i& (0+255),f,b
 27501  008A80  D7BB               	goto	l17878
 27502  008A82                     l17904:
 27503                           
 27504                           ; BSR set to: 1
 27505                           ;drv_mrf_miwi_89xa.c: 1111: }
 27506                           ;drv_mrf_miwi_89xa.c: 1113: count = (count>>8);
 27507  008A82  0101               	movlb	1	; () banked
 27508  008A84  511B               	movf	(MiMAC_ChannelAssessment@count+1)& (0+255),w,b
 27509  008A86  0101               	movlb	1	; () banked
 27510  008A88  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 27511  008A8A  6B1B               	clrf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 27512                           
 27513                           ; BSR set to: 1
 27514                           ;drv_mrf_miwi_89xa.c: 1114: i = (count/10);
 27515  008A8C  C11A  F100         	movff	MiMAC_ChannelAssessment@count,___lwdiv@dividend
 27516  008A90  C11B  F101         	movff	MiMAC_ChannelAssessment@count+1,___lwdiv@dividend+1
 27517  008A94  0E00               	movlw	0
 27518  008A96  0101               	movlb	1	; () banked
 27519  008A98  6F03               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27520  008A9A  0E0A               	movlw	10
 27521  008A9C  6F02               	movwf	___lwdiv@divisor& (0+255),b
 27522  008A9E  EC07  F058         	call	___lwdiv	;wreg free
 27523  008AA2  0101               	movlb	1	; () banked
 27524  008AA4  5100               	movf	?___lwdiv& (0+255),w,b
 27525  008AA6  0101               	movlb	1	; () banked
 27526  008AA8  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27527                           
 27528                           ; BSR set to: 1
 27529                           ;drv_mrf_miwi_89xa.c: 1115: if(i>6) i = 6;
 27530  008AAA  0E06               	movlw	6
 27531  008AAC  0101               	movlb	1	; () banked
 27532  008AAE  651C               	cpfsgt	MiMAC_ChannelAssessment@i& (0+255),b
 27533  008AB0  D003               	goto	l383
 27534                           
 27535                           ; BSR set to: 1
 27536  008AB2  0E06               	movlw	6
 27537  008AB4  0101               	movlb	1	; () banked
 27538  008AB6  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27539  008AB8                     l383:
 27540                           
 27541                           ; BSR set to: 1
 27542                           ;drv_mrf_miwi_89xa.c: 1116: if(i<1) i = 1;
 27543  008AB8  0101               	movlb	1	; () banked
 27544  008ABA  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27545  008ABC  0101               	movlb	1	; () banked
 27546  008ABE  A4D8               	btfss	status,2,c
 27547  008AC0  D003               	goto	l17914
 27548                           
 27549                           ; BSR set to: 1
 27550  008AC2  0E01               	movlw	1
 27551  008AC4  0101               	movlb	1	; () banked
 27552  008AC6  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27553  008AC8                     l17914:
 27554                           
 27555                           ; BSR set to: 1
 27556                           ;drv_mrf_miwi_89xa.c: 1117: return(result[i-1]);
 27557  008AC8  0EFF               	movlw	255
 27558  008ACA  0101               	movlb	1	; () banked
 27559  008ACC  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27560  008ACE  0EFF               	movlw	255
 27561  008AD0  0101               	movlb	1	; () banked
 27562  008AD2  6F0F               	movwf	(??_MiMAC_ChannelAssessment+1)& (0+255),b
 27563  008AD4  0101               	movlb	1	; () banked
 27564  008AD6  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27565  008AD8  0101               	movlb	1	; () banked
 27566  008ADA  6F10               	movwf	(??_MiMAC_ChannelAssessment+2)& (0+255),b
 27567  008ADC  6B11               	clrf	(??_MiMAC_ChannelAssessment+3)& (0+255),b
 27568  008ADE  0101               	movlb	1	; () banked
 27569  008AE0  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27570  008AE2  0101               	movlb	1	; () banked
 27571  008AE4  2710               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),f,b
 27572  008AE6  0101               	movlb	1	; () banked
 27573  008AE8  510F               	movf	(??_MiMAC_ChannelAssessment+1)& (0+255),w,b
 27574  008AEA  0101               	movlb	1	; () banked
 27575  008AEC  2311               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),f,b
 27576  008AEE  0E12               	movlw	low MiMAC_ChannelAssessment@result
 27577  008AF0  0101               	movlb	1	; () banked
 27578  008AF2  2510               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),w,b
 27579  008AF4  6ED9               	movwf	fsr2l,c
 27580  008AF6  0E01               	movlw	high MiMAC_ChannelAssessment@result
 27581  008AF8  0101               	movlb	1	; () banked
 27582  008AFA  2111               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),w,b
 27583  008AFC  6EDA               	movwf	fsr2h,c
 27584  008AFE  50DF               	movf	indf2,w,c
 27585  008B00  0012               	return	
 27586  008B02                     __end_of_MiMAC_ChannelAssessment:
 27587                           	opt stack 0
 27588                           tblptru	equ	0xFF8
 27589                           tblptrh	equ	0xFF7
 27590                           tblptrl	equ	0xFF6
 27591                           tablat	equ	0xFF5
 27592                           prodh	equ	0xFF4
 27593                           prodl	equ	0xFF3
 27594                           intcon	equ	0xFF2
 27595                           intcon2	equ	0xFF1
 27596                           intcon3	equ	0xFF0
 27597                           indf0	equ	0xFEF
 27598                           postinc0	equ	0xFEE
 27599                           plusw0	equ	0xFEB
 27600                           fsr0h	equ	0xFEA
 27601                           fsr0l	equ	0xFE9
 27602                           wreg	equ	0xFE8
 27603                           indf1	equ	0xFE7
 27604                           postinc1	equ	0xFE6
 27605                           postdec1	equ	0xFE5
 27606                           plusw1	equ	0xFE3
 27607                           fsr1h	equ	0xFE2
 27608                           fsr1l	equ	0xFE1
 27609                           indf2	equ	0xFDF
 27610                           postinc2	equ	0xFDE
 27611                           postdec2	equ	0xFDD
 27612                           plusw2	equ	0xFDB
 27613                           fsr2h	equ	0xFDA
 27614                           fsr2l	equ	0xFD9
 27615                           status	equ	0xFD8
 27616                           
 27617 ;; *************** function ___lwdiv *****************
 27618 ;; Defined at:
 27619 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 27620 ;; Parameters:    Size  Location     Type
 27621 ;;  dividend        2    0[BANK1 ] unsigned int 
 27622 ;;  divisor         2    2[BANK1 ] unsigned int 
 27623 ;; Auto vars:     Size  Location     Type
 27624 ;;  quotient        2    5[BANK1 ] unsigned int 
 27625 ;;  counter         1    4[BANK1 ] unsigned char 
 27626 ;; Return value:  Size  Location     Type
 27627 ;;                  2    0[BANK1 ] unsigned int 
 27628 ;; Registers used:
 27629 ;;		wreg, status,2, status,0
 27630 ;; Tracked objects:
 27631 ;;		On entry : 0/0
 27632 ;;		On exit  : 0/0
 27633 ;;		Unchanged: 0/0
 27634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27635 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27636 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27638 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27639 ;;Total ram usage:        7 bytes
 27640 ;; Hardware stack levels used:    1
 27641 ;; Hardware stack levels required when called:   16
 27642 ;; This function calls:
 27643 ;;		Nothing
 27644 ;; This function is called by:
 27645 ;;		_MiMAC_ChannelAssessment
 27646 ;;		_sprintf
 27647 ;; This function uses a non-reentrant model
 27648 ;;
 27649                           
 27650                           	psect	text68
 27651  00B00E                     __ptext68:
 27652                           	opt stack 0
 27653  00B00E                     ___lwdiv:
 27654                           	opt stack 13
 27655                           
 27656                           ; BSR set to: 1
 27657                           ;incstack = 0
 27658  00B00E  0E00               	movlw	0
 27659  00B010  0101               	movlb	1	; () banked
 27660  00B012  6F06               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27661  00B014  0E00               	movlw	0
 27662  00B016  6F05               	movwf	___lwdiv@quotient& (0+255),b
 27663                           
 27664                           ; BSR set to: 1
 27665  00B018  0101               	movlb	1	; () banked
 27666  00B01A  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27667  00B01C  0101               	movlb	1	; () banked
 27668  00B01E  1103               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27669  00B020  B4D8               	btfsc	status,2,c
 27670  00B022  D02C               	goto	l2653
 27671                           
 27672                           ; BSR set to: 1
 27673  00B024  0E01               	movlw	1
 27674  00B026  0101               	movlb	1	; () banked
 27675  00B028  6F04               	movwf	___lwdiv@counter& (0+255),b
 27676  00B02A  D006               	goto	l17844
 27677  00B02C                     l17842:
 27678                           
 27679                           ; BSR set to: 1
 27680  00B02C  0101               	movlb	1	; () banked
 27681  00B02E  90D8               	bcf	status,0,c
 27682  00B030  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
 27683  00B032  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27684  00B034  0101               	movlb	1	; () banked
 27685  00B036  2B04               	incf	___lwdiv@counter& (0+255),f,b
 27686  00B038                     l17844:
 27687                           
 27688                           ; BSR set to: 1
 27689  00B038  0101               	movlb	1	; () banked
 27690  00B03A  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27691  00B03C  D7F7               	goto	l17842
 27692  00B03E                     l17846:
 27693                           
 27694                           ; BSR set to: 1
 27695  00B03E  0101               	movlb	1	; () banked
 27696  00B040  90D8               	bcf	status,0,c
 27697  00B042  3705               	rlcf	___lwdiv@quotient& (0+255),f,b
 27698  00B044  3706               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27699                           
 27700                           ; BSR set to: 1
 27701  00B046  0101               	movlb	1	; () banked
 27702  00B048  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27703  00B04A  0101               	movlb	1	; () banked
 27704  00B04C  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
 27705  00B04E  0101               	movlb	1	; () banked
 27706  00B050  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27707  00B052  0101               	movlb	1	; () banked
 27708  00B054  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27709  00B056  A0D8               	btfss	status,0,c
 27710  00B058  D00A               	goto	l17854
 27711                           
 27712                           ; BSR set to: 1
 27713  00B05A  0101               	movlb	1	; () banked
 27714  00B05C  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27715  00B05E  0101               	movlb	1	; () banked
 27716  00B060  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
 27717  00B062  0101               	movlb	1	; () banked
 27718  00B064  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27719  00B066  0101               	movlb	1	; () banked
 27720  00B068  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27721                           
 27722                           ; BSR set to: 1
 27723  00B06A  0101               	movlb	1	; () banked
 27724  00B06C  8105               	bsf	___lwdiv@quotient& (0+255),0,b
 27725  00B06E                     l17854:
 27726                           
 27727                           ; BSR set to: 1
 27728  00B06E  0101               	movlb	1	; () banked
 27729  00B070  90D8               	bcf	status,0,c
 27730  00B072  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27731  00B074  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
 27732                           
 27733                           ; BSR set to: 1
 27734  00B076  0101               	movlb	1	; () banked
 27735  00B078  2F04               	decfsz	___lwdiv@counter& (0+255),f,b
 27736  00B07A  D7E1               	goto	l17846
 27737  00B07C                     l2653:
 27738                           
 27739                           ; BSR set to: 1
 27740  00B07C  C105  F100         	movff	___lwdiv@quotient,?___lwdiv
 27741  00B080  C106  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27742                           
 27743                           ; BSR set to: 1
 27744  00B084  0012               	return		;funcret
 27745  00B086                     __end_of___lwdiv:
 27746                           	opt stack 0
 27747                           tblptru	equ	0xFF8
 27748                           tblptrh	equ	0xFF7
 27749                           tblptrl	equ	0xFF6
 27750                           tablat	equ	0xFF5
 27751                           prodh	equ	0xFF4
 27752                           prodl	equ	0xFF3
 27753                           intcon	equ	0xFF2
 27754                           intcon2	equ	0xFF1
 27755                           intcon3	equ	0xFF0
 27756                           indf0	equ	0xFEF
 27757                           postinc0	equ	0xFEE
 27758                           plusw0	equ	0xFEB
 27759                           fsr0h	equ	0xFEA
 27760                           fsr0l	equ	0xFE9
 27761                           wreg	equ	0xFE8
 27762                           indf1	equ	0xFE7
 27763                           postinc1	equ	0xFE6
 27764                           postdec1	equ	0xFE5
 27765                           plusw1	equ	0xFE3
 27766                           fsr1h	equ	0xFE2
 27767                           fsr1l	equ	0xFE1
 27768                           indf2	equ	0xFDF
 27769                           postinc2	equ	0xFDE
 27770                           postdec2	equ	0xFDD
 27771                           plusw2	equ	0xFDB
 27772                           fsr2h	equ	0xFDA
 27773                           fsr2l	equ	0xFD9
 27774                           status	equ	0xFD8
 27775                           
 27776 ;; *************** function ___awdiv *****************
 27777 ;; Defined at:
 27778 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 27779 ;; Parameters:    Size  Location     Type
 27780 ;;  dividend        2    6[BANK1 ] int 
 27781 ;;  divisor         2    8[BANK1 ] int 
 27782 ;; Auto vars:     Size  Location     Type
 27783 ;;  quotient        2   12[BANK1 ] int 
 27784 ;;  sign            1   11[BANK1 ] unsigned char 
 27785 ;;  counter         1   10[BANK1 ] unsigned char 
 27786 ;; Return value:  Size  Location     Type
 27787 ;;                  2    6[BANK1 ] int 
 27788 ;; Registers used:
 27789 ;;		wreg, status,2, status,0
 27790 ;; Tracked objects:
 27791 ;;		On entry : 0/0
 27792 ;;		On exit  : 0/0
 27793 ;;		Unchanged: 0/0
 27794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27795 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27796 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27798 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27799 ;;Total ram usage:        8 bytes
 27800 ;; Hardware stack levels used:    1
 27801 ;; Hardware stack levels required when called:   16
 27802 ;; This function calls:
 27803 ;;		Nothing
 27804 ;; This function is called by:
 27805 ;;		_MiMAC_ChannelAssessment
 27806 ;;		_CTR
 27807 ;;		_CBC_MAC
 27808 ;;		_MiApp_NoiseDetection
 27809 ;; This function uses a non-reentrant model
 27810 ;;
 27811                           
 27812                           	psect	text69
 27813  00A13E                     __ptext69:
 27814                           	opt stack 0
 27815  00A13E                     ___awdiv:
 27816                           	opt stack 7
 27817                           
 27818                           ; BSR set to: 1
 27819                           ;incstack = 0
 27820  00A13E  0E00               	movlw	0
 27821  00A140  0101               	movlb	1	; () banked
 27822  00A142  6F0B               	movwf	___awdiv@sign& (0+255),b
 27823                           
 27824                           ; BSR set to: 1
 27825  00A144  0101               	movlb	1	; () banked
 27826  00A146  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27827  00A148  D008               	goto	l16680
 27828                           
 27829                           ; BSR set to: 1
 27830  00A14A  0101               	movlb	1	; () banked
 27831  00A14C  6D08               	negf	___awdiv@divisor& (0+255),b
 27832  00A14E  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 27833  00A150  B0D8               	btfsc	status,0,c
 27834  00A152  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 27835                           
 27836                           ; BSR set to: 1
 27837  00A154  0E01               	movlw	1
 27838  00A156  0101               	movlb	1	; () banked
 27839  00A158  6F0B               	movwf	___awdiv@sign& (0+255),b
 27840  00A15A                     l16680:
 27841                           
 27842                           ; BSR set to: 1
 27843  00A15A  0101               	movlb	1	; () banked
 27844  00A15C  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 27845  00A15E  D008               	goto	l16686
 27846                           
 27847                           ; BSR set to: 1
 27848  00A160  0101               	movlb	1	; () banked
 27849  00A162  6D06               	negf	___awdiv@dividend& (0+255),b
 27850  00A164  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 27851  00A166  B0D8               	btfsc	status,0,c
 27852  00A168  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 27853                           
 27854                           ; BSR set to: 1
 27855  00A16A  0E01               	movlw	1
 27856  00A16C  0101               	movlb	1	; () banked
 27857  00A16E  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 27858  00A170                     l16686:
 27859                           
 27860                           ; BSR set to: 1
 27861  00A170  0E00               	movlw	0
 27862  00A172  0101               	movlb	1	; () banked
 27863  00A174  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 27864  00A176  0E00               	movlw	0
 27865  00A178  6F0C               	movwf	___awdiv@quotient& (0+255),b
 27866                           
 27867                           ; BSR set to: 1
 27868  00A17A  0101               	movlb	1	; () banked
 27869  00A17C  5108               	movf	___awdiv@divisor& (0+255),w,b
 27870  00A17E  0101               	movlb	1	; () banked
 27871  00A180  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 27872  00A182  B4D8               	btfsc	status,2,c
 27873  00A184  D02C               	goto	l16708
 27874                           
 27875                           ; BSR set to: 1
 27876  00A186  0E01               	movlw	1
 27877  00A188  0101               	movlb	1	; () banked
 27878  00A18A  6F0A               	movwf	___awdiv@counter& (0+255),b
 27879  00A18C  D006               	goto	l16694
 27880  00A18E                     l16692:
 27881                           
 27882                           ; BSR set to: 1
 27883  00A18E  0101               	movlb	1	; () banked
 27884  00A190  90D8               	bcf	status,0,c
 27885  00A192  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 27886  00A194  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 27887  00A196  0101               	movlb	1	; () banked
 27888  00A198  2B0A               	incf	___awdiv@counter& (0+255),f,b
 27889  00A19A                     l16694:
 27890                           
 27891                           ; BSR set to: 1
 27892  00A19A  0101               	movlb	1	; () banked
 27893  00A19C  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27894  00A19E  D7F7               	goto	l16692
 27895  00A1A0                     l16696:
 27896                           
 27897                           ; BSR set to: 1
 27898  00A1A0  0101               	movlb	1	; () banked
 27899  00A1A2  90D8               	bcf	status,0,c
 27900  00A1A4  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 27901  00A1A6  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 27902                           
 27903                           ; BSR set to: 1
 27904  00A1A8  0101               	movlb	1	; () banked
 27905  00A1AA  5108               	movf	___awdiv@divisor& (0+255),w,b
 27906  00A1AC  0101               	movlb	1	; () banked
 27907  00A1AE  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 27908  00A1B0  0101               	movlb	1	; () banked
 27909  00A1B2  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27910  00A1B4  0101               	movlb	1	; () banked
 27911  00A1B6  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 27912  00A1B8  A0D8               	btfss	status,0,c
 27913  00A1BA  D00A               	goto	l16704
 27914                           
 27915                           ; BSR set to: 1
 27916  00A1BC  0101               	movlb	1	; () banked
 27917  00A1BE  5108               	movf	___awdiv@divisor& (0+255),w,b
 27918  00A1C0  0101               	movlb	1	; () banked
 27919  00A1C2  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 27920  00A1C4  0101               	movlb	1	; () banked
 27921  00A1C6  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27922  00A1C8  0101               	movlb	1	; () banked
 27923  00A1CA  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 27924                           
 27925                           ; BSR set to: 1
 27926  00A1CC  0101               	movlb	1	; () banked
 27927  00A1CE  810C               	bsf	___awdiv@quotient& (0+255),0,b
 27928  00A1D0                     l16704:
 27929                           
 27930                           ; BSR set to: 1
 27931  00A1D0  0101               	movlb	1	; () banked
 27932  00A1D2  90D8               	bcf	status,0,c
 27933  00A1D4  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 27934  00A1D6  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 27935                           
 27936                           ; BSR set to: 1
 27937  00A1D8  0101               	movlb	1	; () banked
 27938  00A1DA  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 27939  00A1DC  D7E1               	goto	l16696
 27940  00A1DE                     l16708:
 27941                           
 27942                           ; BSR set to: 1
 27943  00A1DE  0101               	movlb	1	; () banked
 27944  00A1E0  510B               	movf	___awdiv@sign& (0+255),w,b
 27945  00A1E2  0101               	movlb	1	; () banked
 27946  00A1E4  B4D8               	btfsc	status,2,c
 27947  00A1E6  D005               	goto	l16712
 27948                           
 27949                           ; BSR set to: 1
 27950  00A1E8  0101               	movlb	1	; () banked
 27951  00A1EA  6D0C               	negf	___awdiv@quotient& (0+255),b
 27952  00A1EC  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 27953  00A1EE  B0D8               	btfsc	status,0,c
 27954  00A1F0  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 27955  00A1F2                     l16712:
 27956                           
 27957                           ; BSR set to: 1
 27958  00A1F2  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 27959  00A1F6  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 27960  00A1FA  0012               	return	
 27961  00A1FC                     __end_of___awdiv:
 27962                           	opt stack 0
 27963                           tblptru	equ	0xFF8
 27964                           tblptrh	equ	0xFF7
 27965                           tblptrl	equ	0xFF6
 27966                           tablat	equ	0xFF5
 27967                           prodh	equ	0xFF4
 27968                           prodl	equ	0xFF3
 27969                           intcon	equ	0xFF2
 27970                           intcon2	equ	0xFF1
 27971                           intcon3	equ	0xFF0
 27972                           indf0	equ	0xFEF
 27973                           postinc0	equ	0xFEE
 27974                           plusw0	equ	0xFEB
 27975                           fsr0h	equ	0xFEA
 27976                           fsr0l	equ	0xFE9
 27977                           wreg	equ	0xFE8
 27978                           indf1	equ	0xFE7
 27979                           postinc1	equ	0xFE6
 27980                           postdec1	equ	0xFE5
 27981                           plusw1	equ	0xFE3
 27982                           fsr1h	equ	0xFE2
 27983                           fsr1l	equ	0xFE1
 27984                           indf2	equ	0xFDF
 27985                           postinc2	equ	0xFDE
 27986                           postdec2	equ	0xFDD
 27987                           plusw2	equ	0xFDB
 27988                           fsr2h	equ	0xFDA
 27989                           fsr2l	equ	0xFD9
 27990                           status	equ	0xFD8
 27991                           
 27992 ;; *************** function _RegisterRead *****************
 27993 ;; Defined at:
 27994 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27995 ;; Parameters:    Size  Location     Type
 27996 ;;  address         1    wreg     unsigned char 
 27997 ;; Auto vars:     Size  Location     Type
 27998 ;;  address         1    5[BANK1 ] unsigned char 
 27999 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 28000 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 28001 ;;  value           1    2[BANK1 ] unsigned char 
 28002 ;; Return value:  Size  Location     Type
 28003 ;;                  1    wreg      unsigned char 
 28004 ;; Registers used:
 28005 ;;		wreg, status,2, status,0, cstack
 28006 ;; Tracked objects:
 28007 ;;		On entry : 0/0
 28008 ;;		On exit  : 0/0
 28009 ;;		Unchanged: 0/0
 28010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28012 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28014 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28015 ;;Total ram usage:        4 bytes
 28016 ;; Hardware stack levels used:    1
 28017 ;; Hardware stack levels required when called:   18
 28018 ;; This function calls:
 28019 ;;		_SPIGet
 28020 ;;		_SPIPut
 28021 ;; This function is called by:
 28022 ;;		_TxPacket
 28023 ;;		_MiMAC_ChannelAssessment
 28024 ;;		_getReceiverBW
 28025 ;; This function uses a non-reentrant model
 28026 ;;
 28027                           
 28028                           	psect	text70
 28029  00B506                     __ptext70:
 28030                           	opt stack 0
 28031  00B506                     _RegisterRead:
 28032                           	opt stack 6
 28033                           
 28034                           ; BSR set to: 1
 28035                           ;incstack = 0
 28036                           ;RegisterRead@address stored from wreg
 28037  00B506  0101               	movlb	1	; () banked
 28038  00B508  6F05               	movwf	RegisterRead@address& (0+255),b
 28039                           
 28040                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 28041                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 28042  00B50A  0E00               	movlw	0
 28043  00B50C  B6F0               	btfsc	intcon3,3,c	;volatile
 28044  00B50E  0E01               	movlw	1
 28045  00B510  0101               	movlb	1	; () banked
 28046  00B512  6F03               	movwf	RegisterRead@IRQ1select& (0+255),b
 28047                           
 28048                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 28049  00B514  0E00               	movlw	0
 28050  00B516  B8F2               	btfsc	intcon,4,c	;volatile
 28051  00B518  0E01               	movlw	1
 28052  00B51A  0101               	movlb	1	; () banked
 28053  00B51C  6F04               	movwf	RegisterRead@IRQ0select& (0+255),b
 28054                           
 28055                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 28056  00B51E  98F2               	bcf	intcon,4,c	;volatile
 28057                           
 28058                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 28059  00B520  96F0               	bcf	intcon3,3,c	;volatile
 28060                           
 28061                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 28062  00B522  968A               	bcf	3978,3,c	;volatile
 28063                           
 28064                           ; BSR set to: 1
 28065                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 28066  00B524  0101               	movlb	1	; () banked
 28067  00B526  5105               	movf	RegisterRead@address& (0+255),w,b
 28068  00B528  0940               	iorlw	64
 28069  00B52A  0101               	movlb	1	; () banked
 28070  00B52C  6F05               	movwf	RegisterRead@address& (0+255),b
 28071                           
 28072                           ; BSR set to: 1
 28073                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 28074  00B52E  0101               	movlb	1	; () banked
 28075  00B530  5105               	movf	RegisterRead@address& (0+255),w,b
 28076  00B532  EC7D  F05D         	call	_SPIPut
 28077                           
 28078                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 28079  00B536  ECC9  F05D         	call	_SPIGet	;wreg free
 28080  00B53A  0101               	movlb	1	; () banked
 28081  00B53C  6F02               	movwf	RegisterRead@value& (0+255),b
 28082                           
 28083                           ; BSR set to: 1
 28084                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 28085  00B53E  868A               	bsf	3978,3,c	;volatile
 28086                           
 28087                           ; BSR set to: 1
 28088                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 28089  00B540  0101               	movlb	1	; () banked
 28090  00B542  B103               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 28091  00B544  D002               	bra	u18155
 28092  00B546  96F0               	bcf	intcon3,3,c	;volatile
 28093  00B548  D001               	bra	u18156
 28094  00B54A                     u18155:
 28095  00B54A  86F0               	bsf	intcon3,3,c	;volatile
 28096  00B54C                     u18156:
 28097                           
 28098                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 28099  00B54C  0101               	movlb	1	; () banked
 28100  00B54E  B104               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 28101  00B550  D002               	bra	u18165
 28102  00B552  98F2               	bcf	intcon,4,c	;volatile
 28103  00B554  D001               	bra	u18166
 28104  00B556                     u18165:
 28105  00B556  88F2               	bsf	intcon,4,c	;volatile
 28106  00B558                     u18166:
 28107                           
 28108                           ;drv_mrf_miwi_89xa.c: 222: return value;
 28109  00B558  0101               	movlb	1	; () banked
 28110  00B55A  5102               	movf	RegisterRead@value& (0+255),w,b
 28111  00B55C  0012               	return	
 28112  00B55E                     __end_of_RegisterRead:
 28113                           	opt stack 0
 28114                           tblptru	equ	0xFF8
 28115                           tblptrh	equ	0xFF7
 28116                           tblptrl	equ	0xFF6
 28117                           tablat	equ	0xFF5
 28118                           prodh	equ	0xFF4
 28119                           prodl	equ	0xFF3
 28120                           intcon	equ	0xFF2
 28121                           intcon2	equ	0xFF1
 28122                           intcon3	equ	0xFF0
 28123                           indf0	equ	0xFEF
 28124                           postinc0	equ	0xFEE
 28125                           plusw0	equ	0xFEB
 28126                           fsr0h	equ	0xFEA
 28127                           fsr0l	equ	0xFE9
 28128                           wreg	equ	0xFE8
 28129                           indf1	equ	0xFE7
 28130                           postinc1	equ	0xFE6
 28131                           postdec1	equ	0xFE5
 28132                           plusw1	equ	0xFE3
 28133                           fsr1h	equ	0xFE2
 28134                           fsr1l	equ	0xFE1
 28135                           indf2	equ	0xFDF
 28136                           postinc2	equ	0xFDE
 28137                           postdec2	equ	0xFDD
 28138                           plusw2	equ	0xFDB
 28139                           fsr2h	equ	0xFDA
 28140                           fsr2l	equ	0xFD9
 28141                           status	equ	0xFD8
 28142                           
 28143 ;; *************** function _SPIGet *****************
 28144 ;; Defined at:
 28145 ;;		line 104 in file "src/18F27J53/spi.c"
 28146 ;; Parameters:    Size  Location     Type
 28147 ;;		None
 28148 ;; Auto vars:     Size  Location     Type
 28149 ;;		None
 28150 ;; Return value:  Size  Location     Type
 28151 ;;                  1    wreg      unsigned char 
 28152 ;; Registers used:
 28153 ;;		wreg, status,2, cstack
 28154 ;; Tracked objects:
 28155 ;;		On entry : 0/0
 28156 ;;		On exit  : 0/0
 28157 ;;		Unchanged: 0/0
 28158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28163 ;;Total ram usage:        0 bytes
 28164 ;; Hardware stack levels used:    1
 28165 ;; Hardware stack levels required when called:   17
 28166 ;; This function calls:
 28167 ;;		_SPIPut
 28168 ;; This function is called by:
 28169 ;;		_RegisterRead
 28170 ;; This function uses a non-reentrant model
 28171 ;;
 28172                           
 28173                           	psect	text71
 28174  00BB92                     __ptext71:
 28175                           	opt stack 0
 28176  00BB92                     _SPIGet:
 28177                           	opt stack 6
 28178                           
 28179                           ;spi.c: 128: SPIPut(0x00);
 28180                           
 28181                           ; BSR set to: 1
 28182                           ;incstack = 0
 28183  00BB92  0E00               	movlw	0
 28184  00BB94  EC7D  F05D         	call	_SPIPut
 28185                           
 28186                           ;spi.c: 129: return SSP2BUF;
 28187  00BB98  5075               	movf	3957,w,c	;volatile
 28188  00BB9A  0012               	return	
 28189  00BB9C                     __end_of_SPIGet:
 28190                           	opt stack 0
 28191                           tblptru	equ	0xFF8
 28192                           tblptrh	equ	0xFF7
 28193                           tblptrl	equ	0xFF6
 28194                           tablat	equ	0xFF5
 28195                           prodh	equ	0xFF4
 28196                           prodl	equ	0xFF3
 28197                           intcon	equ	0xFF2
 28198                           intcon2	equ	0xFF1
 28199                           intcon3	equ	0xFF0
 28200                           indf0	equ	0xFEF
 28201                           postinc0	equ	0xFEE
 28202                           plusw0	equ	0xFEB
 28203                           fsr0h	equ	0xFEA
 28204                           fsr0l	equ	0xFE9
 28205                           wreg	equ	0xFE8
 28206                           indf1	equ	0xFE7
 28207                           postinc1	equ	0xFE6
 28208                           postdec1	equ	0xFE5
 28209                           plusw1	equ	0xFE3
 28210                           fsr1h	equ	0xFE2
 28211                           fsr1l	equ	0xFE1
 28212                           indf2	equ	0xFDF
 28213                           postinc2	equ	0xFDE
 28214                           postdec2	equ	0xFDD
 28215                           plusw2	equ	0xFDB
 28216                           fsr2h	equ	0xFDA
 28217                           fsr2l	equ	0xFD9
 28218                           status	equ	0xFD8
 28219                           
 28220 ;; *************** function _MiApp_ProtocolInit *****************
 28221 ;; Defined at:
 28222 ;;		line 3564 in file "src/miwi/miwi_mesh.c"
 28223 ;; Parameters:    Size  Location     Type
 28224 ;;  bNetworkFree    1    wreg     unsigned char 
 28225 ;; Auto vars:     Size  Location     Type
 28226 ;;  bNetworkFree    1   23[BANK1 ] unsigned char 
 28227 ;;  MIP             3   24[BANK1 ] struct .
 28228 ;;  i               1   27[BANK1 ] unsigned char 
 28229 ;; Return value:  Size  Location     Type
 28230 ;;                  1    wreg      unsigned char 
 28231 ;; Registers used:
 28232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28233 ;; Tracked objects:
 28234 ;;		On entry : 0/0
 28235 ;;		On exit  : 0/0
 28236 ;;		Unchanged: 0/0
 28237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28239 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28240 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28241 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28242 ;;Total ram usage:        6 bytes
 28243 ;; Hardware stack levels used:    1
 28244 ;; Hardware stack levels required when called:   21
 28245 ;; This function calls:
 28246 ;;		_InitSymbolTimer
 28247 ;;		_MiApp_SetChannel
 28248 ;;		_MiMAC_Init
 28249 ;;		_MiMAC_SetAltAddress
 28250 ;; This function is called by:
 28251 ;;		_main
 28252 ;; This function uses a non-reentrant model
 28253 ;;
 28254                           
 28255                           	psect	text72
 28256  007A22                     __ptext72:
 28257                           	opt stack 0
 28258  007A22                     _MiApp_ProtocolInit:
 28259                           	opt stack 9
 28260                           
 28261                           ;incstack = 0
 28262                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 28263  007A22  0101               	movlb	1	; () banked
 28264  007A24  6F17               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 28265                           
 28266                           ;miwi_mesh.c: 3566: MACINIT_PARAM MIP;
 28267                           ;miwi_mesh.c: 3567: uint8_t i;
 28268                           ;miwi_mesh.c: 3602: myShortAddress.Val = 0xFFFF;
 28269  007A26  0101               	movlb	1	; () banked
 28270  007A28  69F2               	setf	_myShortAddress& (0+255),b
 28271  007A2A  69F3               	setf	(_myShortAddress+1)& (0+255),b
 28272                           
 28273                           ; BSR set to: 1
 28274                           ;miwi_mesh.c: 3603: myPANID.Val = 0x1337;
 28275  007A2C  0E13               	movlw	19
 28276  007A2E  0101               	movlb	1	; () banked
 28277  007A30  6FF1               	movwf	(_myPANID+1)& (0+255),b
 28278  007A32  0E37               	movlw	55
 28279  007A34  6FF0               	movwf	_myPANID& (0+255),b
 28280                           
 28281                           ;miwi_mesh.c: 3608: for(i = 0; i < 64; i++)
 28282  007A36  0E00               	movlw	0
 28283  007A38  0101               	movlb	1	; () banked
 28284  007A3A  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28285  007A3C                     l20294:
 28286                           
 28287                           ; BSR set to: 1
 28288  007A3C  0E3F               	movlw	63
 28289  007A3E  0101               	movlb	1	; () banked
 28290  007A40  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28291  007A42  D001               	goto	l20298
 28292  007A44  D012               	goto	l20304
 28293  007A46                     l20298:
 28294                           
 28295                           ; BSR set to: 1
 28296                           ;miwi_mesh.c: 3609: {
 28297                           ;miwi_mesh.c: 3610: ConnectionTable[i].status.Val = 0;
 28298  007A46  0101               	movlb	1	; () banked
 28299  007A48  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28300  007A4A  0D09               	mullw	9
 28301  007A4C  0E08               	movlw	8
 28302  007A4E  26F3               	addwf	prodl,f,c
 28303  007A50  0E00               	movlw	0
 28304  007A52  22F4               	addwfc	prodh,f,c
 28305  007A54  0E00               	movlw	low _ConnectionTable
 28306  007A56  24F3               	addwf	prodl,w,c
 28307  007A58  6ED9               	movwf	fsr2l,c
 28308  007A5A  0E06               	movlw	high _ConnectionTable
 28309  007A5C  20F4               	addwfc	prodh,w,c
 28310  007A5E  6EDA               	movwf	fsr2h,c
 28311  007A60  0E00               	movlw	0
 28312  007A62  6EDF               	movwf	indf2,c
 28313                           
 28314                           ; BSR set to: 1
 28315  007A64  0101               	movlb	1	; () banked
 28316  007A66  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28317  007A68  D7E9               	goto	l20294
 28318  007A6A                     l20304:
 28319                           
 28320                           ; BSR set to: 1
 28321                           ;miwi_mesh.c: 3611: }
 28322                           ;miwi_mesh.c: 3614: for(i=0;i<8;i++)
 28323  007A6A  0E00               	movlw	0
 28324  007A6C  0101               	movlb	1	; () banked
 28325  007A6E  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28326  007A70                     l20306:
 28327                           
 28328                           ; BSR set to: 1
 28329  007A70  0E07               	movlw	7
 28330  007A72  0101               	movlb	1	; () banked
 28331  007A74  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28332  007A76  D001               	goto	l20310
 28333  007A78  D019               	goto	l20316
 28334  007A7A                     l20310:
 28335                           
 28336                           ; BSR set to: 1
 28337                           ;miwi_mesh.c: 3615: {
 28338                           ;miwi_mesh.c: 3616: RoutingTable[i] = 0;
 28339  007A7A  0101               	movlb	1	; () banked
 28340  007A7C  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28341  007A7E  0D01               	mullw	1
 28342  007A80  0E71               	movlw	low _RoutingTable
 28343  007A82  24F3               	addwf	prodl,w,c
 28344  007A84  6ED9               	movwf	fsr2l,c
 28345  007A86  0E00               	movlw	high _RoutingTable
 28346  007A88  20F4               	addwfc	prodh,w,c
 28347  007A8A  6EDA               	movwf	fsr2h,c
 28348  007A8C  0E00               	movlw	0
 28349  007A8E  6EDF               	movwf	indf2,c
 28350                           
 28351                           ;miwi_mesh.c: 3617: RouterFailures[i] = 0;
 28352  007A90  0101               	movlb	1	; () banked
 28353  007A92  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28354  007A94  0D01               	mullw	1
 28355  007A96  0E69               	movlw	low _RouterFailures
 28356  007A98  24F3               	addwf	prodl,w,c
 28357  007A9A  6ED9               	movwf	fsr2l,c
 28358  007A9C  0E00               	movlw	high _RouterFailures
 28359  007A9E  20F4               	addwfc	prodh,w,c
 28360  007AA0  6EDA               	movwf	fsr2h,c
 28361  007AA2  0E00               	movlw	0
 28362  007AA4  6EDF               	movwf	indf2,c
 28363                           
 28364                           ; BSR set to: 1
 28365  007AA6  0101               	movlb	1	; () banked
 28366  007AA8  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28367  007AAA  D7E2               	goto	l20306
 28368  007AAC                     l20316:
 28369                           
 28370                           ; BSR set to: 1
 28371                           ;miwi_mesh.c: 3618: }
 28372                           ;miwi_mesh.c: 3619: knownCoordinators = 0;
 28373  007AAC  0E00               	movlw	0
 28374  007AAE  0101               	movlb	1	; () banked
 28375  007AB0  6FC7               	movwf	_knownCoordinators& (0+255),b
 28376                           
 28377                           ;miwi_mesh.c: 3620: role = 0x00;
 28378  007AB2  0E00               	movlw	0
 28379  007AB4  0101               	movlb	1	; () banked
 28380  007AB6  6FCA               	movwf	_role& (0+255),b
 28381                           
 28382                           ;miwi_mesh.c: 3622: MiWiStateMachine.Val = 0;
 28383  007AB8  0E00               	movlw	0
 28384  007ABA  0101               	movlb	1	; () banked
 28385  007ABC  6FB6               	movwf	(_MiWiStateMachine+1)& (0+255),b
 28386  007ABE  0E00               	movlw	0
 28387  007AC0  6FB5               	movwf	_MiWiStateMachine& (0+255),b
 28388                           
 28389                           ;miwi_mesh.c: 3624: openSocketInfo.status.Val = 0;
 28390  007AC2  0E00               	movlw	0
 28391  007AC4  0101               	movlb	1	; () banked
 28392  007AC6  6FCC               	movwf	_openSocketInfo& (0+255),b
 28393                           
 28394                           ;miwi_mesh.c: 3625: MiWiCapacityInfo.Val = 0;
 28395  007AC8  0E00               	movlw	0
 28396  007ACA  0101               	movlb	1	; () banked
 28397  007ACC  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28398                           
 28399                           ; BSR set to: 1
 28400                           ;miwi_mesh.c: 3627: InitSymbolTimer();
 28401  007ACE  ECA6  F05D         	call	_InitSymbolTimer	;wreg free
 28402                           
 28403                           ;miwi_mesh.c: 3629: TxData = 0;
 28404  007AD2  0E00               	movlw	0
 28405  007AD4  0101               	movlb	1	; () banked
 28406  007AD6  6FC6               	movwf	_TxData& (0+255),b
 28407                           
 28408                           ; BSR set to: 1
 28409                           ;miwi_mesh.c: 3645: for(i = 0; i < 64; i++)
 28410  007AD8  0E00               	movlw	0
 28411  007ADA  0101               	movlb	1	; () banked
 28412  007ADC  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28413  007ADE                     l20324:
 28414                           
 28415                           ; BSR set to: 1
 28416  007ADE  0E3F               	movlw	63
 28417  007AE0  0101               	movlb	1	; () banked
 28418  007AE2  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28419  007AE4  D001               	goto	l20328
 28420  007AE6  D010               	goto	l20334
 28421  007AE8                     l20328:
 28422                           
 28423                           ; BSR set to: 1
 28424                           ;miwi_mesh.c: 3646: {
 28425                           ;miwi_mesh.c: 3647: IncomingFrameCounter[i].Val = 0;
 28426  007AE8  0101               	movlb	1	; () banked
 28427  007AEA  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28428  007AEC  0D04               	mullw	4
 28429  007AEE  0E00               	movlw	low _IncomingFrameCounter
 28430  007AF0  24F3               	addwf	prodl,w,c
 28431  007AF2  6ED9               	movwf	fsr2l,c
 28432  007AF4  0E05               	movlw	high _IncomingFrameCounter
 28433  007AF6  20F4               	addwfc	prodh,w,c
 28434  007AF8  6EDA               	movwf	fsr2h,c
 28435  007AFA  6ADE               	clrf	postinc2,c
 28436  007AFC  6ADE               	clrf	postinc2,c
 28437  007AFE  6ADE               	clrf	postinc2,c
 28438  007B00  6ADD               	clrf	postdec2,c
 28439                           
 28440                           ; BSR set to: 1
 28441  007B02  0101               	movlb	1	; () banked
 28442  007B04  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28443  007B06  D7EB               	goto	l20324
 28444  007B08                     l20334:
 28445                           
 28446                           ; BSR set to: 1
 28447                           ;miwi_mesh.c: 3648: }
 28448                           ;miwi_mesh.c: 3709: MIP.actionFlags.Val = 0;
 28449  007B08  0E00               	movlw	0
 28450  007B0A  0101               	movlb	1	; () banked
 28451  007B0C  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 28452                           
 28453                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.PAddrLength = 4;
 28454  007B0E  0101               	movlb	1	; () banked
 28455  007B10  5118               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 28456  007B12  0B87               	andlw	-121
 28457  007B14  0920               	iorlw	32
 28458  007B16  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 28459                           
 28460                           ; BSR set to: 1
 28461                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.CCAEnable = 1;
 28462  007B18  0101               	movlb	1	; () banked
 28463  007B1A  8318               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 28464                           
 28465                           ; BSR set to: 1
 28466                           ;miwi_mesh.c: 3712: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 28467  007B1C  0101               	movlb	1	; () banked
 28468  007B1E  B117               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 28469  007B20  D003               	bra	u23255
 28470  007B22  0101               	movlb	1	; () banked
 28471  007B24  9518               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 28472  007B26  D002               	bra	u23256
 28473  007B28                     u23255:
 28474  007B28  0101               	movlb	1	; () banked
 28475  007B2A  8518               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 28476  007B2C                     u23256:
 28477                           
 28478                           ; BSR set to: 1
 28479                           ;miwi_mesh.c: 3713: MIP.PAddress = myLongAddress;
 28480  007B2C  0EE8               	movlw	low _myLongAddress
 28481  007B2E  0101               	movlb	1	; () banked
 28482  007B30  6F19               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 28483  007B32  0E01               	movlw	high _myLongAddress
 28484  007B34  0101               	movlb	1	; () banked
 28485  007B36  6F1A               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 28486                           
 28487                           ; BSR set to: 1
 28488                           ;miwi_mesh.c: 3715: MiMAC_Init(MIP);
 28489  007B38  C118  F112         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 28490  007B3C  C119  F113         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 28491  007B40  C11A  F114         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 28492  007B44  ECCF  F041         	call	_MiMAC_Init	;wreg free
 28493                           
 28494                           ;miwi_mesh.c: 3717: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 28495  007B48  0EF2               	movlw	low _myShortAddress
 28496  007B4A  0101               	movlb	1	; () banked
 28497  007B4C  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 28498  007B4E  0E01               	movlw	high _myShortAddress
 28499  007B50  0101               	movlb	1	; () banked
 28500  007B52  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 28501  007B54  0EF0               	movlw	low _myPANID
 28502  007B56  0101               	movlb	1	; () banked
 28503  007B58  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 28504  007B5A  0E01               	movlw	high _myPANID
 28505  007B5C  0101               	movlb	1	; () banked
 28506  007B5E  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 28507  007B60  ECD9  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 28508                           
 28509                           ;miwi_mesh.c: 3718: MiApp_SetChannel(currentChannel);
 28510  007B64  0101               	movlb	1	; () banked
 28511  007B66  51F6               	movf	_currentChannel& (0+255),w,b
 28512  007B68  EC6B  F05D         	call	_MiApp_SetChannel
 28513                           
 28514                           ;miwi_mesh.c: 3723: MiWiCapacityInfo.bits.Sleep = 1;
 28515  007B6C  0101               	movlb	1	; () banked
 28516  007B6E  81C2               	bsf	_MiWiCapacityInfo& (0+255),0,b
 28517                           
 28518                           ; BSR set to: 1
 28519                           ;miwi_mesh.c: 3726: MiWiCapacityInfo.bits.Security = 1;
 28520  007B70  0101               	movlb	1	; () banked
 28521  007B72  87C2               	bsf	_MiWiCapacityInfo& (0+255),3,b
 28522                           
 28523                           ; BSR set to: 1
 28524                           ;miwi_mesh.c: 3728: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 28525  007B74  C1BF  F116         	movff	_ConnMode,??_MiApp_ProtocolInit
 28526  007B78  0101               	movlb	1	; () banked
 28527  007B7A  3B16               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 28528  007B7C  0101               	movlb	1	; () banked
 28529  007B7E  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 28530  007B80  0101               	movlb	1	; () banked
 28531  007B82  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28532  007B84  0BCF               	andlw	-49
 28533  007B86  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28534  007B88  0101               	movlb	1	; () banked
 28535  007B8A  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28536                           
 28537                           ; BSR set to: 1
 28538                           ;miwi_mesh.c: 3730: MiWiCapacityInfo.bits.CoordCap = 1;
 28539  007B8C  0101               	movlb	1	; () banked
 28540  007B8E  8DC2               	bsf	_MiWiCapacityInfo& (0+255),6,b
 28541                           
 28542                           ; BSR set to: 1
 28543                           ;miwi_mesh.c: 3731: MiWiCapacityInfo.bits.Role = role;
 28544  007B90  C1CA  F116         	movff	_role,??_MiApp_ProtocolInit
 28545  007B94  0101               	movlb	1	; () banked
 28546  007B96  4716               	rlncf	??_MiApp_ProtocolInit& (0+255),f,b
 28547  007B98  0101               	movlb	1	; () banked
 28548  007B9A  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 28549  007B9C  0101               	movlb	1	; () banked
 28550  007B9E  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28551  007BA0  0BF9               	andlw	-7
 28552  007BA2  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28553  007BA4  0101               	movlb	1	; () banked
 28554  007BA6  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28555                           
 28556                           ; BSR set to: 1
 28557                           ;miwi_mesh.c: 3743: MiWiSeqNum = TMR1L;
 28558  007BA8  CFCE F1C3          	movff	4046,_MiWiSeqNum	;volatile
 28559                           
 28560                           ; BSR set to: 1
 28561                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IF = 0;
 28562  007BAC  90F0               	bcf	intcon3,0,c	;volatile
 28563                           
 28564                           ; BSR set to: 1
 28565                           ;miwi_mesh.c: 3746: INTCON3bits.INT1IE = 1;
 28566  007BAE  86F0               	bsf	intcon3,3,c	;volatile
 28567  007BB0  0012               	return	
 28568  007BB2                     __end_of_MiApp_ProtocolInit:
 28569                           	opt stack 0
 28570                           tblptru	equ	0xFF8
 28571                           tblptrh	equ	0xFF7
 28572                           tblptrl	equ	0xFF6
 28573                           tablat	equ	0xFF5
 28574                           prodh	equ	0xFF4
 28575                           prodl	equ	0xFF3
 28576                           intcon	equ	0xFF2
 28577                           intcon2	equ	0xFF1
 28578                           intcon3	equ	0xFF0
 28579                           indf0	equ	0xFEF
 28580                           postinc0	equ	0xFEE
 28581                           plusw0	equ	0xFEB
 28582                           fsr0h	equ	0xFEA
 28583                           fsr0l	equ	0xFE9
 28584                           wreg	equ	0xFE8
 28585                           indf1	equ	0xFE7
 28586                           postinc1	equ	0xFE6
 28587                           postdec1	equ	0xFE5
 28588                           plusw1	equ	0xFE3
 28589                           fsr1h	equ	0xFE2
 28590                           fsr1l	equ	0xFE1
 28591                           indf2	equ	0xFDF
 28592                           postinc2	equ	0xFDE
 28593                           postdec2	equ	0xFDD
 28594                           plusw2	equ	0xFDB
 28595                           fsr2h	equ	0xFDA
 28596                           fsr2l	equ	0xFD9
 28597                           status	equ	0xFD8
 28598                           
 28599 ;; *************** function _MiMAC_SetAltAddress *****************
 28600 ;; Defined at:
 28601 ;;		line 438 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28602 ;; Parameters:    Size  Location     Type
 28603 ;;  Address         2    0[BANK1 ] PTR unsigned char 
 28604 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 28605 ;;  PANID           2    2[BANK1 ] PTR unsigned char 
 28606 ;;		 -> myPANID(2), 
 28607 ;; Auto vars:     Size  Location     Type
 28608 ;;		None
 28609 ;; Return value:  Size  Location     Type
 28610 ;;                  1    wreg      unsigned char 
 28611 ;; Registers used:
 28612 ;;		None
 28613 ;; Tracked objects:
 28614 ;;		On entry : 0/0
 28615 ;;		On exit  : 0/0
 28616 ;;		Unchanged: 0/0
 28617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28618 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28621 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28622 ;;Total ram usage:        4 bytes
 28623 ;; Hardware stack levels used:    1
 28624 ;; Hardware stack levels required when called:   16
 28625 ;; This function calls:
 28626 ;;		Nothing
 28627 ;; This function is called by:
 28628 ;;		_MiWiTasks
 28629 ;;		_MiApp_ProtocolInit
 28630 ;;		_MiApp_StartConnection
 28631 ;;		_MiApp_EstablishConnection
 28632 ;;		_MiApp_RemoveConnection
 28633 ;; This function uses a non-reentrant model
 28634 ;;
 28635                           
 28636                           	psect	text73
 28637  00BBB2                     __ptext73:
 28638                           	opt stack 0
 28639  00BBB2                     _MiMAC_SetAltAddress:
 28640                           	opt stack 13
 28641                           
 28642                           ;drv_mrf_miwi_89xa.c: 440: return 0;
 28643                           ;	Return value of _MiMAC_SetAltAddress is never used
 28644                           
 28645                           ; BSR set to: 1
 28646                           ;incstack = 0
 28647  00BBB2  0012               	return		;funcret
 28648  00BBB4                     __end_of_MiMAC_SetAltAddress:
 28649                           	opt stack 0
 28650                           tblptru	equ	0xFF8
 28651                           tblptrh	equ	0xFF7
 28652                           tblptrl	equ	0xFF6
 28653                           tablat	equ	0xFF5
 28654                           prodh	equ	0xFF4
 28655                           prodl	equ	0xFF3
 28656                           intcon	equ	0xFF2
 28657                           intcon2	equ	0xFF1
 28658                           intcon3	equ	0xFF0
 28659                           indf0	equ	0xFEF
 28660                           postinc0	equ	0xFEE
 28661                           plusw0	equ	0xFEB
 28662                           fsr0h	equ	0xFEA
 28663                           fsr0l	equ	0xFE9
 28664                           wreg	equ	0xFE8
 28665                           indf1	equ	0xFE7
 28666                           postinc1	equ	0xFE6
 28667                           postdec1	equ	0xFE5
 28668                           plusw1	equ	0xFE3
 28669                           fsr1h	equ	0xFE2
 28670                           fsr1l	equ	0xFE1
 28671                           indf2	equ	0xFDF
 28672                           postinc2	equ	0xFDE
 28673                           postdec2	equ	0xFDD
 28674                           plusw2	equ	0xFDB
 28675                           fsr2h	equ	0xFDA
 28676                           fsr2l	equ	0xFD9
 28677                           status	equ	0xFD8
 28678                           
 28679 ;; *************** function _MiMAC_Init *****************
 28680 ;; Defined at:
 28681 ;;		line 578 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28682 ;; Parameters:    Size  Location     Type
 28683 ;;  initValue       3   18[BANK1 ] struct .
 28684 ;; Auto vars:     Size  Location     Type
 28685 ;;  i               1   21[BANK1 ] unsigned char 
 28686 ;; Return value:  Size  Location     Type
 28687 ;;                  1    wreg      unsigned char 
 28688 ;; Registers used:
 28689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28690 ;; Tracked objects:
 28691 ;;		On entry : 0/0
 28692 ;;		On exit  : 0/0
 28693 ;;		Unchanged: 0/0
 28694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28695 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28696 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28698 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28699 ;;Total ram usage:        4 bytes
 28700 ;; Hardware stack levels used:    1
 28701 ;; Hardware stack levels required when called:   19
 28702 ;; This function calls:
 28703 ;;		_DELAY_ms
 28704 ;;		_RegisterSet
 28705 ;;		_SetRFMode
 28706 ;; This function is called by:
 28707 ;;		_MiApp_ProtocolInit
 28708 ;; This function uses a non-reentrant model
 28709 ;;
 28710                           
 28711                           	psect	text74
 28712  00839E                     __ptext74:
 28713                           	opt stack 0
 28714  00839E                     _MiMAC_Init:
 28715                           	opt stack 10
 28716                           
 28717                           ;drv_mrf_miwi_89xa.c: 580: uint8_t i;
 28718                           ;drv_mrf_miwi_89xa.c: 582: MACInitParams = initValue;
 28719                           
 28720                           ;incstack = 0
 28721  00839E  C112  F1AA         	movff	MiMAC_Init@initValue,_MACInitParams
 28722  0083A2  C113  F1AB         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 28723  0083A6  C114  F1AC         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 28724                           
 28725                           ;drv_mrf_miwi_89xa.c: 584: DELAY_ms(20);
 28726  0083AA  0E00               	movlw	0
 28727  0083AC  0101               	movlb	1	; () banked
 28728  0083AE  6F0D               	movwf	(DELAY_ms@ms+1)& (0+255),b
 28729  0083B0  0E14               	movlw	20
 28730  0083B2  6F0C               	movwf	DELAY_ms@ms& (0+255),b
 28731  0083B4  EC37  F054         	call	_DELAY_ms	;wreg free
 28732                           
 28733                           ;drv_mrf_miwi_89xa.c: 585: LATBbits.LATB3 = 1;
 28734  0083B8  868A               	bsf	3978,3,c	;volatile
 28735                           
 28736                           ;drv_mrf_miwi_89xa.c: 586: LATCbits.LATC6 = 1;
 28737  0083BA  8C8B               	bsf	3979,6,c	;volatile
 28738                           
 28739                           ;drv_mrf_miwi_89xa.c: 589: MACSeq = TMR1L;
 28740  0083BC  CFCE F1C0          	movff	4046,_MACSeq	;volatile
 28741                           
 28742                           ;drv_mrf_miwi_89xa.c: 590: ReceivedBankIndex = 0xFF;
 28743  0083C0  0101               	movlb	1	; () banked
 28744  0083C2  69C5               	setf	_ReceivedBankIndex& (0+255),b
 28745                           
 28746                           ; BSR set to: 1
 28747                           ;drv_mrf_miwi_89xa.c: 592: for(i = 0; i < 2; i++)
 28748  0083C4  0E00               	movlw	0
 28749  0083C6  0101               	movlb	1	; () banked
 28750  0083C8  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28751  0083CA                     l19018:
 28752                           
 28753                           ; BSR set to: 1
 28754  0083CA  0E01               	movlw	1
 28755  0083CC  0101               	movlb	1	; () banked
 28756  0083CE  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28757  0083D0  D001               	goto	l19022
 28758  0083D2  D00E               	goto	l19028
 28759  0083D4                     l19022:
 28760                           
 28761                           ; BSR set to: 1
 28762                           ;drv_mrf_miwi_89xa.c: 593: {
 28763                           ;drv_mrf_miwi_89xa.c: 594: RxPacket[i].flags.Val = 0;
 28764  0083D4  0101               	movlb	1	; () banked
 28765  0083D6  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28766  0083D8  0D42               	mullw	66
 28767  0083DA  0E00               	movlw	low _RxPacket
 28768  0083DC  24F3               	addwf	prodl,w,c
 28769  0083DE  6ED9               	movwf	fsr2l,c
 28770  0083E0  0E03               	movlw	high _RxPacket
 28771  0083E2  20F4               	addwfc	prodh,w,c
 28772  0083E4  6EDA               	movwf	fsr2h,c
 28773  0083E6  0E00               	movlw	0
 28774  0083E8  6EDF               	movwf	indf2,c
 28775                           
 28776                           ; BSR set to: 1
 28777  0083EA  0101               	movlb	1	; () banked
 28778  0083EC  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28779  0083EE  D7ED               	goto	l19018
 28780  0083F0                     l19028:
 28781                           
 28782                           ; BSR set to: 1
 28783                           ;drv_mrf_miwi_89xa.c: 595: }
 28784                           ;drv_mrf_miwi_89xa.c: 598: for(i = 0; i < 5; i++)
 28785  0083F0  0E00               	movlw	0
 28786  0083F2  0101               	movlb	1	; () banked
 28787  0083F4  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28788  0083F6                     l19030:
 28789                           
 28790                           ; BSR set to: 1
 28791  0083F6  0E04               	movlw	4
 28792  0083F8  0101               	movlb	1	; () banked
 28793  0083FA  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28794  0083FC  D001               	goto	l19034
 28795  0083FE  D00E               	goto	l19040
 28796  008400                     l19034:
 28797                           
 28798                           ; BSR set to: 1
 28799                           ;drv_mrf_miwi_89xa.c: 599: {
 28800                           ;drv_mrf_miwi_89xa.c: 600: AckInfo[i].Valid = FALSE;
 28801  008400  0101               	movlb	1	; () banked
 28802  008402  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28803  008404  0D06               	mullw	6
 28804  008406  0E48               	movlw	low _AckInfo
 28805  008408  24F3               	addwf	prodl,w,c
 28806  00840A  6ED9               	movwf	fsr2l,c
 28807  00840C  0E02               	movlw	high _AckInfo
 28808  00840E  20F4               	addwfc	prodh,w,c
 28809  008410  6EDA               	movwf	fsr2h,c
 28810  008412  0E00               	movlw	0
 28811  008414  6EDF               	movwf	indf2,c
 28812                           
 28813                           ; BSR set to: 1
 28814  008416  0101               	movlb	1	; () banked
 28815  008418  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28816  00841A  D7ED               	goto	l19030
 28817  00841C                     l19040:
 28818                           
 28819                           ; BSR set to: 1
 28820                           ;drv_mrf_miwi_89xa.c: 601: }
 28821                           ;drv_mrf_miwi_89xa.c: 619: OutgoingFrameCounter.Val = 1;
 28822  00841C  0E01               	movlw	1
 28823  00841E  0101               	movlb	1	; () banked
 28824  008420  6FA2               	movwf	_OutgoingFrameCounter& (0+255),b
 28825  008422  0E00               	movlw	0
 28826  008424  6FA3               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 28827  008426  0E00               	movlw	0
 28828  008428  6FA4               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 28829  00842A  0E00               	movlw	0
 28830  00842C  6FA5               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 28831                           
 28832                           ;drv_mrf_miwi_89xa.c: 621: for(i = 0; i < 8; i++)
 28833  00842E  0E00               	movlw	0
 28834  008430  0101               	movlb	1	; () banked
 28835  008432  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28836  008434                     l19042:
 28837                           
 28838                           ; BSR set to: 1
 28839  008434  0E07               	movlw	7
 28840  008436  0101               	movlb	1	; () banked
 28841  008438  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28842  00843A  D001               	goto	l19046
 28843  00843C  D017               	goto	l19052
 28844  00843E                     l19046:
 28845                           
 28846                           ; BSR set to: 1
 28847                           ;drv_mrf_miwi_89xa.c: 622: {
 28848                           ;drv_mrf_miwi_89xa.c: 623: key[i] = mySecurityKey[i];
 28849  00843E  0101               	movlb	1	; () banked
 28850  008440  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28851  008442  0D01               	mullw	1
 28852  008444  0E79               	movlw	low _mySecurityKey
 28853  008446  24F3               	addwf	prodl,w,c
 28854  008448  6ED9               	movwf	fsr2l,c
 28855  00844A  0E00               	movlw	high _mySecurityKey
 28856  00844C  20F4               	addwfc	prodh,w,c
 28857  00844E  6EDA               	movwf	fsr2h,c
 28858  008450  0101               	movlb	1	; () banked
 28859  008452  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28860  008454  0D01               	mullw	1
 28861  008456  0EF1               	movlw	low _key
 28862  008458  24F3               	addwf	prodl,w,c
 28863  00845A  6EE1               	movwf	fsr1l,c
 28864  00845C  0E02               	movlw	high _key
 28865  00845E  20F4               	addwfc	prodh,w,c
 28866  008460  6EE2               	movwf	fsr1h,c
 28867  008462  CFDF FFE7          	movff	indf2,indf1
 28868                           
 28869                           ; BSR set to: 1
 28870  008466  0101               	movlb	1	; () banked
 28871  008468  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28872  00846A  D7E4               	goto	l19042
 28873  00846C                     l19052:
 28874                           
 28875                           ; BSR set to: 1
 28876                           ;drv_mrf_miwi_89xa.c: 624: }
 28877                           ;drv_mrf_miwi_89xa.c: 628: for (i = 0 ; i <= 31; i++)
 28878  00846C  0E00               	movlw	0
 28879  00846E  0101               	movlb	1	; () banked
 28880  008470  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28881  008472                     l19054:
 28882                           
 28883                           ; BSR set to: 1
 28884  008472  0E1F               	movlw	31
 28885  008474  0101               	movlb	1	; () banked
 28886  008476  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28887  008478  D001               	goto	l19058
 28888  00847A  D017               	goto	l19064
 28889  00847C                     l19058:
 28890                           
 28891                           ; BSR set to: 1
 28892                           ;drv_mrf_miwi_89xa.c: 629: {
 28893                           ;drv_mrf_miwi_89xa.c: 630: RegisterSet(InitConfigRegs[i]);
 28894  00847C  0101               	movlb	1	; () banked
 28895  00847E  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28896  008480  0D02               	mullw	2
 28897  008482  0EF5               	movlw	low _InitConfigRegs
 28898  008484  24F3               	addwf	prodl,w,c
 28899  008486  6EF6               	movwf	tblptrl,c
 28900  008488  0E1F               	movlw	high _InitConfigRegs
 28901  00848A  20F4               	addwfc	prodh,w,c
 28902  00848C  6EF7               	movwf	tblptrh,c
 28903  00848E                     	if	1	;There are 3 active tblptr bytes
 28904  00848E  6AF8               	clrf	tblptru,c
 28905  008490  0E00               	movlw	low (__mediumconst shr (0+16))
 28906  008492  22F8               	addwfc	tblptru,f,c
 28907  008494                     	endif
 28908  008494  0009               	tblrd		*+
 28909  008496  CFF5 F102          	movff	tablat,RegisterSet@setting
 28910  00849A  000A               	tblrd		*-
 28911  00849C  CFF5 F103          	movff	tablat,RegisterSet@setting+1
 28912  0084A0  EC04  F05B         	call	_RegisterSet	;wreg free
 28913  0084A4  0101               	movlb	1	; () banked
 28914  0084A6  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28915  0084A8  D7E4               	goto	l19054
 28916  0084AA                     l19064:
 28917                           
 28918                           ; BSR set to: 1
 28919                           ;drv_mrf_miwi_89xa.c: 631: }
 28920                           ;drv_mrf_miwi_89xa.c: 632: SetRFMode(0x20);
 28921  0084AA  0E20               	movlw	32
 28922  0084AC  ECC9  F055         	call	_SetRFMode
 28923                           
 28924                           ;drv_mrf_miwi_89xa.c: 634: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 28925  0084B0  0E00               	movlw	0
 28926  0084B2  0101               	movlb	1	; () banked
 28927  0084B4  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 28928  0084B6  0E56               	movlw	86
 28929  0084B8  6F02               	movwf	RegisterSet@setting& (0+255),b
 28930  0084BA  EC04  F05B         	call	_RegisterSet	;wreg free
 28931                           
 28932                           ;drv_mrf_miwi_89xa.c: 635: SetRFMode(0x40);
 28933  0084BE  0E40               	movlw	64
 28934  0084C0  ECC9  F055         	call	_SetRFMode
 28935                           
 28936                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 28937  0084C4  0E1C               	movlw	28
 28938  0084C6  0101               	movlb	1	; () banked
 28939  0084C8  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 28940  0084CA  0E0F               	movlw	15
 28941  0084CC  6F02               	movwf	RegisterSet@setting& (0+255),b
 28942  0084CE  EC04  F05B         	call	_RegisterSet	;wreg free
 28943                           
 28944                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x60);
 28945  0084D2  0E60               	movlw	96
 28946  0084D4  ECC9  F055         	call	_SetRFMode
 28947                           
 28948                           ;drv_mrf_miwi_89xa.c: 643: INTCONbits.INT0IF = 0;
 28949  0084D8  92F2               	bcf	intcon,1,c	;volatile
 28950                           
 28951                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IE = 1;
 28952  0084DA  88F2               	bsf	intcon,4,c	;volatile
 28953                           
 28954                           ;drv_mrf_miwi_89xa.c: 646: INTCON3bits.INT1IF = 0;
 28955  0084DC  90F0               	bcf	intcon3,0,c	;volatile
 28956                           
 28957                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IE = 1;
 28958  0084DE  86F0               	bsf	intcon3,3,c	;volatile
 28959  0084E0  0012               	return	
 28960  0084E2                     __end_of_MiMAC_Init:
 28961                           	opt stack 0
 28962                           tblptru	equ	0xFF8
 28963                           tblptrh	equ	0xFF7
 28964                           tblptrl	equ	0xFF6
 28965                           tablat	equ	0xFF5
 28966                           prodh	equ	0xFF4
 28967                           prodl	equ	0xFF3
 28968                           intcon	equ	0xFF2
 28969                           intcon2	equ	0xFF1
 28970                           intcon3	equ	0xFF0
 28971                           indf0	equ	0xFEF
 28972                           postinc0	equ	0xFEE
 28973                           plusw0	equ	0xFEB
 28974                           fsr0h	equ	0xFEA
 28975                           fsr0l	equ	0xFE9
 28976                           wreg	equ	0xFE8
 28977                           indf1	equ	0xFE7
 28978                           postinc1	equ	0xFE6
 28979                           postdec1	equ	0xFE5
 28980                           plusw1	equ	0xFE3
 28981                           fsr1h	equ	0xFE2
 28982                           fsr1l	equ	0xFE1
 28983                           indf2	equ	0xFDF
 28984                           postinc2	equ	0xFDE
 28985                           postdec2	equ	0xFDD
 28986                           plusw2	equ	0xFDB
 28987                           fsr2h	equ	0xFDA
 28988                           fsr2l	equ	0xFD9
 28989                           status	equ	0xFD8
 28990                           
 28991 ;; *************** function _DELAY_ms *****************
 28992 ;; Defined at:
 28993 ;;		line 108 in file "src/18F27J53/delay.c"
 28994 ;; Parameters:    Size  Location     Type
 28995 ;;  ms              2   12[BANK1 ] unsigned int 
 28996 ;; Auto vars:     Size  Location     Type
 28997 ;;  cyclesRequir    4   14[BANK1 ] long 
 28998 ;; Return value:  Size  Location     Type
 28999 ;;		None               void
 29000 ;; Registers used:
 29001 ;;		wreg, status,2, status,0, cstack
 29002 ;; Tracked objects:
 29003 ;;		On entry : 0/0
 29004 ;;		On exit  : 0/0
 29005 ;;		Unchanged: 0/0
 29006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29008 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29010 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29011 ;;Total ram usage:        6 bytes
 29012 ;; Hardware stack levels used:    1
 29013 ;; Hardware stack levels required when called:   17
 29014 ;; This function calls:
 29015 ;;		___lmul
 29016 ;; This function is called by:
 29017 ;;		_MiMAC_Init
 29018 ;;		_MiMAC_PowerState
 29019 ;; This function uses a non-reentrant model
 29020 ;;
 29021                           
 29022                           	psect	text75
 29023  00A86E                     __ptext75:
 29024                           	opt stack 0
 29025  00A86E                     _DELAY_ms:
 29026                           	opt stack 11
 29027                           
 29028                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 29029                           
 29030                           ;incstack = 0
 29031  00A86E  0E00               	movlw	0
 29032  00A870  0101               	movlb	1	; () banked
 29033  00A872  6F0E               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 29034  00A874  0E00               	movlw	0
 29035  00A876  6F0F               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 29036  00A878  0E00               	movlw	0
 29037  00A87A  6F10               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 29038  00A87C  0E00               	movlw	0
 29039  00A87E  6F11               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 29040                           
 29041                           ; BSR set to: 1
 29042                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 29043  00A880  C10C  F100         	movff	DELAY_ms@ms,___lmul@multiplier
 29044  00A884  C10D  F101         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 29045  00A888  0101               	movlb	1	; () banked
 29046  00A88A  6B02               	clrf	(___lmul@multiplier+2)& (0+255),b
 29047  00A88C  6B03               	clrf	(___lmul@multiplier+3)& (0+255),b
 29048  00A88E  0EA0               	movlw	160
 29049  00A890  0101               	movlb	1	; () banked
 29050  00A892  6F04               	movwf	___lmul@multiplicand& (0+255),b
 29051  00A894  0E0F               	movlw	15
 29052  00A896  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29053  00A898  0E00               	movlw	0
 29054  00A89A  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29055  00A89C  0E00               	movlw	0
 29056  00A89E  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29057  00A8A0  EC43  F058         	call	___lmul	;wreg free
 29058  00A8A4  C100  F10E         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 29059  00A8A8  C101  F10F         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 29060  00A8AC  C102  F110         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 29061  00A8B0  C103  F111         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 29062                           
 29063                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 29064  00A8B4  0E56               	movlw	86
 29065  00A8B6  0101               	movlb	1	; () banked
 29066  00A8B8  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 29067  00A8BA  0EFF               	movlw	255
 29068  00A8BC  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 29069  00A8BE  0EFF               	movlw	255
 29070  00A8C0  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 29071  00A8C2  0EFF               	movlw	255
 29072  00A8C4  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 29073                           
 29074                           ; BSR set to: 1
 29075                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 29076  00A8C6  0101               	movlb	1	; () banked
 29077  00A8C8  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 29078  00A8CA  0012               	return	
 29079  00A8CC  0101               	movlb	1	; () banked
 29080  00A8CE  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 29081  00A8D0  0101               	movlb	1	; () banked
 29082  00A8D2  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 29083  00A8D4  0101               	movlb	1	; () banked
 29084  00A8D6  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 29085  00A8D8  E110               	bnz	l18
 29086  00A8DA  0EC4               	movlw	196
 29087  00A8DC  0101               	movlb	1	; () banked
 29088  00A8DE  5D0E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 29089  00A8E0  A0D8               	btfss	status,0,c
 29090  00A8E2  0012               	return	
 29091  00A8E4  D00A               	goto	l18
 29092  00A8E6                     l19:
 29093                           
 29094                           ; BSR set to: 1
 29095                           ;delay.c: 126: {
 29096                           ;delay.c: 127: __nop();
 29097  00A8E6  F000               	nop	
 29098                           
 29099                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 29100  00A8E8  0ED9               	movlw	217
 29101  00A8EA  0101               	movlb	1	; () banked
 29102  00A8EC  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 29103  00A8EE  0EFF               	movlw	255
 29104  00A8F0  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 29105  00A8F2  0EFF               	movlw	255
 29106  00A8F4  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 29107  00A8F6  0EFF               	movlw	255
 29108  00A8F8  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 29109  00A8FA                     l18:
 29110                           
 29111                           ; BSR set to: 1
 29112  00A8FA  0101               	movlb	1	; () banked
 29113  00A8FC  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 29114  00A8FE  0012               	return	
 29115  00A900  0101               	movlb	1	; () banked
 29116  00A902  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 29117  00A904  0101               	movlb	1	; () banked
 29118  00A906  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 29119  00A908  0101               	movlb	1	; () banked
 29120  00A90A  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 29121  00A90C  E1EC               	bnz	l19
 29122  00A90E  0101               	movlb	1	; () banked
 29123  00A910  050E               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 29124  00A912  A0D8               	btfss	status,0,c
 29125  00A914  0012               	return	
 29126  00A916  D7E7               	goto	l19
 29127  00A918                     __end_of_DELAY_ms:
 29128                           	opt stack 0
 29129                           tblptru	equ	0xFF8
 29130                           tblptrh	equ	0xFF7
 29131                           tblptrl	equ	0xFF6
 29132                           tablat	equ	0xFF5
 29133                           prodh	equ	0xFF4
 29134                           prodl	equ	0xFF3
 29135                           intcon	equ	0xFF2
 29136                           intcon2	equ	0xFF1
 29137                           intcon3	equ	0xFF0
 29138                           indf0	equ	0xFEF
 29139                           postinc0	equ	0xFEE
 29140                           plusw0	equ	0xFEB
 29141                           fsr0h	equ	0xFEA
 29142                           fsr0l	equ	0xFE9
 29143                           wreg	equ	0xFE8
 29144                           indf1	equ	0xFE7
 29145                           postinc1	equ	0xFE6
 29146                           postdec1	equ	0xFE5
 29147                           plusw1	equ	0xFE3
 29148                           fsr1h	equ	0xFE2
 29149                           fsr1l	equ	0xFE1
 29150                           indf2	equ	0xFDF
 29151                           postinc2	equ	0xFDE
 29152                           postdec2	equ	0xFDD
 29153                           plusw2	equ	0xFDB
 29154                           fsr2h	equ	0xFDA
 29155                           fsr2l	equ	0xFD9
 29156                           status	equ	0xFD8
 29157                           
 29158 ;; *************** function ___lmul *****************
 29159 ;; Defined at:
 29160 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 29161 ;; Parameters:    Size  Location     Type
 29162 ;;  multiplier      4    0[BANK1 ] unsigned long 
 29163 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 29164 ;; Auto vars:     Size  Location     Type
 29165 ;;  product         4    8[BANK1 ] unsigned long 
 29166 ;; Return value:  Size  Location     Type
 29167 ;;                  4    0[BANK1 ] unsigned long 
 29168 ;; Registers used:
 29169 ;;		wreg, status,2, status,0
 29170 ;; Tracked objects:
 29171 ;;		On entry : 0/0
 29172 ;;		On exit  : 0/0
 29173 ;;		Unchanged: 0/0
 29174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29175 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29176 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29178 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29179 ;;Total ram usage:       12 bytes
 29180 ;; Hardware stack levels used:    1
 29181 ;; Hardware stack levels required when called:   16
 29182 ;; This function calls:
 29183 ;;		Nothing
 29184 ;; This function is called by:
 29185 ;;		_DELAY_ms
 29186 ;;		_DELAY_10us
 29187 ;; This function uses a non-reentrant model
 29188 ;;
 29189                           
 29190                           	psect	text76
 29191  00B086                     __ptext76:
 29192                           	opt stack 0
 29193  00B086                     ___lmul:
 29194                           	opt stack 11
 29195                           
 29196                           ; BSR set to: 1
 29197                           ;incstack = 0
 29198  00B086  0E00               	movlw	0
 29199  00B088  0101               	movlb	1	; () banked
 29200  00B08A  6F08               	movwf	___lmul@product& (0+255),b
 29201  00B08C  0E00               	movlw	0
 29202  00B08E  6F09               	movwf	(___lmul@product+1)& (0+255),b
 29203  00B090  0E00               	movlw	0
 29204  00B092  6F0A               	movwf	(___lmul@product+2)& (0+255),b
 29205  00B094  0E00               	movlw	0
 29206  00B096  6F0B               	movwf	(___lmul@product+3)& (0+255),b
 29207  00B098                     l17792:
 29208                           
 29209                           ; BSR set to: 1
 29210  00B098  0101               	movlb	1	; () banked
 29211  00B09A  A100               	btfss	___lmul@multiplier& (0+255),0,b
 29212  00B09C  D010               	goto	l17796
 29213                           
 29214                           ; BSR set to: 1
 29215  00B09E  0101               	movlb	1	; () banked
 29216  00B0A0  5104               	movf	___lmul@multiplicand& (0+255),w,b
 29217  00B0A2  0101               	movlb	1	; () banked
 29218  00B0A4  2708               	addwf	___lmul@product& (0+255),f,b
 29219  00B0A6  0101               	movlb	1	; () banked
 29220  00B0A8  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29221  00B0AA  0101               	movlb	1	; () banked
 29222  00B0AC  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
 29223  00B0AE  0101               	movlb	1	; () banked
 29224  00B0B0  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29225  00B0B2  0101               	movlb	1	; () banked
 29226  00B0B4  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
 29227  00B0B6  0101               	movlb	1	; () banked
 29228  00B0B8  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29229  00B0BA  0101               	movlb	1	; () banked
 29230  00B0BC  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
 29231  00B0BE                     l17796:
 29232                           
 29233                           ; BSR set to: 1
 29234  00B0BE  0101               	movlb	1	; () banked
 29235  00B0C0  90D8               	bcf	status,0,c
 29236  00B0C2  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
 29237  00B0C4  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29238  00B0C6  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29239  00B0C8  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29240                           
 29241                           ; BSR set to: 1
 29242  00B0CA  0101               	movlb	1	; () banked
 29243  00B0CC  90D8               	bcf	status,0,c
 29244  00B0CE  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29245  00B0D0  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29246  00B0D2  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29247  00B0D4  3300               	rrcf	___lmul@multiplier& (0+255),f,b
 29248  00B0D6  0101               	movlb	1	; () banked
 29249  00B0D8  5100               	movf	___lmul@multiplier& (0+255),w,b
 29250  00B0DA  0101               	movlb	1	; () banked
 29251  00B0DC  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29252  00B0DE  0101               	movlb	1	; () banked
 29253  00B0E0  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29254  00B0E2  0101               	movlb	1	; () banked
 29255  00B0E4  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29256  00B0E6  A4D8               	btfss	status,2,c
 29257  00B0E8  D7D7               	goto	l17792
 29258                           
 29259                           ; BSR set to: 1
 29260  00B0EA  C108  F100         	movff	___lmul@product,?___lmul
 29261  00B0EE  C109  F101         	movff	___lmul@product+1,?___lmul+1
 29262  00B0F2  C10A  F102         	movff	___lmul@product+2,?___lmul+2
 29263  00B0F6  C10B  F103         	movff	___lmul@product+3,?___lmul+3
 29264                           
 29265                           ; BSR set to: 1
 29266  00B0FA  0012               	return		;funcret
 29267  00B0FC                     __end_of___lmul:
 29268                           	opt stack 0
 29269                           tblptru	equ	0xFF8
 29270                           tblptrh	equ	0xFF7
 29271                           tblptrl	equ	0xFF6
 29272                           tablat	equ	0xFF5
 29273                           prodh	equ	0xFF4
 29274                           prodl	equ	0xFF3
 29275                           intcon	equ	0xFF2
 29276                           intcon2	equ	0xFF1
 29277                           intcon3	equ	0xFF0
 29278                           indf0	equ	0xFEF
 29279                           postinc0	equ	0xFEE
 29280                           plusw0	equ	0xFEB
 29281                           fsr0h	equ	0xFEA
 29282                           fsr0l	equ	0xFE9
 29283                           wreg	equ	0xFE8
 29284                           indf1	equ	0xFE7
 29285                           postinc1	equ	0xFE6
 29286                           postdec1	equ	0xFE5
 29287                           plusw1	equ	0xFE3
 29288                           fsr1h	equ	0xFE2
 29289                           fsr1l	equ	0xFE1
 29290                           indf2	equ	0xFDF
 29291                           postinc2	equ	0xFDE
 29292                           postdec2	equ	0xFDD
 29293                           plusw2	equ	0xFDB
 29294                           fsr2h	equ	0xFDA
 29295                           fsr2l	equ	0xFD9
 29296                           status	equ	0xFD8
 29297                           
 29298 ;; *************** function _MiApp_SetChannel *****************
 29299 ;; Defined at:
 29300 ;;		line 3868 in file "src/miwi/miwi_mesh.c"
 29301 ;; Parameters:    Size  Location     Type
 29302 ;;  channel         1    wreg     unsigned char 
 29303 ;; Auto vars:     Size  Location     Type
 29304 ;;  channel         1   10[BANK1 ] unsigned char 
 29305 ;; Return value:  Size  Location     Type
 29306 ;;                  1    wreg      unsigned char 
 29307 ;; Registers used:
 29308 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29309 ;; Tracked objects:
 29310 ;;		On entry : 0/0
 29311 ;;		On exit  : 0/0
 29312 ;;		Unchanged: 0/0
 29313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29315 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29317 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29318 ;;Total ram usage:        1 bytes
 29319 ;; Hardware stack levels used:    1
 29320 ;; Hardware stack levels required when called:   20
 29321 ;; This function calls:
 29322 ;;		_MiMAC_SetChannel
 29323 ;; This function is called by:
 29324 ;;		_MiApp_ProtocolInit
 29325 ;;		_MiApp_StartConnection
 29326 ;;		_MiApp_NoiseDetection
 29327 ;;		_main
 29328 ;;		_MiApp_SearchConnection
 29329 ;;		_MiApp_EstablishConnection
 29330 ;; This function uses a non-reentrant model
 29331 ;;
 29332                           
 29333                           	psect	text77
 29334  00BAD6                     __ptext77:
 29335                           	opt stack 0
 29336  00BAD6                     _MiApp_SetChannel:
 29337                           	opt stack 9
 29338                           
 29339                           ; BSR set to: 1
 29340                           ;incstack = 0
 29341                           ;MiApp_SetChannel@channel stored from wreg
 29342  00BAD6  0101               	movlb	1	; () banked
 29343  00BAD8  6F0A               	movwf	MiApp_SetChannel@channel& (0+255),b
 29344                           
 29345                           ;miwi_mesh.c: 3870: if( MiMAC_SetChannel(channel, 0) )
 29346  00BADA  0E00               	movlw	0
 29347  00BADC  0101               	movlb	1	; () banked
 29348  00BADE  6F07               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 29349  00BAE0  0101               	movlb	1	; () banked
 29350  00BAE2  510A               	movf	MiApp_SetChannel@channel& (0+255),w,b
 29351  00BAE4  EC15  F052         	call	_MiMAC_SetChannel
 29352  00BAE8  0900               	iorlw	0
 29353  00BAEA  B4D8               	btfsc	status,2,c
 29354  00BAEC  D004               	goto	l18742
 29355                           
 29356                           ;miwi_mesh.c: 3871: {
 29357                           ;miwi_mesh.c: 3872: currentChannel = channel;
 29358  00BAEE  C10A  F1F6         	movff	MiApp_SetChannel@channel,_currentChannel
 29359                           
 29360                           ;miwi_mesh.c: 3876: return 1;
 29361  00BAF2  0E01               	movlw	1
 29362  00BAF4  0012               	return	
 29363  00BAF6                     l18742:
 29364                           
 29365                           ;miwi_mesh.c: 3877: }
 29366                           ;miwi_mesh.c: 3878: return 0;
 29367  00BAF6  0E00               	movlw	0
 29368  00BAF8  0012               	return	
 29369  00BAFA                     __end_of_MiApp_SetChannel:
 29370                           	opt stack 0
 29371                           tblptru	equ	0xFF8
 29372                           tblptrh	equ	0xFF7
 29373                           tblptrl	equ	0xFF6
 29374                           tablat	equ	0xFF5
 29375                           prodh	equ	0xFF4
 29376                           prodl	equ	0xFF3
 29377                           intcon	equ	0xFF2
 29378                           intcon2	equ	0xFF1
 29379                           intcon3	equ	0xFF0
 29380                           indf0	equ	0xFEF
 29381                           postinc0	equ	0xFEE
 29382                           plusw0	equ	0xFEB
 29383                           fsr0h	equ	0xFEA
 29384                           fsr0l	equ	0xFE9
 29385                           wreg	equ	0xFE8
 29386                           indf1	equ	0xFE7
 29387                           postinc1	equ	0xFE6
 29388                           postdec1	equ	0xFE5
 29389                           plusw1	equ	0xFE3
 29390                           fsr1h	equ	0xFE2
 29391                           fsr1l	equ	0xFE1
 29392                           indf2	equ	0xFDF
 29393                           postinc2	equ	0xFDE
 29394                           postdec2	equ	0xFDD
 29395                           plusw2	equ	0xFDB
 29396                           fsr2h	equ	0xFDA
 29397                           fsr2l	equ	0xFD9
 29398                           status	equ	0xFD8
 29399                           
 29400 ;; *************** function _MiMAC_SetChannel *****************
 29401 ;; Defined at:
 29402 ;;		line 483 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29403 ;; Parameters:    Size  Location     Type
 29404 ;;  channel         1    wreg     unsigned char 
 29405 ;;  offsetFreq      1    7[BANK1 ] unsigned char 
 29406 ;; Auto vars:     Size  Location     Type
 29407 ;;  channel         1    9[BANK1 ] unsigned char 
 29408 ;; Return value:  Size  Location     Type
 29409 ;;                  1    wreg      unsigned char 
 29410 ;; Registers used:
 29411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29412 ;; Tracked objects:
 29413 ;;		On entry : 0/0
 29414 ;;		On exit  : 0/0
 29415 ;;		Unchanged: 0/0
 29416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29417 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29418 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29419 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29420 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29421 ;;Total ram usage:        3 bytes
 29422 ;; Hardware stack levels used:    1
 29423 ;; Hardware stack levels required when called:   19
 29424 ;; This function calls:
 29425 ;;		_RegisterSet
 29426 ;;		_SetRFMode
 29427 ;; This function is called by:
 29428 ;;		_MiApp_SetChannel
 29429 ;; This function uses a non-reentrant model
 29430 ;;
 29431                           
 29432                           	psect	text78
 29433  00A42A                     __ptext78:
 29434                           	opt stack 0
 29435  00A42A                     _MiMAC_SetChannel:
 29436                           	opt stack 9
 29437                           
 29438                           ;incstack = 0
 29439                           ;MiMAC_SetChannel@channel stored from wreg
 29440  00A42A  0101               	movlb	1	; () banked
 29441  00A42C  6F09               	movwf	MiMAC_SetChannel@channel& (0+255),b
 29442                           
 29443                           ;drv_mrf_miwi_89xa.c: 485: if( channel >= 32 )
 29444  00A42E  0E1F               	movlw	31
 29445  00A430  0101               	movlb	1	; () banked
 29446  00A432  6509               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 29447  00A434  D002               	goto	l17552
 29448                           
 29449                           ; BSR set to: 1
 29450                           ;drv_mrf_miwi_89xa.c: 486: {
 29451                           ;drv_mrf_miwi_89xa.c: 487: return 0;
 29452  00A436  0E00               	movlw	0
 29453                           
 29454                           ; BSR set to: 1
 29455  00A438  0012               	return	
 29456  00A43A                     l17552:
 29457                           
 29458                           ; BSR set to: 1
 29459                           ;drv_mrf_miwi_89xa.c: 488: }
 29460                           ;drv_mrf_miwi_89xa.c: 491: RegisterSet(0x0C00 | 100);
 29461  00A43A  0E0C               	movlw	12
 29462  00A43C  0101               	movlb	1	; () banked
 29463  00A43E  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29464  00A440  0E64               	movlw	100
 29465  00A442  6F02               	movwf	RegisterSet@setting& (0+255),b
 29466  00A444  EC04  F05B         	call	_RegisterSet	;wreg free
 29467                           
 29468                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0E00 | PVALUE[channel]);
 29469  00A448  0101               	movlb	1	; () banked
 29470  00A44A  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 29471  00A44C  0D01               	mullw	1
 29472  00A44E  0E71               	movlw	low _PVALUE
 29473  00A450  24F3               	addwf	prodl,w,c
 29474  00A452  6EF6               	movwf	tblptrl,c
 29475  00A454  0E20               	movlw	high _PVALUE
 29476  00A456  20F4               	addwfc	prodh,w,c
 29477  00A458  6EF7               	movwf	tblptrh,c
 29478  00A45A                     	if	1	;There are 3 active tblptr bytes
 29479  00A45A  6AF8               	clrf	tblptru,c
 29480  00A45C  0E00               	movlw	low (__mediumconst shr (0+16))
 29481  00A45E  22F8               	addwfc	tblptru,f,c
 29482  00A460                     	endif
 29483  00A460  0008               	tblrd		*
 29484  00A462  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 29485  00A466  0E00               	movlw	0
 29486  00A468  0101               	movlb	1	; () banked
 29487  00A46A  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29488  00A46C  0101               	movlb	1	; () banked
 29489  00A46E  6F02               	movwf	RegisterSet@setting& (0+255),b
 29490  00A470  0E0E               	movlw	14
 29491  00A472  0101               	movlb	1	; () banked
 29492  00A474  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29493  00A476  EC04  F05B         	call	_RegisterSet	;wreg free
 29494                           
 29495                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x1000 | SVALUE[channel]);
 29496  00A47A  0101               	movlb	1	; () banked
 29497  00A47C  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 29498  00A47E  0D01               	mullw	1
 29499  00A480  0E91               	movlw	low _SVALUE
 29500  00A482  24F3               	addwf	prodl,w,c
 29501  00A484  6EF6               	movwf	tblptrl,c
 29502  00A486  0E20               	movlw	high _SVALUE
 29503  00A488  20F4               	addwfc	prodh,w,c
 29504  00A48A  6EF7               	movwf	tblptrh,c
 29505  00A48C                     	if	1	;There are 3 active tblptr bytes
 29506  00A48C  6AF8               	clrf	tblptru,c
 29507  00A48E  0E00               	movlw	low (__mediumconst shr (0+16))
 29508  00A490  22F8               	addwfc	tblptru,f,c
 29509  00A492                     	endif
 29510  00A492  0008               	tblrd		*
 29511  00A494  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 29512  00A498  0E00               	movlw	0
 29513  00A49A  0101               	movlb	1	; () banked
 29514  00A49C  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29515  00A49E  0101               	movlb	1	; () banked
 29516  00A4A0  6F02               	movwf	RegisterSet@setting& (0+255),b
 29517  00A4A2  0E10               	movlw	16
 29518  00A4A4  0101               	movlb	1	; () banked
 29519  00A4A6  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29520  00A4A8  EC04  F05B         	call	_RegisterSet	;wreg free
 29521                           
 29522                           ;drv_mrf_miwi_89xa.c: 494: SetRFMode(0x20);
 29523  00A4AC  0E20               	movlw	32
 29524  00A4AE  ECC9  F055         	call	_SetRFMode
 29525                           
 29526                           ;drv_mrf_miwi_89xa.c: 495: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29527  00A4B2  0E00               	movlw	0
 29528  00A4B4  0101               	movlb	1	; () banked
 29529  00A4B6  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29530  00A4B8  0E56               	movlw	86
 29531  00A4BA  6F02               	movwf	RegisterSet@setting& (0+255),b
 29532  00A4BC  EC04  F05B         	call	_RegisterSet	;wreg free
 29533                           
 29534                           ;drv_mrf_miwi_89xa.c: 496: SetRFMode(0x40);
 29535  00A4C0  0E40               	movlw	64
 29536  00A4C2  ECC9  F055         	call	_SetRFMode
 29537                           
 29538                           ;drv_mrf_miwi_89xa.c: 497: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 29539  00A4C6  0E1C               	movlw	28
 29540  00A4C8  0101               	movlb	1	; () banked
 29541  00A4CA  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29542  00A4CC  0E0F               	movlw	15
 29543  00A4CE  6F02               	movwf	RegisterSet@setting& (0+255),b
 29544  00A4D0  EC04  F05B         	call	_RegisterSet	;wreg free
 29545                           
 29546                           ;drv_mrf_miwi_89xa.c: 498: SetRFMode(0x20);
 29547  00A4D4  0E20               	movlw	32
 29548  00A4D6  ECC9  F055         	call	_SetRFMode
 29549                           
 29550                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x60);
 29551  00A4DA  0E60               	movlw	96
 29552  00A4DC  ECC9  F055         	call	_SetRFMode
 29553                           
 29554                           ;drv_mrf_miwi_89xa.c: 501: return 1;
 29555  00A4E0  0E01               	movlw	1
 29556  00A4E2  0012               	return	
 29557  00A4E4                     __end_of_MiMAC_SetChannel:
 29558                           	opt stack 0
 29559                           tblptru	equ	0xFF8
 29560                           tblptrh	equ	0xFF7
 29561                           tblptrl	equ	0xFF6
 29562                           tablat	equ	0xFF5
 29563                           prodh	equ	0xFF4
 29564                           prodl	equ	0xFF3
 29565                           intcon	equ	0xFF2
 29566                           intcon2	equ	0xFF1
 29567                           intcon3	equ	0xFF0
 29568                           indf0	equ	0xFEF
 29569                           postinc0	equ	0xFEE
 29570                           plusw0	equ	0xFEB
 29571                           fsr0h	equ	0xFEA
 29572                           fsr0l	equ	0xFE9
 29573                           wreg	equ	0xFE8
 29574                           indf1	equ	0xFE7
 29575                           postinc1	equ	0xFE6
 29576                           postdec1	equ	0xFE5
 29577                           plusw1	equ	0xFE3
 29578                           fsr1h	equ	0xFE2
 29579                           fsr1l	equ	0xFE1
 29580                           indf2	equ	0xFDF
 29581                           postinc2	equ	0xFDE
 29582                           postdec2	equ	0xFDD
 29583                           plusw2	equ	0xFDB
 29584                           fsr2h	equ	0xFDA
 29585                           fsr2l	equ	0xFD9
 29586                           status	equ	0xFD8
 29587                           
 29588 ;; *************** function _SetRFMode *****************
 29589 ;; Defined at:
 29590 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29591 ;; Parameters:    Size  Location     Type
 29592 ;;  mode            1    wreg     unsigned char 
 29593 ;; Auto vars:     Size  Location     Type
 29594 ;;  mode            1    6[BANK1 ] unsigned char 
 29595 ;; Return value:  Size  Location     Type
 29596 ;;		None               void
 29597 ;; Registers used:
 29598 ;;		wreg, status,2, status,0, cstack
 29599 ;; Tracked objects:
 29600 ;;		On entry : 0/0
 29601 ;;		On exit  : 0/0
 29602 ;;		Unchanged: 0/0
 29603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29605 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29607 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29608 ;;Total ram usage:        1 bytes
 29609 ;; Hardware stack levels used:    1
 29610 ;; Hardware stack levels required when called:   18
 29611 ;; This function calls:
 29612 ;;		_RegisterSet
 29613 ;; This function is called by:
 29614 ;;		_TxPacket
 29615 ;;		_MiMAC_SetChannel
 29616 ;;		_MiMAC_Init
 29617 ;;		_MiMAC_PowerState
 29618 ;; This function uses a non-reentrant model
 29619 ;;
 29620                           
 29621                           	psect	text79
 29622  00AB92                     __ptext79:
 29623                           	opt stack 0
 29624  00AB92                     _SetRFMode:
 29625                           	opt stack 6
 29626                           
 29627                           ;incstack = 0
 29628                           ;SetRFMode@mode stored from wreg
 29629  00AB92  0101               	movlb	1	; () banked
 29630  00AB94  6F06               	movwf	SetRFMode@mode& (0+255),b
 29631                           
 29632                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 29633  00AB96  D037               	goto	l16796
 29634  00AB98                     l16774:
 29635                           
 29636                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 29637  00AB98  0E00               	movlw	0
 29638  00AB9A  0101               	movlb	1	; () banked
 29639  00AB9C  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29640  00AB9E  0E96               	movlw	150
 29641  00ABA0  6F02               	movwf	RegisterSet@setting& (0+255),b
 29642  00ABA2  EC04  F05B         	call	_RegisterSet	;wreg free
 29643                           
 29644                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 29645  00ABA6  0E80               	movlw	128
 29646  00ABA8  0100               	movlb	0	; () banked
 29647  00ABAA  6F9B               	movwf	_RF_Mode& (0+255),b
 29648                           
 29649                           ;drv_mrf_miwi_89xa.c: 672: break;
 29650  00ABAC  0012               	return	
 29651  00ABAE                     l16778:
 29652                           
 29653                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 29654  00ABAE  0E00               	movlw	0
 29655  00ABB0  0101               	movlb	1	; () banked
 29656  00ABB2  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29657  00ABB4  0E76               	movlw	118
 29658  00ABB6  6F02               	movwf	RegisterSet@setting& (0+255),b
 29659  00ABB8  EC04  F05B         	call	_RegisterSet	;wreg free
 29660                           
 29661                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 29662  00ABBC  0E60               	movlw	96
 29663  00ABBE  0100               	movlb	0	; () banked
 29664  00ABC0  6F9B               	movwf	_RF_Mode& (0+255),b
 29665                           
 29666                           ;drv_mrf_miwi_89xa.c: 676: break;
 29667  00ABC2  0012               	return	
 29668  00ABC4                     l16782:
 29669                           
 29670                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29671  00ABC4  0E00               	movlw	0
 29672  00ABC6  0101               	movlb	1	; () banked
 29673  00ABC8  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29674  00ABCA  0E56               	movlw	86
 29675  00ABCC  6F02               	movwf	RegisterSet@setting& (0+255),b
 29676  00ABCE  EC04  F05B         	call	_RegisterSet	;wreg free
 29677                           
 29678                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 29679  00ABD2  0E40               	movlw	64
 29680  00ABD4  0100               	movlb	0	; () banked
 29681  00ABD6  6F9B               	movwf	_RF_Mode& (0+255),b
 29682                           
 29683                           ;drv_mrf_miwi_89xa.c: 680: break;
 29684  00ABD8  0012               	return	
 29685  00ABDA                     l16786:
 29686                           
 29687                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 29688  00ABDA  0E00               	movlw	0
 29689  00ABDC  0101               	movlb	1	; () banked
 29690  00ABDE  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29691  00ABE0  0E36               	movlw	54
 29692  00ABE2  6F02               	movwf	RegisterSet@setting& (0+255),b
 29693  00ABE4  EC04  F05B         	call	_RegisterSet	;wreg free
 29694                           
 29695                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 29696  00ABE8  0E20               	movlw	32
 29697  00ABEA  0100               	movlb	0	; () banked
 29698  00ABEC  6F9B               	movwf	_RF_Mode& (0+255),b
 29699                           
 29700                           ;drv_mrf_miwi_89xa.c: 684: break;
 29701  00ABEE  0012               	return	
 29702  00ABF0                     l16790:
 29703                           
 29704                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 29705  00ABF0  0E00               	movlw	0
 29706  00ABF2  0101               	movlb	1	; () banked
 29707  00ABF4  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29708  00ABF6  0E16               	movlw	22
 29709  00ABF8  6F02               	movwf	RegisterSet@setting& (0+255),b
 29710  00ABFA  EC04  F05B         	call	_RegisterSet	;wreg free
 29711                           
 29712                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 29713  00ABFE  0E00               	movlw	0
 29714  00AC00  0100               	movlb	0	; () banked
 29715  00AC02  6F9B               	movwf	_RF_Mode& (0+255),b
 29716                           
 29717                           ; BSR set to: 0
 29718                           ;drv_mrf_miwi_89xa.c: 689: }
 29719                           
 29720                           ;drv_mrf_miwi_89xa.c: 688: break;
 29721  00AC04  0012               	return	
 29722  00AC06                     l16796:
 29723  00AC06  0101               	movlb	1	; () banked
 29724  00AC08  5106               	movf	SetRFMode@mode& (0+255),w,b
 29725                           
 29726                           ; Switch size 1, requested type "space"
 29727                           ; Number of cases is 5, Range of values is 0 to 128
 29728                           ; switch strategies available:
 29729                           ; Name         Instructions Cycles
 29730                           ; simple_byte           16     9 (average)
 29731                           ;	Chosen strategy is simple_byte
 29732  00AC0A  0A00               	xorlw	0	; case 0
 29733  00AC0C  B4D8               	btfsc	status,2,c
 29734  00AC0E  D7F0               	goto	l16790
 29735  00AC10  0A20               	xorlw	32	; case 32
 29736  00AC12  B4D8               	btfsc	status,2,c
 29737  00AC14  D7E2               	goto	l16786
 29738  00AC16  0A60               	xorlw	96	; case 64
 29739  00AC18  B4D8               	btfsc	status,2,c
 29740  00AC1A  D7D4               	goto	l16782
 29741  00AC1C  0A20               	xorlw	32	; case 96
 29742  00AC1E  B4D8               	btfsc	status,2,c
 29743  00AC20  D7C6               	goto	l16778
 29744  00AC22  0AE0               	xorlw	224	; case 128
 29745  00AC24  A4D8               	btfss	status,2,c
 29746  00AC26  0012               	return	
 29747  00AC28  D7B7               	goto	l16774
 29748  00AC2A                     __end_of_SetRFMode:
 29749                           	opt stack 0
 29750                           tblptru	equ	0xFF8
 29751                           tblptrh	equ	0xFF7
 29752                           tblptrl	equ	0xFF6
 29753                           tablat	equ	0xFF5
 29754                           prodh	equ	0xFF4
 29755                           prodl	equ	0xFF3
 29756                           intcon	equ	0xFF2
 29757                           intcon2	equ	0xFF1
 29758                           intcon3	equ	0xFF0
 29759                           indf0	equ	0xFEF
 29760                           postinc0	equ	0xFEE
 29761                           plusw0	equ	0xFEB
 29762                           fsr0h	equ	0xFEA
 29763                           fsr0l	equ	0xFE9
 29764                           wreg	equ	0xFE8
 29765                           indf1	equ	0xFE7
 29766                           postinc1	equ	0xFE6
 29767                           postdec1	equ	0xFE5
 29768                           plusw1	equ	0xFE3
 29769                           fsr1h	equ	0xFE2
 29770                           fsr1l	equ	0xFE1
 29771                           indf2	equ	0xFDF
 29772                           postinc2	equ	0xFDE
 29773                           postdec2	equ	0xFDD
 29774                           plusw2	equ	0xFDB
 29775                           fsr2h	equ	0xFDA
 29776                           fsr2l	equ	0xFD9
 29777                           status	equ	0xFD8
 29778                           
 29779 ;; *************** function _RegisterSet *****************
 29780 ;; Defined at:
 29781 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29782 ;; Parameters:    Size  Location     Type
 29783 ;;  setting         2    2[BANK1 ] unsigned int 
 29784 ;; Auto vars:     Size  Location     Type
 29785 ;;  IRQ0select      1    5[BANK1 ] unsigned char 
 29786 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 29787 ;; Return value:  Size  Location     Type
 29788 ;;		None               void
 29789 ;; Registers used:
 29790 ;;		wreg, status,2, cstack
 29791 ;; Tracked objects:
 29792 ;;		On entry : 0/0
 29793 ;;		On exit  : 0/0
 29794 ;;		Unchanged: 0/0
 29795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29796 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29797 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29799 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29800 ;;Total ram usage:        4 bytes
 29801 ;; Hardware stack levels used:    1
 29802 ;; Hardware stack levels required when called:   17
 29803 ;; This function calls:
 29804 ;;		_SPIPut
 29805 ;; This function is called by:
 29806 ;;		_TxPacket
 29807 ;;		_MiMAC_SetChannel
 29808 ;;		_MiMAC_SetPower
 29809 ;;		_MiMAC_Init
 29810 ;;		_SetRFMode
 29811 ;; This function uses a non-reentrant model
 29812 ;;
 29813                           
 29814                           	psect	text80
 29815  00B608                     __ptext80:
 29816                           	opt stack 0
 29817  00B608                     _RegisterSet:
 29818                           	opt stack 11
 29819                           
 29820                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 29821                           
 29822                           ;incstack = 0
 29823  00B608  0E00               	movlw	0
 29824  00B60A  B6F0               	btfsc	intcon3,3,c	;volatile
 29825  00B60C  0E01               	movlw	1
 29826  00B60E  0101               	movlb	1	; () banked
 29827  00B610  6F04               	movwf	RegisterSet@IRQ1select& (0+255),b
 29828                           
 29829                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 29830  00B612  0E00               	movlw	0
 29831  00B614  B8F2               	btfsc	intcon,4,c	;volatile
 29832  00B616  0E01               	movlw	1
 29833  00B618  0101               	movlb	1	; () banked
 29834  00B61A  6F05               	movwf	RegisterSet@IRQ0select& (0+255),b
 29835                           
 29836                           ; BSR set to: 1
 29837                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 29838  00B61C  98F2               	bcf	intcon,4,c	;volatile
 29839                           
 29840                           ; BSR set to: 1
 29841                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 29842  00B61E  96F0               	bcf	intcon3,3,c	;volatile
 29843                           
 29844                           ; BSR set to: 1
 29845                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 29846  00B620  968A               	bcf	3978,3,c	;volatile
 29847                           
 29848                           ; BSR set to: 1
 29849                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 29850  00B622  0101               	movlb	1	; () banked
 29851  00B624  5103               	movf	(RegisterSet@setting+1)& (0+255),w,b
 29852  00B626  EC7D  F05D         	call	_SPIPut
 29853                           
 29854                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 29855  00B62A  0101               	movlb	1	; () banked
 29856  00B62C  5102               	movf	RegisterSet@setting& (0+255),w,b
 29857  00B62E  EC7D  F05D         	call	_SPIPut
 29858                           
 29859                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 29860  00B632  868A               	bsf	3978,3,c	;volatile
 29861                           
 29862                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 29863  00B634  0101               	movlb	1	; () banked
 29864  00B636  B104               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 29865  00B638  D002               	bra	u17985
 29866  00B63A  96F0               	bcf	intcon3,3,c	;volatile
 29867  00B63C  D001               	bra	u17986
 29868  00B63E                     u17985:
 29869  00B63E  86F0               	bsf	intcon3,3,c	;volatile
 29870  00B640                     u17986:
 29871                           
 29872                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 29873  00B640  0101               	movlb	1	; () banked
 29874  00B642  B105               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 29875  00B644  D002               	bra	u17995
 29876  00B646  98F2               	bcf	intcon,4,c	;volatile
 29877  00B648  D001               	bra	u17996
 29878  00B64A                     u17995:
 29879  00B64A  88F2               	bsf	intcon,4,c	;volatile
 29880  00B64C                     u17996:
 29881  00B64C  0012               	return		;funcret
 29882  00B64E                     __end_of_RegisterSet:
 29883                           	opt stack 0
 29884                           tblptru	equ	0xFF8
 29885                           tblptrh	equ	0xFF7
 29886                           tblptrl	equ	0xFF6
 29887                           tablat	equ	0xFF5
 29888                           prodh	equ	0xFF4
 29889                           prodl	equ	0xFF3
 29890                           intcon	equ	0xFF2
 29891                           intcon2	equ	0xFF1
 29892                           intcon3	equ	0xFF0
 29893                           indf0	equ	0xFEF
 29894                           postinc0	equ	0xFEE
 29895                           plusw0	equ	0xFEB
 29896                           fsr0h	equ	0xFEA
 29897                           fsr0l	equ	0xFE9
 29898                           wreg	equ	0xFE8
 29899                           indf1	equ	0xFE7
 29900                           postinc1	equ	0xFE6
 29901                           postdec1	equ	0xFE5
 29902                           plusw1	equ	0xFE3
 29903                           fsr1h	equ	0xFE2
 29904                           fsr1l	equ	0xFE1
 29905                           indf2	equ	0xFDF
 29906                           postinc2	equ	0xFDE
 29907                           postdec2	equ	0xFDD
 29908                           plusw2	equ	0xFDB
 29909                           fsr2h	equ	0xFDA
 29910                           fsr2l	equ	0xFD9
 29911                           status	equ	0xFD8
 29912                           
 29913 ;; *************** function _SPIPut *****************
 29914 ;; Defined at:
 29915 ;;		line 45 in file "src/18F27J53/spi.c"
 29916 ;; Parameters:    Size  Location     Type
 29917 ;;  v               1    wreg     unsigned char 
 29918 ;; Auto vars:     Size  Location     Type
 29919 ;;  v               1    1[BANK1 ] unsigned char 
 29920 ;;  i               1    0[BANK1 ] unsigned char 
 29921 ;; Return value:  Size  Location     Type
 29922 ;;		None               void
 29923 ;; Registers used:
 29924 ;;		wreg
 29925 ;; Tracked objects:
 29926 ;;		On entry : 0/0
 29927 ;;		On exit  : 0/0
 29928 ;;		Unchanged: 0/0
 29929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29931 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29933 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29934 ;;Total ram usage:        2 bytes
 29935 ;; Hardware stack levels used:    1
 29936 ;; Hardware stack levels required when called:   16
 29937 ;; This function calls:
 29938 ;;		Nothing
 29939 ;; This function is called by:
 29940 ;;		_SPIGet
 29941 ;;		_RegisterSet
 29942 ;;		_RegisterRead
 29943 ;;		_WriteFIFO
 29944 ;; This function uses a non-reentrant model
 29945 ;;
 29946                           
 29947                           	psect	text81
 29948  00BAFA                     __ptext81:
 29949                           	opt stack 0
 29950  00BAFA                     _SPIPut:
 29951                           	opt stack 11
 29952                           
 29953                           ;incstack = 0
 29954                           ;SPIPut@v stored from wreg
 29955  00BAFA  0101               	movlb	1	; () banked
 29956  00BAFC  6F01               	movwf	SPIPut@v& (0+255),b
 29957                           
 29958                           ;spi.c: 66: {
 29959                           ;spi.c: 68: uint8_t i;
 29960                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 29961  00BAFE  9EA4               	bcf	4004,7,c	;volatile
 29962                           
 29963                           ;spi.c: 72: i = SSP2BUF;
 29964  00BB00  CF75 F100          	movff	3957,SPIPut@i	;volatile
 29965  00BB04                     l29:
 29966                           
 29967                           ;spi.c: 75: {
 29968                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 29969  00BB04  9E72               	bcf	3954,7,c	;volatile
 29970                           
 29971                           ;spi.c: 77: SSP2BUF = v;
 29972  00BB06  C101  FF75         	movff	SPIPut@v,3957	;volatile
 29973                           
 29974                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 29975  00BB0A  BE72               	btfsc	3954,7,c	;volatile
 29976  00BB0C  D7FB               	goto	l29
 29977  00BB0E                     l31:
 29978  00BB0E  AEA4               	btfss	4004,7,c	;volatile
 29979  00BB10  D7FE               	goto	l31
 29980                           
 29981                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 29982  00BB12  9EA4               	bcf	4004,7,c	;volatile
 29983  00BB14  0012               	return		;funcret
 29984  00BB16                     __end_of_SPIPut:
 29985                           	opt stack 0
 29986                           tblptru	equ	0xFF8
 29987                           tblptrh	equ	0xFF7
 29988                           tblptrl	equ	0xFF6
 29989                           tablat	equ	0xFF5
 29990                           prodh	equ	0xFF4
 29991                           prodl	equ	0xFF3
 29992                           intcon	equ	0xFF2
 29993                           intcon2	equ	0xFF1
 29994                           intcon3	equ	0xFF0
 29995                           indf0	equ	0xFEF
 29996                           postinc0	equ	0xFEE
 29997                           plusw0	equ	0xFEB
 29998                           fsr0h	equ	0xFEA
 29999                           fsr0l	equ	0xFE9
 30000                           wreg	equ	0xFE8
 30001                           indf1	equ	0xFE7
 30002                           postinc1	equ	0xFE6
 30003                           postdec1	equ	0xFE5
 30004                           plusw1	equ	0xFE3
 30005                           fsr1h	equ	0xFE2
 30006                           fsr1l	equ	0xFE1
 30007                           indf2	equ	0xFDF
 30008                           postinc2	equ	0xFDE
 30009                           postdec2	equ	0xFDD
 30010                           plusw2	equ	0xFDB
 30011                           fsr2h	equ	0xFDA
 30012                           fsr2l	equ	0xFD9
 30013                           status	equ	0xFD8
 30014                           
 30015 ;; *************** function _InitSymbolTimer *****************
 30016 ;; Defined at:
 30017 ;;		line 59 in file "src/18F27J53/symbol.c"
 30018 ;; Parameters:    Size  Location     Type
 30019 ;;		None
 30020 ;; Auto vars:     Size  Location     Type
 30021 ;;		None
 30022 ;; Return value:  Size  Location     Type
 30023 ;;		None               void
 30024 ;; Registers used:
 30025 ;;		wreg, status,2
 30026 ;; Tracked objects:
 30027 ;;		On entry : 0/0
 30028 ;;		On exit  : 0/0
 30029 ;;		Unchanged: 0/0
 30030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30035 ;;Total ram usage:        0 bytes
 30036 ;; Hardware stack levels used:    1
 30037 ;; Hardware stack levels required when called:   16
 30038 ;; This function calls:
 30039 ;;		Nothing
 30040 ;; This function is called by:
 30041 ;;		_MiApp_ProtocolInit
 30042 ;; This function uses a non-reentrant model
 30043 ;;
 30044                           
 30045                           	psect	text82
 30046  00BB4C                     __ptext82:
 30047                           	opt stack 0
 30048  00BB4C                     _InitSymbolTimer:
 30049                           	opt stack 13
 30050                           
 30051                           ;symbol.c: 62: T1CON = 0b00110000;
 30052                           
 30053                           ;incstack = 0
 30054  00BB4C  0E30               	movlw	48
 30055  00BB4E  6ECD               	movwf	4045,c	;volatile
 30056                           
 30057                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 30058  00BB50  909E               	bcf	3998,0,c	;volatile
 30059                           
 30060                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 30061  00BB52  809D               	bsf	3997,0,c	;volatile
 30062                           
 30063                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 30064  00BB54  80CD               	bsf	4045,0,c	;volatile
 30065                           
 30066                           ;symbol.c: 75: timerExtension1 = 0;
 30067  00BB56  0E00               	movlw	0
 30068  00BB58  0100               	movlb	0	; () banked
 30069  00BB5A  6FA1               	movwf	_timerExtension1& (0+255),b	;volatile
 30070                           
 30071                           ;symbol.c: 76: timerExtension2 = 0;
 30072  00BB5C  0E00               	movlw	0
 30073  00BB5E  0100               	movlb	0	; () banked
 30074  00BB60  6FA2               	movwf	_timerExtension2& (0+255),b	;volatile
 30075                           
 30076                           ; BSR set to: 0
 30077  00BB62  0012               	return		;funcret
 30078  00BB64                     __end_of_InitSymbolTimer:
 30079                           	opt stack 0
 30080                           tblptru	equ	0xFF8
 30081                           tblptrh	equ	0xFF7
 30082                           tblptrl	equ	0xFF6
 30083                           tablat	equ	0xFF5
 30084                           prodh	equ	0xFF4
 30085                           prodl	equ	0xFF3
 30086                           intcon	equ	0xFF2
 30087                           intcon2	equ	0xFF1
 30088                           intcon3	equ	0xFF0
 30089                           indf0	equ	0xFEF
 30090                           postinc0	equ	0xFEE
 30091                           plusw0	equ	0xFEB
 30092                           fsr0h	equ	0xFEA
 30093                           fsr0l	equ	0xFE9
 30094                           wreg	equ	0xFE8
 30095                           indf1	equ	0xFE7
 30096                           postinc1	equ	0xFE6
 30097                           postdec1	equ	0xFE5
 30098                           plusw1	equ	0xFE3
 30099                           fsr1h	equ	0xFE2
 30100                           fsr1l	equ	0xFE1
 30101                           indf2	equ	0xFDF
 30102                           postinc2	equ	0xFDE
 30103                           postdec2	equ	0xFDD
 30104                           plusw2	equ	0xFDB
 30105                           fsr2h	equ	0xFDA
 30106                           fsr2l	equ	0xFD9
 30107                           status	equ	0xFD8
 30108                           
 30109 ;; *************** function _MiApp_ConnectionMode *****************
 30110 ;; Defined at:
 30111 ;;		line 3922 in file "src/miwi/miwi_mesh.c"
 30112 ;; Parameters:    Size  Location     Type
 30113 ;;  Mode            1    wreg     unsigned char 
 30114 ;; Auto vars:     Size  Location     Type
 30115 ;;  Mode            1    1[BANK1 ] unsigned char 
 30116 ;; Return value:  Size  Location     Type
 30117 ;;		None               void
 30118 ;; Registers used:
 30119 ;;		wreg, status,2, status,0
 30120 ;; Tracked objects:
 30121 ;;		On entry : 0/0
 30122 ;;		On exit  : 0/0
 30123 ;;		Unchanged: 0/0
 30124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30126 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30127 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30128 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30129 ;;Total ram usage:        2 bytes
 30130 ;; Hardware stack levels used:    1
 30131 ;; Hardware stack levels required when called:   16
 30132 ;; This function calls:
 30133 ;;		Nothing
 30134 ;; This function is called by:
 30135 ;;		_main
 30136 ;; This function uses a non-reentrant model
 30137 ;;
 30138                           
 30139                           	psect	text83
 30140  00BA06                     __ptext83:
 30141                           	opt stack 0
 30142  00BA06                     _MiApp_ConnectionMode:
 30143                           	opt stack 14
 30144                           
 30145                           ; BSR set to: 0
 30146                           ;incstack = 0
 30147                           ;MiApp_ConnectionMode@Mode stored from wreg
 30148  00BA06  0101               	movlb	1	; () banked
 30149  00BA08  6F01               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 30150                           
 30151                           ;miwi_mesh.c: 3924: if( Mode > 3 )
 30152  00BA0A  0E03               	movlw	3
 30153  00BA0C  0101               	movlb	1	; () banked
 30154  00BA0E  6501               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 30155  00BA10  D001               	goto	l940
 30156  00BA12  0012               	return	
 30157  00BA14                     l940:
 30158                           
 30159                           ; BSR set to: 1
 30160                           ;miwi_mesh.c: 3927: }
 30161                           ;miwi_mesh.c: 3928: ConnMode = Mode;
 30162  00BA14  C101  F1BF         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 30163                           
 30164                           ; BSR set to: 1
 30165                           ;miwi_mesh.c: 3929: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 30166  00BA18  C1BF  F100         	movff	_ConnMode,??_MiApp_ConnectionMode
 30167  00BA1C  0101               	movlb	1	; () banked
 30168  00BA1E  3B00               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 30169  00BA20  0101               	movlb	1	; () banked
 30170  00BA22  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 30171  00BA24  0101               	movlb	1	; () banked
 30172  00BA26  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 30173  00BA28  0BCF               	andlw	-49
 30174  00BA2A  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 30175  00BA2C  0101               	movlb	1	; () banked
 30176  00BA2E  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 30177                           
 30178                           ; BSR set to: 1
 30179  00BA30  0012               	return		;funcret
 30180  00BA32                     __end_of_MiApp_ConnectionMode:
 30181                           	opt stack 0
 30182                           tblptru	equ	0xFF8
 30183                           tblptrh	equ	0xFF7
 30184                           tblptrl	equ	0xFF6
 30185                           tablat	equ	0xFF5
 30186                           prodh	equ	0xFF4
 30187                           prodl	equ	0xFF3
 30188                           intcon	equ	0xFF2
 30189                           intcon2	equ	0xFF1
 30190                           intcon3	equ	0xFF0
 30191                           indf0	equ	0xFEF
 30192                           postinc0	equ	0xFEE
 30193                           plusw0	equ	0xFEB
 30194                           fsr0h	equ	0xFEA
 30195                           fsr0l	equ	0xFE9
 30196                           wreg	equ	0xFE8
 30197                           indf1	equ	0xFE7
 30198                           postinc1	equ	0xFE6
 30199                           postdec1	equ	0xFE5
 30200                           plusw1	equ	0xFE3
 30201                           fsr1h	equ	0xFE2
 30202                           fsr1l	equ	0xFE1
 30203                           indf2	equ	0xFDF
 30204                           postinc2	equ	0xFDE
 30205                           postdec2	equ	0xFDD
 30206                           plusw2	equ	0xFDB
 30207                           fsr2h	equ	0xFDA
 30208                           fsr2l	equ	0xFD9
 30209                           status	equ	0xFD8
 30210                           
 30211 ;; *************** function _SYS_InterruptLow *****************
 30212 ;; Defined at:
 30213 ;;		line 784 in file "src/main.c"
 30214 ;; Parameters:    Size  Location     Type
 30215 ;;		None
 30216 ;; Auto vars:     Size  Location     Type
 30217 ;;		None
 30218 ;; Return value:  Size  Location     Type
 30219 ;;		None               void
 30220 ;; Registers used:
 30221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30222 ;; Tracked objects:
 30223 ;;		On entry : 0/0
 30224 ;;		On exit  : 0/0
 30225 ;;		Unchanged: 0/0
 30226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30229 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30230 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30231 ;;Total ram usage:       19 bytes
 30232 ;; Hardware stack levels used:    1
 30233 ;; Hardware stack levels required when called:   15
 30234 ;; This function calls:
 30235 ;;		_USBDeviceTasks
 30236 ;;		i1___ftadd
 30237 ;;		i1_update_LED
 30238 ;; This function is called by:
 30239 ;;		Interrupt level 1
 30240 ;; This function uses a non-reentrant model
 30241 ;;
 30242                           
 30243                           	psect	intcodelo
 30244  000018                     __pintcodelo:
 30245                           	opt stack 0
 30246  000018                     _SYS_InterruptLow:
 30247                           	opt stack 3
 30248                           
 30249                           ; BSR set to: 1
 30250                           ;incstack = 0
 30251  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30252  00001A  CFD8 F021          	movff	status,??_SYS_InterruptLow+2
 30253  00001E  CFE8 F022          	movff	wreg,??_SYS_InterruptLow+3
 30254  000022  CFE0 F023          	movff	bsr,??_SYS_InterruptLow+4
 30255  000026  CFFA F024          	movff	pclath,??_SYS_InterruptLow+5
 30256  00002A  CFFB F025          	movff	pclatu,??_SYS_InterruptLow+6
 30257  00002E  CFE9 F026          	movff	fsr0l,??_SYS_InterruptLow+7
 30258  000032  CFEA F027          	movff	fsr0h,??_SYS_InterruptLow+8
 30259  000036  CFE1 F028          	movff	fsr1l,??_SYS_InterruptLow+9
 30260  00003A  CFE2 F029          	movff	fsr1h,??_SYS_InterruptLow+10
 30261  00003E  CFD9 F02A          	movff	fsr2l,??_SYS_InterruptLow+11
 30262  000042  CFDA F02B          	movff	fsr2h,??_SYS_InterruptLow+12
 30263  000046  CFF3 F02C          	movff	prodl,??_SYS_InterruptLow+13
 30264  00004A  CFF4 F02D          	movff	prodh,??_SYS_InterruptLow+14
 30265  00004E  CFF6 F02E          	movff	tblptrl,??_SYS_InterruptLow+15
 30266  000052  CFF7 F02F          	movff	tblptrh,??_SYS_InterruptLow+16
 30267  000056  CFF8 F030          	movff	tblptru,??_SYS_InterruptLow+17
 30268  00005A  CFF5 F031          	movff	tablat,??_SYS_InterruptLow+18
 30269                           
 30270                           ;main.c: 786: USBDeviceTasks();
 30271  00005E  EC8A  F040         	call	_USBDeviceTasks	;wreg free
 30272                           
 30273                           ;main.c: 787: if (PIR3bits.TMR4IF)
 30274  000062  A6A4               	btfss	4004,3,c	;volatile
 30275  000064  D073               	goto	i1l1869
 30276                           
 30277                           ;main.c: 788: {
 30278                           ;main.c: 789: PIR3bits.TMR4IF = 0;
 30279  000066  96A4               	bcf	4004,3,c	;volatile
 30280                           
 30281                           ;main.c: 790: if ((status_led == LED_SLOW_PULSE)||(status_led == LED_FAST_PULSE))
 30282  000068  0E02               	movlw	2
 30283  00006A  1855               	xorwf	_status_led,w,c	;volatile
 30284  00006C  B4D8               	btfsc	status,2,c
 30285  00006E  D003               	goto	i1l16284
 30286  000070  0455               	decf	_status_led,w,c	;volatile
 30287  000072  A4D8               	btfss	status,2,c
 30288  000074  D04B               	goto	i1l16300
 30289  000076                     i1l16284:
 30290                           
 30291                           ;main.c: 791: {
 30292                           ;main.c: 792: if (LED_increasing == 1)
 30293  000076  0445               	decf	_LED_increasing,w,c	;volatile
 30294  000078  A4D8               	btfss	status,2,c
 30295  00007A  D012               	goto	i1l16290
 30296                           
 30297                           ;main.c: 793: {
 30298                           ;main.c: 794: LED_brightness = LED_brightness + 2;
 30299  00007C  0E02               	movlw	2
 30300  00007E  245B               	addwf	_LED_brightness,w,c	;volatile
 30301  000080  6E5B               	movwf	_LED_brightness,c	;volatile
 30302  000082  0E00               	movlw	0
 30303  000084  205C               	addwfc	_LED_brightness+1,w,c	;volatile
 30304  000086  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30305                           
 30306                           ;main.c: 795: if (LED_brightness >= 235)
 30307  000088  505C               	movf	_LED_brightness+1,w,c	;volatile
 30308  00008A  E104               	bnz	i1u1757_20
 30309  00008C  0EEB               	movlw	235
 30310  00008E  5C5B               	subwf	_LED_brightness,w,c	;volatile
 30311  000090  A0D8               	btfss	status,0,c
 30312  000092  D018               	goto	i1l16294
 30313  000094                     i1u1757_20:
 30314                           
 30315                           ;main.c: 796: {
 30316                           ;main.c: 797: LED_brightness = 235;
 30317  000094  0E00               	movlw	0
 30318  000096  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30319  000098  0EEB               	movlw	235
 30320  00009A  6E5B               	movwf	_LED_brightness,c	;volatile
 30321                           
 30322                           ;main.c: 798: LED_increasing = 0;
 30323  00009C  0E00               	movlw	0
 30324  00009E  D011               	goto	L12
 30325  0000A0                     i1l16290:
 30326                           
 30327                           ;main.c: 801: else
 30328                           ;main.c: 802: {
 30329                           ;main.c: 803: LED_brightness = LED_brightness - 2;
 30330  0000A0  0EFE               	movlw	254
 30331  0000A2  245B               	addwf	_LED_brightness,w,c	;volatile
 30332  0000A4  6E5B               	movwf	_LED_brightness,c	;volatile
 30333  0000A6  0EFF               	movlw	255
 30334  0000A8  205C               	addwfc	_LED_brightness+1,w,c	;volatile
 30335  0000AA  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30336                           
 30337                           ;main.c: 804: if (LED_brightness <= 10)
 30338  0000AC  505C               	movf	_LED_brightness+1,w,c	;volatile
 30339  0000AE  E10A               	bnz	i1l16294
 30340  0000B0  0E0B               	movlw	11
 30341  0000B2  5C5B               	subwf	_LED_brightness,w,c	;volatile
 30342  0000B4  B0D8               	btfsc	status,0,c
 30343  0000B6  D006               	goto	i1l16294
 30344                           
 30345                           ;main.c: 805: {
 30346                           ;main.c: 806: LED_brightness = 10;
 30347  0000B8  0E00               	movlw	0
 30348  0000BA  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30349  0000BC  0E0A               	movlw	10
 30350  0000BE  6E5B               	movwf	_LED_brightness,c	;volatile
 30351                           
 30352                           ;main.c: 807: LED_increasing = 1;
 30353  0000C0  0E01               	movlw	1
 30354  0000C2                     L12:
 30355  0000C2  6E45               	movwf	_LED_increasing,c	;volatile
 30356  0000C4                     i1l16294:
 30357                           
 30358                           ;main.c: 808: }
 30359                           ;main.c: 809: }
 30360                           ;main.c: 811: CCP1CONbits.DC1B0 = LED_brightness & 1;
 30361  0000C4  C05B  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 30362  0000C8  0E01               	movlw	1
 30363  0000CA  161F               	andwf	??_SYS_InterruptLow,f,c
 30364  0000CC  3A1F               	swapf	??_SYS_InterruptLow,f,c
 30365  0000CE  50BA               	movf	4026,w,c	;volatile
 30366  0000D0  181F               	xorwf	??_SYS_InterruptLow,w,c
 30367  0000D2  0BEF               	andlw	-17
 30368  0000D4  181F               	xorwf	??_SYS_InterruptLow,w,c
 30369  0000D6  6EBA               	movwf	4026,c	;volatile
 30370                           
 30371                           ;main.c: 812: CCP1CONbits.DC1B1 = (LED_brightness >> 1) & 1;
 30372  0000D8  90D8               	bcf	status,0,c
 30373  0000DA  305C               	rrcf	_LED_brightness+1,w,c	;volatile
 30374  0000DC  6E20               	movwf	(??_SYS_InterruptLow+1)& (0+255),c
 30375  0000DE  305B               	rrcf	_LED_brightness,w,c	;volatile
 30376  0000E0  6E1F               	movwf	??_SYS_InterruptLow& (0+255),c
 30377  0000E2  0E01               	movlw	1
 30378  0000E4  161F               	andwf	??_SYS_InterruptLow,f,c
 30379  0000E6  3A1F               	swapf	??_SYS_InterruptLow,f,c
 30380  0000E8  461F               	rlncf	??_SYS_InterruptLow,f,c
 30381  0000EA  50BA               	movf	4026,w,c	;volatile
 30382  0000EC  181F               	xorwf	??_SYS_InterruptLow,w,c
 30383  0000EE  0BDF               	andlw	-33
 30384  0000F0  181F               	xorwf	??_SYS_InterruptLow,w,c
 30385  0000F2  6EBA               	movwf	4026,c	;volatile
 30386                           
 30387                           ;main.c: 813: CCPR1L = (LED_brightness >> 2);
 30388  0000F4  C05B  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 30389  0000F8  C05C  F020         	movff	_LED_brightness+1,??_SYS_InterruptLow+1	;volatile
 30390  0000FC  90D8               	bcf	status,0,c
 30391  0000FE  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 30392  000100  321F               	rrcf	??_SYS_InterruptLow,f,c
 30393  000102  90D8               	bcf	status,0,c
 30394  000104  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 30395  000106  321F               	rrcf	??_SYS_InterruptLow,f,c
 30396  000108  501F               	movf	??_SYS_InterruptLow,w,c
 30397  00010A  6EBB               	movwf	4027,c	;volatile
 30398  00010C                     i1l16300:
 30399                           
 30400                           ;main.c: 814: }
 30401                           ;main.c: 815: if (status_led == LED_FULL)
 30402  00010C  0E03               	movlw	3
 30403  00010E  1855               	xorwf	_status_led,w,c	;volatile
 30404  000110  A4D8               	btfss	status,2,c
 30405  000112  D044               	goto	i1l1891
 30406                           
 30407                           ;main.c: 816: {
 30408                           ;main.c: 817: repeat_full = repeat_full - 1;
 30409  000114  0453               	decf	_repeat_full,w,c	;volatile
 30410  000116  6E53               	movwf	_repeat_full,c	;volatile
 30411                           
 30412                           ;main.c: 818: if (repeat_full == 0)
 30413  000118  5053               	movf	_repeat_full,w,c	;volatile
 30414  00011A  A4D8               	btfss	status,2,c
 30415  00011C  D03F               	goto	i1l1891
 30416                           
 30417                           ;main.c: 819: {
 30418                           ;main.c: 820: if (myAppState == STATE_INIT)
 30419  00011E  5052               	movf	_myAppState,w,c
 30420  000120  B4D8               	btfsc	status,2,c
 30421  000122  D003               	goto	i1l16312
 30422                           
 30423                           ;main.c: 822: else if (myAppState == STATE_USB_READY)
 30424                           
 30425                           ;main.c: 821: status_led = LED_FAST_PULSE;
 30426  000124  0452               	decf	_myAppState,w,c
 30427  000126  A4D8               	btfss	status,2,c
 30428  000128  D002               	goto	i1l16314
 30429  00012A                     i1l16312:
 30430                           
 30431                           ;main.c: 823: status_led = LED_FAST_PULSE;
 30432  00012A  0E01               	movlw	1
 30433  00012C  D00B               	goto	L14
 30434  00012E                     i1l16314:
 30435                           
 30436                           ;main.c: 824: else if (myAppState == STATE_READY)
 30437  00012E  0E02               	movlw	2
 30438  000130  1852               	xorwf	_myAppState,w,c
 30439  000132  A4D8               	btfss	status,2,c
 30440  000134  D002               	goto	i1l16318
 30441                           
 30442                           ;main.c: 825: status_led = LED_SLOW_PULSE;
 30443  000136  0E02               	movlw	2
 30444  000138  D005               	goto	L14
 30445  00013A                     i1l16318:
 30446                           
 30447                           ;main.c: 826: else if (myAppState == STATE_PROBLEM)
 30448  00013A  0E03               	movlw	3
 30449  00013C  1852               	xorwf	_myAppState,w,c
 30450  00013E  A4D8               	btfss	status,2,c
 30451  000140  D002               	goto	i1l16322
 30452                           
 30453                           ;main.c: 827: status_led = LED_OFF;
 30454  000142  0E00               	movlw	0
 30455  000144                     L14:
 30456  000144  6E55               	movwf	_status_led,c	;volatile
 30457  000146                     i1l16322:
 30458                           
 30459                           ;main.c: 828: update_LED();
 30460  000146  ECF5  F059         	call	i1_update_LED	;wreg free
 30461                           
 30462                           ;main.c: 829: }
 30463                           ;main.c: 830: }
 30464                           ;main.c: 831: }
 30465  00014A  D028               	goto	i1l1891
 30466  00014C                     i1l1869:
 30467                           
 30468                           ;main.c: 832: else if(PIR3bits.RTCCIF)
 30469  00014C  A0A4               	btfss	4004,0,c	;volatile
 30470  00014E  D026               	goto	i1l1891
 30471                           
 30472                           ;main.c: 833: {
 30473                           ;main.c: 834: m_uptime_days = m_uptime_days + 0.000740741F;
 30474  000150  C1B0  F009         	movff	_m_uptime_days,i1___ftadd@f1	;volatile
 30475  000154  C1B1  F00A         	movff	_m_uptime_days+1,i1___ftadd@f1+1	;volatile
 30476  000158  C1B2  F00B         	movff	_m_uptime_days+2,i1___ftadd@f1+2	;volatile
 30477  00015C  0E2E               	movlw	46
 30478  00015E  6E0C               	movwf	i1___ftadd@f2,c
 30479  000160  0E42               	movlw	66
 30480  000162  6E0D               	movwf	i1___ftadd@f2+1,c
 30481  000164  0E3A               	movlw	58
 30482  000166  6E0E               	movwf	i1___ftadd@f2+2,c
 30483  000168  EC95  F03A         	call	i1___ftadd	;wreg free
 30484  00016C  C009  F1B0         	movff	?i1___ftadd,_m_uptime_days	;volatile
 30485  000170  C00A  F1B1         	movff	?i1___ftadd+1,_m_uptime_days+1	;volatile
 30486  000174  C00B  F1B2         	movff	?i1___ftadd+2,_m_uptime_days+2	;volatile
 30487                           
 30488                           ;main.c: 835: timer_count = timer_count - 1;
 30489  000178  045D               	decf	_timer_count,w,c	;volatile
 30490  00017A  6E5D               	movwf	_timer_count,c	;volatile
 30491                           
 30492                           ;main.c: 836: if (timer_count == 0)
 30493  00017C  505D               	movf	_timer_count,w,c	;volatile
 30494  00017E  A4D8               	btfss	status,2,c
 30495  000180  D00C               	goto	i1l1888
 30496                           
 30497                           ;main.c: 837: {
 30498                           ;main.c: 838: timer_flag = 1;
 30499  000182  0E01               	movlw	1
 30500  000184  0101               	movlb	1	; () banked
 30501  000186  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
 30502                           
 30503                           ;main.c: 839: if (m_update_frequency == 0)
 30504  000188  0101               	movlb	1	; () banked
 30505  00018A  51FA               	movf	_m_update_frequency& (0+255),w,b	;volatile
 30506  00018C  A4D8               	btfss	status,2,c
 30507  00018E  D003               	goto	i1l1889
 30508                           
 30509                           ; BSR set to: 1
 30510                           ;main.c: 840: timer_count = 1;
 30511  000190  0E01               	movlw	1
 30512  000192  6E5D               	movwf	_timer_count,c	;volatile
 30513  000194  D002               	goto	i1l1888
 30514  000196                     i1l1889:
 30515                           
 30516                           ; BSR set to: 1
 30517                           ;main.c: 841: else
 30518                           ;main.c: 842: timer_count = m_update_frequency;
 30519  000196  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
 30520  00019A                     i1l1888:
 30521                           
 30522                           ;main.c: 843: }
 30523                           ;main.c: 844: PIR3bits.RTCCIF = 0;
 30524  00019A  90A4               	bcf	4004,0,c	;volatile
 30525  00019C                     i1l1891:
 30526  00019C  C031  FFF5         	movff	??_SYS_InterruptLow+18,tablat
 30527  0001A0  C030  FFF8         	movff	??_SYS_InterruptLow+17,tblptru
 30528  0001A4  C02F  FFF7         	movff	??_SYS_InterruptLow+16,tblptrh
 30529  0001A8  C02E  FFF6         	movff	??_SYS_InterruptLow+15,tblptrl
 30530  0001AC  C02D  FFF4         	movff	??_SYS_InterruptLow+14,prodh
 30531  0001B0  C02C  FFF3         	movff	??_SYS_InterruptLow+13,prodl
 30532  0001B4  C02B  FFDA         	movff	??_SYS_InterruptLow+12,fsr2h
 30533  0001B8  C02A  FFD9         	movff	??_SYS_InterruptLow+11,fsr2l
 30534  0001BC  C029  FFE2         	movff	??_SYS_InterruptLow+10,fsr1h
 30535  0001C0  C028  FFE1         	movff	??_SYS_InterruptLow+9,fsr1l
 30536  0001C4  C027  FFEA         	movff	??_SYS_InterruptLow+8,fsr0h
 30537  0001C8  C026  FFE9         	movff	??_SYS_InterruptLow+7,fsr0l
 30538  0001CC  C025  FFFB         	movff	??_SYS_InterruptLow+6,pclatu
 30539  0001D0  C024  FFFA         	movff	??_SYS_InterruptLow+5,pclath
 30540  0001D4  C023  FFE0         	movff	??_SYS_InterruptLow+4,bsr
 30541  0001D8  C022  FFE8         	movff	??_SYS_InterruptLow+3,wreg
 30542  0001DC  C021  FFD8         	movff	??_SYS_InterruptLow+2,status
 30543  0001E0  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30544  0001E2  0010               	retfie	
 30545  0001E4                     __end_of_SYS_InterruptLow:
 30546                           	opt stack 0
 30547                           pclatu	equ	0xFFB
 30548                           pclath	equ	0xFFA
 30549                           tblptru	equ	0xFF8
 30550                           tblptrh	equ	0xFF7
 30551                           tblptrl	equ	0xFF6
 30552                           tablat	equ	0xFF5
 30553                           prodh	equ	0xFF4
 30554                           prodl	equ	0xFF3
 30555                           intcon	equ	0xFF2
 30556                           intcon2	equ	0xFF1
 30557                           intcon3	equ	0xFF0
 30558                           indf0	equ	0xFEF
 30559                           postinc0	equ	0xFEE
 30560                           plusw0	equ	0xFEB
 30561                           fsr0h	equ	0xFEA
 30562                           fsr0l	equ	0xFE9
 30563                           wreg	equ	0xFE8
 30564                           indf1	equ	0xFE7
 30565                           postinc1	equ	0xFE6
 30566                           postdec1	equ	0xFE5
 30567                           plusw1	equ	0xFE3
 30568                           fsr1h	equ	0xFE2
 30569                           fsr1l	equ	0xFE1
 30570                           bsr	equ	0xFE0
 30571                           indf2	equ	0xFDF
 30572                           postinc2	equ	0xFDE
 30573                           postdec2	equ	0xFDD
 30574                           plusw2	equ	0xFDB
 30575                           fsr2h	equ	0xFDA
 30576                           fsr2l	equ	0xFD9
 30577                           status	equ	0xFD8
 30578                           
 30579 ;; *************** function i1___ftadd *****************
 30580 ;; Defined at:
 30581 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 30582 ;; Parameters:    Size  Location     Type
 30583 ;;  f1              3    8[COMRAM] float 
 30584 ;;  f2              3   11[COMRAM] float 
 30585 ;; Auto vars:     Size  Location     Type
 30586 ;;  __ftadd         1   19[COMRAM] unsigned char 
 30587 ;;  __ftadd         1   18[COMRAM] unsigned char 
 30588 ;;  __ftadd         1   17[COMRAM] unsigned char 
 30589 ;; Return value:  Size  Location     Type
 30590 ;;                  3    8[COMRAM] float 
 30591 ;; Registers used:
 30592 ;;		wreg, status,2, status,0, cstack
 30593 ;; Tracked objects:
 30594 ;;		On entry : 0/0
 30595 ;;		On exit  : 0/0
 30596 ;;		Unchanged: 0/0
 30597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30599 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30600 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30601 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30602 ;;Total ram usage:       12 bytes
 30603 ;; Hardware stack levels used:    1
 30604 ;; Hardware stack levels required when called:    7
 30605 ;; This function calls:
 30606 ;;		i1___ftpack
 30607 ;; This function is called by:
 30608 ;;		_SYS_InterruptLow
 30609 ;; This function uses a non-reentrant model
 30610 ;;
 30611                           
 30612                           	psect	text85
 30613  00752A                     __ptext85:
 30614                           	opt stack 0
 30615  00752A                     i1___ftadd:
 30616                           	opt stack 10
 30617                           
 30618                           ;incstack = 0
 30619  00752A  C00B  F00F         	movff	i1___ftadd@f1+2,??i1___ftadd
 30620  00752E  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 30621  007530  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 30622  007532  340A               	rlcf	i1___ftadd@f1+1,w,c
 30623  007534  360F               	rlcf	??i1___ftadd& (0+255),f,c
 30624  007536  E301               	bnc	u1650_21
 30625  007538  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 30626  00753A                     u1650_21:
 30627  00753A  500F               	movf	??i1___ftadd,w,c
 30628  00753C  6E14               	movwf	i1___ftadd@exp1,c
 30629  00753E  C00E  F00F         	movff	i1___ftadd@f2+2,??i1___ftadd
 30630  007542  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 30631  007544  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 30632  007546  340D               	rlcf	i1___ftadd@f2+1,w,c
 30633  007548  360F               	rlcf	??i1___ftadd& (0+255),f,c
 30634  00754A  E301               	bnc	u1651_21
 30635  00754C  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 30636  00754E                     u1651_21:
 30637  00754E  500F               	movf	??i1___ftadd,w,c
 30638  007550  6E13               	movwf	i1___ftadd@exp2,c
 30639  007552  5014               	movf	i1___ftadd@exp1,w,c
 30640  007554  B4D8               	btfsc	status,2,c
 30641  007556  D00B               	goto	i1l2493
 30642  007558  5013               	movf	i1___ftadd@exp2,w,c
 30643  00755A  5C14               	subwf	i1___ftadd@exp1,w,c
 30644  00755C  B0D8               	btfsc	status,0,c
 30645  00755E  D00E               	goto	i1l15496
 30646  007560  5014               	movf	i1___ftadd@exp1,w,c
 30647  007562  0800               	sublw	0
 30648  007564  2413               	addwf	i1___ftadd@exp2,w,c
 30649  007566  6E0F               	movwf	??i1___ftadd& (0+255),c
 30650  007568  0E18               	movlw	24
 30651  00756A  640F               	cpfsgt	??i1___ftadd,c
 30652  00756C  D007               	goto	i1l15496
 30653  00756E                     i1l2493:
 30654  00756E  C00C  F009         	movff	i1___ftadd@f2,?i1___ftadd
 30655  007572  C00D  F00A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 30656  007576  C00E  F00B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 30657  00757A  0012               	return	
 30658  00757C                     i1l15496:
 30659  00757C  5013               	movf	i1___ftadd@exp2,w,c
 30660  00757E  B4D8               	btfsc	status,2,c
 30661  007580  D00B               	goto	i1l2497
 30662  007582  5014               	movf	i1___ftadd@exp1,w,c
 30663  007584  5C13               	subwf	i1___ftadd@exp2,w,c
 30664  007586  B0D8               	btfsc	status,0,c
 30665  007588  D00E               	goto	i1l15502
 30666  00758A  5013               	movf	i1___ftadd@exp2,w,c
 30667  00758C  0800               	sublw	0
 30668  00758E  2414               	addwf	i1___ftadd@exp1,w,c
 30669  007590  6E0F               	movwf	??i1___ftadd& (0+255),c
 30670  007592  0E18               	movlw	24
 30671  007594  640F               	cpfsgt	??i1___ftadd,c
 30672  007596  D007               	goto	i1l15502
 30673  007598                     i1l2497:
 30674  007598  C009  F009         	movff	i1___ftadd@f1,?i1___ftadd
 30675  00759C  C00A  F00A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 30676  0075A0  C00B  F00B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 30677  0075A4  0012               	return	
 30678  0075A6                     i1l15502:
 30679  0075A6  0E06               	movlw	6
 30680  0075A8  6E12               	movwf	i1___ftadd@sign,c
 30681  0075AA  BE0B               	btfsc	i1___ftadd@f1+2,7,c
 30682  0075AC  8E12               	bsf	i1___ftadd@sign,7,c
 30683  0075AE  BE0E               	btfsc	i1___ftadd@f2+2,7,c
 30684  0075B0  8C12               	bsf	i1___ftadd@sign,6,c
 30685  0075B2  8E0A               	bsf	i1___ftadd@f1+1,7,c
 30686  0075B4  0EFF               	movlw	255
 30687  0075B6  1609               	andwf	i1___ftadd@f1,f,c
 30688  0075B8  0EFF               	movlw	255
 30689  0075BA  160A               	andwf	i1___ftadd@f1+1,f,c
 30690  0075BC  0E00               	movlw	0
 30691  0075BE  160B               	andwf	i1___ftadd@f1+2,f,c
 30692  0075C0  8E0D               	bsf	i1___ftadd@f2+1,7,c
 30693  0075C2  0EFF               	movlw	255
 30694  0075C4  160C               	andwf	i1___ftadd@f2,f,c
 30695  0075C6  0EFF               	movlw	255
 30696  0075C8  160D               	andwf	i1___ftadd@f2+1,f,c
 30697  0075CA  0E00               	movlw	0
 30698  0075CC  160E               	andwf	i1___ftadd@f2+2,f,c
 30699  0075CE  5013               	movf	i1___ftadd@exp2,w,c
 30700  0075D0  5C14               	subwf	i1___ftadd@exp1,w,c
 30701  0075D2  B0D8               	btfsc	status,0,c
 30702  0075D4  D01B               	goto	i1l15528
 30703  0075D6                     i1l15518:
 30704  0075D6  90D8               	bcf	status,0,c
 30705  0075D8  360C               	rlcf	i1___ftadd@f2,f,c
 30706  0075DA  360D               	rlcf	i1___ftadd@f2+1,f,c
 30707  0075DC  360E               	rlcf	i1___ftadd@f2+2,f,c
 30708  0075DE  0613               	decf	i1___ftadd@exp2,f,c
 30709  0075E0  5014               	movf	i1___ftadd@exp1,w,c
 30710  0075E2  1813               	xorwf	i1___ftadd@exp2,w,c
 30711  0075E4  B4D8               	btfsc	status,2,c
 30712  0075E6  D00D               	goto	i1l15526
 30713  0075E8  0612               	decf	i1___ftadd@sign,f,c
 30714  0075EA  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 30715  0075EE  0E07               	movlw	7
 30716  0075F0  160F               	andwf	??i1___ftadd,f,c
 30717  0075F2  B4D8               	btfsc	status,2,c
 30718  0075F4  D006               	goto	i1l15526
 30719  0075F6  D7EF               	goto	i1l15518
 30720  0075F8                     i1l15524:
 30721  0075F8  90D8               	bcf	status,0,c
 30722  0075FA  320B               	rrcf	i1___ftadd@f1+2,f,c
 30723  0075FC  320A               	rrcf	i1___ftadd@f1+1,f,c
 30724  0075FE  3209               	rrcf	i1___ftadd@f1,f,c
 30725  007600  2A14               	incf	i1___ftadd@exp1,f,c
 30726  007602                     i1l15526:
 30727  007602  5013               	movf	i1___ftadd@exp2,w,c
 30728  007604  1814               	xorwf	i1___ftadd@exp1,w,c
 30729  007606  B4D8               	btfsc	status,2,c
 30730  007608  D01F               	goto	i1l2508
 30731  00760A  D7F6               	goto	i1l15524
 30732  00760C                     i1l15528:
 30733  00760C  5014               	movf	i1___ftadd@exp1,w,c
 30734  00760E  5C13               	subwf	i1___ftadd@exp2,w,c
 30735  007610  B0D8               	btfsc	status,0,c
 30736  007612  D01A               	goto	i1l2508
 30737  007614                     i1l15530:
 30738  007614  90D8               	bcf	status,0,c
 30739  007616  3609               	rlcf	i1___ftadd@f1,f,c
 30740  007618  360A               	rlcf	i1___ftadd@f1+1,f,c
 30741  00761A  360B               	rlcf	i1___ftadd@f1+2,f,c
 30742  00761C  0614               	decf	i1___ftadd@exp1,f,c
 30743  00761E  5014               	movf	i1___ftadd@exp1,w,c
 30744  007620  1813               	xorwf	i1___ftadd@exp2,w,c
 30745  007622  B4D8               	btfsc	status,2,c
 30746  007624  D00D               	goto	i1l15538
 30747  007626  0612               	decf	i1___ftadd@sign,f,c
 30748  007628  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 30749  00762C  0E07               	movlw	7
 30750  00762E  160F               	andwf	??i1___ftadd,f,c
 30751  007630  B4D8               	btfsc	status,2,c
 30752  007632  D006               	goto	i1l15538
 30753  007634  D7EF               	goto	i1l15530
 30754  007636                     i1l15536:
 30755  007636  90D8               	bcf	status,0,c
 30756  007638  320E               	rrcf	i1___ftadd@f2+2,f,c
 30757  00763A  320D               	rrcf	i1___ftadd@f2+1,f,c
 30758  00763C  320C               	rrcf	i1___ftadd@f2,f,c
 30759  00763E  2A13               	incf	i1___ftadd@exp2,f,c
 30760  007640                     i1l15538:
 30761  007640  5013               	movf	i1___ftadd@exp2,w,c
 30762  007642  1814               	xorwf	i1___ftadd@exp1,w,c
 30763  007644  A4D8               	btfss	status,2,c
 30764  007646  D7F7               	goto	i1l15536
 30765  007648                     i1l2508:
 30766  007648  AE12               	btfss	i1___ftadd@sign,7,c
 30767  00764A  D00C               	goto	i1l2517
 30768  00764C  0EFF               	movlw	255
 30769  00764E  1A09               	xorwf	i1___ftadd@f1,f,c
 30770  007650  0EFF               	movlw	255
 30771  007652  1A0A               	xorwf	i1___ftadd@f1+1,f,c
 30772  007654  0EFF               	movlw	255
 30773  007656  1A0B               	xorwf	i1___ftadd@f1+2,f,c
 30774  007658  0E01               	movlw	1
 30775  00765A  2609               	addwf	i1___ftadd@f1,f,c
 30776  00765C  0E00               	movlw	0
 30777  00765E  220A               	addwfc	i1___ftadd@f1+1,f,c
 30778  007660  0E00               	movlw	0
 30779  007662  220B               	addwfc	i1___ftadd@f1+2,f,c
 30780  007664                     i1l2517:
 30781  007664  AC12               	btfss	i1___ftadd@sign,6,c
 30782  007666  D00C               	goto	i1l15544
 30783  007668  0EFF               	movlw	255
 30784  00766A  1A0C               	xorwf	i1___ftadd@f2,f,c
 30785  00766C  0EFF               	movlw	255
 30786  00766E  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 30787  007670  0EFF               	movlw	255
 30788  007672  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 30789  007674  0E01               	movlw	1
 30790  007676  260C               	addwf	i1___ftadd@f2,f,c
 30791  007678  0E00               	movlw	0
 30792  00767A  220D               	addwfc	i1___ftadd@f2+1,f,c
 30793  00767C  0E00               	movlw	0
 30794  00767E  220E               	addwfc	i1___ftadd@f2+2,f,c
 30795  007680                     i1l15544:
 30796  007680  0E00               	movlw	0
 30797  007682  6E12               	movwf	i1___ftadd@sign,c
 30798  007684  5009               	movf	i1___ftadd@f1,w,c
 30799  007686  260C               	addwf	i1___ftadd@f2,f,c
 30800  007688  500A               	movf	i1___ftadd@f1+1,w,c
 30801  00768A  220D               	addwfc	i1___ftadd@f2+1,f,c
 30802  00768C  500B               	movf	i1___ftadd@f1+2,w,c
 30803  00768E  220E               	addwfc	i1___ftadd@f2+2,f,c
 30804  007690  AE0E               	btfss	i1___ftadd@f2+2,7,c
 30805  007692  D00E               	goto	i1l15554
 30806  007694  0EFF               	movlw	255
 30807  007696  1A0C               	xorwf	i1___ftadd@f2,f,c
 30808  007698  0EFF               	movlw	255
 30809  00769A  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 30810  00769C  0EFF               	movlw	255
 30811  00769E  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 30812  0076A0  0E01               	movlw	1
 30813  0076A2  260C               	addwf	i1___ftadd@f2,f,c
 30814  0076A4  0E00               	movlw	0
 30815  0076A6  220D               	addwfc	i1___ftadd@f2+1,f,c
 30816  0076A8  0E00               	movlw	0
 30817  0076AA  220E               	addwfc	i1___ftadd@f2+2,f,c
 30818  0076AC  0E01               	movlw	1
 30819  0076AE  6E12               	movwf	i1___ftadd@sign,c
 30820  0076B0                     i1l15554:
 30821  0076B0  C00C  F001         	movff	i1___ftadd@f2,i1___ftpack@arg
 30822  0076B4  C00D  F002         	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 30823  0076B8  C00E  F003         	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 30824  0076BC  C014  F004         	movff	i1___ftadd@exp1,i1___ftpack@exp
 30825  0076C0  C012  F005         	movff	i1___ftadd@sign,i1___ftpack@sign
 30826  0076C4  ECE0  F053         	call	i1___ftpack	;wreg free
 30827  0076C8  C001  F009         	movff	?i1___ftpack,?i1___ftadd
 30828  0076CC  C002  F00A         	movff	?i1___ftpack+1,?i1___ftadd+1
 30829  0076D0  C003  F00B         	movff	?i1___ftpack+2,?i1___ftadd+2
 30830  0076D4  0012               	return	
 30831  0076D6                     __end_ofi1___ftadd:
 30832                           	opt stack 0
 30833                           pclatu	equ	0xFFB
 30834                           pclath	equ	0xFFA
 30835                           tblptru	equ	0xFF8
 30836                           tblptrh	equ	0xFF7
 30837                           tblptrl	equ	0xFF6
 30838                           tablat	equ	0xFF5
 30839                           prodh	equ	0xFF4
 30840                           prodl	equ	0xFF3
 30841                           intcon	equ	0xFF2
 30842                           intcon2	equ	0xFF1
 30843                           intcon3	equ	0xFF0
 30844                           indf0	equ	0xFEF
 30845                           postinc0	equ	0xFEE
 30846                           plusw0	equ	0xFEB
 30847                           fsr0h	equ	0xFEA
 30848                           fsr0l	equ	0xFE9
 30849                           wreg	equ	0xFE8
 30850                           indf1	equ	0xFE7
 30851                           postinc1	equ	0xFE6
 30852                           postdec1	equ	0xFE5
 30853                           plusw1	equ	0xFE3
 30854                           fsr1h	equ	0xFE2
 30855                           fsr1l	equ	0xFE1
 30856                           bsr	equ	0xFE0
 30857                           indf2	equ	0xFDF
 30858                           postinc2	equ	0xFDE
 30859                           postdec2	equ	0xFDD
 30860                           plusw2	equ	0xFDB
 30861                           fsr2h	equ	0xFDA
 30862                           fsr2l	equ	0xFD9
 30863                           status	equ	0xFD8
 30864                           
 30865 ;; *************** function i1___ftpack *****************
 30866 ;; Defined at:
 30867 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 30868 ;; Parameters:    Size  Location     Type
 30869 ;;  arg             3    0[COMRAM] unsigned um
 30870 ;;  exp             1    3[COMRAM] unsigned char 
 30871 ;;  sign            1    4[COMRAM] unsigned char 
 30872 ;; Auto vars:     Size  Location     Type
 30873 ;;		None
 30874 ;; Return value:  Size  Location     Type
 30875 ;;                  3    0[COMRAM] float 
 30876 ;; Registers used:
 30877 ;;		wreg, status,2, status,0
 30878 ;; Tracked objects:
 30879 ;;		On entry : 0/0
 30880 ;;		On exit  : 0/0
 30881 ;;		Unchanged: 0/0
 30882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30883 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30885 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30886 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30887 ;;Total ram usage:        8 bytes
 30888 ;; Hardware stack levels used:    1
 30889 ;; Hardware stack levels required when called:    6
 30890 ;; This function calls:
 30891 ;;		Nothing
 30892 ;; This function is called by:
 30893 ;;		i1___ftadd
 30894 ;; This function uses a non-reentrant model
 30895 ;;
 30896                           
 30897                           	psect	text86
 30898  00A7C0                     __ptext86:
 30899                           	opt stack 0
 30900  00A7C0                     i1___ftpack:
 30901                           	opt stack 10
 30902                           
 30903                           ;incstack = 0
 30904  00A7C0  5004               	movf	i1___ftpack@exp,w,c
 30905  00A7C2  B4D8               	btfsc	status,2,c
 30906  00A7C4  D005               	goto	i1l13676
 30907  00A7C6  5001               	movf	i1___ftpack@arg,w,c
 30908  00A7C8  1002               	iorwf	i1___ftpack@arg+1,w,c
 30909  00A7CA  1003               	iorwf	i1___ftpack@arg+2,w,c
 30910  00A7CC  A4D8               	btfss	status,2,c
 30911  00A7CE  D00C               	goto	i1l13682
 30912  00A7D0                     i1l13676:
 30913  00A7D0  0E00               	movlw	0
 30914  00A7D2  6E01               	movwf	?i1___ftpack,c
 30915  00A7D4  0E00               	movlw	0
 30916  00A7D6  6E02               	movwf	?i1___ftpack+1,c
 30917  00A7D8  0E00               	movlw	0
 30918  00A7DA  6E03               	movwf	?i1___ftpack+2,c
 30919  00A7DC  0012               	return	
 30920  00A7DE                     i1l13680:
 30921  00A7DE  2A04               	incf	i1___ftpack@exp,f,c
 30922  00A7E0  90D8               	bcf	status,0,c
 30923  00A7E2  3203               	rrcf	i1___ftpack@arg+2,f,c
 30924  00A7E4  3202               	rrcf	i1___ftpack@arg+1,f,c
 30925  00A7E6  3201               	rrcf	i1___ftpack@arg,f,c
 30926  00A7E8                     i1l13682:
 30927  00A7E8  0E00               	movlw	0
 30928  00A7EA  1401               	andwf	i1___ftpack@arg,w,c
 30929  00A7EC  6E06               	movwf	??i1___ftpack& (0+255),c
 30930  00A7EE  0E00               	movlw	0
 30931  00A7F0  1402               	andwf	i1___ftpack@arg+1,w,c
 30932  00A7F2  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 30933  00A7F4  0EFE               	movlw	254
 30934  00A7F6  1403               	andwf	i1___ftpack@arg+2,w,c
 30935  00A7F8  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 30936  00A7FA  5006               	movf	??i1___ftpack,w,c
 30937  00A7FC  1007               	iorwf	??i1___ftpack+1,w,c
 30938  00A7FE  1008               	iorwf	??i1___ftpack+2,w,c
 30939  00A800  B4D8               	btfsc	status,2,c
 30940  00A802  D00C               	goto	i1l13688
 30941  00A804  D7EC               	goto	i1l13680
 30942  00A806                     i1l13684:
 30943  00A806  2A04               	incf	i1___ftpack@exp,f,c
 30944  00A808  0E01               	movlw	1
 30945  00A80A  2601               	addwf	i1___ftpack@arg,f,c
 30946  00A80C  0E00               	movlw	0
 30947  00A80E  2202               	addwfc	i1___ftpack@arg+1,f,c
 30948  00A810  0E00               	movlw	0
 30949  00A812  2203               	addwfc	i1___ftpack@arg+2,f,c
 30950  00A814  90D8               	bcf	status,0,c
 30951  00A816  3203               	rrcf	i1___ftpack@arg+2,f,c
 30952  00A818  3202               	rrcf	i1___ftpack@arg+1,f,c
 30953  00A81A  3201               	rrcf	i1___ftpack@arg,f,c
 30954  00A81C                     i1l13688:
 30955  00A81C  0E00               	movlw	0
 30956  00A81E  1401               	andwf	i1___ftpack@arg,w,c
 30957  00A820  6E06               	movwf	??i1___ftpack& (0+255),c
 30958  00A822  0E00               	movlw	0
 30959  00A824  1402               	andwf	i1___ftpack@arg+1,w,c
 30960  00A826  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 30961  00A828  0EFF               	movlw	255
 30962  00A82A  1403               	andwf	i1___ftpack@arg+2,w,c
 30963  00A82C  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 30964  00A82E  5006               	movf	??i1___ftpack,w,c
 30965  00A830  1007               	iorwf	??i1___ftpack+1,w,c
 30966  00A832  1008               	iorwf	??i1___ftpack+2,w,c
 30967  00A834  B4D8               	btfsc	status,2,c
 30968  00A836  D006               	goto	i1l13692
 30969  00A838  D7E6               	goto	i1l13684
 30970  00A83A                     i1l13690:
 30971  00A83A  0604               	decf	i1___ftpack@exp,f,c
 30972  00A83C  90D8               	bcf	status,0,c
 30973  00A83E  3601               	rlcf	i1___ftpack@arg,f,c
 30974  00A840  3602               	rlcf	i1___ftpack@arg+1,f,c
 30975  00A842  3603               	rlcf	i1___ftpack@arg+2,f,c
 30976  00A844                     i1l13692:
 30977  00A844  BE02               	btfsc	i1___ftpack@arg+1,7,c
 30978  00A846  D003               	goto	i1l2445
 30979  00A848  0E02               	movlw	2
 30980  00A84A  6004               	cpfslt	i1___ftpack@exp,c
 30981  00A84C  D7F6               	goto	i1l13690
 30982  00A84E                     i1l2445:
 30983  00A84E  A004               	btfss	i1___ftpack@exp,0,c
 30984  00A850  9E02               	bcf	i1___ftpack@arg+1,7,c
 30985  00A852  90D8               	bcf	status,0,c
 30986  00A854  3204               	rrcf	i1___ftpack@exp,f,c
 30987  00A856  5004               	movf	i1___ftpack@exp,w,c
 30988  00A858  1203               	iorwf	i1___ftpack@arg+2,f,c
 30989  00A85A  5005               	movf	i1___ftpack@sign,w,c
 30990  00A85C  A4D8               	btfss	status,2,c
 30991  00A85E  8E03               	bsf	i1___ftpack@arg+2,7,c
 30992  00A860  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 30993  00A864  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 30994  00A868  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 30995  00A86C  0012               	return	
 30996  00A86E                     __end_ofi1___ftpack:
 30997                           	opt stack 0
 30998                           pclatu	equ	0xFFB
 30999                           pclath	equ	0xFFA
 31000                           tblptru	equ	0xFF8
 31001                           tblptrh	equ	0xFF7
 31002                           tblptrl	equ	0xFF6
 31003                           tablat	equ	0xFF5
 31004                           prodh	equ	0xFF4
 31005                           prodl	equ	0xFF3
 31006                           intcon	equ	0xFF2
 31007                           intcon2	equ	0xFF1
 31008                           intcon3	equ	0xFF0
 31009                           indf0	equ	0xFEF
 31010                           postinc0	equ	0xFEE
 31011                           plusw0	equ	0xFEB
 31012                           fsr0h	equ	0xFEA
 31013                           fsr0l	equ	0xFE9
 31014                           wreg	equ	0xFE8
 31015                           indf1	equ	0xFE7
 31016                           postinc1	equ	0xFE6
 31017                           postdec1	equ	0xFE5
 31018                           plusw1	equ	0xFE3
 31019                           fsr1h	equ	0xFE2
 31020                           fsr1l	equ	0xFE1
 31021                           bsr	equ	0xFE0
 31022                           indf2	equ	0xFDF
 31023                           postinc2	equ	0xFDE
 31024                           postdec2	equ	0xFDD
 31025                           plusw2	equ	0xFDB
 31026                           fsr2h	equ	0xFDA
 31027                           fsr2l	equ	0xFD9
 31028                           status	equ	0xFD8
 31029                           
 31030 ;; *************** function _USBDeviceTasks *****************
 31031 ;; Defined at:
 31032 ;;		line 489 in file "src/usb/usb_device.c"
 31033 ;; Parameters:    Size  Location     Type
 31034 ;;		None
 31035 ;; Auto vars:     Size  Location     Type
 31036 ;;  i               1   29[COMRAM] unsigned char 
 31037 ;; Return value:  Size  Location     Type
 31038 ;;		None               void
 31039 ;; Registers used:
 31040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31041 ;; Tracked objects:
 31042 ;;		On entry : 0/0
 31043 ;;		On exit  : 0/0
 31044 ;;		Unchanged: 0/0
 31045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31050 ;;Total ram usage:        1 bytes
 31051 ;; Hardware stack levels used:    1
 31052 ;; Hardware stack levels required when called:   14
 31053 ;; This function calls:
 31054 ;;		_USBCtrlEPAllowStatusStage
 31055 ;;		_USBCtrlEPService
 31056 ;;		_USBStallHandler
 31057 ;;		_USBSuspend
 31058 ;;		_USBWakeFromSuspend
 31059 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31060 ;;		i1_USBDeviceInit
 31061 ;; This function is called by:
 31062 ;;		_SYS_InterruptLow
 31063 ;; This function uses a non-reentrant model
 31064 ;;
 31065                           
 31066                           	psect	text87
 31067  008114                     __ptext87:
 31068                           	opt stack 0
 31069  008114                     _USBDeviceTasks:
 31070                           	opt stack 3
 31071                           
 31072                           ;usb_device.c: 491: uint8_t i;
 31073                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 31074                           
 31075                           ;incstack = 0
 31076  008114  044B               	decf	_USBDeviceState,w,c	;volatile
 31077  008116  B4D8               	btfsc	status,2,c
 31078                           
 31079                           ;usb_device.c: 603: {
 31080                           ;usb_device.c: 613: if(!UCONbits.SE0)
 31081  008118  BA65               	btfsc	3941,5,c	;volatile
 31082  00811A  D008               	goto	i1l14712
 31083                           
 31084                           ;usb_device.c: 614: {
 31085                           ;usb_device.c: 615: {UIR = 0;};
 31086  00811C  0E00               	movlw	0
 31087  00811E  6E62               	movwf	3938,c	;volatile
 31088                           
 31089                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 31090  008120  010F               	movlb	15	; () banked
 31091  008122  8136               	bsf	54,0,b	;volatile
 31092                           
 31093                           ; BSR set to: 15
 31094                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 31095  008124  010F               	movlb	15	; () banked
 31096  008126  8936               	bsf	54,4,b	;volatile
 31097                           
 31098                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 31099  008128  0E02               	movlw	2
 31100  00812A  6E4B               	movwf	_USBDeviceState,c	;volatile
 31101  00812C                     i1l14712:
 31102                           
 31103                           ;usb_device.c: 622: }
 31104                           ;usb_device.c: 623: }
 31105                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 31106  00812C  A462               	btfss	3938,2,c	;volatile
 31107  00812E  D006               	goto	i1l14720
 31108  008130  010F               	movlb	15	; () banked
 31109  008132  A536               	btfss	54,2,b	;volatile
 31110  008134  D003               	goto	i1l14720
 31111                           
 31112                           ; BSR set to: 15
 31113                           ;usb_device.c: 640: {
 31114                           ;usb_device.c: 641: (UIR &= 0xFB);
 31115  008136  9462               	bcf	3938,2,c	;volatile
 31116                           
 31117                           ; BSR set to: 15
 31118                           ;usb_device.c: 645: USBWakeFromSuspend();
 31119  008138  ECEB  F05C         	call	_USBWakeFromSuspend	;wreg free
 31120  00813C                     i1l14720:
 31121                           
 31122                           ;usb_device.c: 647: }
 31123                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 31124  00813C  A265               	btfss	3941,1,c	;volatile
 31125  00813E  D002               	goto	i1l1234
 31126                           
 31127                           ;usb_device.c: 653: {
 31128                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 31129  008140  98A1               	bcf	4001,4,c	;volatile
 31130                           
 31131                           ;usb_device.c: 655: return;
 31132  008142  0012               	return	
 31133  008144                     i1l1234:
 31134                           
 31135                           ;usb_device.c: 656: }
 31136                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 31137  008144  A062               	btfss	3938,0,c	;volatile
 31138  008146  D009               	goto	i1l14734
 31139  008148  010F               	movlb	15	; () banked
 31140  00814A  A136               	btfss	54,0,b	;volatile
 31141  00814C  D006               	goto	i1l14734
 31142                           
 31143                           ; BSR set to: 15
 31144                           ;usb_device.c: 669: {
 31145                           ;usb_device.c: 670: USBDeviceInit();
 31146  00814E  EC71  F042         	call	i1_USBDeviceInit	;wreg free
 31147                           
 31148                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 31149  008152  88A0               	bsf	4000,4,c	;volatile
 31150                           
 31151                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 31152  008154  0E04               	movlw	4
 31153  008156  6E4B               	movwf	_USBDeviceState,c	;volatile
 31154                           
 31155                           ;usb_device.c: 686: (UIR &= 0xFE);
 31156  008158  9062               	bcf	3938,0,c	;volatile
 31157  00815A                     i1l14734:
 31158                           
 31159                           ;usb_device.c: 687: }
 31160                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 31161  00815A  A862               	btfss	3938,4,c	;volatile
 31162  00815C  D006               	goto	i1l14742
 31163  00815E  010F               	movlb	15	; () banked
 31164  008160  A936               	btfss	54,4,b	;volatile
 31165  008162  D003               	goto	i1l14742
 31166                           
 31167                           ; BSR set to: 15
 31168                           ;usb_device.c: 693: {
 31169                           ;usb_device.c: 698: USBSuspend();
 31170  008164  EC44  F05D         	call	_USBSuspend	;wreg free
 31171                           
 31172                           ;usb_device.c: 701: (UIR &= 0xEF);
 31173  008168  9862               	bcf	3938,4,c	;volatile
 31174  00816A                     i1l14742:
 31175                           
 31176                           ;usb_device.c: 702: }
 31177                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 31178  00816A  AC62               	btfss	3938,6,c	;volatile
 31179  00816C  D019               	goto	i1l14758
 31180                           
 31181                           ;usb_device.c: 705: {
 31182                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 31183  00816E  010F               	movlb	15	; () banked
 31184  008170  AD36               	btfss	54,6,b	;volatile
 31185  008172  D00E               	goto	i1l14748
 31186                           
 31187                           ; BSR set to: 15
 31188                           ;usb_device.c: 707: {
 31189                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 31190  008174  0E00               	movlw	0
 31191  008176  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31192  008178  0E73               	movlw	115
 31193  00817A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31194  00817C  0E00               	movlw	0
 31195  00817E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31196  008180  0E00               	movlw	0
 31197  008182  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31198  008184  0E00               	movlw	0
 31199  008186  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31200  008188  0E01               	movlw	1
 31201  00818A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31202  00818C  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31203  008190                     i1l14748:
 31204                           
 31205                           ;usb_device.c: 709: }
 31206                           ;usb_device.c: 710: (UIR &= 0xBF);
 31207  008190  9C62               	bcf	3938,6,c	;volatile
 31208                           
 31209                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 31210  008192  504E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 31211  008194  A4D8               	btfss	status,2,c
 31212                           
 31213                           ;usb_device.c: 736: {
 31214                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 31215  008196  064E               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 31216                           
 31217                           ;usb_device.c: 738: }
 31218                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 31219  008198  504E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 31220  00819A  B4D8               	btfsc	status,2,c
 31221                           
 31222                           ;usb_device.c: 745: {
 31223                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 31224  00819C  ECDB  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 31225  0081A0                     i1l14758:
 31226                           
 31227                           ;usb_device.c: 747: }
 31228                           ;usb_device.c: 749: }
 31229                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 31230  0081A0  AA62               	btfss	3938,5,c	;volatile
 31231  0081A2  D004               	goto	i1l14764
 31232  0081A4  010F               	movlb	15	; () banked
 31233  0081A6  BB36               	btfsc	54,5,b	;volatile
 31234                           
 31235                           ; BSR set to: 15
 31236                           ;usb_device.c: 752: {
 31237                           ;usb_device.c: 753: USBStallHandler();
 31238  0081A8  EC27  F05B         	call	_USBStallHandler	;wreg free
 31239  0081AC                     i1l14764:
 31240                           
 31241                           ;usb_device.c: 754: }
 31242                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 31243  0081AC  A262               	btfss	3938,1,c	;volatile
 31244  0081AE  D012               	goto	i1l14772
 31245  0081B0  010F               	movlb	15	; () banked
 31246  0081B2  A336               	btfss	54,1,b	;volatile
 31247  0081B4  D00F               	goto	i1l14772
 31248                           
 31249                           ; BSR set to: 15
 31250                           ;usb_device.c: 757: {
 31251                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 31252  0081B6  0E7F               	movlw	127
 31253  0081B8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31254  0081BA  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31255  0081BC  0E00               	movlw	0
 31256  0081BE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31257  0081C0  0E00               	movlw	0
 31258  0081C2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31259  0081C4  0E00               	movlw	0
 31260  0081C6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31261  0081C8  0E01               	movlw	1
 31262  0081CA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31263  0081CC  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31264                           
 31265                           ;usb_device.c: 759: {UEIR = 0;};
 31266  0081D0  0E00               	movlw	0
 31267  0081D2  6E63               	movwf	3939,c	;volatile
 31268  0081D4                     i1l14772:
 31269                           
 31270                           ;usb_device.c: 767: }
 31271                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 31272  0081D4  0E04               	movlw	4
 31273  0081D6  604B               	cpfslt	_USBDeviceState,c	;volatile
 31274  0081D8  D002               	goto	i1l1244
 31275                           
 31276                           ;usb_device.c: 775: {
 31277                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 31278  0081DA  98A1               	bcf	4001,4,c	;volatile
 31279                           
 31280                           ;usb_device.c: 777: return;
 31281  0081DC  0012               	return	
 31282  0081DE                     i1l1244:
 31283                           
 31284                           ;usb_device.c: 778: }
 31285                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 31286  0081DE  010F               	movlb	15	; () banked
 31287  0081E0  A736               	btfss	54,3,b	;volatile
 31288  0081E2  D039               	goto	i1l1245
 31289                           
 31290                           ; BSR set to: 15
 31291                           ;usb_device.c: 784: {
 31292                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 31293  0081E4  0E00               	movlw	0
 31294  0081E6  6E1E               	movwf	USBDeviceTasks@i,c
 31295  0081E8                     i1l14778:
 31296                           
 31297                           ; BSR set to: 15
 31298  0081E8  0E03               	movlw	3
 31299  0081EA  641E               	cpfsgt	USBDeviceTasks@i,c
 31300  0081EC  D001               	goto	i1l1246
 31301  0081EE  D033               	goto	i1l1245
 31302  0081F0                     i1l1246:
 31303                           
 31304                           ;usb_device.c: 786: {
 31305                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 31306  0081F0  A662               	btfss	3938,3,c	;volatile
 31307  0081F2  D031               	goto	i1l1245
 31308                           
 31309                           ;usb_device.c: 788: {
 31310                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 31311  0081F4  CF64 F058          	movff	3940,_USTATcopy	;volatile
 31312                           
 31313                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 31314  0081F8  3058               	rrcf	_USTATcopy,w,c	;volatile
 31315  0081FA  32E8               	rrcf	wreg,f,c
 31316  0081FC  32E8               	rrcf	wreg,f,c
 31317  0081FE  0B0F               	andlw	15
 31318  008200  6E50               	movwf	_endpoint_number,c	;volatile
 31319                           
 31320                           ;usb_device.c: 793: (UIR &= 0xF7);
 31321  008202  9662               	bcf	3938,3,c	;volatile
 31322                           
 31323                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 31324  008204  B458               	btfsc	_USTATcopy,2,c	;volatile
 31325  008206  D007               	goto	i1l14792
 31326                           
 31327                           ;usb_device.c: 799: {
 31328                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 31329  008208  5050               	movf	_endpoint_number,w,c	;volatile
 31330  00820A  0D01               	mullw	1
 31331  00820C  0E97               	movlw	low _ep_data_out
 31332  00820E  24F3               	addwf	prodl,w,c
 31333  008210  6ED9               	movwf	fsr2l,c
 31334  008212  0E00               	movlw	high _ep_data_out
 31335  008214  D006               	goto	L15
 31336  008216                     i1l14792:
 31337                           
 31338                           ;usb_device.c: 802: else
 31339                           ;usb_device.c: 803: {
 31340                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 31341  008216  5050               	movf	_endpoint_number,w,c	;volatile
 31342  008218  0D01               	mullw	1
 31343  00821A  0E95               	movlw	low _ep_data_in
 31344  00821C  24F3               	addwf	prodl,w,c
 31345  00821E  6ED9               	movwf	fsr2l,c
 31346  008220  0E00               	movlw	high _ep_data_in
 31347  008222                     L15:
 31348  008222  20F4               	addwfc	prodh,w,c
 31349  008224  6EDA               	movwf	fsr2h,c
 31350  008226  0100               	movlb	0	; () banked
 31351  008228  70DF               	btg	indf2,0,c
 31352                           
 31353                           ; BSR set to: 0
 31354                           ;usb_device.c: 805: }
 31355                           ;usb_device.c: 810: if(endpoint_number == 0)
 31356                           
 31357                           ; BSR set to: 0
 31358  00822A  5050               	movf	_endpoint_number,w,c	;volatile
 31359  00822C  A4D8               	btfss	status,2,c
 31360  00822E  D003               	goto	i1l14798
 31361                           
 31362                           ; BSR set to: 0
 31363                           ;usb_device.c: 811: {
 31364                           ;usb_device.c: 812: USBCtrlEPService();
 31365  008230  ECE7  F04D         	call	_USBCtrlEPService	;wreg free
 31366                           
 31367                           ;usb_device.c: 813: }
 31368  008234  D00E               	goto	i1l14800
 31369  008236                     i1l14798:
 31370                           
 31371                           ;usb_device.c: 814: else
 31372                           ;usb_device.c: 815: {
 31373                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 31374  008236  0E00               	movlw	0
 31375  008238  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31376  00823A  0E72               	movlw	114
 31377  00823C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31378  00823E  0E58               	movlw	low _USTATcopy
 31379  008240  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31380  008242  0E00               	movlw	high _USTATcopy
 31381  008244  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31382  008246  0E00               	movlw	0
 31383  008248  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31384  00824A  0E00               	movlw	0
 31385  00824C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31386  00824E  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31387  008252                     i1l14800:
 31388  008252  2A1E               	incf	USBDeviceTasks@i,f,c
 31389  008254  D7C9               	goto	i1l14778
 31390  008256                     i1l1245:
 31391                           
 31392                           ;usb_device.c: 822: }
 31393                           ;usb_device.c: 823: }
 31394                           ;usb_device.c: 824: }
 31395                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 31396  008256  98A1               	bcf	4001,4,c	;volatile
 31397  008258  0012               	return		;funcret
 31398  00825A                     __end_of_USBDeviceTasks:
 31399                           	opt stack 0
 31400                           pclatu	equ	0xFFB
 31401                           pclath	equ	0xFFA
 31402                           tblptru	equ	0xFF8
 31403                           tblptrh	equ	0xFF7
 31404                           tblptrl	equ	0xFF6
 31405                           tablat	equ	0xFF5
 31406                           prodh	equ	0xFF4
 31407                           prodl	equ	0xFF3
 31408                           intcon	equ	0xFF2
 31409                           intcon2	equ	0xFF1
 31410                           intcon3	equ	0xFF0
 31411                           indf0	equ	0xFEF
 31412                           postinc0	equ	0xFEE
 31413                           plusw0	equ	0xFEB
 31414                           fsr0h	equ	0xFEA
 31415                           fsr0l	equ	0xFE9
 31416                           wreg	equ	0xFE8
 31417                           indf1	equ	0xFE7
 31418                           postinc1	equ	0xFE6
 31419                           postdec1	equ	0xFE5
 31420                           plusw1	equ	0xFE3
 31421                           fsr1h	equ	0xFE2
 31422                           fsr1l	equ	0xFE1
 31423                           bsr	equ	0xFE0
 31424                           indf2	equ	0xFDF
 31425                           postinc2	equ	0xFDE
 31426                           postdec2	equ	0xFDD
 31427                           plusw2	equ	0xFDB
 31428                           fsr2h	equ	0xFDA
 31429                           fsr2l	equ	0xFD9
 31430                           status	equ	0xFD8
 31431                           
 31432 ;; *************** function i1_USBDeviceInit *****************
 31433 ;; Defined at:
 31434 ;;		line 298 in file "src/usb/usb_device.c"
 31435 ;; Parameters:    Size  Location     Type
 31436 ;;		None
 31437 ;; Auto vars:     Size  Location     Type
 31438 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 31439 ;; Return value:  Size  Location     Type
 31440 ;;		None               void
 31441 ;; Registers used:
 31442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31443 ;; Tracked objects:
 31444 ;;		On entry : 0/0
 31445 ;;		On exit  : 0/0
 31446 ;;		Unchanged: 0/0
 31447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31451 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31452 ;;Total ram usage:        1 bytes
 31453 ;; Hardware stack levels used:    1
 31454 ;; Hardware stack levels required when called:    7
 31455 ;; This function calls:
 31456 ;;		i1_memset
 31457 ;; This function is called by:
 31458 ;;		_USBDeviceTasks
 31459 ;; This function uses a non-reentrant model
 31460 ;;
 31461                           
 31462                           	psect	text88
 31463  0084E2                     __ptext88:
 31464                           	opt stack 0
 31465  0084E2                     i1_USBDeviceInit:
 31466                           	opt stack 9
 31467                           
 31468                           ;usb_device.c: 300: uint8_t i;
 31469                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 31470                           
 31471                           ;incstack = 0
 31472  0084E2  98A0               	bcf	4000,4,c	;volatile
 31473                           
 31474                           ;usb_device.c: 305: {UEIR = 0;};
 31475  0084E4  0E00               	movlw	0
 31476  0084E6  6E63               	movwf	3939,c	;volatile
 31477                           
 31478                           ;usb_device.c: 308: {UIR = 0;};
 31479  0084E8  0E00               	movlw	0
 31480  0084EA  6E62               	movwf	3938,c	;volatile
 31481                           
 31482                           ;usb_device.c: 311: UEP0 = 0;
 31483  0084EC  0E00               	movlw	0
 31484  0084EE  010F               	movlb	15	; () banked
 31485  0084F0  6F26               	movwf	38,b	;volatile
 31486                           
 31487                           ; BSR set to: 15
 31488                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 31489  0084F2  0E27               	movlw	39
 31490  0084F4  6E01               	movwf	i1memset@p1,c
 31491  0084F6  0E0F               	movlw	15
 31492  0084F8  6E02               	movwf	i1memset@p1+1,c
 31493  0084FA  0E00               	movlw	0
 31494  0084FC  6E04               	movwf	i1memset@c+1,c
 31495  0084FE  0E00               	movlw	0
 31496  008500  6E03               	movwf	i1memset@c,c
 31497  008502  0E00               	movlw	0
 31498  008504  6E06               	movwf	i1memset@n+1,c
 31499  008506  0E01               	movlw	1
 31500  008508  6E05               	movwf	i1memset@n,c
 31501  00850A  EC19  F05D         	call	i1_memset	;wreg free
 31502                           
 31503                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 31504  00850E  0E16               	movlw	22
 31505  008510  010F               	movlb	15	; () banked
 31506  008512  6F39               	movwf	57,b	;volatile
 31507                           
 31508                           ; BSR set to: 15
 31509  008514  0E9F               	movlw	159
 31510  008516  010F               	movlb	15	; () banked
 31511  008518  6F37               	movwf	55,b	;volatile
 31512                           
 31513                           ; BSR set to: 15
 31514  00851A  0E7B               	movlw	123
 31515  00851C  010F               	movlb	15	; () banked
 31516  00851E  6F36               	movwf	54,b	;volatile
 31517                           
 31518                           ; BSR set to: 15
 31519                           ;usb_device.c: 318: ;
 31520                           ;usb_device.c: 321: ;
 31521                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 31522  008520  0E00               	movlw	0
 31523  008522  6E09               	movwf	i1USBDeviceInit@i,c
 31524  008524                     i1l13596:
 31525                           
 31526                           ; BSR set to: 15
 31527  008524  0E07               	movlw	7
 31528  008526  6409               	cpfsgt	i1USBDeviceInit@i,c
 31529  008528  D001               	goto	i1l13600
 31530  00852A  D00E               	goto	i1l1222
 31531  00852C                     i1l13600:
 31532                           
 31533                           ;usb_device.c: 325: {
 31534                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 31535  00852C  5009               	movf	i1USBDeviceInit@i,w,c
 31536  00852E  0D04               	mullw	4
 31537  008530  0E00               	movlw	0
 31538  008532  24F3               	addwf	prodl,w,c
 31539  008534  6ED9               	movwf	fsr2l,c
 31540  008536  0E0D               	movlw	13
 31541  008538  20F4               	addwfc	prodh,w,c
 31542  00853A  6EDA               	movwf	fsr2h,c
 31543  00853C  6ADE               	clrf	postinc2,c
 31544  00853E  6ADE               	clrf	postinc2,c
 31545  008540  6ADE               	clrf	postinc2,c
 31546  008542  6ADD               	clrf	postdec2,c
 31547  008544  2A09               	incf	i1USBDeviceInit@i,f,c
 31548  008546  D7EE               	goto	i1l13596
 31549  008548                     i1l1222:
 31550                           
 31551                           ;usb_device.c: 327: }
 31552                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 31553  008548  8C65               	bsf	3941,6,c	;volatile
 31554                           
 31555                           ;usb_device.c: 333: UADDR = 0x00;
 31556  00854A  0E00               	movlw	0
 31557  00854C  010F               	movlb	15	; () banked
 31558  00854E  6F38               	movwf	56,b	;volatile
 31559                           
 31560                           ; BSR set to: 15
 31561                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 31562  008550  9865               	bcf	3941,4,c	;volatile
 31563                           
 31564                           ; BSR set to: 15
 31565                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 31566  008552  9C65               	bcf	3941,6,c	;volatile
 31567                           
 31568                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 31569  008554  D00C               	goto	i1l13620
 31570  008556                     i1l13612:
 31571                           
 31572                           ;usb_device.c: 343: {
 31573                           ;usb_device.c: 344: (UIR &= 0xF7);
 31574  008556  9662               	bcf	3938,3,c	;volatile
 31575                           
 31576                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 31577  008558  0E00               	movlw	0
 31578  00855A  0100               	movlb	0	; () banked
 31579  00855C  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31580                           
 31581                           ; BSR set to: 0
 31582                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 31583  00855E  0E00               	movlw	0
 31584  008560  0100               	movlb	0	; () banked
 31585  008562  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31586                           
 31587                           ; BSR set to: 0
 31588                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 31589  008564  0E00               	movlw	0
 31590  008566  0100               	movlb	0	; () banked
 31591  008568  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31592  00856A  0E00               	movlw	0
 31593  00856C  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31594  00856E                     i1l13620:
 31595  00856E  B662               	btfsc	3938,3,c	;volatile
 31596  008570  D7F2               	goto	i1l13612
 31597                           
 31598                           ;usb_device.c: 349: }
 31599                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 31600  008572  0E01               	movlw	1
 31601  008574  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 31602                           
 31603                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 31604  008576  0E01               	movlw	1
 31605  008578  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 31606                           
 31607                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 31608  00857A  0E00               	movlw	0
 31609  00857C  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 31610                           
 31611                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 31612  00857E  0E00               	movlw	0
 31613  008580  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 31614                           
 31615                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 31616  008582  0E00               	movlw	0
 31617  008584  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31618                           
 31619                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 31620  008586  0E00               	movlw	0
 31621  008588  6E09               	movwf	i1USBDeviceInit@i,c
 31622  00858A                     i1l13624:
 31623  00858A  0E01               	movlw	1
 31624  00858C  6409               	cpfsgt	i1USBDeviceInit@i,c
 31625  00858E  D001               	goto	i1l13628
 31626  008590  D02E               	goto	i1l13634
 31627  008592                     i1l13628:
 31628                           
 31629                           ;usb_device.c: 363: {
 31630                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 31631  008592  5009               	movf	i1USBDeviceInit@i,w,c
 31632  008594  0D02               	mullw	2
 31633  008596  0E8B               	movlw	low _pBDTEntryIn
 31634  008598  24F3               	addwf	prodl,w,c
 31635  00859A  6ED9               	movwf	fsr2l,c
 31636  00859C  0E00               	movlw	high _pBDTEntryIn
 31637  00859E  20F4               	addwfc	prodh,w,c
 31638  0085A0  6EDA               	movwf	fsr2h,c
 31639  0085A2  0E00               	movlw	0
 31640  0085A4  6EDE               	movwf	postinc2,c
 31641  0085A6  0E00               	movlw	0
 31642  0085A8  6EDD               	movwf	postdec2,c
 31643                           
 31644                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 31645  0085AA  5009               	movf	i1USBDeviceInit@i,w,c
 31646  0085AC  0D02               	mullw	2
 31647  0085AE  0E8F               	movlw	low _pBDTEntryOut
 31648  0085B0  24F3               	addwf	prodl,w,c
 31649  0085B2  6ED9               	movwf	fsr2l,c
 31650  0085B4  0E00               	movlw	high _pBDTEntryOut
 31651  0085B6  20F4               	addwfc	prodh,w,c
 31652  0085B8  6EDA               	movwf	fsr2h,c
 31653  0085BA  0E00               	movlw	0
 31654  0085BC  6EDE               	movwf	postinc2,c
 31655  0085BE  0E00               	movlw	0
 31656  0085C0  6EDD               	movwf	postdec2,c
 31657                           
 31658                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 31659  0085C2  5009               	movf	i1USBDeviceInit@i,w,c
 31660  0085C4  0D01               	mullw	1
 31661  0085C6  0E95               	movlw	low _ep_data_in
 31662  0085C8  24F3               	addwf	prodl,w,c
 31663  0085CA  6ED9               	movwf	fsr2l,c
 31664  0085CC  0E00               	movlw	high _ep_data_in
 31665  0085CE  20F4               	addwfc	prodh,w,c
 31666  0085D0  6EDA               	movwf	fsr2h,c
 31667  0085D2  0E00               	movlw	0
 31668  0085D4  6EDF               	movwf	indf2,c
 31669                           
 31670                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 31671  0085D6  5009               	movf	i1USBDeviceInit@i,w,c
 31672  0085D8  0D01               	mullw	1
 31673  0085DA  0E97               	movlw	low _ep_data_out
 31674  0085DC  24F3               	addwf	prodl,w,c
 31675  0085DE  6ED9               	movwf	fsr2l,c
 31676  0085E0  0E00               	movlw	high _ep_data_out
 31677  0085E2  20F4               	addwfc	prodh,w,c
 31678  0085E4  6EDA               	movwf	fsr2h,c
 31679  0085E6  0E00               	movlw	0
 31680  0085E8  6EDF               	movwf	indf2,c
 31681  0085EA  2A09               	incf	i1USBDeviceInit@i,f,c
 31682  0085EC  D7CE               	goto	i1l13624
 31683  0085EE                     i1l13634:
 31684                           
 31685                           ;usb_device.c: 368: }
 31686                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31687  0085EE  0E08               	movlw	8
 31688  0085F0  0100               	movlb	0	; () banked
 31689  0085F2  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 31690  0085F4  0E0D               	movlw	13
 31691  0085F6  0100               	movlb	0	; () banked
 31692  0085F8  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31693                           
 31694                           ; BSR set to: 0
 31695                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 31696  0085FA  0E16               	movlw	22
 31697  0085FC  010F               	movlb	15	; () banked
 31698  0085FE  6F26               	movwf	38,b	;volatile
 31699                           
 31700                           ; BSR set to: 15
 31701                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31702  008600  0E0D               	movlw	13
 31703  008602  010D               	movlb	13	; () banked
 31704  008604  6F03               	movwf	3,b	;volatile
 31705  008606  0E20               	movlw	32
 31706  008608  6F02               	movwf	2,b	;volatile
 31707                           
 31708                           ; BSR set to: 13
 31709                           ;usb_device.c: 376: BDT[0].CNT = 8;
 31710  00860A  0E08               	movlw	8
 31711  00860C  010D               	movlb	13	; () banked
 31712  00860E  6F01               	movwf	1,b	;volatile
 31713                           
 31714                           ; BSR set to: 13
 31715                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 31716  008610  0E04               	movlw	4
 31717  008612  010D               	movlb	13	; () banked
 31718  008614  6F00               	movwf	0,b	;volatile
 31719                           
 31720                           ; BSR set to: 13
 31721                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 31722  008616  010D               	movlb	13	; () banked
 31723  008618  8F00               	bsf	0,7,b	;volatile
 31724                           
 31725                           ; BSR set to: 13
 31726                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 31727  00861A  0E00               	movlw	0
 31728  00861C  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 31729                           
 31730                           ; BSR set to: 13
 31731                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 31732  00861E  0E00               	movlw	0
 31733  008620  6E4B               	movwf	_USBDeviceState,c	;volatile
 31734                           
 31735                           ; BSR set to: 13
 31736  008622  0012               	return		;funcret
 31737  008624                     __end_ofi1_USBDeviceInit:
 31738                           	opt stack 0
 31739                           pclatu	equ	0xFFB
 31740                           pclath	equ	0xFFA
 31741                           tblptru	equ	0xFF8
 31742                           tblptrh	equ	0xFF7
 31743                           tblptrl	equ	0xFF6
 31744                           tablat	equ	0xFF5
 31745                           prodh	equ	0xFF4
 31746                           prodl	equ	0xFF3
 31747                           intcon	equ	0xFF2
 31748                           intcon2	equ	0xFF1
 31749                           intcon3	equ	0xFF0
 31750                           indf0	equ	0xFEF
 31751                           postinc0	equ	0xFEE
 31752                           plusw0	equ	0xFEB
 31753                           fsr0h	equ	0xFEA
 31754                           fsr0l	equ	0xFE9
 31755                           wreg	equ	0xFE8
 31756                           indf1	equ	0xFE7
 31757                           postinc1	equ	0xFE6
 31758                           postdec1	equ	0xFE5
 31759                           plusw1	equ	0xFE3
 31760                           fsr1h	equ	0xFE2
 31761                           fsr1l	equ	0xFE1
 31762                           bsr	equ	0xFE0
 31763                           indf2	equ	0xFDF
 31764                           postinc2	equ	0xFDE
 31765                           postdec2	equ	0xFDD
 31766                           plusw2	equ	0xFDB
 31767                           fsr2h	equ	0xFDA
 31768                           fsr2l	equ	0xFD9
 31769                           status	equ	0xFD8
 31770                           
 31771 ;; *************** function _USBWakeFromSuspend *****************
 31772 ;; Defined at:
 31773 ;;		line 2302 in file "src/usb/usb_device.c"
 31774 ;; Parameters:    Size  Location     Type
 31775 ;;		None
 31776 ;; Auto vars:     Size  Location     Type
 31777 ;;		None
 31778 ;; Return value:  Size  Location     Type
 31779 ;;		None               void
 31780 ;; Registers used:
 31781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31782 ;; Tracked objects:
 31783 ;;		On entry : 0/0
 31784 ;;		On exit  : 0/0
 31785 ;;		Unchanged: 0/0
 31786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31791 ;;Total ram usage:        0 bytes
 31792 ;; Hardware stack levels used:    1
 31793 ;; Hardware stack levels required when called:   10
 31794 ;; This function calls:
 31795 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31796 ;; This function is called by:
 31797 ;;		_USBDeviceTasks
 31798 ;; This function uses a non-reentrant model
 31799 ;;
 31800                           
 31801                           	psect	text89
 31802  00B9D6                     __ptext89:
 31803                           	opt stack 0
 31804  00B9D6                     _USBWakeFromSuspend:
 31805                           	opt stack 6
 31806                           
 31807                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 31808                           
 31809                           ; BSR set to: 13
 31810                           ;incstack = 0
 31811  00B9D6  0E00               	movlw	0
 31812  00B9D8  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31813                           
 31814                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 31815  00B9DA  0E00               	movlw	0
 31816  00B9DC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31817  00B9DE  0E74               	movlw	116
 31818  00B9E0  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31819  00B9E2  0E00               	movlw	0
 31820  00B9E4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31821  00B9E6  0E00               	movlw	0
 31822  00B9E8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31823  00B9EA  0E00               	movlw	0
 31824  00B9EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31825  00B9EE  0E00               	movlw	0
 31826  00B9F0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31827  00B9F2  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31828                           
 31829                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 31830  00B9F6  9265               	bcf	3941,1,c	;volatile
 31831                           
 31832                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 31833  00B9F8  010F               	movlb	15	; () banked
 31834  00B9FA  9536               	bcf	54,2,b	;volatile
 31835                           
 31836                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 31837  00B9FC  D001               	goto	i1l13128
 31838  00B9FE                     i1l13126:
 31839                           
 31840                           ;usb_device.c: 2342: {
 31841                           ;usb_device.c: 2343: (UIR &= 0xFB);
 31842  00B9FE  9462               	bcf	3938,2,c	;volatile
 31843  00BA00                     i1l13128:
 31844  00BA00  A462               	btfss	3938,2,c	;volatile
 31845  00BA02  0012               	return	
 31846  00BA04  D7FC               	goto	i1l13126
 31847  00BA06                     __end_of_USBWakeFromSuspend:
 31848                           	opt stack 0
 31849                           pclatu	equ	0xFFB
 31850                           pclath	equ	0xFFA
 31851                           tblptru	equ	0xFF8
 31852                           tblptrh	equ	0xFF7
 31853                           tblptrl	equ	0xFF6
 31854                           tablat	equ	0xFF5
 31855                           prodh	equ	0xFF4
 31856                           prodl	equ	0xFF3
 31857                           intcon	equ	0xFF2
 31858                           intcon2	equ	0xFF1
 31859                           intcon3	equ	0xFF0
 31860                           indf0	equ	0xFEF
 31861                           postinc0	equ	0xFEE
 31862                           plusw0	equ	0xFEB
 31863                           fsr0h	equ	0xFEA
 31864                           fsr0l	equ	0xFE9
 31865                           wreg	equ	0xFE8
 31866                           indf1	equ	0xFE7
 31867                           postinc1	equ	0xFE6
 31868                           postdec1	equ	0xFE5
 31869                           plusw1	equ	0xFE3
 31870                           fsr1h	equ	0xFE2
 31871                           fsr1l	equ	0xFE1
 31872                           bsr	equ	0xFE0
 31873                           indf2	equ	0xFDF
 31874                           postinc2	equ	0xFDE
 31875                           postdec2	equ	0xFDD
 31876                           plusw2	equ	0xFDB
 31877                           fsr2h	equ	0xFDA
 31878                           fsr2l	equ	0xFD9
 31879                           status	equ	0xFD8
 31880                           
 31881 ;; *************** function _USBSuspend *****************
 31882 ;; Defined at:
 31883 ;;		line 2245 in file "src/usb/usb_device.c"
 31884 ;; Parameters:    Size  Location     Type
 31885 ;;		None
 31886 ;; Auto vars:     Size  Location     Type
 31887 ;;		None
 31888 ;; Return value:  Size  Location     Type
 31889 ;;		None               void
 31890 ;; Registers used:
 31891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31892 ;; Tracked objects:
 31893 ;;		On entry : 0/0
 31894 ;;		On exit  : 0/0
 31895 ;;		Unchanged: 0/0
 31896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31901 ;;Total ram usage:        0 bytes
 31902 ;; Hardware stack levels used:    1
 31903 ;; Hardware stack levels required when called:   10
 31904 ;; This function calls:
 31905 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31906 ;; This function is called by:
 31907 ;;		_USBDeviceTasks
 31908 ;; This function uses a non-reentrant model
 31909 ;;
 31910                           
 31911                           	psect	text90
 31912  00BA88                     __ptext90:
 31913                           	opt stack 0
 31914  00BA88                     _USBSuspend:
 31915                           	opt stack 6
 31916                           
 31917                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 31918                           
 31919                           ;incstack = 0
 31920  00BA88  010F               	movlb	15	; () banked
 31921  00BA8A  8536               	bsf	54,2,b	;volatile
 31922                           
 31923                           ; BSR set to: 15
 31924                           ;usb_device.c: 2271: (UIR &= 0xEF);
 31925  00BA8C  9862               	bcf	3938,4,c	;volatile
 31926                           
 31927                           ; BSR set to: 15
 31928                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 31929  00BA8E  8265               	bsf	3941,1,c	;volatile
 31930                           
 31931                           ; BSR set to: 15
 31932                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 31933  00BA90  0E01               	movlw	1
 31934  00BA92  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31935                           
 31936                           ; BSR set to: 15
 31937                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 31938  00BA94  0E00               	movlw	0
 31939  00BA96  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31940  00BA98  0E75               	movlw	117
 31941  00BA9A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31942  00BA9C  0E00               	movlw	0
 31943  00BA9E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31944  00BAA0  0E00               	movlw	0
 31945  00BAA2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31946  00BAA4  0E00               	movlw	0
 31947  00BAA6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31948  00BAA8  0E00               	movlw	0
 31949  00BAAA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31950  00BAAC  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31951  00BAB0  0012               	return		;funcret
 31952  00BAB2                     __end_of_USBSuspend:
 31953                           	opt stack 0
 31954                           pclatu	equ	0xFFB
 31955                           pclath	equ	0xFFA
 31956                           tblptru	equ	0xFF8
 31957                           tblptrh	equ	0xFF7
 31958                           tblptrl	equ	0xFF6
 31959                           tablat	equ	0xFF5
 31960                           prodh	equ	0xFF4
 31961                           prodl	equ	0xFF3
 31962                           intcon	equ	0xFF2
 31963                           intcon2	equ	0xFF1
 31964                           intcon3	equ	0xFF0
 31965                           indf0	equ	0xFEF
 31966                           postinc0	equ	0xFEE
 31967                           plusw0	equ	0xFEB
 31968                           fsr0h	equ	0xFEA
 31969                           fsr0l	equ	0xFE9
 31970                           wreg	equ	0xFE8
 31971                           indf1	equ	0xFE7
 31972                           postinc1	equ	0xFE6
 31973                           postdec1	equ	0xFE5
 31974                           plusw1	equ	0xFE3
 31975                           fsr1h	equ	0xFE2
 31976                           fsr1l	equ	0xFE1
 31977                           bsr	equ	0xFE0
 31978                           indf2	equ	0xFDF
 31979                           postinc2	equ	0xFDE
 31980                           postdec2	equ	0xFDD
 31981                           plusw2	equ	0xFDB
 31982                           fsr2h	equ	0xFDA
 31983                           fsr2l	equ	0xFD9
 31984                           status	equ	0xFD8
 31985                           
 31986 ;; *************** function _USBStallHandler *****************
 31987 ;; Defined at:
 31988 ;;		line 2202 in file "src/usb/usb_device.c"
 31989 ;; Parameters:    Size  Location     Type
 31990 ;;		None
 31991 ;; Auto vars:     Size  Location     Type
 31992 ;;		None
 31993 ;; Return value:  Size  Location     Type
 31994 ;;		None               void
 31995 ;; Registers used:
 31996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31997 ;; Tracked objects:
 31998 ;;		On entry : 0/0
 31999 ;;		On exit  : 0/0
 32000 ;;		Unchanged: 0/0
 32001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32006 ;;Total ram usage:        1 bytes
 32007 ;; Hardware stack levels used:    1
 32008 ;; Hardware stack levels required when called:    6
 32009 ;; This function calls:
 32010 ;;		Nothing
 32011 ;; This function is called by:
 32012 ;;		_USBDeviceTasks
 32013 ;; This function uses a non-reentrant model
 32014 ;;
 32015                           
 32016                           	psect	text91
 32017  00B64E                     __ptext91:
 32018                           	opt stack 0
 32019  00B64E                     _USBStallHandler:
 32020                           	opt stack 10
 32021                           
 32022                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 32023                           
 32024                           ;incstack = 0
 32025  00B64E  010F               	movlb	15	; () banked
 32026  00B650  A126               	btfss	38,0,b	;volatile
 32027  00B652  D01E               	goto	i1l1384
 32028                           
 32029                           ; BSR set to: 15
 32030                           ;usb_device.c: 2215: {
 32031                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 32032  00B654  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32033  00B658  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32034  00B65C  0E80               	movlw	128
 32035  00B65E  18DE               	xorwf	postinc2,w,c
 32036  00B660  A4D8               	btfss	status,2,c
 32037  00B662  D014               	goto	i1l13150
 32038                           
 32039                           ; BSR set to: 15
 32040  00B664  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32041  00B668  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32042  00B66C  0E84               	movlw	132
 32043  00B66E  18DE               	xorwf	postinc2,w,c
 32044  00B670  A4D8               	btfss	status,2,c
 32045  00B672  D00C               	goto	i1l13150
 32046                           
 32047                           ; BSR set to: 15
 32048                           ;usb_device.c: 2218: {
 32049                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32050  00B674  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32051  00B678  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32052  00B67C  0E0C               	movlw	12
 32053  00B67E  6EDF               	movwf	indf2,c
 32054                           
 32055                           ; BSR set to: 15
 32056                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 32057  00B680  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32058  00B684  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32059  00B688  0E00               	movlw	0
 32060  00B68A  8EDB               	bsf	plusw2,7,c
 32061  00B68C                     i1l13150:
 32062                           
 32063                           ; BSR set to: 15
 32064                           ;usb_device.c: 2222: }
 32065                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 32066  00B68C  010F               	movlb	15	; () banked
 32067  00B68E  9126               	bcf	38,0,b	;volatile
 32068  00B690                     i1l1384:
 32069                           
 32070                           ; BSR set to: 15
 32071                           ;usb_device.c: 2224: }
 32072                           ;usb_device.c: 2226: (UIR &= 0xDF);
 32073  00B690  9A62               	bcf	3938,5,c	;volatile
 32074                           
 32075                           ; BSR set to: 15
 32076  00B692  0012               	return		;funcret
 32077  00B694                     __end_of_USBStallHandler:
 32078                           	opt stack 0
 32079                           pclatu	equ	0xFFB
 32080                           pclath	equ	0xFFA
 32081                           tblptru	equ	0xFF8
 32082                           tblptrh	equ	0xFF7
 32083                           tblptrl	equ	0xFF6
 32084                           tablat	equ	0xFF5
 32085                           prodh	equ	0xFF4
 32086                           prodl	equ	0xFF3
 32087                           intcon	equ	0xFF2
 32088                           intcon2	equ	0xFF1
 32089                           intcon3	equ	0xFF0
 32090                           indf0	equ	0xFEF
 32091                           postinc0	equ	0xFEE
 32092                           plusw0	equ	0xFEB
 32093                           fsr0h	equ	0xFEA
 32094                           fsr0l	equ	0xFE9
 32095                           wreg	equ	0xFE8
 32096                           indf1	equ	0xFE7
 32097                           postinc1	equ	0xFE6
 32098                           postdec1	equ	0xFE5
 32099                           plusw1	equ	0xFE3
 32100                           fsr1h	equ	0xFE2
 32101                           fsr1l	equ	0xFE1
 32102                           bsr	equ	0xFE0
 32103                           indf2	equ	0xFDF
 32104                           postinc2	equ	0xFDE
 32105                           postdec2	equ	0xFDD
 32106                           plusw2	equ	0xFDB
 32107                           fsr2h	equ	0xFDA
 32108                           fsr2l	equ	0xFD9
 32109                           status	equ	0xFD8
 32110                           
 32111 ;; *************** function _USBCtrlEPService *****************
 32112 ;; Defined at:
 32113 ;;		line 2369 in file "src/usb/usb_device.c"
 32114 ;; Parameters:    Size  Location     Type
 32115 ;;		None
 32116 ;; Auto vars:     Size  Location     Type
 32117 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 32118 ;; Return value:  Size  Location     Type
 32119 ;;		None               void
 32120 ;; Registers used:
 32121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32122 ;; Tracked objects:
 32123 ;;		On entry : 0/0
 32124 ;;		On exit  : 0/0
 32125 ;;		Unchanged: 0/0
 32126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32131 ;;Total ram usage:        3 bytes
 32132 ;; Hardware stack levels used:    1
 32133 ;; Hardware stack levels required when called:   13
 32134 ;; This function calls:
 32135 ;;		_USBCtrlTrfInHandler
 32136 ;;		_USBCtrlTrfOutHandler
 32137 ;;		_USBCtrlTrfSetupHandler
 32138 ;; This function is called by:
 32139 ;;		_USBDeviceTasks
 32140 ;; This function uses a non-reentrant model
 32141 ;;
 32142                           
 32143                           	psect	text92
 32144  009BCE                     __ptext92:
 32145                           	opt stack 0
 32146  009BCE                     _USBCtrlEPService:
 32147                           	opt stack 3
 32148                           
 32149                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 32150                           
 32151                           ; BSR set to: 15
 32152                           ;incstack = 0
 32153  009BCE  0E2D               	movlw	45
 32154  009BD0  6E4E               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 32155                           
 32156                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 32157  009BD2  C058  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 32158  009BD6  0EFD               	movlw	253
 32159  009BD8  161B               	andwf	??_USBCtrlEPService,f,c
 32160  009BDA  A4D8               	btfss	status,2,c
 32161  009BDC  D057               	goto	i1l13184
 32162                           
 32163                           ;usb_device.c: 2380: {
 32164                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 32165  009BDE  C058  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 32166  009BE2  90D8               	bcf	status,0,c
 32167  009BE4  321B               	rrcf	??_USBCtrlEPService,f,c
 32168  009BE6  0E3F               	movlw	63
 32169  009BE8  161B               	andwf	??_USBCtrlEPService,f,c
 32170  009BEA  501B               	movf	??_USBCtrlEPService,w,c
 32171  009BEC  0D04               	mullw	4
 32172  009BEE  0E00               	movlw	0
 32173  009BF0  24F3               	addwf	prodl,w,c
 32174  009BF2  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 32175  009BF4  0E0D               	movlw	13
 32176  009BF6  20F4               	addwfc	prodh,w,c
 32177  009BF8  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 32178                           
 32179                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 32180  009BFA  C038  F03A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 32181  009BFE  C039  F03B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 32182                           
 32183                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 32184  009C02  0E04               	movlw	4
 32185  009C04  1A3A               	xorwf	_pBDTEntryEP0OutNext,f,c
 32186                           
 32187                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 32188  009C06  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32189  009C0A  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32190  009C0E  30DF               	rrcf	indf2,w,c
 32191  009C10  32E8               	rrcf	wreg,f,c
 32192  009C12  0B0F               	andlw	15
 32193  009C14  0A0D               	xorlw	13
 32194  009C16  A4D8               	btfss	status,2,c
 32195  009C18  D036               	goto	i1l13182
 32196                           
 32197                           ;usb_device.c: 2397: {
 32198                           ;usb_device.c: 2398: unsigned char setup_cnt;
 32199                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 32200  009C1A  0E00               	movlw	0
 32201  009C1C  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 32202  009C1E                     i1l13166:
 32203  009C1E  0E07               	movlw	7
 32204  009C20  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 32205  009C22  D001               	goto	i1l13170
 32206  009C24  D023               	goto	i1l13178
 32207  009C26                     i1l13170:
 32208                           
 32209                           ;usb_device.c: 2405: {
 32210                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 32211  009C26  EE20 F002          	lfsr	2,2
 32212  009C2A  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32213  009C2C  26D9               	addwf	fsr2l,f,c
 32214  009C2E  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32215  009C30  22DA               	addwfc	fsr2h,f,c
 32216  009C32  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 32217  009C36  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 32218  009C3A  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 32219  009C3E  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 32220  009C42  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 32221  009C44  0D01               	mullw	1
 32222  009C46  0E20               	movlw	32
 32223  009C48  24F3               	addwf	prodl,w,c
 32224  009C4A  6EE1               	movwf	fsr1l,c
 32225  009C4C  0E0D               	movlw	13
 32226  009C4E  20F4               	addwfc	prodh,w,c
 32227  009C50  6EE2               	movwf	fsr1h,c
 32228  009C52  CFDF FFE7          	movff	indf2,indf1
 32229                           
 32230                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 32231  009C56  EE20 F002          	lfsr	2,2
 32232  009C5A  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32233  009C5C  26D9               	addwf	fsr2l,f,c
 32234  009C5E  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32235  009C60  22DA               	addwfc	fsr2h,f,c
 32236  009C62  2ADE               	incf	postinc2,f,c
 32237  009C64  0E00               	movlw	0
 32238  009C66  22DD               	addwfc	postdec2,f,c
 32239  009C68  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 32240  009C6A  D7D9               	goto	i1l13166
 32241  009C6C                     i1l13178:
 32242                           
 32243                           ;usb_device.c: 2408: }
 32244                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 32245  009C6C  EE20 F002          	lfsr	2,2
 32246  009C70  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32247  009C72  26D9               	addwf	fsr2l,f,c
 32248  009C74  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32249  009C76  22DA               	addwfc	fsr2h,f,c
 32250  009C78  0E20               	movlw	32
 32251  009C7A  6EDE               	movwf	postinc2,c
 32252  009C7C  0E0D               	movlw	13
 32253  009C7E  6EDD               	movwf	postdec2,c
 32254                           
 32255                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 32256  009C80  EC3E  F057         	call	_USBCtrlTrfSetupHandler	;wreg free
 32257                           
 32258                           ;usb_device.c: 2413: }
 32259  009C84  0012               	return	
 32260  009C86                     i1l13182:
 32261                           
 32262                           ;usb_device.c: 2414: else
 32263                           ;usb_device.c: 2415: {
 32264                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 32265  009C86  EC55  F05A         	call	_USBCtrlTrfOutHandler	;wreg free
 32266                           
 32267                           ;usb_device.c: 2418: }
 32268                           ;usb_device.c: 2419: }
 32269  009C8A  0012               	return	
 32270  009C8C                     i1l13184:
 32271                           
 32272                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 32273  009C8C  5058               	movf	_USTATcopy,w,c	;volatile
 32274  009C8E  0BFD               	andlw	253
 32275  009C90  0A04               	xorlw	4
 32276  009C92  A4D8               	btfss	status,2,c
 32277  009C94  0012               	return	
 32278                           
 32279                           ;usb_device.c: 2421: {
 32280                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 32281  009C96  EC3D  F050         	call	_USBCtrlTrfInHandler	;wreg free
 32282  009C9A  0012               	return	
 32283  009C9C                     __end_of_USBCtrlEPService:
 32284                           	opt stack 0
 32285                           pclatu	equ	0xFFB
 32286                           pclath	equ	0xFFA
 32287                           tblptru	equ	0xFF8
 32288                           tblptrh	equ	0xFF7
 32289                           tblptrl	equ	0xFF6
 32290                           tablat	equ	0xFF5
 32291                           prodh	equ	0xFF4
 32292                           prodl	equ	0xFF3
 32293                           intcon	equ	0xFF2
 32294                           intcon2	equ	0xFF1
 32295                           intcon3	equ	0xFF0
 32296                           indf0	equ	0xFEF
 32297                           postinc0	equ	0xFEE
 32298                           plusw0	equ	0xFEB
 32299                           fsr0h	equ	0xFEA
 32300                           fsr0l	equ	0xFE9
 32301                           wreg	equ	0xFE8
 32302                           indf1	equ	0xFE7
 32303                           postinc1	equ	0xFE6
 32304                           postdec1	equ	0xFE5
 32305                           plusw1	equ	0xFE3
 32306                           fsr1h	equ	0xFE2
 32307                           fsr1l	equ	0xFE1
 32308                           bsr	equ	0xFE0
 32309                           indf2	equ	0xFDF
 32310                           postinc2	equ	0xFDE
 32311                           postdec2	equ	0xFDD
 32312                           plusw2	equ	0xFDB
 32313                           fsr2h	equ	0xFDA
 32314                           fsr2l	equ	0xFD9
 32315                           status	equ	0xFD8
 32316                           
 32317 ;; *************** function _USBCtrlTrfSetupHandler *****************
 32318 ;; Defined at:
 32319 ;;		line 2469 in file "src/usb/usb_device.c"
 32320 ;; Parameters:    Size  Location     Type
 32321 ;;		None
 32322 ;; Auto vars:     Size  Location     Type
 32323 ;;		None
 32324 ;; Return value:  Size  Location     Type
 32325 ;;		None               void
 32326 ;; Registers used:
 32327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32328 ;; Tracked objects:
 32329 ;;		On entry : 0/0
 32330 ;;		On exit  : 0/0
 32331 ;;		Unchanged: 0/0
 32332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32337 ;;Total ram usage:        0 bytes
 32338 ;; Hardware stack levels used:    1
 32339 ;; Hardware stack levels required when called:   12
 32340 ;; This function calls:
 32341 ;;		_USBCheckStdRequest
 32342 ;;		_USBCtrlEPServiceComplete
 32343 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32344 ;; This function is called by:
 32345 ;;		_USBCtrlEPService
 32346 ;; This function uses a non-reentrant model
 32347 ;;
 32348                           
 32349                           	psect	text93
 32350  00AE7C                     __ptext93:
 32351                           	opt stack 0
 32352  00AE7C                     _USBCtrlTrfSetupHandler:
 32353                           	opt stack 3
 32354                           
 32355                           ;usb_device.c: 2474: shortPacketStatus = 0;
 32356                           
 32357                           ;incstack = 0
 32358  00AE7C  0E00               	movlw	0
 32359  00AE7E  6E54               	movwf	_shortPacketStatus,c	;volatile
 32360                           
 32361                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 32362  00AE80  0E00               	movlw	0
 32363  00AE82  6E4A               	movwf	_USBDeferStatusStagePacket,c	;volatile
 32364                           
 32365                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 32366  00AE84  0E00               	movlw	0
 32367  00AE86  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 32368                           
 32369                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 32370  00AE88  0E00               	movlw	0
 32371  00AE8A  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 32372                           
 32373                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 32374  00AE8C  0E00               	movlw	0
 32375  00AE8E  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 32376                           
 32377                           ;usb_device.c: 2479: controlTransferState = 0;
 32378  00AE90  0E00               	movlw	0
 32379  00AE92  6E4F               	movwf	_controlTransferState,c	;volatile
 32380                           
 32381                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 32382  00AE94  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32383  00AE98  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32384  00AE9C  0E7F               	movlw	127
 32385  00AE9E  16DF               	andwf	indf2,f,c
 32386                           
 32387                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32388  00AEA0  0E04               	movlw	4
 32389  00AEA2  0100               	movlb	0	; () banked
 32390  00AEA4  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 32391                           
 32392                           ; BSR set to: 0
 32393                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 32394  00AEA6  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32395  00AEAA  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32396  00AEAE  0E7F               	movlw	127
 32397  00AEB0  16DF               	andwf	indf2,f,c
 32398                           
 32399                           ; BSR set to: 0
 32400                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32401  00AEB2  0E04               	movlw	4
 32402  00AEB4  0100               	movlb	0	; () banked
 32403  00AEB6  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 32404                           
 32405                           ; BSR set to: 0
 32406                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 32407  00AEB8  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32408  00AEBC  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32409  00AEC0  0E7F               	movlw	127
 32410  00AEC2  16DF               	andwf	indf2,f,c
 32411                           
 32412                           ; BSR set to: 0
 32413                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 32414  00AEC4  0E00               	movlw	0
 32415  00AEC6  0100               	movlb	0	; () banked
 32416  00AEC8  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32417                           
 32418                           ; BSR set to: 0
 32419                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 32420  00AECA  0E00               	movlw	0
 32421  00AECC  0100               	movlb	0	; () banked
 32422  00AECE  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32423  00AED0  0E00               	movlw	0
 32424  00AED2  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 32425                           
 32426                           ; BSR set to: 0
 32427                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 32428  00AED4  0E00               	movlw	0
 32429  00AED6  0100               	movlb	0	; () banked
 32430  00AED8  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 32431                           
 32432                           ; BSR set to: 0
 32433                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 32434  00AEDA  0E00               	movlw	0
 32435  00AEDC  0100               	movlb	0	; () banked
 32436  00AEDE  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 32437  00AEE0  0E00               	movlw	0
 32438  00AEE2  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 32439                           
 32440                           ; BSR set to: 0
 32441                           ;usb_device.c: 2503: USBCheckStdRequest();
 32442  00AEE4  EC44  F04B         	call	_USBCheckStdRequest	;wreg free
 32443                           
 32444                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 32445  00AEE8  0E00               	movlw	0
 32446  00AEEA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 32447  00AEEC  0E03               	movlw	3
 32448  00AEEE  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 32449  00AEF0  0E00               	movlw	0
 32450  00AEF2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 32451  00AEF4  0E00               	movlw	0
 32452  00AEF6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 32453  00AEF8  0E00               	movlw	0
 32454  00AEFA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 32455  00AEFC  0E00               	movlw	0
 32456  00AEFE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 32457  00AF00  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 32458                           
 32459                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 32460  00AF04  ECCA  F04A         	call	_USBCtrlEPServiceComplete	;wreg free
 32461  00AF08  0012               	return		;funcret
 32462  00AF0A                     __end_of_USBCtrlTrfSetupHandler:
 32463                           	opt stack 0
 32464                           pclatu	equ	0xFFB
 32465                           pclath	equ	0xFFA
 32466                           tblptru	equ	0xFF8
 32467                           tblptrh	equ	0xFF7
 32468                           tblptrl	equ	0xFF6
 32469                           tablat	equ	0xFF5
 32470                           prodh	equ	0xFF4
 32471                           prodl	equ	0xFF3
 32472                           intcon	equ	0xFF2
 32473                           intcon2	equ	0xFF1
 32474                           intcon3	equ	0xFF0
 32475                           indf0	equ	0xFEF
 32476                           postinc0	equ	0xFEE
 32477                           plusw0	equ	0xFEB
 32478                           fsr0h	equ	0xFEA
 32479                           fsr0l	equ	0xFE9
 32480                           wreg	equ	0xFE8
 32481                           indf1	equ	0xFE7
 32482                           postinc1	equ	0xFE6
 32483                           postdec1	equ	0xFE5
 32484                           plusw1	equ	0xFE3
 32485                           fsr1h	equ	0xFE2
 32486                           fsr1l	equ	0xFE1
 32487                           bsr	equ	0xFE0
 32488                           indf2	equ	0xFDF
 32489                           postinc2	equ	0xFDE
 32490                           postdec2	equ	0xFDD
 32491                           plusw2	equ	0xFDB
 32492                           fsr2h	equ	0xFDA
 32493                           fsr2l	equ	0xFD9
 32494                           status	equ	0xFD8
 32495                           
 32496 ;; *************** function _USBCtrlEPServiceComplete *****************
 32497 ;; Defined at:
 32498 ;;		line 1616 in file "src/usb/usb_device.c"
 32499 ;; Parameters:    Size  Location     Type
 32500 ;;		None
 32501 ;; Auto vars:     Size  Location     Type
 32502 ;;		None
 32503 ;; Return value:  Size  Location     Type
 32504 ;;		None               void
 32505 ;; Registers used:
 32506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32507 ;; Tracked objects:
 32508 ;;		On entry : 0/0
 32509 ;;		On exit  : 0/0
 32510 ;;		Unchanged: 0/0
 32511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32516 ;;Total ram usage:        0 bytes
 32517 ;; Hardware stack levels used:    1
 32518 ;; Hardware stack levels required when called:    8
 32519 ;; This function calls:
 32520 ;;		_USBCtrlEPAllowDataStage
 32521 ;;		_USBCtrlEPAllowStatusStage
 32522 ;; This function is called by:
 32523 ;;		_USBCtrlTrfSetupHandler
 32524 ;; This function uses a non-reentrant model
 32525 ;;
 32526                           
 32527                           	psect	text94
 32528  009594                     __ptext94:
 32529                           	opt stack 0
 32530  009594                     _USBCtrlEPServiceComplete:
 32531                           	opt stack 6
 32532                           
 32533                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 32534                           
 32535                           ;incstack = 0
 32536  009594  9865               	bcf	3941,4,c	;volatile
 32537                           
 32538                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 32539  009596  0100               	movlb	0	; () banked
 32540  009598  BF84               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 32541  00959A  D039               	goto	i1l1308
 32542                           
 32543                           ; BSR set to: 0
 32544                           ;usb_device.c: 1629: {
 32545                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 32546  00959C  0100               	movlb	0	; () banked
 32547  00959E  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 32548  0095A0  D00B               	goto	i1l11476
 32549                           
 32550                           ; BSR set to: 0
 32551                           ;usb_device.c: 1631: {
 32552                           ;usb_device.c: 1632: controlTransferState = 2;
 32553  0095A2  0E02               	movlw	2
 32554  0095A4  6E4F               	movwf	_controlTransferState,c	;volatile
 32555                           
 32556                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 32557  0095A6  5049               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 32558  0095A8  B4D8               	btfsc	status,2,c
 32559                           
 32560                           ; BSR set to: 0
 32561                           ;usb_device.c: 1644: {
 32562                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 32563  0095AA  EC2E  F055         	call	_USBCtrlEPAllowDataStage	;wreg free
 32564                           
 32565                           ;usb_device.c: 1646: }
 32566                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 32567  0095AE  0E00               	movlw	0
 32568  0095B0  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32569                           
 32570                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 32571  0095B2  0E00               	movlw	0
 32572  0095B4  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32573                           
 32574                           ;usb_device.c: 1652: }
 32575  0095B6  0012               	return	
 32576  0095B8                     i1l11476:
 32577                           
 32578                           ;usb_device.c: 1653: else
 32579                           ;usb_device.c: 1654: {
 32580                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 32581  0095B8  EE20 F001          	lfsr	2,1
 32582  0095BC  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32583  0095BE  26D9               	addwf	fsr2l,f,c
 32584  0095C0  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32585  0095C2  22DA               	addwfc	fsr2h,f,c
 32586  0095C4  0E08               	movlw	8
 32587  0095C6  6EDF               	movwf	indf2,c
 32588                           
 32589                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32590  0095C8  EE20 F002          	lfsr	2,2
 32591  0095CC  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32592  0095CE  26D9               	addwf	fsr2l,f,c
 32593  0095D0  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32594  0095D2  22DA               	addwfc	fsr2h,f,c
 32595  0095D4  0E20               	movlw	32
 32596  0095D6  6EDE               	movwf	postinc2,c
 32597  0095D8  0E0D               	movlw	13
 32598  0095DA  6EDD               	movwf	postdec2,c
 32599                           
 32600                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32601  0095DC  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32602  0095E0  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32603  0095E4  0E0C               	movlw	12
 32604  0095E6  6EDF               	movwf	indf2,c
 32605                           
 32606                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32607  0095E8  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32608  0095EC  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32609  0095F0  0E00               	movlw	0
 32610  0095F2  8EDB               	bsf	plusw2,7,c
 32611                           
 32612                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 32613  0095F4  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32614  0095F8  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32615  0095FC  0E04               	movlw	4
 32616  0095FE  6EDF               	movwf	indf2,c
 32617                           
 32618                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32619  009600  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32620  009604  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32621  009608  0E00               	movlw	0
 32622  00960A  8EDB               	bsf	plusw2,7,c
 32623                           
 32624                           ;usb_device.c: 1665: }
 32625                           ;usb_device.c: 1666: }
 32626  00960C  0012               	return	
 32627  00960E                     i1l1308:
 32628                           
 32629                           ; BSR set to: 0
 32630                           ;usb_device.c: 1667: else
 32631                           ;usb_device.c: 1668: {
 32632                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 32633  00960E  010D               	movlb	13	; () banked
 32634  009610  AF20               	btfss	32,7,b	;volatile
 32635  009612  D010               	goto	i1l11496
 32636                           
 32637                           ; BSR set to: 13
 32638                           ;usb_device.c: 1670: {
 32639                           ;usb_device.c: 1671: controlTransferState = 1;
 32640  009614  0E01               	movlw	1
 32641  009616  6E4F               	movwf	_controlTransferState,c	;volatile
 32642                           
 32643                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 32644  009618  5048               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 32645  00961A  B4D8               	btfsc	status,2,c
 32646                           
 32647                           ; BSR set to: 13
 32648                           ;usb_device.c: 1686: {
 32649                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 32650  00961C  EC2E  F055         	call	_USBCtrlEPAllowDataStage	;wreg free
 32651                           
 32652                           ;usb_device.c: 1688: }
 32653                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 32654  009620  0E00               	movlw	0
 32655  009622  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32656                           
 32657                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 32658  009624  0E00               	movlw	0
 32659  009626  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32660                           
 32661                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 32662  009628  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 32663  00962A  A4D8               	btfss	status,2,c
 32664  00962C  0012               	return	
 32665                           
 32666                           ;usb_device.c: 1713: {
 32667                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 32668  00962E  ECDB  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32669                           
 32670                           ;usb_device.c: 1715: }
 32671                           ;usb_device.c: 1716: }
 32672  009632  0012               	return	
 32673  009634                     i1l11496:
 32674                           
 32675                           ;usb_device.c: 1717: else
 32676                           ;usb_device.c: 1718: {
 32677                           ;usb_device.c: 1729: controlTransferState = 2;
 32678  009634  0E02               	movlw	2
 32679  009636  6E4F               	movwf	_controlTransferState,c	;volatile
 32680                           
 32681                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 32682  009638  EE20 F001          	lfsr	2,1
 32683  00963C  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32684  00963E  26D9               	addwf	fsr2l,f,c
 32685  009640  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32686  009642  22DA               	addwfc	fsr2h,f,c
 32687  009644  0E08               	movlw	8
 32688  009646  6EDF               	movwf	indf2,c
 32689                           
 32690                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32691  009648  EE20 F002          	lfsr	2,2
 32692  00964C  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32693  00964E  26D9               	addwf	fsr2l,f,c
 32694  009650  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32695  009652  22DA               	addwfc	fsr2h,f,c
 32696  009654  0E20               	movlw	32
 32697  009656  6EDE               	movwf	postinc2,c
 32698  009658  0E0D               	movlw	13
 32699  00965A  6EDD               	movwf	postdec2,c
 32700                           
 32701                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 32702  00965C  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32703  009660  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32704  009664  0E04               	movlw	4
 32705  009666  6EDF               	movwf	indf2,c
 32706                           
 32707                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32708  009668  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32709  00966C  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32710  009670  0E00               	movlw	0
 32711  009672  8EDB               	bsf	plusw2,7,c
 32712                           
 32713                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 32714  009674  0E00               	movlw	0
 32715  009676  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32716                           
 32717                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 32718  009678  0E00               	movlw	0
 32719  00967A  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32720                           
 32721                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 32722  00967C  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 32723  00967E  A4D8               	btfss	status,2,c
 32724  009680  0012               	return	
 32725                           
 32726                           ;usb_device.c: 1741: {
 32727                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 32728  009682  ECDB  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32729  009686  0012               	return	
 32730  009688                     __end_of_USBCtrlEPServiceComplete:
 32731                           	opt stack 0
 32732                           pclatu	equ	0xFFB
 32733                           pclath	equ	0xFFA
 32734                           tblptru	equ	0xFF8
 32735                           tblptrh	equ	0xFF7
 32736                           tblptrl	equ	0xFF6
 32737                           tablat	equ	0xFF5
 32738                           prodh	equ	0xFF4
 32739                           prodl	equ	0xFF3
 32740                           intcon	equ	0xFF2
 32741                           intcon2	equ	0xFF1
 32742                           intcon3	equ	0xFF0
 32743                           indf0	equ	0xFEF
 32744                           postinc0	equ	0xFEE
 32745                           plusw0	equ	0xFEB
 32746                           fsr0h	equ	0xFEA
 32747                           fsr0l	equ	0xFE9
 32748                           wreg	equ	0xFE8
 32749                           indf1	equ	0xFE7
 32750                           postinc1	equ	0xFE6
 32751                           postdec1	equ	0xFE5
 32752                           plusw1	equ	0xFE3
 32753                           fsr1h	equ	0xFE2
 32754                           fsr1l	equ	0xFE1
 32755                           bsr	equ	0xFE0
 32756                           indf2	equ	0xFDF
 32757                           postinc2	equ	0xFDE
 32758                           postdec2	equ	0xFDD
 32759                           plusw2	equ	0xFDB
 32760                           fsr2h	equ	0xFDA
 32761                           fsr2l	equ	0xFD9
 32762                           status	equ	0xFD8
 32763                           
 32764 ;; *************** function _USBCtrlEPAllowDataStage *****************
 32765 ;; Defined at:
 32766 ;;		line 1488 in file "src/usb/usb_device.c"
 32767 ;; Parameters:    Size  Location     Type
 32768 ;;		None
 32769 ;; Auto vars:     Size  Location     Type
 32770 ;;		None
 32771 ;; Return value:  Size  Location     Type
 32772 ;;		None               void
 32773 ;; Registers used:
 32774 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32775 ;; Tracked objects:
 32776 ;;		On entry : 0/0
 32777 ;;		On exit  : 0/0
 32778 ;;		Unchanged: 0/0
 32779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32784 ;;Total ram usage:        0 bytes
 32785 ;; Hardware stack levels used:    1
 32786 ;; Hardware stack levels required when called:    7
 32787 ;; This function calls:
 32788 ;;		_USBCtrlTrfTxService
 32789 ;; This function is called by:
 32790 ;;		_USBCtrlEPServiceComplete
 32791 ;; This function uses a non-reentrant model
 32792 ;;
 32793                           
 32794                           	psect	text95
 32795  00AA5C                     __ptext95:
 32796                           	opt stack 0
 32797  00AA5C                     _USBCtrlEPAllowDataStage:
 32798                           	opt stack 6
 32799                           
 32800                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 32801                           
 32802                           ;incstack = 0
 32803  00AA5C  0E00               	movlw	0
 32804  00AA5E  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 32805                           
 32806                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 32807  00AA60  0E00               	movlw	0
 32808  00AA62  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 32809                           
 32810                           ;usb_device.c: 1493: if(controlTransferState == 2)
 32811  00AA64  0E02               	movlw	2
 32812  00AA66  184F               	xorwf	_controlTransferState,w,c	;volatile
 32813  00AA68  A4D8               	btfss	status,2,c
 32814  00AA6A  D01F               	goto	i1l11002
 32815                           
 32816                           ;usb_device.c: 1494: {
 32817                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 32818  00AA6C  EE20 F001          	lfsr	2,1
 32819  00AA70  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32820  00AA72  26D9               	addwf	fsr2l,f,c
 32821  00AA74  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32822  00AA76  22DA               	addwfc	fsr2h,f,c
 32823  00AA78  0E08               	movlw	8
 32824  00AA7A  6EDF               	movwf	indf2,c
 32825                           
 32826                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 32827  00AA7C  EE20 F002          	lfsr	2,2
 32828  00AA80  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32829  00AA82  26D9               	addwf	fsr2l,f,c
 32830  00AA84  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32831  00AA86  22DA               	addwfc	fsr2h,f,c
 32832  00AA88  0E28               	movlw	40
 32833  00AA8A  6EDE               	movwf	postinc2,c
 32834  00AA8C  0E0D               	movlw	13
 32835  00AA8E  6EDD               	movwf	postdec2,c
 32836                           
 32837                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 32838  00AA90  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32839  00AA94  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32840  00AA98  0E48               	movlw	72
 32841  00AA9A  6EDF               	movwf	indf2,c
 32842                           
 32843                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32844  00AA9C  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32845  00AAA0  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32846  00AAA4  0E00               	movlw	0
 32847  00AAA6  8EDB               	bsf	plusw2,7,c
 32848                           
 32849                           ;usb_device.c: 1500: }
 32850  00AAA8  0012               	return	
 32851  00AAAA                     i1l11002:
 32852                           
 32853                           ;usb_device.c: 1501: else
 32854                           ;usb_device.c: 1502: {
 32855                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 32856  00AAAA  0100               	movlb	0	; () banked
 32857  00AAAC  5185               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 32858  00AAAE  010D               	movlb	13	; () banked
 32859  00AAB0  5D26               	subwf	38,w,b	;volatile
 32860  00AAB2  0100               	movlb	0	; () banked
 32861  00AAB4  5186               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 32862  00AAB6  010D               	movlb	13	; () banked
 32863  00AAB8  5927               	subwfb	39,w,b	;volatile
 32864  00AABA  B0D8               	btfsc	status,0,c
 32865  00AABC  D004               	goto	i1l11006
 32866                           
 32867                           ; BSR set to: 13
 32868                           ;usb_device.c: 1506: {
 32869                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 32870  00AABE  CD26 F085          	movff	3366,_inPipes+4	;volatile
 32871  00AAC2  CD27 F086          	movff	3367,_inPipes+5	;volatile
 32872  00AAC6                     i1l11006:
 32873                           
 32874                           ; BSR set to: 13
 32875                           ;usb_device.c: 1508: }
 32876                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 32877  00AAC6  EC10  F04D         	call	_USBCtrlTrfTxService	;wreg free
 32878                           
 32879                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 32880  00AACA  0100               	movlb	0	; () banked
 32881  00AACC  EE20 F002          	lfsr	2,2
 32882  00AAD0  518B               	movf	_pBDTEntryIn& (0+255),w,b
 32883  00AAD2  26D9               	addwf	fsr2l,f,c
 32884  00AAD4  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32885  00AAD6  22DA               	addwfc	fsr2h,f,c
 32886  00AAD8  0E28               	movlw	40
 32887  00AADA  6EDE               	movwf	postinc2,c
 32888  00AADC  0E0D               	movlw	13
 32889  00AADE  6EDD               	movwf	postdec2,c
 32890                           
 32891                           ; BSR set to: 0
 32892                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 32893  00AAE0  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32894  00AAE4  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32895  00AAE8  0E48               	movlw	72
 32896  00AAEA  6EDF               	movwf	indf2,c
 32897                           
 32898                           ; BSR set to: 0
 32899                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32900  00AAEC  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32901  00AAF0  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32902  00AAF4  0E00               	movlw	0
 32903  00AAF6  8EDB               	bsf	plusw2,7,c
 32904  00AAF8  0012               	return	
 32905  00AAFA                     __end_of_USBCtrlEPAllowDataStage:
 32906                           	opt stack 0
 32907                           pclatu	equ	0xFFB
 32908                           pclath	equ	0xFFA
 32909                           tblptru	equ	0xFF8
 32910                           tblptrh	equ	0xFF7
 32911                           tblptrl	equ	0xFF6
 32912                           tablat	equ	0xFF5
 32913                           prodh	equ	0xFF4
 32914                           prodl	equ	0xFF3
 32915                           intcon	equ	0xFF2
 32916                           intcon2	equ	0xFF1
 32917                           intcon3	equ	0xFF0
 32918                           indf0	equ	0xFEF
 32919                           postinc0	equ	0xFEE
 32920                           plusw0	equ	0xFEB
 32921                           fsr0h	equ	0xFEA
 32922                           fsr0l	equ	0xFE9
 32923                           wreg	equ	0xFE8
 32924                           indf1	equ	0xFE7
 32925                           postinc1	equ	0xFE6
 32926                           postdec1	equ	0xFE5
 32927                           plusw1	equ	0xFE3
 32928                           fsr1h	equ	0xFE2
 32929                           fsr1l	equ	0xFE1
 32930                           bsr	equ	0xFE0
 32931                           indf2	equ	0xFDF
 32932                           postinc2	equ	0xFDE
 32933                           postdec2	equ	0xFDD
 32934                           plusw2	equ	0xFDB
 32935                           fsr2h	equ	0xFDA
 32936                           fsr2l	equ	0xFD9
 32937                           status	equ	0xFD8
 32938                           
 32939 ;; *************** function _USBCheckStdRequest *****************
 32940 ;; Defined at:
 32941 ;;		line 2689 in file "src/usb/usb_device.c"
 32942 ;; Parameters:    Size  Location     Type
 32943 ;;		None
 32944 ;; Auto vars:     Size  Location     Type
 32945 ;;		None
 32946 ;; Return value:  Size  Location     Type
 32947 ;;		None               void
 32948 ;; Registers used:
 32949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32950 ;; Tracked objects:
 32951 ;;		On entry : 0/0
 32952 ;;		On exit  : 0/0
 32953 ;;		Unchanged: 0/0
 32954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32959 ;;Total ram usage:        0 bytes
 32960 ;; Hardware stack levels used:    1
 32961 ;; Hardware stack levels required when called:   11
 32962 ;; This function calls:
 32963 ;;		_USBStdFeatureReqHandler
 32964 ;;		_USBStdGetDscHandler
 32965 ;;		_USBStdGetStatusHandler
 32966 ;;		_USBStdSetCfgHandler
 32967 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32968 ;; This function is called by:
 32969 ;;		_USBCtrlTrfSetupHandler
 32970 ;; This function uses a non-reentrant model
 32971 ;;
 32972                           
 32973                           	psect	text96
 32974  009688                     __ptext96:
 32975                           	opt stack 0
 32976  009688                     _USBCheckStdRequest:
 32977                           	opt stack 3
 32978                           
 32979                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 32980                           
 32981                           ;incstack = 0
 32982  009688  010D               	movlb	13	; () banked
 32983  00968A  3920               	swapf	32,w,b	;volatile
 32984  00968C  32E8               	rrcf	wreg,f,c
 32985  00968E  0B03               	andlw	3
 32986  009690  0900               	iorlw	0
 32987  009692  A4D8               	btfss	status,2,c
 32988  009694  0012               	return	
 32989  009696  D04F               	goto	i1l11594
 32990  009698                     i1l1435:
 32991                           
 32992                           ; BSR set to: 13
 32993                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 32994  009698  0100               	movlb	0	; () banked
 32995  00969A  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 32996                           
 32997                           ; BSR set to: 0
 32998                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 32999  00969C  0E08               	movlw	8
 33000  00969E  6E4B               	movwf	_USBDeviceState,c	;volatile
 33001                           
 33002                           ;usb_device.c: 2699: break;
 33003  0096A0  0012               	return	
 33004  0096A2                     i1l11564:
 33005                           
 33006                           ;usb_device.c: 2701: USBStdGetDscHandler();
 33007  0096A2  ECE3  F03F         	call	_USBStdGetDscHandler	;wreg free
 33008                           
 33009                           ;usb_device.c: 2702: break;
 33010  0096A6  0012               	return	
 33011  0096A8                     i1l11566:
 33012                           
 33013                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 33014  0096A8  EC33  F04C         	call	_USBStdSetCfgHandler	;wreg free
 33015                           
 33016                           ;usb_device.c: 2705: break;
 33017  0096AC  0012               	return	
 33018  0096AE                     i1l11568:
 33019                           
 33020                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 33021  0096AE  0E56               	movlw	low _USBActiveConfiguration
 33022  0096B0  0100               	movlb	0	; () banked
 33023  0096B2  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33024  0096B4  0E00               	movlw	high _USBActiveConfiguration
 33025  0096B6  0100               	movlb	0	; () banked
 33026  0096B8  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33027                           
 33028                           ; BSR set to: 0
 33029                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33030  0096BA  0100               	movlb	0	; () banked
 33031  0096BC  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33032                           
 33033                           ; BSR set to: 0
 33034                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 33035  0096BE  0E01               	movlw	1
 33036  0096C0  0100               	movlb	0	; () banked
 33037  0096C2  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33038                           
 33039                           ; BSR set to: 0
 33040                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 33041  0096C4  0100               	movlb	0	; () banked
 33042  0096C6  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33043                           
 33044                           ;usb_device.c: 2711: break;
 33045  0096C8  0012               	return	
 33046  0096CA                     i1l11576:
 33047                           
 33048                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 33049  0096CA  EC72  F052         	call	_USBStdGetStatusHandler	;wreg free
 33050                           
 33051                           ;usb_device.c: 2714: break;
 33052  0096CE  0012               	return	
 33053  0096D0                     i1l11578:
 33054                           
 33055                           ;usb_device.c: 2716: case 3:
 33056                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 33057  0096D0  EC2C  F033         	call	_USBStdFeatureReqHandler	;wreg free
 33058                           
 33059                           ;usb_device.c: 2718: break;
 33060  0096D4  0012               	return	
 33061  0096D6                     i1l11580:
 33062                           
 33063                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 33064  0096D6  010D               	movlb	13	; () banked
 33065  0096D8  5124               	movf	36,w,b	;volatile
 33066  0096DA  0D01               	mullw	1
 33067  0096DC  0E57               	movlw	low _USBAlternateInterface
 33068  0096DE  24F3               	addwf	prodl,w,c
 33069  0096E0  0100               	movlb	0	; () banked
 33070  0096E2  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33071  0096E4  0E00               	movlw	high _USBAlternateInterface
 33072  0096E6  20F4               	addwfc	prodh,w,c
 33073  0096E8  0100               	movlb	0	; () banked
 33074  0096EA  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33075                           
 33076                           ; BSR set to: 0
 33077                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33078  0096EC  0100               	movlb	0	; () banked
 33079  0096EE  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33080                           
 33081                           ; BSR set to: 0
 33082                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 33083  0096F0  0E01               	movlw	1
 33084  0096F2  0100               	movlb	0	; () banked
 33085  0096F4  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33086                           
 33087                           ; BSR set to: 0
 33088                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 33089  0096F6  0100               	movlb	0	; () banked
 33090  0096F8  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33091                           
 33092                           ;usb_device.c: 2724: break;
 33093  0096FA  0012               	return	
 33094  0096FC                     i1l1444:
 33095                           
 33096                           ; BSR set to: 13
 33097                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 33098  0096FC  0100               	movlb	0	; () banked
 33099  0096FE  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33100                           
 33101                           ; BSR set to: 0
 33102                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 33103  009700  010D               	movlb	13	; () banked
 33104  009702  5124               	movf	36,w,b	;volatile
 33105  009704  0D01               	mullw	1
 33106  009706  0E57               	movlw	low _USBAlternateInterface
 33107  009708  24F3               	addwf	prodl,w,c
 33108  00970A  6ED9               	movwf	fsr2l,c
 33109  00970C  0E00               	movlw	high _USBAlternateInterface
 33110  00970E  20F4               	addwfc	prodh,w,c
 33111  009710  6EDA               	movwf	fsr2h,c
 33112  009712  CD22 FFDF          	movff	3362,indf2	;volatile
 33113                           
 33114                           ;usb_device.c: 2728: break;
 33115  009716  0012               	return	
 33116  009718                     i1l11590:
 33117                           
 33118                           ; BSR set to: 13
 33119                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 33120  009718  0E00               	movlw	0
 33121  00971A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33122  00971C  0E02               	movlw	2
 33123  00971E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33124  009720  0E00               	movlw	0
 33125  009722  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33126  009724  0E00               	movlw	0
 33127  009726  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33128  009728  0E00               	movlw	0
 33129  00972A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33130  00972C  0E00               	movlw	0
 33131  00972E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33132  009730  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33133                           
 33134                           ;usb_device.c: 2735: }
 33135                           
 33136                           ;usb_device.c: 2734: break;
 33137                           
 33138                           ;usb_device.c: 2733: default:
 33139                           
 33140                           ;usb_device.c: 2732: case 12:
 33141                           
 33142                           ;usb_device.c: 2731: break;
 33143  009734  0012               	return	
 33144  009736                     i1l11594:
 33145  009736  010D               	movlb	13	; () banked
 33146  009738  5121               	movf	33,w,b	;volatile
 33147                           
 33148                           ; Switch size 1, requested type "space"
 33149                           ; Number of cases is 11, Range of values is 0 to 12
 33150                           ; switch strategies available:
 33151                           ; Name         Instructions Cycles
 33152                           ; simple_byte           34    18 (average)
 33153                           ;	Chosen strategy is simple_byte
 33154  00973A  0A00               	xorlw	0	; case 0
 33155  00973C  B4D8               	btfsc	status,2,c
 33156  00973E  D7C5               	goto	i1l11576
 33157  009740  0A01               	xorlw	1	; case 1
 33158  009742  B4D8               	btfsc	status,2,c
 33159  009744  D7C5               	goto	i1l11578
 33160  009746  0A02               	xorlw	2	; case 3
 33161  009748  B4D8               	btfsc	status,2,c
 33162  00974A  D7C2               	goto	i1l11578
 33163  00974C  0A06               	xorlw	6	; case 5
 33164  00974E  B4D8               	btfsc	status,2,c
 33165  009750  D7A3               	goto	i1l1435
 33166  009752  0A03               	xorlw	3	; case 6
 33167  009754  B4D8               	btfsc	status,2,c
 33168  009756  D7A5               	goto	i1l11564
 33169  009758  0A01               	xorlw	1	; case 7
 33170  00975A  B4D8               	btfsc	status,2,c
 33171  00975C  D7DD               	goto	i1l11590
 33172  00975E  0A0F               	xorlw	15	; case 8
 33173  009760  B4D8               	btfsc	status,2,c
 33174  009762  D7A5               	goto	i1l11568
 33175  009764  0A01               	xorlw	1	; case 9
 33176  009766  B4D8               	btfsc	status,2,c
 33177  009768  D79F               	goto	i1l11566
 33178  00976A  0A03               	xorlw	3	; case 10
 33179  00976C  B4D8               	btfsc	status,2,c
 33180  00976E  D7B3               	goto	i1l11580
 33181  009770  0A01               	xorlw	1	; case 11
 33182  009772  B4D8               	btfsc	status,2,c
 33183  009774  D7C3               	goto	i1l1444
 33184  009776  0A07               	xorlw	7	; case 12
 33185  009778  0012               	return	
 33186  00977A                     __end_of_USBCheckStdRequest:
 33187                           	opt stack 0
 33188                           pclatu	equ	0xFFB
 33189                           pclath	equ	0xFFA
 33190                           tblptru	equ	0xFF8
 33191                           tblptrh	equ	0xFF7
 33192                           tblptrl	equ	0xFF6
 33193                           tablat	equ	0xFF5
 33194                           prodh	equ	0xFF4
 33195                           prodl	equ	0xFF3
 33196                           intcon	equ	0xFF2
 33197                           intcon2	equ	0xFF1
 33198                           intcon3	equ	0xFF0
 33199                           indf0	equ	0xFEF
 33200                           postinc0	equ	0xFEE
 33201                           plusw0	equ	0xFEB
 33202                           fsr0h	equ	0xFEA
 33203                           fsr0l	equ	0xFE9
 33204                           wreg	equ	0xFE8
 33205                           indf1	equ	0xFE7
 33206                           postinc1	equ	0xFE6
 33207                           postdec1	equ	0xFE5
 33208                           plusw1	equ	0xFE3
 33209                           fsr1h	equ	0xFE2
 33210                           fsr1l	equ	0xFE1
 33211                           bsr	equ	0xFE0
 33212                           indf2	equ	0xFDF
 33213                           postinc2	equ	0xFDE
 33214                           postdec2	equ	0xFDD
 33215                           plusw2	equ	0xFDB
 33216                           fsr2h	equ	0xFDA
 33217                           fsr2l	equ	0xFD9
 33218                           status	equ	0xFD8
 33219                           
 33220 ;; *************** function _USBStdSetCfgHandler *****************
 33221 ;; Defined at:
 33222 ;;		line 1968 in file "src/usb/usb_device.c"
 33223 ;; Parameters:    Size  Location     Type
 33224 ;;		None
 33225 ;; Auto vars:     Size  Location     Type
 33226 ;;  i               1   20[COMRAM] unsigned char 
 33227 ;; Return value:  Size  Location     Type
 33228 ;;		None               void
 33229 ;; Registers used:
 33230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33231 ;; Tracked objects:
 33232 ;;		On entry : 0/0
 33233 ;;		On exit  : 0/0
 33234 ;;		Unchanged: 0/0
 33235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33240 ;;Total ram usage:        1 bytes
 33241 ;; Hardware stack levels used:    1
 33242 ;; Hardware stack levels required when called:   10
 33243 ;; This function calls:
 33244 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33245 ;;		i1_memset
 33246 ;; This function is called by:
 33247 ;;		_USBCheckStdRequest
 33248 ;; This function uses a non-reentrant model
 33249 ;;
 33250                           
 33251                           	psect	text97
 33252  009866                     __ptext97:
 33253                           	opt stack 0
 33254  009866                     _USBStdSetCfgHandler:
 33255                           	opt stack 3
 33256                           
 33257                           ;usb_device.c: 1970: uint8_t i;
 33258                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 33259                           
 33260                           ;incstack = 0
 33261  009866  0100               	movlb	0	; () banked
 33262  009868  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33263                           
 33264                           ; BSR set to: 0
 33265                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(1));;
 33266  00986A  0E27               	movlw	39
 33267  00986C  6E01               	movwf	i1memset@p1,c
 33268  00986E  0E0F               	movlw	15
 33269  009870  6E02               	movwf	i1memset@p1+1,c
 33270  009872  0E00               	movlw	0
 33271  009874  6E04               	movwf	i1memset@c+1,c
 33272  009876  0E00               	movlw	0
 33273  009878  6E03               	movwf	i1memset@c,c
 33274  00987A  0E00               	movlw	0
 33275  00987C  6E06               	movwf	i1memset@n+1,c
 33276  00987E  0E01               	movlw	1
 33277  009880  6E05               	movwf	i1memset@n,c
 33278  009882  EC19  F05D         	call	i1_memset	;wreg free
 33279                           
 33280                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 33281  009886  0E00               	movlw	0
 33282  009888  6E01               	movwf	i1memset@p1,c
 33283  00988A  0E0D               	movlw	13
 33284  00988C  6E02               	movwf	i1memset@p1+1,c
 33285  00988E  0E00               	movlw	0
 33286  009890  6E04               	movwf	i1memset@c+1,c
 33287  009892  0E00               	movlw	0
 33288  009894  6E03               	movwf	i1memset@c,c
 33289  009896  0E00               	movlw	0
 33290  009898  6E06               	movwf	i1memset@n+1,c
 33291  00989A  0E20               	movlw	32
 33292  00989C  6E05               	movwf	i1memset@n,c
 33293  00989E  EC19  F05D         	call	i1_memset	;wreg free
 33294                           
 33295                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 33296  0098A2  8C65               	bsf	3941,6,c	;volatile
 33297                           
 33298                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
 33299  0098A4  0E00               	movlw	0
 33300  0098A6  6E15               	movwf	USBStdSetCfgHandler@i,c
 33301  0098A8                     i1l11022:
 33302  0098A8  0E01               	movlw	1
 33303  0098AA  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 33304  0098AC  D001               	goto	i1l11026
 33305  0098AE  D016               	goto	i1l11032
 33306  0098B0                     i1l11026:
 33307                           
 33308                           ;usb_device.c: 1988: {
 33309                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 33310  0098B0  5015               	movf	USBStdSetCfgHandler@i,w,c
 33311  0098B2  0D01               	mullw	1
 33312  0098B4  0E95               	movlw	low _ep_data_in
 33313  0098B6  24F3               	addwf	prodl,w,c
 33314  0098B8  6ED9               	movwf	fsr2l,c
 33315  0098BA  0E00               	movlw	high _ep_data_in
 33316  0098BC  20F4               	addwfc	prodh,w,c
 33317  0098BE  6EDA               	movwf	fsr2h,c
 33318  0098C0  0E00               	movlw	0
 33319  0098C2  6EDF               	movwf	indf2,c
 33320                           
 33321                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 33322  0098C4  5015               	movf	USBStdSetCfgHandler@i,w,c
 33323  0098C6  0D01               	mullw	1
 33324  0098C8  0E97               	movlw	low _ep_data_out
 33325  0098CA  24F3               	addwf	prodl,w,c
 33326  0098CC  6ED9               	movwf	fsr2l,c
 33327  0098CE  0E00               	movlw	high _ep_data_out
 33328  0098D0  20F4               	addwfc	prodh,w,c
 33329  0098D2  6EDA               	movwf	fsr2h,c
 33330  0098D4  0E00               	movlw	0
 33331  0098D6  6EDF               	movwf	indf2,c
 33332  0098D8  2A15               	incf	USBStdSetCfgHandler@i,f,c
 33333  0098DA  D7E6               	goto	i1l11022
 33334  0098DC                     i1l11032:
 33335                           
 33336                           ;usb_device.c: 1991: }
 33337                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
 33338  0098DC  0E57               	movlw	low _USBAlternateInterface
 33339  0098DE  6E01               	movwf	i1memset@p1,c
 33340  0098E0  0E00               	movlw	high _USBAlternateInterface
 33341  0098E2  6E02               	movwf	i1memset@p1+1,c
 33342  0098E4  0E00               	movlw	0
 33343  0098E6  6E04               	movwf	i1memset@c+1,c
 33344  0098E8  0E00               	movlw	0
 33345  0098EA  6E03               	movwf	i1memset@c,c
 33346  0098EC  0E00               	movlw	0
 33347  0098EE  6E06               	movwf	i1memset@n+1,c
 33348  0098F0  0E01               	movlw	1
 33349  0098F2  6E05               	movwf	i1memset@n,c
 33350  0098F4  EC19  F05D         	call	i1_memset	;wreg free
 33351                           
 33352                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 33353  0098F8  9C65               	bcf	3941,6,c	;volatile
 33354                           
 33355                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33356  0098FA  0E08               	movlw	8
 33357  0098FC  0100               	movlb	0	; () banked
 33358  0098FE  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 33359  009900  0E0D               	movlw	13
 33360  009902  0100               	movlb	0	; () banked
 33361  009904  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 33365  009906  0E00               	movlw	0
 33366  009908  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 33367  00990A  0E0D               	movlw	13
 33368  00990C  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 33369                           
 33370                           ; BSR set to: 0
 33371                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 33372  00990E  C038  F03A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 33373  009912  C039  F03B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 33374                           
 33375                           ; BSR set to: 0
 33376                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 33377  009916  CD22 F056          	movff	3362,_USBActiveConfiguration	;volatile
 33378                           
 33379                           ; BSR set to: 0
 33380                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 33381  00991A  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 33382  00991C  A4D8               	btfss	status,2,c
 33383  00991E  D003               	goto	i1l11048
 33384                           
 33385                           ; BSR set to: 0
 33386                           ;usb_device.c: 2010: {
 33387                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 33388  009920  0E10               	movlw	16
 33389  009922  6E4B               	movwf	_USBDeviceState,c	;volatile
 33390                           
 33391                           ;usb_device.c: 2013: }
 33392  009924  0012               	return	
 33393  009926                     i1l11048:
 33394                           
 33395                           ; BSR set to: 0
 33396                           ;usb_device.c: 2014: else
 33397                           ;usb_device.c: 2015: {
 33398                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 33399  009926  0E00               	movlw	0
 33400  009928  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33401  00992A  0E01               	movlw	1
 33402  00992C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33403  00992E  0E56               	movlw	low _USBActiveConfiguration
 33404  009930  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33405  009932  0E00               	movlw	high _USBActiveConfiguration
 33406  009934  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33407  009936  0E00               	movlw	0
 33408  009938  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33409  00993A  0E01               	movlw	1
 33410  00993C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33411  00993E  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33412                           
 33413                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 33414  009942  0E20               	movlw	32
 33415  009944  6E4B               	movwf	_USBDeviceState,c	;volatile
 33416  009946  0012               	return	
 33417  009948                     __end_of_USBStdSetCfgHandler:
 33418                           	opt stack 0
 33419                           pclatu	equ	0xFFB
 33420                           pclath	equ	0xFFA
 33421                           tblptru	equ	0xFF8
 33422                           tblptrh	equ	0xFF7
 33423                           tblptrl	equ	0xFF6
 33424                           tablat	equ	0xFF5
 33425                           prodh	equ	0xFF4
 33426                           prodl	equ	0xFF3
 33427                           intcon	equ	0xFF2
 33428                           intcon2	equ	0xFF1
 33429                           intcon3	equ	0xFF0
 33430                           indf0	equ	0xFEF
 33431                           postinc0	equ	0xFEE
 33432                           plusw0	equ	0xFEB
 33433                           fsr0h	equ	0xFEA
 33434                           fsr0l	equ	0xFE9
 33435                           wreg	equ	0xFE8
 33436                           indf1	equ	0xFE7
 33437                           postinc1	equ	0xFE6
 33438                           postdec1	equ	0xFE5
 33439                           plusw1	equ	0xFE3
 33440                           fsr1h	equ	0xFE2
 33441                           fsr1l	equ	0xFE1
 33442                           bsr	equ	0xFE0
 33443                           indf2	equ	0xFDF
 33444                           postinc2	equ	0xFDE
 33445                           postdec2	equ	0xFDD
 33446                           plusw2	equ	0xFDB
 33447                           fsr2h	equ	0xFDA
 33448                           fsr2l	equ	0xFD9
 33449                           status	equ	0xFD8
 33450                           
 33451 ;; *************** function i1_memset *****************
 33452 ;; Defined at:
 33453 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 33454 ;; Parameters:    Size  Location     Type
 33455 ;;  p1              2    0[COMRAM] PTR void 
 33456 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 33457 ;;  c               2    2[COMRAM] int 
 33458 ;;  n               2    4[COMRAM] unsigned int 
 33459 ;; Auto vars:     Size  Location     Type
 33460 ;;  memset          2    6[COMRAM] PTR unsigned char 
 33461 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 33462 ;; Return value:  Size  Location     Type
 33463 ;;                  2    0[COMRAM] PTR void 
 33464 ;; Registers used:
 33465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33466 ;; Tracked objects:
 33467 ;;		On entry : 0/0
 33468 ;;		On exit  : 0/0
 33469 ;;		Unchanged: 0/0
 33470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33471 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33474 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33475 ;;Total ram usage:        8 bytes
 33476 ;; Hardware stack levels used:    1
 33477 ;; Hardware stack levels required when called:    6
 33478 ;; This function calls:
 33479 ;;		Nothing
 33480 ;; This function is called by:
 33481 ;;		_USBStdSetCfgHandler
 33482 ;;		i1_USBDeviceInit
 33483 ;; This function uses a non-reentrant model
 33484 ;;
 33485                           
 33486                           	psect	text98
 33487  00BA32                     __ptext98:
 33488                           	opt stack 0
 33489  00BA32                     i1_memset:
 33490                           	opt stack 9
 33491                           
 33492                           ;incstack = 0
 33493  00BA32  C001  F007         	movff	i1memset@p1,i1memset@p
 33494  00BA36  C002  F008         	movff	i1memset@p1+1,i1memset@p+1
 33495  00BA3A  D008               	goto	i1l10584
 33496  00BA3C                     i1l10580:
 33497  00BA3C  C007  FFD9         	movff	i1memset@p,fsr2l
 33498  00BA40  C008  FFDA         	movff	i1memset@p+1,fsr2h
 33499  00BA44  C003  FFDF         	movff	i1memset@c,indf2
 33500  00BA48  4A07               	infsnz	i1memset@p,f,c
 33501  00BA4A  2A08               	incf	i1memset@p+1,f,c
 33502  00BA4C                     i1l10584:
 33503  00BA4C  0605               	decf	i1memset@n,f,c
 33504  00BA4E  A0D8               	btfss	status,0,c
 33505  00BA50  0606               	decf	i1memset@n+1,f,c
 33506  00BA52  2805               	incf	i1memset@n,w,c
 33507  00BA54  E1F3               	bnz	i1l10580
 33508  00BA56  2806               	incf	i1memset@n+1,w,c
 33509  00BA58  B4D8               	btfsc	status,2,c
 33510  00BA5A  0012               	return	
 33511  00BA5C  D7EF               	goto	i1l10580
 33512  00BA5E                     __end_ofi1_memset:
 33513                           	opt stack 0
 33514                           pclatu	equ	0xFFB
 33515                           pclath	equ	0xFFA
 33516                           tblptru	equ	0xFF8
 33517                           tblptrh	equ	0xFF7
 33518                           tblptrl	equ	0xFF6
 33519                           tablat	equ	0xFF5
 33520                           prodh	equ	0xFF4
 33521                           prodl	equ	0xFF3
 33522                           intcon	equ	0xFF2
 33523                           intcon2	equ	0xFF1
 33524                           intcon3	equ	0xFF0
 33525                           indf0	equ	0xFEF
 33526                           postinc0	equ	0xFEE
 33527                           plusw0	equ	0xFEB
 33528                           fsr0h	equ	0xFEA
 33529                           fsr0l	equ	0xFE9
 33530                           wreg	equ	0xFE8
 33531                           indf1	equ	0xFE7
 33532                           postinc1	equ	0xFE6
 33533                           postdec1	equ	0xFE5
 33534                           plusw1	equ	0xFE3
 33535                           fsr1h	equ	0xFE2
 33536                           fsr1l	equ	0xFE1
 33537                           bsr	equ	0xFE0
 33538                           indf2	equ	0xFDF
 33539                           postinc2	equ	0xFDE
 33540                           postdec2	equ	0xFDD
 33541                           plusw2	equ	0xFDB
 33542                           fsr2h	equ	0xFDA
 33543                           fsr2l	equ	0xFD9
 33544                           status	equ	0xFD8
 33545                           
 33546 ;; *************** function _USBStdGetStatusHandler *****************
 33547 ;; Defined at:
 33548 ;;		line 2129 in file "src/usb/usb_device.c"
 33549 ;; Parameters:    Size  Location     Type
 33550 ;;		None
 33551 ;; Auto vars:     Size  Location     Type
 33552 ;;  p               2    1[COMRAM] PTR struct __BDT
 33553 ;;		 -> BDT(32), NULL(0), 
 33554 ;; Return value:  Size  Location     Type
 33555 ;;		None               void
 33556 ;; Registers used:
 33557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33558 ;; Tracked objects:
 33559 ;;		On entry : 0/0
 33560 ;;		On exit  : 0/0
 33561 ;;		Unchanged: 0/0
 33562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33567 ;;Total ram usage:        3 bytes
 33568 ;; Hardware stack levels used:    1
 33569 ;; Hardware stack levels required when called:    6
 33570 ;; This function calls:
 33571 ;;		Nothing
 33572 ;; This function is called by:
 33573 ;;		_USBCheckStdRequest
 33574 ;; This function uses a non-reentrant model
 33575 ;;
 33576                           
 33577                           	psect	text99
 33578  00A4E4                     __ptext99:
 33579                           	opt stack 0
 33580  00A4E4                     _USBStdGetStatusHandler:
 33581                           	opt stack 7
 33582                           
 33583                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 33584                           
 33585                           ;incstack = 0
 33586  00A4E4  0E00               	movlw	0
 33587  00A4E6  010D               	movlb	13	; () banked
 33588  00A4E8  6F28               	movwf	40,b	;volatile
 33589                           
 33590                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 33591  00A4EA  0E00               	movlw	0
 33592  00A4EC  010D               	movlb	13	; () banked
 33593  00A4EE  6F29               	movwf	41,b	;volatile
 33594                           
 33595                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 33596  00A4F0  D03B               	goto	i1l11104
 33597  00A4F2                     i1l1371:
 33598                           
 33599                           ; BSR set to: 13
 33600                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 33601  00A4F2  0100               	movlb	0	; () banked
 33602  00A4F4  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33603                           
 33604                           ;usb_device.c: 2145: }
 33605                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 33606                           
 33607                           ; BSR set to: 13
 33608                           
 33609                           ; BSR set to: 0
 33610                           ;usb_device.c: 2143: {
 33611                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 33612                           
 33613                           ;usb_device.c: 2142: if(0 == 1)
 33614  00A4F6  0446               	decf	_RemoteWakeup,w,c	;volatile
 33615  00A4F8  A4D8               	btfss	status,2,c
 33616  00A4FA  D042               	goto	i1l1374
 33617                           
 33618                           ;usb_device.c: 2148: {
 33619                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 33620  00A4FC  010D               	movlb	13	; () banked
 33621  00A4FE  8328               	bsf	40,1,b	;volatile
 33622                           
 33623                           ; BSR set to: 13
 33624                           ;usb_device.c: 2150: }
 33625                           ;usb_device.c: 2151: break;
 33626  00A500  D03F               	goto	i1l1374
 33627  00A502                     i1l1375:
 33628                           
 33629                           ; BSR set to: 13
 33630                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 33631  00A502  0100               	movlb	0	; () banked
 33632  00A504  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33633                           
 33634                           ;usb_device.c: 2154: break;
 33635  00A506  D03C               	goto	i1l1374
 33636  00A508                     i1l1376:
 33637                           
 33638                           ; BSR set to: 13
 33639                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 33640  00A508  0100               	movlb	0	; () banked
 33641  00A50A  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33642                           
 33643                           ;usb_device.c: 2160: {
 33644                           ;usb_device.c: 2161: BDT_ENTRY *p;
 33645                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 33646  00A50C  010D               	movlb	13	; () banked
 33647  00A50E  BF24               	btfsc	36,7,b	;volatile
 33648  00A510  D00B               	goto	i1l11094
 33649                           
 33650                           ; BSR set to: 13
 33651                           ;usb_device.c: 2164: {
 33652                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 33653  00A512  010D               	movlb	13	; () banked
 33654  00A514  5124               	movf	36,w,b	;volatile
 33655  00A516  0B0F               	andlw	15
 33656  00A518  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 33657  00A51A  5001               	movf	??_USBStdGetStatusHandler,w,c
 33658  00A51C  0D02               	mullw	2
 33659  00A51E  0E8F               	movlw	low _pBDTEntryOut
 33660  00A520  24F3               	addwf	prodl,w,c
 33661  00A522  6ED9               	movwf	fsr2l,c
 33662  00A524  0E00               	movlw	high _pBDTEntryOut
 33663  00A526  D00A               	goto	L16
 33664  00A528                     i1l11094:
 33665                           
 33666                           ; BSR set to: 13
 33667                           ;usb_device.c: 2167: else
 33668                           ;usb_device.c: 2168: {
 33669                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 33670  00A528  010D               	movlb	13	; () banked
 33671  00A52A  5124               	movf	36,w,b	;volatile
 33672  00A52C  0B0F               	andlw	15
 33673  00A52E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 33674  00A530  5001               	movf	??_USBStdGetStatusHandler,w,c
 33675  00A532  0D02               	mullw	2
 33676  00A534  0E8B               	movlw	low _pBDTEntryIn
 33677  00A536  24F3               	addwf	prodl,w,c
 33678  00A538  6ED9               	movwf	fsr2l,c
 33679  00A53A  0E00               	movlw	high _pBDTEntryIn
 33680  00A53C                     L16:
 33681  00A53C  20F4               	addwfc	prodh,w,c
 33682  00A53E  6EDA               	movwf	fsr2h,c
 33683  00A540  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 33684  00A544  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 33685                           
 33686                           ; BSR set to: 13
 33687                           ;usb_device.c: 2170: }
 33688                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 33689                           
 33690                           ; BSR set to: 13
 33691  00A548  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 33692  00A54C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 33693  00A550  AEDF               	btfss	indf2,7,c
 33694  00A552  D016               	goto	i1l1374
 33695                           
 33696                           ; BSR set to: 13
 33697  00A554  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 33698  00A558  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 33699  00A55C  A4DF               	btfss	indf2,2,c
 33700  00A55E  D010               	goto	i1l1374
 33701                           
 33702                           ; BSR set to: 13
 33703                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 33704  00A560  0E01               	movlw	1
 33705  00A562  010D               	movlb	13	; () banked
 33706  00A564  6F28               	movwf	40,b	;volatile
 33707                           
 33708                           ; BSR set to: 13
 33709                           ;usb_device.c: 2175: }
 33710                           ;usb_device.c: 2176: }
 33711                           
 33712                           ; BSR set to: 13
 33713                           ;usb_device.c: 2174: break;
 33714  00A566  D00C               	goto	i1l1374
 33715  00A568                     i1l11104:
 33716                           
 33717                           ; BSR set to: 13
 33718  00A568  010D               	movlb	13	; () banked
 33719  00A56A  5120               	movf	32,w,b	;volatile
 33720  00A56C  0B1F               	andlw	31
 33721                           
 33722                           ; Switch size 1, requested type "space"
 33723                           ; Number of cases is 3, Range of values is 0 to 2
 33724                           ; switch strategies available:
 33725                           ; Name         Instructions Cycles
 33726                           ; simple_byte           10     6 (average)
 33727                           ;	Chosen strategy is simple_byte
 33728  00A56E  0A00               	xorlw	0	; case 0
 33729  00A570  B4D8               	btfsc	status,2,c
 33730  00A572  D7BF               	goto	i1l1371
 33731  00A574  0A01               	xorlw	1	; case 1
 33732  00A576  B4D8               	btfsc	status,2,c
 33733  00A578  D7C4               	goto	i1l1375
 33734  00A57A  0A03               	xorlw	3	; case 2
 33735  00A57C  B4D8               	btfsc	status,2,c
 33736  00A57E  D7C4               	goto	i1l1376
 33737  00A580                     i1l1374:
 33738                           
 33739                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 33740  00A580  0100               	movlb	0	; () banked
 33741  00A582  AF84               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 33742  00A584  0012               	return	
 33743                           
 33744                           ; BSR set to: 0
 33745                           ;usb_device.c: 2179: {
 33746                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 33747  00A586  0E28               	movlw	40
 33748  00A588  0100               	movlb	0	; () banked
 33749  00A58A  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33750  00A58C  0E0D               	movlw	13
 33751  00A58E  0100               	movlb	0	; () banked
 33752  00A590  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33753                           
 33754                           ; BSR set to: 0
 33755                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33756  00A592  0100               	movlb	0	; () banked
 33757  00A594  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33758                           
 33759                           ; BSR set to: 0
 33760                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 33761  00A596  0E02               	movlw	2
 33762  00A598  0100               	movlb	0	; () banked
 33763  00A59A  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33764  00A59C  0012               	return	
 33765  00A59E                     __end_of_USBStdGetStatusHandler:
 33766                           	opt stack 0
 33767                           pclatu	equ	0xFFB
 33768                           pclath	equ	0xFFA
 33769                           tblptru	equ	0xFF8
 33770                           tblptrh	equ	0xFF7
 33771                           tblptrl	equ	0xFF6
 33772                           tablat	equ	0xFF5
 33773                           prodh	equ	0xFF4
 33774                           prodl	equ	0xFF3
 33775                           intcon	equ	0xFF2
 33776                           intcon2	equ	0xFF1
 33777                           intcon3	equ	0xFF0
 33778                           indf0	equ	0xFEF
 33779                           postinc0	equ	0xFEE
 33780                           plusw0	equ	0xFEB
 33781                           fsr0h	equ	0xFEA
 33782                           fsr0l	equ	0xFE9
 33783                           wreg	equ	0xFE8
 33784                           indf1	equ	0xFE7
 33785                           postinc1	equ	0xFE6
 33786                           postdec1	equ	0xFE5
 33787                           plusw1	equ	0xFE3
 33788                           fsr1h	equ	0xFE2
 33789                           fsr1l	equ	0xFE1
 33790                           bsr	equ	0xFE0
 33791                           indf2	equ	0xFDF
 33792                           postinc2	equ	0xFDE
 33793                           postdec2	equ	0xFDD
 33794                           plusw2	equ	0xFDB
 33795                           fsr2h	equ	0xFDA
 33796                           fsr2l	equ	0xFD9
 33797                           status	equ	0xFD8
 33798                           
 33799 ;; *************** function _USBStdGetDscHandler *****************
 33800 ;; Defined at:
 33801 ;;		line 2043 in file "src/usb/usb_device.c"
 33802 ;; Parameters:    Size  Location     Type
 33803 ;;		None
 33804 ;; Auto vars:     Size  Location     Type
 33805 ;;		None
 33806 ;; Return value:  Size  Location     Type
 33807 ;;		None               void
 33808 ;; Registers used:
 33809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33810 ;; Tracked objects:
 33811 ;;		On entry : 0/0
 33812 ;;		On exit  : 0/0
 33813 ;;		Unchanged: 0/0
 33814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33817 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33819 ;;Total ram usage:        2 bytes
 33820 ;; Hardware stack levels used:    1
 33821 ;; Hardware stack levels required when called:    6
 33822 ;; This function calls:
 33823 ;;		Nothing
 33824 ;; This function is called by:
 33825 ;;		_USBCheckStdRequest
 33826 ;; This function uses a non-reentrant model
 33827 ;;
 33828                           
 33829                           	psect	text100
 33830  007FC6                     __ptext100:
 33831                           	opt stack 0
 33832  007FC6                     _USBStdGetDscHandler:
 33833                           	opt stack 7
 33834                           
 33835                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 33836                           
 33837                           ; BSR set to: 0
 33838                           ;incstack = 0
 33839  007FC6  0E80               	movlw	128
 33840  007FC8  010D               	movlb	13	; () banked
 33841  007FCA  1920               	xorwf	32,w,b	;volatile
 33842  007FCC  A4D8               	btfss	status,2,c
 33843  007FCE  0012               	return	
 33844                           
 33845                           ; BSR set to: 13
 33846                           ;usb_device.c: 2046: {
 33847                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 33848  007FD0  0EC0               	movlw	192
 33849  007FD2  0100               	movlb	0	; () banked
 33850  007FD4  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 33851                           
 33852                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 33853  007FD6  D092               	goto	i1l11082
 33854  007FD8                     i1l11056:
 33855                           
 33856                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 33857  007FD8  0E77               	movlw	low _device_dsc
 33858  007FDA  0100               	movlb	0	; () banked
 33859  007FDC  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33860  007FDE  0E21               	movlw	high _device_dsc
 33861  007FE0  0100               	movlb	0	; () banked
 33862  007FE2  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33863                           
 33864                           ; BSR set to: 0
 33865                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 33866  007FE4  0E00               	movlw	0
 33867  007FE6  0100               	movlb	0	; () banked
 33868  007FE8  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 33869  007FEA  0E12               	movlw	18
 33870  007FEC  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33871                           
 33872                           ;usb_device.c: 2058: break;
 33873  007FEE  0012               	return	
 33874  007FF0                     i1l11060:
 33875                           
 33876                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 33877  007FF0  010D               	movlb	13	; () banked
 33878  007FF2  5122               	movf	34,w,b	;volatile
 33879  007FF4  A4D8               	btfss	status,2,c
 33880  007FF6  D049               	goto	i1l11068
 33881                           
 33882                           ; BSR set to: 13
 33883                           ;usb_device.c: 2064: {
 33884                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 33885  007FF8  010D               	movlb	13	; () banked
 33886  007FFA  5122               	movf	34,w,b	;volatile
 33887  007FFC  0D02               	mullw	2
 33888  007FFE  0ECD               	movlw	low _USB_CD_Ptr
 33889  008000  24F3               	addwf	prodl,w,c
 33890  008002  6EF6               	movwf	tblptrl,c
 33891  008004  0E20               	movlw	high _USB_CD_Ptr
 33892  008006  20F4               	addwfc	prodh,w,c
 33893  008008  6EF7               	movwf	tblptrh,c
 33894  00800A                     	if	1	;There are 3 active tblptr bytes
 33895  00800A  6AF8               	clrf	tblptru,c
 33896  00800C  0E00               	movlw	low (__mediumconst shr (0+16))
 33897  00800E  22F8               	addwfc	tblptru,f,c
 33898  008010                     	endif
 33899  008010  0009               	tblrd		*+
 33900  008012  CFF5 F081          	movff	tablat,_inPipes	;volatile
 33901  008016  000A               	tblrd		*-
 33902  008018  CFF5 F082          	movff	tablat,_inPipes+1	;volatile
 33903                           
 33904                           ; BSR set to: 13
 33905                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 33906  00801C  0E02               	movlw	2
 33907  00801E  0100               	movlb	0	; () banked
 33908  008020  2581               	addwf	_inPipes& (0+255),w,b	;volatile
 33909  008022  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 33910  008024  0E00               	movlw	0
 33911  008026  0100               	movlb	0	; () banked
 33912  008028  2182               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 33913  00802A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 33914  00802C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 33915  008030  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 33916  008034  0E00               	movlw	low (__mediumconst shr (0+16))
 33917  008036  6EF8               	movwf	tblptru,c
 33918  008038  0E0E               	movlw	(high __ramtop+-1)
 33919  00803A  64F7               	cpfsgt	tblptrh,c
 33920  00803C  D003               	bra	i1u1068_27
 33921  00803E  0008               	tblrd		*
 33922  008040  50F5               	movf	tablat,w,c
 33923  008042  D005               	bra	i1u1068_20
 33924  008044                     i1u1068_27:
 33925  008044  CFF6 FFE9          	movff	tblptrl,fsr0l
 33926  008048  CFF7 FFEA          	movff	tblptrh,fsr0h
 33927  00804C  50EF               	movf	indf0,w,c
 33928  00804E                     i1u1068_20:
 33929  00804E  0100               	movlb	0	; () banked
 33930  008050  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33931                           
 33932                           ; BSR set to: 0
 33933                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 33934  008052  0E03               	movlw	3
 33935  008054  0100               	movlb	0	; () banked
 33936  008056  2581               	addwf	_inPipes& (0+255),w,b	;volatile
 33937  008058  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 33938  00805A  0E00               	movlw	0
 33939  00805C  0100               	movlb	0	; () banked
 33940  00805E  2182               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 33941  008060  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 33942  008062  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 33943  008066  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 33944  00806A  0E00               	movlw	low (__mediumconst shr (0+16))
 33945  00806C  6EF8               	movwf	tblptru,c
 33946  00806E  0E0E               	movlw	(high __ramtop+-1)
 33947  008070  64F7               	cpfsgt	tblptrh,c
 33948  008072  D003               	bra	i1u1069_27
 33949  008074  0008               	tblrd		*
 33950  008076  50F5               	movf	tablat,w,c
 33951  008078  D005               	bra	i1u1069_20
 33952  00807A                     i1u1069_27:
 33953  00807A  CFF6 FFE9          	movff	tblptrl,fsr0l
 33954  00807E  CFF7 FFEA          	movff	tblptrh,fsr0h
 33955  008082  50EF               	movf	indf0,w,c
 33956  008084                     i1u1069_20:
 33957  008084  0100               	movlb	0	; () banked
 33958  008086  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 33959                           
 33960                           ;usb_device.c: 2076: }
 33961  008088  0012               	return	
 33962  00808A                     i1l11068:
 33963                           
 33964                           ;usb_device.c: 2077: else
 33965                           ;usb_device.c: 2078: {
 33966                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 33967  00808A  0E00               	movlw	0
 33968  00808C  0100               	movlb	0	; () banked
 33969  00808E  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 33970                           
 33971                           ; BSR set to: 0
 33972                           ;usb_device.c: 2080: }
 33973                           ;usb_device.c: 2081: break;
 33974  008090  0012               	return	
 33975  008092                     i1l11070:
 33976                           
 33977                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 33978  008092  0E03               	movlw	3
 33979  008094  010D               	movlb	13	; () banked
 33980  008096  6122               	cpfslt	34,b	;volatile
 33981  008098  D029               	goto	i1l11076
 33982                           
 33983                           ; BSR set to: 13
 33984                           ;usb_device.c: 2087: {
 33985                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 33986  00809A  010D               	movlb	13	; () banked
 33987  00809C  5122               	movf	34,w,b	;volatile
 33988  00809E  0D02               	mullw	2
 33989  0080A0  0EC3               	movlw	low _USB_SD_Ptr
 33990  0080A2  24F3               	addwf	prodl,w,c
 33991  0080A4  6EF6               	movwf	tblptrl,c
 33992  0080A6  0E20               	movlw	high _USB_SD_Ptr
 33993  0080A8  20F4               	addwfc	prodh,w,c
 33994  0080AA  6EF7               	movwf	tblptrh,c
 33995  0080AC                     	if	1	;There are 3 active tblptr bytes
 33996  0080AC  6AF8               	clrf	tblptru,c
 33997  0080AE  0E00               	movlw	low (__mediumconst shr (0+16))
 33998  0080B0  22F8               	addwfc	tblptru,f,c
 33999  0080B2                     	endif
 34000  0080B2  0009               	tblrd		*+
 34001  0080B4  CFF5 F081          	movff	tablat,_inPipes	;volatile
 34002  0080B8  000A               	tblrd		*-
 34003  0080BA  CFF5 F082          	movff	tablat,_inPipes+1	;volatile
 34004                           
 34005                           ; BSR set to: 13
 34006                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 34007  0080BE  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 34008  0080C2  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 34009  0080C6  0E00               	movlw	low (__mediumconst shr (0+16))
 34010  0080C8  6EF8               	movwf	tblptru,c
 34011  0080CA  0E0E               	movlw	(high __ramtop+-1)
 34012  0080CC  64F7               	cpfsgt	tblptrh,c
 34013  0080CE  D003               	bra	i1u1071_27
 34014  0080D0  0008               	tblrd		*
 34015  0080D2  50F5               	movf	tablat,w,c
 34016  0080D4  D005               	bra	i1u1071_20
 34017  0080D6                     i1u1071_27:
 34018  0080D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 34019  0080DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 34020  0080DE  50EF               	movf	indf0,w,c
 34021  0080E0                     i1u1071_20:
 34022  0080E0  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 34023  0080E2  5001               	movf	??_USBStdGetDscHandler,w,c
 34024  0080E4  0100               	movlb	0	; () banked
 34025  0080E6  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 34026  0080E8  6B86               	clrf	(_inPipes+5)& (0+255),b	;volatile
 34027                           
 34028                           ;usb_device.c: 2092: }
 34029  0080EA  0012               	return	
 34030  0080EC                     i1l11076:
 34031                           
 34032                           ;usb_device.c: 2102: else
 34033                           ;usb_device.c: 2103: {
 34034                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 34035  0080EC  0E00               	movlw	0
 34036  0080EE  0100               	movlb	0	; () banked
 34037  0080F0  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34038                           
 34039                           ; BSR set to: 0
 34040                           ;usb_device.c: 2105: }
 34041                           ;usb_device.c: 2106: break;
 34042  0080F2  0012               	return	
 34043  0080F4                     i1l11078:
 34044                           
 34045                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 34046  0080F4  0E00               	movlw	0
 34047  0080F6  0100               	movlb	0	; () banked
 34048  0080F8  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34049                           
 34050                           ; BSR set to: 0
 34051                           ;usb_device.c: 2110: }
 34052                           
 34053                           ;usb_device.c: 2109: break;
 34054  0080FA  0012               	return	
 34055  0080FC                     i1l11082:
 34056                           
 34057                           ; BSR set to: 0
 34058  0080FC  010D               	movlb	13	; () banked
 34059  0080FE  5123               	movf	35,w,b	;volatile
 34060                           
 34061                           ; Switch size 1, requested type "space"
 34062                           ; Number of cases is 3, Range of values is 1 to 3
 34063                           ; switch strategies available:
 34064                           ; Name         Instructions Cycles
 34065                           ; simple_byte           10     6 (average)
 34066                           ;	Chosen strategy is simple_byte
 34067  008100  0A01               	xorlw	1	; case 1
 34068  008102  B4D8               	btfsc	status,2,c
 34069  008104  D769               	goto	i1l11056
 34070  008106  0A03               	xorlw	3	; case 2
 34071  008108  B4D8               	btfsc	status,2,c
 34072  00810A  D772               	goto	i1l11060
 34073  00810C  0A01               	xorlw	1	; case 3
 34074  00810E  B4D8               	btfsc	status,2,c
 34075  008110  D7C0               	goto	i1l11070
 34076  008112  D7F0               	goto	i1l11078
 34077  008114                     __end_of_USBStdGetDscHandler:
 34078                           	opt stack 0
 34079                           pclatu	equ	0xFFB
 34080                           pclath	equ	0xFFA
 34081                           tblptru	equ	0xFF8
 34082                           tblptrh	equ	0xFF7
 34083                           tblptrl	equ	0xFF6
 34084                           tablat	equ	0xFF5
 34085                           prodh	equ	0xFF4
 34086                           prodl	equ	0xFF3
 34087                           intcon	equ	0xFF2
 34088                           intcon2	equ	0xFF1
 34089                           intcon3	equ	0xFF0
 34090                           indf0	equ	0xFEF
 34091                           postinc0	equ	0xFEE
 34092                           plusw0	equ	0xFEB
 34093                           fsr0h	equ	0xFEA
 34094                           fsr0l	equ	0xFE9
 34095                           wreg	equ	0xFE8
 34096                           indf1	equ	0xFE7
 34097                           postinc1	equ	0xFE6
 34098                           postdec1	equ	0xFE5
 34099                           plusw1	equ	0xFE3
 34100                           fsr1h	equ	0xFE2
 34101                           fsr1l	equ	0xFE1
 34102                           bsr	equ	0xFE0
 34103                           indf2	equ	0xFDF
 34104                           postinc2	equ	0xFDE
 34105                           postdec2	equ	0xFDD
 34106                           plusw2	equ	0xFDB
 34107                           fsr2h	equ	0xFDA
 34108                           fsr2l	equ	0xFD9
 34109                           status	equ	0xFD8
 34110                           
 34111 ;; *************** function _USBStdFeatureReqHandler *****************
 34112 ;; Defined at:
 34113 ;;		line 2757 in file "src/usb/usb_device.c"
 34114 ;; Parameters:    Size  Location     Type
 34115 ;;		None
 34116 ;; Auto vars:     Size  Location     Type
 34117 ;;  p               2   24[COMRAM] PTR struct __BDT
 34118 ;;		 -> BDT(32), NULL(0), 
 34119 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 34120 ;;		 -> UEP0(1), 
 34121 ;;  current_ep_d    1   23[COMRAM] struct .
 34122 ;; Return value:  Size  Location     Type
 34123 ;;		None               void
 34124 ;; Registers used:
 34125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34126 ;; Tracked objects:
 34127 ;;		On entry : 0/0
 34128 ;;		On exit  : 0/0
 34129 ;;		Unchanged: 0/0
 34130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34132 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34135 ;;Total ram usage:        6 bytes
 34136 ;; Hardware stack levels used:    1
 34137 ;; Hardware stack levels required when called:   10
 34138 ;; This function calls:
 34139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34140 ;; This function is called by:
 34141 ;;		_USBCheckStdRequest
 34142 ;; This function uses a non-reentrant model
 34143 ;;
 34144                           
 34145                           	psect	text101
 34146  006658                     __ptext101:
 34147                           	opt stack 0
 34148  006658                     _USBStdFeatureReqHandler:
 34149                           	opt stack 3
 34150                           
 34151                           ;usb_device.c: 2759: BDT_ENTRY *p;
 34152                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 34153                           ;usb_device.c: 2764: unsigned char* pUEP;
 34154                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 34155                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 34156                           
 34157                           ;incstack = 0
 34158  006658  010D               	movlb	13	; () banked
 34159  00665A  0522               	decf	34,w,b	;volatile
 34160  00665C  A4D8               	btfss	status,2,c
 34161  00665E  D011               	goto	i1l1450
 34162                           
 34163                           ; BSR set to: 13
 34164  006660  010D               	movlb	13	; () banked
 34165  006662  5120               	movf	32,w,b	;volatile
 34166  006664  0B1F               	andlw	31
 34167  006666  0900               	iorlw	0
 34168  006668  A4D8               	btfss	status,2,c
 34169  00666A  D00B               	goto	i1l1450
 34170                           
 34171                           ; BSR set to: 13
 34172                           ;usb_device.c: 2804: {
 34173                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 34174  00666C  0100               	movlb	0	; () banked
 34175  00666E  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 34176                           
 34177                           ; BSR set to: 0
 34178                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 34179  006670  0E03               	movlw	3
 34180  006672  010D               	movlb	13	; () banked
 34181  006674  1921               	xorwf	33,w,b	;volatile
 34182  006676  A4D8               	btfss	status,2,c
 34183  006678  D002               	goto	i1l11122
 34184                           
 34185                           ; BSR set to: 13
 34186                           ;usb_device.c: 2807: RemoteWakeup = 1;
 34187  00667A  0E01               	movlw	1
 34188  00667C  D001               	goto	L17
 34189  00667E                     i1l11122:
 34190                           
 34191                           ; BSR set to: 13
 34192                           ;usb_device.c: 2808: else
 34193                           ;usb_device.c: 2809: RemoteWakeup = 0;
 34194  00667E  0E00               	movlw	0
 34195  006680                     L17:
 34196  006680  6E46               	movwf	_RemoteWakeup,c	;volatile
 34197  006682                     i1l1450:
 34198                           
 34199                           ; BSR set to: 13
 34200                           ;usb_device.c: 2810: }
 34201                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 34202                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 34203                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 34204                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 34205  006682  010D               	movlb	13	; () banked
 34206  006684  5122               	movf	34,w,b	;volatile
 34207  006686  A4D8               	btfss	status,2,c
 34208  006688  0012               	return	
 34209                           
 34210                           ; BSR set to: 13
 34211  00668A  010D               	movlb	13	; () banked
 34212  00668C  5120               	movf	32,w,b	;volatile
 34213  00668E  0B1F               	andlw	31
 34214  006690  0A02               	xorlw	2
 34215  006692  A4D8               	btfss	status,2,c
 34216  006694  0012               	return	
 34217                           
 34218                           ; BSR set to: 13
 34219  006696  010D               	movlb	13	; () banked
 34220  006698  5124               	movf	36,w,b	;volatile
 34221  00669A  0B0F               	andlw	15
 34222  00669C  0900               	iorlw	0
 34223  00669E  B4D8               	btfsc	status,2,c
 34224  0066A0  0012               	return	
 34225                           
 34226                           ; BSR set to: 13
 34227  0066A2  010D               	movlb	13	; () banked
 34228  0066A4  5124               	movf	36,w,b	;volatile
 34229  0066A6  0B0F               	andlw	15
 34230  0066A8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34231  0066AA  0E02               	movlw	2
 34232  0066AC  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 34233  0066AE  0012               	return	
 34234                           
 34235                           ; BSR set to: 13
 34236  0066B0  0E20               	movlw	32
 34237  0066B2  184B               	xorwf	_USBDeviceState,w,c	;volatile
 34238  0066B4  A4D8               	btfss	status,2,c
 34239  0066B6  0012               	return	
 34240                           
 34241                           ; BSR set to: 13
 34242                           ;usb_device.c: 2817: {
 34243                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 34244  0066B8  0100               	movlb	0	; () banked
 34245  0066BA  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 34246                           
 34247                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 34248  0066BC  010D               	movlb	13	; () banked
 34249  0066BE  BF24               	btfsc	36,7,b	;volatile
 34250  0066C0  D01B               	goto	i1l11136
 34251                           
 34252                           ; BSR set to: 13
 34253                           ;usb_device.c: 2824: {
 34254                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 34255  0066C2  010D               	movlb	13	; () banked
 34256  0066C4  5124               	movf	36,w,b	;volatile
 34257  0066C6  0B0F               	andlw	15
 34258  0066C8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34259  0066CA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34260  0066CC  0D02               	mullw	2
 34261  0066CE  0E8F               	movlw	low _pBDTEntryOut
 34262  0066D0  24F3               	addwf	prodl,w,c
 34263  0066D2  6ED9               	movwf	fsr2l,c
 34264  0066D4  0E00               	movlw	high _pBDTEntryOut
 34265  0066D6  20F4               	addwfc	prodh,w,c
 34266  0066D8  6EDA               	movwf	fsr2h,c
 34267  0066DA  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 34268  0066DE  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 34269                           
 34270                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 34271  0066E2  010D               	movlb	13	; () banked
 34272  0066E4  5124               	movf	36,w,b	;volatile
 34273  0066E6  0B0F               	andlw	15
 34274  0066E8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34275  0066EA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34276  0066EC  0D01               	mullw	1
 34277  0066EE  0E97               	movlw	low _ep_data_out
 34278  0066F0  24F3               	addwf	prodl,w,c
 34279  0066F2  6ED9               	movwf	fsr2l,c
 34280  0066F4  0E00               	movlw	high _ep_data_out
 34281  0066F6  D01A               	goto	L18
 34282  0066F8                     i1l11136:
 34283                           
 34284                           ; BSR set to: 13
 34285                           ;usb_device.c: 2828: else
 34286                           ;usb_device.c: 2829: {
 34287                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 34288  0066F8  010D               	movlb	13	; () banked
 34289  0066FA  5124               	movf	36,w,b	;volatile
 34290  0066FC  0B0F               	andlw	15
 34291  0066FE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34292  006700  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34293  006702  0D02               	mullw	2
 34294  006704  0E8B               	movlw	low _pBDTEntryIn
 34295  006706  24F3               	addwf	prodl,w,c
 34296  006708  6ED9               	movwf	fsr2l,c
 34297  00670A  0E00               	movlw	high _pBDTEntryIn
 34298  00670C  20F4               	addwfc	prodh,w,c
 34299  00670E  6EDA               	movwf	fsr2h,c
 34300  006710  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 34301  006714  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 34302                           
 34303                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 34304  006718  010D               	movlb	13	; () banked
 34305  00671A  5124               	movf	36,w,b	;volatile
 34306  00671C  0B0F               	andlw	15
 34307  00671E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34308  006720  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34309  006722  0D01               	mullw	1
 34310  006724  0E95               	movlw	low _ep_data_in
 34311  006726  24F3               	addwf	prodl,w,c
 34312  006728  6ED9               	movwf	fsr2l,c
 34313  00672A  0E00               	movlw	high _ep_data_in
 34314  00672C                     L18:
 34315  00672C  20F4               	addwfc	prodh,w,c
 34316  00672E  6EDA               	movwf	fsr2h,c
 34317  006730  50DF               	movf	indf2,w,c
 34318  006732  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 34319                           
 34320                           ; BSR set to: 13
 34321                           ;usb_device.c: 2832: }
 34322                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 34323                           
 34324                           ; BSR set to: 13
 34325  006734  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 34326  006736  D002               	goto	i1l11142
 34327                           
 34328                           ; BSR set to: 13
 34329                           ;usb_device.c: 2839: {
 34330                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 34331  006738  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 34332                           
 34333                           ;usb_device.c: 2841: }
 34334  00673A  D001               	goto	i1l11144
 34335  00673C                     i1l11142:
 34336                           
 34337                           ; BSR set to: 13
 34338                           ;usb_device.c: 2842: else
 34339                           ;usb_device.c: 2843: {
 34340                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 34341  00673C  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 34342  00673E                     i1l11144:
 34343                           
 34344                           ; BSR set to: 13
 34345                           ;usb_device.c: 2845: }
 34346                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 34347  00673E  010D               	movlb	13	; () banked
 34348  006740  BF24               	btfsc	36,7,b	;volatile
 34349  006742  D00B               	goto	i1l11148
 34350                           
 34351                           ; BSR set to: 13
 34352                           ;usb_device.c: 2851: {
 34353                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 34354  006744  010D               	movlb	13	; () banked
 34355  006746  5124               	movf	36,w,b	;volatile
 34356  006748  0B0F               	andlw	15
 34357  00674A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34358  00674C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34359  00674E  0D02               	mullw	2
 34360  006750  0E8F               	movlw	low _pBDTEntryOut
 34361  006752  24F3               	addwf	prodl,w,c
 34362  006754  6ED9               	movwf	fsr2l,c
 34363  006756  0E00               	movlw	high _pBDTEntryOut
 34364  006758  D00A               	goto	L19
 34365  00675A                     i1l11148:
 34366                           
 34367                           ; BSR set to: 13
 34368                           ;usb_device.c: 2854: else
 34369                           ;usb_device.c: 2855: {
 34370                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 34371  00675A  010D               	movlb	13	; () banked
 34372  00675C  5124               	movf	36,w,b	;volatile
 34373  00675E  0B0F               	andlw	15
 34374  006760  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34375  006762  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34376  006764  0D02               	mullw	2
 34377  006766  0E8B               	movlw	low _pBDTEntryIn
 34378  006768  24F3               	addwf	prodl,w,c
 34379  00676A  6ED9               	movwf	fsr2l,c
 34380  00676C  0E00               	movlw	high _pBDTEntryIn
 34381  00676E                     L19:
 34382  00676E  20F4               	addwfc	prodh,w,c
 34383  006770  6EDA               	movwf	fsr2h,c
 34384  006772  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 34385  006776  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 34386                           
 34387                           ; BSR set to: 13
 34388                           ;usb_device.c: 2857: }
 34389                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 34390                           
 34391                           ; BSR set to: 13
 34392  00677A  0E03               	movlw	3
 34393  00677C  010D               	movlb	13	; () banked
 34394  00677E  1921               	xorwf	33,w,b	;volatile
 34395  006780  A4D8               	btfss	status,2,c
 34396  006782  D02F               	goto	i1l11164
 34397                           
 34398                           ; BSR set to: 13
 34399                           ;usb_device.c: 2861: {
 34400                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 34401  006784  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34402  006788  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34403  00678C  AEDF               	btfss	indf2,7,c
 34404  00678E  D01C               	goto	i1l11160
 34405                           
 34406                           ; BSR set to: 13
 34407                           ;usb_device.c: 2863: {
 34408                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 34409  006790  010D               	movlb	13	; () banked
 34410  006792  BF24               	btfsc	36,7,b	;volatile
 34411  006794  D00B               	goto	i1l11158
 34412                           
 34413                           ; BSR set to: 13
 34414                           ;usb_device.c: 2867: {
 34415                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 34416  006796  010D               	movlb	13	; () banked
 34417  006798  5124               	movf	36,w,b	;volatile
 34418  00679A  0B0F               	andlw	15
 34419  00679C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34420  00679E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34421  0067A0  0D01               	mullw	1
 34422  0067A2  0E97               	movlw	low _ep_data_out
 34423  0067A4  24F3               	addwf	prodl,w,c
 34424  0067A6  6ED9               	movwf	fsr2l,c
 34425  0067A8  0E00               	movlw	high _ep_data_out
 34426  0067AA  D00A               	goto	L20
 34427  0067AC                     i1l11158:
 34428                           
 34429                           ;usb_device.c: 2870: else
 34430                           ;usb_device.c: 2871: {
 34431                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 34432  0067AC  010D               	movlb	13	; () banked
 34433  0067AE  5124               	movf	36,w,b	;volatile
 34434  0067B0  0B0F               	andlw	15
 34435  0067B2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34436  0067B4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34437  0067B6  0D01               	mullw	1
 34438  0067B8  0E95               	movlw	low _ep_data_in
 34439  0067BA  24F3               	addwf	prodl,w,c
 34440  0067BC  6ED9               	movwf	fsr2l,c
 34441  0067BE  0E00               	movlw	high _ep_data_in
 34442  0067C0                     L20:
 34443  0067C0  20F4               	addwfc	prodh,w,c
 34444  0067C2  6EDA               	movwf	fsr2h,c
 34445  0067C4  0100               	movlb	0	; () banked
 34446  0067C6  82DF               	bsf	indf2,1,c
 34447  0067C8                     i1l11160:
 34448                           
 34449                           ;usb_device.c: 2873: }
 34450                           ;usb_device.c: 2874: }
 34451                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 34452  0067C8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34453  0067CC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34454  0067D0  0E00               	movlw	0
 34455  0067D2  84DB               	bsf	plusw2,2,c
 34456                           
 34457                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 34458  0067D4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34459  0067D8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34460  0067DC  0E00               	movlw	0
 34461  0067DE  8EDB               	bsf	plusw2,7,c
 34462                           
 34463                           ;usb_device.c: 2879: }
 34464  0067E0  0012               	return	
 34465  0067E2                     i1l11164:
 34466                           
 34467                           ;usb_device.c: 2880: else
 34468                           ;usb_device.c: 2881: {
 34469                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 34470  0067E2  0E04               	movlw	4
 34471  0067E4  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 34472                           
 34473                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 34474  0067E6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34475  0067EA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34476  0067EE  AEDF               	btfss	indf2,7,c
 34477  0067F0  D01B               	goto	i1l11174
 34478                           
 34479                           ;usb_device.c: 2888: {
 34480                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 34481  0067F2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34482  0067F6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34483  0067FA  0E7F               	movlw	127
 34484  0067FC  16DF               	andwf	indf2,f,c
 34485                           
 34486                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 34487  0067FE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34488  006802  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34489  006806  0E00               	movlw	0
 34490  006808  8CDB               	bsf	plusw2,6,c
 34491                           
 34492                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 34493  00680A  0E00               	movlw	0
 34494  00680C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34495  00680E  0E05               	movlw	5
 34496  006810  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34497  006812  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 34498  006816  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 34499  00681A  0E00               	movlw	0
 34500  00681C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34501  00681E  0E02               	movlw	2
 34502  006820  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34503  006822  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34504                           
 34505                           ;usb_device.c: 2894: }
 34506  006826  D006               	goto	i1l11176
 34507  006828                     i1l11174:
 34508                           
 34509                           ;usb_device.c: 2895: else
 34510                           ;usb_device.c: 2896: {
 34511                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 34512  006828  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34513  00682C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34514  006830  0E00               	movlw	0
 34515  006832  8CDB               	bsf	plusw2,6,c
 34516  006834                     i1l11176:
 34517                           
 34518                           ;usb_device.c: 2899: }
 34519                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 34520  006834  0E04               	movlw	4
 34521  006836  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 34522                           
 34523                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 34524  006838  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 34525  00683A  D006               	goto	i1l1469
 34526  00683C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34527  006840  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34528  006844  AEDF               	btfss	indf2,7,c
 34529  006846  D031               	goto	i1l11190
 34530  006848                     i1l1469:
 34531                           
 34532                           ;usb_device.c: 2910: {
 34533                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 34534  006848  010D               	movlb	13	; () banked
 34535  00684A  BF24               	btfsc	36,7,b	;volatile
 34536  00684C  D00B               	goto	i1l11184
 34537                           
 34538                           ; BSR set to: 13
 34539                           ;usb_device.c: 2912: {
 34540                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 34541  00684E  010D               	movlb	13	; () banked
 34542  006850  5124               	movf	36,w,b	;volatile
 34543  006852  0B0F               	andlw	15
 34544  006854  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34545  006856  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34546  006858  0D01               	mullw	1
 34547  00685A  0E97               	movlw	low _ep_data_out
 34548  00685C  24F3               	addwf	prodl,w,c
 34549  00685E  6ED9               	movwf	fsr2l,c
 34550  006860  0E00               	movlw	high _ep_data_out
 34551  006862  D00A               	goto	L21
 34552  006864                     i1l11184:
 34553                           
 34554                           ;usb_device.c: 2915: else
 34555                           ;usb_device.c: 2916: {
 34556                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 34557  006864  010D               	movlb	13	; () banked
 34558  006866  5124               	movf	36,w,b	;volatile
 34559  006868  0B0F               	andlw	15
 34560  00686A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34561  00686C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34562  00686E  0D01               	mullw	1
 34563  006870  0E95               	movlw	low _ep_data_in
 34564  006872  24F3               	addwf	prodl,w,c
 34565  006874  6ED9               	movwf	fsr2l,c
 34566  006876  0E00               	movlw	high _ep_data_in
 34567  006878                     L21:
 34568  006878  20F4               	addwfc	prodh,w,c
 34569  00687A  6EDA               	movwf	fsr2h,c
 34570  00687C  0100               	movlb	0	; () banked
 34571  00687E  92DF               	bcf	indf2,1,c
 34572                           
 34573                           ; BSR set to: 0
 34574                           ;usb_device.c: 2918: }
 34575                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 34576                           
 34577                           ; BSR set to: 0
 34578  006880  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34579  006884  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34580  006888  0E3B               	movlw	59
 34581  00688A  16DF               	andwf	indf2,f,c
 34582                           
 34583                           ; BSR set to: 0
 34584                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 34585  00688C  0E00               	movlw	0
 34586  00688E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34587  006890  0E05               	movlw	5
 34588  006892  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34589  006894  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 34590  006898  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 34591  00689C  0E00               	movlw	0
 34592  00689E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34593  0068A0  0E02               	movlw	2
 34594  0068A2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34595  0068A4  ECF2  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34596                           
 34597                           ;usb_device.c: 2924: }
 34598  0068A8  D006               	goto	i1l11192
 34599  0068AA                     i1l11190:
 34600                           
 34601                           ;usb_device.c: 2925: else
 34602                           ;usb_device.c: 2926: {
 34603                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 34604  0068AA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34605  0068AE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34606  0068B2  0E3B               	movlw	59
 34607  0068B4  16DF               	andwf	indf2,f,c
 34608  0068B6                     i1l11192:
 34609                           
 34610                           ;usb_device.c: 2929: }
 34611                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 34612  0068B6  010D               	movlb	13	; () banked
 34613  0068B8  5124               	movf	36,w,b	;volatile
 34614  0068BA  0B0F               	andlw	15
 34615  0068BC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34616  0068BE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34617  0068C0  0D01               	mullw	1
 34618  0068C2  0E26               	movlw	38
 34619  0068C4  24F3               	addwf	prodl,w,c
 34620  0068C6  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 34621  0068C8  0E0F               	movlw	15
 34622  0068CA  20F4               	addwfc	prodh,w,c
 34623  0068CC  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 34624                           
 34625                           ; BSR set to: 13
 34626                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 34627  0068CE  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 34628  0068D2  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 34629  0068D6  0EFE               	movlw	254
 34630  0068D8  16DF               	andwf	indf2,f,c
 34631                           
 34632                           ; BSR set to: 13
 34633  0068DA  0012               	return	
 34634  0068DC                     __end_of_USBStdFeatureReqHandler:
 34635                           	opt stack 0
 34636                           pclatu	equ	0xFFB
 34637                           pclath	equ	0xFFA
 34638                           tblptru	equ	0xFF8
 34639                           tblptrh	equ	0xFF7
 34640                           tblptrl	equ	0xFF6
 34641                           tablat	equ	0xFF5
 34642                           prodh	equ	0xFF4
 34643                           prodl	equ	0xFF3
 34644                           intcon	equ	0xFF2
 34645                           intcon2	equ	0xFF1
 34646                           intcon3	equ	0xFF0
 34647                           indf0	equ	0xFEF
 34648                           postinc0	equ	0xFEE
 34649                           plusw0	equ	0xFEB
 34650                           fsr0h	equ	0xFEA
 34651                           fsr0l	equ	0xFE9
 34652                           wreg	equ	0xFE8
 34653                           indf1	equ	0xFE7
 34654                           postinc1	equ	0xFE6
 34655                           postdec1	equ	0xFE5
 34656                           plusw1	equ	0xFE3
 34657                           fsr1h	equ	0xFE2
 34658                           fsr1l	equ	0xFE1
 34659                           bsr	equ	0xFE0
 34660                           indf2	equ	0xFDF
 34661                           postinc2	equ	0xFDE
 34662                           postdec2	equ	0xFDD
 34663                           plusw2	equ	0xFDB
 34664                           fsr2h	equ	0xFDA
 34665                           fsr2l	equ	0xFD9
 34666                           status	equ	0xFD8
 34667                           
 34668 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 34669 ;; Defined at:
 34670 ;;		line 850 in file "src/main.c"
 34671 ;; Parameters:    Size  Location     Type
 34672 ;;  event           2   12[COMRAM] enum E10007
 34673 ;;  pdata           2   14[COMRAM] PTR void 
 34674 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
 34675 ;;  size            2   16[COMRAM] unsigned int 
 34676 ;; Auto vars:     Size  Location     Type
 34677 ;;		None
 34678 ;; Return value:  Size  Location     Type
 34679 ;;                  1    wreg      unsigned char 
 34680 ;; Registers used:
 34681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34682 ;; Tracked objects:
 34683 ;;		On entry : 0/0
 34684 ;;		On exit  : 0/0
 34685 ;;		Unchanged: 0/0
 34686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34687 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34691 ;;Total ram usage:        8 bytes
 34692 ;; Hardware stack levels used:    1
 34693 ;; Hardware stack levels required when called:    9
 34694 ;; This function calls:
 34695 ;;		_APP_DeviceCustomHIDInitialize
 34696 ;;		_APP_LEDUpdateUSBStatus
 34697 ;;		_USBCheckHIDRequest
 34698 ;; This function is called by:
 34699 ;;		_USBDeviceTasks
 34700 ;;		_USBStdSetCfgHandler
 34701 ;;		_USBSuspend
 34702 ;;		_USBWakeFromSuspend
 34703 ;;		_USBCtrlTrfSetupHandler
 34704 ;;		_USBCheckStdRequest
 34705 ;;		_USBStdFeatureReqHandler
 34706 ;; This function uses a non-reentrant model
 34707 ;;
 34708                           
 34709                           	psect	text102
 34710  00B1E4                     __ptext102:
 34711                           	opt stack 0
 34712  00B1E4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 34713                           	opt stack 7
 34714                           
 34715                           ;main.c: 852: switch((int)event)
 34716                           
 34717                           ;incstack = 0
 34718  00B1E4  D00F               	goto	i1l10524
 34719  00B1E6                     i1l10512:
 34720                           
 34721                           ;main.c: 860: APP_LEDUpdateUSBStatus();
 34722  00B1E6  ECF0  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34723                           
 34724                           ;main.c: 861: break;
 34725  00B1EA  0012               	return	
 34726  00B1EC                     i1l10514:
 34727                           
 34728                           ;main.c: 865: APP_LEDUpdateUSBStatus();
 34729  00B1EC  ECF0  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34730                           
 34731                           ;main.c: 866: break;
 34732  00B1F0  0012               	return	
 34733  00B1F2                     i1l10516:
 34734                           
 34735                           ;main.c: 870: APP_LEDUpdateUSBStatus();
 34736  00B1F2  ECF0  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34737                           
 34738                           ;main.c: 871: break;
 34739  00B1F6  0012               	return	
 34740  00B1F8                     i1l10518:
 34741                           
 34742                           ;main.c: 876: APP_DeviceCustomHIDInitialize();
 34743  00B1F8  EC9E  F05C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 34744                           
 34745                           ;main.c: 880: break;
 34746                           
 34747                           ;main.c: 879: case EVENT_SET_DESCRIPTOR:
 34748                           
 34749                           ;main.c: 877: break;
 34750  00B1FC  0012               	return	
 34751  00B1FE                     i1l10520:
 34752                           
 34753                           ;main.c: 885: USBCheckHIDRequest();
 34754  00B1FE  ECD2  F049         	call	_USBCheckHIDRequest	;wreg free
 34755                           
 34756                           ;main.c: 896: }
 34757                           
 34758                           ;main.c: 895: break;
 34759                           
 34760                           ;main.c: 894: default:
 34761                           
 34762                           ;main.c: 892: break;
 34763                           
 34764                           ;main.c: 891: case EVENT_TRANSFER_TERMINATED:
 34765                           
 34766                           ;main.c: 889: break;
 34767                           
 34768                           ;main.c: 888: case EVENT_BUS_ERROR:
 34769                           
 34770                           ;main.c: 886: break;
 34771  00B202  0012               	return	
 34772  00B204                     i1l10524:
 34773  00B204  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 34774  00B208  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 34775                           
 34776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 34777                           ; Switch size 1, requested type "space"
 34778                           ; Number of cases is 2, Range of values is 0 to 127
 34779                           ; switch strategies available:
 34780                           ; Name         Instructions Cycles
 34781                           ; simple_byte            7     4 (average)
 34782                           ;	Chosen strategy is simple_byte
 34783  00B20C  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 34784  00B20E  0A00               	xorlw	0	; case 0
 34785  00B210  B4D8               	btfsc	status,2,c
 34786  00B212  D004               	goto	i1l22192
 34787  00B214  0A7F               	xorlw	127	; case 127
 34788  00B216  A4D8               	btfss	status,2,c
 34789  00B218  0012               	return	
 34790  00B21A  D01A               	goto	i1l22194
 34791  00B21C                     i1l22192:
 34792                           
 34793                           ; Switch size 1, requested type "space"
 34794                           ; Number of cases is 8, Range of values is 1 to 117
 34795                           ; switch strategies available:
 34796                           ; Name         Instructions Cycles
 34797                           ; simple_byte           25    13 (average)
 34798                           ;	Chosen strategy is simple_byte
 34799  00B21C  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 34800  00B21E  0A01               	xorlw	1	; case 1
 34801  00B220  B4D8               	btfsc	status,2,c
 34802  00B222  D7EA               	goto	i1l10518
 34803  00B224  0A03               	xorlw	3	; case 2
 34804  00B226  B4D8               	btfsc	status,2,c
 34805  00B228  0012               	return	
 34806  00B22A  0A01               	xorlw	1	; case 3
 34807  00B22C  B4D8               	btfsc	status,2,c
 34808  00B22E  D7E7               	goto	i1l10520
 34809  00B230  0A06               	xorlw	6	; case 5
 34810  00B232  B4D8               	btfsc	status,2,c
 34811  00B234  0012               	return	
 34812  00B236  0A77               	xorlw	119	; case 114
 34813  00B238  B4D8               	btfsc	status,2,c
 34814  00B23A  0012               	return	
 34815  00B23C  0A01               	xorlw	1	; case 115
 34816  00B23E  B4D8               	btfsc	status,2,c
 34817  00B240  D7D2               	goto	i1l10512
 34818  00B242  0A07               	xorlw	7	; case 116
 34819  00B244  B4D8               	btfsc	status,2,c
 34820  00B246  D7D5               	goto	i1l10516
 34821  00B248  0A01               	xorlw	1	; case 117
 34822  00B24A  A4D8               	btfss	status,2,c
 34823  00B24C  0012               	return	
 34824  00B24E  D7CE               	goto	i1l10514
 34825  00B250                     i1l22194:
 34826                           
 34827                           ; Switch size 1, requested type "space"
 34828                           ; Number of cases is 1, Range of values is 255 to 255
 34829                           ; switch strategies available:
 34830                           ; Name         Instructions Cycles
 34831                           ; simple_byte            4     3 (average)
 34832                           ;	Chosen strategy is simple_byte
 34833  00B250  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 34834  00B252  0AFF               	xorlw	255	; case 255
 34835  00B254  0012               	return	
 34836  00B256                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 34837                           	opt stack 0
 34838                           pclatu	equ	0xFFB
 34839                           pclath	equ	0xFFA
 34840                           tblptru	equ	0xFF8
 34841                           tblptrh	equ	0xFF7
 34842                           tblptrl	equ	0xFF6
 34843                           tablat	equ	0xFF5
 34844                           prodh	equ	0xFF4
 34845                           prodl	equ	0xFF3
 34846                           intcon	equ	0xFF2
 34847                           intcon2	equ	0xFF1
 34848                           intcon3	equ	0xFF0
 34849                           indf0	equ	0xFEF
 34850                           postinc0	equ	0xFEE
 34851                           plusw0	equ	0xFEB
 34852                           fsr0h	equ	0xFEA
 34853                           fsr0l	equ	0xFE9
 34854                           wreg	equ	0xFE8
 34855                           indf1	equ	0xFE7
 34856                           postinc1	equ	0xFE6
 34857                           postdec1	equ	0xFE5
 34858                           plusw1	equ	0xFE3
 34859                           fsr1h	equ	0xFE2
 34860                           fsr1l	equ	0xFE1
 34861                           bsr	equ	0xFE0
 34862                           indf2	equ	0xFDF
 34863                           postinc2	equ	0xFDE
 34864                           postdec2	equ	0xFDD
 34865                           plusw2	equ	0xFDB
 34866                           fsr2h	equ	0xFDA
 34867                           fsr2l	equ	0xFD9
 34868                           status	equ	0xFD8
 34869                           
 34870 ;; *************** function _USBCheckHIDRequest *****************
 34871 ;; Defined at:
 34872 ;;		line 157 in file "src/usb/usb_device_hid.c"
 34873 ;; Parameters:    Size  Location     Type
 34874 ;;		None
 34875 ;; Auto vars:     Size  Location     Type
 34876 ;;		None
 34877 ;; Return value:  Size  Location     Type
 34878 ;;		None               void
 34879 ;; Registers used:
 34880 ;;		wreg, status,2, status,0
 34881 ;; Tracked objects:
 34882 ;;		On entry : 0/0
 34883 ;;		On exit  : 0/0
 34884 ;;		Unchanged: 0/0
 34885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34890 ;;Total ram usage:        0 bytes
 34891 ;; Hardware stack levels used:    1
 34892 ;; Hardware stack levels required when called:    6
 34893 ;; This function calls:
 34894 ;;		Nothing
 34895 ;; This function is called by:
 34896 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34897 ;; This function uses a non-reentrant model
 34898 ;;
 34899                           
 34900                           	psect	text103
 34901  0093A4                     __ptext103:
 34902                           	opt stack 0
 34903  0093A4                     _USBCheckHIDRequest:
 34904                           	opt stack 9
 34905                           
 34906                           ;usb_device_hid.c: 159: if(SetupPkt.Recipient != (0x01)) return;
 34907                           
 34908                           ;incstack = 0
 34909  0093A4  010D               	movlb	13	; () banked
 34910  0093A6  5120               	movf	32,w,b	;volatile
 34911  0093A8  0B1F               	andlw	31
 34912  0093AA  06E8               	decf	wreg,f,c
 34913  0093AC  A4D8               	btfss	status,2,c
 34914  0093AE  0012               	return	
 34915                           
 34916                           ; BSR set to: 13
 34917                           ;usb_device_hid.c: 160: if(SetupPkt.bIntfID != 0x00) return;
 34918                           
 34919                           ; BSR set to: 13
 34920                           
 34921                           ; BSR set to: 13
 34922  0093B0  010D               	movlb	13	; () banked
 34923  0093B2  5124               	movf	36,w,b	;volatile
 34924  0093B4  A4D8               	btfss	status,2,c
 34925  0093B6  0012               	return	
 34926                           
 34927                           ; BSR set to: 13
 34928                           ;usb_device_hid.c: 167: if(SetupPkt.bRequest == 6)
 34929                           
 34930                           ; BSR set to: 13
 34931                           
 34932                           ; BSR set to: 13
 34933  0093B8  0E06               	movlw	6
 34934  0093BA  010D               	movlb	13	; () banked
 34935  0093BC  1921               	xorwf	33,w,b	;volatile
 34936  0093BE  B4D8               	btfsc	status,2,c
 34937  0093C0  D01F               	goto	i1l10376
 34938  0093C2  D027               	goto	i1l10378
 34939  0093C4                     i1l10360:
 34940                           
 34941                           ; BSR set to: 13
 34942                           ;usb_device_hid.c: 172: if(USBActiveConfiguration == 1)
 34943  0093C4  0456               	decf	_USBActiveConfiguration,w,c	;volatile
 34944  0093C6  A4D8               	btfss	status,2,c
 34945  0093C8  D024               	goto	i1l10378
 34946                           
 34947                           ; BSR set to: 13
 34948                           ;usb_device_hid.c: 173: {
 34949                           ;usb_device_hid.c: 174: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 34950  0093CA  0E43               	movlw	low (_configDescriptor1+18)
 34951  0093CC  0100               	movlb	0	; () banked
 34952  0093CE  6F81               	movwf	_inPipes& (0+255),b	;volatile
 34953  0093D0  0E21               	movlw	high (_configDescriptor1+18)
 34954  0093D2  0100               	movlb	0	; () banked
 34955  0093D4  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 34956                           
 34957                           ; BSR set to: 0
 34958  0093D6  0E00               	movlw	0
 34959  0093D8  0100               	movlb	0	; () banked
 34960  0093DA  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 34961  0093DC  0E09               	movlw	9
 34962  0093DE  D00E               	goto	L22
 34963  0093E0                     i1l10366:
 34964                           
 34965                           ; BSR set to: 0
 34966  0093E0  0EC0               	movlw	192
 34967  0093E2  0100               	movlb	0	; () banked
 34968  0093E4  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34969                           
 34970                           ; BSR set to: 0
 34971                           ;usb_device_hid.c: 178: }
 34972                           ;usb_device_hid.c: 179: break;
 34973  0093E6  D015               	goto	i1l10378
 34974  0093E8                     i1l10368:
 34975                           
 34976                           ;usb_device_hid.c: 182: {
 34977                           ;usb_device_hid.c: 183: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 34978  0093E8  0E5A               	movlw	low _hid_rpt01
 34979  0093EA  0100               	movlb	0	; () banked
 34980  0093EC  6F81               	movwf	_inPipes& (0+255),b	;volatile
 34981  0093EE  0E21               	movlw	high _hid_rpt01
 34982  0093F0  0100               	movlb	0	; () banked
 34983  0093F2  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 34984                           
 34985                           ; BSR set to: 0
 34986  0093F4  0E00               	movlw	0
 34987  0093F6  0100               	movlb	0	; () banked
 34988  0093F8  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 34989  0093FA  0E1D               	movlw	29
 34990  0093FC                     L22:
 34991  0093FC  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 34992  0093FE  D7F0               	goto	i1l10366
 34993  009400                     i1l10376:
 34994  009400  010D               	movlb	13	; () banked
 34995  009402  5123               	movf	35,w,b	;volatile
 34996                           
 34997                           ; Switch size 1, requested type "space"
 34998                           ; Number of cases is 3, Range of values is 33 to 35
 34999                           ; switch strategies available:
 35000                           ; Name         Instructions Cycles
 35001                           ; simple_byte           10     6 (average)
 35002                           ;	Chosen strategy is simple_byte
 35003  009404  0A21               	xorlw	33	; case 33
 35004  009406  B4D8               	btfsc	status,2,c
 35005  009408  D7DD               	goto	i1l10360
 35006  00940A  0A03               	xorlw	3	; case 34
 35007  00940C  B4D8               	btfsc	status,2,c
 35008  00940E  D7EC               	goto	i1l10368
 35009  009410  0A01               	xorlw	1	; case 35
 35010  009412                     i1l10378:
 35011                           
 35012                           ;usb_device_hid.c: 203: }
 35013                           ;usb_device_hid.c: 205: if(SetupPkt.RequestType != (0x20>>5))
 35014  009412  010D               	movlb	13	; () banked
 35015  009414  3920               	swapf	32,w,b	;volatile
 35016  009416  32E8               	rrcf	wreg,f,c
 35017  009418  0B03               	andlw	3
 35018  00941A  06E8               	decf	wreg,f,c
 35019  00941C  A4D8               	btfss	status,2,c
 35020  00941E  0012               	return	
 35021  009420  D02A               	goto	i1l10404
 35022  009422                     i1l10382:
 35023                           
 35024                           ; BSR set to: 13
 35025                           ;usb_device_hid.c: 223: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 35026  009422  0E5A               	movlw	low _idle_rate
 35027  009424  0100               	movlb	0	; () banked
 35028  009426  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35029  009428  0E00               	movlw	high _idle_rate
 35030  00942A  0100               	movlb	0	; () banked
 35031  00942C  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35032                           
 35033                           ; BSR set to: 0
 35034  00942E  0E00               	movlw	0
 35035  009430  0100               	movlb	0	; () banked
 35036  009432  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35037  009434  0E01               	movlw	1
 35038  009436  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35039                           
 35040                           ; BSR set to: 0
 35041  009438  0EC1               	movlw	193
 35042  00943A  0100               	movlb	0	; () banked
 35043  00943C  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35044                           
 35045                           ;usb_device_hid.c: 227: break;
 35046  00943E  0012               	return	
 35047  009440                     i1l10388:
 35048                           
 35049                           ;usb_device_hid.c: 229: inPipes[0].info.Val = 0x00 | 0x80;
 35050  009440  0E80               	movlw	128
 35051  009442  0100               	movlb	0	; () banked
 35052  009444  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35053                           
 35054                           ; BSR set to: 0
 35055                           ;usb_device_hid.c: 230: idle_rate = ((USB_SETUP_SET_IDLE_RATE*)&SetupPkt)->duration;
 35056  009446  CD23 F05A          	movff	3363,_idle_rate
 35057                           
 35058                           ;usb_device_hid.c: 231: ;
 35059                           ;usb_device_hid.c: 232: break;
 35060  00944A  0012               	return	
 35061  00944C                     i1l10392:
 35062                           
 35063                           ;usb_device_hid.c: 234: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 35064  00944C  0E59               	movlw	low _active_protocol
 35065  00944E  0100               	movlb	0	; () banked
 35066  009450  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35067  009452  0E00               	movlw	high _active_protocol
 35068  009454  0100               	movlb	0	; () banked
 35069  009456  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35070                           
 35071                           ; BSR set to: 0
 35072  009458  0E00               	movlw	0
 35073  00945A  0100               	movlb	0	; () banked
 35074  00945C  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35075  00945E  0E01               	movlw	1
 35076  009460  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35077                           
 35078                           ; BSR set to: 0
 35079  009462  0E81               	movlw	129
 35080  009464  0100               	movlb	0	; () banked
 35081  009466  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35082                           
 35083                           ;usb_device_hid.c: 238: break;
 35084  009468  0012               	return	
 35085  00946A                     i1l10398:
 35086                           
 35087                           ;usb_device_hid.c: 240: inPipes[0].info.Val = 0x00 | 0x80;
 35088  00946A  0E80               	movlw	128
 35089  00946C  0100               	movlb	0	; () banked
 35090  00946E  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35091                           
 35092                           ; BSR set to: 0
 35093                           ;usb_device_hid.c: 241: active_protocol = ((USB_SETUP_SET_PROTOCOL*)&SetupPkt)->protocol
      +                          ;
 35094  009470  CD22 F059          	movff	3362,_active_protocol
 35095                           
 35096                           ; BSR set to: 0
 35097                           ;usb_device_hid.c: 243: }
 35098                           
 35099                           ;usb_device_hid.c: 242: break;
 35100  009474  0012               	return	
 35101  009476                     i1l10404:
 35102  009476  010D               	movlb	13	; () banked
 35103  009478  5121               	movf	33,w,b	;volatile
 35104                           
 35105                           ; Switch size 1, requested type "space"
 35106                           ; Number of cases is 6, Range of values is 1 to 11
 35107                           ; switch strategies available:
 35108                           ; Name         Instructions Cycles
 35109                           ; simple_byte           19    10 (average)
 35110                           ;	Chosen strategy is simple_byte
 35111  00947A  0A01               	xorlw	1	; case 1
 35112  00947C  B4D8               	btfsc	status,2,c
 35113  00947E  0012               	return	
 35114  009480  0A03               	xorlw	3	; case 2
 35115  009482  B4D8               	btfsc	status,2,c
 35116  009484  D7CE               	goto	i1l10382
 35117  009486  0A01               	xorlw	1	; case 3
 35118  009488  B4D8               	btfsc	status,2,c
 35119  00948A  D7E0               	goto	i1l10392
 35120  00948C  0A0A               	xorlw	10	; case 9
 35121  00948E  B4D8               	btfsc	status,2,c
 35122  009490  0012               	return	
 35123  009492  0A03               	xorlw	3	; case 10
 35124  009494  B4D8               	btfsc	status,2,c
 35125  009496  D7D4               	goto	i1l10388
 35126  009498  0A01               	xorlw	1	; case 11
 35127  00949A  A4D8               	btfss	status,2,c
 35128  00949C  0012               	return	
 35129  00949E  D7E5               	goto	i1l10398
 35130  0094A0                     __end_of_USBCheckHIDRequest:
 35131                           	opt stack 0
 35132                           pclatu	equ	0xFFB
 35133                           pclath	equ	0xFFA
 35134                           tblptru	equ	0xFF8
 35135                           tblptrh	equ	0xFF7
 35136                           tblptrl	equ	0xFF6
 35137                           tablat	equ	0xFF5
 35138                           prodh	equ	0xFF4
 35139                           prodl	equ	0xFF3
 35140                           intcon	equ	0xFF2
 35141                           intcon2	equ	0xFF1
 35142                           intcon3	equ	0xFF0
 35143                           indf0	equ	0xFEF
 35144                           postinc0	equ	0xFEE
 35145                           plusw0	equ	0xFEB
 35146                           fsr0h	equ	0xFEA
 35147                           fsr0l	equ	0xFE9
 35148                           wreg	equ	0xFE8
 35149                           indf1	equ	0xFE7
 35150                           postinc1	equ	0xFE6
 35151                           postdec1	equ	0xFE5
 35152                           plusw1	equ	0xFE3
 35153                           fsr1h	equ	0xFE2
 35154                           fsr1l	equ	0xFE1
 35155                           bsr	equ	0xFE0
 35156                           indf2	equ	0xFDF
 35157                           postinc2	equ	0xFDE
 35158                           postdec2	equ	0xFDD
 35159                           plusw2	equ	0xFDB
 35160                           fsr2h	equ	0xFDA
 35161                           fsr2l	equ	0xFD9
 35162                           status	equ	0xFD8
 35163                           
 35164 ;; *************** function _APP_LEDUpdateUSBStatus *****************
 35165 ;; Defined at:
 35166 ;;		line 86 in file "src/app_led_usb_status.c"
 35167 ;; Parameters:    Size  Location     Type
 35168 ;;		None
 35169 ;; Auto vars:     Size  Location     Type
 35170 ;;		None
 35171 ;; Return value:  Size  Location     Type
 35172 ;;		None               void
 35173 ;; Registers used:
 35174 ;;		wreg, status,2, status,0, cstack
 35175 ;; Tracked objects:
 35176 ;;		On entry : 0/0
 35177 ;;		On exit  : 0/0
 35178 ;;		Unchanged: 0/0
 35179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35184 ;;Total ram usage:        0 bytes
 35185 ;; Hardware stack levels used:    1
 35186 ;; Hardware stack levels required when called:    7
 35187 ;; This function calls:
 35188 ;;		i1_update_LED
 35189 ;; This function is called by:
 35190 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35191 ;; This function uses a non-reentrant model
 35192 ;;
 35193                           
 35194                           	psect	text104
 35195  00B7E0                     __ptext104:
 35196                           	opt stack 0
 35197  00B7E0                     _APP_LEDUpdateUSBStatus:
 35198                           	opt stack 8
 35199                           
 35200                           ;app_led_usb_status.c: 90: if(UCONbits.SUSPND == 1)
 35201                           
 35202                           ;incstack = 0
 35203  00B7E0  A265               	btfss	3941,1,c	;volatile
 35204  00B7E2  D018               	goto	i1l10430
 35205                           
 35206                           ;app_led_usb_status.c: 91: {
 35207                           ;app_led_usb_status.c: 93: if (status_led != LED_OFF)
 35208  00B7E4  5055               	movf	_status_led,w,c	;volatile
 35209  00B7E6  B4D8               	btfsc	status,2,c
 35210  00B7E8  0012               	return	
 35211                           
 35212                           ;app_led_usb_status.c: 94: {
 35213                           ;app_led_usb_status.c: 95: status_led = LED_OFF;
 35214  00B7EA  0E00               	movlw	0
 35215  00B7EC  6E55               	movwf	_status_led,c	;volatile
 35216                           
 35217                           ;app_led_usb_status.c: 96: update_LED();
 35218  00B7EE  ECF5  F059         	call	i1_update_LED	;wreg free
 35219                           
 35220                           ;app_led_usb_status.c: 97: }
 35221                           ;app_led_usb_status.c: 98: return;
 35222  00B7F2  0012               	return	
 35223  00B7F4                     i1l10416:
 35224                           
 35225                           ;app_led_usb_status.c: 105: if (status_led == LED_OFF)
 35226  00B7F4  5055               	movf	_status_led,w,c	;volatile
 35227  00B7F6  A4D8               	btfss	status,2,c
 35228  00B7F8  0012               	return	
 35229                           
 35230                           ;app_led_usb_status.c: 106: {
 35231                           ;app_led_usb_status.c: 107: status_led = LED_FAST_PULSE;
 35232  00B7FA  0E01               	movlw	1
 35233  00B7FC  6E55               	movwf	_status_led,c	;volatile
 35234                           
 35235                           ;app_led_usb_status.c: 108: update_LED();
 35236  00B7FE  ECF5  F059         	call	i1_update_LED	;wreg free
 35237                           
 35238                           ;app_led_usb_status.c: 109: }
 35239                           ;app_led_usb_status.c: 110: break;
 35240  00B802  0012               	return	
 35241  00B804                     i1l10422:
 35242                           
 35243                           ;app_led_usb_status.c: 114: if (status_led != LED_OFF)
 35244  00B804  5055               	movf	_status_led,w,c	;volatile
 35245  00B806  B4D8               	btfsc	status,2,c
 35246  00B808  0012               	return	
 35247                           
 35248                           ;app_led_usb_status.c: 115: {
 35249                           ;app_led_usb_status.c: 116: status_led = LED_OFF;
 35250  00B80A  0E00               	movlw	0
 35251  00B80C  6E55               	movwf	_status_led,c	;volatile
 35252                           
 35253                           ;app_led_usb_status.c: 117: update_LED();
 35254  00B80E  ECF5  F059         	call	i1_update_LED	;wreg free
 35255                           
 35256                           ;app_led_usb_status.c: 120: }
 35257                           
 35258                           ;app_led_usb_status.c: 118: }
 35259                           ;app_led_usb_status.c: 119: break;
 35260  00B812  0012               	return	
 35261  00B814                     i1l10430:
 35262  00B814  504B               	movf	_USBDeviceState,w,c	;volatile
 35263                           
 35264                           ; Switch size 1, requested type "space"
 35265                           ; Number of cases is 1, Range of values is 32 to 32
 35266                           ; switch strategies available:
 35267                           ; Name         Instructions Cycles
 35268                           ; simple_byte            4     3 (average)
 35269                           ;	Chosen strategy is simple_byte
 35270  00B816  0A20               	xorlw	32	; case 32
 35271  00B818  B4D8               	btfsc	status,2,c
 35272  00B81A  D7EC               	goto	i1l10416
 35273  00B81C  D7F3               	goto	i1l10422
 35274  00B81E                     __end_of_APP_LEDUpdateUSBStatus:
 35275                           	opt stack 0
 35276                           pclatu	equ	0xFFB
 35277                           pclath	equ	0xFFA
 35278                           tblptru	equ	0xFF8
 35279                           tblptrh	equ	0xFF7
 35280                           tblptrl	equ	0xFF6
 35281                           tablat	equ	0xFF5
 35282                           prodh	equ	0xFF4
 35283                           prodl	equ	0xFF3
 35284                           intcon	equ	0xFF2
 35285                           intcon2	equ	0xFF1
 35286                           intcon3	equ	0xFF0
 35287                           indf0	equ	0xFEF
 35288                           postinc0	equ	0xFEE
 35289                           plusw0	equ	0xFEB
 35290                           fsr0h	equ	0xFEA
 35291                           fsr0l	equ	0xFE9
 35292                           wreg	equ	0xFE8
 35293                           indf1	equ	0xFE7
 35294                           postinc1	equ	0xFE6
 35295                           postdec1	equ	0xFE5
 35296                           plusw1	equ	0xFE3
 35297                           fsr1h	equ	0xFE2
 35298                           fsr1l	equ	0xFE1
 35299                           bsr	equ	0xFE0
 35300                           indf2	equ	0xFDF
 35301                           postinc2	equ	0xFDE
 35302                           postdec2	equ	0xFDD
 35303                           plusw2	equ	0xFDB
 35304                           fsr2h	equ	0xFDA
 35305                           fsr2l	equ	0xFD9
 35306                           status	equ	0xFD8
 35307                           
 35308 ;; *************** function i1_update_LED *****************
 35309 ;; Defined at:
 35310 ;;		line 729 in file "src/main.c"
 35311 ;; Parameters:    Size  Location     Type
 35312 ;;		None
 35313 ;; Auto vars:     Size  Location     Type
 35314 ;;		None
 35315 ;; Return value:  Size  Location     Type
 35316 ;;                  2    0[None  ] int 
 35317 ;; Registers used:
 35318 ;;		wreg, status,2, status,0
 35319 ;; Tracked objects:
 35320 ;;		On entry : 0/0
 35321 ;;		On exit  : 0/0
 35322 ;;		Unchanged: 0/0
 35323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35328 ;;Total ram usage:        0 bytes
 35329 ;; Hardware stack levels used:    1
 35330 ;; Hardware stack levels required when called:    6
 35331 ;; This function calls:
 35332 ;;		Nothing
 35333 ;; This function is called by:
 35334 ;;		_APP_LEDUpdateUSBStatus
 35335 ;;		_SYS_InterruptLow
 35336 ;; This function uses a non-reentrant model
 35337 ;;
 35338                           
 35339                           	psect	text105
 35340  00B3EA                     __ptext105:
 35341                           	opt stack 0
 35342  00B3EA                     i1_update_LED:
 35343                           	opt stack 11
 35344                           
 35345                           ;main.c: 731: switch(status_led)
 35346                           
 35347                           ;incstack = 0
 35348  00B3EA  D021               	goto	i1l10330
 35349  00B3EC                     i1l1858:
 35350                           
 35351                           ;main.c: 735: CCP1CONbits.DC1B0 = 0;
 35352  00B3EC  98BA               	bcf	4026,4,c	;volatile
 35353                           
 35354                           ;main.c: 736: CCP1CONbits.DC1B1 = 0;
 35355  00B3EE  9ABA               	bcf	4026,5,c	;volatile
 35356                           
 35357                           ;main.c: 737: CCPR1L = 0;
 35358  00B3F0  0E00               	movlw	0
 35359  00B3F2  6EBB               	movwf	4027,c	;volatile
 35360                           
 35361                           ;main.c: 738: LED_increasing = 1;
 35362  00B3F4  0E01               	movlw	1
 35363  00B3F6  6E45               	movwf	_LED_increasing,c	;volatile
 35364                           
 35365                           ;main.c: 739: break;
 35366  00B3F8  0012               	return	
 35367  00B3FA                     i1l1860:
 35368                           
 35369                           ;main.c: 743: CCP1CONbits.DC1B0 = 1023 & 1;
 35370  00B3FA  88BA               	bsf	4026,4,c	;volatile
 35371                           
 35372                           ;main.c: 744: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 35373  00B3FC  8ABA               	bsf	4026,5,c	;volatile
 35374                           
 35375                           ;main.c: 745: CCPR1L = (1023 >> 2);
 35376  00B3FE  68BB               	setf	4027,c	;volatile
 35377                           
 35378                           ;main.c: 746: repeat_full = 4;
 35379  00B400  0E04               	movlw	4
 35380  00B402  6E53               	movwf	_repeat_full,c	;volatile
 35381                           
 35382                           ;main.c: 747: break;
 35383  00B404  0012               	return	
 35384  00B406                     i1l10316:
 35385                           
 35386                           ;main.c: 750: T4CONbits.T4CKPS = 0b01;
 35387  00B406  5076               	movf	3958,w,c	;volatile
 35388  00B408  0BFC               	andlw	-4
 35389  00B40A  0901               	iorlw	1
 35390  00B40C  6E76               	movwf	3958,c	;volatile
 35391                           
 35392                           ;main.c: 752: CCP1CONbits.DC1B0 = 235 & 1;
 35393  00B40E  88BA               	bsf	4026,4,c	;volatile
 35394                           
 35395                           ;main.c: 753: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35396  00B410  8ABA               	bsf	4026,5,c	;volatile
 35397                           
 35398                           ;main.c: 754: CCPR1L = (235 >> 2);
 35399  00B412  0E3A               	movlw	58
 35400  00B414  6EBB               	movwf	4027,c	;volatile
 35401                           
 35402                           ;main.c: 755: LED_increasing = 0;
 35403  00B416  0E00               	movlw	0
 35404  00B418  6E45               	movwf	_LED_increasing,c	;volatile
 35405                           
 35406                           ;main.c: 756: break;
 35407  00B41A  0012               	return	
 35408  00B41C                     i1l10322:
 35409                           
 35410                           ;main.c: 759: T4CONbits.T4CKPS = 0b11;
 35411  00B41C  0E03               	movlw	3
 35412  00B41E  1276               	iorwf	3958,f,c	;volatile
 35413                           
 35414                           ;main.c: 761: CCP1CONbits.DC1B0 = 235 & 1;
 35415  00B420  88BA               	bsf	4026,4,c	;volatile
 35416                           
 35417                           ;main.c: 762: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35418  00B422  8ABA               	bsf	4026,5,c	;volatile
 35419                           
 35420                           ;main.c: 763: CCPR1L = (235 >> 2);
 35421  00B424  0E3A               	movlw	58
 35422  00B426  6EBB               	movwf	4027,c	;volatile
 35423                           
 35424                           ;main.c: 764: LED_increasing = 0;
 35425  00B428  0E00               	movlw	0
 35426  00B42A  6E45               	movwf	_LED_increasing,c	;volatile
 35427                           
 35428                           ;main.c: 766: }
 35429                           
 35430                           ;main.c: 765: break;
 35431  00B42C  0012               	return	
 35432  00B42E                     i1l10330:
 35433  00B42E  5055               	movf	_status_led,w,c	;volatile
 35434                           
 35435                           ; Switch size 1, requested type "space"
 35436                           ; Number of cases is 4, Range of values is 0 to 3
 35437                           ; switch strategies available:
 35438                           ; Name         Instructions Cycles
 35439                           ; simple_byte           13     7 (average)
 35440                           ;	Chosen strategy is simple_byte
 35441  00B430  0A00               	xorlw	0	; case 0
 35442  00B432  B4D8               	btfsc	status,2,c
 35443  00B434  D7DB               	goto	i1l1858
 35444  00B436  0A01               	xorlw	1	; case 1
 35445  00B438  B4D8               	btfsc	status,2,c
 35446  00B43A  D7E5               	goto	i1l10316
 35447  00B43C  0A03               	xorlw	3	; case 2
 35448  00B43E  B4D8               	btfsc	status,2,c
 35449  00B440  D7ED               	goto	i1l10322
 35450  00B442  0A01               	xorlw	1	; case 3
 35451  00B444  A4D8               	btfss	status,2,c
 35452  00B446  0012               	return	
 35453  00B448  D7D8               	goto	i1l1860
 35454  00B44A                     __end_ofi1_update_LED:
 35455                           	opt stack 0
 35456                           pclatu	equ	0xFFB
 35457                           pclath	equ	0xFFA
 35458                           tblptru	equ	0xFF8
 35459                           tblptrh	equ	0xFF7
 35460                           tblptrl	equ	0xFF6
 35461                           tablat	equ	0xFF5
 35462                           prodh	equ	0xFF4
 35463                           prodl	equ	0xFF3
 35464                           intcon	equ	0xFF2
 35465                           intcon2	equ	0xFF1
 35466                           intcon3	equ	0xFF0
 35467                           indf0	equ	0xFEF
 35468                           postinc0	equ	0xFEE
 35469                           plusw0	equ	0xFEB
 35470                           fsr0h	equ	0xFEA
 35471                           fsr0l	equ	0xFE9
 35472                           wreg	equ	0xFE8
 35473                           indf1	equ	0xFE7
 35474                           postinc1	equ	0xFE6
 35475                           postdec1	equ	0xFE5
 35476                           plusw1	equ	0xFE3
 35477                           fsr1h	equ	0xFE2
 35478                           fsr1l	equ	0xFE1
 35479                           bsr	equ	0xFE0
 35480                           indf2	equ	0xFDF
 35481                           postinc2	equ	0xFDE
 35482                           postdec2	equ	0xFDD
 35483                           plusw2	equ	0xFDB
 35484                           fsr2h	equ	0xFDA
 35485                           fsr2l	equ	0xFD9
 35486                           status	equ	0xFD8
 35487                           
 35488 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 35489 ;; Defined at:
 35490 ;;		line 668 in file "src/main.c"
 35491 ;; Parameters:    Size  Location     Type
 35492 ;;		None
 35493 ;; Auto vars:     Size  Location     Type
 35494 ;;		None
 35495 ;; Return value:  Size  Location     Type
 35496 ;;		None               void
 35497 ;; Registers used:
 35498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35499 ;; Tracked objects:
 35500 ;;		On entry : 0/0
 35501 ;;		On exit  : 0/0
 35502 ;;		Unchanged: 0/0
 35503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35508 ;;Total ram usage:        0 bytes
 35509 ;; Hardware stack levels used:    1
 35510 ;; Hardware stack levels required when called:    8
 35511 ;; This function calls:
 35512 ;;		_USBEnableEndpoint
 35513 ;;		i1_USBTransferOnePacket
 35514 ;; This function is called by:
 35515 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35516 ;; This function uses a non-reentrant model
 35517 ;;
 35518                           
 35519                           	psect	text106
 35520  00B93C                     __ptext106:
 35521                           	opt stack 0
 35522  00B93C                     _APP_DeviceCustomHIDInitialize:
 35523                           	opt stack 7
 35524                           
 35525                           ;main.c: 672: USBInHandle = 0;
 35526                           
 35527                           ;incstack = 0
 35528  00B93C  0E00               	movlw	0
 35529  00B93E  0100               	movlb	0	; () banked
 35530  00B940  6F93               	movwf	_USBInHandle& (0+255),b
 35531  00B942  0E00               	movlw	0
 35532  00B944  0100               	movlb	0	; () banked
 35533  00B946  6F94               	movwf	(_USBInHandle+1)& (0+255),b
 35534                           
 35535                           ; BSR set to: 0
 35536                           ;main.c: 674: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 35537  00B948  0E1E               	movlw	30
 35538  00B94A  6E09               	movwf	USBEnableEndpoint@options,c
 35539  00B94C  0E01               	movlw	1
 35540  00B94E  EC0F  F05C         	call	_USBEnableEndpoint
 35541                           
 35542                           ;main.c: 676: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
 35543  00B952  0E00               	movlw	0
 35544  00B954  6E01               	movwf	i1USBTransferOnePacket@dir,c
 35545  00B956  0E00               	movlw	low _ReceivedDataBuffer
 35546  00B958  6E02               	movwf	i1USBTransferOnePacket@data,c
 35547  00B95A  0E04               	movlw	high _ReceivedDataBuffer
 35548  00B95C  6E03               	movwf	i1USBTransferOnePacket@data+1,c
 35549  00B95E  0E40               	movlw	64
 35550  00B960  6E04               	movwf	i1USBTransferOnePacket@len,c
 35551  00B962  0E01               	movlw	1
 35552  00B964  ECCF  F052         	call	i1_USBTransferOnePacket
 35553  00B968  C001  F1B7         	movff	?i1_USBTransferOnePacket,_USBOutHandle
 35554  00B96C  C002  F1B8         	movff	?i1_USBTransferOnePacket+1,_USBOutHandle+1
 35555  00B970  0012               	return		;funcret
 35556  00B972                     __end_of_APP_DeviceCustomHIDInitialize:
 35557                           	opt stack 0
 35558                           pclatu	equ	0xFFB
 35559                           pclath	equ	0xFFA
 35560                           tblptru	equ	0xFF8
 35561                           tblptrh	equ	0xFF7
 35562                           tblptrl	equ	0xFF6
 35563                           tablat	equ	0xFF5
 35564                           prodh	equ	0xFF4
 35565                           prodl	equ	0xFF3
 35566                           intcon	equ	0xFF2
 35567                           intcon2	equ	0xFF1
 35568                           intcon3	equ	0xFF0
 35569                           indf0	equ	0xFEF
 35570                           postinc0	equ	0xFEE
 35571                           plusw0	equ	0xFEB
 35572                           fsr0h	equ	0xFEA
 35573                           fsr0l	equ	0xFE9
 35574                           wreg	equ	0xFE8
 35575                           indf1	equ	0xFE7
 35576                           postinc1	equ	0xFE6
 35577                           postdec1	equ	0xFE5
 35578                           plusw1	equ	0xFE3
 35579                           fsr1h	equ	0xFE2
 35580                           fsr1l	equ	0xFE1
 35581                           bsr	equ	0xFE0
 35582                           indf2	equ	0xFDF
 35583                           postinc2	equ	0xFDE
 35584                           postdec2	equ	0xFDD
 35585                           plusw2	equ	0xFDB
 35586                           fsr2h	equ	0xFDA
 35587                           fsr2l	equ	0xFD9
 35588                           status	equ	0xFD8
 35589                           
 35590 ;; *************** function i1_USBTransferOnePacket *****************
 35591 ;; Defined at:
 35592 ;;		line 995 in file "src/usb/usb_device.c"
 35593 ;; Parameters:    Size  Location     Type
 35594 ;;  ep              1    wreg     unsigned char 
 35595 ;;  dir             1    0[COMRAM] unsigned char 
 35596 ;;  data            2    1[COMRAM] PTR unsigned char 
 35597 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 35598 ;;  len             1    3[COMRAM] unsigned char 
 35599 ;; Auto vars:     Size  Location     Type
 35600 ;;  ep              1    4[COMRAM] unsigned char 
 35601 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 35602 ;;		 -> BDT(32), NULL(0), 
 35603 ;; Return value:  Size  Location     Type
 35604 ;;                  2    0[COMRAM] PTR void 
 35605 ;; Registers used:
 35606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35607 ;; Tracked objects:
 35608 ;;		On entry : 0/0
 35609 ;;		On exit  : 0/0
 35610 ;;		Unchanged: 0/0
 35611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35616 ;;Total ram usage:        7 bytes
 35617 ;; Hardware stack levels used:    1
 35618 ;; Hardware stack levels required when called:    6
 35619 ;; This function calls:
 35620 ;;		Nothing
 35621 ;; This function is called by:
 35622 ;;		_APP_DeviceCustomHIDInitialize
 35623 ;; This function uses a non-reentrant model
 35624 ;;
 35625                           
 35626                           	psect	text107
 35627  00A59E                     __ptext107:
 35628                           	opt stack 0
 35629  00A59E                     i1_USBTransferOnePacket:
 35630                           	opt stack 8
 35631                           
 35632                           ;incstack = 0
 35633                           ;i1USBTransferOnePacket@ep stored from wreg
 35634  00A59E  6E05               	movwf	i1USBTransferOnePacket@ep,c
 35635                           
 35636                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 35637                           ;usb_device.c: 1000: if(dir != 0)
 35638  00A5A0  5001               	movf	i1USBTransferOnePacket@dir,w,c
 35639  00A5A2  B4D8               	btfsc	status,2,c
 35640  00A5A4  D007               	goto	i1l10284
 35641                           
 35642                           ;usb_device.c: 1001: {
 35643                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 35644  00A5A6  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35645  00A5A8  0D02               	mullw	2
 35646  00A5AA  0E8B               	movlw	low _pBDTEntryIn
 35647  00A5AC  24F3               	addwf	prodl,w,c
 35648  00A5AE  6ED9               	movwf	fsr2l,c
 35649  00A5B0  0E00               	movlw	high _pBDTEntryIn
 35650  00A5B2  D006               	goto	L23
 35651  00A5B4                     i1l10284:
 35652                           
 35653                           ;usb_device.c: 1005: else
 35654                           ;usb_device.c: 1006: {
 35655                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 35656  00A5B4  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35657  00A5B6  0D02               	mullw	2
 35658  00A5B8  0E8F               	movlw	low _pBDTEntryOut
 35659  00A5BA  24F3               	addwf	prodl,w,c
 35660  00A5BC  6ED9               	movwf	fsr2l,c
 35661  00A5BE  0E00               	movlw	high _pBDTEntryOut
 35662  00A5C0                     L23:
 35663  00A5C0  20F4               	addwfc	prodh,w,c
 35664  00A5C2  6EDA               	movwf	fsr2h,c
 35665  00A5C4  CFDE F006          	movff	postinc2,i1USBTransferOnePacket@handle
 35666  00A5C8  CFDD F007          	movff	postdec2,i1USBTransferOnePacket@handle+1
 35667                           
 35668                           ;usb_device.c: 1009: }
 35669                           ;usb_device.c: 1013: if(handle == 0)
 35670  00A5CC  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35671  00A5CE  1007               	iorwf	i1USBTransferOnePacket@handle+1,w,c
 35672  00A5D0  A4D8               	btfss	status,2,c
 35673  00A5D2  D005               	goto	i1l10292
 35674                           
 35675                           ;usb_device.c: 1014: {
 35676                           ;usb_device.c: 1015: return 0;
 35677  00A5D4  0E00               	movlw	0
 35678  00A5D6  6E01               	movwf	?i1_USBTransferOnePacket,c
 35679  00A5D8  0E00               	movlw	0
 35680  00A5DA  6E02               	movwf	?i1_USBTransferOnePacket+1,c
 35681  00A5DC  0012               	return	
 35682  00A5DE                     i1l10292:
 35683                           
 35684                           ;usb_device.c: 1016: }
 35685                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 35686  00A5DE  EE20 F002          	lfsr	2,2
 35687  00A5E2  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35688  00A5E4  26D9               	addwf	fsr2l,f,c
 35689  00A5E6  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 35690  00A5E8  22DA               	addwfc	fsr2h,f,c
 35691  00A5EA  C002  FFDE         	movff	i1USBTransferOnePacket@data,postinc2
 35692  00A5EE  C003  FFDD         	movff	i1USBTransferOnePacket@data+1,postdec2
 35693                           
 35694                           ;usb_device.c: 1030: handle->CNT = len;
 35695  00A5F2  EE20 F001          	lfsr	2,1
 35696  00A5F6  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35697  00A5F8  26D9               	addwf	fsr2l,f,c
 35698  00A5FA  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 35699  00A5FC  22DA               	addwfc	fsr2h,f,c
 35700  00A5FE  C004  FFDF         	movff	i1USBTransferOnePacket@len,indf2
 35701                           
 35702                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 35703  00A602  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35704  00A606  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35705  00A60A  0E40               	movlw	64
 35706  00A60C  16DF               	andwf	indf2,f,c
 35707                           
 35708                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 35709  00A60E  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35710  00A612  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35711  00A616  0E00               	movlw	0
 35712  00A618  86DB               	bsf	plusw2,3,c
 35713                           
 35714                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 35715  00A61A  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35716  00A61E  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35717  00A622  0E00               	movlw	0
 35718  00A624  8EDB               	bsf	plusw2,7,c
 35719                           
 35720                           ;usb_device.c: 1036: if(dir != 0)
 35721  00A626  5001               	movf	i1USBTransferOnePacket@dir,w,c
 35722  00A628  B4D8               	btfsc	status,2,c
 35723  00A62A  D007               	goto	i1l10304
 35724                           
 35725                           ;usb_device.c: 1037: {
 35726                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 35727  00A62C  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35728  00A62E  0D02               	mullw	2
 35729  00A630  0E8B               	movlw	low _pBDTEntryIn
 35730  00A632  24F3               	addwf	prodl,w,c
 35731  00A634  6ED9               	movwf	fsr2l,c
 35732  00A636  0E00               	movlw	high _pBDTEntryIn
 35733  00A638  D006               	goto	L24
 35734  00A63A                     i1l10304:
 35735                           
 35736                           ;usb_device.c: 1041: else
 35737                           ;usb_device.c: 1042: {
 35738                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 35739  00A63A  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35740  00A63C  0D02               	mullw	2
 35741  00A63E  0E8F               	movlw	low _pBDTEntryOut
 35742  00A640  24F3               	addwf	prodl,w,c
 35743  00A642  6ED9               	movwf	fsr2l,c
 35744  00A644  0E00               	movlw	high _pBDTEntryOut
 35745  00A646                     L24:
 35746  00A646  20F4               	addwfc	prodh,w,c
 35747  00A648  6EDA               	movwf	fsr2h,c
 35748  00A64A  0E04               	movlw	4
 35749  00A64C  1ADF               	xorwf	indf2,f,c
 35750                           
 35751                           ;usb_device.c: 1045: }
 35752                           ;usb_device.c: 1046: return (void*)handle;
 35753  00A64E  C006  F001         	movff	i1USBTransferOnePacket@handle,?i1_USBTransferOnePacket
 35754  00A652  C007  F002         	movff	i1USBTransferOnePacket@handle+1,?i1_USBTransferOnePacket+1
 35755  00A656  0012               	return	
 35756  00A658                     __end_ofi1_USBTransferOnePacket:
 35757                           	opt stack 0
 35758                           pclatu	equ	0xFFB
 35759                           pclath	equ	0xFFA
 35760                           tblptru	equ	0xFF8
 35761                           tblptrh	equ	0xFF7
 35762                           tblptrl	equ	0xFF6
 35763                           tablat	equ	0xFF5
 35764                           prodh	equ	0xFF4
 35765                           prodl	equ	0xFF3
 35766                           intcon	equ	0xFF2
 35767                           intcon2	equ	0xFF1
 35768                           intcon3	equ	0xFF0
 35769                           indf0	equ	0xFEF
 35770                           postinc0	equ	0xFEE
 35771                           plusw0	equ	0xFEB
 35772                           fsr0h	equ	0xFEA
 35773                           fsr0l	equ	0xFE9
 35774                           wreg	equ	0xFE8
 35775                           indf1	equ	0xFE7
 35776                           postinc1	equ	0xFE6
 35777                           postdec1	equ	0xFE5
 35778                           plusw1	equ	0xFE3
 35779                           fsr1h	equ	0xFE2
 35780                           fsr1l	equ	0xFE1
 35781                           bsr	equ	0xFE0
 35782                           indf2	equ	0xFDF
 35783                           postinc2	equ	0xFDE
 35784                           postdec2	equ	0xFDD
 35785                           plusw2	equ	0xFDB
 35786                           fsr2h	equ	0xFDA
 35787                           fsr2l	equ	0xFD9
 35788                           status	equ	0xFD8
 35789                           
 35790 ;; *************** function _USBEnableEndpoint *****************
 35791 ;; Defined at:
 35792 ;;		line 878 in file "src/usb/usb_device.c"
 35793 ;; Parameters:    Size  Location     Type
 35794 ;;  ep              1    wreg     unsigned char 
 35795 ;;  options         1    8[COMRAM] unsigned char 
 35796 ;; Auto vars:     Size  Location     Type
 35797 ;;  ep              1   11[COMRAM] unsigned char 
 35798 ;;  p               2    9[COMRAM] PTR unsigned char 
 35799 ;;		 -> UEP0(1), 
 35800 ;; Return value:  Size  Location     Type
 35801 ;;		None               void
 35802 ;; Registers used:
 35803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35804 ;; Tracked objects:
 35805 ;;		On entry : 0/0
 35806 ;;		On exit  : 0/0
 35807 ;;		Unchanged: 0/0
 35808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35813 ;;Total ram usage:        4 bytes
 35814 ;; Hardware stack levels used:    1
 35815 ;; Hardware stack levels required when called:    7
 35816 ;; This function calls:
 35817 ;;		_USBConfigureEndpoint
 35818 ;; This function is called by:
 35819 ;;		_APP_DeviceCustomHIDInitialize
 35820 ;; This function uses a non-reentrant model
 35821 ;;
 35822                           
 35823                           	psect	text108
 35824  00B81E                     __ptext108:
 35825                           	opt stack 0
 35826  00B81E                     _USBEnableEndpoint:
 35827                           	opt stack 7
 35828                           
 35829                           ;incstack = 0
 35830                           ;USBEnableEndpoint@ep stored from wreg
 35831  00B81E  6E0C               	movwf	USBEnableEndpoint@ep,c
 35832                           
 35833                           ;usb_device.c: 880: unsigned char* p;
 35834                           ;usb_device.c: 884: if(options & 0x04)
 35835  00B820  A409               	btfss	USBEnableEndpoint@options,2,c
 35836  00B822  D005               	goto	i1l10272
 35837                           
 35838                           ;usb_device.c: 885: {
 35839                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 35840  00B824  0E00               	movlw	0
 35841  00B826  6E01               	movwf	USBConfigureEndpoint@direction,c
 35842  00B828  500C               	movf	USBEnableEndpoint@ep,w,c
 35843  00B82A  ECAC  F056         	call	_USBConfigureEndpoint
 35844  00B82E                     i1l10272:
 35845                           
 35846                           ;usb_device.c: 887: }
 35847                           ;usb_device.c: 888: if(options & 0x02)
 35848  00B82E  A209               	btfss	USBEnableEndpoint@options,1,c
 35849  00B830  D005               	goto	i1l10276
 35850                           
 35851                           ;usb_device.c: 889: {
 35852                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 35853  00B832  0E01               	movlw	1
 35854  00B834  6E01               	movwf	USBConfigureEndpoint@direction,c
 35855  00B836  500C               	movf	USBEnableEndpoint@ep,w,c
 35856  00B838  ECAC  F056         	call	_USBConfigureEndpoint
 35857  00B83C                     i1l10276:
 35858                           
 35859                           ;usb_device.c: 891: }
 35860                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 35861  00B83C  500C               	movf	USBEnableEndpoint@ep,w,c
 35862  00B83E  0D01               	mullw	1
 35863  00B840  0E26               	movlw	38
 35864  00B842  24F3               	addwf	prodl,w,c
 35865  00B844  6E0A               	movwf	USBEnableEndpoint@p,c
 35866  00B846  0E0F               	movlw	15
 35867  00B848  20F4               	addwfc	prodh,w,c
 35868  00B84A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 35869                           
 35870                           ;usb_device.c: 901: *p = options;
 35871  00B84C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 35872  00B850  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 35873  00B854  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 35874  00B858  0012               	return		;funcret
 35875  00B85A                     __end_of_USBEnableEndpoint:
 35876                           	opt stack 0
 35877                           pclatu	equ	0xFFB
 35878                           pclath	equ	0xFFA
 35879                           tblptru	equ	0xFF8
 35880                           tblptrh	equ	0xFF7
 35881                           tblptrl	equ	0xFF6
 35882                           tablat	equ	0xFF5
 35883                           prodh	equ	0xFF4
 35884                           prodl	equ	0xFF3
 35885                           intcon	equ	0xFF2
 35886                           intcon2	equ	0xFF1
 35887                           intcon3	equ	0xFF0
 35888                           indf0	equ	0xFEF
 35889                           postinc0	equ	0xFEE
 35890                           plusw0	equ	0xFEB
 35891                           fsr0h	equ	0xFEA
 35892                           fsr0l	equ	0xFE9
 35893                           wreg	equ	0xFE8
 35894                           indf1	equ	0xFE7
 35895                           postinc1	equ	0xFE6
 35896                           postdec1	equ	0xFE5
 35897                           plusw1	equ	0xFE3
 35898                           fsr1h	equ	0xFE2
 35899                           fsr1l	equ	0xFE1
 35900                           bsr	equ	0xFE0
 35901                           indf2	equ	0xFDF
 35902                           postinc2	equ	0xFDE
 35903                           postdec2	equ	0xFDD
 35904                           plusw2	equ	0xFDB
 35905                           fsr2h	equ	0xFDA
 35906                           fsr2l	equ	0xFD9
 35907                           status	equ	0xFD8
 35908                           
 35909 ;; *************** function _USBConfigureEndpoint *****************
 35910 ;; Defined at:
 35911 ;;		line 1543 in file "src/usb/usb_device.c"
 35912 ;; Parameters:    Size  Location     Type
 35913 ;;  EPNum           1    wreg     unsigned char 
 35914 ;;  direction       1    0[COMRAM] unsigned char 
 35915 ;; Auto vars:     Size  Location     Type
 35916 ;;  EPNum           1    5[COMRAM] unsigned char 
 35917 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 35918 ;;		 -> BDT(32), 
 35919 ;; Return value:  Size  Location     Type
 35920 ;;		None               void
 35921 ;; Registers used:
 35922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35923 ;; Tracked objects:
 35924 ;;		On entry : 0/0
 35925 ;;		On exit  : 0/0
 35926 ;;		Unchanged: 0/0
 35927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35932 ;;Total ram usage:        8 bytes
 35933 ;; Hardware stack levels used:    1
 35934 ;; Hardware stack levels required when called:    6
 35935 ;; This function calls:
 35936 ;;		Nothing
 35937 ;; This function is called by:
 35938 ;;		_USBEnableEndpoint
 35939 ;; This function uses a non-reentrant model
 35940 ;;
 35941                           
 35942                           	psect	text109
 35943  00AD58                     __ptext109:
 35944                           	opt stack 0
 35945  00AD58                     _USBConfigureEndpoint:
 35946                           	opt stack 7
 35947                           
 35948                           ;incstack = 0
 35949                           ;USBConfigureEndpoint@EPNum stored from wreg
 35950  00AD58  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 35951                           
 35952                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 35953                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 35954  00AD5A  0E00               	movlw	0
 35955  00AD5C  6E07               	movwf	USBConfigureEndpoint@handle,c
 35956  00AD5E  0E0D               	movlw	13
 35957  00AD60  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 35958                           
 35959                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 35960  00AD62  5001               	movf	USBConfigureEndpoint@direction,w,c
 35961  00AD64  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 35962  00AD66  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 35963  00AD68  90D8               	bcf	status,0,c
 35964  00AD6A  3602               	rlcf	??_USBConfigureEndpoint,f,c
 35965  00AD6C  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 35966  00AD6E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 35967  00AD70  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 35968  00AD72  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 35969  00AD74  90D8               	bcf	status,0,c
 35970  00AD76  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35971  00AD78  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35972  00AD7A  90D8               	bcf	status,0,c
 35973  00AD7C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35974  00AD7E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35975  00AD80  5002               	movf	??_USBConfigureEndpoint,w,c
 35976  00AD82  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 35977  00AD84  5003               	movf	??_USBConfigureEndpoint+1,w,c
 35978  00AD86  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 35979  00AD88  90D8               	bcf	status,0,c
 35980  00AD8A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35981  00AD8C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35982  00AD8E  90D8               	bcf	status,0,c
 35983  00AD90  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35984  00AD92  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35985  00AD94  5004               	movf	??_USBConfigureEndpoint+2,w,c
 35986  00AD96  2607               	addwf	USBConfigureEndpoint@handle,f,c
 35987  00AD98  5005               	movf	??_USBConfigureEndpoint+3,w,c
 35988  00AD9A  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 35989                           
 35990                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 35991  00AD9C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 35992  00ADA0  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 35993  00ADA4  9EDF               	bcf	indf2,7,c
 35994                           
 35995                           ;usb_device.c: 1557: if(direction == 0)
 35996  00ADA6  5001               	movf	USBConfigureEndpoint@direction,w,c
 35997  00ADA8  A4D8               	btfss	status,2,c
 35998  00ADAA  D007               	goto	i1l10176
 35999                           
 36000                           ;usb_device.c: 1558: {
 36001                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 36002  00ADAC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 36003  00ADAE  0D02               	mullw	2
 36004  00ADB0  0E8F               	movlw	low _pBDTEntryOut
 36005  00ADB2  24F3               	addwf	prodl,w,c
 36006  00ADB4  6ED9               	movwf	fsr2l,c
 36007  00ADB6  0E00               	movlw	high _pBDTEntryOut
 36008  00ADB8  D006               	goto	L25
 36009  00ADBA                     i1l10176:
 36010                           
 36011                           ;usb_device.c: 1561: else
 36012                           ;usb_device.c: 1562: {
 36013                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 36014  00ADBA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 36015  00ADBC  0D02               	mullw	2
 36016  00ADBE  0E8B               	movlw	low _pBDTEntryIn
 36017  00ADC0  24F3               	addwf	prodl,w,c
 36018  00ADC2  6ED9               	movwf	fsr2l,c
 36019  00ADC4  0E00               	movlw	high _pBDTEntryIn
 36020  00ADC6                     L25:
 36021  00ADC6  20F4               	addwfc	prodh,w,c
 36022  00ADC8  6EDA               	movwf	fsr2h,c
 36023  00ADCA  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 36024  00ADCE  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 36025                           
 36026                           ;usb_device.c: 1564: }
 36027                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 36028  00ADD2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 36029  00ADD6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 36030  00ADDA  9CDF               	bcf	indf2,6,c
 36031                           
 36032                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 36033  00ADDC  EE20 F004          	lfsr	2,4
 36034  00ADE0  5007               	movf	USBConfigureEndpoint@handle,w,c
 36035  00ADE2  26D9               	addwf	fsr2l,f,c
 36036  00ADE4  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 36037  00ADE6  22DA               	addwfc	fsr2h,f,c
 36038  00ADE8  8CDF               	bsf	indf2,6,c
 36039  00ADEA  0012               	return		;funcret
 36040  00ADEC                     __end_of_USBConfigureEndpoint:
 36041                           	opt stack 0
 36042                           pclatu	equ	0xFFB
 36043                           pclath	equ	0xFFA
 36044                           tblptru	equ	0xFF8
 36045                           tblptrh	equ	0xFF7
 36046                           tblptrl	equ	0xFF6
 36047                           tablat	equ	0xFF5
 36048                           prodh	equ	0xFF4
 36049                           prodl	equ	0xFF3
 36050                           intcon	equ	0xFF2
 36051                           intcon2	equ	0xFF1
 36052                           intcon3	equ	0xFF0
 36053                           indf0	equ	0xFEF
 36054                           postinc0	equ	0xFEE
 36055                           plusw0	equ	0xFEB
 36056                           fsr0h	equ	0xFEA
 36057                           fsr0l	equ	0xFE9
 36058                           wreg	equ	0xFE8
 36059                           indf1	equ	0xFE7
 36060                           postinc1	equ	0xFE6
 36061                           postdec1	equ	0xFE5
 36062                           plusw1	equ	0xFE3
 36063                           fsr1h	equ	0xFE2
 36064                           fsr1l	equ	0xFE1
 36065                           bsr	equ	0xFE0
 36066                           indf2	equ	0xFDF
 36067                           postinc2	equ	0xFDE
 36068                           postdec2	equ	0xFDD
 36069                           plusw2	equ	0xFDB
 36070                           fsr2h	equ	0xFDA
 36071                           fsr2l	equ	0xFD9
 36072                           status	equ	0xFD8
 36073                           
 36074 ;; *************** function _USBCtrlTrfOutHandler *****************
 36075 ;; Defined at:
 36076 ;;		line 2541 in file "src/usb/usb_device.c"
 36077 ;; Parameters:    Size  Location     Type
 36078 ;;		None
 36079 ;; Auto vars:     Size  Location     Type
 36080 ;;		None
 36081 ;; Return value:  Size  Location     Type
 36082 ;;		None               void
 36083 ;; Registers used:
 36084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36085 ;; Tracked objects:
 36086 ;;		On entry : 0/0
 36087 ;;		On exit  : 0/0
 36088 ;;		Unchanged: 0/0
 36089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36094 ;;Total ram usage:        0 bytes
 36095 ;; Hardware stack levels used:    1
 36096 ;; Hardware stack levels required when called:    8
 36097 ;; This function calls:
 36098 ;;		_USBCtrlTrfRxService
 36099 ;; This function is called by:
 36100 ;;		_USBCtrlEPService
 36101 ;; This function uses a non-reentrant model
 36102 ;;
 36103                           
 36104                           	psect	text110
 36105  00B4AA                     __ptext110:
 36106                           	opt stack 0
 36107  00B4AA                     _USBCtrlTrfOutHandler:
 36108                           	opt stack 7
 36109                           
 36110                           ;usb_device.c: 2543: if(controlTransferState == 2)
 36111                           
 36112                           ;incstack = 0
 36113  00B4AA  0E02               	movlw	2
 36114  00B4AC  184F               	xorwf	_controlTransferState,w,c	;volatile
 36115  00B4AE  A4D8               	btfss	status,2,c
 36116  00B4B0  D003               	goto	i1l12636
 36117                           
 36118                           ;usb_device.c: 2544: {
 36119                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 36120  00B4B2  EC36  F047         	call	_USBCtrlTrfRxService	;wreg free
 36121                           
 36122                           ;usb_device.c: 2546: }
 36123  00B4B6  0012               	return	
 36124  00B4B8                     i1l12636:
 36125                           
 36126                           ;usb_device.c: 2547: else
 36127                           ;usb_device.c: 2548: {
 36128                           ;usb_device.c: 2551: controlTransferState = 0;
 36129  00B4B8  0E00               	movlw	0
 36130  00B4BA  6E4F               	movwf	_controlTransferState,c	;volatile
 36131                           
 36132                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 36133  00B4BC  5044               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 36134  00B4BE  A4D8               	btfss	status,2,c
 36135  00B4C0  D01F               	goto	i1l12644
 36136                           
 36137                           ;usb_device.c: 2559: {
 36138                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 36139  00B4C2  EE20 F001          	lfsr	2,1
 36140  00B4C6  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36141  00B4C8  26D9               	addwf	fsr2l,f,c
 36142  00B4CA  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36143  00B4CC  22DA               	addwfc	fsr2h,f,c
 36144  00B4CE  0E08               	movlw	8
 36145  00B4D0  6EDF               	movwf	indf2,c
 36146                           
 36147                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36148  00B4D2  EE20 F002          	lfsr	2,2
 36149  00B4D6  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36150  00B4D8  26D9               	addwf	fsr2l,f,c
 36151  00B4DA  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36152  00B4DC  22DA               	addwfc	fsr2h,f,c
 36153  00B4DE  0E20               	movlw	32
 36154  00B4E0  6EDE               	movwf	postinc2,c
 36155  00B4E2  0E0D               	movlw	13
 36156  00B4E4  6EDD               	movwf	postdec2,c
 36157                           
 36158                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36159  00B4E6  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36160  00B4EA  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36161  00B4EE  0E0C               	movlw	12
 36162  00B4F0  6EDF               	movwf	indf2,c
 36163                           
 36164                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36165  00B4F2  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36166  00B4F6  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36167  00B4FA  0E00               	movlw	0
 36168  00B4FC  8EDB               	bsf	plusw2,7,c
 36169                           
 36170                           ;usb_device.c: 2564: }
 36171  00B4FE  0012               	return	
 36172  00B500                     i1l12644:
 36173                           
 36174                           ;usb_device.c: 2565: else
 36175                           ;usb_device.c: 2566: {
 36176                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 36177  00B500  0E00               	movlw	0
 36178  00B502  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36179  00B504  0012               	return	
 36180  00B506                     __end_of_USBCtrlTrfOutHandler:
 36181                           	opt stack 0
 36182                           pclatu	equ	0xFFB
 36183                           pclath	equ	0xFFA
 36184                           tblptru	equ	0xFF8
 36185                           tblptrh	equ	0xFF7
 36186                           tblptrl	equ	0xFF6
 36187                           tablat	equ	0xFF5
 36188                           prodh	equ	0xFF4
 36189                           prodl	equ	0xFF3
 36190                           intcon	equ	0xFF2
 36191                           intcon2	equ	0xFF1
 36192                           intcon3	equ	0xFF0
 36193                           indf0	equ	0xFEF
 36194                           postinc0	equ	0xFEE
 36195                           plusw0	equ	0xFEB
 36196                           fsr0h	equ	0xFEA
 36197                           fsr0l	equ	0xFE9
 36198                           wreg	equ	0xFE8
 36199                           indf1	equ	0xFE7
 36200                           postinc1	equ	0xFE6
 36201                           postdec1	equ	0xFE5
 36202                           plusw1	equ	0xFE3
 36203                           fsr1h	equ	0xFE2
 36204                           fsr1l	equ	0xFE1
 36205                           bsr	equ	0xFE0
 36206                           indf2	equ	0xFDF
 36207                           postinc2	equ	0xFDE
 36208                           postdec2	equ	0xFDD
 36209                           plusw2	equ	0xFDB
 36210                           fsr2h	equ	0xFDA
 36211                           fsr2l	equ	0xFD9
 36212                           status	equ	0xFD8
 36213                           
 36214 ;; *************** function _USBCtrlTrfRxService *****************
 36215 ;; Defined at:
 36216 ;;		line 1852 in file "src/usb/usb_device.c"
 36217 ;; Parameters:    Size  Location     Type
 36218 ;;		None
 36219 ;; Auto vars:     Size  Location     Type
 36220 ;;  byteToRead      1    1[COMRAM] unsigned char 
 36221 ;;  i               1    0[COMRAM] unsigned char 
 36222 ;; Return value:  Size  Location     Type
 36223 ;;		None               void
 36224 ;; Registers used:
 36225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36226 ;; Tracked objects:
 36227 ;;		On entry : 0/0
 36228 ;;		On exit  : 0/0
 36229 ;;		Unchanged: 0/0
 36230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36235 ;;Total ram usage:        2 bytes
 36236 ;; Hardware stack levels used:    1
 36237 ;; Hardware stack levels required when called:    7
 36238 ;; This function calls:
 36239 ;;		_USBCtrlEPAllowStatusStage
 36240 ;; This function is called by:
 36241 ;;		_USBCtrlTrfOutHandler
 36242 ;; This function uses a non-reentrant model
 36243 ;;
 36244                           
 36245                           	psect	text111
 36246  008E6C                     __ptext111:
 36247                           	opt stack 0
 36248  008E6C                     _USBCtrlTrfRxService:
 36249                           	opt stack 7
 36250                           
 36251                           ;usb_device.c: 1854: uint8_t byteToRead;
 36252                           ;usb_device.c: 1855: uint8_t i;
 36253                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 36254                           
 36255                           ;incstack = 0
 36256  008E6C  EE20 F001          	lfsr	2,1
 36257  008E70  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36258  008E72  26D9               	addwf	fsr2l,f,c
 36259  008E74  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36260  008E76  22DA               	addwfc	fsr2h,f,c
 36261  008E78  50DF               	movf	indf2,w,c
 36262  008E7A  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 36263                           
 36264                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 36265  008E7C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36266  008E7E  0100               	movlb	0	; () banked
 36267  008E80  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 36268  008E82  0E00               	movlw	0
 36269  008E84  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 36270  008E86  A0D8               	btfss	status,0,c
 36271                           
 36272                           ; BSR set to: 0
 36273                           ;usb_device.c: 1866: {
 36274                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 36275  008E88  C064  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 36276                           
 36277                           ; BSR set to: 0
 36278                           ;usb_device.c: 1868: }
 36279                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 36280                           
 36281                           ; BSR set to: 0
 36282  008E8C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36283  008E8E  0100               	movlb	0	; () banked
 36284  008E90  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 36285  008E92  0E00               	movlw	0
 36286  008E94  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 36287                           
 36288                           ; BSR set to: 0
 36289                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 36290  008E96  0E00               	movlw	0
 36291  008E98  6E01               	movwf	USBCtrlTrfRxService@i,c
 36292  008E9A  D012               	goto	i1l11530
 36293  008E9C                     i1l11524:
 36294                           
 36295                           ; BSR set to: 0
 36296                           ;usb_device.c: 1875: {
 36297                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 36298  008E9C  5001               	movf	USBCtrlTrfRxService@i,w,c
 36299  008E9E  0D01               	mullw	1
 36300  008EA0  0E28               	movlw	40
 36301  008EA2  24F3               	addwf	prodl,w,c
 36302  008EA4  6ED9               	movwf	fsr2l,c
 36303  008EA6  0E0D               	movlw	13
 36304  008EA8  20F4               	addwfc	prodh,w,c
 36305  008EAA  6EDA               	movwf	fsr2h,c
 36306  008EAC  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 36307  008EB0  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 36308  008EB4  CFDF FFE7          	movff	indf2,indf1
 36309                           
 36310                           ; BSR set to: 0
 36311  008EB8  0100               	movlb	0	; () banked
 36312  008EBA  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 36313  008EBC  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 36314                           
 36315                           ; BSR set to: 0
 36316  008EBE  2A01               	incf	USBCtrlTrfRxService@i,f,c
 36317  008EC0                     i1l11530:
 36318                           
 36319                           ; BSR set to: 0
 36320  008EC0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36321  008EC2  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 36322  008EC4  A0D8               	btfss	status,0,c
 36323  008EC6  D7EA               	goto	i1l11524
 36324                           
 36325                           ; BSR set to: 0
 36326                           ;usb_device.c: 1877: }
 36327                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 36328                           
 36329                           ; BSR set to: 0
 36330  008EC8  0100               	movlb	0	; () banked
 36331  008ECA  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 36332  008ECC  0100               	movlb	0	; () banked
 36333  008ECE  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 36334  008ED0  B4D8               	btfsc	status,2,c
 36335  008ED2  D032               	goto	i1l11546
 36336                           
 36337                           ; BSR set to: 0
 36338                           ;usb_device.c: 1882: {
 36339                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 36340  008ED4  EE20 F001          	lfsr	2,1
 36341  008ED8  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36342  008EDA  26D9               	addwf	fsr2l,f,c
 36343  008EDC  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36344  008EDE  22DA               	addwfc	fsr2h,f,c
 36345  008EE0  0E08               	movlw	8
 36346  008EE2  6EDF               	movwf	indf2,c
 36347                           
 36348                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 36349  008EE4  EE20 F002          	lfsr	2,2
 36350  008EE8  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36351  008EEA  26D9               	addwf	fsr2l,f,c
 36352  008EEC  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36353  008EEE  22DA               	addwfc	fsr2h,f,c
 36354  008EF0  0E28               	movlw	40
 36355  008EF2  6EDE               	movwf	postinc2,c
 36356  008EF4  0E0D               	movlw	13
 36357  008EF6  6EDD               	movwf	postdec2,c
 36358                           
 36359                           ; BSR set to: 0
 36360                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 36361  008EF8  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36362  008EFC  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36363  008F00  BCDF               	btfsc	indf2,6,c
 36364  008F02  D00D               	goto	i1l11542
 36365                           
 36366                           ; BSR set to: 0
 36367                           ;usb_device.c: 1886: {
 36368                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 36369  008F04  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36370  008F08  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36371  008F0C  0E48               	movlw	72
 36372  008F0E  6EDF               	movwf	indf2,c
 36373                           
 36374                           ; BSR set to: 0
 36375                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36376  008F10  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36377  008F14  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36378  008F18  0E00               	movlw	0
 36379  008F1A  8EDB               	bsf	plusw2,7,c
 36380                           
 36381                           ;usb_device.c: 1889: }
 36382  008F1C  0012               	return	
 36383  008F1E                     i1l11542:
 36384                           
 36385                           ; BSR set to: 0
 36386                           ;usb_device.c: 1890: else
 36387                           ;usb_device.c: 1891: {
 36388                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 36389  008F1E  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36390  008F22  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36391  008F26  0E08               	movlw	8
 36392  008F28  6EDF               	movwf	indf2,c
 36393                           
 36394                           ; BSR set to: 0
 36395                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36396  008F2A  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36397  008F2E  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36398  008F32  0E00               	movlw	0
 36399  008F34  8EDB               	bsf	plusw2,7,c
 36400                           
 36401                           ; BSR set to: 0
 36402                           ;usb_device.c: 1894: }
 36403                           ;usb_device.c: 1895: }
 36404  008F36  0012               	return	
 36405  008F38                     i1l11546:
 36406                           
 36407                           ; BSR set to: 0
 36408                           ;usb_device.c: 1896: else
 36409                           ;usb_device.c: 1897: {
 36410                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 36411  008F38  EE20 F001          	lfsr	2,1
 36412  008F3C  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36413  008F3E  26D9               	addwf	fsr2l,f,c
 36414  008F40  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36415  008F42  22DA               	addwfc	fsr2h,f,c
 36416  008F44  0E08               	movlw	8
 36417  008F46  6EDF               	movwf	indf2,c
 36418                           
 36419                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36420  008F48  EE20 F002          	lfsr	2,2
 36421  008F4C  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36422  008F4E  26D9               	addwf	fsr2l,f,c
 36423  008F50  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36424  008F52  22DA               	addwfc	fsr2h,f,c
 36425  008F54  0E20               	movlw	32
 36426  008F56  6EDE               	movwf	postinc2,c
 36427  008F58  0E0D               	movlw	13
 36428  008F5A  6EDD               	movwf	postdec2,c
 36429                           
 36430                           ; BSR set to: 0
 36431                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 36432  008F5C  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36433  008F60  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36434  008F64  0E04               	movlw	4
 36435  008F66  6EDF               	movwf	indf2,c
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36439  008F68  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36440  008F6C  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36441  008F70  0E00               	movlw	0
 36442  008F72  8EDB               	bsf	plusw2,7,c
 36443                           
 36444                           ; BSR set to: 0
 36445                           ;usb_device.c: 1926: }
 36446                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 36447                           
 36448                           ; BSR set to: 0
 36449                           ;usb_device.c: 1915: {
 36450                           ;usb_device.c: 1921: outPipes[0].pFunc();
 36451  008F74  0100               	movlb	0	; () banked
 36452  008F76  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 36453                           
 36454                           ; BSR set to: 0
 36455                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 36456  008F78  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 36457  008F7A  A4D8               	btfss	status,2,c
 36458  008F7C  0012               	return	
 36459                           
 36460                           ; BSR set to: 0
 36461                           ;usb_device.c: 1942: {
 36462                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 36463  008F7E  ECDB  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 36464  008F82  0012               	return	
 36465  008F84                     __end_of_USBCtrlTrfRxService:
 36466                           	opt stack 0
 36467                           pclatu	equ	0xFFB
 36468                           pclath	equ	0xFFA
 36469                           tblptru	equ	0xFF8
 36470                           tblptrh	equ	0xFF7
 36471                           tblptrl	equ	0xFF6
 36472                           tablat	equ	0xFF5
 36473                           prodh	equ	0xFF4
 36474                           prodl	equ	0xFF3
 36475                           intcon	equ	0xFF2
 36476                           intcon2	equ	0xFF1
 36477                           intcon3	equ	0xFF0
 36478                           indf0	equ	0xFEF
 36479                           postinc0	equ	0xFEE
 36480                           plusw0	equ	0xFEB
 36481                           fsr0h	equ	0xFEA
 36482                           fsr0l	equ	0xFE9
 36483                           wreg	equ	0xFE8
 36484                           indf1	equ	0xFE7
 36485                           postinc1	equ	0xFE6
 36486                           postdec1	equ	0xFE5
 36487                           plusw1	equ	0xFE3
 36488                           fsr1h	equ	0xFE2
 36489                           fsr1l	equ	0xFE1
 36490                           bsr	equ	0xFE0
 36491                           indf2	equ	0xFDF
 36492                           postinc2	equ	0xFDE
 36493                           postdec2	equ	0xFDD
 36494                           plusw2	equ	0xFDB
 36495                           fsr2h	equ	0xFDA
 36496                           fsr2l	equ	0xFD9
 36497                           status	equ	0xFD8
 36498                           
 36499 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 36500 ;; Defined at:
 36501 ;;		line 1416 in file "src/usb/usb_device.c"
 36502 ;; Parameters:    Size  Location     Type
 36503 ;;		None
 36504 ;; Auto vars:     Size  Location     Type
 36505 ;;		None
 36506 ;; Return value:  Size  Location     Type
 36507 ;;		None               void
 36508 ;; Registers used:
 36509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36510 ;; Tracked objects:
 36511 ;;		On entry : 0/0
 36512 ;;		On exit  : 0/0
 36513 ;;		Unchanged: 0/0
 36514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36519 ;;Total ram usage:        0 bytes
 36520 ;; Hardware stack levels used:    1
 36521 ;; Hardware stack levels required when called:    6
 36522 ;; This function calls:
 36523 ;;		Nothing
 36524 ;; This function is called by:
 36525 ;;		_USBDeviceTasks
 36526 ;;		_USBCtrlEPServiceComplete
 36527 ;;		_USBCtrlTrfRxService
 36528 ;; This function uses a non-reentrant model
 36529 ;;
 36530                           
 36531                           	psect	text112
 36532  009FB6                     __ptext112:
 36533                           	opt stack 0
 36534  009FB6                     _USBCtrlEPAllowStatusStage:
 36535                           	opt stack 7
 36536                           
 36537                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 36538                           
 36539                           ;incstack = 0
 36540  009FB6  504C               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 36541  009FB8  A4D8               	btfss	status,2,c
 36542  009FBA  0012               	return	
 36543                           
 36544                           ;usb_device.c: 1424: {
 36545                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 36546  009FBC  0E01               	movlw	1
 36547  009FBE  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 36548                           
 36549                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 36550  009FC0  504D               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 36551  009FC2  A4D8               	btfss	status,2,c
 36552  009FC4  0012               	return	
 36553                           
 36554                           ;usb_device.c: 1427: {
 36555                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 36556  009FC6  0E01               	movlw	1
 36557  009FC8  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 36558                           
 36559                           ;usb_device.c: 1432: if(controlTransferState == 2)
 36560  009FCA  0E02               	movlw	2
 36561  009FCC  184F               	xorwf	_controlTransferState,w,c	;volatile
 36562  009FCE  A4D8               	btfss	status,2,c
 36563  009FD0  D016               	goto	i1l10972
 36564                           
 36565                           ;usb_device.c: 1433: {
 36566                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 36567  009FD2  0100               	movlb	0	; () banked
 36568  009FD4  EE20 F001          	lfsr	2,1
 36569  009FD8  518B               	movf	_pBDTEntryIn& (0+255),w,b
 36570  009FDA  26D9               	addwf	fsr2l,f,c
 36571  009FDC  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 36572  009FDE  22DA               	addwfc	fsr2h,f,c
 36573  009FE0  0E00               	movlw	0
 36574  009FE2  6EDF               	movwf	indf2,c
 36575                           
 36576                           ; BSR set to: 0
 36577                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36578  009FE4  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36579  009FE8  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36580  009FEC  0E48               	movlw	72
 36581  009FEE  6EDF               	movwf	indf2,c
 36582                           
 36583                           ; BSR set to: 0
 36584                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36585  009FF0  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36586  009FF4  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36587  009FF8  0E00               	movlw	0
 36588  009FFA  8EDB               	bsf	plusw2,7,c
 36589                           
 36590                           ;usb_device.c: 1437: }
 36591  009FFC  0012               	return	
 36592  009FFE                     i1l10972:
 36593                           
 36594                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 36595  009FFE  044F               	decf	_controlTransferState,w,c	;volatile
 36596  00A000  A4D8               	btfss	status,2,c
 36597  00A002  0012               	return	
 36598                           
 36599                           ;usb_device.c: 1439: {
 36600                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 36601  00A004  0E00               	movlw	0
 36602  00A006  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36603                           
 36604                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 36605  00A008  EE20 F001          	lfsr	2,1
 36606  00A00C  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36607  00A00E  26D9               	addwf	fsr2l,f,c
 36608  00A010  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36609  00A012  22DA               	addwfc	fsr2h,f,c
 36610  00A014  0E08               	movlw	8
 36611  00A016  6EDF               	movwf	indf2,c
 36612                           
 36613                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 36614  00A018  EE20 F002          	lfsr	2,2
 36615  00A01C  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36616  00A01E  26D9               	addwf	fsr2l,f,c
 36617  00A020  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36618  00A022  22DA               	addwfc	fsr2h,f,c
 36619  00A024  0E20               	movlw	32
 36620  00A026  6EDE               	movwf	postinc2,c
 36621  00A028  0E0D               	movlw	13
 36622  00A02A  6EDD               	movwf	postdec2,c
 36623                           
 36624                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 36625  00A02C  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36626  00A030  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36627  00A034  0E04               	movlw	4
 36628  00A036  6EDF               	movwf	indf2,c
 36629                           
 36630                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 36631  00A038  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36632  00A03C  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36633  00A040  0E00               	movlw	0
 36634  00A042  8EDB               	bsf	plusw2,7,c
 36635                           
 36636                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 36637  00A044  0E01               	movlw	1
 36638  00A046  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36639                           
 36640                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 36641  00A048  EE20 F001          	lfsr	2,1
 36642  00A04C  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36643  00A04E  26D9               	addwf	fsr2l,f,c
 36644  00A050  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36645  00A052  22DA               	addwfc	fsr2h,f,c
 36646  00A054  0E08               	movlw	8
 36647  00A056  6EDF               	movwf	indf2,c
 36648                           
 36649                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36650  00A058  EE20 F002          	lfsr	2,2
 36651  00A05C  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36652  00A05E  26D9               	addwf	fsr2l,f,c
 36653  00A060  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36654  00A062  22DA               	addwfc	fsr2h,f,c
 36655  00A064  0E20               	movlw	32
 36656  00A066  6EDE               	movwf	postinc2,c
 36657  00A068  0E0D               	movlw	13
 36658  00A06A  6EDD               	movwf	postdec2,c
 36659                           
 36660                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 36661  00A06C  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36662  00A070  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36663  00A074  0E80               	movlw	128
 36664  00A076  6EDF               	movwf	indf2,c
 36665  00A078  0012               	return	
 36666  00A07A                     __end_of_USBCtrlEPAllowStatusStage:
 36667                           	opt stack 0
 36668                           pclatu	equ	0xFFB
 36669                           pclath	equ	0xFFA
 36670                           tblptru	equ	0xFF8
 36671                           tblptrh	equ	0xFF7
 36672                           tblptrl	equ	0xFF6
 36673                           tablat	equ	0xFF5
 36674                           prodh	equ	0xFF4
 36675                           prodl	equ	0xFF3
 36676                           intcon	equ	0xFF2
 36677                           intcon2	equ	0xFF1
 36678                           intcon3	equ	0xFF0
 36679                           indf0	equ	0xFEF
 36680                           postinc0	equ	0xFEE
 36681                           plusw0	equ	0xFEB
 36682                           fsr0h	equ	0xFEA
 36683                           fsr0l	equ	0xFE9
 36684                           wreg	equ	0xFE8
 36685                           indf1	equ	0xFE7
 36686                           postinc1	equ	0xFE6
 36687                           postdec1	equ	0xFE5
 36688                           plusw1	equ	0xFE3
 36689                           fsr1h	equ	0xFE2
 36690                           fsr1l	equ	0xFE1
 36691                           bsr	equ	0xFE0
 36692                           indf2	equ	0xFDF
 36693                           postinc2	equ	0xFDE
 36694                           postdec2	equ	0xFDD
 36695                           plusw2	equ	0xFDB
 36696                           fsr2h	equ	0xFDA
 36697                           fsr2l	equ	0xFD9
 36698                           status	equ	0xFD8
 36699                           
 36700 ;; *************** function _USBCtrlTrfInHandler *****************
 36701 ;; Defined at:
 36702 ;;		line 2595 in file "src/usb/usb_device.c"
 36703 ;; Parameters:    Size  Location     Type
 36704 ;;		None
 36705 ;; Auto vars:     Size  Location     Type
 36706 ;;  lastDTS         1    1[COMRAM] unsigned char 
 36707 ;; Return value:  Size  Location     Type
 36708 ;;		None               void
 36709 ;; Registers used:
 36710 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36711 ;; Tracked objects:
 36712 ;;		On entry : 0/0
 36713 ;;		On exit  : 0/0
 36714 ;;		Unchanged: 0/0
 36715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36720 ;;Total ram usage:        1 bytes
 36721 ;; Hardware stack levels used:    1
 36722 ;; Hardware stack levels required when called:    7
 36723 ;; This function calls:
 36724 ;;		_USBCtrlTrfTxService
 36725 ;; This function is called by:
 36726 ;;		_USBCtrlEPService
 36727 ;; This function uses a non-reentrant model
 36728 ;;
 36729                           
 36730                           	psect	text113
 36731  00A07A                     __ptext113:
 36732                           	opt stack 0
 36733  00A07A                     _USBCtrlTrfInHandler:
 36734                           	opt stack 8
 36735                           
 36736                           ;usb_device.c: 2597: uint8_t lastDTS;
 36737                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 36738                           
 36739                           ;incstack = 0
 36740  00A07A  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36741  00A07E  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36742  00A082  0E00               	movlw	0
 36743  00A084  BCDF               	btfsc	indf2,6,c
 36744  00A086  0E01               	movlw	1
 36745  00A088  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 36746                           
 36747                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 36748  00A08A  0E04               	movlw	4
 36749  00A08C  0100               	movlb	0	; () banked
 36750  00A08E  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 36751                           
 36752                           ; BSR set to: 0
 36753                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 36754  00A090  0E08               	movlw	8
 36755  00A092  184B               	xorwf	_USBDeviceState,w,c	;volatile
 36756  00A094  A4D8               	btfss	status,2,c
 36757  00A096  D00D               	goto	i1l12660
 36758                           
 36759                           ; BSR set to: 0
 36760                           ;usb_device.c: 2608: {
 36761                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 36762  00A098  010D               	movlb	13	; () banked
 36763  00A09A  5122               	movf	34,w,b	;volatile
 36764  00A09C  0B7F               	andlw	127
 36765  00A09E  010F               	movlb	15	; () banked
 36766  00A0A0  6F38               	movwf	56,b	;volatile
 36767                           
 36768                           ; BSR set to: 15
 36769                           ;usb_device.c: 2610: if(UADDR != 0u)
 36770  00A0A2  010F               	movlb	15	; () banked
 36771  00A0A4  5138               	movf	56,w,b	;volatile
 36772  00A0A6  B4D8               	btfsc	status,2,c
 36773  00A0A8  D002               	goto	i1l12658
 36774                           
 36775                           ; BSR set to: 15
 36776                           ;usb_device.c: 2611: {
 36777                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 36778  00A0AA  0E10               	movlw	16
 36779  00A0AC  D001               	goto	L26
 36780  00A0AE                     i1l12658:
 36781                           
 36782                           ; BSR set to: 15
 36783                           ;usb_device.c: 2614: else
 36784                           ;usb_device.c: 2615: {
 36785                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 36786  00A0AE  0E04               	movlw	4
 36787  00A0B0                     L26:
 36788  00A0B0  6E4B               	movwf	_USBDeviceState,c	;volatile
 36789  00A0B2                     i1l12660:
 36790                           
 36791                           ;usb_device.c: 2617: }
 36792                           ;usb_device.c: 2618: }
 36793                           ;usb_device.c: 2621: if(controlTransferState == 1)
 36794  00A0B2  044F               	decf	_controlTransferState,w,c	;volatile
 36795  00A0B4  A4D8               	btfss	status,2,c
 36796  00A0B6  D03B               	goto	i1l1421
 36797                           
 36798                           ;usb_device.c: 2622: {
 36799                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 36800  00A0B8  0100               	movlb	0	; () banked
 36801  00A0BA  EE20 F002          	lfsr	2,2
 36802  00A0BE  518B               	movf	_pBDTEntryIn& (0+255),w,b
 36803  00A0C0  26D9               	addwf	fsr2l,f,c
 36804  00A0C2  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 36805  00A0C4  22DA               	addwfc	fsr2h,f,c
 36806  00A0C6  0E28               	movlw	40
 36807  00A0C8  6EDE               	movwf	postinc2,c
 36808  00A0CA  0E0D               	movlw	13
 36809  00A0CC  6EDD               	movwf	postdec2,c
 36810                           
 36811                           ; BSR set to: 0
 36812                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 36813  00A0CE  EC10  F04D         	call	_USBCtrlTrfTxService	;wreg free
 36814                           
 36815                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 36816  00A0D2  0E02               	movlw	2
 36817  00A0D4  1854               	xorwf	_shortPacketStatus,w,c	;volatile
 36818  00A0D6  A4D8               	btfss	status,2,c
 36819  00A0D8  D00D               	goto	i1l12672
 36820                           
 36821                           ;usb_device.c: 2631: {
 36822                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 36823  00A0DA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36824  00A0DE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36825  00A0E2  0E04               	movlw	4
 36826  00A0E4  6EDF               	movwf	indf2,c
 36827                           
 36828                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36829  00A0E6  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36830  00A0EA  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36831  00A0EE  0E00               	movlw	0
 36832  00A0F0  8EDB               	bsf	plusw2,7,c
 36833                           
 36834                           ;usb_device.c: 2636: }
 36835  00A0F2  0012               	return	
 36836  00A0F4                     i1l12672:
 36837                           
 36838                           ;usb_device.c: 2637: else
 36839                           ;usb_device.c: 2638: {
 36840                           ;usb_device.c: 2639: if(lastDTS == 0)
 36841  00A0F4  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 36842  00A0F6  A4D8               	btfss	status,2,c
 36843  00A0F8  D00D               	goto	i1l12678
 36844                           
 36845                           ;usb_device.c: 2640: {
 36846                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36847  00A0FA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36848  00A0FE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36849  00A102  0E48               	movlw	72
 36850  00A104  6EDF               	movwf	indf2,c
 36851                           
 36852                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36853  00A106  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36854  00A10A  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36855  00A10E  0E00               	movlw	0
 36856  00A110  8EDB               	bsf	plusw2,7,c
 36857                           
 36858                           ;usb_device.c: 2643: }
 36859  00A112  0012               	return	
 36860  00A114                     i1l12678:
 36861                           
 36862                           ;usb_device.c: 2644: else
 36863                           ;usb_device.c: 2645: {
 36864                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 36865  00A114  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36866  00A118  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36867  00A11C  0E08               	movlw	8
 36868  00A11E  6EDF               	movwf	indf2,c
 36869                           
 36870                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36871  00A120  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36872  00A124  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36873  00A128  0E00               	movlw	0
 36874  00A12A  8EDB               	bsf	plusw2,7,c
 36875                           
 36876                           ;usb_device.c: 2648: }
 36877                           ;usb_device.c: 2649: }
 36878                           ;usb_device.c: 2650: }
 36879  00A12C  0012               	return	
 36880  00A12E                     i1l1421:
 36881                           
 36882                           ;usb_device.c: 2651: else
 36883                           ;usb_device.c: 2652: {
 36884                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 36885  00A12E  0100               	movlb	0	; () banked
 36886  00A130  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 36887  00A132  D002               	goto	i1l12684
 36888                           
 36889                           ; BSR set to: 0
 36890                           ;usb_device.c: 2661: }
 36891                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 36892                           
 36893                           ; BSR set to: 0
 36894                           ;usb_device.c: 2659: {
 36895                           ;usb_device.c: 2660: outPipes[0].pFunc();
 36896  00A134  0100               	movlb	0	; () banked
 36897  00A136  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 36898  00A138                     i1l12684:
 36899                           
 36900                           ; BSR set to: 0
 36901                           ;usb_device.c: 2663: }
 36902                           ;usb_device.c: 2665: controlTransferState = 0;
 36903  00A138  0E00               	movlw	0
 36904  00A13A  6E4F               	movwf	_controlTransferState,c	;volatile
 36905  00A13C  0012               	return	
 36906  00A13E                     __end_of_USBCtrlTrfInHandler:
 36907                           	opt stack 0
 36908                           pclatu	equ	0xFFB
 36909                           pclath	equ	0xFFA
 36910                           tblptru	equ	0xFF8
 36911                           tblptrh	equ	0xFF7
 36912                           tblptrl	equ	0xFF6
 36913                           tablat	equ	0xFF5
 36914                           prodh	equ	0xFF4
 36915                           prodl	equ	0xFF3
 36916                           intcon	equ	0xFF2
 36917                           intcon2	equ	0xFF1
 36918                           intcon3	equ	0xFF0
 36919                           indf0	equ	0xFEF
 36920                           postinc0	equ	0xFEE
 36921                           plusw0	equ	0xFEB
 36922                           fsr0h	equ	0xFEA
 36923                           fsr0l	equ	0xFE9
 36924                           wreg	equ	0xFE8
 36925                           indf1	equ	0xFE7
 36926                           postinc1	equ	0xFE6
 36927                           postdec1	equ	0xFE5
 36928                           plusw1	equ	0xFE3
 36929                           fsr1h	equ	0xFE2
 36930                           fsr1l	equ	0xFE1
 36931                           bsr	equ	0xFE0
 36932                           indf2	equ	0xFDF
 36933                           postinc2	equ	0xFDE
 36934                           postdec2	equ	0xFDD
 36935                           plusw2	equ	0xFDB
 36936                           fsr2h	equ	0xFDA
 36937                           fsr2l	equ	0xFD9
 36938                           status	equ	0xFD8
 36939                           
 36940 ;; *************** function _USBCtrlTrfTxService *****************
 36941 ;; Defined at:
 36942 ;;		line 1771 in file "src/usb/usb_device.c"
 36943 ;; Parameters:    Size  Location     Type
 36944 ;;		None
 36945 ;; Auto vars:     Size  Location     Type
 36946 ;;  byteToSend      1    0[COMRAM] unsigned char 
 36947 ;; Return value:  Size  Location     Type
 36948 ;;		None               void
 36949 ;; Registers used:
 36950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36951 ;; Tracked objects:
 36952 ;;		On entry : 0/0
 36953 ;;		On exit  : 0/0
 36954 ;;		Unchanged: 0/0
 36955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36960 ;;Total ram usage:        1 bytes
 36961 ;; Hardware stack levels used:    1
 36962 ;; Hardware stack levels required when called:    6
 36963 ;; This function calls:
 36964 ;;		Nothing
 36965 ;; This function is called by:
 36966 ;;		_USBCtrlEPAllowDataStage
 36967 ;;		_USBCtrlTrfInHandler
 36968 ;; This function uses a non-reentrant model
 36969 ;;
 36970                           
 36971                           	psect	text114
 36972  009A20                     __ptext114:
 36973                           	opt stack 0
 36974  009A20                     _USBCtrlTrfTxService:
 36975                           	opt stack 6
 36976                           
 36977                           ;usb_device.c: 1773: uint8_t byteToSend;
 36978                           ;usb_device.c: 1777: byteToSend = 8;
 36979                           
 36980                           ;incstack = 0
 36981  009A20  0E08               	movlw	8
 36982  009A22  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 36983                           
 36984                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 36985  009A24  0100               	movlb	0	; () banked
 36986  009A26  5186               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 36987  009A28  E111               	bnz	i1l10548
 36988  009A2A  0E08               	movlw	8
 36989  009A2C  0100               	movlb	0	; () banked
 36990  009A2E  5D85               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 36991  009A30  B0D8               	btfsc	status,0,c
 36992  009A32  D00C               	goto	i1l10548
 36993                           
 36994                           ; BSR set to: 0
 36995                           ;usb_device.c: 1779: {
 36996                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 36997  009A34  C085  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 36998                           
 36999                           ; BSR set to: 0
 37000                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 37001  009A38  5054               	movf	_shortPacketStatus,w,c	;volatile
 37002  009A3A  A4D8               	btfss	status,2,c
 37003  009A3C  D002               	goto	i1l10544
 37004                           
 37005                           ; BSR set to: 0
 37006                           ;usb_device.c: 1788: {
 37007                           ;usb_device.c: 1789: shortPacketStatus = 1;
 37008  009A3E  0E01               	movlw	1
 37009  009A40  D004               	goto	L27
 37010  009A42                     i1l10544:
 37011                           
 37012                           ; BSR set to: 0
 37013                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 37014  009A42  0454               	decf	_shortPacketStatus,w,c	;volatile
 37015  009A44  A4D8               	btfss	status,2,c
 37016  009A46  D002               	goto	i1l10548
 37017                           
 37018                           ; BSR set to: 0
 37019                           ;usb_device.c: 1792: {
 37020                           ;usb_device.c: 1793: shortPacketStatus = 2;
 37021  009A48  0E02               	movlw	2
 37022  009A4A                     L27:
 37023  009A4A  6E54               	movwf	_shortPacketStatus,c	;volatile
 37024  009A4C                     i1l10548:
 37025                           
 37026                           ; BSR set to: 0
 37027                           ;usb_device.c: 1794: }
 37028                           ;usb_device.c: 1795: }
 37029                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 37030  009A4C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37031  009A4E  0100               	movlb	0	; () banked
 37032  009A50  5F85               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 37033  009A52  0E00               	movlw	0
 37034  009A54  5B86               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 37035                           
 37036                           ; BSR set to: 0
 37037                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 37038  009A56  0100               	movlb	0	; () banked
 37039  009A58  EE20 F001          	lfsr	2,1
 37040  009A5C  518B               	movf	_pBDTEntryIn& (0+255),w,b
 37041  009A5E  26D9               	addwf	fsr2l,f,c
 37042  009A60  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 37043  009A62  22DA               	addwfc	fsr2h,f,c
 37044  009A64  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 37045                           
 37046                           ; BSR set to: 0
 37047                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 37048  009A68  0E28               	movlw	40
 37049  009A6A  6E3C               	movwf	_pDst,c
 37050  009A6C  0E0D               	movlw	13
 37051  009A6E  6E3D               	movwf	_pDst+1,c
 37052                           
 37053                           ; BSR set to: 0
 37054                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 37055  009A70  0100               	movlb	0	; () banked
 37056  009A72  A184               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 37057  009A74  D01D               	goto	i1l10566
 37058  009A76  D03C               	goto	i1l10576
 37059  009A78                     i1l10558:
 37060                           
 37061                           ; BSR set to: 0
 37062                           ;usb_device.c: 1812: {
 37063                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 37064  009A78  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 37065  009A7C  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37066  009A80  0E00               	movlw	low (__mediumconst shr (0+16))
 37067  009A82  6EF8               	movwf	tblptru,c
 37068  009A84  C03C  FFD9         	movff	_pDst,fsr2l
 37069  009A88  C03D  FFDA         	movff	_pDst+1,fsr2h
 37070  009A8C  0E0E               	movlw	(high __ramtop+-1)
 37071  009A8E  64F7               	cpfsgt	tblptrh,c
 37072  009A90  D003               	bra	i1u993_27
 37073  009A92  0008               	tblrd		*
 37074  009A94  50F5               	movf	tablat,w,c
 37075  009A96  D005               	bra	i1u993_20
 37076  009A98                     i1u993_27:
 37077  009A98  CFF6 FFE9          	movff	tblptrl,fsr0l
 37078  009A9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 37079  009AA0  50EF               	movf	indf0,w,c
 37080  009AA2                     i1u993_20:
 37081  009AA2  6EDF               	movwf	indf2,c
 37082  009AA4  0100               	movlb	0	; () banked
 37083  009AA6  4B81               	infsnz	_inPipes& (0+255),f,b	;volatile
 37084  009AA8  2B82               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 37085                           
 37086                           ; BSR set to: 0
 37087  009AAA  4A3C               	infsnz	_pDst,f,c
 37088  009AAC  2A3D               	incf	_pDst+1,f,c
 37089                           
 37090                           ; BSR set to: 0
 37091                           ;usb_device.c: 1814: byteToSend--;
 37092  009AAE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 37093  009AB0                     i1l10566:
 37094                           
 37095                           ; BSR set to: 0
 37096  009AB0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37097  009AB2  B4D8               	btfsc	status,2,c
 37098  009AB4  0012               	return	
 37099  009AB6  D7E0               	goto	i1l10558
 37100  009AB8                     i1l10568:
 37101                           
 37102                           ; BSR set to: 0
 37103                           ;usb_device.c: 1820: {
 37104                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 37105  009AB8  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 37106  009ABC  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37107  009AC0  0E00               	movlw	low (__mediumconst shr (0+16))
 37108  009AC2  6EF8               	movwf	tblptru,c
 37109  009AC4  C03C  FFD9         	movff	_pDst,fsr2l
 37110  009AC8  C03D  FFDA         	movff	_pDst+1,fsr2h
 37111  009ACC  0E0E               	movlw	(high __ramtop+-1)
 37112  009ACE  64F7               	cpfsgt	tblptrh,c
 37113  009AD0  D003               	bra	i1u995_27
 37114  009AD2  0008               	tblrd		*
 37115  009AD4  50F5               	movf	tablat,w,c
 37116  009AD6  D005               	bra	i1u995_20
 37117  009AD8                     i1u995_27:
 37118  009AD8  CFF6 FFE9          	movff	tblptrl,fsr0l
 37119  009ADC  CFF7 FFEA          	movff	tblptrh,fsr0h
 37120  009AE0  50EF               	movf	indf0,w,c
 37121  009AE2                     i1u995_20:
 37122  009AE2  6EDF               	movwf	indf2,c
 37123  009AE4  0100               	movlb	0	; () banked
 37124  009AE6  4B81               	infsnz	_inPipes& (0+255),f,b	;volatile
 37125  009AE8  2B82               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 37126                           
 37127                           ; BSR set to: 0
 37128  009AEA  4A3C               	infsnz	_pDst,f,c
 37129  009AEC  2A3D               	incf	_pDst+1,f,c
 37130                           
 37131                           ; BSR set to: 0
 37132                           ;usb_device.c: 1822: byteToSend--;
 37133  009AEE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 37134  009AF0                     i1l10576:
 37135                           
 37136                           ; BSR set to: 0
 37137  009AF0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37138  009AF2  B4D8               	btfsc	status,2,c
 37139  009AF4  0012               	return	
 37140  009AF6  D7E0               	goto	i1l10568
 37141  009AF8                     __end_of_USBCtrlTrfTxService:
 37142                           	opt stack 0
 37143                           pclatu	equ	0xFFB
 37144                           pclath	equ	0xFFA
 37145                           tblptru	equ	0xFF8
 37146                           tblptrh	equ	0xFF7
 37147                           tblptrl	equ	0xFF6
 37148                           tablat	equ	0xFF5
 37149                           prodh	equ	0xFF4
 37150                           prodl	equ	0xFF3
 37151                           intcon	equ	0xFF2
 37152                           intcon2	equ	0xFF1
 37153                           intcon3	equ	0xFF0
 37154                           indf0	equ	0xFEF
 37155                           postinc0	equ	0xFEE
 37156                           plusw0	equ	0xFEB
 37157                           fsr0h	equ	0xFEA
 37158                           fsr0l	equ	0xFE9
 37159                           wreg	equ	0xFE8
 37160                           indf1	equ	0xFE7
 37161                           postinc1	equ	0xFE6
 37162                           postdec1	equ	0xFE5
 37163                           plusw1	equ	0xFE3
 37164                           fsr1h	equ	0xFE2
 37165                           fsr1l	equ	0xFE1
 37166                           bsr	equ	0xFE0
 37167                           indf2	equ	0xFDF
 37168                           postinc2	equ	0xFDE
 37169                           postdec2	equ	0xFDD
 37170                           plusw2	equ	0xFDB
 37171                           fsr2h	equ	0xFDA
 37172                           fsr2l	equ	0xFD9
 37173                           status	equ	0xFD8
 37174                           
 37175 ;; *************** function _SYS_InterruptHigh *****************
 37176 ;; Defined at:
 37177 ;;		line 776 in file "src/main.c"
 37178 ;; Parameters:    Size  Location     Type
 37179 ;;		None
 37180 ;; Auto vars:     Size  Location     Type
 37181 ;;		None
 37182 ;; Return value:  Size  Location     Type
 37183 ;;		None               void
 37184 ;; Registers used:
 37185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37186 ;; Tracked objects:
 37187 ;;		On entry : 0/0
 37188 ;;		On exit  : 0/0
 37189 ;;		Unchanged: 0/0
 37190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37193 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37194 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37195 ;;Total ram usage:       14 bytes
 37196 ;; Hardware stack levels used:    1
 37197 ;; Hardware stack levels required when called:    5
 37198 ;; This function calls:
 37199 ;;		_MIWIInterruptHandler
 37200 ;; This function is called by:
 37201 ;;		Interrupt level 2
 37202 ;; This function uses a non-reentrant model
 37203 ;;
 37204                           
 37205                           	psect	intcode
 37206  000008                     __pintcode:
 37207                           	opt stack 0
 37208  000008                     _SYS_InterruptHigh:
 37209                           	opt stack 3
 37210                           
 37211                           ; BSR set to: 0
 37212                           ;incstack = 0
 37213  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37214  00000A  CFFA F0D8          	movff	pclath,??_SYS_InterruptHigh
 37215  00000E  CFFB F0D9          	movff	pclatu,??_SYS_InterruptHigh+1
 37216  000012  EF2B  F059         	goto	int_func
 37217                           pclatu	equ	0xFFB
 37218                           pclath	equ	0xFFA
 37219                           tblptru	equ	0xFF8
 37220                           tblptrh	equ	0xFF7
 37221                           tblptrl	equ	0xFF6
 37222                           tablat	equ	0xFF5
 37223                           prodh	equ	0xFF4
 37224                           prodl	equ	0xFF3
 37225                           intcon	equ	0xFF2
 37226                           intcon2	equ	0xFF1
 37227                           intcon3	equ	0xFF0
 37228                           indf0	equ	0xFEF
 37229                           postinc0	equ	0xFEE
 37230                           plusw0	equ	0xFEB
 37231                           fsr0h	equ	0xFEA
 37232                           fsr0l	equ	0xFE9
 37233                           wreg	equ	0xFE8
 37234                           indf1	equ	0xFE7
 37235                           postinc1	equ	0xFE6
 37236                           postdec1	equ	0xFE5
 37237                           plusw1	equ	0xFE3
 37238                           fsr1h	equ	0xFE2
 37239                           fsr1l	equ	0xFE1
 37240                           bsr	equ	0xFE0
 37241                           indf2	equ	0xFDF
 37242                           postinc2	equ	0xFDE
 37243                           postdec2	equ	0xFDD
 37244                           plusw2	equ	0xFDB
 37245                           fsr2h	equ	0xFDA
 37246                           fsr2l	equ	0xFD9
 37247                           status	equ	0xFD8
 37248                           
 37249                           	psect	intcode_body
 37250  00B256                     __pintcode_body:
 37251                           	opt stack 3
 37252  00B256                     int_func:
 37253                           	opt stack 3
 37254  00B256  CFE9 F0DA          	movff	fsr0l,??_SYS_InterruptHigh+2
 37255  00B25A  CFEA F0DB          	movff	fsr0h,??_SYS_InterruptHigh+3
 37256  00B25E  CFE1 F0DC          	movff	fsr1l,??_SYS_InterruptHigh+4
 37257  00B262  CFE2 F0DD          	movff	fsr1h,??_SYS_InterruptHigh+5
 37258  00B266  CFD9 F0DE          	movff	fsr2l,??_SYS_InterruptHigh+6
 37259  00B26A  CFDA F0DF          	movff	fsr2h,??_SYS_InterruptHigh+7
 37260  00B26E  CFF3 F0E0          	movff	prodl,??_SYS_InterruptHigh+8
 37261  00B272  CFF4 F0E1          	movff	prodh,??_SYS_InterruptHigh+9
 37262  00B276  CFF6 F0E2          	movff	tblptrl,??_SYS_InterruptHigh+10
 37263  00B27A  CFF7 F0E3          	movff	tblptrh,??_SYS_InterruptHigh+11
 37264  00B27E  CFF8 F0E4          	movff	tblptru,??_SYS_InterruptHigh+12
 37265  00B282  CFF5 F0E5          	movff	tablat,??_SYS_InterruptHigh+13
 37266                           
 37267                           ;main.c: 778: MIWIInterruptHandler();
 37268  00B286  EC34  F027         	call	_MIWIInterruptHandler	;wreg free
 37269  00B28A  C0E5  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 37270  00B28E  C0E4  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 37271  00B292  C0E3  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 37272  00B296  C0E2  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 37273  00B29A  C0E1  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 37274  00B29E  C0E0  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 37275  00B2A2  C0DF  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 37276  00B2A6  C0DE  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 37277  00B2AA  C0DD  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 37278  00B2AE  C0DC  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 37279  00B2B2  C0DB  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 37280  00B2B6  C0DA  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 37281  00B2BA  C0D9  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 37282  00B2BE  C0D8  FFFA         	movff	??_SYS_InterruptHigh,pclath
 37283  00B2C2  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 37284  00B2C4  0011               	retfie		f
 37285  00B2C6                     __end_of_SYS_InterruptHigh:
 37286                           	opt stack 0
 37287                           pclatu	equ	0xFFB
 37288                           pclath	equ	0xFFA
 37289                           tblptru	equ	0xFF8
 37290                           tblptrh	equ	0xFF7
 37291                           tblptrl	equ	0xFF6
 37292                           tablat	equ	0xFF5
 37293                           prodh	equ	0xFF4
 37294                           prodl	equ	0xFF3
 37295                           intcon	equ	0xFF2
 37296                           intcon2	equ	0xFF1
 37297                           intcon3	equ	0xFF0
 37298                           indf0	equ	0xFEF
 37299                           postinc0	equ	0xFEE
 37300                           plusw0	equ	0xFEB
 37301                           fsr0h	equ	0xFEA
 37302                           fsr0l	equ	0xFE9
 37303                           wreg	equ	0xFE8
 37304                           indf1	equ	0xFE7
 37305                           postinc1	equ	0xFE6
 37306                           postdec1	equ	0xFE5
 37307                           plusw1	equ	0xFE3
 37308                           fsr1h	equ	0xFE2
 37309                           fsr1l	equ	0xFE1
 37310                           bsr	equ	0xFE0
 37311                           indf2	equ	0xFDF
 37312                           postinc2	equ	0xFDE
 37313                           postdec2	equ	0xFDD
 37314                           plusw2	equ	0xFDB
 37315                           fsr2h	equ	0xFDA
 37316                           fsr2l	equ	0xFD9
 37317                           status	equ	0xFD8
 37318                           
 37319 ;; *************** function _MIWIInterruptHandler *****************
 37320 ;; Defined at:
 37321 ;;		line 1248 in file "src/miwi/drv_mrf_miwi_89xa.c"
 37322 ;; Parameters:    Size  Location     Type
 37323 ;;		None
 37324 ;; Auto vars:     Size  Location     Type
 37325 ;;  ackInfoIndex    1   49[BANK0 ] unsigned char 
 37326 ;;  i               1   52[BANK0 ] unsigned char 
 37327 ;;  fifo_stat       1   42[BANK0 ] unsigned char 
 37328 ;;  ackPacket       4   43[BANK0 ] unsigned char [4]
 37329 ;;  counter         2   40[BANK0 ] unsigned int 
 37330 ;;  BankIndex       1   51[BANK0 ] unsigned char 
 37331 ;;  PacketLen       1   50[BANK0 ] unsigned char 
 37332 ;;  RxPacketPtr     1   48[BANK0 ] unsigned char 
 37333 ;;  bAck            1   47[BANK0 ] unsigned char 
 37334 ;; Return value:  Size  Location     Type
 37335 ;;		None               void
 37336 ;; Registers used:
 37337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37338 ;; Tracked objects:
 37339 ;;		On entry : 0/0
 37340 ;;		On exit  : 0/0
 37341 ;;		Unchanged: 0/0
 37342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37344 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37345 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37346 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37347 ;;Total ram usage:       19 bytes
 37348 ;; Hardware stack levels used:    1
 37349 ;; Hardware stack levels required when called:    4
 37350 ;; This function calls:
 37351 ;;		i2_MiWi_TickGet
 37352 ;;		i2_RegisterRead
 37353 ;;		i2_SPIGet
 37354 ;;		i2_TxPacket
 37355 ;;		i2_update_LED
 37356 ;; This function is called by:
 37357 ;;		_SYS_InterruptHigh
 37358 ;; This function uses a non-reentrant model
 37359 ;;
 37360                           
 37361                           	psect	text116
 37362  004E68                     __ptext116:
 37363                           	opt stack 0
 37364  004E68                     _MIWIInterruptHandler:
 37365                           	opt stack 3
 37366                           
 37367                           ;drv_mrf_miwi_89xa.c: 1250: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 37368                           
 37369                           ;incstack = 0
 37370  004E68  B0F0               	btfsc	intcon3,0,c	;volatile
 37371  004E6A  A6F0               	btfss	intcon3,3,c	;volatile
 37372  004E6C  D280               	goto	i2l19918
 37373                           
 37374                           ;drv_mrf_miwi_89xa.c: 1251: {
 37375                           ;drv_mrf_miwi_89xa.c: 1252: INTCON3bits.INT1IF = 0;
 37376  004E6E  90F0               	bcf	intcon3,0,c	;volatile
 37377                           
 37378                           ;drv_mrf_miwi_89xa.c: 1258: if(RF_Mode == 0x60)
 37379  004E70  0E60               	movlw	96
 37380  004E72  0100               	movlb	0	; () banked
 37381  004E74  199B               	xorwf	_RF_Mode& (0+255),w,b
 37382  004E76  A4D8               	btfss	status,2,c
 37383  004E78  D275               	goto	i2l19912
 37384                           
 37385                           ; BSR set to: 0
 37386                           ;drv_mrf_miwi_89xa.c: 1259: {
 37387                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t RxPacketPtr;
 37388                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t PacketLen;
 37389                           ;drv_mrf_miwi_89xa.c: 1262: uint8_t BankIndex;
 37390                           ;drv_mrf_miwi_89xa.c: 1263: uint16_t counter;
 37391                           ;drv_mrf_miwi_89xa.c: 1264: bool bAck;
 37392                           ;drv_mrf_miwi_89xa.c: 1265: uint8_t ackPacket[4];
 37393                           ;drv_mrf_miwi_89xa.c: 1271: RSSILock = RSSIVal;
 37394  004E7A  C09C  F1C4         	movff	_RSSIVal,_RSSILock
 37395                           
 37396                           ;drv_mrf_miwi_89xa.c: 1273: LATCbits.LATC6 = 0;
 37397  004E7E  9C8B               	bcf	3979,6,c	;volatile
 37398                           
 37399                           ; BSR set to: 0
 37400                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPIGet();
 37401  004E80  ECCE  F05D         	call	i2_SPIGet	;wreg free
 37402  004E84  0100               	movlb	0	; () banked
 37403  004E86  6FD5               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 37404                           
 37405                           ; BSR set to: 0
 37406                           ;drv_mrf_miwi_89xa.c: 1275: LATCbits.LATC6 = 1;
 37407  004E88  8C8B               	bsf	3979,6,c	;volatile
 37408                           
 37409                           ; BSR set to: 0
 37410                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 37411  004E8A  0E00               	movlw	0
 37412  004E8C  0100               	movlb	0	; () banked
 37413  004E8E  6FD6               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 37414  004E90                     i2l19752:
 37415                           
 37416                           ; BSR set to: 0
 37417  004E90  0E01               	movlw	1
 37418  004E92  0100               	movlb	0	; () banked
 37419  004E94  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37420  004E96  D001               	goto	i2l19756
 37421  004E98  D00F               	goto	i2l19764
 37422  004E9A                     i2l19756:
 37423                           
 37424                           ; BSR set to: 0
 37425                           ;drv_mrf_miwi_89xa.c: 1279: {
 37426                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 37427  004E9A  0100               	movlb	0	; () banked
 37428  004E9C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37429  004E9E  0D42               	mullw	66
 37430  004EA0  0E00               	movlw	low _RxPacket
 37431  004EA2  24F3               	addwf	prodl,w,c
 37432  004EA4  6ED9               	movwf	fsr2l,c
 37433  004EA6  0E03               	movlw	high _RxPacket
 37434  004EA8  20F4               	addwfc	prodh,w,c
 37435  004EAA  6EDA               	movwf	fsr2h,c
 37436  004EAC  0103               	movlb	3	; () banked
 37437  004EAE  A0DF               	btfss	indf2,0,c
 37438  004EB0  D003               	goto	i2l19764
 37439                           
 37440                           ; BSR set to: 3
 37441                           
 37442                           ; BSR set to: 3
 37443                           
 37444                           ; BSR set to: 3
 37445                           ;drv_mrf_miwi_89xa.c: 1281: {
 37446                           ;drv_mrf_miwi_89xa.c: 1282: break;
 37447  004EB2  0100               	movlb	0	; () banked
 37448  004EB4  2BD6               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 37449  004EB6  D7EC               	goto	i2l19752
 37450  004EB8                     i2l19764:
 37451                           
 37452                           ;drv_mrf_miwi_89xa.c: 1283: }
 37453                           ;drv_mrf_miwi_89xa.c: 1284: }
 37454                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 37455  004EB8  0E02               	movlw	2
 37456  004EBA  0100               	movlb	0	; () banked
 37457  004EBC  19D5               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37458  004EBE  A4D8               	btfss	status,2,c
 37459  004EC0  D002               	goto	i2l19768
 37460                           
 37461                           ; BSR set to: 0
 37462                           ;drv_mrf_miwi_89xa.c: 1288: {
 37463                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 37464  004EC2  0E01               	movlw	1
 37465  004EC4  D001               	goto	L28
 37466  004EC6                     i2l19768:
 37467                           
 37468                           ; BSR set to: 0
 37469                           ;drv_mrf_miwi_89xa.c: 1291: else
 37470                           ;drv_mrf_miwi_89xa.c: 1292: {
 37471                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 37472  004EC6  0E00               	movlw	0
 37473  004EC8                     L28:
 37474  004EC8  0100               	movlb	0	; () banked
 37475  004ECA  6FD2               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 37476                           
 37477                           ; BSR set to: 0
 37478                           ;drv_mrf_miwi_89xa.c: 1294: }
 37479                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 37480                           
 37481                           ; BSR set to: 0
 37482  004ECC  0E40               	movlw	64
 37483  004ECE  0100               	movlb	0	; () banked
 37484  004ED0  61D5               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 37485  004ED2  D00E               	goto	i2l19778
 37486                           
 37487                           ; BSR set to: 0
 37488  004ED4  0100               	movlb	0	; () banked
 37489  004ED6  51D5               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37490  004ED8  0100               	movlb	0	; () banked
 37491  004EDA  B4D8               	btfsc	status,2,c
 37492  004EDC  D009               	goto	i2l19778
 37493                           
 37494                           ; BSR set to: 0
 37495  004EDE  0E01               	movlw	1
 37496  004EE0  0100               	movlb	0	; () banked
 37497  004EE2  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37498  004EE4  D016               	goto	i2l19788
 37499                           
 37500                           ; BSR set to: 0
 37501  004EE6  0100               	movlb	0	; () banked
 37502  004EE8  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37503  004EEA  0100               	movlb	0	; () banked
 37504  004EEC  A4D8               	btfss	status,2,c
 37505  004EEE  D011               	goto	i2l19788
 37506  004EF0                     i2l19778:
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;drv_mrf_miwi_89xa.c: 1300: {
 37510                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 37511  004EF0  0E1A               	movlw	26
 37512  004EF2  ECAF  F05A         	call	i2_RegisterRead
 37513  004EF6  D007               	goto	L29
 37514  004EF8                     i2l410:
 37515                           
 37516                           ; BSR set to: 0
 37517                           ;drv_mrf_miwi_89xa.c: 1303: {
 37518                           ;drv_mrf_miwi_89xa.c: 1304: LATCbits.LATC6 = 0;
 37519  004EF8  9C8B               	bcf	3979,6,c	;volatile
 37520                           
 37521                           ; BSR set to: 0
 37522                           ;drv_mrf_miwi_89xa.c: 1305: SPIGet();
 37523  004EFA  ECCE  F05D         	call	i2_SPIGet	;wreg free
 37524                           
 37525                           ;drv_mrf_miwi_89xa.c: 1306: LATCbits.LATC6 = 1;
 37526  004EFE  8C8B               	bsf	3979,6,c	;volatile
 37527                           
 37528                           ;drv_mrf_miwi_89xa.c: 1307: fifo_stat = RegisterRead(0x1A00>>8);
 37529  004F00  0E1A               	movlw	26
 37530  004F02  ECAF  F05A         	call	i2_RegisterRead
 37531  004F06                     L29:
 37532  004F06  0100               	movlb	0	; () banked
 37533  004F08  6FCD               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 37534                           
 37535                           ; BSR set to: 0
 37536                           
 37537                           ; BSR set to: 0
 37538  004F0A  0100               	movlb	0	; () banked
 37539  004F0C  A3CD               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 37540  004F0E  D22D               	goto	i2l19914
 37541  004F10  D7F3               	goto	i2l410
 37542  004F12                     i2l19788:
 37543                           
 37544                           ; BSR set to: 0
 37545                           ;drv_mrf_miwi_89xa.c: 1311: }
 37546                           ;drv_mrf_miwi_89xa.c: 1313: RxPacketPtr = 0;
 37547  004F12  0E00               	movlw	0
 37548  004F14  0100               	movlb	0	; () banked
 37549  004F16  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37550                           
 37551                           ; BSR set to: 0
 37552                           ;drv_mrf_miwi_89xa.c: 1314: counter = PacketLen;
 37553  004F18  C0D5  F0CB         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 37554  004F1C  0100               	movlb	0	; () banked
 37555  004F1E  6BCC               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 37556                           
 37557                           ;drv_mrf_miwi_89xa.c: 1316: while(counter >= 1)
 37558  004F20  D21A               	goto	i2l19910
 37559  004F22                     i2l19792:
 37560                           
 37561                           ; BSR set to: 0
 37562                           ;drv_mrf_miwi_89xa.c: 1319: if(1)
 37563  004F22  0100               	movlb	0	; () banked
 37564  004F24  07CB               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 37565  004F26  A0D8               	btfss	status,0,c
 37566  004F28  07CC               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 37567                           
 37568                           ; BSR set to: 0
 37569                           ;drv_mrf_miwi_89xa.c: 1320: {
 37570                           ;drv_mrf_miwi_89xa.c: 1322: if( bAck )
 37571  004F2A  0100               	movlb	0	; () banked
 37572  004F2C  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37573  004F2E  0100               	movlb	0	; () banked
 37574  004F30  B4D8               	btfsc	status,2,c
 37575  004F32  D010               	goto	i2l416
 37576                           
 37577                           ; BSR set to: 0
 37578                           ;drv_mrf_miwi_89xa.c: 1323: {
 37579                           ;drv_mrf_miwi_89xa.c: 1324: LATCbits.LATC6 = 0;
 37580  004F34  9C8B               	bcf	3979,6,c	;volatile
 37581                           
 37582                           ; BSR set to: 0
 37583                           ;drv_mrf_miwi_89xa.c: 1325: ackPacket[RxPacketPtr++] = SPIGet();
 37584  004F36  0100               	movlb	0	; () banked
 37585  004F38  51D3               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37586  004F3A  0D01               	mullw	1
 37587  004F3C  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 37588  004F3E  24F3               	addwf	prodl,w,c
 37589  004F40  6ED9               	movwf	fsr2l,c
 37590  004F42  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 37591  004F44  20F4               	addwfc	prodh,w,c
 37592  004F46  6EDA               	movwf	fsr2h,c
 37593  004F48  ECCE  F05D         	call	i2_SPIGet	;wreg free
 37594  004F4C  D024               	goto	L30
 37595  004F4E                     i2l19800:
 37596  004F4E  0100               	movlb	0	; () banked
 37597  004F50  2BD3               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 37598  004F52  D023               	goto	i2l19808
 37599  004F54                     i2l416:
 37600                           
 37601                           ; BSR set to: 0
 37602                           ;drv_mrf_miwi_89xa.c: 1329: else
 37603                           ;drv_mrf_miwi_89xa.c: 1330: {
 37604                           ;drv_mrf_miwi_89xa.c: 1331: LATCbits.LATC6 = 0;
 37605  004F54  9C8B               	bcf	3979,6,c	;volatile
 37606                           
 37607                           ; BSR set to: 0
 37608                           ;drv_mrf_miwi_89xa.c: 1332: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 37609  004F56  0100               	movlb	0	; () banked
 37610  004F58  51D3               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37611  004F5A  0D01               	mullw	1
 37612  004F5C  0E01               	movlw	1
 37613  004F5E  26F3               	addwf	prodl,f,c
 37614  004F60  0E00               	movlw	0
 37615  004F62  22F4               	addwfc	prodh,f,c
 37616  004F64  0E00               	movlw	low _RxPacket
 37617  004F66  0100               	movlb	0	; () banked
 37618  004F68  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 37619  004F6A  0E03               	movlw	high _RxPacket
 37620  004F6C  0100               	movlb	0	; () banked
 37621  004F6E  6FC6               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 37622  004F70  50F3               	movf	prodl,w,c
 37623  004F72  0100               	movlb	0	; () banked
 37624  004F74  27C5               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 37625  004F76  50F4               	movf	prodh,w,c
 37626  004F78  0100               	movlb	0	; () banked
 37627  004F7A  23C6               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 37628  004F7C  0100               	movlb	0	; () banked
 37629  004F7E  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37630  004F80  0D42               	mullw	66
 37631  004F82  50F3               	movf	prodl,w,c
 37632  004F84  0100               	movlb	0	; () banked
 37633  004F86  25C5               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 37634  004F88  6ED9               	movwf	fsr2l,c
 37635  004F8A  50F4               	movf	prodh,w,c
 37636  004F8C  0100               	movlb	0	; () banked
 37637  004F8E  21C6               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 37638  004F90  6EDA               	movwf	fsr2h,c
 37639  004F92  ECCE  F05D         	call	i2_SPIGet	;wreg free
 37640  004F96                     L30:
 37641  004F96  6EDF               	movwf	indf2,c
 37642  004F98  D7DA               	goto	i2l19800
 37643  004F9A                     i2l19808:
 37644                           
 37645                           ; BSR set to: 0
 37646                           ;drv_mrf_miwi_89xa.c: 1333: LATCbits.LATC6 = 1;
 37647  004F9A  8C8B               	bsf	3979,6,c	;volatile
 37648                           
 37649                           ; BSR set to: 0
 37650                           ;drv_mrf_miwi_89xa.c: 1334: }
 37651                           ;drv_mrf_miwi_89xa.c: 1337: if( RxPacketPtr >= PacketLen )
 37652                           
 37653                           ; BSR set to: 0
 37654  004F9C  0100               	movlb	0	; () banked
 37655  004F9E  51D5               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37656  004FA0  0100               	movlb	0	; () banked
 37657  004FA2  5DD3               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37658  004FA4  A0D8               	btfss	status,0,c
 37659  004FA6  D1D7               	goto	i2l19910
 37660                           
 37661                           ; BSR set to: 0
 37662                           ;drv_mrf_miwi_89xa.c: 1338: {
 37663                           ;drv_mrf_miwi_89xa.c: 1339: uint8_t i;
 37664                           ;drv_mrf_miwi_89xa.c: 1341: if( bAck )
 37665  004FA8  0100               	movlb	0	; () banked
 37666  004FAA  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37667  004FAC  0100               	movlb	0	; () banked
 37668  004FAE  B4D8               	btfsc	status,2,c
 37669  004FB0  D039               	goto	i2l419
 37670                           
 37671                           ; BSR set to: 0
 37672                           ;drv_mrf_miwi_89xa.c: 1342: {
 37673                           ;drv_mrf_miwi_89xa.c: 1344: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 37674  004FB2  0100               	movlb	0	; () banked
 37675  004FB4  51CE               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 37676  004FB6  0B03               	andlw	3
 37677  004FB8  0A02               	xorlw	2
 37678  004FBA  A4D8               	btfss	status,2,c
 37679  004FBC  D00D               	goto	i2l19822
 37680                           
 37681                           ; BSR set to: 0
 37682                           ;drv_mrf_miwi_89xa.c: 1345: {
 37683                           ;drv_mrf_miwi_89xa.c: 1346: if( ackPacket[1] == TxMACSeq )
 37684  004FBE  0100               	movlb	0	; () banked
 37685  004FC0  519D               	movf	_TxMACSeq& (0+255),w,b
 37686  004FC2  0100               	movlb	0	; () banked
 37687  004FC4  19CF               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 37688  004FC6  A4D8               	btfss	status,2,c
 37689  004FC8  D003               	goto	i2l421
 37690                           
 37691                           ; BSR set to: 0
 37692                           ;drv_mrf_miwi_89xa.c: 1347: {
 37693                           ;drv_mrf_miwi_89xa.c: 1348: hasAck = 1;
 37694  004FCA  0E01               	movlw	1
 37695  004FCC  0100               	movlb	0	; () banked
 37696  004FCE  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 37697  004FD0                     i2l421:
 37698                           
 37699                           ; BSR set to: 0
 37700                           ;drv_mrf_miwi_89xa.c: 1349: }
 37701                           ;drv_mrf_miwi_89xa.c: 1350: RxPacketPtr = 0;
 37702  004FD0  0E00               	movlw	0
 37703  004FD2  0100               	movlb	0	; () banked
 37704  004FD4  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37705                           
 37706                           ;drv_mrf_miwi_89xa.c: 1351: goto RETURN_HERE;
 37707  004FD6  D1C9               	goto	i2l19914
 37708  004FD8                     i2l19822:
 37709                           
 37710                           ; BSR set to: 0
 37711                           ;drv_mrf_miwi_89xa.c: 1353: else
 37712                           ;drv_mrf_miwi_89xa.c: 1355: if( BankIndex >= 2 )
 37713  004FD8  0E01               	movlw	1
 37714  004FDA  0100               	movlb	0	; () banked
 37715  004FDC  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37716  004FDE  D004               	goto	i2l19826
 37717                           
 37718                           ; BSR set to: 0
 37719                           ;drv_mrf_miwi_89xa.c: 1356: {
 37720                           ;drv_mrf_miwi_89xa.c: 1357: RxPacketPtr = 0;
 37721  004FE0  0E00               	movlw	0
 37722  004FE2  0100               	movlb	0	; () banked
 37723  004FE4  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37724                           
 37725                           ;drv_mrf_miwi_89xa.c: 1358: goto IGNORE_HERE;
 37726  004FE6  D784               	goto	i2l19778
 37727  004FE8                     i2l19826:
 37728                           
 37729                           ; BSR set to: 0
 37730                           ;drv_mrf_miwi_89xa.c: 1359: }
 37731                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 37732  004FE8  0100               	movlb	0	; () banked
 37733  004FEA  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37734  004FEC  0D42               	mullw	66
 37735  004FEE  0E01               	movlw	1
 37736  004FF0  26F3               	addwf	prodl,f,c
 37737  004FF2  0E00               	movlw	0
 37738  004FF4  22F4               	addwfc	prodh,f,c
 37739  004FF6  0E00               	movlw	low _RxPacket
 37740  004FF8  24F3               	addwf	prodl,w,c
 37741  004FFA  6ED9               	movwf	fsr2l,c
 37742  004FFC  0E03               	movlw	high _RxPacket
 37743  004FFE  20F4               	addwfc	prodh,w,c
 37744  005000  6EDA               	movwf	fsr2h,c
 37745  005002  C0CE  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 37746                           
 37747                           ;drv_mrf_miwi_89xa.c: 1361: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 37748  005006  0100               	movlb	0	; () banked
 37749  005008  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37750  00500A  0D42               	mullw	66
 37751  00500C  0E02               	movlw	2
 37752  00500E  26F3               	addwf	prodl,f,c
 37753  005010  0E00               	movlw	0
 37754  005012  22F4               	addwfc	prodh,f,c
 37755  005014  0E00               	movlw	low _RxPacket
 37756  005016  24F3               	addwf	prodl,w,c
 37757  005018  6ED9               	movwf	fsr2l,c
 37758  00501A  0E03               	movlw	high _RxPacket
 37759  00501C  20F4               	addwfc	prodh,w,c
 37760  00501E  6EDA               	movwf	fsr2h,c
 37761  005020  C0CF  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 37762  005024                     i2l419:
 37763                           
 37764                           ; BSR set to: 0
 37765                           ;drv_mrf_miwi_89xa.c: 1363: }
 37766                           ;drv_mrf_miwi_89xa.c: 1365: RxPacket[BankIndex].PayloadLen = PacketLen;
 37767  005024  0100               	movlb	0	; () banked
 37768  005026  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37769  005028  0D42               	mullw	66
 37770  00502A  0E41               	movlw	65
 37771  00502C  26F3               	addwf	prodl,f,c
 37772  00502E  0E00               	movlw	0
 37773  005030  22F4               	addwfc	prodh,f,c
 37774  005032  0E00               	movlw	low _RxPacket
 37775  005034  24F3               	addwf	prodl,w,c
 37776  005036  6ED9               	movwf	fsr2l,c
 37777  005038  0E03               	movlw	high _RxPacket
 37778  00503A  20F4               	addwfc	prodh,w,c
 37779  00503C  6EDA               	movwf	fsr2h,c
 37780  00503E  C0D5  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 37781                           
 37782                           ; BSR set to: 0
 37783                           ;drv_mrf_miwi_89xa.c: 1382: {
 37784                           ;drv_mrf_miwi_89xa.c: 1383: uint8_t ackInfoIndex = 0xFF;
 37785  005042  0100               	movlb	0	; () banked
 37786  005044  69D4               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 37787                           
 37788                           ;drv_mrf_miwi_89xa.c: 1385: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 37789  005046  0100               	movlb	0	; () banked
 37790  005048  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37791  00504A  0D42               	mullw	66
 37792  00504C  0E01               	movlw	1
 37793  00504E  26F3               	addwf	prodl,f,c
 37794  005050  0E00               	movlw	0
 37795  005052  22F4               	addwfc	prodh,f,c
 37796  005054  0E00               	movlw	low _RxPacket
 37797  005056  24F3               	addwf	prodl,w,c
 37798  005058  6ED9               	movwf	fsr2l,c
 37799  00505A  0E03               	movlw	high _RxPacket
 37800  00505C  20F4               	addwfc	prodh,w,c
 37801  00505E  6EDA               	movwf	fsr2h,c
 37802  005060  0103               	movlb	3	; () banked
 37803  005062  ACDF               	btfss	indf2,6,c
 37804  005064  D058               	goto	i2l19842
 37805                           
 37806                           ; BSR set to: 3
 37807                           ;drv_mrf_miwi_89xa.c: 1386: {
 37808                           ;drv_mrf_miwi_89xa.c: 1387: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 37809  005066  0E00               	movlw	0
 37810  005068  0100               	movlb	0	; () banked
 37811  00506A  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 37812  00506C  D047               	goto	i2l19840
 37813  00506E                     i2l19832:
 37814                           
 37815                           ; BSR set to: 0
 37816                           ;drv_mrf_miwi_89xa.c: 1388: {
 37817                           ;drv_mrf_miwi_89xa.c: 1389: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 37818  00506E  0100               	movlb	0	; () banked
 37819  005070  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37820  005072  0D01               	mullw	1
 37821  005074  50F3               	movf	prodl,w,c
 37822  005076  0101               	movlb	1	; () banked
 37823  005078  25AB               	addwf	(_MACInitParams+1)& (0+255),w,b
 37824  00507A  6ED9               	movwf	fsr2l,c
 37825  00507C  50F4               	movf	prodh,w,c
 37826  00507E  0101               	movlb	1	; () banked
 37827  005080  21AC               	addwfc	(_MACInitParams+2)& (0+255),w,b
 37828  005082  6EDA               	movwf	fsr2h,c
 37829  005084  0100               	movlb	0	; () banked
 37830  005086  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37831  005088  0D42               	mullw	66
 37832  00508A  0100               	movlb	0	; () banked
 37833  00508C  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37834  00508E  0100               	movlb	0	; () banked
 37835  005090  6FC6               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 37836  005092  6BC7               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 37837  005094  0E03               	movlw	3
 37838  005096  0100               	movlb	0	; () banked
 37839  005098  27C6               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 37840  00509A  0E00               	movlw	0
 37841  00509C  23C7               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 37842  00509E  0E00               	movlw	low _RxPacket
 37843  0050A0  0100               	movlb	0	; () banked
 37844  0050A2  6FC8               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 37845  0050A4  0E03               	movlw	high _RxPacket
 37846  0050A6  0100               	movlb	0	; () banked
 37847  0050A8  6FC9               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 37848  0050AA  0100               	movlb	0	; () banked
 37849  0050AC  51C6               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 37850  0050AE  0100               	movlb	0	; () banked
 37851  0050B0  27C8               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 37852  0050B2  0100               	movlb	0	; () banked
 37853  0050B4  51C7               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 37854  0050B6  0100               	movlb	0	; () banked
 37855  0050B8  23C9               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 37856  0050BA  50F3               	movf	prodl,w,c
 37857  0050BC  0100               	movlb	0	; () banked
 37858  0050BE  25C8               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 37859  0050C0  6EE1               	movwf	fsr1l,c
 37860  0050C2  50F4               	movf	prodh,w,c
 37861  0050C4  0100               	movlb	0	; () banked
 37862  0050C6  21C9               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 37863  0050C8  6EE2               	movwf	fsr1h,c
 37864  0050CA  50DE               	movf	postinc2,w,c
 37865  0050CC  18E6               	xorwf	postinc1,w,c
 37866  0050CE  B4D8               	btfsc	status,2,c
 37867  0050D0  D013               	goto	i2l19838
 37868                           
 37869                           ; BSR set to: 0
 37870                           ;drv_mrf_miwi_89xa.c: 1390: {
 37871                           ;drv_mrf_miwi_89xa.c: 1391: RxPacketPtr = 0;
 37872  0050D2  0E00               	movlw	0
 37873  0050D4  0100               	movlb	0	; () banked
 37874  0050D6  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37875                           
 37876                           ; BSR set to: 0
 37877                           ;drv_mrf_miwi_89xa.c: 1392: RxPacket[BankIndex].PayloadLen = 0;
 37878  0050D8  0100               	movlb	0	; () banked
 37879  0050DA  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37880  0050DC  0D42               	mullw	66
 37881  0050DE  0E41               	movlw	65
 37882  0050E0  26F3               	addwf	prodl,f,c
 37883  0050E2  0E00               	movlw	0
 37884  0050E4  22F4               	addwfc	prodh,f,c
 37885  0050E6  0E00               	movlw	low _RxPacket
 37886  0050E8  24F3               	addwf	prodl,w,c
 37887  0050EA  6ED9               	movwf	fsr2l,c
 37888  0050EC  0E03               	movlw	high _RxPacket
 37889  0050EE  20F4               	addwfc	prodh,w,c
 37890  0050F0  6EDA               	movwf	fsr2h,c
 37891  0050F2  0E00               	movlw	0
 37892  0050F4  6EDF               	movwf	indf2,c
 37893                           
 37894                           ;drv_mrf_miwi_89xa.c: 1393: goto IGNORE_HERE;
 37895  0050F6  D6FC               	goto	i2l19778
 37896  0050F8                     i2l19838:
 37897                           
 37898                           ; BSR set to: 0
 37899  0050F8  0100               	movlb	0	; () banked
 37900  0050FA  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 37901  0050FC                     i2l19840:
 37902                           
 37903                           ; BSR set to: 0
 37904  0050FC  0101               	movlb	1	; () banked
 37905  0050FE  31AA               	rrcf	_MACInitParams& (0+255),w,b
 37906  005100  32E8               	rrcf	wreg,f,c
 37907  005102  32E8               	rrcf	wreg,f,c
 37908  005104  0B0F               	andlw	15
 37909  005106  0100               	movlb	0	; () banked
 37910  005108  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 37911  00510A  0100               	movlb	0	; () banked
 37912  00510C  51C5               	movf	??_MIWIInterruptHandler& (0+255),w,b
 37913  00510E  0100               	movlb	0	; () banked
 37914  005110  5DD7               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 37915  005112  A0D8               	btfss	status,0,c
 37916  005114  D7AC               	goto	i2l19832
 37917  005116                     i2l19842:
 37918                           
 37919                           ;drv_mrf_miwi_89xa.c: 1394: }
 37920                           ;drv_mrf_miwi_89xa.c: 1395: }
 37921                           ;drv_mrf_miwi_89xa.c: 1396: }
 37922                           ;drv_mrf_miwi_89xa.c: 1399: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 37923  005116  0100               	movlb	0	; () banked
 37924  005118  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37925  00511A  0D42               	mullw	66
 37926  00511C  0E01               	movlw	1
 37927  00511E  26F3               	addwf	prodl,f,c
 37928  005120  0E00               	movlw	0
 37929  005122  22F4               	addwfc	prodh,f,c
 37930  005124  0E00               	movlw	low _RxPacket
 37931  005126  24F3               	addwf	prodl,w,c
 37932  005128  6ED9               	movwf	fsr2l,c
 37933  00512A  0E03               	movlw	high _RxPacket
 37934  00512C  20F4               	addwfc	prodh,w,c
 37935  00512E  6EDA               	movwf	fsr2h,c
 37936  005130  0103               	movlb	3	; () banked
 37937  005132  AADF               	btfss	indf2,5,c
 37938  005134  D058               	goto	i2l19876
 37939                           
 37940                           ; BSR set to: 3
 37941                           ;drv_mrf_miwi_89xa.c: 1400: {
 37942                           ;drv_mrf_miwi_89xa.c: 1402: for(i = 0; i < 2; i++)
 37943  005136  0E00               	movlw	0
 37944  005138  0100               	movlb	0	; () banked
 37945  00513A  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 37946  00513C                     i2l19846:
 37947                           
 37948                           ; BSR set to: 0
 37949  00513C  0E01               	movlw	1
 37950  00513E  0100               	movlb	0	; () banked
 37951  005140  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 37952  005142  D001               	goto	i2l19850
 37953  005144  D017               	goto	i2l19856
 37954  005146                     i2l19850:
 37955                           
 37956                           ; BSR set to: 0
 37957                           ;drv_mrf_miwi_89xa.c: 1403: {
 37958                           ;drv_mrf_miwi_89xa.c: 1404: ackPacket[i] = MACTxBuffer[i];
 37959  005146  0100               	movlb	0	; () banked
 37960  005148  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37961  00514A  0D01               	mullw	1
 37962  00514C  0E66               	movlw	low _MACTxBuffer
 37963  00514E  24F3               	addwf	prodl,w,c
 37964  005150  6ED9               	movwf	fsr2l,c
 37965  005152  0E02               	movlw	high _MACTxBuffer
 37966  005154  20F4               	addwfc	prodh,w,c
 37967  005156  6EDA               	movwf	fsr2h,c
 37968  005158  0100               	movlb	0	; () banked
 37969  00515A  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37970  00515C  0D01               	mullw	1
 37971  00515E  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 37972  005160  24F3               	addwf	prodl,w,c
 37973  005162  6EE1               	movwf	fsr1l,c
 37974  005164  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 37975  005166  20F4               	addwfc	prodh,w,c
 37976  005168  6EE2               	movwf	fsr1h,c
 37977  00516A  CFDF FFE7          	movff	indf2,indf1
 37978                           
 37979                           ; BSR set to: 0
 37980  00516E  0100               	movlb	0	; () banked
 37981  005170  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 37982  005172  D7E4               	goto	i2l19846
 37983  005174                     i2l19856:
 37984                           
 37985                           ; BSR set to: 0
 37986                           ;drv_mrf_miwi_89xa.c: 1405: }
 37987                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[0] = 0x02 | 0x04;
 37988  005174  0E06               	movlw	6
 37989  005176  0102               	movlb	2	; () banked
 37990  005178  6F66               	movwf	_MACTxBuffer& (0+255),b	;volatile
 37991                           
 37992                           ; BSR set to: 2
 37993                           ;drv_mrf_miwi_89xa.c: 1407: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 37994  00517A  0100               	movlb	0	; () banked
 37995  00517C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37996  00517E  0D42               	mullw	66
 37997  005180  0E02               	movlw	2
 37998  005182  26F3               	addwf	prodl,f,c
 37999  005184  0E00               	movlw	0
 38000  005186  22F4               	addwfc	prodh,f,c
 38001  005188  0E00               	movlw	low _RxPacket
 38002  00518A  24F3               	addwf	prodl,w,c
 38003  00518C  6ED9               	movwf	fsr2l,c
 38004  00518E  0E03               	movlw	high _RxPacket
 38005  005190  20F4               	addwfc	prodh,w,c
 38006  005192  6EDA               	movwf	fsr2h,c
 38007  005194  50DF               	movf	indf2,w,c
 38008  005196  0102               	movlb	2	; () banked
 38009  005198  6F67               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 38010                           
 38011                           ; BSR set to: 2
 38012                           ;drv_mrf_miwi_89xa.c: 1408: INTCON3bits.INT1IF = 0;
 38013  00519A  90F0               	bcf	intcon3,0,c	;volatile
 38014                           
 38015                           ; BSR set to: 2
 38016                           ;drv_mrf_miwi_89xa.c: 1409: TxPacket(2, 0);
 38017  00519C  0E00               	movlw	0
 38018  00519E  0100               	movlb	0	; () banked
 38019  0051A0  6FAD               	movwf	i2TxPacket@CCA& (0+255),b
 38020  0051A2  0E02               	movlw	2
 38021  0051A4  ECBD  F039         	call	i2_TxPacket
 38022                           
 38023                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 38024  0051A8  0E00               	movlw	0
 38025  0051AA  0100               	movlb	0	; () banked
 38026  0051AC  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38027  0051AE                     i2l19866:
 38028                           
 38029                           ; BSR set to: 0
 38030  0051AE  0E01               	movlw	1
 38031  0051B0  0100               	movlb	0	; () banked
 38032  0051B2  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38033  0051B4  D001               	goto	i2l19870
 38034  0051B6  D017               	goto	i2l19876
 38035  0051B8                     i2l19870:
 38036                           
 38037                           ; BSR set to: 0
 38038                           ;drv_mrf_miwi_89xa.c: 1413: {
 38039                           ;drv_mrf_miwi_89xa.c: 1414: MACTxBuffer[i] = ackPacket[i];
 38040  0051B8  0100               	movlb	0	; () banked
 38041  0051BA  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38042  0051BC  0D01               	mullw	1
 38043  0051BE  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 38044  0051C0  24F3               	addwf	prodl,w,c
 38045  0051C2  6ED9               	movwf	fsr2l,c
 38046  0051C4  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 38047  0051C6  20F4               	addwfc	prodh,w,c
 38048  0051C8  6EDA               	movwf	fsr2h,c
 38049  0051CA  0100               	movlb	0	; () banked
 38050  0051CC  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38051  0051CE  0D01               	mullw	1
 38052  0051D0  0E66               	movlw	low _MACTxBuffer
 38053  0051D2  24F3               	addwf	prodl,w,c
 38054  0051D4  6EE1               	movwf	fsr1l,c
 38055  0051D6  0E02               	movlw	high _MACTxBuffer
 38056  0051D8  20F4               	addwfc	prodh,w,c
 38057  0051DA  6EE2               	movwf	fsr1h,c
 38058  0051DC  CFDF FFE7          	movff	indf2,indf1
 38059                           
 38060                           ; BSR set to: 0
 38061  0051E0  0100               	movlb	0	; () banked
 38062  0051E2  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38063  0051E4  D7E4               	goto	i2l19866
 38064  0051E6                     i2l19876:
 38065                           
 38066                           ;drv_mrf_miwi_89xa.c: 1415: }
 38067                           ;drv_mrf_miwi_89xa.c: 1416: }
 38068                           ;drv_mrf_miwi_89xa.c: 1420: for(i = 0; i < 5; i++)
 38069  0051E6  0E00               	movlw	0
 38070  0051E8  0100               	movlb	0	; () banked
 38071  0051EA  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38072  0051EC                     i2l19878:
 38073                           
 38074                           ; BSR set to: 0
 38075  0051EC  0E04               	movlw	4
 38076  0051EE  0100               	movlb	0	; () banked
 38077  0051F0  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38078  0051F2  D001               	goto	i2l19882
 38079  0051F4  D05A               	goto	i2l19898
 38080  0051F6                     i2l19882:
 38081                           
 38082                           ; BSR set to: 0
 38083                           ;drv_mrf_miwi_89xa.c: 1421: {
 38084                           ;drv_mrf_miwi_89xa.c: 1422: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 38085  0051F6  0100               	movlb	0	; () banked
 38086  0051F8  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38087  0051FA  0D06               	mullw	6
 38088  0051FC  0E48               	movlw	low _AckInfo
 38089  0051FE  24F3               	addwf	prodl,w,c
 38090  005200  6ED9               	movwf	fsr2l,c
 38091  005202  0E02               	movlw	high _AckInfo
 38092  005204  20F4               	addwfc	prodh,w,c
 38093  005206  6EDA               	movwf	fsr2h,c
 38094  005208  50DF               	movf	indf2,w,c
 38095  00520A  B4D8               	btfsc	status,2,c
 38096  00520C  D03A               	goto	i2l19888
 38097                           
 38098                           ; BSR set to: 0
 38099  00520E  0100               	movlb	0	; () banked
 38100  005210  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38101  005212  0D42               	mullw	66
 38102  005214  0E02               	movlw	2
 38103  005216  26F3               	addwf	prodl,f,c
 38104  005218  0E00               	movlw	0
 38105  00521A  22F4               	addwfc	prodh,f,c
 38106  00521C  0E00               	movlw	low _RxPacket
 38107  00521E  24F3               	addwf	prodl,w,c
 38108  005220  6ED9               	movwf	fsr2l,c
 38109  005222  0E03               	movlw	high _RxPacket
 38110  005224  20F4               	addwfc	prodh,w,c
 38111  005226  6EDA               	movwf	fsr2h,c
 38112  005228  0100               	movlb	0	; () banked
 38113  00522A  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38114  00522C  0D06               	mullw	6
 38115  00522E  0E01               	movlw	1
 38116  005230  26F3               	addwf	prodl,f,c
 38117  005232  0E00               	movlw	0
 38118  005234  22F4               	addwfc	prodh,f,c
 38119  005236  0E48               	movlw	low _AckInfo
 38120  005238  24F3               	addwf	prodl,w,c
 38121  00523A  6EE1               	movwf	fsr1l,c
 38122  00523C  0E02               	movlw	high _AckInfo
 38123  00523E  20F4               	addwfc	prodh,w,c
 38124  005240  6EE2               	movwf	fsr1h,c
 38125  005242  50DE               	movf	postinc2,w,c
 38126  005244  18E6               	xorwf	postinc1,w,c
 38127  005246  A4D8               	btfss	status,2,c
 38128  005248  D01C               	goto	i2l19888
 38129                           
 38130                           ; BSR set to: 0
 38131                           ;drv_mrf_miwi_89xa.c: 1423: {
 38132                           ;drv_mrf_miwi_89xa.c: 1424: AckInfo[i].startTick = MiWi_TickGet();
 38133  00524A  ECB8  F058         	call	i2_MiWi_TickGet	;wreg free
 38134  00524E  0100               	movlb	0	; () banked
 38135  005250  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38136  005252  0D06               	mullw	6
 38137  005254  0E02               	movlw	2
 38138  005256  26F3               	addwf	prodl,f,c
 38139  005258  0E00               	movlw	0
 38140  00525A  22F4               	addwfc	prodh,f,c
 38141  00525C  0E48               	movlw	low _AckInfo
 38142  00525E  24F3               	addwf	prodl,w,c
 38143  005260  6ED9               	movwf	fsr2l,c
 38144  005262  0E02               	movlw	high _AckInfo
 38145  005264  20F4               	addwfc	prodh,w,c
 38146  005266  6EDA               	movwf	fsr2h,c
 38147  005268  0100               	movlb	0	; () banked
 38148  00526A  C0A3  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 38149  00526E  0100               	movlb	0	; () banked
 38150  005270  C0A4  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 38151  005274  0100               	movlb	0	; () banked
 38152  005276  C0A5  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 38153  00527A  0100               	movlb	0	; () banked
 38154  00527C  C0A6  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 38155                           
 38156                           ;drv_mrf_miwi_89xa.c: 1425: break;
 38157  005280  D014               	goto	i2l19898
 38158  005282                     i2l19888:
 38159                           
 38160                           ; BSR set to: 0
 38161                           ;drv_mrf_miwi_89xa.c: 1426: }
 38162                           ;drv_mrf_miwi_89xa.c: 1427: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 38163  005282  0100               	movlb	0	; () banked
 38164  005284  29D4               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38165  005286  A4D8               	btfss	status,2,c
 38166  005288  D00D               	goto	i2l19894
 38167                           
 38168                           ; BSR set to: 0
 38169  00528A  0100               	movlb	0	; () banked
 38170  00528C  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38171  00528E  0D06               	mullw	6
 38172  005290  0E48               	movlw	low _AckInfo
 38173  005292  24F3               	addwf	prodl,w,c
 38174  005294  6ED9               	movwf	fsr2l,c
 38175  005296  0E02               	movlw	high _AckInfo
 38176  005298  20F4               	addwfc	prodh,w,c
 38177  00529A  6EDA               	movwf	fsr2h,c
 38178  00529C  50DF               	movf	indf2,w,c
 38179  00529E  B4D8               	btfsc	status,2,c
 38180                           
 38181                           ; BSR set to: 0
 38182                           ;drv_mrf_miwi_89xa.c: 1428: {
 38183                           ;drv_mrf_miwi_89xa.c: 1429: ackInfoIndex = i;
 38184  0052A0  C0D7  F0D4         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 38185  0052A4                     i2l19894:
 38186                           
 38187                           ; BSR set to: 0
 38188  0052A4  0100               	movlb	0	; () banked
 38189  0052A6  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38190  0052A8  D7A1               	goto	i2l19878
 38191  0052AA                     i2l19898:
 38192                           
 38193                           ; BSR set to: 0
 38194                           ;drv_mrf_miwi_89xa.c: 1430: }
 38195                           ;drv_mrf_miwi_89xa.c: 1431: }
 38196                           ;drv_mrf_miwi_89xa.c: 1433: if( i >= 5 )
 38197  0052AA  0E04               	movlw	4
 38198  0052AC  0100               	movlb	0	; () banked
 38199  0052AE  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38200  0052B0  D05C               	goto	i2l19914
 38201                           
 38202                           ; BSR set to: 0
 38203                           ;drv_mrf_miwi_89xa.c: 1434: {
 38204                           ;drv_mrf_miwi_89xa.c: 1435: if( ackInfoIndex < 5 )
 38205  0052B2  0E05               	movlw	5
 38206  0052B4  0100               	movlb	0	; () banked
 38207  0052B6  61D4               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 38208  0052B8  D042               	goto	i2l19908
 38209                           
 38210                           ; BSR set to: 0
 38211                           ;drv_mrf_miwi_89xa.c: 1436: {
 38212                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Valid = 1;
 38213  0052BA  0100               	movlb	0	; () banked
 38214  0052BC  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38215  0052BE  0D06               	mullw	6
 38216  0052C0  0E48               	movlw	low _AckInfo
 38217  0052C2  24F3               	addwf	prodl,w,c
 38218  0052C4  6ED9               	movwf	fsr2l,c
 38219  0052C6  0E02               	movlw	high _AckInfo
 38220  0052C8  20F4               	addwfc	prodh,w,c
 38221  0052CA  6EDA               	movwf	fsr2h,c
 38222  0052CC  0E01               	movlw	1
 38223  0052CE  6EDF               	movwf	indf2,c
 38224                           
 38225                           ; BSR set to: 0
 38226                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 38227  0052D0  0100               	movlb	0	; () banked
 38228  0052D2  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38229  0052D4  0D42               	mullw	66
 38230  0052D6  0E02               	movlw	2
 38231  0052D8  26F3               	addwf	prodl,f,c
 38232  0052DA  0E00               	movlw	0
 38233  0052DC  22F4               	addwfc	prodh,f,c
 38234  0052DE  0E00               	movlw	low _RxPacket
 38235  0052E0  24F3               	addwf	prodl,w,c
 38236  0052E2  6ED9               	movwf	fsr2l,c
 38237  0052E4  0E03               	movlw	high _RxPacket
 38238  0052E6  20F4               	addwfc	prodh,w,c
 38239  0052E8  6EDA               	movwf	fsr2h,c
 38240  0052EA  0100               	movlb	0	; () banked
 38241  0052EC  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38242  0052EE  0D06               	mullw	6
 38243  0052F0  0E01               	movlw	1
 38244  0052F2  26F3               	addwf	prodl,f,c
 38245  0052F4  0E00               	movlw	0
 38246  0052F6  22F4               	addwfc	prodh,f,c
 38247  0052F8  0E48               	movlw	low _AckInfo
 38248  0052FA  24F3               	addwf	prodl,w,c
 38249  0052FC  6EE1               	movwf	fsr1l,c
 38250  0052FE  0E02               	movlw	high _AckInfo
 38251  005300  20F4               	addwfc	prodh,w,c
 38252  005302  6EE2               	movwf	fsr1h,c
 38253  005304  CFDF FFE7          	movff	indf2,indf1
 38254                           
 38255                           ; BSR set to: 0
 38256                           ;drv_mrf_miwi_89xa.c: 1439: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 38257  005308  ECB8  F058         	call	i2_MiWi_TickGet	;wreg free
 38258  00530C  0100               	movlb	0	; () banked
 38259  00530E  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38260  005310  0D06               	mullw	6
 38261  005312  0E02               	movlw	2
 38262  005314  26F3               	addwf	prodl,f,c
 38263  005316  0E00               	movlw	0
 38264  005318  22F4               	addwfc	prodh,f,c
 38265  00531A  0E48               	movlw	low _AckInfo
 38266  00531C  24F3               	addwf	prodl,w,c
 38267  00531E  6ED9               	movwf	fsr2l,c
 38268  005320  0E02               	movlw	high _AckInfo
 38269  005322  20F4               	addwfc	prodh,w,c
 38270  005324  6EDA               	movwf	fsr2h,c
 38271  005326  0100               	movlb	0	; () banked
 38272  005328  C0A3  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 38273  00532C  0100               	movlb	0	; () banked
 38274  00532E  C0A4  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 38275  005332  0100               	movlb	0	; () banked
 38276  005334  C0A5  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 38277  005338  0100               	movlb	0	; () banked
 38278  00533A  C0A6  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 38279  00533E                     i2l19908:
 38280                           
 38281                           ; BSR set to: 0
 38282                           ;drv_mrf_miwi_89xa.c: 1440: }
 38283                           ;drv_mrf_miwi_89xa.c: 1443: RxPacket[BankIndex].flags.bits.Valid = 1;
 38284  00533E  0100               	movlb	0	; () banked
 38285  005340  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38286  005342  0D42               	mullw	66
 38287  005344  0E00               	movlw	low _RxPacket
 38288  005346  24F3               	addwf	prodl,w,c
 38289  005348  6ED9               	movwf	fsr2l,c
 38290  00534A  0E03               	movlw	high _RxPacket
 38291  00534C  20F4               	addwfc	prodh,w,c
 38292  00534E  6EDA               	movwf	fsr2h,c
 38293  005350  0103               	movlb	3	; () banked
 38294  005352  80DF               	bsf	indf2,0,c
 38295                           
 38296                           ; BSR set to: 3
 38297                           ;drv_mrf_miwi_89xa.c: 1444: }
 38298                           ;drv_mrf_miwi_89xa.c: 1451: }
 38299                           ;drv_mrf_miwi_89xa.c: 1452: goto RETURN_HERE;
 38300  005354  D00A               	goto	i2l19914
 38301  005356                     i2l19910:
 38302  005356  0100               	movlb	0	; () banked
 38303  005358  51CB               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 38304  00535A  0100               	movlb	0	; () banked
 38305  00535C  11CC               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 38306  00535E  B4D8               	btfsc	status,2,c
 38307  005360  D004               	goto	i2l19914
 38308  005362  D5DF               	goto	i2l19792
 38309  005364                     i2l19912:
 38310                           
 38311                           ; BSR set to: 0
 38312                           ;drv_mrf_miwi_89xa.c: 1458: else
 38313                           ;drv_mrf_miwi_89xa.c: 1459: {
 38314                           ;drv_mrf_miwi_89xa.c: 1461: IRQ1_Received = 1;
 38315  005364  0E01               	movlw	1
 38316  005366  0100               	movlb	0	; () banked
 38317  005368  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 38318  00536A                     i2l19914:
 38319                           
 38320                           ;drv_mrf_miwi_89xa.c: 1465: INTCON3bits.INT1IF = 0;
 38321  00536A  90F0               	bcf	intcon3,0,c	;volatile
 38322                           
 38323                           ;drv_mrf_miwi_89xa.c: 1467: __nop();
 38324  00536C  F000               	nop	
 38325  00536E                     i2l19918:
 38326                           
 38327                           ;drv_mrf_miwi_89xa.c: 1468: }
 38328                           ;drv_mrf_miwi_89xa.c: 1472: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 38329  00536E  B2F2               	btfsc	intcon,1,c	;volatile
 38330  005370  A8F2               	btfss	intcon,4,c	;volatile
 38331  005372  D014               	goto	i2l19932
 38332                           
 38333                           ;drv_mrf_miwi_89xa.c: 1473: {
 38334                           ;drv_mrf_miwi_89xa.c: 1475: status_led = LED_FULL;
 38335  005374  0E03               	movlw	3
 38336  005376  6E55               	movwf	_status_led,c	;volatile
 38337                           
 38338                           ;drv_mrf_miwi_89xa.c: 1476: update_LED();
 38339  005378  EC25  F05A         	call	i2_update_LED	;wreg free
 38340                           
 38341                           ;drv_mrf_miwi_89xa.c: 1482: INTCONbits.INT0IF = 0;
 38342  00537C  92F2               	bcf	intcon,1,c	;volatile
 38343                           
 38344                           ;drv_mrf_miwi_89xa.c: 1485: if(RF_Mode == 0x60)
 38345  00537E  0E60               	movlw	96
 38346  005380  0100               	movlb	0	; () banked
 38347  005382  199B               	xorwf	_RF_Mode& (0+255),w,b
 38348  005384  A4D8               	btfss	status,2,c
 38349  005386  D00A               	goto	i2l19932
 38350                           
 38351                           ; BSR set to: 0
 38352                           ;drv_mrf_miwi_89xa.c: 1486: {
 38353                           ;drv_mrf_miwi_89xa.c: 1487: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 38354  005388  0E28               	movlw	40
 38355  00538A  ECAF  F05A         	call	i2_RegisterRead
 38356  00538E  0100               	movlb	0	; () banked
 38357  005390  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 38358  005392  0100               	movlb	0	; () banked
 38359  005394  90D8               	bcf	status,0,c
 38360  005396  31C5               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 38361  005398  0100               	movlb	0	; () banked
 38362  00539A  6F9C               	movwf	_RSSIVal& (0+255),b
 38363  00539C                     i2l19932:
 38364                           
 38365                           ;drv_mrf_miwi_89xa.c: 1488: }
 38366                           ;drv_mrf_miwi_89xa.c: 1492: }
 38367                           ;drv_mrf_miwi_89xa.c: 1496: if(PIR1bits.TMR1IF)
 38368  00539C  A09E               	btfss	3998,0,c	;volatile
 38369  00539E  0012               	return	
 38370                           
 38371                           ;drv_mrf_miwi_89xa.c: 1497: {
 38372                           ;drv_mrf_miwi_89xa.c: 1498: if(PIE1bits.TMR1IE)
 38373  0053A0  A09D               	btfss	3997,0,c	;volatile
 38374  0053A2  0012               	return	
 38375                           
 38376                           ;drv_mrf_miwi_89xa.c: 1499: {
 38377                           ;drv_mrf_miwi_89xa.c: 1501: PIR1bits.TMR1IF = 0;
 38378  0053A4  909E               	bcf	3998,0,c	;volatile
 38379                           
 38380                           ;drv_mrf_miwi_89xa.c: 1502: timerExtension1++;
 38381  0053A6  0100               	movlb	0	; () banked
 38382  0053A8  2BA1               	incf	_timerExtension1& (0+255),f,b	;volatile
 38383                           
 38384                           ; BSR set to: 0
 38385                           ;drv_mrf_miwi_89xa.c: 1503: if(timerExtension1 == 0)
 38386  0053AA  0100               	movlb	0	; () banked
 38387  0053AC  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 38388  0053AE  A4D8               	btfss	status,2,c
 38389  0053B0  0012               	return	
 38390                           
 38391                           ; BSR set to: 0
 38392                           ;drv_mrf_miwi_89xa.c: 1504: {
 38393                           ;drv_mrf_miwi_89xa.c: 1505: timerExtension2++;
 38394  0053B2  0100               	movlb	0	; () banked
 38395  0053B4  2BA2               	incf	_timerExtension2& (0+255),f,b	;volatile
 38396                           
 38397                           ; BSR set to: 0
 38398                           
 38399                           ; BSR set to: 0
 38400                           
 38401                           ; BSR set to: 0
 38402  0053B6  0012               	return	
 38403  0053B8                     __end_of_MIWIInterruptHandler:
 38404                           	opt stack 0
 38405                           pclatu	equ	0xFFB
 38406                           pclath	equ	0xFFA
 38407                           tblptru	equ	0xFF8
 38408                           tblptrh	equ	0xFF7
 38409                           tblptrl	equ	0xFF6
 38410                           tablat	equ	0xFF5
 38411                           prodh	equ	0xFF4
 38412                           prodl	equ	0xFF3
 38413                           intcon	equ	0xFF2
 38414                           intcon2	equ	0xFF1
 38415                           intcon3	equ	0xFF0
 38416                           indf0	equ	0xFEF
 38417                           postinc0	equ	0xFEE
 38418                           plusw0	equ	0xFEB
 38419                           fsr0h	equ	0xFEA
 38420                           fsr0l	equ	0xFE9
 38421                           wreg	equ	0xFE8
 38422                           indf1	equ	0xFE7
 38423                           postinc1	equ	0xFE6
 38424                           postdec1	equ	0xFE5
 38425                           plusw1	equ	0xFE3
 38426                           fsr1h	equ	0xFE2
 38427                           fsr1l	equ	0xFE1
 38428                           bsr	equ	0xFE0
 38429                           indf2	equ	0xFDF
 38430                           postinc2	equ	0xFDE
 38431                           postdec2	equ	0xFDD
 38432                           plusw2	equ	0xFDB
 38433                           fsr2h	equ	0xFDA
 38434                           fsr2l	equ	0xFD9
 38435                           status	equ	0xFD8
 38436                           
 38437 ;; *************** function i2_update_LED *****************
 38438 ;; Defined at:
 38439 ;;		line 729 in file "src/main.c"
 38440 ;; Parameters:    Size  Location     Type
 38441 ;;		None
 38442 ;; Auto vars:     Size  Location     Type
 38443 ;;		None
 38444 ;; Return value:  Size  Location     Type
 38445 ;;                  2    0[None  ] int 
 38446 ;; Registers used:
 38447 ;;		wreg, status,2, status,0
 38448 ;; Tracked objects:
 38449 ;;		On entry : 0/0
 38450 ;;		On exit  : 0/0
 38451 ;;		Unchanged: 0/0
 38452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38457 ;;Total ram usage:        0 bytes
 38458 ;; Hardware stack levels used:    1
 38459 ;; This function calls:
 38460 ;;		Nothing
 38461 ;; This function is called by:
 38462 ;;		_MIWIInterruptHandler
 38463 ;; This function uses a non-reentrant model
 38464 ;;
 38465                           
 38466                           	psect	text117
 38467  00B44A                     __ptext117:
 38468                           	opt stack 0
 38469  00B44A                     i2_update_LED:
 38470                           	opt stack 6
 38471                           
 38472                           ;main.c: 731: switch(status_led)
 38473                           
 38474                           ;incstack = 0
 38475  00B44A  D021               	goto	i2l13670
 38476  00B44C                     i2l1858:
 38477                           
 38478                           ;main.c: 735: CCP1CONbits.DC1B0 = 0;
 38479  00B44C  98BA               	bcf	4026,4,c	;volatile
 38480                           
 38481                           ;main.c: 736: CCP1CONbits.DC1B1 = 0;
 38482  00B44E  9ABA               	bcf	4026,5,c	;volatile
 38483                           
 38484                           ;main.c: 737: CCPR1L = 0;
 38485  00B450  0E00               	movlw	0
 38486  00B452  6EBB               	movwf	4027,c	;volatile
 38487                           
 38488                           ;main.c: 738: LED_increasing = 1;
 38489  00B454  0E01               	movlw	1
 38490  00B456  6E45               	movwf	_LED_increasing,c	;volatile
 38491                           
 38492                           ;main.c: 739: break;
 38493  00B458  0012               	return	
 38494  00B45A                     i2l1860:
 38495                           
 38496                           ;main.c: 743: CCP1CONbits.DC1B0 = 1023 & 1;
 38497  00B45A  88BA               	bsf	4026,4,c	;volatile
 38498                           
 38499                           ;main.c: 744: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 38500  00B45C  8ABA               	bsf	4026,5,c	;volatile
 38501                           
 38502                           ;main.c: 745: CCPR1L = (1023 >> 2);
 38503  00B45E  68BB               	setf	4027,c	;volatile
 38504                           
 38505                           ;main.c: 746: repeat_full = 4;
 38506  00B460  0E04               	movlw	4
 38507  00B462  6E53               	movwf	_repeat_full,c	;volatile
 38508                           
 38509                           ;main.c: 747: break;
 38510  00B464  0012               	return	
 38511  00B466                     i2l13656:
 38512                           
 38513                           ;main.c: 750: T4CONbits.T4CKPS = 0b01;
 38514  00B466  5076               	movf	3958,w,c	;volatile
 38515  00B468  0BFC               	andlw	-4
 38516  00B46A  0901               	iorlw	1
 38517  00B46C  6E76               	movwf	3958,c	;volatile
 38518                           
 38519                           ;main.c: 752: CCP1CONbits.DC1B0 = 235 & 1;
 38520  00B46E  88BA               	bsf	4026,4,c	;volatile
 38521                           
 38522                           ;main.c: 753: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 38523  00B470  8ABA               	bsf	4026,5,c	;volatile
 38524                           
 38525                           ;main.c: 754: CCPR1L = (235 >> 2);
 38526  00B472  0E3A               	movlw	58
 38527  00B474  6EBB               	movwf	4027,c	;volatile
 38528                           
 38529                           ;main.c: 755: LED_increasing = 0;
 38530  00B476  0E00               	movlw	0
 38531  00B478  6E45               	movwf	_LED_increasing,c	;volatile
 38532                           
 38533                           ;main.c: 756: break;
 38534  00B47A  0012               	return	
 38535  00B47C                     i2l13662:
 38536                           
 38537                           ;main.c: 759: T4CONbits.T4CKPS = 0b11;
 38538  00B47C  0E03               	movlw	3
 38539  00B47E  1276               	iorwf	3958,f,c	;volatile
 38540                           
 38541                           ;main.c: 761: CCP1CONbits.DC1B0 = 235 & 1;
 38542  00B480  88BA               	bsf	4026,4,c	;volatile
 38543                           
 38544                           ;main.c: 762: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 38545  00B482  8ABA               	bsf	4026,5,c	;volatile
 38546                           
 38547                           ;main.c: 763: CCPR1L = (235 >> 2);
 38548  00B484  0E3A               	movlw	58
 38549  00B486  6EBB               	movwf	4027,c	;volatile
 38550                           
 38551                           ;main.c: 764: LED_increasing = 0;
 38552  00B488  0E00               	movlw	0
 38553  00B48A  6E45               	movwf	_LED_increasing,c	;volatile
 38554                           
 38555                           ;main.c: 766: }
 38556                           
 38557                           ;main.c: 765: break;
 38558  00B48C  0012               	return	
 38559  00B48E                     i2l13670:
 38560  00B48E  5055               	movf	_status_led,w,c	;volatile
 38561                           
 38562                           ; Switch size 1, requested type "space"
 38563                           ; Number of cases is 4, Range of values is 0 to 3
 38564                           ; switch strategies available:
 38565                           ; Name         Instructions Cycles
 38566                           ; simple_byte           13     7 (average)
 38567                           ;	Chosen strategy is simple_byte
 38568  00B490  0A00               	xorlw	0	; case 0
 38569  00B492  B4D8               	btfsc	status,2,c
 38570  00B494  D7DB               	goto	i2l1858
 38571  00B496  0A01               	xorlw	1	; case 1
 38572  00B498  B4D8               	btfsc	status,2,c
 38573  00B49A  D7E5               	goto	i2l13656
 38574  00B49C  0A03               	xorlw	3	; case 2
 38575  00B49E  B4D8               	btfsc	status,2,c
 38576  00B4A0  D7ED               	goto	i2l13662
 38577  00B4A2  0A01               	xorlw	1	; case 3
 38578  00B4A4  A4D8               	btfss	status,2,c
 38579  00B4A6  0012               	return	
 38580  00B4A8  D7D8               	goto	i2l1860
 38581  00B4AA                     __end_ofi2_update_LED:
 38582                           	opt stack 0
 38583                           pclatu	equ	0xFFB
 38584                           pclath	equ	0xFFA
 38585                           tblptru	equ	0xFF8
 38586                           tblptrh	equ	0xFF7
 38587                           tblptrl	equ	0xFF6
 38588                           tablat	equ	0xFF5
 38589                           prodh	equ	0xFF4
 38590                           prodl	equ	0xFF3
 38591                           intcon	equ	0xFF2
 38592                           intcon2	equ	0xFF1
 38593                           intcon3	equ	0xFF0
 38594                           indf0	equ	0xFEF
 38595                           postinc0	equ	0xFEE
 38596                           plusw0	equ	0xFEB
 38597                           fsr0h	equ	0xFEA
 38598                           fsr0l	equ	0xFE9
 38599                           wreg	equ	0xFE8
 38600                           indf1	equ	0xFE7
 38601                           postinc1	equ	0xFE6
 38602                           postdec1	equ	0xFE5
 38603                           plusw1	equ	0xFE3
 38604                           fsr1h	equ	0xFE2
 38605                           fsr1l	equ	0xFE1
 38606                           bsr	equ	0xFE0
 38607                           indf2	equ	0xFDF
 38608                           postinc2	equ	0xFDE
 38609                           postdec2	equ	0xFDD
 38610                           plusw2	equ	0xFDB
 38611                           fsr2h	equ	0xFDA
 38612                           fsr2l	equ	0xFD9
 38613                           status	equ	0xFD8
 38614                           
 38615 ;; *************** function i2_TxPacket *****************
 38616 ;; Defined at:
 38617 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 38618 ;; Parameters:    Size  Location     Type
 38619 ;;  TxPacketLen     1    wreg     unsigned char 
 38620 ;;  CCA             1   10[BANK0 ] unsigned char 
 38621 ;; Auto vars:     Size  Location     Type
 38622 ;;  TxPacketLen     1   31[BANK0 ] unsigned char 
 38623 ;;  TxPacket        4   23[BANK0 ] struct _MIWI_TICK
 38624 ;;  TxPacket        4   19[BANK0 ] struct _MIWI_TICK
 38625 ;;  TxPacket        1   33[BANK0 ] unsigned char 
 38626 ;;  TxPacket        1   32[BANK0 ] unsigned char 
 38627 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 38628 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 38629 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 38630 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 38631 ;; Return value:  Size  Location     Type
 38632 ;;                  1    wreg      unsigned char 
 38633 ;; Registers used:
 38634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38635 ;; Tracked objects:
 38636 ;;		On entry : 0/0
 38637 ;;		On exit  : 0/0
 38638 ;;		Unchanged: 0/0
 38639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38640 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38641 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38642 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38643 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38644 ;;Total ram usage:       24 bytes
 38645 ;; Hardware stack levels used:    1
 38646 ;; Hardware stack levels required when called:    3
 38647 ;; This function calls:
 38648 ;;		i2_MiWi_TickGet
 38649 ;;		i2_RegisterRead
 38650 ;;		i2_RegisterSet
 38651 ;;		i2_SetRFMode
 38652 ;;		i2_WriteFIFO
 38653 ;; This function is called by:
 38654 ;;		_MIWIInterruptHandler
 38655 ;; This function uses a non-reentrant model
 38656 ;;
 38657                           
 38658                           	psect	text118
 38659  00737A                     __ptext118:
 38660                           	opt stack 0
 38661  00737A                     i2_TxPacket:
 38662                           	opt stack 3
 38663                           
 38664                           ;incstack = 0
 38665                           ;i2TxPacket@TxPacketLen stored from wreg
 38666  00737A  0100               	movlb	0	; () banked
 38667  00737C  6FC2               	movwf	i2TxPacket@TxPacketLen& (0+255),b
 38668                           
 38669                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 38670                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 38671                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 38672                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 38673                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 38674                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 38675  00737E  0E03               	movlw	3
 38676  007380  0100               	movlb	0	; () banked
 38677  007382  6FC0               	movwf	i2TxPacket@reTry& (0+255),b
 38678                           
 38679                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 38680  007384  D0C8               	goto	i2l19542
 38681  007386                     i2l19476:
 38682                           
 38683                           ; BSR set to: 0
 38684                           ;drv_mrf_miwi_89xa.c: 305: {
 38685                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 38686                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 38687  007386  0E00               	movlw	0
 38688  007388  0100               	movlb	0	; () banked
 38689  00738A  6FC1               	movwf	i2TxPacket@allowedTxFailure& (0+255),b
 38690  00738C                     i2l262:
 38691                           
 38692                           ; BSR set to: 0
 38693                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 38694  00738C  0E00               	movlw	0
 38695  00738E  0100               	movlb	0	; () banked
 38696  007390  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 38697                           
 38698                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 38699  007392  0E00               	movlw	0
 38700  007394  0100               	movlb	0	; () banked
 38701  007396  6FBF               	movwf	i2TxPacket@CCARetries& (0+255),b
 38702                           
 38703                           ; BSR set to: 0
 38704                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 38705  007398  0100               	movlb	0	; () banked
 38706  00739A  51AD               	movf	i2TxPacket@CCA& (0+255),w,b
 38707  00739C  0100               	movlb	0	; () banked
 38708  00739E  B4D8               	btfsc	status,2,c
 38709  0073A0  D018               	goto	i2l263
 38710  0073A2                     i2l19480:
 38711                           
 38712                           ; BSR set to: 0
 38713                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 38714  0073A2  0E28               	movlw	40
 38715  0073A4  ECAF  F05A         	call	i2_RegisterRead
 38716  0073A8  0100               	movlb	0	; () banked
 38717  0073AA  6FC4               	movwf	i2TxPacket@rssival& (0+255),b
 38718                           
 38719                           ; BSR set to: 0
 38720                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 38721  0073AC  0100               	movlb	0	; () banked
 38722  0073AE  90D8               	bcf	status,0,c
 38723  0073B0  31C4               	rrcf	i2TxPacket@rssival& (0+255),w,b
 38724  0073B2  0100               	movlb	0	; () banked
 38725  0073B4  6FC4               	movwf	i2TxPacket@rssival& (0+255),b
 38726                           
 38727                           ; BSR set to: 0
 38728                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 38729  0073B6  0E41               	movlw	65
 38730  0073B8  0100               	movlb	0	; () banked
 38731  0073BA  65C4               	cpfsgt	i2TxPacket@rssival& (0+255),b
 38732  0073BC  D00A               	goto	i2l263
 38733                           
 38734                           ; BSR set to: 0
 38735                           ;drv_mrf_miwi_89xa.c: 326: {
 38736                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 38737  0073BE  0100               	movlb	0	; () banked
 38738  0073C0  2BBF               	incf	i2TxPacket@CCARetries& (0+255),f,b
 38739  0073C2  05BF               	decf	i2TxPacket@CCARetries& (0+255),w,b
 38740  0073C4  0100               	movlb	0	; () banked
 38741  0073C6  6FAE               	movwf	??i2_TxPacket& (0+255),b
 38742  0073C8  0E04               	movlw	4
 38743  0073CA  0100               	movlb	0	; () banked
 38744  0073CC  65AE               	cpfsgt	??i2_TxPacket& (0+255),b
 38745  0073CE  D7E9               	goto	i2l19480
 38746  0073D0  0012               	return	
 38747  0073D2                     i2l263:
 38748                           
 38749                           ; BSR set to: 0
 38750                           ;drv_mrf_miwi_89xa.c: 333: }
 38751                           ;drv_mrf_miwi_89xa.c: 334: }
 38752                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 38753  0073D2  98F2               	bcf	intcon,4,c	;volatile
 38754                           
 38755                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 38756  0073D4  96F0               	bcf	intcon3,3,c	;volatile
 38757                           
 38758                           ; BSR set to: 0
 38759                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 38760  0073D6  0E20               	movlw	32
 38761  0073D8  EC15  F056         	call	i2_SetRFMode
 38762                           
 38763                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 38764  0073DC  0E1A               	movlw	26
 38765  0073DE  0100               	movlb	0	; () banked
 38766  0073E0  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 38767  0073E2  0EC9               	movlw	201
 38768  0073E4  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 38769  0073E6  EC4A  F05B         	call	i2_RegisterSet	;wreg free
 38770                           
 38771                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 38772  0073EA  0100               	movlb	0	; () banked
 38773  0073EC  51C2               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 38774  0073EE  ECB0  F05B         	call	i2_WriteFIFO
 38775                           
 38776                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 38777  0073F2  0E00               	movlw	0
 38778  0073F4  0100               	movlb	0	; () banked
 38779  0073F6  6FC3               	movwf	i2TxPacket@i& (0+255),b
 38780  0073F8  D00E               	goto	i2l19502
 38781  0073FA                     i2l19498:
 38782                           
 38783                           ; BSR set to: 0
 38784                           ;drv_mrf_miwi_89xa.c: 346: {
 38785                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 38786  0073FA  0100               	movlb	0	; () banked
 38787  0073FC  51C3               	movf	i2TxPacket@i& (0+255),w,b
 38788  0073FE  0D01               	mullw	1
 38789  007400  0E66               	movlw	low _MACTxBuffer
 38790  007402  24F3               	addwf	prodl,w,c
 38791  007404  6ED9               	movwf	fsr2l,c
 38792  007406  0E02               	movlw	high _MACTxBuffer
 38793  007408  20F4               	addwfc	prodh,w,c
 38794  00740A  6EDA               	movwf	fsr2h,c
 38795  00740C  50DF               	movf	indf2,w,c
 38796  00740E  ECB0  F05B         	call	i2_WriteFIFO
 38797  007412  0100               	movlb	0	; () banked
 38798  007414  2BC3               	incf	i2TxPacket@i& (0+255),f,b
 38799  007416                     i2l19502:
 38800                           
 38801                           ; BSR set to: 0
 38802  007416  0100               	movlb	0	; () banked
 38803  007418  51C2               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 38804  00741A  0100               	movlb	0	; () banked
 38805  00741C  5DC3               	subwf	i2TxPacket@i& (0+255),w,b
 38806  00741E  A0D8               	btfss	status,0,c
 38807  007420  D7EC               	goto	i2l19498
 38808                           
 38809                           ; BSR set to: 0
 38810                           ;drv_mrf_miwi_89xa.c: 348: }
 38811                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 38812                           
 38813                           ; BSR set to: 0
 38814  007422  0E80               	movlw	128
 38815  007424  EC15  F056         	call	i2_SetRFMode
 38816                           
 38817                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 38818  007428  88F2               	bsf	intcon,4,c	;volatile
 38819                           
 38820                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 38821  00742A  86F0               	bsf	intcon3,3,c	;volatile
 38822  00742C                     i2l19510:
 38823  00742C  0100               	movlb	0	; () banked
 38824  00742E  5199               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 38825  007430  B4D8               	btfsc	status,2,c
 38826                           
 38827                           ; BSR set to: 0
 38828  007432  B0F0               	btfsc	intcon3,0,c	;volatile
 38829  007434  D001               	goto	i2l19514
 38830  007436  D7FA               	goto	i2l19510
 38831  007438                     i2l19514:
 38832                           
 38833                           ; BSR set to: 0
 38834                           ;drv_mrf_miwi_89xa.c: 357: };
 38835                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 38836  007438  0E00               	movlw	0
 38837  00743A  0100               	movlb	0	; () banked
 38838  00743C  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 38839                           
 38840                           ; BSR set to: 0
 38841                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 38842  00743E  0E20               	movlw	32
 38843  007440  EC15  F056         	call	i2_SetRFMode
 38844                           
 38845                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 38846  007444  0E60               	movlw	96
 38847  007446  EC15  F056         	call	i2_SetRFMode
 38848                           
 38849                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 38850  00744A  0102               	movlb	2	; () banked
 38851  00744C  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 38852  00744E  D05F               	goto	i2l19540
 38853                           
 38854                           ; BSR set to: 2
 38855                           ;drv_mrf_miwi_89xa.c: 367: {
 38856                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 38857  007450  C267  F09D         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 38858                           
 38859                           ; BSR set to: 2
 38860                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 38861  007454  ECB8  F058         	call	i2_MiWi_TickGet	;wreg free
 38862  007458  C0A3  F0B6         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 38863  00745C  C0A4  F0B7         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 38864  007460  C0A5  F0B8         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 38865  007464  C0A6  F0B9         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 38866  007468                     i2l19526:
 38867                           
 38868                           ;drv_mrf_miwi_89xa.c: 371: {
 38869                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 38870  007468  0100               	movlb	0	; () banked
 38871  00746A  519F               	movf	_hasAck& (0+255),w,b	;volatile
 38872  00746C  B4D8               	btfsc	status,2,c
 38873  00746E  D004               	goto	i2l19530
 38874                           
 38875                           ; BSR set to: 0
 38876                           ;drv_mrf_miwi_89xa.c: 373: {
 38877                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 38878  007470  0E01               	movlw	1
 38879  007472  0100               	movlb	0	; () banked
 38880  007474  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38881                           
 38882                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 38883  007476  0012               	return	
 38884  007478                     i2l19530:
 38885                           
 38886                           ; BSR set to: 0
 38887                           ;drv_mrf_miwi_89xa.c: 376: }
 38888                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 38889  007478  ECB8  F058         	call	i2_MiWi_TickGet	;wreg free
 38890  00747C  C0A3  F0BA         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 38891  007480  C0A4  F0BB         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 38892  007484  C0A5  F0BC         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 38893  007488  C0A6  F0BD         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 38894                           
 38895                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 38896  00748C  C0B6  F0AE         	movff	i2TxPacket@t1,??i2_TxPacket
 38897  007490  C0B7  F0AF         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 38898  007494  C0B8  F0B0         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 38899  007498  C0B9  F0B1         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 38900  00749C  0100               	movlb	0	; () banked
 38901  00749E  1FAE               	comf	??i2_TxPacket& (0+255),f,b
 38902  0074A0  1FAF               	comf	(??i2_TxPacket+1)& (0+255),f,b
 38903  0074A2  1FB0               	comf	(??i2_TxPacket+2)& (0+255),f,b
 38904  0074A4  1FB1               	comf	(??i2_TxPacket+3)& (0+255),f,b
 38905  0074A6  2BAE               	incf	??i2_TxPacket& (0+255),f,b
 38906  0074A8  0E00               	movlw	0
 38907  0074AA  23AF               	addwfc	(??i2_TxPacket+1)& (0+255),f,b
 38908  0074AC  23B0               	addwfc	(??i2_TxPacket+2)& (0+255),f,b
 38909  0074AE  23B1               	addwfc	(??i2_TxPacket+3)& (0+255),f,b
 38910  0074B0  0100               	movlb	0	; () banked
 38911  0074B2  51BA               	movf	i2TxPacket@t2& (0+255),w,b
 38912  0074B4  0100               	movlb	0	; () banked
 38913  0074B6  25AE               	addwf	??i2_TxPacket& (0+255),w,b
 38914  0074B8  0100               	movlb	0	; () banked
 38915  0074BA  6FB2               	movwf	(??i2_TxPacket+4)& (0+255),b
 38916  0074BC  0100               	movlb	0	; () banked
 38917  0074BE  51BB               	movf	(i2TxPacket@t2+1)& (0+255),w,b
 38918  0074C0  0100               	movlb	0	; () banked
 38919  0074C2  21AF               	addwfc	(??i2_TxPacket+1)& (0+255),w,b
 38920  0074C4  0100               	movlb	0	; () banked
 38921  0074C6  6FB3               	movwf	(??i2_TxPacket+5)& (0+255),b
 38922  0074C8  0100               	movlb	0	; () banked
 38923  0074CA  51BC               	movf	(i2TxPacket@t2+2)& (0+255),w,b
 38924  0074CC  0100               	movlb	0	; () banked
 38925  0074CE  21B0               	addwfc	(??i2_TxPacket+2)& (0+255),w,b
 38926  0074D0  0100               	movlb	0	; () banked
 38927  0074D2  6FB4               	movwf	(??i2_TxPacket+6)& (0+255),b
 38928  0074D4  0100               	movlb	0	; () banked
 38929  0074D6  51BD               	movf	(i2TxPacket@t2+3)& (0+255),w,b
 38930  0074D8  0100               	movlb	0	; () banked
 38931  0074DA  21B1               	addwfc	(??i2_TxPacket+3)& (0+255),w,b
 38932  0074DC  0100               	movlb	0	; () banked
 38933  0074DE  6FB5               	movwf	(??i2_TxPacket+7)& (0+255),b
 38934  0074E0  0100               	movlb	0	; () banked
 38935  0074E2  51B5               	movf	(??i2_TxPacket+7)& (0+255),w,b
 38936  0074E4  0100               	movlb	0	; () banked
 38937  0074E6  11B4               	iorwf	(??i2_TxPacket+6)& (0+255),w,b
 38938  0074E8  E108               	bnz	i2l19536
 38939  0074EA  0EA9               	movlw	169
 38940  0074EC  0100               	movlb	0	; () banked
 38941  0074EE  5DB2               	subwf	(??i2_TxPacket+4)& (0+255),w,b
 38942  0074F0  0E61               	movlw	97
 38943  0074F2  0100               	movlb	0	; () banked
 38944  0074F4  59B3               	subwfb	(??i2_TxPacket+5)& (0+255),w,b
 38945  0074F6  A0D8               	btfss	status,0,c
 38946  0074F8  D7B7               	goto	i2l19526
 38947  0074FA                     i2l19536:
 38948                           
 38949                           ; BSR set to: 0
 38950                           ;drv_mrf_miwi_89xa.c: 381: }
 38951                           ;drv_mrf_miwi_89xa.c: 382: }
 38952                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 38953  0074FA  0100               	movlb	0	; () banked
 38954  0074FC  2BC1               	incf	i2TxPacket@allowedTxFailure& (0+255),f,b
 38955  0074FE  05C1               	decf	i2TxPacket@allowedTxFailure& (0+255),w,b
 38956  007500  0100               	movlb	0	; () banked
 38957  007502  6FAE               	movwf	??i2_TxPacket& (0+255),b
 38958  007504  0E04               	movlw	4
 38959  007506  0100               	movlb	0	; () banked
 38960  007508  61AE               	cpfslt	??i2_TxPacket& (0+255),b
 38961  00750A  D005               	goto	i2l19542
 38962  00750C  D73F               	goto	i2l262
 38963  00750E                     i2l19540:
 38964                           
 38965                           ;drv_mrf_miwi_89xa.c: 388: else
 38966                           ;drv_mrf_miwi_89xa.c: 390: {
 38967                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 38968  00750E  0E01               	movlw	1
 38969  007510  0100               	movlb	0	; () banked
 38970  007512  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38971                           
 38972                           ;drv_mrf_miwi_89xa.c: 392: goto TX_END_HERE;
 38973  007514  0012               	return	
 38974  007516                     i2l19542:
 38975                           
 38976                           ; BSR set to: 0
 38977  007516  0100               	movlb	0	; () banked
 38978  007518  07C0               	decf	i2TxPacket@reTry& (0+255),f,b
 38979  00751A  0100               	movlb	0	; () banked
 38980  00751C  29C0               	incf	i2TxPacket@reTry& (0+255),w,b
 38981  00751E  A4D8               	btfss	status,2,c
 38982  007520  D732               	goto	i2l19476
 38983                           
 38984                           ; BSR set to: 0
 38985                           ;drv_mrf_miwi_89xa.c: 393: }
 38986                           ;drv_mrf_miwi_89xa.c: 394: }
 38987                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 38988                           
 38989                           ; BSR set to: 0
 38990  007522  0E00               	movlw	0
 38991  007524  0100               	movlb	0	; () banked
 38992  007526  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38993                           
 38994                           ; BSR set to: 0
 38995                           
 38996                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 38997  007528  0012               	return	
 38998  00752A                     __end_ofi2_TxPacket:
 38999                           	opt stack 0
 39000                           pclatu	equ	0xFFB
 39001                           pclath	equ	0xFFA
 39002                           tblptru	equ	0xFF8
 39003                           tblptrh	equ	0xFF7
 39004                           tblptrl	equ	0xFF6
 39005                           tablat	equ	0xFF5
 39006                           prodh	equ	0xFF4
 39007                           prodl	equ	0xFF3
 39008                           intcon	equ	0xFF2
 39009                           intcon2	equ	0xFF1
 39010                           intcon3	equ	0xFF0
 39011                           indf0	equ	0xFEF
 39012                           postinc0	equ	0xFEE
 39013                           plusw0	equ	0xFEB
 39014                           fsr0h	equ	0xFEA
 39015                           fsr0l	equ	0xFE9
 39016                           wreg	equ	0xFE8
 39017                           indf1	equ	0xFE7
 39018                           postinc1	equ	0xFE6
 39019                           postdec1	equ	0xFE5
 39020                           plusw1	equ	0xFE3
 39021                           fsr1h	equ	0xFE2
 39022                           fsr1l	equ	0xFE1
 39023                           bsr	equ	0xFE0
 39024                           indf2	equ	0xFDF
 39025                           postinc2	equ	0xFDE
 39026                           postdec2	equ	0xFDD
 39027                           plusw2	equ	0xFDB
 39028                           fsr2h	equ	0xFDA
 39029                           fsr2l	equ	0xFD9
 39030                           status	equ	0xFD8
 39031                           
 39032 ;; *************** function i2_WriteFIFO *****************
 39033 ;; Defined at:
 39034 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39035 ;; Parameters:    Size  Location     Type
 39036 ;;  Data            1    wreg     unsigned char 
 39037 ;; Auto vars:     Size  Location     Type
 39038 ;;  Data            1    2[BANK0 ] unsigned char 
 39039 ;;  WriteFIFO       1    4[BANK0 ] unsigned char 
 39040 ;;  WriteFIFO       1    3[BANK0 ] unsigned char 
 39041 ;; Return value:  Size  Location     Type
 39042 ;;		None               void
 39043 ;; Registers used:
 39044 ;;		wreg, status,2, cstack
 39045 ;; Tracked objects:
 39046 ;;		On entry : 0/0
 39047 ;;		On exit  : 0/0
 39048 ;;		Unchanged: 0/0
 39049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39051 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39053 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39054 ;;Total ram usage:        3 bytes
 39055 ;; Hardware stack levels used:    1
 39056 ;; Hardware stack levels required when called:    1
 39057 ;; This function calls:
 39058 ;;		i2_SPIPut
 39059 ;; This function is called by:
 39060 ;;		i2_TxPacket
 39061 ;; This function uses a non-reentrant model
 39062 ;;
 39063                           
 39064                           	psect	text119
 39065  00B760                     __ptext119:
 39066                           	opt stack 0
 39067  00B760                     i2_WriteFIFO:
 39068                           	opt stack 4
 39069                           
 39070                           ; BSR set to: 0
 39071                           ;incstack = 0
 39072                           ;i2WriteFIFO@Data stored from wreg
 39073  00B760  0100               	movlb	0	; () banked
 39074  00B762  6FA5               	movwf	i2WriteFIFO@Data& (0+255),b
 39075                           
 39076                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39077  00B764  0E00               	movlw	0
 39078  00B766  B6F0               	btfsc	intcon3,3,c	;volatile
 39079  00B768  0E01               	movlw	1
 39080  00B76A  0100               	movlb	0	; () banked
 39081  00B76C  6FA6               	movwf	i2WriteFIFO@IRQ1select& (0+255),b
 39082                           
 39083                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 39084  00B76E  0E00               	movlw	0
 39085  00B770  B8F2               	btfsc	intcon,4,c	;volatile
 39086  00B772  0E01               	movlw	1
 39087  00B774  0100               	movlb	0	; () banked
 39088  00B776  6FA7               	movwf	i2WriteFIFO@IRQ0select& (0+255),b
 39089                           
 39090                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 39091  00B778  98F2               	bcf	intcon,4,c	;volatile
 39092                           
 39093                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 39094  00B77A  96F0               	bcf	intcon3,3,c	;volatile
 39095                           
 39096                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 39097  00B77C  9C8B               	bcf	3979,6,c	;volatile
 39098                           
 39099                           ; BSR set to: 0
 39100                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 39101  00B77E  0100               	movlb	0	; () banked
 39102  00B780  51A5               	movf	i2WriteFIFO@Data& (0+255),w,b
 39103  00B782  EC8B  F05D         	call	i2_SPIPut
 39104                           
 39105                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 39106  00B786  8C8B               	bsf	3979,6,c	;volatile
 39107                           
 39108                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 39109  00B788  0100               	movlb	0	; () banked
 39110  00B78A  B1A6               	btfsc	i2WriteFIFO@IRQ1select& (0+255),0,b
 39111  00B78C  D002               	bra	i2u1362_45
 39112  00B78E  96F0               	bcf	intcon3,3,c	;volatile
 39113  00B790  D001               	bra	i2u1362_46
 39114  00B792                     i2u1362_45:
 39115  00B792  86F0               	bsf	intcon3,3,c	;volatile
 39116  00B794                     i2u1362_46:
 39117                           
 39118                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 39119  00B794  0100               	movlb	0	; () banked
 39120  00B796  B1A7               	btfsc	i2WriteFIFO@IRQ0select& (0+255),0,b
 39121  00B798  D002               	bra	i2u1363_45
 39122  00B79A  98F2               	bcf	intcon,4,c	;volatile
 39123  00B79C  D001               	bra	i2u1363_46
 39124  00B79E                     i2u1363_45:
 39125  00B79E  88F2               	bsf	intcon,4,c	;volatile
 39126  00B7A0                     i2u1363_46:
 39127  00B7A0  0012               	return		;funcret
 39128  00B7A2                     __end_ofi2_WriteFIFO:
 39129                           	opt stack 0
 39130                           pclatu	equ	0xFFB
 39131                           pclath	equ	0xFFA
 39132                           tblptru	equ	0xFF8
 39133                           tblptrh	equ	0xFF7
 39134                           tblptrl	equ	0xFF6
 39135                           tablat	equ	0xFF5
 39136                           prodh	equ	0xFF4
 39137                           prodl	equ	0xFF3
 39138                           intcon	equ	0xFF2
 39139                           intcon2	equ	0xFF1
 39140                           intcon3	equ	0xFF0
 39141                           indf0	equ	0xFEF
 39142                           postinc0	equ	0xFEE
 39143                           plusw0	equ	0xFEB
 39144                           fsr0h	equ	0xFEA
 39145                           fsr0l	equ	0xFE9
 39146                           wreg	equ	0xFE8
 39147                           indf1	equ	0xFE7
 39148                           postinc1	equ	0xFE6
 39149                           postdec1	equ	0xFE5
 39150                           plusw1	equ	0xFE3
 39151                           fsr1h	equ	0xFE2
 39152                           fsr1l	equ	0xFE1
 39153                           bsr	equ	0xFE0
 39154                           indf2	equ	0xFDF
 39155                           postinc2	equ	0xFDE
 39156                           postdec2	equ	0xFDD
 39157                           plusw2	equ	0xFDB
 39158                           fsr2h	equ	0xFDA
 39159                           fsr2l	equ	0xFD9
 39160                           status	equ	0xFD8
 39161                           
 39162 ;; *************** function i2_SetRFMode *****************
 39163 ;; Defined at:
 39164 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39165 ;; Parameters:    Size  Location     Type
 39166 ;;  mode            1    wreg     unsigned char 
 39167 ;; Auto vars:     Size  Location     Type
 39168 ;;  mode            1    6[BANK0 ] unsigned char 
 39169 ;; Return value:  Size  Location     Type
 39170 ;;		None               void
 39171 ;; Registers used:
 39172 ;;		wreg, status,2, status,0, cstack
 39173 ;; Tracked objects:
 39174 ;;		On entry : 0/0
 39175 ;;		On exit  : 0/0
 39176 ;;		Unchanged: 0/0
 39177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39182 ;;Total ram usage:        1 bytes
 39183 ;; Hardware stack levels used:    1
 39184 ;; Hardware stack levels required when called:    2
 39185 ;; This function calls:
 39186 ;;		i2_RegisterSet
 39187 ;; This function is called by:
 39188 ;;		i2_TxPacket
 39189 ;; This function uses a non-reentrant model
 39190 ;;
 39191                           
 39192                           	psect	text120
 39193  00AC2A                     __ptext120:
 39194                           	opt stack 0
 39195  00AC2A                     i2_SetRFMode:
 39196                           	opt stack 3
 39197                           
 39198                           ;incstack = 0
 39199                           ;i2SetRFMode@mode stored from wreg
 39200  00AC2A  0100               	movlb	0	; () banked
 39201  00AC2C  6FA9               	movwf	i2SetRFMode@mode& (0+255),b
 39202                           
 39203                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 39204  00AC2E  D037               	goto	i2l12942
 39205  00AC30                     i2l12920:
 39206                           
 39207                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 39208  00AC30  0E00               	movlw	0
 39209  00AC32  0100               	movlb	0	; () banked
 39210  00AC34  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39211  00AC36  0E96               	movlw	150
 39212  00AC38  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39213  00AC3A  EC4A  F05B         	call	i2_RegisterSet	;wreg free
 39214                           
 39215                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 39216  00AC3E  0E80               	movlw	128
 39217  00AC40  0100               	movlb	0	; () banked
 39218  00AC42  6F9B               	movwf	_RF_Mode& (0+255),b
 39219                           
 39220                           ;drv_mrf_miwi_89xa.c: 672: break;
 39221  00AC44  0012               	return	
 39222  00AC46                     i2l12924:
 39223                           
 39224                           ; BSR set to: 0
 39225                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 39226  00AC46  0E00               	movlw	0
 39227  00AC48  0100               	movlb	0	; () banked
 39228  00AC4A  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39229  00AC4C  0E76               	movlw	118
 39230  00AC4E  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39231  00AC50  EC4A  F05B         	call	i2_RegisterSet	;wreg free
 39232                           
 39233                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 39234  00AC54  0E60               	movlw	96
 39235  00AC56  0100               	movlb	0	; () banked
 39236  00AC58  6F9B               	movwf	_RF_Mode& (0+255),b
 39237                           
 39238                           ;drv_mrf_miwi_89xa.c: 676: break;
 39239  00AC5A  0012               	return	
 39240  00AC5C                     i2l12928:
 39241                           
 39242                           ; BSR set to: 0
 39243                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 39244  00AC5C  0E00               	movlw	0
 39245  00AC5E  0100               	movlb	0	; () banked
 39246  00AC60  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39247  00AC62  0E56               	movlw	86
 39248  00AC64  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39249  00AC66  EC4A  F05B         	call	i2_RegisterSet	;wreg free
 39250                           
 39251                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 39252  00AC6A  0E40               	movlw	64
 39253  00AC6C  0100               	movlb	0	; () banked
 39254  00AC6E  6F9B               	movwf	_RF_Mode& (0+255),b
 39255                           
 39256                           ;drv_mrf_miwi_89xa.c: 680: break;
 39257  00AC70  0012               	return	
 39258  00AC72                     i2l12932:
 39259                           
 39260                           ; BSR set to: 0
 39261                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 39262  00AC72  0E00               	movlw	0
 39263  00AC74  0100               	movlb	0	; () banked
 39264  00AC76  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39265  00AC78  0E36               	movlw	54
 39266  00AC7A  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39267  00AC7C  EC4A  F05B         	call	i2_RegisterSet	;wreg free
 39268                           
 39269                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 39270  00AC80  0E20               	movlw	32
 39271  00AC82  0100               	movlb	0	; () banked
 39272  00AC84  6F9B               	movwf	_RF_Mode& (0+255),b
 39273                           
 39274                           ;drv_mrf_miwi_89xa.c: 684: break;
 39275  00AC86  0012               	return	
 39276  00AC88                     i2l12936:
 39277                           
 39278                           ; BSR set to: 0
 39279                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 39280  00AC88  0E00               	movlw	0
 39281  00AC8A  0100               	movlb	0	; () banked
 39282  00AC8C  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39283  00AC8E  0E16               	movlw	22
 39284  00AC90  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39285  00AC92  EC4A  F05B         	call	i2_RegisterSet	;wreg free
 39286                           
 39287                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 39288  00AC96  0E00               	movlw	0
 39289  00AC98  0100               	movlb	0	; () banked
 39290  00AC9A  6F9B               	movwf	_RF_Mode& (0+255),b
 39291                           
 39292                           ; BSR set to: 0
 39293                           ;drv_mrf_miwi_89xa.c: 689: }
 39294                           
 39295                           ;drv_mrf_miwi_89xa.c: 688: break;
 39296  00AC9C  0012               	return	
 39297  00AC9E                     i2l12942:
 39298  00AC9E  0100               	movlb	0	; () banked
 39299  00ACA0  51A9               	movf	i2SetRFMode@mode& (0+255),w,b
 39300                           
 39301                           ; Switch size 1, requested type "space"
 39302                           ; Number of cases is 5, Range of values is 0 to 128
 39303                           ; switch strategies available:
 39304                           ; Name         Instructions Cycles
 39305                           ; simple_byte           16     9 (average)
 39306                           ;	Chosen strategy is simple_byte
 39307  00ACA2  0A00               	xorlw	0	; case 0
 39308  00ACA4  B4D8               	btfsc	status,2,c
 39309  00ACA6  D7F0               	goto	i2l12936
 39310  00ACA8  0A20               	xorlw	32	; case 32
 39311  00ACAA  B4D8               	btfsc	status,2,c
 39312  00ACAC  D7E2               	goto	i2l12932
 39313  00ACAE  0A60               	xorlw	96	; case 64
 39314  00ACB0  B4D8               	btfsc	status,2,c
 39315  00ACB2  D7D4               	goto	i2l12928
 39316  00ACB4  0A20               	xorlw	32	; case 96
 39317  00ACB6  B4D8               	btfsc	status,2,c
 39318  00ACB8  D7C6               	goto	i2l12924
 39319  00ACBA  0AE0               	xorlw	224	; case 128
 39320  00ACBC  A4D8               	btfss	status,2,c
 39321  00ACBE  0012               	return	
 39322  00ACC0  D7B7               	goto	i2l12920
 39323  00ACC2                     __end_ofi2_SetRFMode:
 39324                           	opt stack 0
 39325                           pclatu	equ	0xFFB
 39326                           pclath	equ	0xFFA
 39327                           tblptru	equ	0xFF8
 39328                           tblptrh	equ	0xFF7
 39329                           tblptrl	equ	0xFF6
 39330                           tablat	equ	0xFF5
 39331                           prodh	equ	0xFF4
 39332                           prodl	equ	0xFF3
 39333                           intcon	equ	0xFF2
 39334                           intcon2	equ	0xFF1
 39335                           intcon3	equ	0xFF0
 39336                           indf0	equ	0xFEF
 39337                           postinc0	equ	0xFEE
 39338                           plusw0	equ	0xFEB
 39339                           fsr0h	equ	0xFEA
 39340                           fsr0l	equ	0xFE9
 39341                           wreg	equ	0xFE8
 39342                           indf1	equ	0xFE7
 39343                           postinc1	equ	0xFE6
 39344                           postdec1	equ	0xFE5
 39345                           plusw1	equ	0xFE3
 39346                           fsr1h	equ	0xFE2
 39347                           fsr1l	equ	0xFE1
 39348                           bsr	equ	0xFE0
 39349                           indf2	equ	0xFDF
 39350                           postinc2	equ	0xFDE
 39351                           postdec2	equ	0xFDD
 39352                           plusw2	equ	0xFDB
 39353                           fsr2h	equ	0xFDA
 39354                           fsr2l	equ	0xFD9
 39355                           status	equ	0xFD8
 39356                           
 39357 ;; *************** function i2_RegisterSet *****************
 39358 ;; Defined at:
 39359 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39360 ;; Parameters:    Size  Location     Type
 39361 ;;  setting         2    2[BANK0 ] unsigned int 
 39362 ;; Auto vars:     Size  Location     Type
 39363 ;;  RegisterSet     1    5[BANK0 ] unsigned char 
 39364 ;;  RegisterSet     1    4[BANK0 ] unsigned char 
 39365 ;; Return value:  Size  Location     Type
 39366 ;;		None               void
 39367 ;; Registers used:
 39368 ;;		wreg, status,2, cstack
 39369 ;; Tracked objects:
 39370 ;;		On entry : 0/0
 39371 ;;		On exit  : 0/0
 39372 ;;		Unchanged: 0/0
 39373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39375 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39378 ;;Total ram usage:        4 bytes
 39379 ;; Hardware stack levels used:    1
 39380 ;; Hardware stack levels required when called:    1
 39381 ;; This function calls:
 39382 ;;		i2_SPIPut
 39383 ;; This function is called by:
 39384 ;;		i2_TxPacket
 39385 ;;		i2_SetRFMode
 39386 ;; This function uses a non-reentrant model
 39387 ;;
 39388                           
 39389                           	psect	text121
 39390  00B694                     __ptext121:
 39391                           	opt stack 0
 39392  00B694                     i2_RegisterSet:
 39393                           	opt stack 3
 39394                           
 39395                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39396                           
 39397                           ; BSR set to: 0
 39398                           ;incstack = 0
 39399  00B694  0E00               	movlw	0
 39400  00B696  B6F0               	btfsc	intcon3,3,c	;volatile
 39401  00B698  0E01               	movlw	1
 39402  00B69A  0100               	movlb	0	; () banked
 39403  00B69C  6FA7               	movwf	i2RegisterSet@IRQ1select& (0+255),b
 39404                           
 39405                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 39406  00B69E  0E00               	movlw	0
 39407  00B6A0  B8F2               	btfsc	intcon,4,c	;volatile
 39408  00B6A2  0E01               	movlw	1
 39409  00B6A4  0100               	movlb	0	; () banked
 39410  00B6A6  6FA8               	movwf	i2RegisterSet@IRQ0select& (0+255),b
 39411                           
 39412                           ; BSR set to: 0
 39413                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 39414  00B6A8  98F2               	bcf	intcon,4,c	;volatile
 39415                           
 39416                           ; BSR set to: 0
 39417                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 39418  00B6AA  96F0               	bcf	intcon3,3,c	;volatile
 39419                           
 39420                           ; BSR set to: 0
 39421                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 39422  00B6AC  968A               	bcf	3978,3,c	;volatile
 39423                           
 39424                           ; BSR set to: 0
 39425                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 39426  00B6AE  0100               	movlb	0	; () banked
 39427  00B6B0  51A6               	movf	(i2RegisterSet@setting+1)& (0+255),w,b
 39428  00B6B2  EC8B  F05D         	call	i2_SPIPut
 39429                           
 39430                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 39431  00B6B6  0100               	movlb	0	; () banked
 39432  00B6B8  51A5               	movf	i2RegisterSet@setting& (0+255),w,b
 39433  00B6BA  EC8B  F05D         	call	i2_SPIPut
 39434                           
 39435                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 39436  00B6BE  868A               	bsf	3978,3,c	;volatile
 39437                           
 39438                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 39439  00B6C0  0100               	movlb	0	; () banked
 39440  00B6C2  B1A7               	btfsc	i2RegisterSet@IRQ1select& (0+255),0,b
 39441  00B6C4  D002               	bra	i2u1160_45
 39442  00B6C6  96F0               	bcf	intcon3,3,c	;volatile
 39443  00B6C8  D001               	bra	i2u1160_46
 39444  00B6CA                     i2u1160_45:
 39445  00B6CA  86F0               	bsf	intcon3,3,c	;volatile
 39446  00B6CC                     i2u1160_46:
 39447                           
 39448                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 39449  00B6CC  0100               	movlb	0	; () banked
 39450  00B6CE  B1A8               	btfsc	i2RegisterSet@IRQ0select& (0+255),0,b
 39451  00B6D0  D002               	bra	i2u1161_45
 39452  00B6D2  98F2               	bcf	intcon,4,c	;volatile
 39453  00B6D4  D001               	bra	i2u1161_46
 39454  00B6D6                     i2u1161_45:
 39455  00B6D6  88F2               	bsf	intcon,4,c	;volatile
 39456  00B6D8                     i2u1161_46:
 39457  00B6D8  0012               	return		;funcret
 39458  00B6DA                     __end_ofi2_RegisterSet:
 39459                           	opt stack 0
 39460                           pclatu	equ	0xFFB
 39461                           pclath	equ	0xFFA
 39462                           tblptru	equ	0xFF8
 39463                           tblptrh	equ	0xFF7
 39464                           tblptrl	equ	0xFF6
 39465                           tablat	equ	0xFF5
 39466                           prodh	equ	0xFF4
 39467                           prodl	equ	0xFF3
 39468                           intcon	equ	0xFF2
 39469                           intcon2	equ	0xFF1
 39470                           intcon3	equ	0xFF0
 39471                           indf0	equ	0xFEF
 39472                           postinc0	equ	0xFEE
 39473                           plusw0	equ	0xFEB
 39474                           fsr0h	equ	0xFEA
 39475                           fsr0l	equ	0xFE9
 39476                           wreg	equ	0xFE8
 39477                           indf1	equ	0xFE7
 39478                           postinc1	equ	0xFE6
 39479                           postdec1	equ	0xFE5
 39480                           plusw1	equ	0xFE3
 39481                           fsr1h	equ	0xFE2
 39482                           fsr1l	equ	0xFE1
 39483                           bsr	equ	0xFE0
 39484                           indf2	equ	0xFDF
 39485                           postinc2	equ	0xFDE
 39486                           postdec2	equ	0xFDD
 39487                           plusw2	equ	0xFDB
 39488                           fsr2h	equ	0xFDA
 39489                           fsr2l	equ	0xFD9
 39490                           status	equ	0xFD8
 39491                           
 39492 ;; *************** function i2_RegisterRead *****************
 39493 ;; Defined at:
 39494 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39495 ;; Parameters:    Size  Location     Type
 39496 ;;  address         1    wreg     unsigned char 
 39497 ;; Auto vars:     Size  Location     Type
 39498 ;;  address         1    5[BANK0 ] unsigned char 
 39499 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 39500 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 39501 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 39502 ;; Return value:  Size  Location     Type
 39503 ;;                  1    wreg      unsigned char 
 39504 ;; Registers used:
 39505 ;;		wreg, status,2, status,0, cstack
 39506 ;; Tracked objects:
 39507 ;;		On entry : 0/0
 39508 ;;		On exit  : 0/0
 39509 ;;		Unchanged: 0/0
 39510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39512 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39514 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39515 ;;Total ram usage:        4 bytes
 39516 ;; Hardware stack levels used:    1
 39517 ;; Hardware stack levels required when called:    2
 39518 ;; This function calls:
 39519 ;;		i2_SPIGet
 39520 ;;		i2_SPIPut
 39521 ;; This function is called by:
 39522 ;;		_MIWIInterruptHandler
 39523 ;;		i2_TxPacket
 39524 ;; This function uses a non-reentrant model
 39525 ;;
 39526                           
 39527                           	psect	text122
 39528  00B55E                     __ptext122:
 39529                           	opt stack 0
 39530  00B55E                     i2_RegisterRead:
 39531                           	opt stack 3
 39532                           
 39533                           ;incstack = 0
 39534                           ;i2RegisterRead@address stored from wreg
 39535  00B55E  0100               	movlb	0	; () banked
 39536  00B560  6FA8               	movwf	i2RegisterRead@address& (0+255),b
 39537                           
 39538                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 39539                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39540  00B562  0E00               	movlw	0
 39541  00B564  B6F0               	btfsc	intcon3,3,c	;volatile
 39542  00B566  0E01               	movlw	1
 39543  00B568  0100               	movlb	0	; () banked
 39544  00B56A  6FA6               	movwf	i2RegisterRead@IRQ1select& (0+255),b
 39545                           
 39546                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 39547  00B56C  0E00               	movlw	0
 39548  00B56E  B8F2               	btfsc	intcon,4,c	;volatile
 39549  00B570  0E01               	movlw	1
 39550  00B572  0100               	movlb	0	; () banked
 39551  00B574  6FA7               	movwf	i2RegisterRead@IRQ0select& (0+255),b
 39552                           
 39553                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 39554  00B576  98F2               	bcf	intcon,4,c	;volatile
 39555                           
 39556                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 39557  00B578  96F0               	bcf	intcon3,3,c	;volatile
 39558                           
 39559                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 39560  00B57A  968A               	bcf	3978,3,c	;volatile
 39561                           
 39562                           ; BSR set to: 0
 39563                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 39564  00B57C  0100               	movlb	0	; () banked
 39565  00B57E  51A8               	movf	i2RegisterRead@address& (0+255),w,b
 39566  00B580  0940               	iorlw	64
 39567  00B582  0100               	movlb	0	; () banked
 39568  00B584  6FA8               	movwf	i2RegisterRead@address& (0+255),b
 39569                           
 39570                           ; BSR set to: 0
 39571                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 39572  00B586  0100               	movlb	0	; () banked
 39573  00B588  51A8               	movf	i2RegisterRead@address& (0+255),w,b
 39574  00B58A  EC8B  F05D         	call	i2_SPIPut
 39575                           
 39576                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 39577  00B58E  ECCE  F05D         	call	i2_SPIGet	;wreg free
 39578  00B592  0100               	movlb	0	; () banked
 39579  00B594  6FA5               	movwf	i2RegisterRead@value& (0+255),b
 39580                           
 39581                           ; BSR set to: 0
 39582                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 39583  00B596  868A               	bsf	3978,3,c	;volatile
 39584                           
 39585                           ; BSR set to: 0
 39586                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 39587  00B598  0100               	movlb	0	; () banked
 39588  00B59A  B1A6               	btfsc	i2RegisterRead@IRQ1select& (0+255),0,b
 39589  00B59C  D002               	bra	i2u1360_45
 39590  00B59E  96F0               	bcf	intcon3,3,c	;volatile
 39591  00B5A0  D001               	bra	i2u1360_46
 39592  00B5A2                     i2u1360_45:
 39593  00B5A2  86F0               	bsf	intcon3,3,c	;volatile
 39594  00B5A4                     i2u1360_46:
 39595                           
 39596                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 39597  00B5A4  0100               	movlb	0	; () banked
 39598  00B5A6  B1A7               	btfsc	i2RegisterRead@IRQ0select& (0+255),0,b
 39599  00B5A8  D002               	bra	i2u1361_45
 39600  00B5AA  98F2               	bcf	intcon,4,c	;volatile
 39601  00B5AC  D001               	bra	i2u1361_46
 39602  00B5AE                     i2u1361_45:
 39603  00B5AE  88F2               	bsf	intcon,4,c	;volatile
 39604  00B5B0                     i2u1361_46:
 39605                           
 39606                           ;drv_mrf_miwi_89xa.c: 222: return value;
 39607  00B5B0  0100               	movlb	0	; () banked
 39608  00B5B2  51A5               	movf	i2RegisterRead@value& (0+255),w,b
 39609  00B5B4  0012               	return	
 39610  00B5B6                     __end_ofi2_RegisterRead:
 39611                           	opt stack 0
 39612                           pclatu	equ	0xFFB
 39613                           pclath	equ	0xFFA
 39614                           tblptru	equ	0xFF8
 39615                           tblptrh	equ	0xFF7
 39616                           tblptrl	equ	0xFF6
 39617                           tablat	equ	0xFF5
 39618                           prodh	equ	0xFF4
 39619                           prodl	equ	0xFF3
 39620                           intcon	equ	0xFF2
 39621                           intcon2	equ	0xFF1
 39622                           intcon3	equ	0xFF0
 39623                           indf0	equ	0xFEF
 39624                           postinc0	equ	0xFEE
 39625                           plusw0	equ	0xFEB
 39626                           fsr0h	equ	0xFEA
 39627                           fsr0l	equ	0xFE9
 39628                           wreg	equ	0xFE8
 39629                           indf1	equ	0xFE7
 39630                           postinc1	equ	0xFE6
 39631                           postdec1	equ	0xFE5
 39632                           plusw1	equ	0xFE3
 39633                           fsr1h	equ	0xFE2
 39634                           fsr1l	equ	0xFE1
 39635                           bsr	equ	0xFE0
 39636                           indf2	equ	0xFDF
 39637                           postinc2	equ	0xFDE
 39638                           postdec2	equ	0xFDD
 39639                           plusw2	equ	0xFDB
 39640                           fsr2h	equ	0xFDA
 39641                           fsr2l	equ	0xFD9
 39642                           status	equ	0xFD8
 39643                           
 39644 ;; *************** function i2_SPIGet *****************
 39645 ;; Defined at:
 39646 ;;		line 104 in file "src/18F27J53/spi.c"
 39647 ;; Parameters:    Size  Location     Type
 39648 ;;		None
 39649 ;; Auto vars:     Size  Location     Type
 39650 ;;		None
 39651 ;; Return value:  Size  Location     Type
 39652 ;;                  1    wreg      unsigned char 
 39653 ;; Registers used:
 39654 ;;		wreg, status,2, cstack
 39655 ;; Tracked objects:
 39656 ;;		On entry : 0/0
 39657 ;;		On exit  : 0/0
 39658 ;;		Unchanged: 0/0
 39659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39664 ;;Total ram usage:        0 bytes
 39665 ;; Hardware stack levels used:    1
 39666 ;; Hardware stack levels required when called:    1
 39667 ;; This function calls:
 39668 ;;		i2_SPIPut
 39669 ;; This function is called by:
 39670 ;;		_MIWIInterruptHandler
 39671 ;;		i2_RegisterRead
 39672 ;; This function uses a non-reentrant model
 39673 ;;
 39674                           
 39675                           	psect	text123
 39676  00BB9C                     __ptext123:
 39677                           	opt stack 0
 39678  00BB9C                     i2_SPIGet:
 39679                           	opt stack 3
 39680                           
 39681                           ;spi.c: 128: SPIPut(0x00);
 39682                           
 39683                           ; BSR set to: 0
 39684                           ;incstack = 0
 39685  00BB9C  0E00               	movlw	0
 39686  00BB9E  EC8B  F05D         	call	i2_SPIPut
 39687                           
 39688                           ;spi.c: 129: return SSP2BUF;
 39689  00BBA2  5075               	movf	3957,w,c	;volatile
 39690  00BBA4  0012               	return	
 39691  00BBA6                     __end_ofi2_SPIGet:
 39692                           	opt stack 0
 39693                           pclatu	equ	0xFFB
 39694                           pclath	equ	0xFFA
 39695                           tblptru	equ	0xFF8
 39696                           tblptrh	equ	0xFF7
 39697                           tblptrl	equ	0xFF6
 39698                           tablat	equ	0xFF5
 39699                           prodh	equ	0xFF4
 39700                           prodl	equ	0xFF3
 39701                           intcon	equ	0xFF2
 39702                           intcon2	equ	0xFF1
 39703                           intcon3	equ	0xFF0
 39704                           indf0	equ	0xFEF
 39705                           postinc0	equ	0xFEE
 39706                           plusw0	equ	0xFEB
 39707                           fsr0h	equ	0xFEA
 39708                           fsr0l	equ	0xFE9
 39709                           wreg	equ	0xFE8
 39710                           indf1	equ	0xFE7
 39711                           postinc1	equ	0xFE6
 39712                           postdec1	equ	0xFE5
 39713                           plusw1	equ	0xFE3
 39714                           fsr1h	equ	0xFE2
 39715                           fsr1l	equ	0xFE1
 39716                           bsr	equ	0xFE0
 39717                           indf2	equ	0xFDF
 39718                           postinc2	equ	0xFDE
 39719                           postdec2	equ	0xFDD
 39720                           plusw2	equ	0xFDB
 39721                           fsr2h	equ	0xFDA
 39722                           fsr2l	equ	0xFD9
 39723                           status	equ	0xFD8
 39724                           
 39725 ;; *************** function i2_SPIPut *****************
 39726 ;; Defined at:
 39727 ;;		line 45 in file "src/18F27J53/spi.c"
 39728 ;; Parameters:    Size  Location     Type
 39729 ;;  v               1    wreg     unsigned char 
 39730 ;; Auto vars:     Size  Location     Type
 39731 ;;  v               1    1[BANK0 ] unsigned char 
 39732 ;;  SPIPut          1    0[BANK0 ] unsigned char 
 39733 ;; Return value:  Size  Location     Type
 39734 ;;		None               void
 39735 ;; Registers used:
 39736 ;;		wreg
 39737 ;; Tracked objects:
 39738 ;;		On entry : 0/0
 39739 ;;		On exit  : 0/0
 39740 ;;		Unchanged: 0/0
 39741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39746 ;;Total ram usage:        2 bytes
 39747 ;; Hardware stack levels used:    1
 39748 ;; This function calls:
 39749 ;;		Nothing
 39750 ;; This function is called by:
 39751 ;;		i2_SPIGet
 39752 ;;		i2_RegisterSet
 39753 ;;		i2_RegisterRead
 39754 ;;		i2_WriteFIFO
 39755 ;; This function uses a non-reentrant model
 39756 ;;
 39757                           
 39758                           	psect	text124
 39759  00BB16                     __ptext124:
 39760                           	opt stack 0
 39761  00BB16                     i2_SPIPut:
 39762                           	opt stack 4
 39763                           
 39764                           ;incstack = 0
 39765                           ;i2SPIPut@v stored from wreg
 39766  00BB16  0100               	movlb	0	; () banked
 39767  00BB18  6FA4               	movwf	i2SPIPut@v& (0+255),b
 39768                           
 39769                           ;spi.c: 66: {
 39770                           ;spi.c: 68: uint8_t i;
 39771                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 39772  00BB1A  9EA4               	bcf	4004,7,c	;volatile
 39773                           
 39774                           ;spi.c: 72: i = SSP2BUF;
 39775  00BB1C  CF75 F0A3          	movff	3957,i2SPIPut@i	;volatile
 39776  00BB20                     i2l29:
 39777                           
 39778                           ;spi.c: 75: {
 39779                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 39780  00BB20  9E72               	bcf	3954,7,c	;volatile
 39781                           
 39782                           ;spi.c: 77: SSP2BUF = v;
 39783  00BB22  C0A4  FF75         	movff	i2SPIPut@v,3957	;volatile
 39784                           
 39785                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 39786  00BB26  BE72               	btfsc	3954,7,c	;volatile
 39787  00BB28  D7FB               	goto	i2l29
 39788  00BB2A                     i2l31:
 39789  00BB2A  AEA4               	btfss	4004,7,c	;volatile
 39790  00BB2C  D7FE               	goto	i2l31
 39791                           
 39792                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 39793  00BB2E  9EA4               	bcf	4004,7,c	;volatile
 39794  00BB30  0012               	return		;funcret
 39795  00BB32                     __end_ofi2_SPIPut:
 39796                           	opt stack 0
 39797                           pclatu	equ	0xFFB
 39798                           pclath	equ	0xFFA
 39799                           tblptru	equ	0xFF8
 39800                           tblptrh	equ	0xFF7
 39801                           tblptrl	equ	0xFF6
 39802                           tablat	equ	0xFF5
 39803                           prodh	equ	0xFF4
 39804                           prodl	equ	0xFF3
 39805                           intcon	equ	0xFF2
 39806                           intcon2	equ	0xFF1
 39807                           intcon3	equ	0xFF0
 39808                           indf0	equ	0xFEF
 39809                           postinc0	equ	0xFEE
 39810                           plusw0	equ	0xFEB
 39811                           fsr0h	equ	0xFEA
 39812                           fsr0l	equ	0xFE9
 39813                           wreg	equ	0xFE8
 39814                           indf1	equ	0xFE7
 39815                           postinc1	equ	0xFE6
 39816                           postdec1	equ	0xFE5
 39817                           plusw1	equ	0xFE3
 39818                           fsr1h	equ	0xFE2
 39819                           fsr1l	equ	0xFE1
 39820                           bsr	equ	0xFE0
 39821                           indf2	equ	0xFDF
 39822                           postinc2	equ	0xFDE
 39823                           postdec2	equ	0xFDD
 39824                           plusw2	equ	0xFDB
 39825                           fsr2h	equ	0xFDA
 39826                           fsr2l	equ	0xFD9
 39827                           status	equ	0xFD8
 39828                           
 39829 ;; *************** function i2_MiWi_TickGet *****************
 39830 ;; Defined at:
 39831 ;;		line 105 in file "src/18F27J53/symbol.c"
 39832 ;; Parameters:    Size  Location     Type
 39833 ;;		None
 39834 ;; Auto vars:     Size  Location     Type
 39835 ;;  MiWi_TickGet    4    6[BANK0 ] struct _MIWI_TICK
 39836 ;;  MiWi_TickGet    1    5[BANK0 ] unsigned char 
 39837 ;; Return value:  Size  Location     Type
 39838 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 39839 ;; Registers used:
 39840 ;;		wreg, status,2, status,0
 39841 ;; Tracked objects:
 39842 ;;		On entry : 0/0
 39843 ;;		On exit  : 0/0
 39844 ;;		Unchanged: 0/0
 39845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39847 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39849 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39850 ;;Total ram usage:       10 bytes
 39851 ;; Hardware stack levels used:    1
 39852 ;; This function calls:
 39853 ;;		Nothing
 39854 ;; This function is called by:
 39855 ;;		_MIWIInterruptHandler
 39856 ;;		i2_TxPacket
 39857 ;; This function uses a non-reentrant model
 39858 ;;
 39859                           
 39860                           	psect	text125
 39861  00B170                     __ptext125:
 39862                           	opt stack 0
 39863  00B170                     i2_MiWi_TickGet:
 39864                           	opt stack 5
 39865                           
 39866                           ;symbol.c: 107: MIWI_TICK currentTime;
 39867                           ;symbol.c: 110: uint8_t failureCounter;
 39868                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 39869                           
 39870                           ;incstack = 0
 39871  00B170  909D               	bcf	3997,0,c	;volatile
 39872                           
 39873                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 39874  00B172  0E00               	movlw	0
 39875  00B174  0100               	movlb	0	; () banked
 39876  00B176  6FAB               	movwf	(i2MiWi_TickGet@currentTime+2)& (0+255),b
 39877                           
 39878                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 39879  00B178  0E00               	movlw	0
 39880  00B17A  0100               	movlb	0	; () banked
 39881  00B17C  6FAC               	movwf	(i2MiWi_TickGet@currentTime+3)& (0+255),b
 39882                           
 39883                           ;symbol.c: 119: failureCounter = 0;
 39884  00B17E  0E00               	movlw	0
 39885  00B180  0100               	movlb	0	; () banked
 39886  00B182  6FA8               	movwf	i2MiWi_TickGet@failureCounter& (0+255),b
 39887  00B184                     i2l18956:
 39888                           
 39889                           ; BSR set to: 0
 39890                           ;symbol.c: 122: {
 39891                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 39892  00B184  CFCE F0A9          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 39893                           
 39894                           ; BSR set to: 0
 39895                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 39896  00B188  CFCF F0AA          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 39897                           
 39898                           ; BSR set to: 0
 39899                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 39900  00B18C  0100               	movlb	0	; () banked
 39901  00B18E  29A9               	incf	i2MiWi_TickGet@currentTime& (0+255),w,b
 39902  00B190  E10D               	bnz	i2l62
 39903  00B192  0100               	movlb	0	; () banked
 39904  00B194  29AA               	incf	(i2MiWi_TickGet@currentTime+1)& (0+255),w,b
 39905  00B196  A4D8               	btfss	status,2,c
 39906  00B198  D009               	goto	i2l62
 39907                           
 39908                           ; BSR set to: 0
 39909  00B19A  0100               	movlb	0	; () banked
 39910  00B19C  2BA8               	incf	i2MiWi_TickGet@failureCounter& (0+255),f,b
 39911  00B19E  05A8               	decf	i2MiWi_TickGet@failureCounter& (0+255),w,b
 39912  00B1A0  0100               	movlb	0	; () banked
 39913  00B1A2  6FA7               	movwf	??i2_MiWi_TickGet& (0+255),b
 39914  00B1A4  0E02               	movlw	2
 39915  00B1A6  0100               	movlb	0	; () banked
 39916  00B1A8  65A7               	cpfsgt	??i2_MiWi_TickGet& (0+255),b
 39917  00B1AA  D7EC               	goto	i2l18956
 39918  00B1AC                     i2l62:
 39919                           
 39920                           ; BSR set to: 0
 39921                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 39922  00B1AC  A09E               	btfss	3998,0,c	;volatile
 39923  00B1AE  D008               	goto	i2l18970
 39924                           
 39925                           ; BSR set to: 0
 39926                           ;symbol.c: 130: {
 39927                           ;symbol.c: 132: {
 39928                           ;symbol.c: 135: currentTime.byte.b2++;
 39929  00B1B0  0100               	movlb	0	; () banked
 39930  00B1B2  2BAB               	incf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 39931                           
 39932                           ; BSR set to: 0
 39933                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 39934  00B1B4  0100               	movlb	0	; () banked
 39935  00B1B6  29A1               	incf	_timerExtension1& (0+255),w,b	;volatile
 39936  00B1B8  A4D8               	btfss	status,2,c
 39937  00B1BA  D002               	goto	i2l18970
 39938                           
 39939                           ; BSR set to: 0
 39940                           ;symbol.c: 137: {
 39941                           ;symbol.c: 138: currentTime.byte.b3++;
 39942  00B1BC  0100               	movlb	0	; () banked
 39943  00B1BE  2BAC               	incf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 39944  00B1C0                     i2l18970:
 39945                           
 39946                           ; BSR set to: 0
 39947                           ;symbol.c: 139: }
 39948                           ;symbol.c: 140: }
 39949                           ;symbol.c: 141: }
 39950                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 39951  00B1C0  0100               	movlb	0	; () banked
 39952  00B1C2  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 39953  00B1C4  0100               	movlb	0	; () banked
 39954  00B1C6  27AB               	addwf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 39955                           
 39956                           ; BSR set to: 0
 39957                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 39958  00B1C8  0100               	movlb	0	; () banked
 39959  00B1CA  51A2               	movf	_timerExtension2& (0+255),w,b	;volatile
 39960  00B1CC  0100               	movlb	0	; () banked
 39961  00B1CE  27AC               	addwf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 39962                           
 39963                           ; BSR set to: 0
 39964                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 39965  00B1D0  809D               	bsf	3997,0,c	;volatile
 39966                           
 39967                           ; BSR set to: 0
 39968                           ;symbol.c: 150: return currentTime;
 39969  00B1D2  C0A9  F0A3         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 39970  00B1D6  C0AA  F0A4         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 39971  00B1DA  C0AB  F0A5         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 39972  00B1DE  C0AC  F0A6         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 39973  00B1E2  0012               	return	
 39974  00B1E4                     __end_ofi2_MiWi_TickGet:
 39975                           	opt stack 0
 39976                           pclatu	equ	0xFFB
 39977                           pclath	equ	0xFFA
 39978                           tblptru	equ	0xFF8
 39979                           tblptrh	equ	0xFF7
 39980                           tblptrl	equ	0xFF6
 39981                           tablat	equ	0xFF5
 39982                           prodh	equ	0xFF4
 39983                           prodl	equ	0xFF3
 39984                           intcon	equ	0xFF2
 39985                           intcon2	equ	0xFF1
 39986                           intcon3	equ	0xFF0
 39987                           indf0	equ	0xFEF
 39988                           postinc0	equ	0xFEE
 39989                           plusw0	equ	0xFEB
 39990                           fsr0h	equ	0xFEA
 39991                           fsr0l	equ	0xFE9
 39992                           wreg	equ	0xFE8
 39993                           indf1	equ	0xFE7
 39994                           postinc1	equ	0xFE6
 39995                           postdec1	equ	0xFE5
 39996                           plusw1	equ	0xFE3
 39997                           fsr1h	equ	0xFE2
 39998                           fsr1l	equ	0xFE1
 39999                           bsr	equ	0xFE0
 40000                           indf2	equ	0xFDF
 40001                           postinc2	equ	0xFDE
 40002                           postdec2	equ	0xFDD
 40003                           plusw2	equ	0xFDB
 40004                           fsr2h	equ	0xFDA
 40005                           fsr2l	equ	0xFD9
 40006                           status	equ	0xFD8
 40007                           pclatu	equ	0xFFB
 40008                           pclath	equ	0xFFA
 40009                           tblptru	equ	0xFF8
 40010                           tblptrh	equ	0xFF7
 40011                           tblptrl	equ	0xFF6
 40012                           tablat	equ	0xFF5
 40013                           prodh	equ	0xFF4
 40014                           prodl	equ	0xFF3
 40015                           intcon	equ	0xFF2
 40016                           intcon2	equ	0xFF1
 40017                           intcon3	equ	0xFF0
 40018                           indf0	equ	0xFEF
 40019                           postinc0	equ	0xFEE
 40020                           plusw0	equ	0xFEB
 40021                           fsr0h	equ	0xFEA
 40022                           fsr0l	equ	0xFE9
 40023                           wreg	equ	0xFE8
 40024                           indf1	equ	0xFE7
 40025                           postinc1	equ	0xFE6
 40026                           postdec1	equ	0xFE5
 40027                           plusw1	equ	0xFE3
 40028                           fsr1h	equ	0xFE2
 40029                           fsr1l	equ	0xFE1
 40030                           bsr	equ	0xFE0
 40031                           indf2	equ	0xFDF
 40032                           postinc2	equ	0xFDE
 40033                           postdec2	equ	0xFDD
 40034                           plusw2	equ	0xFDB
 40035                           fsr2h	equ	0xFDA
 40036                           fsr2l	equ	0xFD9
 40037                           status	equ	0xFD8
 40038                           
 40039                           	psect	param0
 40040  0000                     pclatu	equ	0xFFB
 40041                           pclath	equ	0xFFA
 40042                           tblptru	equ	0xFF8
 40043                           tblptrh	equ	0xFF7
 40044                           tblptrl	equ	0xFF6
 40045                           tablat	equ	0xFF5
 40046                           prodh	equ	0xFF4
 40047                           prodl	equ	0xFF3
 40048                           intcon	equ	0xFF2
 40049                           intcon2	equ	0xFF1
 40050                           intcon3	equ	0xFF0
 40051                           indf0	equ	0xFEF
 40052                           postinc0	equ	0xFEE
 40053                           plusw0	equ	0xFEB
 40054                           fsr0h	equ	0xFEA
 40055                           fsr0l	equ	0xFE9
 40056                           wreg	equ	0xFE8
 40057                           indf1	equ	0xFE7
 40058                           postinc1	equ	0xFE6
 40059                           postdec1	equ	0xFE5
 40060                           plusw1	equ	0xFE3
 40061                           fsr1h	equ	0xFE2
 40062                           fsr1l	equ	0xFE1
 40063                           bsr	equ	0xFE0
 40064                           indf2	equ	0xFDF
 40065                           postinc2	equ	0xFDE
 40066                           postdec2	equ	0xFDD
 40067                           plusw2	equ	0xFDB
 40068                           fsr2h	equ	0xFDA
 40069                           fsr2l	equ	0xFD9
 40070                           status	equ	0xFD8
 40071                           
 40072                           	psect	temp
 40073  00005E                     btemp:
 40074                           	opt stack 0
 40075  00005E                     	ds	1
 40076  0000                     int$flags	set	btemp
 40077                           pclatu	equ	0xFFB
 40078                           pclath	equ	0xFFA
 40079                           tblptru	equ	0xFF8
 40080                           tblptrh	equ	0xFF7
 40081                           tblptrl	equ	0xFF6
 40082                           tablat	equ	0xFF5
 40083                           prodh	equ	0xFF4
 40084                           prodl	equ	0xFF3
 40085                           intcon	equ	0xFF2
 40086                           intcon2	equ	0xFF1
 40087                           intcon3	equ	0xFF0
 40088                           indf0	equ	0xFEF
 40089                           postinc0	equ	0xFEE
 40090                           plusw0	equ	0xFEB
 40091                           fsr0h	equ	0xFEA
 40092                           fsr0l	equ	0xFE9
 40093                           wreg	equ	0xFE8
 40094                           indf1	equ	0xFE7
 40095                           postinc1	equ	0xFE6
 40096                           postdec1	equ	0xFE5
 40097                           plusw1	equ	0xFE3
 40098                           fsr1h	equ	0xFE2
 40099                           fsr1l	equ	0xFE1
 40100                           bsr	equ	0xFE0
 40101                           indf2	equ	0xFDF
 40102                           postinc2	equ	0xFDE
 40103                           postdec2	equ	0xFDD
 40104                           plusw2	equ	0xFDB
 40105                           fsr2h	equ	0xFDA
 40106                           fsr2l	equ	0xFD9
 40107                           status	equ	0xFD8


Data Sizes:
    Strings     495
    Constant    480
    Data        12
    BSS         1553
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     67     134
    BANK1           256    144     251
    BANK2           256      0     255
    BANK3           256     31     227
    BANK4           256      0      64
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          208      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[32]), NULL(NULL[0]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK1[2]), 

    pUsbBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), 
		 -> TX_POWER_N_2_DB_MW(CODE[6]), TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), 
		 -> TX_POWER_10_DB_MW(CODE[5]), TX_POWER_13_DB_MW(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_14(CODE[39]), STR_13(CODE[52]), STR_12(CODE[44]), STR_11(CODE[55]), 
		 -> STR_10(CODE[39]), STR_9(CODE[32]), STR_8(CODE[17]), STR_7(CODE[31]), 
		 -> STR_6(CODE[25]), STR_5(CODE[22]), STR_4(CODE[41]), STR_3(CODE[33]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    dBm_to_mW_ufixed16@value2	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    dBm_to_mW_ufixed16@value1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    labelcmp@p2	PTR unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    labelcmp@p1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    sendHIDText@str	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDText@p	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDBinary@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK2[32]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 7
		 -> TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 41
		 -> configDescriptor1(CODE[41]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), ToSendDataBuffer(BANK3[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    S2898$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S2888$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2888$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2864$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2864$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2864$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2864$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    MiApp_NoiseDetection@RSSIValue	PTR unsigned char  size(2) Largest target is 1
		 -> noise_level(BANK1[1]), MiApp_StartConnection@RSSIValue(BANK1[1]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), 

    UnicastShortAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> openSocketInfo.ShortAddress2(BANK1[2]), openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable.Address(BIGRAMl[4]), 
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    S2010$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2010$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK2[43]), 

    S1592$DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1390$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1614$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1614$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    _SYS_InterruptLow->_USBDeviceTasks
    i1___ftadd->i1___ftpack
    _USBDeviceTasks->_USBCtrlEPService
    i1_USBDeviceInit->i1_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler
    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_UnicastAddress
    _update_variable->_MiMAC_SetPower
    _MiMAC_SetPower->_RegisterSet
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_periodic_update->___ftmul
    _send_network_register->_sendHIDBinary
    _send_complete_update->___ftmul
    _floor->___altoft
    ___fttol->___ftadd
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___ftneg->_floor
    ___ftmul->___ftneg
    _send_answer_to_update->_sendHIDBinary
    _sendHIDBinary->_memcpy
    _sendHIDText->_USBTransferOnePacket
    _decode_variable->_memcpy
    _USBDeviceInit->_memset
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_UnicastShortAddress
    _UnicastShortAddress->_RouteMessage
    _RouteMessage->_SendMACPacket
    _SendBeacon->_SendMACPacket
    _SendMACPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _BroadcastJitter->_MiWi_TickGet
    _AddNodeToNetworkTable->_SearchForLongAddress
    _MiApp_StartConnection->_MiApp_NoiseDetection
    _MiApp_NoiseDetection->_MiMAC_ChannelAssessment
    _MiMAC_ChannelAssessment->___awdiv
    ___awdiv->_RegisterRead
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  949408
                                            137 BANK1      7     7      0
                                             19 BANK3     12    12      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_NoiseDetection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
               _MiApp_UnicastAddress
                     _MiMAC_SetPower
                          _MiWiTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _USBTransferOnePacket
                          _dBm_to_mW
                    _decode_variable
                             _memcpy
                      _sendHIDBinary
                        _sendHIDText
              _send_answer_to_update
               _send_complete_update
              _send_network_register
               _send_periodic_update
                            _sprintf
                             _strcpy
                        _timer_reset
                         _update_LED
                    _update_variable
 ---------------------------------------------------------------------------------
 (1) _update_variable                                      0     0      0    3025
                     _MiMAC_SetPower
                           _RtccWrOn
                           _labelcmp
                 _mW_ufixed16_to_dBm
 ---------------------------------------------------------------------------------
 (2) _mW_ufixed16_to_dBm                                   2     1      1     600
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (2) _labelcmp                                             8     4      4     639
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetPower                                       3     3      0    1786
                                              6 BANK1      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _update_LED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     525
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             34    22     12   13264
                                             12 BANK1     30    18     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                          _dBm_to_mW (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    7276
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     440
                                              7 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _send_periodic_update                                14    14      0   39843
                                             71 BANK1     13    13      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
           _encode_ufixed16_variable
                              _floor
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_network_register                                0     0      0   15092
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_complete_update                                14    14      0   42230
                                             71 BANK1     13    13      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                 _dBm_to_mW_ufixed16
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   12016
                                             45 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                              0 BANK1      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     891
                                             20 BANK1     15    11      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5618
                                              8 BANK1     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3603
                                             35 BANK1     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     273
                                             53 BANK1      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4367
                                             56 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3295
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _send_answer_to_update                                2     2      0   18929
                                             16 BANK1      1     1      0
                 _dBm_to_mW_ufixed16
           _encode_ufixed16_variable
              _encode_uint8_variable
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _sendHIDBinary                                        6     3      3    9302
                                             10 BANK1      6     3      3
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               15     3     12    1382
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            15     3     12    1450
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _dBm_to_mW_ufixed16                                   5     1      4    1005
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) _sendHIDText                                         10     8      2    3558
                                              7 BANK1     10     8      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _decode_variable                                     22    12     10    6629
                                             10 BANK1     22    12     10
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6    5790
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _dBm_to_mW                                            3     1      2      31
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK1      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0      34
                                              0 BANK1      2     2      0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                31    27      4  308644
                                            125 BANK1     12     8      4
                                              0 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                               0     0      0  217277
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (1) _MiWiTasks                                           51    51      0  217277
                                             74 BANK1     51    51      0
              _AddNodeToNetworkTable
                    _BroadcastJitter
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
                _UnicastShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _UnicastShortAddress                                  2     0      2   66740
                                             72 BANK1      2     0      2
                       _RouteMessage
 ---------------------------------------------------------------------------------
 (3) _RouteMessage                                        11     6      5   66408
                                             61 BANK1     11     6      5
                   _MiMAC_SendPacket
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendBeacon                                           1     1      0   21293
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendMACPacket                                        4     1      3   21293
                                             57 BANK1      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                    10     4      6   20160
                                             47 BANK1     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (6) _TxPacket                                            24    23      1    4859
                                             10 BANK1     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (7) _WriteFIFO                                            3     3      0     133
                                              2 BANK1      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _CCM_Enc                                             11     5      6    9189
                                             36 BANK1     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (2) _MiMAC_ReceivedPacket                                20    20      0   11429
                                             51 BANK1     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        7     3      4     400
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _CCM_Dec                                             15     9      6    9189
                                             36 BANK1     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (7) _CTR                                                 13     6      7    4021
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _CBC_MAC                                             13     6      7    4021
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (8) _encode                                              23    19      4    1094
                                              0 BANK1     23    19      4
 ---------------------------------------------------------------------------------
 (2) _BroadcastJitter                                     18    18      0     872
                                             10 BANK1     18    18      0
                       _MiWi_TickGet
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     336
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _AddNodeToNetworkTable                                4     4      0    1034
                                              6 BANK1      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _findNextNetworkEntry                                 1     1      0     130
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SearchForShortAddress                                3     3      0     192
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SearchForLongAddress                                 6     6      0     322
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (2) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_StartConnection                                9     4      5   16191
                                             65 BANK1      9     4      5
               _MiApp_NoiseDetection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_NoiseDetection                                36    28      8   10209
                                             29 BANK1     36    28      8
                   _MiApp_SetChannel
            _MiMAC_ChannelAssessment
                       _MiWi_TickGet
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) _MiWi_TickGet                                        10     6      4     400
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ChannelAssessment                             15    15      0    2999
                                             14 BANK1     15    15      0
                       _RegisterRead
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     865
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1485
                                              6 BANK1      8     4      4
                       _RegisterRead (ARG)
 ---------------------------------------------------------------------------------
 (7) _RegisterRead                                         4     4      0     235
                                              2 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   11123
                                             22 BANK1      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetAltAddress                                  4     0      4    1872
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5074
                                             18 BANK1      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             6     4      2    1033
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             10 BANK1      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                              7 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (7) _SetRFMode                                            1     1      0    1755
                                              6 BANK1      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     2      2    1724
                                              2 BANK1      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _SPIPut                                               2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptLow                                   19    19      0   29395
                                             30 COMRAM    19    19      0
                     _USBDeviceTasks
                          i1___ftadd
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1___ftadd                                          12     6      6    1201
                                              8 COMRAM    12     6      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (15) i1___ftpack                                          8     3      5     309
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   28194
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i1_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i1_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    3     3      0   16300
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   16003
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   12165
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    4244
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    4129
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3746
                                             12 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_LEDUpdateUSBStatus                              0     0      0       0
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1054
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i1_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     644
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (23) _SYS_InterruptHigh                                  14    14      0    4094
                                             53 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (24) _MIWIInterruptHandler                               19    19      0    4094
                                             34 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
                       i2_update_LED
 ---------------------------------------------------------------------------------
 (25) i2_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (25) i2_TxPacket                                         24    23      1    1577
                                             10 BANK0     24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (26) i2_WriteFIFO                                         3     3      0      91
                                              2 BANK0      3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_SetRFMode                                         1     1      0     291
                                              6 BANK0      1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (27) i2_RegisterSet                                       4     2      2     269
                                              2 BANK0      4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_RegisterRead                                      4     4      0     160
                                              2 BANK0      4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIGet                                            0     0      0      23
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIPut                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (26) i2_MiWi_TickGet                                     10     6      4     316
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _BroadcastJitter
         _MiWi_TickGet
         ___lbmod
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SearchForLongAddress
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
       _UnicastShortAddress
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _findNextNetworkEntry
   _MiApp_NoiseDetection
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_ChannelAssessment
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
       ___lwdiv
     _MiWi_TickGet
     ___awdiv
       _RegisterRead (ARG)
         _SPIGet
           _SPIPut
         _SPIPut
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SetChannel
     _MiMAC_SetChannel
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiApp_StartConnection
     _MiApp_NoiseDetection
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiMAC_ChannelAssessment
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         ___awdiv
           _RegisterRead (ARG)
             _SPIGet
               _SPIPut
             _SPIPut
         ___lwdiv
       _MiWi_TickGet
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_UnicastAddress
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _BroadcastJitter
           _MiWi_TickGet
           ___lbmod
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SearchForLongAddress
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
         _UnicastShortAddress
           _RouteMessage
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _SearchForShortAddress
             _SendBeacon
               _SendMACPacket
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                     _CTR
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                   _TxPacket
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
         _findNextNetworkEntry
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _BroadcastJitter
       _MiWi_TickGet
       ___lbmod
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
     _SearchForShortAddress
     _SendBeacon
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _UnicastShortAddress
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
     _findNextNetworkEntry
   _SYSTEM_Initialize
     _RtccWrOn
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBTransferOnePacket
   _dBm_to_mW
   _decode_variable
     _memcpy
   _memcpy
   _sendHIDBinary
     _USBTransferOnePacket
     _memcpy
   _sendHIDText
     _USBTransferOnePacket
   _send_answer_to_update
     _dBm_to_mW_ufixed16
     _encode_ufixed16_variable
     _encode_uint8_variable
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_complete_update
     ___ftadd
       ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     _dBm_to_mW_ufixed16
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       _frexp
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_network_register
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_periodic_update
     ___ftadd
       ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     _encode_ufixed16_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       _frexp
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _dBm_to_mW (ARG)
     _isdigit (ARG)
   _strcpy
   _timer_reset
   _update_LED
   _update_variable
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _RtccWrOn
     _labelcmp
     _mW_ufixed16_to_dBm

 _SYS_InterruptLow (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               i1_update_LED
             _USBCheckHIDRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             i1_update_LED
           _USBCheckHIDRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         i1_update_LED
       _USBCheckHIDRequest
     i1_USBDeviceInit
       i1_memset
   i1___ftadd
     i1___ftpack
   i1_update_LED

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut
     i2_update_LED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     240      36       17.3%
BIGRAMh            180      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      40      14       25.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     1F      E3      12       88.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     90      FB       7       98.0%
BITBANK13           D0      0       0      31        0.0%
BANK13              D0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5D       1       98.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     500       8        0.0%
DATA                 0      0     740       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 06 07:59:49 2016

                              i2_TxPacket 737A                              ___altoft@exp 012B  
                              _USB_SD_Ptr 20C3                                i1___ftpack A7C0  
                    ?_MiMAC_DiscardPacket 0001                              _UPTIME_LABEL 21CD  
                          ?_isSameAddress 0100                              _RoutingTable 0071  
                           ___altoft@sign 012C                                        l31 BB0E  
                                      l18 A8FA                                        l19 A8E6  
                                      l29 BB04                                        l62 B138  
                            ___awdiv@sign 010B                    ??_MiApp_NoiseDetection 0125  
                                      bsr 000FE0                             _USBDeviceInit 7BB2  
                     ___wmul@multiplicand 0102                        _USBCheckHIDRequest 93A4  
                     MiApp_ProtocolInit@i 011B                         _ActiveScanResults 0200  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 0113  
                            ___ftadd@exp2 0112                                _MiMAC_Init 839E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 0111                                       l322 6B8A  
             __end_of_USBStdGetDscHandler 8114                                       l262 76E8  
                                     l263 7730                                       l327 6BF8  
                                     l328 6C54                                       l460 8DB4  
                                     l356 5B78                                       l383 8AB8  
                                     l641 3B08                            ?i2_RegisterSet 00A5  
                                     l486 8978                                       l670 296A  
                                     l495 7EBE                                       l904 8CEA  
                                     l753 37BE                                       l746 3564  
                                     l907 8D12                                       l691 2CC6  
                                     l667 28D4                                       l940 BA14  
                                     l692 2CCA                                       _BDT 000D00  
                                     l790 3C02                                       l774 39D6  
                                     l758 3788                                       l769 399A  
                                     l697 2D8A                              i1___ftadd@f1 0009  
                            i1___ftadd@f2 000C                                       l899 8C38  
                                     _CTR 8D4C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _MTP 01AD                                       _UIR 000F62  
                  _APP_LEDUpdateUSBStatus B7E0                                       _key 02F1  
                              _USBSuspend BA88                           __end_of_CBC_MAC 92A6  
             __end_of_MiMAC_SetAltAddress BBB4                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                    __end_ofi1_update_LED B44A                            _USBDeviceTasks 8114  
                     ?_USBCheckHIDRequest 0001                           __end_of_CCM_Dec 7FC6  
                          _USBDeviceState 004B        encode_ufixed16_variable@m_writable 010E  
                         __end_of_CCM_Enc 89D2            __end_of_UPDATE_FREQUENCY_LABEL 21CD  
                             i2_WriteFIFO B760                     ??_USBCtrlTrfRxService 0001  
          __size_of_MiApp_StartConnection 010C                  USBEnableEndpoint@options 0009  
              __end_of_mW_ufixed16_to_dBm 9EF2                                      ?_CTR 0117  
           __end_of_MiApp_StartConnection 919C                                      CTR@i 0122  
                                    CTR@j 0123                    ??_send_complete_update 0147  
                                    l1014 5DE6                                      l1024 5FF0  
                                    l1033 6166                                      l1019 5E42  
                                    l1222 7C28                                      l2028 A968  
                                    l2038 A24C                                      l2161 5606  
                                    l1283 B8C4                                      l1284 B8C2  
                                    l2508 6A7C                USBConfigureEndpoint@handle 0007  
                                    l2445 905C                                      l2517 6AA6  
                                    l1813 982A                                      l2550 B9C8  
                                    l1751 3ECE                                      l1735 3E04  
                                    l2456 9396                                      l1760 4212  
                                    l1818 BB40                                      l1860 B39A  
                                    l2653 B07C                                      l2493 6944  
                                    l1749 3EC2                                      l2663 B31E  
                                    l2497 697E                                      l1777 4632  
                                    l1858 B38C                                      l2499 69A6  
                                    l1779 4636                                      l1977 A70A  
                         ?i2_RegisterRead 0001                                      STR_1 23B5  
                                    STR_2 2304                                      STR_3 22E3  
                                    STR_4 226C                                      STR_5 237D  
                                    STR_6 2364                                      STR_7 2345  
                                    STR_8 23A4                                      STR_9 2325  
                                    i2l31 BB2A                                      i2l29 BB20  
                                    i2l62 B1AC                     ??_USBCtrlTrfTxService 0001  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
   MiMAC_ChannelAssessment@AssessmentMode 0118    USBStdFeatureReqHandler@current_ep_data 0018  
               MiApp_StartConnection@Mode 0147                                      _pDst 003C  
              MiMAC_SetChannel@offsetFreq 0107                                      _main 3D4A  
                            ___ftpack@arg 0100                              ___ftpack@exp 0103  
                                    _role 01CA                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach B894                                      btemp 005E  
                                    pclat 000FFA                           _update_variable 977A  
              MiApp_UnicastAddress@handle 03D6                     MiApp_ProtocolInit@MIP 0118  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 01E4                             __CFG_IESO$OFF 000000  
                        __end_of_DELAY_ms A918                      ??_USBCheckHIDRequest 0001  
               do_NETWORK_REGISTER@F10229 0040                      __end_ofi2_update_LED B4AA  
              __end_of_USBCheckStdRequest 977A                    ??_USBCtrlTrfOutHandler 0003  
                          _InitConfigRegs 1FF5                              ___ftmul@cntr 0145  
          UnicastShortAddress@DestAddress 0148           MiApp_NoiseDetection@channelMask 012E  
                            ___param_bank 000000                              ___ftmul@sign 0146  
               ??_USBStdFeatureReqHandler 0015                              _USBOutHandle 01B7  
                   ??_MiMAC_DiscardPacket 0100                                     ??_CTR 011E  
                 decode_variable@p_buffer 010A            MiApp_StartConnection@RSSIValue 0149  
                        CCM_Enc@headerLen 0126                  ??_USBStdGetStatusHandler 0001  
                            ___fttol@exp1 0122                              ___fttol@lval 011E  
                          ?_USBDeviceInit 0001              __end_of_MiApp_DiscardMessage BB92  
      MiApp_NoiseDetection@OptimalChannel 013A                             __CFG_PLLDIV$2 000000  
                                   l20104 5DF6                                     l20114 5E32  
                                   l20108 5E00                                     l20310 7A7A  
                                   l20222 60B0                                     l21006 97BC  
                                   l20304 7A6A                                     l20208 6020  
                                   l21104 79F2                                     l20306 7A70  
                                   l20218 60AC                                     l20162 5F04  
                                   l20154 5EBC                                     l21050 9858  
                                   l20324 7ADE                                     l20316 7AAC  
                                   l20334 7B08                                     l20328 7AE8  
                                   l20432 9096                                     l20520 7C76  
                                   l20504 7C36                                     l20512 7C4E  
                                   l20266 6180                                     l20098 5DDC  
                                   l21090 797A                                     l20276 6196  
                                   l20516 7C6C                                     l20294 7A3C  
                                   l20286 6222                                     l20198 600A  
                                   l20526 7CDC                                     l20702 565A  
                                   l20630 53F6                                     l20622 53C6  
                                   l20448 90F4                                     l20472 9188  
                                   l20704 5660                                     l20640 5438  
                                   l20560 B8D8                                     l20298 7A46  
                                   l20650 54BE                                     l20634 5400  
                                   l20562 B8E4                                     l20492 7C08  
                                   l20580 9F5C                                     l20572 9F2E  
                                   l20740 5712                                     l20716 569C  
                                   l20732 56DE                                     l20660 54FC  
                                   l20628 53E4                                     l20574 9F38  
                                   l20718 56A2                                     l20734 56F0  
                                   l20670 5562                                     l20662 5502  
                                   l21622 3DBA                                     l17000 6BAA  
                                   l20488 7BFE                                     l20920 A2BC  
                                   l20568 9EFC                                     l20744 574A  
                                   l20648 54B8                                     l17010 6C06  
                                   l20586 9F74                                     l20770 57D4  
                                   l20754 577A                                     l20762 57A2  
                                   l20746 5754                                     l20682 55B2  
                                   l20674 5574                                     l20658 54F0  
                                   l21618 3DA4                                     l17100 AF88  
                                   l17020 6C60                                     l20940 A302  
                                   l20932 A2E6                                     l20924 A2CA  
                                   l20780 584C                                     l20764 57AE  
                                   l20676 558C                                     l20668 5556  
                                   l20916 BB44                                     l21900 47A4  
                                   l21812 43E6                                     l21708 4032  
                                   l21652 3E4E                                     l21636 3DFC  
                                   l21628 3DEC                                     l17006 6BDE  
                                   l20686 55CA                                     l21662 3E98  
                                   l17104 AF8E                                     l17032 6C9C  
                                   l17024 6C6A                                     l17016 6C3A  
                                   l18000 268E                                     l20952 A32C  
                                   l20944 A310                                     l20936 A2F4  
                                   l20928 A2D8                                     l20792 58CA  
                                   l20776 57F4                                     l21904 47C2  
                                   l21832 44D8                                     l21656 3E80  
                                   l17202 7F4E                                     l17042 6CD0  
                                   l18010 26A6                                     l20970 94EE  
                                   l20778 57FA                                     l20786 58A6  
                                   l20698 563E                                     l20794 58D6  
                                   l21906 47D2                                     l21674 3ED2  
                                   l21658 3E8A                                     l17212 7FC2  
                                   l18004 2694                                     l20948 A31E  
                                   l20788 58B8                                     l20796 58F6  
                                   l21908 47FA                                     l21852 456E  
                                   l21828 4492                                     l21756 41E0  
                                   l21676 3EE2                                     l17062 6D78  
                                   l17054 6D3C                                     l18102 291C  
                                   l18022 26D6                                     l18014 26B0  
                                   l20958 A33A                                     l21862 461A  
                                   l17208 7FBC                                     l17056 6D44  
                                   l17064 6D84                                     l17048 6D04  
                                   l17312 4AB6                                     l18112 2976  
                                   l18032 2778                                     l18008 26A0  
                                   l20976 9506                                     l19000 B868  
                                   l21864 4624                                     l21792 4350  
                                   l21856 45C4                                     l17090 AF1A  
                                   l17162 B5C6                                     l17410 4CCE  
                                   l17330 4B0A                                     l17242 4886  
                                   l17226 4830                                     l18210 2C36  
                                   l18122 29BA                                     l18106 2926  
                                   l18034 2784                                     l20994 957A  
                                   l21890 473C                                     l21858 45E8  
                                   l19100 6FD6                                     l17172 B604  
                                   l17076 AFB8                                     l17420 4D30  
                                   l17404 4CAE                                     l17324 4B06  
                                   l18204 2C18                                     l18132 2A30  
                                   l20988 9562                                     l21884 46B6  
                                   l21788 42FA                                     l19030 83F6  
                                   l19022 83D4                                     l19110 7070  
                                   l19102 6FDE                                     l17086 AF10  
                                   l17182 7E80                                     l17158 B5BC  
                                   l17422 4D36                                     l17414 4CD8  
                                   l17350 4B9A                                     l17238 4882  
                                   l17246 48A8                                     l18302 2EA4  
                                   l18230 2CB0                                     l18150 2A88  
                                   l18126 29C4                                     l18118 29A8  
                                   l21878 4686                                     l19040 841C  
                                   l16712 A1F2                                     l16704 A1D0  
                                   l16720 B110                                     l17504 9DB6  
                                   l17520 9E22                                     l17192 7EDA  
                                   l17168 B5FE                                     l17600 5A2E  
                                   l17432 4D98                                     l17360 4BBA  
                                   l17264 4944                                     l18400 33C4  
                                   l18304 2EC6                                     l18224 2CA0  
                                   l18240 2CF2                                     l18072 283C  
                                   l19042 8434                                     l19034 8400  
                                   l19018 83CA                                     l17530 B6EA  
                                   l16802 8D72                                     l17186 7E98  
                                   l17178 7E76                                     l17442 4DE4  
                                   l17426 4D40                                     l17258 4940  
                                   l18410 342A                                     l18154 2A92  
                                   l19052 846C                                     l19028 83F0  
                                   l16708 A1DE                                     l19140 7192  
                                   l17516 9E1C                                     l17508 9DC0  
                                   l17524 9E28                                     l16804 8D78  
                                   l17620 5B00                                     l17604 5A38  
                                   l16900 7758                                     l17372 4BEC  
                                   l17356 4BB4                                     l17292 49EC  
                                   l18420 3446                                     l18412 3430  
                                   l18404 33CE                                     l18340 3004  
                                   l18164 2AD2                                     l18084 2884  
                                   l19054 8472                                     l19046 843E  
                                   l16734 B14C                                     l19126 7152  
                                   l16654 6DD8                                     l16822 8DE0  
                                   l17198 7F44                                     l17622 5B0C  
                                   l17614 5AAA                                     l17702 5DB8  
                                   l17382 4C4E                                     l17294 49F2  
                                   l17286 49D2                                     l18430 3482  
                                   l18334 2FF4                                     l18318 2F52  
                                   l18262 2DA2                                     l18238 2CD2  
                                   l18246 2D2C                                     l18086 28A4  
                                   l17552 A43A                                     l19064 84AA  
                                   l16680 A15A                                     l19128 7156  
                                   l16840 91C0                                     l16832 8E5A  
                                   l16808 8D82                                     l16912 778A  
                                   l16904 7774                                     l17384 4C54  
                                   l17376 4BF6                                     l17448 4DEE  
                                   l18504 3606                                     l18424 3450  
                                   l18336 2FFA                                     l18352 3070  
                                   l18192 2BC4                                     l18176 2B4C  
                                   l18168 2ADC                                     l18088 28A8  
                                   l19152 B98E                                     l19216 A25A  
                                   l19058 847C                                     l19138 718E  
                                   l17474 B7A8                                     l17538 B712  
                                   l17714 A384                                     l16658 6DE2  
                                   l16850 91EA                                     l16818 8DD6  
                                   l16834 8E5E                                     l17634 5B84  
                                   l17466 4E5E                                     l17394 4C96  
                                   l17298 49FC                                     l18530 36F0  
                                   l18418 3440                                     l18362 30C4  
                                   l18370 31CA                                     l18282 2E14  
                                   l18194 2BCA                                     l19162 AB36  
                                   l17810 8FC0                                     l19314 9E48  
                                   l16692 A18E                                     l17900 8A7C  
                                   l17484 B7D6                                     l17732 8C46  
                                   l17724 A41E                                     l16668 6F8A  
                                   l16852 91F2                                     l16844 91CA  
                                   l17652 5BF0                                     l17644 5BDC  
                                   l16916 7796                                     l17388 4C5E  
                                   l18620 3960                                     l18452 350C  
                                   l18348 3064                                     l18276 2DE0  
                                   l18188 2BB8                                     l18268 2DB8  
                                   l19148 B97C                                     l19180 8B56  
                                   l19164 AB40                                     l17820 904E  
                                   l17812 8FF0                                     l17804 8F9E  
                                   l19412 7D4C                                     l19324 9E60  
                                   l16790 ABF0                                     l16782 ABC4  
                                   l16774 AB98                                     l16694 A19A  
                                   l16686 A170                                     l17494 9D6A  
                                   l17478 B7B2                                     l17718 A39C  
                                   l16854 91F8                                     l17662 5C66  
                                   l17638 5B8E                                     l17574 590A  
                                   l16942 7864                                     l17398 4C9C  
                                   l18542 373A                                     l18534 370E  
                                   l18518 3662                                     l18358 30BA  
                                   l18198 2BD4                                     l19190 8BD8  
                                   l19182 8B70                                     l19174 8B08  
                                   l19254 A976                                     l19158 AB04  
                                   l19334 9E78                                     l16696 A1A0  
                                   l17904 8A82                                     l17488 B7DC  
                                   l17744 8C88                                     l17736 8C56  
                                   l16872 9298                                     l17672 5CAE  
                                   l17656 5BFA                                     l17648 5BE2  
                                   l17592 5A1C                                     l16928 77C6  
                                   l16880 76FE                                     l16944 7868  
                                   l18720 3C8A                                     l18712 3C58  
                                   l18552 3776                                     l18480 35A8  
                                   l18448 34CA                                     l18368 3120  
                                   l19184 8B8A                                     l19176 8B22  
                                   l17832 9082                                     l17816 9010  
                                   l17808 8FB2                                     l19432 7DD4  
                                   l19344 9E90                                     l16786 ABDA  
                                   l16778 ABAE                                     l17842 B02C  
                                   l17914 8AC8                                     l17498 9D74  
                                   l16858 9202                                     l17674 5CD0  
                                   l17578 5914                                     l16970 893A  
                                   l16954 88D0                                     l16938 7850  
                                   l18730 3CD4                                     l18546 3744  
                                   l18466 355A                                     l18394 338E  
                                   l19186 8BA4                                     l19178 8B3C  
                                   l19194 8BF2                                     l17826 9066  
                                   l17818 9040                                     l19442 7E12  
                                   l19418 7D86                                     l18810 6952  
                                   l19282 92F6                                     l19354 9EA6  
                                   l16796 AC06                                     l17844 B038  
                                   l17748 8C92                                     l17756 8D46  
                                   l16868 9280                                     l17684 5D56  
                                   l17588 5A16                                     l16980 8994  
                                   l16964 892A                                     l16876 76E2  
                                   l18708 3C4E                                     l18652 3A0C  
                                   l18628 3976                                     l18572 37FC  
                                   l18484 35AE                                     l17940 2460  
                                   l19188 8BBE                                     l19436 7DF2  
                                   l19364 9EBE                                     l18742 BAF6  
                                   l17854 B06E                                     l17846 B03E  
                                   l17686 5D5E                                     l17598 5A28  
                                   l16974 8952                                     l16966 8930  
                                   l16958 88DA                                     l18662 3AA6  
                                   l18638 39CC                                     l18590 388E  
                                   l18566 37EC                                     l18670 3AC8  
                                   l18398 33BE                                     l17950 247C  
                                   l18750 9966                                     l19446 7E30  
                                   l18822 699C                                     l18902 9D60  
                                   l19286 9314                                     l19278 92E2  
                                   l19470 B310                                     l19462 B2DA  
                                   l19374 9ED6                                     l17792 B098  
                                   l18656 3A24                                     l18568 37F2  
                                   l18496 35E2                                     l18488 35C0  
                                   l17960 254C                                     l19552 8630  
                                   l18840 6A1A                                     l18832 69DE  
                                   l18816 698C                                     l18912 8294  
                                   l19464 B2E6                                     l19384 9EEE  
                                   l17890 8A68                                     l17698 5DB2  
                                   l18682 3B2A                                     l18666 3AC2  
                                   l18594 3898                                     l18578 382E  
                                   l17946 2470                                     l18674 3AEC  
                                   l18770 9A00                                     l18850 6A62  
                                   l18842 6A28                                     l18930 8326  
                                   l19466 B2EC                                     l17796 B0BE  
                                   l17892 8A6E                                     l16988 6B50  
                                   l18692 3BFC                                     l18588 3888  
                                   l17980 25D4                                     l18852 6A70  
                                   l18844 6A34                                     l18940 8356  
                                   l19396 BA7E                                     l17886 8A2E  
                                   l17878 89F8                                     l18686 3B34  
                                   l17974 25A0                                     l17966 257A  
                                   l18678 3B10                                     l18758 999A  
                                   l18838 6A0C                                     l18942 8366  
                                   l18934 833A                                     l17992 261A  
                                   l18784 B372                                     l18944 8370  
                                   l17986 260A                                     l18778 B33A  
                                   l18794 A9EA                                     l18858 6AD0  
                                   l17988 2610                                     l18796 A9FA  
                                   l18868 6B1E                                     l18892 9CDC  
                                   l18948 838C                                     l18878 AE0E  
                                   l18896 9D1C                                     l19952 B3A6  
                                   l19958 B3BC                                     l19966 B3CE  
                                   ?_main 0001                           __end_of___awdiv A1FC  
                         __end_of___ftadd 6B44                                     STR_10 22BC  
                                   STR_11 21D5                                     STR_12 2240  
                                   STR_13 220C                                     STR_14 2295  
                                   STR_15 23BD                                     STR_16 2393  
                         __end_of___lbmod B71E         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___ftneg B9D6                 _send_periodic_update$6064 0148  
               _send_periodic_update$6065 014B                 _send_periodic_update$6066 014E  
               _send_periodic_update$6067 0151                           __end_of___ftmul 7E70  
                         ___awdiv@divisor 0108                                     u20141 2798  
                                   u20151 27AE                                     u21200 3D44  
                                   _T1CON 000FCD                                     u20401 2D20  
                  __end_of_USBDeviceTasks 825A                                     u21140 3BDE  
                                   u21301 6910                           __end_of___fttol 839E  
                                   u21250 B364                                     u22211 7D28  
                                   u20524 2F28                                     u20525 2F22  
                                   u21510 AE40                                     u22231 7D62  
                                   u21257 B35A                                     u23130 60A4  
                                   u21291 68F2                                     u21518 AE44  
                                   u21551 8270                                     u20824 3598  
                                   u20825 3592                                     u23065 5E8A  
                                   u23066 5E8E                                     u21570 82BA  
               ?_USBCtrlEPServiceComplete 0001                                     u23180 621A  
                                   u21900 AB26                                     u23255 7B28  
                                   u21575 82B0                                     u23256 7B2C  
                                   u21760 BB84                                     u23450 9F1E  
                                   u21780 7004                                     u20884 36E0  
                                   u21908 AB2A                                     u20885 36DA  
                                   u18015 6E38                                     u25207 40E0  
                                   u21785 6FF8                                     u18025 6EC0  
                                   u23801 6606                                     u25217 412E  
                                   u23458 9F22                                     u18035 6F1A  
                                   u25227 416C                                     u21980 9306  
                                   u24620 3E70                                     u25237 41B4  
                                   u25157 3E40                                     u25247 736E  
                                   u25167 3F50                                     u24800 4672  
                                   u25257 640A                                     u23761 62F0  
                                   u25177 3FD0                                     u24810 4674  
                                   u18155 B54A                                     u25267 664C  
                                   u23771 635A                                     u25187 4024  
                                   u18156 B54C                                     u24740 460A  
                                   u24628 3E74                                     u18165 B556  
                                   u23845 9520                                     u25277 7A16  
                                   u23941 7952                                     u23781 63C4  
                                   u24821 4698                                     u25197 4066  
                                   u18166 B558                                     u19054 4C84  
                                   u18175 B750                                     u19055 4C7C  
                                   u23871 958A                                     u23791 659C  
                                   u19320 5A00                                     u18176 B752  
                                   u18185 B75C                                     u23961 79CA  
                                   u18186 B75E                                     u18610 AFC6  
                         __end_of___lwdiv B086                                     u19155 4E04  
                                   u23971 7328                                     u19156 4E08  
                                   u24748 460E                                     u18480 6B5E  
                                   u18628 AFCA                                     u18814 48BE  
                                   u18815 48B8                                     u18498 6B62  
                                   u18924 4A82                                     u18844 4916  
                                   u19900 23EC                                     u18925 4A7C  
                                   u18845 4910                                     u18855 495A  
                                   u18856 495E                                     u19920 2424  
                                   u17985 B63E                                     u18945 4B20  
                                   u17986 B640                                     u18946 4B24  
                                   u17995 B64A                                     u18795 4846  
                                   u19915 240C                                     u17996 B64C  
                                   u18796 484A                                     u19908 23F0  
                                   u19917 2410                                     u18894 4A2A  
                                   u19791 89EA                                     u18895 4A24  
                                   u19945 244A                           __end_of___lwmod B328  
                                   u19938 2428                                     u18995 4BDA  
                                   u19947 244E                                     u18996 4BDE  
                                   u19991 254A                                     u19975 252E  
                                   u19977 2532                                     i2l410 4EF8  
                                   i2l421 4FD0                                     i2l262 738C  
                                   i2l263 73D2                                     i2l416 4F54  
                                   i2l419 5024                                     _UADDR 000F38  
                         ___awdiv@counter 010A                  __size_of_InitSymbolTimer 0018  
                    BroadcastJitter@range 011A                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RTCEN 0079FF  
                                   _RTCOE 0079FA                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                            i1___ftadd@exp1 0014  
                          i1___ftadd@exp2 0013                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                 __end_of_BroadcastJitter A42A                                     _USTAT 000F64  
                          i1___ftadd@sign 0012                                i1memset@p1 0001  
      __size_of_USBCtrlEPAllowStatusStage 00C4                          __end_ofi2_SPIGet BBA6  
                     ___lmul@multiplicand 0104                                _MiWiSeqNum 01C3  
                        __end_ofi2_SPIPut BB32                            _myShortAddress 01F2  
                         _decode_variable 94A0                            __CFG_FCMEN$OFF 000000  
           __size_of_MIWIInterruptHandler 0550           __end_of_USBCtrlEPAllowDataStage AAFA  
                             _BestChannel 01BE                           __end_of_myMODEL FFF5  
                                   _sd000 21D1                                     _sd001 20CF  
                                   _sd002 2103              MiMAC_ChannelAssessment@count 011A  
           __size_of_MiApp_ConnectionMode 002C                           __end_of_dpowers 20BB  
                                   _myUID FFF6                                     _floor 92A6  
                                   _m_var 01DE                                     _frexp ADEC  
           __size_of_MiApp_UnicastAddress 046A                                     _errno 0036  
                         __end_of_isdigit BA88                             ___ftpack@sign 0104  
                    _send_periodic_update 71A0                                     main@x 03DE  
                                   tablat 000FF5                  __end_of_SYS_InterruptLow 01E4  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                              ?_sendHIDText 0107  
                                   status 000FD8                           __end_of_sprintf 5904  
       __size_of_encode_ufixed16_variable 00BA                        __size_ofi1___ftadd 01AC  
                        __end_ofi1_memset BA5E                 ?_encode_ufixed16_variable 0100  
                  __end_of_InitConfigRegs 2035                            i1___ftpack@arg 0001  
                          i1___ftpack@exp 0004                 __size_of_MiMAC_SetChannel 00BA  
            __size_of_USBStdSetCfgHandler 00E2                           __initialization 9AF8  
                         ??_isSameAddress 0104                               ?i2_TxPacket 00AD  
                       BroadcastJitter@t1 0112                         BroadcastJitter@t2 0116  
                   _AddNodeToNetworkTable 8C28                 __size_of_MiMAC_SendPacket 0254  
                            __end_of_main 480E                   __size_of_MiMAC_SetPower 003A  
                             ?i1___ftpack 0001                    __size_of_SendMACPacket 007C  
                          TxPacket@status 011E                                 ??_CBC_MAC 011E  
                        __end_of_ScanTime 2071                           ??i2_RegisterSet 00A7  
               __size_of_USBCtrlEPService 00CE                                 ??_CCM_Dec 012A  
                               ??_CCM_Enc 012A                             ??_RegisterSet 0104  
                                  ??_main 0189                             ___fttol@sign1 011D  
                             ?_MiMAC_Init 0112                            _myMUTA_version FFF2  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
           MiMAC_ChannelAssessment@F10758 02F9                      __end_of_MiWi_TickGet B170  
                                  CTR@len 0119                                    CTR@key 011A  
                           _IRQ1_Received 0099                               ?_USBSuspend 0001  
                    _SearchForLongAddress 9D64                   MiApp_SetChannel@channel 010A  
                        __end_of_TxPacket 7880                           i1_USBDeviceInit 84E2  
                        __end_of_RtccWrOn BB76                                _SendBeacon 8762  
       MiApp_ProtocolInit@bNetworkFreezer 0117                      _MiMAC_ReceivedPacket 5904  
                      __size_of_MiWiTasks 1984               _myMUTA_version_absconstaddr 01FFF2  
                         i2SetRFMode@mode 00A9                   __end_of_USBDeviceAttach B8CE  
                 ??_encode_uint8_variable 010C                                    ?_floor 012D  
                                  ?_frexp 0100                          __end_of___altoft AA5C  
                           RouteMessage@i 0147                             RouteMessage@j 0145  
                   ?_send_periodic_update 0001            __size_of_send_answer_to_update 01A2  
                                  _CCPR1L 000FBB                                    _EECON2 000FA7  
                 __end_of_update_variable 9866                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0106  
                 _MiMAC_ChannelAssessment 89D2             __end_of_send_answer_to_update 7A22  
                        __end_of___ftpack 9090                      _IncomingFrameCounter 0500  
                                  i1l1222 8548                                    i1l1234 8144  
                                  i1l1308 960E                                    i1l1244 81DE  
                                  i1l1421 A12E                                    i1l1245 8256  
                                  i1l1246 81F0                                    _MACSeq 01C0  
                                  i1l1450 6682                                    i1l1371 A4F2  
                                  i1l1435 9698                                    i1l1444 96FC  
                                  i1l1374 A580                                    i1l1375 A502  
                                  i1l1376 A508                                    i1l1384 B690  
                                  i1l2508 7648                                    i1l1469 6848  
                                  i1l2445 A84E                                    i1l2517 7664  
                                  i1l1860 B3FA                                    i1l2493 756E  
                                  i1l2497 7598                                    i1l1858 B3EC  
                                  i1l1891 019C                                    i1l1869 014C  
                                  i1l1888 019A                                    i1l1889 0196  
                          __CFG_WDTEN$OFF 000000                                    i2l1860 B45A  
                                  i2l1858 B44C           ??_APP_DeviceCustomHIDInitialize 000D  
                   BroadcastJitter@jitter 011B                                    _RTCCAL 000F3E  
                          sendHIDText@str 0107                                    _RTCCFG 000F3F  
                                  _PVALUE 2071                                    _RPOR11 000ECB  
                                  _RPINR1 000EE1                                    _SVALUE 2091  
                                  _SPIGet BB92              i1USBTransferOnePacket@handle 0006  
                                  _SPIPut BAFA                   i2RegisterSet@IRQ0select 00A8  
         MiApp_StartConnection@ChannelMap 0142                   i2RegisterSet@IRQ1select 00A7  
                __end_of_TX_POWER_1_DB_MW 2190                  __end_of_TX_POWER_4_DB_MW 219D  
                              TxPacket@t1 0113                                TxPacket@t2 0117  
                       _StaticSecurityKey 1FEC                        __size_of_SetRFMode 0098  
                       _shortPacketStatus 0054                  __end_of_TX_POWER_7_DB_MW 21C9  
                          __CFG_XINST$OFF 000000                        _myUID_absconstaddr 01FFF6  
                                  _TxData 01C6                          __end_of_labelcmp A710  
                         USBDeviceTasks@i 001E               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0101                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0108                                    ___ftge 9C9C  
                                  ___lmul B086                                    ___wmul B906  
                               ??___awdiv 010A                      MiWiTasks@sourcePANID 0175  
                               ??___ftadd 010E                                 ??___lbmod 0101  
                                  _hasAck 009F                                 ??___ftneg 0138  
                               ??___ftmul 013E                                 ??___fttol 0118  
           MiMAC_ChannelAssessment@result 0112                 __size_of_MiApp_SetChannel 0024  
                               ??___lwdiv 0104                        __size_of_dBm_to_mW 00BA  
                               ??___lwmod 010B                                    _encode 6D98  
                __end_of_TX_POWER_INVALID 21A3                         _USBEnableEndpoint B81E  
         __size_of_USBStdGetStatusHandler 00BA                    __end_of_myMUTA_version FFF3  
                                  _memcpy B328                                    _memset B972  
                                  clear_0 9B00                                    clear_1 9B14  
                                  clear_2 9B26                                    clear_3 9B32  
                                  clear_4 9B3E                                    clear_5 9B4A  
                                  clear_6 9B56                                    clear_7 9B62  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 010C  
                            _CCM_Dec$1986 0130                   __end_of_decode_variable 9594  
                   __size_ofi1_update_LED 0060                __p_StaticSecurityKey_const 1FEC  
                      ?_USBEnableEndpoint 0009            __size_of_SearchForShortAddress 0088  
           __end_of_SearchForShortAddress AF92                                    _strcpy B8CE  
                      decode_variable@var 0116                                    floor@i 0130  
                                  floor@x 012D                     ___ftmul@f3_as_product 0142  
           __size_of_USBTransferOnePacket 00D8                         __end_ofi1___ftadd 76D6  
                   ?_SearchForLongAddress 0001                   __p_myMUTA_version_const FFF2  
              __end_of_dBm_to_mW_ufixed16 8C28                              __pdataCOMRAM 005B  
                               ??_isdigit 0100                              _CCM_Enc$1978 012C  
                        ?_BroadcastJitter 0001                            _openSocketInfo 01CC  
                            __mediumconst 1FF4                     ?_MiMAC_ReceivedPacket 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                    _myMODEL_absconstaddr 01FFF4                                    tblptru 000FF8  
                               ?_DELAY_ms 010C                       ??_USBEnableEndpoint 000A  
                     __end_of_RegisterSet B64E                              ?_timer_reset 0001  
                           ?_RegisterRead 0001                       __size_ofi2_TxPacket 01B0  
                               ??_sprintf 0118                         _ReceivedBankIndex 01C5  
                             _CtrlTrfData 000D28                             _SendMACPacket AF92  
                       ??_InitSymbolTimer 0100                             _CHANNEL_LABEL 21B9  
                            ?i2_SetRFMode 0001                       __size_ofi1___ftpack 00AE  
                    _controlTransferState 004F      MiApp_UnicastAddress@MiWiFrameControl 03D4  
                    __CFG_LS48MHZ$SYS48X8 000000                         _SYSTEM_Initialize 8624  
                         ___lbmod@divisor 0100                      _MiApp_DiscardMessage BB88  
                   __size_ofi2_update_LED 0060                                __accesstop 0060  
                      __size_of_WriteFIFO 0042                   __end_of__initialization 9BC4  
                              ___altoft@c 0123                i1USBTransferOnePacket@data 0002  
                         ___lbmod@counter 0102                              __pbssBIGRAMl 0600  
                              ___ftadd@f1 0108                                ___ftadd@f2 010B  
                              ___ftge@ff1 0100                                ___ftge@ff2 0103  
               __end_of_StaticSecurityKey 1FF4                           i1___ftpack@sign 0005  
         MiMAC_ReceivedPacket@currentTick 013B                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0144                             ___rparam_used 000000  
                __size_of_USBStallHandler 0046                  MIWIInterruptHandler@bAck 00D2  
                       CCM_Enc@payloadLen 0127                                ___ftneg@f1 0135  
                  ?_AddNodeToNetworkTable 0001                       __size_of_USBSuspend 002A  
                              ___ftmul@f1 0138                                ___ftmul@f2 013B  
                            i1_update_LED B3EA                          _sendHIDText$4973 010B  
            __end_of_findNextNetworkEntry B7E0                                ___fttol@f1 0114  
                   _ActiveScanResultIndex 01BD                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint B85A                         __end_of_MiWiTasks 3D4A  
                               ?i2_SPIGet 0001                             __end_of_sd000 21D5  
                           __end_of_sd001 2103                             __end_of_sd002 2131  
                               ?i2_SPIPut 0001            __size_of_send_network_register 00B0  
                            __pidataBANK1 BBAF                              __pidataBANK2 BBA6  
                     ??_SYSTEM_Initialize 0100             __end_of_send_network_register A7C0  
        __size_of_USBCtrlEPAllowDataStage 009E                     i2RegisterRead@address 00A8  
                           __end_of_myUID FFF8                             __end_of_floor 93A4  
                           __end_of_frexp AE7C                           _active_protocol 0059  
        MiMAC_ReceivedPacket@FrameCounter 013F             __size_of_USBConfigureEndpoint 0094  
                 __end_ofi1_USBDeviceInit 8624               __end_of_USBCtrlTrfInHandler A13E  
                               CTR@nounce 011C                   ?_APP_LEDUpdateUSBStatus 0001  
         MiApp_UnicastAddress@DestAddress 017D                           TxPacket@rssival 0121  
             MiApp_NoiseDetection@maxRSSI 0140               MiApp_NoiseDetection@minRSSI 013E  
                         _ConnectionTable 0600                                 ?i1_memset 0001  
                        ??i2_RegisterRead 00A5                               ?_SendBeacon 0001  
               ??_MiMAC_ChannelAssessment 010E                         __end_of_SetRFMode AC2A  
                            ?i2_WriteFIFO 0001                              i2_update_LED B44A  
                              ??_DELAY_ms 010E                    ??_send_periodic_update 0147  
                          ??_RegisterRead 0102              __size_of_UnicastShortAddress 0096  
                  __size_of_sendHIDBinary 0098                  ??_USBCtrlTrfSetupHandler 001B  
                          ?_SendMACPacket 0139                                   ??_floor 0130  
                                 ??_frexp 0105                          ?_USBDeviceAttach 0001  
               __end_of_SYSTEM_Initialize 8762                    _USBStdGetStatusHandler A4E4  
                            sprintf@width 0127                 MiWiTasks@destShortAddress 0173  
                        ?_update_variable 0001                     isSameAddress@Address1 0100  
                   isSameAddress@Address2 0102                         __end_of_dBm_to_mW A370  
                              __pbssBANK0 0060                                __pbssBANK1 0190  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                   ?_MiApp_DiscardMessage 0001               __size_of_MiApp_ProtocolInit 0190  
                                 ?_SPIGet 0001                                   CTR@text 0117  
                                 ?_SPIPut 0001                        RegisterSet@setting 0102  
                          isSameAddress@i 0106                             _m_uptime_days 01B0  
                     i2RegisterRead@value 00A5               __size_of_USBWakeFromSuspend 0030  
                       _m_failed_messages 0032                               _pBDTEntryIn 008B  
                        _MiMAC_SetChannel A42A                      __size_of_sendHIDText 00C4  
        __end_of_USBCtrlEPServiceComplete 9688                                CBC_MAC@MIC 011C  
   __end_of_APP_DeviceCustomHIDInitialize B972    __size_of_APP_DeviceCustomHIDInitialize 0036  
           _APP_DeviceCustomHIDInitialize B93C                  MiMAC_SetAltAddress@PANID 0102  
                            CBC_MAC@block 0121                        _mW_ufixed16_to_dBm 9E2C  
                              CBC_MAC@len 0119                                CBC_MAC@key 011A  
                               ?_TxPacket 010A                                 ?_RtccWrOn 0001  
                    USBCtrlTrfRxService@i 0001                          _MiMAC_SendPacket 6B44  
                              ??i2_SPIGet 00A5                               _UpF_updated 009E  
                                 ?___ftge 0100                            _MiMAC_SetPower B85A  
                              ??i2_SPIPut 00A3                                   ?___lmul 0100  
                          dBm_to_mW@power 0102                                   ?___wmul 0100  
          __end_of_APP_LEDUpdateUSBStatus B81E                                   ?_encode 0100  
                   __size_of_MiWi_TickGet 0074                                 ?___altoft 0123  
                                 ?_memcpy 0100                                   _CBC_MAC 919C  
                                 ?_memset 0100                            ___lmul@product 0108  
                              _device_dsc 2177                       ?_mW_ufixed16_to_dBm 0100  
                                 SPIPut@i 0100                                   SPIPut@v 0101  
                               ?___ftpack 0100                          _USBCtrlEPService 9BCE  
                        ?_decode_variable 010A                                   _CCM_Dec 7E70  
                                 _CCM_Enc 889E                                _ep_data_in 0095  
                  ??_SearchForLongAddress 0100                         __end_of_WriteFIFO B760  
                                 ?_strcpy 0100                               _RegisterSet B608  
           __size_of_MiApp_NoiseDetection 01EE                                _pUsbBuffer 003E  
             __end_of_USBCtrlTrfRxService 8F84                        _USBCheckStdRequest 9688  
                         MiWiTasks@j_2532 0172                           MiWiTasks@j_2544 0169  
                         MiWiTasks@j_2488 0171                           MiWiTasks@j_2569 016C  
                                 i1l11002 AAAA                                   i1l11022 98A8  
                                 i1l11006 AAC6                                   i1l10304 A63A  
                                 i1l11104 A568                                   i1l11032 98DC  
                                 i1l10322 B41C                                   i1l10330 B42E  
                                 i1l11122 667E                                   i1l11026 98B0  
                                 i1l10316 B406                                   i1l10404 9476  
                                 i1l11060 7FF0                                   i1l10422 B804  
                                 i1l10430 B814                                   i1l11142 673C  
                                 i1l11070 8092                                   i1l10176 ADBA  
                                 i1l10272 B82E                                   i1l10416 B7F4  
                                 i1l10360 93C4                                   i1l10520 B1FE  
                                 i1l10512 B1E6                                   i1l11160 67C8  
                                 i1l11144 673E                                   i1l11136 66F8  
                                 i1l11056 7FD8                                   i1l11048 9926  
                                 i1l10514 B1EC                                   i1l11082 80FC  
                       _configDescriptor1 2131                                   i1l10276 B83C  
                                 i1l10292 A5DE                                   i1l10284 A5B4  
                                 i1l10516 B1F2                                   i1l10524 B204  
                                 i1l11164 67E2                                   i1l11148 675A  
                                 i1l11076 80EC                                   i1l11068 808A  
                                 i1l10382 9422                                   i1l10366 93E0  
                                 i1l10518 B1F8                                   i1l11190 68AA  
                                 i1l11174 6828                                   i1l11158 67AC  
                                 i1l11078 80F4                                   i1l11094 A528  
                                 i1l10544 9A42                                   i1l10392 944C  
                                 i1l10368 93E8                                   i1l10376 9400  
                                 i1l11192 68B6                                   i1l11184 6864  
                                 i1l11176 6834                                   i1l11530 8EC0  
                                 i1l10378 9412                                   i1l10548 9A4C  
                                 i1l11524 8E9C                                   i1l10388 9440  
                                 i1l10580 BA3C                                   i1l10558 9A78  
                                 i1l10566 9AB0                                   i1l11542 8F1E  
                                 i1l10398 946A                                   i1l13150 B68C  
                                 i1l13126 B9FE                                   i1l10568 9AB8  
                                 i1l10576 9AF0                                   i1l10584 BA4C  
                                 i1l13128 BA00                                   i1l11546 8F38  
                                 i1l13170 9C26                                   i1l11580 96D6  
                                 i1l11564 96A2                                   i1l11476 95B8  
                                 i1l11590 9718                                   i1l11566 96A8  
                                 i1l13166 9C1E                                   i1l13182 9C86  
                                 i1l11576 96CA                                   i1l11568 96AE  
                                 i1l11496 9634                                   i1l13184 9C8C  
                                 i1l13600 852C                                   i1l11578 96D0  
                                 i1l11594 9736                                   i1l13178 9C6C  
                                 i1l12660 A0B2                                   i1l10972 9FFE  
                                 i1l12644 B500                                   i1l12636 B4B8  
                                 i1l13612 8556                                   i1l13620 856E  
                                 i1l12672 A0F4                                   i1l22192 B21C  
                                 i1l13624 858A                                   i1l12658 A0AE  
                                 i1l22194 B250                                   i1l13634 85EE  
                                 i1l12684 A138                                   i1l13628 8592  
                                 i1l16300 010C                                   i1l12678 A114  
                                 i1l15502 75A6                                   i1l14800 8252  
                                 i1l14720 813C                                   i1l14712 812C  
                                 i1l13680 A7DE                                   i1l16312 012A  
                                 u1650_21 753A                                   i1l13690 A83A  
                                 i1l13682 A7E8                                   i1l15530 7614  
                                 i1l16314 012E                                   i1l16322 0146  
                                 i1l13596 8524                                   i1l13692 A844  
                                 i1l13684 A806                                   i1l13676 A7D0  
                                 i1l15524 75F8                                   i1l14742 816A  
                                 i1l14734 815A                                   i1l15526 7602  
                                 i1l15518 75D6                                   i1l16318 013A  
                                 i1l13688 A81C                                   i1l15544 7680  
                                 i1l15536 7636                                   i1l15528 760C  
                                 u1651_21 754E                                   i1l15554 76B0  
                                 i1l15538 7640                                   i1l16290 00A0  
                                 i1l14772 81D4                                   i1l14764 81AC  
                                 i1l14748 8190                                   i1l16284 0076  
                                 i1l14758 81A0                                   i1l16294 00C4  
                                 i1l14792 8216                                   i1l15496 757C  
                                 i1l14778 81E8                                   i1l14798 8236  
                  ??_MiMAC_ReceivedPacket 0133                                   i2l12920 AC30  
                                 i2l12932 AC72                                   i2l12924 AC46  
                                 i2l12942 AC9E                                   i2l13662 B47C  
                                 i2l13670 B48E                                   i2l12936 AC88  
                                 i2l12928 AC5C                                   i2l13656 B466  
                      __CFG_OSC$INTOSCPLL 000000                                   i2l19510 742C  
                                 i2l19502 7416                                   i2l19530 7478  
                                 i2l19514 7438                                   i2l19540 750E  
                                 i2l19526 7468                                   i2l19542 7516  
                                 i2l19536 74FA                                   i2l19480 73A2  
                                 i2l19800 4F4E                                   i2l19476 7386  
                                 i2l19822 4FD8                                   i2l19910 5356  
                                 i2l19832 506E                                   i2l19840 50FC  
                                 i2l19808 4F9A                                   i2l19752 4E90  
                                 i2l19912 5364                                   i2l18970 B1C0  
                                 i2l19498 73FA                                   i2l19850 5146  
                                 i2l19842 5116                                   i2l19826 4FE8  
                                 i2l19914 536A                                   i2l18956 B184  
                                 i2l19932 539C                                   i2l19908 533E  
                                 i2l19764 4EB8                                   i2l19756 4E9A  
                                 i2l19870 51B8                                   i2l19846 513C  
                                 i2l19838 50F8                                   i2l19918 536E  
                                 i2l19856 5174                                   i2l19792 4F22  
                                 i2l19768 4EC6                                   i2l19882 51F6  
                                 i2l19866 51AE                                   i2l19778 4EF0  
                                 i2l19876 51E6                                   i2l19788 4F12  
                                 i2l19894 52A4                                   i2l19878 51EC  
                                 i2l19888 5282                                   i2l19898 52AA  
                          _LED_brightness 005B                                ??i1_memset 0007  
                         MiWiTasks@cIndex 016B               __end_of_USBCtrlTrfTxService 9AF8  
                     _USBStdSetCfgHandler 9866                     i2WriteFIFO@IRQ0select 00A7  
                   i2WriteFIFO@IRQ1select 00A6                           sendHIDText@size 010F  
                                 _RPINR21 000EFC                                   _RPINR22 000EFD  
                                 _SSP2BUF 000F75                           MiWiTasks@handle 0177  
        MIWIInterruptHandler@ackInfoIndex 00D4                                 ?_labelcmp 0100  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 014E  
                                 _RF_Mode 009B                                   _AckInfo 0248  
                                 _UIEbits 000F36                                   _RSSIVal 009C  
                         MiWiTasks@jitter 0162                                   _UIRbits 000F62  
            __size_of_MiMAC_SetAltAddress 0002                      ??_mW_ufixed16_to_dBm 0101  
                   _MiApp_StartConnection 9090                          __CFG_CFGPLLEN$ON 000000  
             AddNodeToNetworkTable@handle 0109             __size_of_send_complete_update 0432  
                       ?_SYS_InterruptLow 0001                  ??i1_USBTransferOnePacket 0005  
                         _timerExtension1 00A1                           _timerExtension2 00A2  
                             TxPacket@CCA 010A                  MiApp_ConnectionMode@Mode 0101  
                         __size_of_SPIGet 000A                           __size_of_SPIPut 001C  
             __end_of_MiMAC_DiscardPacket BAD6                        ??_SYS_InterruptLow 001F  
                              DELAY_ms@ms 010C                       _AcknowledgementAddr 01B3  
                            _MiWi_TickGet B0FC              __end_of_MIWIInterruptHandler 53B8  
                  __end_of_MiMAC_SetPower B894                                   __Hparam 0000  
                          _LED_increasing 0045                      ?_USBStdSetCfgHandler 0001  
             __size_of_USBCheckHIDRequest 00FC                                   __Lparam 0000  
                       __end_of_hid_rpt01 2177              __end_of_MiApp_ConnectionMode BA32  
                            ??i2_TxPacket 00AE                                ??_TxPacket 010B  
                              ??_RtccWrOn 0100                             _sendHIDBinary AAFA  
                              CCM_Dec@key 0128                       __size_of_SendBeacon 013C  
            __end_of_MiApp_UnicastAddress 6226                __size_of_USBEnableEndpoint 003C  
                    ??_USBCheckStdRequest 001B                           __size_of___ftge 00C8  
           __size_of_USBCtrlTrfOutHandler 005C                   __size_ofi2_MiWi_TickGet 0074  
                            ??i1___ftpack 0006                                   ___awdiv A13E  
                        _ToSendDataBuffer 0384                           __size_of___lmul 0076  
                                 ___ftadd 68DC                                   ___lbmod B6DA  
                   MIWIInterruptHandler@i 00D7                                CCM_Enc@key 0128  
                                 ___ftneg B9A6                          ??_USBDeviceTasks 001E  
                         __size_of___wmul 0036                                   ___ftmul 7D12  
                              _myAppState 0052                                   ___fttol 825A  
                        _MiApp_SetChannel BAD6                                   ___lwdiv B00E  
                       ??_USBStallHandler 0001                                   ___lwmod B2C6  
                         __size_of_encode 021A                                ??___altoft 0127  
                         __CFG_STVREN$OFF 000000                     __CFG_RTCOSC$INTOSCREF 000000  
                        ?i1_USBDeviceInit 0001                            _tempNodeStatus 00A0  
                                 __pcinit 9AF8                           __size_of_memcpy 0062  
                              ??___ftpack 0105                           __size_of_memset 0034  
               __end_of_configDescriptor1 215A                                   __ramtop 0F00  
                    SendMACPacket@Address 0139                                   __ptext0 3D4A  
                                 __ptext1 977A                              ??_MiMAC_Init 0115  
                                 __ptext2 9E2C                                   __ptext3 A658  
                                 __ptext4 B85A                                   __ptext5 B38A  
                                 __ptext6 BB32                                   __ptext7 B8CE  
                                 __ptext8 53B8                                   __ptext9 BA5E  
                                 _inPipes 0081                                   _myPANID 01F0  
                                 _myMODEL FFF4               _USBDeferOUTDataStagePackets 0049  
                            __size_of_CTR 0120                           __size_of_strcpy 0038  
                       __end_of_hexpowers 20C3                                 _T1CONbits 000FCD  
                                 _dpowers 20B1                              ??_USBSuspend 0015  
                                 _m_power 01C8                  ??_MiApp_MessageAvailable 017D  
                               _T2CONbits 000FCA                     MiApp_NoiseDetection@i 013F  
                   MiApp_NoiseDetection@j 013B                                   _isdigit BA5E  
                   MiApp_NoiseDetection@k 013C                             _myLongAddress 01E8  
                               _T4CONbits 000F76                           ??_SendMACPacket 013C  
                  RegisterRead@IRQ0select 0104                     MiApp_UnicastAddress@i 03D5  
                  RegisterRead@IRQ1select 0103                                   encode@i 0110  
                    _findNextNetworkEntry B7A2                        __end_of_USB_CD_Ptr 20CF  
                              ??_labelcmp 0104                __size_of_SYSTEM_Initialize 013E  
                                 _sprintf 53B8           __size_of_USBCtrlTrfSetupHandler 008E  
                  ??_MiApp_DiscardMessage 0100                            __pintcode_body B256  
                      __end_ofi2_TxPacket 752A                      end_of_initialization 9BC4  
                        _MiWiStateMachine 01B5            __size_of_encode_uint8_variable 00A6  
           __end_of_encode_uint8_variable A9BE                        __end_of_USB_SD_Ptr 20C9  
                    __size_of_timer_reset 001A          MiApp_NoiseDetection@ScanDuration 0121  
                               i2SPIPut@i 00A3                                 i2SPIPut@v 00A4  
                      __end_ofi1___ftpack A86E                  dBm_to_mW_ufixed16@value1 0100  
                dBm_to_mW_ufixed16@value2 0102                                   memcpy@d 0106  
                                 memcpy@n 0104                                   memcpy@s 0108  
                     _pBDTEntryEP0OutNext 003A                                   memset@c 0102  
                                 memset@n 0104                                   memset@p 0106  
                               i1u1071_20 80E0                                 i1u1071_27 80D6  
           MIWIInterruptHandler@BankIndex 00D6             MiMAC_SendPacket@MACPayloadLen 0134  
                               i1u1068_20 804E                                 i1u1068_27 8044  
                               i1u1069_20 8084                                 i1u1069_27 807A  
                                 int_func B256                      __size_ofi2_SetRFMode 0098  
                 SendMACPacket@PacketType 013B                                 i1u1757_20 0094  
                ?_USBStdFeatureReqHandler 0001                                 i2u1160_45 B6CA  
                               i2u1160_46 B6CC                                 i2u1161_45 B6D6  
                               i2u1161_46 B6D8                                 i2u1360_45 B5A2  
                               i2u1360_46 B5A4                                 i2u1361_45 B5AE  
                               i2u1361_46 B5B0                                 i2u1362_45 B792  
                               i2u1362_46 B794                                 i2u1363_45 B79E  
                               i2u1363_46 B7A0                     ??_USBStdSetCfgHandler 0015  
                      __end_of_MiMAC_Init 84E2                           ?_MiMAC_SetPower 0001  
                          ?_sendHIDBinary 010A               MIWIInterruptHandler@counter 00CB  
             encode_uint8_variable@buffer 0100                        __end_of_USBSuspend BAB2  
           encode_uint8_variable@m_signed 010D                   _USBCtrlEPAllowDataStage AA5C  
                 MiMAC_SetChannel@channel 0109                                   postdec1 000FE5  
                                 postdec2 000FDD                      __end_of_RegisterRead B55E  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     __end_of_isSameAddress B608  
                _USBCtrlEPServiceComplete 9594      DELAY_ms@cyclesRequiredForEntireDelay 010E  
                     RegisterRead@address 0105                     MiWiTasks@CapacityByte 0170  
                           WriteFIFO@Data 0102                _USBStatusStageEnabledFlag1 004C  
              _USBStatusStageEnabledFlag2 004D                                _timer_flag 01CB  
                      USBEnableEndpoint@p 000A                           _InitSymbolTimer BB4C  
                   __end_ofi2_RegisterSet B6DA            encode_ufixed16_variable@buffer 0100  
                        ___lbmod@dividend 0101                                _update_LED B38A  
                             _Pwr_updated 009A                                labelcmp@p1 0100  
                              labelcmp@p2 0102                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                      _ReceivedDataBuffer 0400                                encode@text 0100  
                      _BothEP0OutUOWNsSet 0044                     ?_findNextNetworkEntry 0001  
                           _mySecurityKey 0079                                 i1___ftadd 752A  
                 MiMAC_SendPacket@TxIndex 0137             MIWIInterruptHandler@PacketLen 00D5  
                           ?_RouteMessage 013D                 USBConfigureEndpoint@EPNum 0006  
                    __size_ofi2_WriteFIFO 0042                    ?_MiApp_StartConnection 0141  
              ?_USBCtrlEPAllowStatusStage 0001                  _encode_ufixed16_variable A1FC  
                       __size_of_DELAY_ms 00AA       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 0058                  RouteMessage@ShortAddress 013F  
                             ___lbmod@rem 0103                         CCM_Dec@payloadLen 0127  
              MiMAC_SendPacket@transParam 012F                  i1USBTransferOnePacket@ep 0005  
                   _send_answer_to_update 7880                        _dBm_to_mW_ufixed16 8B02  
                              _status_led 0055              __end_of_USBTransferOnePacket 9A20  
                 ??_AddNodeToNetworkTable 0106                               _CCP1CONbits 000FBA  
              MiMAC_SetAltAddress@Address 0100           __size_ofi1_USBTransferOnePacket 00BA  
               MiApp_UnicastAddress@SecEn 0180                            __end_of_PVALUE 2091  
                          __end_of_SVALUE 20B1                            __end_of_SPIGet BB9C  
                          __end_of_SPIPut BB16                    SearchForShortAddress@i 0102  
                             ___ftmul@exp 0141                       ?_dBm_to_mW_ufixed16 0100  
                     _UnicastShortAddress ACC2                    _USBCtrlTrfSetupHandler AE7C  
                   __end_of_USBDeviceInit 7D12                            __end_of___ftge 9D64  
                          __end_of___lmul B0FC                              sendHIDText@c 010A  
                            sendHIDText@p 010D                            __end_of___wmul B93C  
                       __size_ofi2_SPIGet 000A                         __size_ofi2_SPIPut 001C  
                               i1memset@c 0003                                 i1memset@n 0005  
                               i1memset@p 0007                             __pidataCOMRAM BBAC  
                               _MiWiTasks 23C6                            __end_of_encode 6FB2  
                          __end_of_memcpy B38A                            __end_of_memset B9A6  
                              floor@expon 0133                         _USBBusIsSuspended 0047  
                          __end_of_strcpy B906           __size_of_MiApp_MessageAvailable 0012  
        MiMAC_ReceivedPacket@PayloadIndex 0145                  __end_of_MiMAC_SetChannel A4E4  
                     start_initialization 9AF8                     _SearchForShortAddress AF0A  
                            ??_SendBeacon 013D                   ?_USBStdGetStatusHandler 0001  
                             __end_of_CTR 8E6C             MiApp_NoiseDetection@RSSIValue 0123  
           USBCtrlTrfRxService@byteToRead 0002                      ??_dBm_to_mW_ufixed16 0104  
                    _MIWIInterruptHandler 4E68                      ?_UnicastShortAddress 0148  
                     WriteFIFO@IRQ0select 0104                             TxPacket@reTry 011C  
           MiApp_NoiseDetection@RSSIcheck 013D                       WriteFIFO@IRQ1select 0103  
                              ?i1___ftadd 0009                  __end_of_MiMAC_SendPacket 6D98  
                          ??_RouteMessage 0142                      _MiApp_ConnectionMode BA06  
                      TxPacket@CCARetries 011B                         __size_ofi1_memset 002C  
              i2TxPacket@allowedTxFailure 00C1                      _MiApp_UnicastAddress 5DBC  
            __end_of_USBConfigureEndpoint ADEC             MIWIInterruptHandler@ackPacket 00CE  
         __end_of_USBStdFeatureReqHandler 68DC                                 _SetRFMode AB92  
       __end_of_USBCtrlEPAllowStatusStage A07A                  __size_of_BroadcastJitter 00BA  
                                CBC_MAC@i 0123                                  CBC_MAC@j 0122  
                              frexp@value 0100                  __end_of_USBCtrlEPService 9C9C  
                                ??_SPIGet 0102                                  ??_SPIPut 0100  
                         ??_sendHIDBinary 010D                                 _dBm_to_mW A2B6  
               ??_USBCtrlEPAllowDataStage 0002                            _currentChannel 01F6  
                          USBDeviceInit@i 0108                                 TxPacket@i 0120  
                  _pBDTEntryEP0OutCurrent 0038                                  CCM_Dec@i 0132  
                 USBTransferOnePacket@dir 0100                                  CCM_Enc@i 012E  
                 USBTransferOnePacket@len 0103                                  ??___ftge 0106  
                 __end_of_InitSymbolTimer BB64                            i2_MiWi_TickGet B170  
                                ??___lmul 0108                        __end_of_SendBeacon 889E  
                                ??___wmul 0104         MiApp_UnicastAddress@PermanentAddr 017F  
                     _USBStdGetDscHandler 7FC6                                  ??_encode 0104  
                             __pdataBANK1 01F8                               __pdataBANK2 02F9  
                mW_ufixed16_to_dBm@value1 0101                         __size_of_TxPacket 01AA  
                mW_ufixed16_to_dBm@value2 0100                         __size_of_RtccWrOn 0012  
                     _MiMAC_SetAltAddress BBB2                                  ??_memcpy 0106  
                                ?_CBC_MAC 0117                                  ??_memset 0106  
            MiApp_StartConnection@channel 0148                     _send_network_register A710  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 0124  
                                ?_CCM_Enc 0124                    i1_USBTransferOnePacket A59E  
                            ?_RegisterSet 0102                                  ??_strcpy 0104  
                       __size_of___altoft 009E             MIWIInterruptHandler@fifo_stat 00CD  
                             _ALRMCFGbits 000F47                    _USBActiveConfiguration 0056  
          __end_of_USBStdGetStatusHandler A59E                         RegisterRead@value 0102  
                       __size_of___ftpack 010C                 i1USBTransferOnePacket@dir 0001  
               i1USBTransferOnePacket@len 0004                   MiWi_TickGet@currentTime 0106  
                             __pbssCOMRAM 0032                    ??_findNextNetworkEntry 0100  
                             ?_update_LED 0001                     ?_MIWIInterruptHandler 0001  
                   ??_UnicastShortAddress 014A                                 _WriteFIFO B71E  
                           __pcstackBANK0 00A3                             __pcstackBANK1 0100  
                           __pcstackBANK3 03C4              __size_of_USBCtrlTrfInHandler 00C4  
                   ?_MiApp_ConnectionMode 0001                                  CTR@block 0121  
                             _defaultHops 01F9                     ?_MiApp_UnicastAddress 017D  
                    ?_USBStdGetDscHandler 0001                              _isdigit$5571 0101  
              __end_of_MiApp_ProtocolInit 7BB2                  __end_of_MiApp_SetChannel BAFA  
           __size_of_send_periodic_update 01DA                                ?_SetRFMode 0001  
              __end_of_TX_POWER_N_2_DB_MW 21A9                      ?_MiMAC_SetAltAddress 0100  
                  ?_send_answer_to_update 0001                          __p_myMODEL_const FFF4  
              __end_of_TX_POWER_N_5_DB_MW 21AF                       __end_of_PANID_LABEL 20CD  
                             MiMAC_Init@i 0115                         __size_of_labelcmp 00B8  
                           ??_sendHIDText 0109                __end_of_USBWakeFromSuspend BA06  
            __end_of_MiApp_NoiseDetection 71A0                __end_of_TX_POWER_N_8_DB_MW 2197  
                             sprintf@flag 0126                               sprintf@prec 011D  
                         _USBStallHandler B64E                              _pBDTEntryOut 008F  
                     sendHIDBinary@buffer 010A                                ?_dBm_to_mW 0100  
                     sendHIDBinary@length 010C                     __size_of_RegisterRead 0058  
                  _MiApp_MessageAvailable BB76                  __size_of_USBDeviceAttach 003A  
                __size_of_update_variable 00EC                    __end_ofi2_MiWi_TickGet B1E4  
                               _main$4921 03DA                         MiMAC_SendPacket@i 0138  
                               _main$4898 03D8                          ___lwdiv@dividend 0100  
                        _MiWiCapacityInfo 01C2           encode_uint8_variable@m_writable 010E  
                             CBC_MAC@text 0117                                 __pintcode 0008  
                           __pmediumconst 1FF4                                  ?___awdiv 0106  
                               __ptext100 7FC6                                 __ptext101 6658  
                               __ptext110 B4AA                                 __ptext102 B1E4  
                               __ptext111 8E6C                                 __ptext103 93A4  
                               __ptext120 AC2A                                 __ptext112 9FB6  
                               __ptext104 B7E0                                 __ptext121 B694  
                               __ptext113 A07A                                 __ptext105 B3EA  
                               __ptext122 B55E                                 __ptext114 9A20  
                               __ptext106 B93C                                 __ptext123 BB9C  
                               __ptext107 A59E                                 __ptext124 BB16  
                               __ptext116 4E68                                 __ptext108 B81E  
                               __ptext125 B170                                 __ptext117 B44A  
                               __ptext109 AD58                                  ?___ftadd 0108  
                               __ptext118 737A                                 __ptext119 B760  
               MiMAC_SendPacket@headerLen 0136                                  ?___lbmod 0100  
                                ?___ftneg 0135                                  ?___ftmul 0138  
                                ?___fttol 0114                                  ?___lwdiv 0100  
                                ?___lwmod 0107               MiApp_UnicastAddress@t1_2749 03CC  
             MiApp_UnicastAddress@t2_2760 03D0                                 _hid_rpt01 215A  
            __end_of_send_complete_update 6658                               __pintcodelo 0018  
               __size_of_SYS_InterruptLow 01CC                                 _idle_rate 005A  
                ?_MiMAC_ChannelAssessment 0001                            MiWiTasks@entry 017A  
                    _USBTransferOnePacket 9948                    ?_SearchForShortAddress 0001  
           __size_of_SearchForLongAddress 00C8                                  ?_isdigit 0001  
                              ?_WriteFIFO 0001                        _AcknowledgementSeq 01F8  
                                _CCPTMRS0 000F52             __size_of_MiMAC_ReceivedPacket 04B8  
                                _DELAY_ms A86E              __end_of_USBCtrlTrfOutHandler B506  
                        CCM_Dec@headerLen 0126                               ??i1___ftadd 000F  
                               _hexpowers 20BB                     ??_USBStdGetDscHandler 0001  
             MiWiTasks@sourceShortAddress 0178                  __size_of_decode_variable 00F4  
                               _last_rssi 0051                               _ep_data_out 0097  
                        ___lwdiv@quotient 0105                                  ?_sprintf 010C  
                          __size_of_floor 00FE                            __size_of_frexp 0090  
            __size_of_USBCtrlTrfRxService 0118                              _RegisterRead B506  
           USBConfigureEndpoint@direction 0001                     ??_MiMAC_SetAltAddress 0104  
                        MiWiTasks@t1_2546 0156                          MiWiTasks@t2_2557 015A  
               MiMAC_SetPower@outputPower 0108               __size_of_mW_ufixed16_to_dBm 00C6  
                        ??_MiMAC_SetPower 0106               encode_ufixed16_variable@var 0102  
            __size_of_USBCtrlTrfTxService 00D8                    _UPDATE_FREQUENCY_LABEL 21C9  
                          ___wmul@product 0104                   __size_ofi2_RegisterRead 0058  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                    i2RegisterSet@setting 00A5                                  _LATCbits 000F8B  
              __end_of_USBCheckHIDRequest 94A0                MiWiTasks@coordinatorNumber 0168  
                               _tempPANID 01BB                ??_USBCtrlEPServiceComplete 0002  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                                  _PIE2bits 000FA0  
                 dBm_to_mW_ufixed16@power 0104                                  _PIE3bits 000FA3  
                   MiWiTasks@CoordAddress 015E                           ?i2_MiWi_TickGet 00A3  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_BroadcastJitter 010A  
                     __end_of_NOISE_LABEL 21C1                                 _rxMessage 0190  
               USBCtrlEPService@setup_cnt 001D                                  i1u993_20 9AA2  
                                i1u993_27 9A98                                  i1u995_20 9AE2  
                                i1u995_27 9AD8                       __size_of_update_LED 0060  
                     __end_of_sendHIDText 9FB6                                  _RCONbits 000FD0  
                                i2_SPIGet BB9C                                  _UEP0bits 000F26  
                                i2_SPIPut BB16                          ?_InitSymbolTimer 0001  
              _USBDeferINDataStagePackets 0048                                  _SSP2CON1 000F72  
             __size_of_USBCheckStdRequest 00F2                      __end_of_RouteMessage 4E68  
                encode_uint8_variable@var 0102                                  _UCONbits 000F65  
                                _SSP2STAT 000F73              __size_of_MiMAC_DiscardPacket 0024  
                  ?_send_network_register 0001           MIWIInterruptHandler@RxPacketPtr 00D3  
                    _USBConfigureEndpoint AD58         MiApp_StartConnection@ScanDuration 0141  
                             ??_MiWiTasks 014A                               _MACRxPacket 019A  
                         main@last_update 03D7                                 encode@key 0102  
                               encode@sum 0115                                  _RSSILock 01C4  
        __size_of_USBStdFeatureReqHandler 0284                               _MACTxBuffer 0266  
                           SetRFMode@mode 0106                          __size_of_CBC_MAC 010A  
        encode_ufixed16_variable@m_signed 010D                           _m_sent_messages 0087  
                       ___wmul@multiplier 0100                     ?_USBTransferOnePacket 0100  
                        MiWiTasks@rxIndex 016F                          __size_of_CCM_Dec 0156  
                        __size_of_CCM_Enc 0134                ??_encode_ufixed16_variable 010C  
                  ??_MIWIInterruptHandler 00C5                         _SYS_InterruptHigh 0008  
                       RouteMessage@PANID 013D                     i2TxPacket@TxPacketLen 00C2  
                                i1_memset BA32                    ??_MiApp_ConnectionMode 0100  
                            _RemoteWakeup 0046            MiApp_NoiseDetection@ChannelMap 011D  
                    _OutgoingFrameCounter 01A2                                 main@power 03DC  
                  ??_MiApp_UnicastAddress 0181                   ??_MiApp_StartConnection 0146  
                             _PANID_LABEL 20C9                        ?_SYS_InterruptHigh 0001  
                       RouteMessage@SecEn 0141                  __size_ofi1_USBDeviceInit 0142  
                         _MiWiAckRequired 01C1                             ??_timer_reset 0100  
                 __end_of_USBStallHandler B694                     __end_of_SendMACPacket B00E  
                                _ConnMode 01BF                      __end_of_UPTIME_LABEL 21D1  
               _send_complete_update$6060 0148                 _send_complete_update$6061 014B  
               _send_complete_update$6062 014E                 _send_complete_update$6063 0151  
                   __end_of_CHANNEL_LABEL 21BD                         ___lmul@multiplier 0100  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                               copy_data0 9B7C                             ??i2_SetRFMode 00A9  
                             ??_SetRFMode 0106               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 9948                     SearchForLongAddress@i 0105  
                   SearchForLongAddress@j 0104             __size_of_MiApp_DiscardMessage 000A  
                     ??_SYS_InterruptHigh 00D8                                  _TxMACSeq 009D  
                                _ScanTime 2035                     _encode_uint8_variable A918  
                      __end_of_device_dsc 2189                               ??_dBm_to_mW 0102  
                               frexp@eptr 0103                                  __Hparam0 0000  
                ??_APP_LEDUpdateUSBStatus 0001            __size_of_AddNodeToNetworkTable 0124  
                 ?_USBCtrlTrfSetupHandler 0001             __end_of_AddNodeToNetworkTable 8D4C  
                 USBStdGetStatusHandler@p 0002                                  __Lparam0 0000  
                           ?i1_update_LED 0001                                  _RxPacket 0300  
                                _TxBuffer 02A6                    USBTransferOnePacket@ep 0104  
                                _TxPacket 76D6                                  _RtccWrOn BB64  
                                _SetupPkt 000D20                               CCM_Dec@text 0124  
         __end_of_MiMAC_ChannelAssessment 8B02                     ?_USBConfigureEndpoint 0001  
                   MiMAC_ReceivedPacket@i 0146                     MiMAC_ReceivedPacket@j 0144  
                   MiMAC_ReceivedPacket@k 0143                         ??_USBDeviceAttach 0100  
                     __end_of_POWER_LABEL 21C5                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___lbmod 0044  
                        __size_of___ftneg 0030                                  ___altoft A9BE  
                        __size_of___ftmul 015E                         ??_update_variable 0109  
                        __size_of___fttol 0144                           _tempLongAddress 01A6  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                                ___ftpack 8F84                               CCM_Enc@text 0124  
               __end_of_SYS_InterruptHigh B2C6                  i2RegisterRead@IRQ0select 00A7  
                    _MiApp_NoiseDetection 6FB2                  i2RegisterRead@IRQ1select 00A6  
                      _sendHIDBinary$4970 010E                  MiMAC_ChannelAssessment@i 011C  
                MiMAC_ChannelAssessment@k 0119                    AddNodeToNetworkTable@i 0108  
                              sprintf@idx 011C                                sprintf@len 0122  
                              sprintf@val 0124                      __size_of_RegisterSet 0046  
                        main@shortaddress 03E1                             ??i2_WriteFIFO 00A5  
                           ?i2_update_LED 0001                               ??_WriteFIFO 0102  
                        __size_of_isdigit 002A                         ?_MiMAC_SetChannel 0107  
                 __size_of_USBDeviceTasks 0146                           ___lwdiv@divisor 0102  
                         ___lwdiv@counter 0104                                  __ptext10 B906  
                                __ptext11 B2C6                                  __ptext20 A9BE  
                                __ptext12 71A0                                  __ptext21 B9A6  
                                __ptext13 A710                                  __ptext30 9948  
                                __ptext22 7D12                                  __ptext14 6226  
                                __ptext31 94A0                                  __ptext23 8F84  
                                __ptext15 92A6                                  __ptext40 BB76  
                                __ptext32 B328                                  __ptext24 7880  
                                __ptext16 ADEC                                  __ptext41 23C6  
                                __ptext33 A2B6                                  __ptext25 AAFA  
                                __ptext17 825A                                  __ptext50 5904  
                                __ptext42 ACC2                                  __ptext34 7BB2  
                                __ptext26 A918                                  __ptext18 9C9C  
                                __ptext51 B5B6                                  __ptext43 480E  
                                __ptext35 B972                                  __ptext27 A1FC  
                                __ptext19 68DC                                  __ptext60 AF0A  
                                __ptext52 7E70                                  __ptext44 8762  
                                __ptext36 B894                                  __ptext28 8B02  
                                __ptext61 9D64                                  __ptext53 8D4C  
                                __ptext45 AF92                                  __ptext37 8624  
                                __ptext29 9EF2                                  __ptext70 B506  
                                __ptext62 BB88                                  __ptext54 919C  
                                __ptext46 6B44                                  __ptext38 BB64  
                                __ptext71 BB92                                  __ptext63 BAB2  
                                __ptext55 6D98                                  __ptext47 76D6  
                                __ptext39 5DBC                                  __ptext80 B608  
                                __ptext72 7A22                                  __ptext64 9090  
                                __ptext56 A370                                  __ptext48 B71E  
                                __ptext81 BAFA                                  __ptext73 BBB2  
                                __ptext65 6FB2                                  __ptext57 B6DA  
                                __ptext49 889E                                  __ptext90 BA88  
                                __ptext82 BB4C                                  __ptext74 839E  
                                __ptext66 B0FC                                  __ptext58 8C28  
                                __ptext91 B64E                                  __ptext83 BA06  
                                __ptext75 A86E                                  __ptext67 89D2  
                                __ptext59 B7A2                                  __ptext92 9BCE  
                                __ptext76 B086                                  __ptext68 B00E  
                                __ptext93 AE7C                                  __ptext85 752A  
                                __ptext77 BAD6                                  __ptext69 A13E  
                                __ptext94 9594                                  __ptext86 A7C0  
                                __ptext78 A42A                                  __ptext95 AA5C  
                                __ptext87 8114                                  __ptext79 AB92  
                                __ptext96 9688                                  __ptext88 84E2  
                                __ptext97 9866                                  __ptext89 B9D6  
                                __ptext98 BA32                                  __ptext99 A4E4  
                                _labelcmp A658                  TxPacket@allowedTxFailure 011D  
                      ??_MiMAC_SetChannel 0108                         ?_MiMAC_SendPacket 012F  
                           _labelcmp$5111 0107                              _SSP2CON1bits 000F72  
                                _m_buffer 02D1                             MiWiTasks@mask 0160  
                  RouteMessage@parentNode 0146                          __size_of_sprintf 054C  
                  __size_of_isSameAddress 0052                                strcpy@from 0102  
                      ??_MiMAC_SendPacket 0135                                  _p_buffer 01B9  
                    _send_complete_update 6226                               _NOISE_LABEL 21BD  
                             _sendHIDText 9EF2            __end_of_USBCtrlTrfSetupHandler AF0A  
                           __size_of_main 0AC4                         ?_USBCtrlEPService 0001  
                  MiApp_NoiseDetection@t1 0132                    MiApp_NoiseDetection@t2 0136  
                     __end_of_timer_reset BB4C                         ??_decode_variable 0114  
                                _myParent 01C9                            ??i1_update_LED 0001  
                  __size_ofi2_RegisterSet 0046                       __end_ofi2_SetRFMode ACC2  
                      ??_USBCtrlEPService 001B                       _USBCtrlTrfInHandler A07A  
                  MiApp_UnicastAddress@t1 03C4                    MiApp_UnicastAddress@t2 03C8  
                                _tmpBlock 01EC                          _tempShortAddress 01F4  
                                _outPipes 0060                      _USBCtrlTrfOutHandler B4AA  
                                int$flags 005E                   ?i1_USBTransferOnePacket 0001  
               _USBCtrlEPAllowStatusStage 9FB6                         _TX_POWER_10_DB_MW 21AF  
            i2MiWi_TickGet@failureCounter 00A8                         _TX_POWER_13_DB_MW 21B4  
                        _SYS_InterruptLow 0018                    ??_USBTransferOnePacket 0104  
                                main@size 03E0                                  main@rssi 03DD  
                   ?_MiApp_NoiseDetection 011D                MiMAC_SendPacket@MACPayload 0132  
          ?_APP_DeviceCustomHIDInitialize 0001                     __CFG_CPUDIV$OSC3_PLL3 000000  
                   findNextNetworkEntry@i 0100                 _USBDeferStatusStagePacket 004A  
                        i1USBDeviceInit@i 0009                               _OSCTUNEbits 000F9B  
                          ??i2_update_LED 00A3                                _INTCONbits 000FF2  
                         do_UPDATE@F10257 0042                              ??_update_LED 0100  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0100  
                         i2WriteFIFO@Data 00A5                                  memcpy@s1 0102  
           USBCtrlTrfTxService@byteToSend 0001                   ??_send_answer_to_update 0110  
             __size_of_dBm_to_mW_ufixed16 0126                                  isdigit@c 0102  
                                memset@p1 0100         MiApp_NoiseDetection@DetectionMode 0122  
                             _repeat_full 0053                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                                  intlevel1 0000  
                                intlevel2 0000                         ?_MiApp_SetChannel 0001  
                               sprintf@ap 0120                                 sprintf@cp 011E  
                               sprintf@sp 010C                     ?_send_complete_update 0001  
                 ?_MiApp_MessageAvailable 0001                       __end_ofi2_WriteFIFO B7A2  
                  __size_of_USBDeviceInit 0160                    ?_encode_uint8_variable 0100  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER B256  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0072  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER B1E4                            i2_RegisterRead B55E  
                       ??i1_USBDeviceInit 0009                          ___lwmod@dividend 0107  
                             _noise_level 01F7                        ??_MiApp_SetChannel 010A  
    SYSTEM_Initialize@pll_startup_counter 0100                             ?_MiWi_TickGet 0100  
                   __size_of_RouteMessage 065A                               _POWER_LABEL 21C1  
         __size_of_APP_LEDUpdateUSBStatus 003E                     __end_of_sendHIDBinary AB92  
                      _m_update_frequency 01FA                        _MiApp_ProtocolInit 7A22  
               __end_of_TX_POWER_10_DB_MW 21B4            __end_ofi1_USBTransferOnePacket A658  
                             _RTCVALHbits 000F3B                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW 21B9                        _TX_POWER_N_2_DB_MW 21A3  
                           _MACInitParams 01AA                        __end_of_update_LED B3EA  
            __end_of_send_periodic_update 737A                       MiMAC_Init@initValue 0112  
                      _TX_POWER_N_5_DB_MW 21A9                       _USBCtrlTrfRxService 8E6C  
                      _USBWakeFromSuspend B9D6                        _TX_POWER_N_8_DB_MW 2190  
                 _USBStdFeatureReqHandler 6658                             _isSameAddress B5B6  
                 ??_SearchForShortAddress 0100                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 0105                       _USBCtrlTrfTxService 9A20  
             __end_of_UnicastShortAddress AD58                __size_of_SYS_InterruptHigh B2BE  
                              _RTCCFGbits 000F3F          __end_of_encode_ufixed16_variable A2B6  
                          __p_myUID_const FFF6                          _BroadcastRecords 0228  
                                sprintf@c 0129                                  sprintf@f 010E  
                      MiWiTasks@destPANID 016D                          _TX_POWER_1_DB_MW 2189  
                           i2_RegisterSet B694                       ?_USBWakeFromSuspend 0001  
                              _PPSCONbits 000EBF                          _TX_POWER_4_DB_MW 2197  
                             MiWiTasks@t1 0164                               MiWiTasks@t2 0152  
                         ___lwmod@divisor 0109                     ??_USBCtrlTrfInHandler 0002  
                                strcpy@cp 0104                                  strcpy@to 0100  
                   _USBAlternateInterface 0057                           ___lwmod@counter 010B  
                       i2TxPacket@rssival 00C4                       TxPacket@TxPacketLen 011F  
                        _TX_POWER_7_DB_MW 21C5                       USBEnableEndpoint@ep 000C  
                         _endpoint_number 0050                               _timer_count 005D  
                    i2TxPacket@CCARetries 00BF             __size_of_findNextNetworkEntry 003E  
                             _timer_reset BB32                      ?_USBCtrlTrfRxService 0001  
          __end_of_MiApp_MessageAvailable BB88                    __end_ofi2_RegisterRead B5B6  
                            _RouteMessage 480E                          _TX_POWER_INVALID 219D  
                     _MiMAC_DiscardPacket BAB2                         _knownCoordinators 01C7  
                          _RouterFailures 0069                           _BroadcastJitter A370  
                             i2_SetRFMode AC2A                                MiWiTasks@i 017C  
                              MiWiTasks@j 017B                  ?_USBCtrlEPAllowDataStage 0001  
        __size_of_MiMAC_ChannelAssessment 0130                      ??_MiApp_ProtocolInit 0116  
                        i2TxPacket@status 00BE                      ?_USBCtrlTrfTxService 0001  
                        ??i2_MiWi_TickGet 00A7                       MiWiTasks@entry_2536 0161  
                         i2TxPacket@reTry 00C0              _USBStatusStageTimeoutCounter 004E  
                          ??_MiWi_TickGet 0104              __end_of_SearchForLongAddress 9E2C  
                    ??_USBWakeFromSuspend 0015                             i2TxPacket@CCA 00AD  
          _StaticSecurityKey_absconstaddr 001FEC                 i2MiWi_TickGet@currentTime 00A9  
              USBTransferOnePacket@handle 0105                               encode@delta 010E  
                   RegisterSet@IRQ0select 0105                  MiWiTasks@associateStatus 0163  
                   RegisterSet@IRQ1select 0104              __end_of_MiMAC_ReceivedPacket 5DBC  
                              _USB_CD_Ptr 20CD                              i2TxPacket@t1 00B6  
                            i2TxPacket@t2 00BA                               encode@part1 0111  
                             encode@part2 0113                   ??_send_network_register 0110  
                             i2TxPacket@i 00C3                               _USBInHandle 0093  
