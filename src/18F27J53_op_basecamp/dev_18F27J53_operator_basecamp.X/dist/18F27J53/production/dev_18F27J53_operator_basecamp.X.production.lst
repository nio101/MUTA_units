

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 04 10:59:16 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	_StaticSecurityKey_const,global,ovrld,reloc=2,class=CODE,delta=1
    10                           	psect	_myUID_const,global,ovrld,reloc=2,class=CODE,delta=1
    11                           	psect	_myMODEL_const,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	_myMUTA_version_const,global,ovrld,reloc=2,class=CODE,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1
   129                           	psect	text100,global,reloc=2,class=CODE,delta=1
   130                           	psect	text101,global,reloc=2,class=CODE,delta=1
   131                           	psect	text102,global,reloc=2,class=CODE,delta=1
   132                           	psect	text103,global,reloc=2,class=CODE,delta=1
   133                           	psect	text104,global,reloc=2,class=CODE,delta=1
   134                           	psect	text105,global,reloc=2,class=CODE,delta=1
   135                           	psect	text106,global,reloc=2,class=CODE,delta=1
   136                           	psect	text107,global,reloc=2,class=CODE,delta=1
   137                           	psect	text108,global,reloc=2,class=CODE,delta=1
   138                           	psect	text109,global,reloc=2,class=CODE,delta=1
   139                           	psect	text110,global,reloc=2,class=CODE,delta=1
   140                           	psect	text111,global,reloc=2,class=CODE,delta=1
   141                           	psect	text112,global,reloc=2,class=CODE,delta=1
   142                           	psect	text113,global,reloc=2,class=CODE,delta=1
   143                           	psect	text114,global,reloc=2,class=CODE,delta=1
   144                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   145                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   146                           	psect	text116,global,reloc=2,class=CODE,delta=1
   147                           	psect	text117,global,reloc=2,class=CODE,delta=1
   148                           	psect	text118,global,reloc=2,class=CODE,delta=1
   149                           	psect	text119,global,reloc=2,class=CODE,delta=1
   150                           	psect	text120,global,reloc=2,class=CODE,delta=1
   151                           	psect	text121,global,reloc=2,class=CODE,delta=1
   152                           	psect	text122,global,reloc=2,class=CODE,delta=1
   153                           	psect	text123,global,reloc=2,class=CODE,delta=1
   154                           	psect	text124,global,reloc=2,class=CODE,delta=1
   155                           	psect	text125,global,reloc=2,class=CODE,delta=1
   156                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   157                           	psect	param0,global,class=BANK0,space=1,delta=1
   158                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   159                           	dabs	1,0xD00,32,_BDT
   160                           	dabs	1,0xD28,8,_CtrlTrfData
   161                           	dabs	1,0xD20,8,_SetupPkt
   162  0000                     
   163                           	psect	idataCOMRAM
   164  00BBA6                     __pidataCOMRAM:
   165                           	opt stack 0
   166                           
   167                           ;initializer for _LED_brightness
   168  00BBA6  00EB               	dw	235
   169                           
   170                           ;initializer for _timer_count
   171  00BBA8  01                 	db	1
   172                           
   173                           	psect	idataBANK1
   174  00BBA9                     __pidataBANK1:
   175                           	opt stack 0
   176                           
   177                           ;initializer for _AcknowledgementSeq
   178  00BBA9  FF                 	db	255
   179                           
   180                           ;initializer for _defaultHops
   181  00BBAA  04                 	db	4
   182                           
   183                           ;initializer for _m_update_frequency
   184  00BBAB  01                 	db	1
   185                           
   186                           	psect	idataBANK2
   187  00BBA0                     __pidataBANK2:
   188                           	opt stack 0
   189                           
   190                           ;initializer for MiMAC_ChannelAssessment@F10758
   191  00BBA0  2A                 	db	42
   192  00BBA1  4E                 	db	78
   193  00BBA2  72                 	db	114
   194  00BBA3  96                 	db	150
   195  00BBA4  BA                 	db	186
   196  00BBA5  DE                 	db	222
   197                           
   198                           	psect	mediumconst
   199  001FF4                     __pmediumconst:
   200                           	opt stack 0
   201  001FF4  00                 	db	0
   202  001FF5                     _InitConfigRegs:
   203                           	opt stack 0
   204  001FF5  0036               	dw	54
   205  001FF7  0284               	dw	644
   206  001FF9  0409               	dw	1033
   207  001FFB  0609               	dw	1545
   208  001FFD  080C               	dw	2060
   209  001FFF  0AC1               	dw	2753
   210  002001  0C7D               	dw	3197
   211  002003  0E64               	dw	3684
   212  002005  1014               	dw	4116
   213  002007  1200               	dw	4608
   214  002009  1400               	dw	5120
   215  00200B  1600               	dw	5632
   216  00200D  1838               	dw	6200
   217  00200F  1AC8               	dw	6856
   218  002011  1C0D               	dw	7181
   219  002013  1E00               	dw	7680
   220  002015  2072               	dw	8306
   221  002017  2238               	dw	8760
   222  002019  2438               	dw	9272
   223  00201B  2607               	dw	9735
   224  00201D  2800               	dw	10240
   225  00201F  2A00               	dw	10752
   226  002021  2C69               	dw	11369
   227  002023  2E81               	dw	11905
   228  002025  307E               	dw	12414
   229  002027  3296               	dw	12950
   230  002029  34F0               	dw	13552
   231  00202B  3688               	dw	13960
   232  00202D  3840               	dw	14400
   233  00202F  3A00               	dw	14848
   234  002031  3CE8               	dw	15592
   235  002033  3E00               	dw	15872
   236  002035                     __end_of_InitConfigRegs:
   237                           	opt stack 0
   238  002035                     _ScanTime:
   239                           	opt stack 0
   240  002035  03C0               	dw	960
   241  002037  0000               	dw	0
   242  002039  05A0               	dw	1440
   243  00203B  0000               	dw	0
   244  00203D  0960               	dw	2400
   245  00203F  0000               	dw	0
   246  002041  10E0               	dw	4320
   247  002043  0000               	dw	0
   248  002045  1FE0               	dw	8160
   249  002047  0000               	dw	0
   250  002049  3DE0               	dw	15840
   251  00204B  0000               	dw	0
   252  00204D  79E0               	dw	31200
   253  00204F  0000               	dw	0
   254  002051  F1E0               	dw	61920
   255  002053  0000               	dw	0
   256  002055  E1E0               	dw	57824
   257  002057  0001               	dw	1
   258  002059  C1E0               	dw	49632
   259  00205B  0003               	dw	3
   260  00205D  81E0               	dw	33248
   261  00205F  0007               	dw	7
   262  002061  01E0               	dw	480
   263  002063  000F               	dw	15
   264  002065  01E0               	dw	480
   265  002067  001E               	dw	30
   266  002069  3D44               	dw	15684
   267  00206B  001B               	dw	27
   268  00206D  B40D               	dw	46093
   269  00206F  0015               	dw	21
   270  002071                     __end_of_ScanTime:
   271                           	opt stack 0
   272  002071                     _PVALUE:
   273                           	opt stack 0
   274  002071  4F                 	db	79
   275  002072  4F                 	db	79
   276  002073  4F                 	db	79
   277  002074  4F                 	db	79
   278  002075  4F                 	db	79
   279  002076  4F                 	db	79
   280  002077  4F                 	db	79
   281  002078  4F                 	db	79
   282  002079  4F                 	db	79
   283  00207A  4F                 	db	79
   284  00207B  4F                 	db	79
   285  00207C  4F                 	db	79
   286  00207D  4F                 	db	79
   287  00207E  4F                 	db	79
   288  00207F  4F                 	db	79
   289  002080  4F                 	db	79
   290  002081  4F                 	db	79
   291  002082  4F                 	db	79
   292  002083  4F                 	db	79
   293  002084  4F                 	db	79
   294  002085  4F                 	db	79
   295  002086  4F                 	db	79
   296  002087  50                 	db	80
   297  002088  50                 	db	80
   298  002089  50                 	db	80
   299  00208A  50                 	db	80
   300  00208B  50                 	db	80
   301  00208C  50                 	db	80
   302  00208D  50                 	db	80
   303  00208E  50                 	db	80
   304  00208F  50                 	db	80
   305  002090  50                 	db	80
   306  002091                     __end_of_PVALUE:
   307                           	opt stack 0
   308  002091                     _SVALUE:
   309                           	opt stack 0
   310  002091  22                 	db	34
   311  002092  24                 	db	36
   312  002093  26                 	db	38
   313  002094  28                 	db	40
   314  002095  2A                 	db	42
   315  002096  2C                 	db	44
   316  002097  2E                 	db	46
   317  002098  30                 	db	48
   318  002099  32                 	db	50
   319  00209A  34                 	db	52
   320  00209B  37                 	db	55
   321  00209C  39                 	db	57
   322  00209D  3B                 	db	59
   323  00209E  3D                 	db	61
   324  00209F  3F                 	db	63
   325  0020A0  41                 	db	65
   326  0020A1  43                 	db	67
   327  0020A2  45                 	db	69
   328  0020A3  47                 	db	71
   329  0020A4  4A                 	db	74
   330  0020A5  4C                 	db	76
   331  0020A6  4E                 	db	78
   332  0020A7  05                 	db	5
   333  0020A8  07                 	db	7
   334  0020A9  09                 	db	9
   335  0020AA  0B                 	db	11
   336  0020AB  0D                 	db	13
   337  0020AC  0F                 	db	15
   338  0020AD  11                 	db	17
   339  0020AE  14                 	db	20
   340  0020AF  16                 	db	22
   341  0020B0  18                 	db	24
   342  0020B1                     __end_of_SVALUE:
   343                           	opt stack 0
   344  0020B1                     _dpowers:
   345                           	opt stack 0
   346  0020B1  0001               	dw	1
   347  0020B3  000A               	dw	10
   348  0020B5  0064               	dw	100
   349  0020B7  03E8               	dw	1000
   350  0020B9  2710               	dw	10000
   351  0020BB                     __end_of_dpowers:
   352                           	opt stack 0
   353  0000                     _StaticSecurityKey_absconstaddr	set	8172
   354  0020BB                     _hexpowers:
   355                           	opt stack 0
   356  0020BB  0001               	dw	1
   357  0020BD  0010               	dw	16
   358  0020BF  0100               	dw	256
   359  0020C1  1000               	dw	4096
   360  0020C3                     __end_of_hexpowers:
   361                           	opt stack 0
   362  0020C3                     _USB_SD_Ptr:
   363                           	opt stack 0
   364  0020C3  D1                 	db	low _sd000
   365  0020C4  21                 	db	high _sd000
   366  0020C5  CF                 	db	low _sd001
   367  0020C6  20                 	db	high _sd001
   368  0020C7  03                 	db	low _sd002
   369  0020C8  21                 	db	high _sd002
   370  0020C9                     __end_of_USB_SD_Ptr:
   371                           	opt stack 0
   372  0020C9                     _PANID_LABEL:
   373                           	opt stack 0
   374  0020C9  50                 	db	80
   375  0020CA  41                 	db	65
   376  0020CB  4E                 	db	78
   377  0020CC  00                 	db	0
   378  0020CD                     __end_of_PANID_LABEL:
   379                           	opt stack 0
   380  0020CD                     _USB_CD_Ptr:
   381                           	opt stack 0
   382  0020CD  31                 	db	low _configDescriptor1
   383  0020CE  21                 	db	high _configDescriptor1
   384  0020CF                     __end_of_USB_CD_Ptr:
   385                           	opt stack 0
   386  0000                     _myUID_absconstaddr	set	131062
   387  0000                     _myMODEL_absconstaddr	set	131060
   388  0000                     _myMUTA_version_absconstaddr	set	131058
   389  0020CF                     _sd001:
   390                           	opt stack 0
   391  0020CF  34                 	db	52
   392  0020D0  03                 	db	3
   393  0020D1  004D               	dw	77
   394  0020D3  0069               	dw	105
   395  0020D5  0063               	dw	99
   396  0020D7  0072               	dw	114
   397  0020D9  006F               	dw	111
   398  0020DB  0063               	dw	99
   399  0020DD  0068               	dw	104
   400  0020DF  0069               	dw	105
   401  0020E1  0070               	dw	112
   402  0020E3  0020               	dw	32
   403  0020E5  0054               	dw	84
   404  0020E7  0065               	dw	101
   405  0020E9  0063               	dw	99
   406  0020EB  0068               	dw	104
   407  0020ED  006E               	dw	110
   408  0020EF  006F               	dw	111
   409  0020F1  006C               	dw	108
   410  0020F3  006F               	dw	111
   411  0020F5  0067               	dw	103
   412  0020F7  0079               	dw	121
   413  0020F9  0020               	dw	32
   414  0020FB  0049               	dw	73
   415  0020FD  006E               	dw	110
   416  0020FF  0063               	dw	99
   417  002101  002E               	dw	46
   418  002103                     __end_of_sd001:
   419                           	opt stack 0
   420  002103                     _sd002:
   421                           	opt stack 0
   422  002103  2E                 	db	46
   423  002104  03                 	db	3
   424  002105  0053               	dw	83
   425  002107  0069               	dw	105
   426  002109  006D               	dw	109
   427  00210B  0070               	dw	112
   428  00210D  006C               	dw	108
   429  00210F  0065               	dw	101
   430  002111  0020               	dw	32
   431  002113  0048               	dw	72
   432  002115  0049               	dw	73
   433  002117  0044               	dw	68
   434  002119  0020               	dw	32
   435  00211B  0044               	dw	68
   436  00211D  0065               	dw	101
   437  00211F  0076               	dw	118
   438  002121  0069               	dw	105
   439  002123  0063               	dw	99
   440  002125  0065               	dw	101
   441  002127  0020               	dw	32
   442  002129  0044               	dw	68
   443  00212B  0065               	dw	101
   444  00212D  006D               	dw	109
   445  00212F  006F               	dw	111
   446  002131                     __end_of_sd002:
   447                           	opt stack 0
   448  002131                     _configDescriptor1:
   449                           	opt stack 0
   450  002131  09                 	db	9
   451  002132  02                 	db	2
   452  002133  29                 	db	41
   453  002134  00                 	db	0
   454  002135  01                 	db	1
   455  002136  01                 	db	1
   456  002137  00                 	db	0
   457  002138  C0                 	db	192
   458  002139  32                 	db	50
   459  00213A  09                 	db	9
   460  00213B  04                 	db	4
   461  00213C  00                 	db	0
   462  00213D  00                 	db	0
   463  00213E  02                 	db	2
   464  00213F  03                 	db	3
   465  002140  00                 	db	0
   466  002141  00                 	db	0
   467  002142  00                 	db	0
   468  002143  09                 	db	9
   469  002144  21                 	db	33
   470  002145  11                 	db	17
   471  002146  01                 	db	1
   472  002147  00                 	db	0
   473  002148  01                 	db	1
   474  002149  22                 	db	34
   475  00214A  1D                 	db	29
   476  00214B  00                 	db	0
   477  00214C  07                 	db	7
   478  00214D  05                 	db	5
   479  00214E  81                 	db	129
   480  00214F  03                 	db	3
   481  002150  40                 	db	64
   482  002151  00                 	db	0
   483  002152  01                 	db	1
   484  002153  07                 	db	7
   485  002154  05                 	db	5
   486  002155  01                 	db	1
   487  002156  03                 	db	3
   488  002157  40                 	db	64
   489  002158  00                 	db	0
   490  002159  01                 	db	1
   491  00215A                     __end_of_configDescriptor1:
   492                           	opt stack 0
   493  00215A                     _hid_rpt01:
   494                           	opt stack 0
   495  00215A  06                 	db	6
   496  00215B  00                 	db	0
   497  00215C  FF                 	db	255
   498  00215D  09                 	db	9
   499  00215E  01                 	db	1
   500  00215F  A1                 	db	161
   501  002160  01                 	db	1
   502  002161  19                 	db	25
   503  002162  01                 	db	1
   504  002163  29                 	db	41
   505  002164  40                 	db	64
   506  002165  15                 	db	21
   507  002166  00                 	db	0
   508  002167  26                 	db	38
   509  002168  FF                 	db	255
   510  002169  00                 	db	0
   511  00216A  75                 	db	117
   512  00216B  08                 	db	8
   513  00216C  95                 	db	149
   514  00216D  40                 	db	64
   515  00216E  81                 	db	129
   516  00216F  00                 	db	0
   517  002170  19                 	db	25
   518  002171  01                 	db	1
   519  002172  29                 	db	41
   520  002173  40                 	db	64
   521  002174  91                 	db	145
   522  002175  00                 	db	0
   523  002176  C0                 	db	192
   524  002177                     __end_of_hid_rpt01:
   525                           	opt stack 0
   526  002177                     _device_dsc:
   527                           	opt stack 0
   528  002177  12                 	db	18
   529  002178  01                 	db	1
   530  002179  0200               	dw	512
   531  00217B  00                 	db	0
   532  00217C  00                 	db	0
   533  00217D  00                 	db	0
   534  00217E  08                 	db	8
   535  00217F  04D8               	dw	1240
   536  002181  F7C9               	dw	63433
   537  002183  0100               	dw	256
   538  002185  01                 	db	1
   539  002186  02                 	db	2
   540  002187  00                 	db	0
   541  002188  01                 	db	1
   542  002189                     __end_of_device_dsc:
   543                           	opt stack 0
   544  002189                     _TX_POWER_1_DB_MW:
   545                           	opt stack 0
   546  002189  31                 	db	49
   547  00218A  2E                 	db	46
   548  00218B  32                 	db	50
   549  00218C  35                 	db	53
   550  00218D  6D                 	db	109
   551  00218E  57                 	db	87
   552  00218F  00                 	db	0
   553  002190                     __end_of_TX_POWER_1_DB_MW:
   554                           	opt stack 0
   555  002190                     _TX_POWER_N_8_DB_MW:
   556                           	opt stack 0
   557  002190  30                 	db	48
   558  002191  2E                 	db	46
   559  002192  31                 	db	49
   560  002193  35                 	db	53
   561  002194  6D                 	db	109
   562  002195  57                 	db	87
   563  002196  00                 	db	0
   564  002197                     __end_of_TX_POWER_N_8_DB_MW:
   565                           	opt stack 0
   566  002197                     _TX_POWER_4_DB_MW:
   567                           	opt stack 0
   568  002197  32                 	db	50
   569  002198  2E                 	db	46
   570  002199  35                 	db	53
   571  00219A  6D                 	db	109
   572  00219B  57                 	db	87
   573  00219C  00                 	db	0
   574  00219D                     __end_of_TX_POWER_4_DB_MW:
   575                           	opt stack 0
   576  00219D                     _TX_POWER_INVALID:
   577                           	opt stack 0
   578  00219D  30                 	db	48
   579  00219E  2E                 	db	46
   580  00219F  30                 	db	48
   581  0021A0  6D                 	db	109
   582  0021A1  57                 	db	87
   583  0021A2  00                 	db	0
   584  0021A3                     __end_of_TX_POWER_INVALID:
   585                           	opt stack 0
   586  0021A3                     _TX_POWER_N_2_DB_MW:
   587                           	opt stack 0
   588  0021A3  30                 	db	48
   589  0021A4  2E                 	db	46
   590  0021A5  36                 	db	54
   591  0021A6  6D                 	db	109
   592  0021A7  57                 	db	87
   593  0021A8  00                 	db	0
   594  0021A9                     __end_of_TX_POWER_N_2_DB_MW:
   595                           	opt stack 0
   596  0021A9                     _TX_POWER_N_5_DB_MW:
   597                           	opt stack 0
   598  0021A9  30                 	db	48
   599  0021AA  2E                 	db	46
   600  0021AB  33                 	db	51
   601  0021AC  6D                 	db	109
   602  0021AD  57                 	db	87
   603  0021AE  00                 	db	0
   604  0021AF                     __end_of_TX_POWER_N_5_DB_MW:
   605                           	opt stack 0
   606  0021AF                     _TX_POWER_10_DB_MW:
   607                           	opt stack 0
   608  0021AF  31                 	db	49
   609  0021B0  30                 	db	48
   610  0021B1  6D                 	db	109
   611  0021B2  57                 	db	87
   612  0021B3  00                 	db	0
   613  0021B4                     __end_of_TX_POWER_10_DB_MW:
   614                           	opt stack 0
   615  0021B4                     _TX_POWER_13_DB_MW:
   616                           	opt stack 0
   617  0021B4  32                 	db	50
   618  0021B5  30                 	db	48
   619  0021B6  6D                 	db	109
   620  0021B7  57                 	db	87
   621  0021B8  00                 	db	0
   622  0021B9                     __end_of_TX_POWER_13_DB_MW:
   623                           	opt stack 0
   624  0021B9                     _CHANNEL_LABEL:
   625                           	opt stack 0
   626  0021B9  43                 	db	67
   627  0021BA  68                 	db	104
   628  0021BB  6E                 	db	110
   629  0021BC  00                 	db	0
   630  0021BD                     __end_of_CHANNEL_LABEL:
   631                           	opt stack 0
   632  0021BD                     _NOISE_LABEL:
   633                           	opt stack 0
   634  0021BD  4E                 	db	78
   635  0021BE  73                 	db	115
   636  0021BF  65                 	db	101
   637  0021C0  00                 	db	0
   638  0021C1                     __end_of_NOISE_LABEL:
   639                           	opt stack 0
   640  0021C1                     _POWER_LABEL:
   641                           	opt stack 0
   642  0021C1  50                 	db	80
   643  0021C2  77                 	db	119
   644  0021C3  72                 	db	114
   645  0021C4  00                 	db	0
   646  0021C5                     __end_of_POWER_LABEL:
   647                           	opt stack 0
   648  0021C5                     _TX_POWER_7_DB_MW:
   649                           	opt stack 0
   650  0021C5  35                 	db	53
   651  0021C6  6D                 	db	109
   652  0021C7  57                 	db	87
   653  0021C8  00                 	db	0
   654  0021C9                     __end_of_TX_POWER_7_DB_MW:
   655                           	opt stack 0
   656  0021C9                     _UPDATE_FREQUENCY_LABEL:
   657                           	opt stack 0
   658  0021C9  55                 	db	85
   659  0021CA  70                 	db	112
   660  0021CB  46                 	db	70
   661  0021CC  00                 	db	0
   662  0021CD                     __end_of_UPDATE_FREQUENCY_LABEL:
   663                           	opt stack 0
   664  0021CD                     _UPTIME_LABEL:
   665                           	opt stack 0
   666  0021CD  55                 	db	85
   667  0021CE  70                 	db	112
   668  0021CF  74                 	db	116
   669  0021D0  00                 	db	0
   670  0021D1                     __end_of_UPTIME_LABEL:
   671                           	opt stack 0
   672  0021D1                     _sd000:
   673                           	opt stack 0
   674  0021D1  04                 	db	4
   675  0021D2  03                 	db	3
   676  0021D3  0409               	dw	1033
   677  0021D5                     __end_of_sd000:
   678                           	opt stack 0
   679  0000                     _StaticSecurityKey_absconstaddr	set	8172
   680  0021D5                     STR_11:
   681                           
   682                           ; BSR set to: 0
   683  0021D5  49                 	db	73	;'I'
   684  0021D6  7C                 	db	124
   685  0021D7  25                 	db	37
   686  0021D8  30                 	db	48	;'0'
   687  0021D9  32                 	db	50	;'2'
   688  0021DA  78                 	db	120	;'x'
   689  0021DB  25                 	db	37
   690  0021DC  30                 	db	48	;'0'
   691  0021DD  32                 	db	50	;'2'
   692  0021DE  78                 	db	120	;'x'
   693  0021DF  3A                 	db	58	;':'
   694  0021E0  50                 	db	80	;'P'
   695  0021E1  4F                 	db	79	;'O'
   696  0021E2  57                 	db	87	;'W'
   697  0021E3  45                 	db	69	;'E'
   698  0021E4  52                 	db	82	;'R'
   699  0021E5  5F                 	db	95	;'_'
   700  0021E6  54                 	db	84	;'T'
   701  0021E7  45                 	db	69	;'E'
   702  0021E8  53                 	db	83	;'S'
   703  0021E9  54                 	db	84	;'T'
   704  0021EA  3A                 	db	58	;':'
   705  0021EB  20                 	db	32
   706  0021EC  65                 	db	101	;'e'
   707  0021ED  72                 	db	114	;'r'
   708  0021EE  72                 	db	114	;'r'
   709  0021EF  6F                 	db	111	;'o'
   710  0021F0  72                 	db	114	;'r'
   711  0021F1  20                 	db	32
   712  0021F2  73                 	db	115	;'s'
   713  0021F3  65                 	db	101	;'e'
   714  0021F4  6E                 	db	110	;'n'
   715  0021F5  64                 	db	100	;'d'
   716  0021F6  69                 	db	105	;'i'
   717  0021F7  6E                 	db	110	;'n'
   718  0021F8  67                 	db	103	;'g'
   719  0021F9  20                 	db	32
   720  0021FA  62                 	db	98	;'b'
   721  0021FB  61                 	db	97	;'a'
   722  0021FC  63                 	db	99	;'c'
   723  0021FD  6B                 	db	107	;'k'
   724  0021FE  2C                 	db	44
   725  0021FF  20                 	db	32
   726  002200  25                 	db	37
   727  002201  73                 	db	115	;'s'
   728  002202  2C                 	db	44
   729  002203  20                 	db	32
   730  002204  52                 	db	82	;'R'
   731  002205  53                 	db	83	;'S'
   732  002206  53                 	db	83	;'S'
   733  002207  49                 	db	73	;'I'
   734  002208  3D                 	db	61	;'='
   735  002209  25                 	db	37
   736  00220A  69                 	db	105	;'i'
   737  00220B  00                 	db	0
   738  00220C                     STR_13:
   739                           
   740                           ; BSR set to: 0
   741  00220C  49                 	db	73	;'I'
   742  00220D  7C                 	db	124
   743  00220E  25                 	db	37
   744  00220F  30                 	db	48	;'0'
   745  002210  32                 	db	50	;'2'
   746  002211  78                 	db	120	;'x'
   747  002212  25                 	db	37
   748  002213  30                 	db	48	;'0'
   749  002214  32                 	db	50	;'2'
   750  002215  78                 	db	120	;'x'
   751  002216  3A                 	db	58	;':'
   752  002217  50                 	db	80	;'P'
   753  002218  49                 	db	73	;'I'
   754  002219  4E                 	db	78	;'N'
   755  00221A  47                 	db	71	;'G'
   756  00221B  20                 	db	32
   757  00221C  65                 	db	101	;'e'
   758  00221D  72                 	db	114	;'r'
   759  00221E  72                 	db	114	;'r'
   760  00221F  6F                 	db	111	;'o'
   761  002220  72                 	db	114	;'r'
   762  002221  20                 	db	32
   763  002222  73                 	db	115	;'s'
   764  002223  65                 	db	101	;'e'
   765  002224  6E                 	db	110	;'n'
   766  002225  64                 	db	100	;'d'
   767  002226  69                 	db	105	;'i'
   768  002227  6E                 	db	110	;'n'
   769  002228  67                 	db	103	;'g'
   770  002229  20                 	db	32
   771  00222A  62                 	db	98	;'b'
   772  00222B  61                 	db	97	;'a'
   773  00222C  63                 	db	99	;'c'
   774  00222D  6B                 	db	107	;'k'
   775  00222E  3A                 	db	58	;':'
   776  00222F  20                 	db	32
   777  002230  70                 	db	112	;'p'
   778  002231  61                 	db	97	;'a'
   779  002232  79                 	db	121	;'y'
   780  002233  6C                 	db	108	;'l'
   781  002234  6F                 	db	111	;'o'
   782  002235  61                 	db	97	;'a'
   783  002236  64                 	db	100	;'d'
   784  002237  5F                 	db	95	;'_'
   785  002238  73                 	db	115	;'s'
   786  002239  69                 	db	105	;'i'
   787  00223A  7A                 	db	122	;'z'
   788  00223B  65                 	db	101	;'e'
   789  00223C  3D                 	db	61	;'='
   790  00223D  25                 	db	37
   791  00223E  69                 	db	105	;'i'
   792  00223F  00                 	db	0
   793  002240                     STR_12:
   794                           
   795                           ; BSR set to: 0
   796  002240  49                 	db	73	;'I'
   797  002241  7C                 	db	124
   798  002242  25                 	db	37
   799  002243  30                 	db	48	;'0'
   800  002244  32                 	db	50	;'2'
   801  002245  78                 	db	120	;'x'
   802  002246  25                 	db	37
   803  002247  30                 	db	48	;'0'
   804  002248  32                 	db	50	;'2'
   805  002249  78                 	db	120	;'x'
   806  00224A  3A                 	db	58	;':'
   807  00224B  50                 	db	80	;'P'
   808  00224C  49                 	db	73	;'I'
   809  00224D  4E                 	db	78	;'N'
   810  00224E  47                 	db	71	;'G'
   811  00224F  20                 	db	32
   812  002250  73                 	db	115	;'s'
   813  002251  75                 	db	117	;'u'
   814  002252  63                 	db	99	;'c'
   815  002253  63                 	db	99	;'c'
   816  002254  65                 	db	101	;'e'
   817  002255  73                 	db	115	;'s'
   818  002256  73                 	db	115	;'s'
   819  002257  66                 	db	102	;'f'
   820  002258  75                 	db	117	;'u'
   821  002259  6C                 	db	108	;'l'
   822  00225A  3A                 	db	58	;':'
   823  00225B  20                 	db	32
   824  00225C  70                 	db	112	;'p'
   825  00225D  61                 	db	97	;'a'
   826  00225E  79                 	db	121	;'y'
   827  00225F  6C                 	db	108	;'l'
   828  002260  6F                 	db	111	;'o'
   829  002261  61                 	db	97	;'a'
   830  002262  64                 	db	100	;'d'
   831  002263  5F                 	db	95	;'_'
   832  002264  73                 	db	115	;'s'
   833  002265  69                 	db	105	;'i'
   834  002266  7A                 	db	122	;'z'
   835  002267  65                 	db	101	;'e'
   836  002268  3D                 	db	61	;'='
   837  002269  25                 	db	37
   838  00226A  69                 	db	105	;'i'
   839  00226B  00                 	db	0
   840  00226C                     STR_4:
   841                           
   842                           ; BSR set to: 0
   843  00226C  49                 	db	73	;'I'
   844  00226D  7C                 	db	124
   845  00226E  45                 	db	69	;'E'
   846  00226F  72                 	db	114	;'r'
   847  002270  72                 	db	114	;'r'
   848  002271  6F                 	db	111	;'o'
   849  002272  72                 	db	114	;'r'
   850  002273  3A                 	db	58	;':'
   851  002274  20                 	db	32
   852  002275  75                 	db	117	;'u'
   853  002276  6E                 	db	110	;'n'
   854  002277  61                 	db	97	;'a'
   855  002278  62                 	db	98	;'b'
   856  002279  6C                 	db	108	;'l'
   857  00227A  65                 	db	101	;'e'
   858  00227B  20                 	db	32
   859  00227C  74                 	db	116	;'t'
   860  00227D  6F                 	db	111	;'o'
   861  00227E  20                 	db	32
   862  00227F  73                 	db	115	;'s'
   863  002280  65                 	db	101	;'e'
   864  002281  74                 	db	116	;'t'
   865  002282  20                 	db	32
   866  002283  63                 	db	99	;'c'
   867  002284  68                 	db	104	;'h'
   868  002285  61                 	db	97	;'a'
   869  002286  6E                 	db	110	;'n'
   870  002287  6E                 	db	110	;'n'
   871  002288  65                 	db	101	;'e'
   872  002289  6C                 	db	108	;'l'
   873  00228A  20                 	db	32
   874  00228B  25                 	db	37
   875  00228C  69                 	db	105	;'i'
   876  00228D  21                 	db	33
   877  00228E  20                 	db	32
   878  00228F  28                 	db	40
   879  002290  54                 	db	84	;'T'
   880  002291  5F                 	db	95	;'_'
   881  002292  54                 	db	84	;'T'
   882  002293  29                 	db	41
   883  002294  00                 	db	0
   884  002295                     STR_14:
   885                           
   886                           ; BSR set to: 0
   887  002295  49                 	db	73	;'I'
   888  002296  7C                 	db	124
   889  002297  25                 	db	37
   890  002298  30                 	db	48	;'0'
   891  002299  32                 	db	50	;'2'
   892  00229A  78                 	db	120	;'x'
   893  00229B  25                 	db	37
   894  00229C  30                 	db	48	;'0'
   895  00229D  32                 	db	50	;'2'
   896  00229E  78                 	db	120	;'x'
   897  00229F  3A                 	db	58	;':'
   898  0022A0  20                 	db	32
   899  0022A1  25                 	db	37
   900  0022A2  69                 	db	105	;'i'
   901  0022A3  20                 	db	32
   902  0022A4  63                 	db	99	;'c'
   903  0022A5  6F                 	db	111	;'o'
   904  0022A6  6D                 	db	109	;'m'
   905  0022A7  6D                 	db	109	;'m'
   906  0022A8  61                 	db	97	;'a'
   907  0022A9  6E                 	db	110	;'n'
   908  0022AA  64                 	db	100	;'d'
   909  0022AB  20                 	db	32
   910  0022AC  6E                 	db	110	;'n'
   911  0022AD  6F                 	db	111	;'o'
   912  0022AE  74                 	db	116	;'t'
   913  0022AF  20                 	db	32
   914  0022B0  72                 	db	114	;'r'
   915  0022B1  65                 	db	101	;'e'
   916  0022B2  63                 	db	99	;'c'
   917  0022B3  6F                 	db	111	;'o'
   918  0022B4  67                 	db	103	;'g'
   919  0022B5  6E                 	db	110	;'n'
   920  0022B6  69                 	db	105	;'i'
   921  0022B7  7A                 	db	122	;'z'
   922  0022B8  65                 	db	101	;'e'
   923  0022B9  64                 	db	100	;'d'
   924  0022BA  21                 	db	33
   925  0022BB  00                 	db	0
   926  0022BC                     STR_10:
   927                           
   928                           ; BSR set to: 0
   929  0022BC  49                 	db	73	;'I'
   930  0022BD  7C                 	db	124
   931  0022BE  25                 	db	37
   932  0022BF  30                 	db	48	;'0'
   933  0022C0  32                 	db	50	;'2'
   934  0022C1  78                 	db	120	;'x'
   935  0022C2  25                 	db	37
   936  0022C3  30                 	db	48	;'0'
   937  0022C4  32                 	db	50	;'2'
   938  0022C5  78                 	db	120	;'x'
   939  0022C6  3A                 	db	58	;':'
   940  0022C7  50                 	db	80	;'P'
   941  0022C8  4F                 	db	79	;'O'
   942  0022C9  57                 	db	87	;'W'
   943  0022CA  45                 	db	69	;'E'
   944  0022CB  52                 	db	82	;'R'
   945  0022CC  5F                 	db	95	;'_'
   946  0022CD  54                 	db	84	;'T'
   947  0022CE  45                 	db	69	;'E'
   948  0022CF  53                 	db	83	;'S'
   949  0022D0  54                 	db	84	;'T'
   950  0022D1  3A                 	db	58	;':'
   951  0022D2  20                 	db	32
   952  0022D3  4F                 	db	79	;'O'
   953  0022D4  4B                 	db	75	;'K'
   954  0022D5  2C                 	db	44
   955  0022D6  20                 	db	32
   956  0022D7  25                 	db	37
   957  0022D8  73                 	db	115	;'s'
   958  0022D9  2C                 	db	44
   959  0022DA  20                 	db	32
   960  0022DB  52                 	db	82	;'R'
   961  0022DC  53                 	db	83	;'S'
   962  0022DD  53                 	db	83	;'S'
   963  0022DE  49                 	db	73	;'I'
   964  0022DF  3D                 	db	61	;'='
   965  0022E0  25                 	db	37
   966  0022E1  69                 	db	105	;'i'
   967  0022E2  00                 	db	0
   968  0022E3                     STR_3:
   969                           
   970                           ; BSR set to: 0
   971  0022E3  49                 	db	73	;'I'
   972  0022E4  7C                 	db	124
   973  0022E5  62                 	db	98	;'b'
   974  0022E6  65                 	db	101	;'e'
   975  0022E7  73                 	db	115	;'s'
   976  0022E8  74                 	db	116	;'t'
   977  0022E9  20                 	db	32
   978  0022EA  63                 	db	99	;'c'
   979  0022EB  68                 	db	104	;'h'
   980  0022EC  61                 	db	97	;'a'
   981  0022ED  6E                 	db	110	;'n'
   982  0022EE  6E                 	db	110	;'n'
   983  0022EF  65                 	db	101	;'e'
   984  0022F0  6C                 	db	108	;'l'
   985  0022F1  3A                 	db	58	;':'
   986  0022F2  20                 	db	32
   987  0022F3  25                 	db	37
   988  0022F4  69                 	db	105	;'i'
   989  0022F5  20                 	db	32
   990  0022F6  28                 	db	40
   991  0022F7  6E                 	db	110	;'n'
   992  0022F8  6F                 	db	111	;'o'
   993  0022F9  69                 	db	105	;'i'
   994  0022FA  73                 	db	115	;'s'
   995  0022FB  65                 	db	101	;'e'
   996  0022FC  20                 	db	32
   997  0022FD  3D                 	db	61	;'='
   998  0022FE  3D                 	db	61	;'='
   999  0022FF  20                 	db	32
  1000  002300  25                 	db	37
  1001  002301  69                 	db	105	;'i'
  1002  002302  29                 	db	41
  1003  002303  00                 	db	0
  1004  002304                     STR_2:
  1005                           
  1006                           ; BSR set to: 0
  1007  002304  49                 	db	73	;'I'
  1008  002305  7C                 	db	124
  1009  002306  73                 	db	115	;'s'
  1010  002307  63                 	db	99	;'c'
  1011  002308  61                 	db	97	;'a'
  1012  002309  6E                 	db	110	;'n'
  1013  00230A  6E                 	db	110	;'n'
  1014  00230B  69                 	db	105	;'i'
  1015  00230C  6E                 	db	110	;'n'
  1016  00230D  67                 	db	103	;'g'
  1017  00230E  20                 	db	32
  1018  00230F  63                 	db	99	;'c'
  1019  002310  68                 	db	104	;'h'
  1020  002311  61                 	db	97	;'a'
  1021  002312  6E                 	db	110	;'n'
  1022  002313  6E                 	db	110	;'n'
  1023  002314  65                 	db	101	;'e'
  1024  002315  6C                 	db	108	;'l'
  1025  002316  73                 	db	115	;'s'
  1026  002317  20                 	db	32
  1027  002318  66                 	db	102	;'f'
  1028  002319  6F                 	db	111	;'o'
  1029  00231A  72                 	db	114	;'r'
  1030  00231B  20                 	db	32
  1031  00231C  6E                 	db	110	;'n'
  1032  00231D  6F                 	db	111	;'o'
  1033  00231E  69                 	db	105	;'i'
  1034  00231F  73                 	db	115	;'s'
  1035  002320  65                 	db	101	;'e'
  1036  002321  2E                 	db	46
  1037  002322  2E                 	db	46
  1038  002323  2E                 	db	46
  1039  002324  00                 	db	0
  1040  002325                     STR_9:
  1041                           
  1042                           ; BSR set to: 0
  1043  002325  49                 	db	73	;'I'
  1044  002326  7C                 	db	124
  1045  002327  61                 	db	97	;'a'
  1046  002328  63                 	db	99	;'c'
  1047  002329  63                 	db	99	;'c'
  1048  00232A  65                 	db	101	;'e'
  1049  00232B  70                 	db	112	;'p'
  1050  00232C  74                 	db	116	;'t'
  1051  00232D  69                 	db	105	;'i'
  1052  00232E  6E                 	db	110	;'n'
  1053  00232F  67                 	db	103	;'g'
  1054  002330  20                 	db	32
  1055  002331  73                 	db	115	;'s'
  1056  002332  63                 	db	99	;'c'
  1057  002333  61                 	db	97	;'a'
  1058  002334  6E                 	db	110	;'n'
  1059  002335  73                 	db	115	;'s'
  1060  002336  20                 	db	32
  1061  002337  26                 	db	38
  1062  002338  20                 	db	32
  1063  002339  63                 	db	99	;'c'
  1064  00233A  6F                 	db	111	;'o'
  1065  00233B  6E                 	db	110	;'n'
  1066  00233C  6E                 	db	110	;'n'
  1067  00233D  65                 	db	101	;'e'
  1068  00233E  63                 	db	99	;'c'
  1069  00233F  74                 	db	116	;'t'
  1070  002340  69                 	db	105	;'i'
  1071  002341  6F                 	db	111	;'o'
  1072  002342  6E                 	db	110	;'n'
  1073  002343  73                 	db	115	;'s'
  1074  002344  00                 	db	0
  1075  002345                     STR_7:
  1076                           
  1077                           ; BSR set to: 0
  1078  002345  49                 	db	73	;'I'
  1079  002346  7C                 	db	124
  1080  002347  6F                 	db	111	;'o'
  1081  002348  70                 	db	112	;'p'
  1082  002349  65                 	db	101	;'e'
  1083  00234A  72                 	db	114	;'r'
  1084  00234B  61                 	db	97	;'a'
  1085  00234C  74                 	db	116	;'t'
  1086  00234D  6F                 	db	111	;'o'
  1087  00234E  72                 	db	114	;'r'
  1088  00234F  27                 	db	39
  1089  002350  73                 	db	115	;'s'
  1090  002351  20                 	db	32
  1091  002352  61                 	db	97	;'a'
  1092  002353  64                 	db	100	;'d'
  1093  002354  64                 	db	100	;'d'
  1094  002355  72                 	db	114	;'r'
  1095  002356  65                 	db	101	;'e'
  1096  002357  73                 	db	115	;'s'
  1097  002358  73                 	db	115	;'s'
  1098  002359  3A                 	db	58	;':'
  1099  00235A  20                 	db	32
  1100  00235B  25                 	db	37
  1101  00235C  30                 	db	48	;'0'
  1102  00235D  32                 	db	50	;'2'
  1103  00235E  78                 	db	120	;'x'
  1104  00235F  25                 	db	37
  1105  002360  30                 	db	48	;'0'
  1106  002361  32                 	db	50	;'2'
  1107  002362  78                 	db	120	;'x'
  1108  002363  00                 	db	0
  1109  002364                     STR_6:
  1110                           
  1111                           ; BSR set to: 0
  1112  002364  49                 	db	73	;'I'
  1113  002365  7C                 	db	124
  1114  002366  50                 	db	80	;'P'
  1115  002367  41                 	db	65	;'A'
  1116  002368  4E                 	db	78	;'N'
  1117  002369  49                 	db	73	;'I'
  1118  00236A  44                 	db	68	;'D'
  1119  00236B  3A                 	db	58	;':'
  1120  00236C  25                 	db	37
  1121  00236D  30                 	db	48	;'0'
  1122  00236E  32                 	db	50	;'2'
  1123  00236F  78                 	db	120	;'x'
  1124  002370  25                 	db	37
  1125  002371  30                 	db	48	;'0'
  1126  002372  32                 	db	50	;'2'
  1127  002373  78                 	db	120	;'x'
  1128  002374  20                 	db	32
  1129  002375  43                 	db	67	;'C'
  1130  002376  68                 	db	104	;'h'
  1131  002377  3A                 	db	58	;':'
  1132  002378  25                 	db	37
  1133  002379  30                 	db	48	;'0'
  1134  00237A  32                 	db	50	;'2'
  1135  00237B  64                 	db	100	;'d'
  1136  00237C  00                 	db	0
  1137  00237D                     STR_5:
  1138                           
  1139                           ; BSR set to: 0
  1140  00237D  49                 	db	73	;'I'
  1141  00237E  7C                 	db	124
  1142  00237F  63                 	db	99	;'c'
  1143  002380  72                 	db	114	;'r'
  1144  002381  65                 	db	101	;'e'
  1145  002382  61                 	db	97	;'a'
  1146  002383  74                 	db	116	;'t'
  1147  002384  69                 	db	105	;'i'
  1148  002385  6E                 	db	110	;'n'
  1149  002386  67                 	db	103	;'g'
  1150  002387  20                 	db	32
  1151  002388  6E                 	db	110	;'n'
  1152  002389  65                 	db	101	;'e'
  1153  00238A  74                 	db	116	;'t'
  1154  00238B  77                 	db	119	;'w'
  1155  00238C  6F                 	db	111	;'o'
  1156  00238D  72                 	db	114	;'r'
  1157  00238E  6B                 	db	107	;'k'
  1158  00238F  2E                 	db	46
  1159  002390  2E                 	db	46
  1160  002391  2E                 	db	46
  1161  002392  00                 	db	0
  1162  002393                     STR_16:
  1163                           
  1164                           ; BSR set to: 0
  1165  002393  30                 	db	48	;'0'
  1166  002394  31                 	db	49	;'1'
  1167  002395  32                 	db	50	;'2'
  1168  002396  33                 	db	51	;'3'
  1169  002397  34                 	db	52	;'4'
  1170  002398  35                 	db	53	;'5'
  1171  002399  36                 	db	54	;'6'
  1172  00239A  37                 	db	55	;'7'
  1173  00239B  38                 	db	56	;'8'
  1174  00239C  39                 	db	57	;'9'
  1175  00239D  61                 	db	97	;'a'
  1176  00239E  62                 	db	98	;'b'
  1177  00239F  63                 	db	99	;'c'
  1178  0023A0  64                 	db	100	;'d'
  1179  0023A1  65                 	db	101	;'e'
  1180  0023A2  66                 	db	102	;'f'
  1181  0023A3  00                 	db	0
  1182  0023A4                     STR_8:
  1183                           
  1184                           ; BSR set to: 0
  1185  0023A4  49                 	db	73	;'I'
  1186  0023A5  7C                 	db	124
  1187  0023A6  73                 	db	115	;'s'
  1188  0023A7  74                 	db	116	;'t'
  1189  0023A8  61                 	db	97	;'a'
  1190  0023A9  74                 	db	116	;'t'
  1191  0023AA  75                 	db	117	;'u'
  1192  0023AB  73                 	db	115	;'s'
  1193  0023AC  3A                 	db	58	;':'
  1194  0023AD  20                 	db	32
  1195  0023AE  72                 	db	114	;'r'
  1196  0023AF  65                 	db	101	;'e'
  1197  0023B0  61                 	db	97	;'a'
  1198  0023B1  64                 	db	100	;'d'
  1199  0023B2  79                 	db	121	;'y'
  1200  0023B3  21                 	db	33
  1201  0023B4  00                 	db	0
  1202  0023B5                     STR_1:
  1203                           
  1204                           ; BSR set to: 0
  1205  0023B5  49                 	db	73	;'I'
  1206  0023B6  7C                 	db	124
  1207  0023B7  52                 	db	82	;'R'
  1208  0023B8  45                 	db	69	;'E'
  1209  0023B9  53                 	db	83	;'S'
  1210  0023BA  45                 	db	69	;'E'
  1211  0023BB  54                 	db	84	;'T'
  1212  0023BC  00                 	db	0
  1213  0023BD                     STR_15:
  1214                           
  1215                           ; BSR set to: 0
  1216  0023BD  28                 	db	40
  1217  0023BE  6E                 	db	110	;'n'
  1218  0023BF  75                 	db	117	;'u'
  1219  0023C0  6C                 	db	108	;'l'
  1220  0023C1  6C                 	db	108	;'l'
  1221  0023C2  29                 	db	41
  1222  0023C3  00                 	db	0
  1223                           
  1224                           ; #config settings
  1225  0023C4  00                 	db	0	; dummy byte at the end
  1226  0000                     
  1227                           	psect	_StaticSecurityKey_const
  1228  001FEC                     __p_StaticSecurityKey_const:
  1229                           	opt stack 0
  1230  001FEC                     _StaticSecurityKey:
  1231                           	opt stack 0
  1232  001FEC  00                 	db	0
  1233  001FED  01                 	db	1
  1234  001FEE  02                 	db	2
  1235  001FEF  03                 	db	3
  1236  001FF0  04                 	db	4
  1237  001FF1  05                 	db	5
  1238  001FF2  06                 	db	6
  1239  001FF3  07                 	db	7
  1240  001FF4                     __end_of_StaticSecurityKey:
  1241                           	opt stack 0
  1242  0000                     _myUID_absconstaddr	set	131062
  1243                           
  1244                           	psect	_myUID_const
  1245  01FFF6                     __p_myUID_const:
  1246                           	opt stack 0
  1247  01FFF6                     _myUID:
  1248                           	opt stack 0
  1249  01FFF6  00                 	db	0
  1250  01FFF7  00                 	db	0
  1251  01FFF8                     __end_of_myUID:
  1252                           	opt stack 0
  1253  0000                     _myMODEL_absconstaddr	set	131060
  1254                           
  1255                           	psect	_myMODEL_const
  1256  01FFF4                     __p_myMODEL_const:
  1257                           	opt stack 0
  1258  01FFF4                     _myMODEL:
  1259                           	opt stack 0
  1260  01FFF4  01                 	db	1
  1261  01FFF5                     __end_of_myMODEL:
  1262                           	opt stack 0
  1263  0000                     _myMUTA_version_absconstaddr	set	131058
  1264                           
  1265                           	psect	_myMUTA_version_const
  1266  01FFF2                     __p_myMUTA_version_const:
  1267                           	opt stack 0
  1268  01FFF2                     _myMUTA_version:
  1269                           	opt stack 0
  1270  01FFF2  01                 	db	1
  1271  01FFF3                     __end_of_myMUTA_version:
  1272                           	opt stack 0
  1273  0000                     _PPSCONbits	set	3775
  1274  0000                     _RPINR1	set	3809
  1275  0000                     _RPINR21	set	3836
  1276  0000                     _RPINR22	set	3837
  1277  0000                     _RPOR17	set	3793
  1278  0000                     _RPOR4	set	3780
  1279  0000                     _RPOR5	set	3781
  1280  0000                     _ALRMCFGbits	set	3911
  1281  0000                     _ANCON0	set	3912
  1282  0000                     _ANCON1	set	3913
  1283  0000                     _CCPTMRS0	set	3922
  1284  0000                     _RTCCAL	set	3902
  1285  0000                     _RTCCFG	set	3903
  1286  0000                     _RTCCFGbits	set	3903
  1287  0000                     _RTCVALHbits	set	3899
  1288  0000                     _RTCVALLbits	set	3898
  1289  0000                     _UADDR	set	3896
  1290  0000                     _UCFG	set	3897
  1291  0000                     _UEIE	set	3895
  1292  0000                     _UEP0bits	set	3878
  1293  0000                     _UIE	set	3894
  1294  0000                     _UIEbits	set	3894
  1295  0000                     _UEP0	set	3878
  1296  0000                     _UEP1	set	3879
  1297  0000                     _RTCEN	set	31231
  1298  0000                     _RTCOE	set	31226
  1299  0000                     _CCP1CONbits	set	4026
  1300  0000                     _CCPR1L	set	4027
  1301  0000                     _EECON2	set	4007
  1302  0000                     _INTCON2bits	set	4081
  1303  0000                     _INTCON3bits	set	4080
  1304  0000                     _INTCONbits	set	4082
  1305  0000                     _IPR2bits	set	4002
  1306  0000                     _IPR3bits	set	4005
  1307  0000                     _LATAbits	set	3977
  1308  0000                     _LATBbits	set	3978
  1309  0000                     _LATCbits	set	3979
  1310  0000                     _OSCTUNEbits	set	3995
  1311  0000                     _PIE1bits	set	3997
  1312  0000                     _PIE2bits	set	4000
  1313  0000                     _PIE3bits	set	4003
  1314  0000                     _PIR1bits	set	3998
  1315  0000                     _PIR2bits	set	4001
  1316  0000                     _PIR3bits	set	4004
  1317  0000                     _PR2	set	4043
  1318  0000                     _PR4	set	3959
  1319  0000                     _RCONbits	set	4048
  1320  0000                     _SSP2BUF	set	3957
  1321  0000                     _SSP2CON1	set	3954
  1322  0000                     _SSP2CON1bits	set	3954
  1323  0000                     _SSP2STAT	set	3955
  1324  0000                     _T1CON	set	4045
  1325  0000                     _T1CONbits	set	4045
  1326  0000                     _T2CONbits	set	4042
  1327  0000                     _T4CONbits	set	3958
  1328  0000                     _TMR1H	set	4047
  1329  0000                     _TMR1L	set	4046
  1330  0000                     _TRISA	set	3986
  1331  0000                     _TRISAbits	set	3986
  1332  0000                     _TRISB	set	3987
  1333  0000                     _TRISBbits	set	3987
  1334  0000                     _TRISC	set	3988
  1335  0000                     _TRISCbits	set	3988
  1336  0000                     _UCON	set	3941
  1337  0000                     _UCONbits	set	3941
  1338  0000                     _UEIR	set	3939
  1339  0000                     _UIR	set	3938
  1340  0000                     _UIRbits	set	3938
  1341  0000                     _USTAT	set	3940
  1342                           
  1343                           	psect	cinit
  1344  009AF2                     __pcinit:
  1345                           	opt stack 0
  1346  009AF2                     start_initialization:
  1347                           	opt stack 0
  1348  009AF2                     __initialization:
  1349                           	opt stack 0
  1350                           
  1351                           ; Clear objects allocated to BIGRAMl (576 bytes)
  1352  009AF2  EE06  F000         	lfsr	0,__pbssBIGRAMl
  1353  009AF6  EE12 F040          	lfsr	1,576
  1354  009AFA                     clear_0:
  1355  009AFA  6AEE               	clrf	postinc0,c
  1356  009AFC  50E5               	movf	postdec1,w,c
  1357  009AFE  50E1               	movf	fsr1l,w,c
  1358  009B00  E1FC               	bnz	clear_0
  1359  009B02  50E2               	movf	fsr1h,w,c
  1360  009B04  E1FA               	bnz	clear_0
  1361                           
  1362                           ; Clear objects allocated to BANK5 (256 bytes)
  1363  009B06  EE05  F000         	lfsr	0,__pbssBANK5
  1364  009B0A  EE11 F000          	lfsr	1,256
  1365  009B0E                     clear_1:
  1366  009B0E  6AEE               	clrf	postinc0,c
  1367  009B10  50E5               	movf	postdec1,w,c
  1368  009B12  50E1               	movf	fsr1l,w,c
  1369  009B14  E1FC               	bnz	clear_1
  1370  009B16  50E2               	movf	fsr1h,w,c
  1371  009B18  E1FA               	bnz	clear_1
  1372                           
  1373                           ; Clear objects allocated to BANK4 (64 bytes)
  1374  009B1A  EE04  F000         	lfsr	0,__pbssBANK4
  1375  009B1E  0E40               	movlw	64
  1376  009B20                     clear_2:
  1377  009B20  6AEE               	clrf	postinc0,c
  1378  009B22  06E8               	decf	wreg,f,c
  1379  009B24  E1FD               	bnz	clear_2
  1380                           
  1381                           ; Clear objects allocated to BANK3 (196 bytes)
  1382  009B26  EE03  F000         	lfsr	0,__pbssBANK3
  1383  009B2A  0EC4               	movlw	196
  1384  009B2C                     clear_3:
  1385  009B2C  6AEE               	clrf	postinc0,c
  1386  009B2E  06E8               	decf	wreg,f,c
  1387  009B30  E1FD               	bnz	clear_3
  1388                           
  1389                           ; Clear objects allocated to BANK2 (249 bytes)
  1390  009B32  EE02  F000         	lfsr	0,__pbssBANK2
  1391  009B36  0EF9               	movlw	249
  1392  009B38                     clear_4:
  1393  009B38  6AEE               	clrf	postinc0,c
  1394  009B3A  06E8               	decf	wreg,f,c
  1395  009B3C  E1FD               	bnz	clear_4
  1396                           
  1397                           ; Clear objects allocated to BANK1 (104 bytes)
  1398  009B3E  EE01  F090         	lfsr	0,__pbssBANK1
  1399  009B42  0E68               	movlw	104
  1400  009B44                     clear_5:
  1401  009B44  6AEE               	clrf	postinc0,c
  1402  009B46  06E8               	decf	wreg,f,c
  1403  009B48  E1FD               	bnz	clear_5
  1404                           
  1405                           ; Clear objects allocated to BANK0 (67 bytes)
  1406  009B4A  EE00  F060         	lfsr	0,__pbssBANK0
  1407  009B4E  0E43               	movlw	67
  1408  009B50                     clear_6:
  1409  009B50  6AEE               	clrf	postinc0,c
  1410  009B52  06E8               	decf	wreg,f,c
  1411  009B54  E1FD               	bnz	clear_6
  1412                           
  1413                           ; Clear objects allocated to COMRAM (41 bytes)
  1414  009B56  EE00  F032         	lfsr	0,__pbssCOMRAM
  1415  009B5A  0E29               	movlw	41
  1416  009B5C                     clear_7:
  1417  009B5C  6AEE               	clrf	postinc0,c
  1418  009B5E  06E8               	decf	wreg,f,c
  1419  009B60  E1FD               	bnz	clear_7
  1420                           
  1421                           ; Initialize objects allocated to BANK2 (6 bytes)
  1422                           ; load TBLPTR registers with __pidataBANK2
  1423  009B62  0EA0               	movlw	low __pidataBANK2
  1424  009B64  6EF6               	movwf	tblptrl,c
  1425  009B66  0EBB               	movlw	high __pidataBANK2
  1426  009B68  6EF7               	movwf	tblptrh,c
  1427  009B6A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1428  009B6C  6EF8               	movwf	tblptru,c
  1429  009B6E  EE02  F0F9         	lfsr	0,__pdataBANK2
  1430  009B72  EE10 F006          	lfsr	1,6
  1431  009B76                     copy_data0:
  1432  009B76  0009               	tblrd		*+
  1433  009B78  CFF5 FFEE          	movff	tablat,postinc0
  1434  009B7C  50E5               	movf	postdec1,w,c
  1435  009B7E  50E1               	movf	fsr1l,w,c
  1436  009B80  E1FA               	bnz	copy_data0
  1437                           
  1438                           ; Initialize objects allocated to BANK1 (3 bytes)
  1439                           ; load TBLPTR registers with __pidataBANK1
  1440  009B82  0EA9               	movlw	low __pidataBANK1
  1441  009B84  6EF6               	movwf	tblptrl,c
  1442  009B86  0EBB               	movlw	high __pidataBANK1
  1443  009B88  6EF7               	movwf	tblptrh,c
  1444  009B8A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1445  009B8C  6EF8               	movwf	tblptru,c
  1446  009B8E  0009               	tblrd		*+	;fetch initializer
  1447  009B90  CFF5 F1F8          	movff	tablat,__pdataBANK1
  1448  009B94  0009               	tblrd		*+	;fetch initializer
  1449  009B96  CFF5 F1F9          	movff	tablat,__pdataBANK1+1
  1450  009B9A  0009               	tblrd		*+	;fetch initializer
  1451  009B9C  CFF5 F1FA          	movff	tablat,__pdataBANK1+2
  1452                           
  1453                           ; Initialize objects allocated to COMRAM (3 bytes)
  1454                           ; load TBLPTR registers with __pidataCOMRAM
  1455  009BA0  0EA6               	movlw	low __pidataCOMRAM
  1456  009BA2  6EF6               	movwf	tblptrl,c
  1457  009BA4  0EBB               	movlw	high __pidataCOMRAM
  1458  009BA6  6EF7               	movwf	tblptrh,c
  1459  009BA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1460  009BAA  6EF8               	movwf	tblptru,c
  1461  009BAC  0009               	tblrd		*+	;fetch initializer
  1462  009BAE  CFF5 F05B          	movff	tablat,__pdataCOMRAM
  1463  009BB2  0009               	tblrd		*+	;fetch initializer
  1464  009BB4  CFF5 F05C          	movff	tablat,__pdataCOMRAM+1
  1465  009BB8  0009               	tblrd		*+	;fetch initializer
  1466  009BBA  CFF5 F05D          	movff	tablat,__pdataCOMRAM+2
  1467  009BBE                     end_of_initialization:
  1468                           	opt stack 0
  1469  009BBE                     __end_of__initialization:
  1470                           	opt stack 0
  1471  009BBE  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1472  009BC0  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1473  009BC2  0100               	movlb	0
  1474  009BC4  EFA5  F01E         	goto	_main	;jump to C main() function
  1475                           tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           postdec1	equ	0xFE5
  1482                           fsr1h	equ	0xFE2
  1483                           fsr1l	equ	0xFE1
  1484                           
  1485                           	psect	bssCOMRAM
  1486  000032                     __pbssCOMRAM:
  1487                           	opt stack 0
  1488  000032                     _m_failed_messages:
  1489                           	opt stack 0
  1490  000032                     	ds	4
  1491  000036                     _errno:
  1492                           	opt stack 0
  1493  000036                     	ds	2
  1494  000038                     _pBDTEntryEP0OutCurrent:
  1495                           	opt stack 0
  1496  000038                     	ds	2
  1497  00003A                     _pBDTEntryEP0OutNext:
  1498                           	opt stack 0
  1499  00003A                     	ds	2
  1500  00003C                     _pDst:
  1501                           	opt stack 0
  1502  00003C                     	ds	2
  1503  00003E                     _pUsbBuffer:
  1504                           	opt stack 0
  1505  00003E                     	ds	2
  1506  000040                     do_NETWORK_REGISTER@F10229:
  1507                           	opt stack 0
  1508  000040                     	ds	2
  1509  000042                     do_UPDATE@F10257:
  1510                           	opt stack 0
  1511  000042                     	ds	2
  1512  000044                     _BothEP0OutUOWNsSet:
  1513                           	opt stack 0
  1514  000044                     	ds	1
  1515  000045                     _LED_increasing:
  1516                           	opt stack 0
  1517  000045                     	ds	1
  1518  000046                     _RemoteWakeup:
  1519                           	opt stack 0
  1520  000046                     	ds	1
  1521  000047                     _USBBusIsSuspended:
  1522                           	opt stack 0
  1523  000047                     	ds	1
  1524  000048                     _USBDeferINDataStagePackets:
  1525                           	opt stack 0
  1526  000048                     	ds	1
  1527  000049                     _USBDeferOUTDataStagePackets:
  1528                           	opt stack 0
  1529  000049                     	ds	1
  1530  00004A                     _USBDeferStatusStagePacket:
  1531                           	opt stack 0
  1532  00004A                     	ds	1
  1533  00004B                     _USBDeviceState:
  1534                           	opt stack 0
  1535  00004B                     	ds	1
  1536  00004C                     _USBStatusStageEnabledFlag1:
  1537                           	opt stack 0
  1538  00004C                     	ds	1
  1539  00004D                     _USBStatusStageEnabledFlag2:
  1540                           	opt stack 0
  1541  00004D                     	ds	1
  1542  00004E                     _USBStatusStageTimeoutCounter:
  1543                           	opt stack 0
  1544  00004E                     	ds	1
  1545  00004F                     _controlTransferState:
  1546                           	opt stack 0
  1547  00004F                     	ds	1
  1548  000050                     _endpoint_number:
  1549                           	opt stack 0
  1550  000050                     	ds	1
  1551  000051                     _last_rssi:
  1552                           	opt stack 0
  1553  000051                     	ds	1
  1554  000052                     _myAppState:
  1555                           	opt stack 0
  1556  000052                     	ds	1
  1557  000053                     _repeat_full:
  1558                           	opt stack 0
  1559  000053                     	ds	1
  1560  000054                     _shortPacketStatus:
  1561                           	opt stack 0
  1562  000054                     	ds	1
  1563  000055                     _status_led:
  1564                           	opt stack 0
  1565  000055                     	ds	1
  1566  000056                     _USBActiveConfiguration:
  1567                           	opt stack 0
  1568  000056                     	ds	1
  1569  000057                     _USBAlternateInterface:
  1570                           	opt stack 0
  1571  000057                     	ds	1
  1572  000058                     _USTATcopy:
  1573                           	opt stack 0
  1574  000058                     	ds	1
  1575  000059                     _active_protocol:
  1576                           	opt stack 0
  1577  000059                     	ds	1
  1578  00005A                     _idle_rate:
  1579                           	opt stack 0
  1580  00005A                     	ds	1
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postdec1	equ	0xFE5
  1588                           fsr1h	equ	0xFE2
  1589                           fsr1l	equ	0xFE1
  1590                           
  1591                           	psect	dataCOMRAM
  1592  00005B                     __pdataCOMRAM:
  1593                           	opt stack 0
  1594  00005B                     _LED_brightness:
  1595                           	opt stack 0
  1596  00005B                     	ds	2
  1597  00005D                     _timer_count:
  1598                           	opt stack 0
  1599  00005D                     	ds	1
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           
  1610                           	psect	bssBANK0
  1611  000060                     __pbssBANK0:
  1612                           	opt stack 0
  1613  000060                     _outPipes:
  1614                           	opt stack 0
  1615  000060                     	ds	9
  1616  000069                     _RouterFailures:
  1617                           	opt stack 0
  1618  000069                     	ds	8
  1619  000071                     _RoutingTable:
  1620                           	opt stack 0
  1621  000071                     	ds	8
  1622  000079                     _mySecurityKey:
  1623                           	opt stack 0
  1624  000079                     	ds	8
  1625  000081                     _inPipes:
  1626                           	opt stack 0
  1627  000081                     	ds	6
  1628  000087                     _m_sent_messages:
  1629                           	opt stack 0
  1630  000087                     	ds	4
  1631  00008B                     _pBDTEntryIn:
  1632                           	opt stack 0
  1633  00008B                     	ds	4
  1634  00008F                     _pBDTEntryOut:
  1635                           	opt stack 0
  1636  00008F                     	ds	4
  1637  000093                     _USBInHandle:
  1638                           	opt stack 0
  1639  000093                     	ds	2
  1640  000095                     _ep_data_in:
  1641                           	opt stack 0
  1642  000095                     	ds	2
  1643  000097                     _ep_data_out:
  1644                           	opt stack 0
  1645  000097                     	ds	2
  1646  000099                     _IRQ1_Received:
  1647                           	opt stack 0
  1648  000099                     	ds	1
  1649  00009A                     _Pwr_updated:
  1650                           	opt stack 0
  1651  00009A                     	ds	1
  1652  00009B                     _RF_Mode:
  1653                           	opt stack 0
  1654  00009B                     	ds	1
  1655  00009C                     _RSSIVal:
  1656                           	opt stack 0
  1657  00009C                     	ds	1
  1658  00009D                     _TxMACSeq:
  1659                           	opt stack 0
  1660  00009D                     	ds	1
  1661  00009E                     _UpF_updated:
  1662                           	opt stack 0
  1663  00009E                     	ds	1
  1664  00009F                     _hasAck:
  1665                           	opt stack 0
  1666  00009F                     	ds	1
  1667  0000A0                     _tempNodeStatus:
  1668                           	opt stack 0
  1669  0000A0                     	ds	1
  1670  0000A1                     _timerExtension1:
  1671                           	opt stack 0
  1672  0000A1                     	ds	1
  1673  0000A2                     _timerExtension2:
  1674                           	opt stack 0
  1675  0000A2                     	ds	1
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           postdec1	equ	0xFE5
  1683                           fsr1h	equ	0xFE2
  1684                           fsr1l	equ	0xFE1
  1685                           
  1686                           	psect	bssBANK1
  1687  000190                     __pbssBANK1:
  1688                           	opt stack 0
  1689  000190                     _rxMessage:
  1690                           	opt stack 0
  1691  000190                     	ds	10
  1692  00019A                     _MACRxPacket:
  1693                           	opt stack 0
  1694  00019A                     	ds	8
  1695  0001A2                     _OutgoingFrameCounter:
  1696                           	opt stack 0
  1697  0001A2                     	ds	4
  1698  0001A6                     _tempLongAddress:
  1699                           	opt stack 0
  1700  0001A6                     	ds	4
  1701  0001AA                     _MACInitParams:
  1702                           	opt stack 0
  1703  0001AA                     	ds	3
  1704  0001AD                     _MTP:
  1705                           	opt stack 0
  1706  0001AD                     	ds	3
  1707  0001B0                     _m_uptime_days:
  1708                           	opt stack 0
  1709  0001B0                     	ds	3
  1710  0001B3                     _AcknowledgementAddr:
  1711                           	opt stack 0
  1712  0001B3                     	ds	2
  1713  0001B5                     _MiWiStateMachine:
  1714                           	opt stack 0
  1715  0001B5                     	ds	2
  1716  0001B7                     _USBOutHandle:
  1717                           	opt stack 0
  1718  0001B7                     	ds	2
  1719  0001B9                     _p_buffer:
  1720                           	opt stack 0
  1721  0001B9                     	ds	2
  1722  0001BB                     _tempPANID:
  1723                           	opt stack 0
  1724  0001BB                     	ds	2
  1725  0001BD                     _ActiveScanResultIndex:
  1726                           	opt stack 0
  1727  0001BD                     	ds	1
  1728  0001BE                     _BestChannel:
  1729                           	opt stack 0
  1730  0001BE                     	ds	1
  1731  0001BF                     _ConnMode:
  1732                           	opt stack 0
  1733  0001BF                     	ds	1
  1734  0001C0                     _MACSeq:
  1735                           	opt stack 0
  1736  0001C0                     	ds	1
  1737  0001C1                     _MiWiAckRequired:
  1738                           	opt stack 0
  1739  0001C1                     	ds	1
  1740  0001C2                     _MiWiCapacityInfo:
  1741                           	opt stack 0
  1742  0001C2                     	ds	1
  1743  0001C3                     _MiWiSeqNum:
  1744                           	opt stack 0
  1745  0001C3                     	ds	1
  1746  0001C4                     _RSSILock:
  1747                           	opt stack 0
  1748  0001C4                     	ds	1
  1749  0001C5                     _ReceivedBankIndex:
  1750                           	opt stack 0
  1751  0001C5                     	ds	1
  1752  0001C6                     _TxData:
  1753                           	opt stack 0
  1754  0001C6                     	ds	1
  1755  0001C7                     _knownCoordinators:
  1756                           	opt stack 0
  1757  0001C7                     	ds	1
  1758  0001C8                     _m_power:
  1759                           	opt stack 0
  1760  0001C8                     	ds	1
  1761  0001C9                     _myParent:
  1762                           	opt stack 0
  1763  0001C9                     	ds	1
  1764  0001CA                     _role:
  1765                           	opt stack 0
  1766  0001CA                     	ds	1
  1767  0001CB                     _timer_flag:
  1768                           	opt stack 0
  1769  0001CB                     	ds	1
  1770  0001CC                     _openSocketInfo:
  1771                           	opt stack 0
  1772  0001CC                     	ds	18
  1773  0001DE                     _m_var:
  1774                           	opt stack 0
  1775  0001DE                     	ds	10
  1776  0001E8                     _myLongAddress:
  1777                           	opt stack 0
  1778  0001E8                     	ds	4
  1779  0001EC                     _tmpBlock:
  1780                           	opt stack 0
  1781  0001EC                     	ds	4
  1782  0001F0                     _myPANID:
  1783                           	opt stack 0
  1784  0001F0                     	ds	2
  1785  0001F2                     _myShortAddress:
  1786                           	opt stack 0
  1787  0001F2                     	ds	2
  1788  0001F4                     _tempShortAddress:
  1789                           	opt stack 0
  1790  0001F4                     	ds	2
  1791  0001F6                     _currentChannel:
  1792                           	opt stack 0
  1793  0001F6                     	ds	1
  1794  0001F7                     _noise_level:
  1795                           	opt stack 0
  1796  0001F7                     	ds	1
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1h	equ	0xFE2
  1805                           fsr1l	equ	0xFE1
  1806                           
  1807                           	psect	dataBANK1
  1808  0001F8                     __pdataBANK1:
  1809                           	opt stack 0
  1810  0001F8                     _AcknowledgementSeq:
  1811                           	opt stack 0
  1812  0001F8                     	ds	1
  1813  0001F9                     _defaultHops:
  1814                           	opt stack 0
  1815  0001F9                     	ds	1
  1816  0001FA                     _m_update_frequency:
  1817                           	opt stack 0
  1818  0001FA                     	ds	1
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           
  1829                           	psect	bssBANK2
  1830  000200                     __pbssBANK2:
  1831                           	opt stack 0
  1832  000200                     _ActiveScanResults:
  1833                           	opt stack 0
  1834  000200                     	ds	40
  1835  000228                     _BroadcastRecords:
  1836                           	opt stack 0
  1837  000228                     	ds	32
  1838  000248                     _AckInfo:
  1839                           	opt stack 0
  1840  000248                     	ds	30
  1841  000266                     _MACTxBuffer:
  1842                           	opt stack 0
  1843  000266                     	ds	64
  1844  0002A6                     _TxBuffer:
  1845                           	opt stack 0
  1846  0002A6                     	ds	43
  1847  0002D1                     _m_buffer:
  1848                           	opt stack 0
  1849  0002D1                     	ds	32
  1850  0002F1                     _key:
  1851                           	opt stack 0
  1852  0002F1                     	ds	8
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           
  1863                           	psect	dataBANK2
  1864  0002F9                     __pdataBANK2:
  1865                           	opt stack 0
  1866  0002F9                     MiMAC_ChannelAssessment@F10758:
  1867                           	opt stack 0
  1868  0002F9                     	ds	6
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           postdec1	equ	0xFE5
  1876                           fsr1h	equ	0xFE2
  1877                           fsr1l	equ	0xFE1
  1878                           
  1879                           	psect	bssBANK3
  1880  000300                     __pbssBANK3:
  1881                           	opt stack 0
  1882  000300                     _RxPacket:
  1883                           	opt stack 0
  1884  000300                     	ds	132
  1885  000384                     _ToSendDataBuffer:
  1886                           	opt stack 0
  1887  000384                     	ds	64
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1h	equ	0xFE2
  1896                           fsr1l	equ	0xFE1
  1897                           
  1898                           	psect	bssBANK4
  1899  000400                     __pbssBANK4:
  1900                           	opt stack 0
  1901  000400                     _ReceivedDataBuffer:
  1902                           	opt stack 0
  1903  000400                     	ds	64
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           postdec1	equ	0xFE5
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           
  1914                           	psect	bssBANK5
  1915  000500                     __pbssBANK5:
  1916                           	opt stack 0
  1917  000500                     _IncomingFrameCounter:
  1918                           	opt stack 0
  1919  000500                     	ds	256
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930                           	psect	bssBIGRAMl
  1931  000600                     __pbssBIGRAMl:
  1932                           	opt stack 0
  1933  000600                     _ConnectionTable:
  1934                           	opt stack 0
  1935  000600                     	ds	576
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           postdec1	equ	0xFE5
  1943                           fsr1h	equ	0xFE2
  1944                           fsr1l	equ	0xFE1
  1945                           
  1946                           	psect	cstackBANK3
  1947  0003C4                     __pcstackBANK3:
  1948                           	opt stack 0
  1949  0003C4                     MiApp_UnicastAddress@t1:
  1950                           	opt stack 0
  1951                           
  1952                           ; 4 bytes @ 0x0
  1953  0003C4                     	ds	4
  1954  0003C8                     MiApp_UnicastAddress@t2:
  1955                           	opt stack 0
  1956                           
  1957                           ; 4 bytes @ 0x4
  1958  0003C8                     	ds	4
  1959  0003CC                     MiApp_UnicastAddress@t1_2749:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x8
  1963  0003CC                     	ds	4
  1964  0003D0                     MiApp_UnicastAddress@t2_2760:
  1965                           	opt stack 0
  1966                           
  1967                           ; 4 bytes @ 0xC
  1968  0003D0                     	ds	4
  1969  0003D4                     MiApp_UnicastAddress@MiWiFrameControl:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0x10
  1973  0003D4                     	ds	1
  1974  0003D5                     MiApp_UnicastAddress@i:
  1975                           	opt stack 0
  1976                           
  1977                           ; 1 bytes @ 0x11
  1978  0003D5                     	ds	1
  1979  0003D6                     MiApp_UnicastAddress@handle:
  1980                           	opt stack 0
  1981                           
  1982                           ; 1 bytes @ 0x12
  1983  0003D6                     	ds	1
  1984  0003D7                     main@last_update:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0x13
  1988  0003D7                     	ds	1
  1989  0003D8                     _main$4898:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x14
  1993  0003D8                     	ds	2
  1994  0003DA                     _main$4921:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x16
  1998  0003DA                     	ds	2
  1999  0003DC                     main@power:
  2000                           	opt stack 0
  2001                           
  2002                           ; 1 bytes @ 0x18
  2003  0003DC                     	ds	1
  2004  0003DD                     main@rssi:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x19
  2008  0003DD                     	ds	1
  2009  0003DE                     main@x:
  2010                           	opt stack 0
  2011                           
  2012                           ; 2 bytes @ 0x1A
  2013  0003DE                     	ds	2
  2014  0003E0                     main@size:
  2015                           	opt stack 0
  2016                           
  2017                           ; 1 bytes @ 0x1C
  2018  0003E0                     	ds	1
  2019  0003E1                     main@shortaddress:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0x1D
  2023  0003E1                     	ds	2
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034                           	psect	cstackBANK1
  2035  000100                     __pcstackBANK1:
  2036                           	opt stack 0
  2037  000100                     ??_SearchForLongAddress:
  2038  000100                     ??_isdigit:
  2039  000100                     ??_MiApp_ConnectionMode:
  2040  000100                     ?_dBm_to_mW:
  2041                           	opt stack 0
  2042  000100                     ?_USBTransferOnePacket:
  2043                           	opt stack 0
  2044  000100                     ?___wmul:
  2045                           	opt stack 0
  2046  000100                     ?___lwdiv:
  2047                           	opt stack 0
  2048  000100                     ?___ftpack:
  2049                           	opt stack 0
  2050  000100                     ?_MiWi_TickGet:
  2051                           	opt stack 0
  2052  000100                     ?___lmul:
  2053                           	opt stack 0
  2054  000100                     SPIPut@i:
  2055                           	opt stack 0
  2056  000100                     findNextNetworkEntry@i:
  2057                           	opt stack 0
  2058  000100                     USBTransferOnePacket@dir:
  2059                           	opt stack 0
  2060  000100                     mW_ufixed16_to_dBm@value2:
  2061                           	opt stack 0
  2062  000100                     ___lbmod@divisor:
  2063                           	opt stack 0
  2064  000100                     SYSTEM_Initialize@pll_startup_counter:
  2065                           	opt stack 0
  2066  000100                     MiMAC_SetAltAddress@Address:
  2067                           	opt stack 0
  2068  000100                     encode@text:
  2069                           	opt stack 0
  2070  000100                     isSameAddress@Address1:
  2071                           	opt stack 0
  2072  000100                     labelcmp@p1:
  2073                           	opt stack 0
  2074  000100                     dBm_to_mW_ufixed16@value1:
  2075                           	opt stack 0
  2076  000100                     encode_uint8_variable@buffer:
  2077                           	opt stack 0
  2078  000100                     encode_ufixed16_variable@buffer:
  2079                           	opt stack 0
  2080  000100                     ___wmul@multiplier:
  2081                           	opt stack 0
  2082  000100                     ___lwdiv@dividend:
  2083                           	opt stack 0
  2084  000100                     memcpy@d1:
  2085                           	opt stack 0
  2086  000100                     memset@p1:
  2087                           	opt stack 0
  2088  000100                     strcpy@to:
  2089                           	opt stack 0
  2090  000100                     ___ftpack@arg:
  2091                           	opt stack 0
  2092  000100                     frexp@value:
  2093                           	opt stack 0
  2094  000100                     ___ftge@ff1:
  2095                           	opt stack 0
  2096  000100                     ___lmul@multiplier:
  2097                           	opt stack 0
  2098                           
  2099                           ; 4 bytes @ 0x0
  2100  000100                     	ds	1
  2101  000101                     SPIPut@v:
  2102                           	opt stack 0
  2103  000101                     MiApp_ConnectionMode@Mode:
  2104                           	opt stack 0
  2105  000101                     mW_ufixed16_to_dBm@value1:
  2106                           	opt stack 0
  2107  000101                     _isdigit$5571:
  2108                           	opt stack 0
  2109  000101                     ___lbmod@dividend:
  2110                           	opt stack 0
  2111  000101                     USBTransferOnePacket@data:
  2112                           	opt stack 0
  2113                           
  2114                           ; 2 bytes @ 0x1
  2115  000101                     	ds	1
  2116  000102                     RegisterRead@value:
  2117                           	opt stack 0
  2118  000102                     WriteFIFO@Data:
  2119                           	opt stack 0
  2120  000102                     SearchForShortAddress@i:
  2121                           	opt stack 0
  2122  000102                     dBm_to_mW@power:
  2123                           	opt stack 0
  2124  000102                     isdigit@c:
  2125                           	opt stack 0
  2126  000102                     ___lbmod@counter:
  2127                           	opt stack 0
  2128  000102                     RegisterSet@setting:
  2129                           	opt stack 0
  2130  000102                     MiMAC_SetAltAddress@PANID:
  2131                           	opt stack 0
  2132  000102                     encode@key:
  2133                           	opt stack 0
  2134  000102                     isSameAddress@Address2:
  2135                           	opt stack 0
  2136  000102                     labelcmp@p2:
  2137                           	opt stack 0
  2138  000102                     dBm_to_mW_ufixed16@value2:
  2139                           	opt stack 0
  2140  000102                     ___wmul@multiplicand:
  2141                           	opt stack 0
  2142  000102                     ___lwdiv@divisor:
  2143                           	opt stack 0
  2144  000102                     memcpy@s1:
  2145                           	opt stack 0
  2146  000102                     memset@c:
  2147                           	opt stack 0
  2148  000102                     strcpy@from:
  2149                           	opt stack 0
  2150  000102                     encode_uint8_variable@var:
  2151                           	opt stack 0
  2152  000102                     encode_ufixed16_variable@var:
  2153                           	opt stack 0
  2154                           
  2155                           ; 10 bytes @ 0x2
  2156  000102                     	ds	1
  2157  000103                     RegisterRead@IRQ1select:
  2158                           	opt stack 0
  2159  000103                     WriteFIFO@IRQ1select:
  2160                           	opt stack 0
  2161  000103                     USBTransferOnePacket@len:
  2162                           	opt stack 0
  2163  000103                     ___ftpack@exp:
  2164                           	opt stack 0
  2165  000103                     ___lbmod@rem:
  2166                           	opt stack 0
  2167  000103                     frexp@eptr:
  2168                           	opt stack 0
  2169  000103                     ___ftge@ff2:
  2170                           	opt stack 0
  2171                           
  2172                           ; 3 bytes @ 0x3
  2173  000103                     	ds	1
  2174  000104                     ??_labelcmp:
  2175  000104                     ??_MiWi_TickGet:
  2176  000104                     ??_encode:
  2177  000104                     RegisterSet@IRQ1select:
  2178                           	opt stack 0
  2179  000104                     RegisterRead@IRQ0select:
  2180                           	opt stack 0
  2181  000104                     WriteFIFO@IRQ0select:
  2182                           	opt stack 0
  2183  000104                     SearchForLongAddress@j:
  2184                           	opt stack 0
  2185  000104                     USBTransferOnePacket@ep:
  2186                           	opt stack 0
  2187  000104                     dBm_to_mW_ufixed16@power:
  2188                           	opt stack 0
  2189  000104                     ___ftpack@sign:
  2190                           	opt stack 0
  2191  000104                     ___lwdiv@counter:
  2192                           	opt stack 0
  2193  000104                     ___wmul@product:
  2194                           	opt stack 0
  2195  000104                     memcpy@n:
  2196                           	opt stack 0
  2197  000104                     memset@n:
  2198                           	opt stack 0
  2199  000104                     strcpy@cp:
  2200                           	opt stack 0
  2201  000104                     ___lmul@multiplicand:
  2202                           	opt stack 0
  2203                           
  2204                           ; 4 bytes @ 0x4
  2205  000104                     	ds	1
  2206  000105                     ??___ftpack:
  2207  000105                     ??_frexp:
  2208  000105                     MiWi_TickGet@failureCounter:
  2209                           	opt stack 0
  2210  000105                     RegisterSet@IRQ0select:
  2211                           	opt stack 0
  2212  000105                     RegisterRead@address:
  2213                           	opt stack 0
  2214  000105                     SearchForLongAddress@i:
  2215                           	opt stack 0
  2216  000105                     USBTransferOnePacket@handle:
  2217                           	opt stack 0
  2218  000105                     ___lwdiv@quotient:
  2219                           	opt stack 0
  2220                           
  2221                           ; 2 bytes @ 0x5
  2222  000105                     	ds	1
  2223  000106                     ??_AddNodeToNetworkTable:
  2224  000106                     ??_MiMAC_SetPower:
  2225  000106                     ??___ftge:
  2226  000106                     ?___awdiv:
  2227                           	opt stack 0
  2228  000106                     SetRFMode@mode:
  2229                           	opt stack 0
  2230  000106                     isSameAddress@i:
  2231                           	opt stack 0
  2232  000106                     ___awdiv@dividend:
  2233                           	opt stack 0
  2234  000106                     memcpy@d:
  2235                           	opt stack 0
  2236  000106                     memset@p:
  2237                           	opt stack 0
  2238  000106                     MiWi_TickGet@currentTime:
  2239                           	opt stack 0
  2240                           
  2241                           ; 4 bytes @ 0x6
  2242  000106                     	ds	1
  2243  000107                     ?___lwmod:
  2244                           	opt stack 0
  2245  000107                     MiMAC_SetChannel@offsetFreq:
  2246                           	opt stack 0
  2247  000107                     _labelcmp$5111:
  2248                           	opt stack 0
  2249  000107                     sendHIDText@str:
  2250                           	opt stack 0
  2251  000107                     ___lwmod@dividend:
  2252                           	opt stack 0
  2253                           
  2254                           ; 2 bytes @ 0x7
  2255  000107                     	ds	1
  2256  000108                     ??_MiMAC_SetChannel:
  2257  000108                     ?___ftadd:
  2258                           	opt stack 0
  2259  000108                     MiMAC_SetPower@outputPower:
  2260                           	opt stack 0
  2261  000108                     AddNodeToNetworkTable@i:
  2262                           	opt stack 0
  2263  000108                     USBDeviceInit@i:
  2264                           	opt stack 0
  2265  000108                     ___awdiv@divisor:
  2266                           	opt stack 0
  2267  000108                     memcpy@s:
  2268                           	opt stack 0
  2269  000108                     ___ftadd@f1:
  2270                           	opt stack 0
  2271  000108                     ___lmul@product:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x8
  2275  000108                     	ds	1
  2276  000109                     ??_sendHIDText:
  2277  000109                     MiMAC_SetChannel@channel:
  2278                           	opt stack 0
  2279  000109                     AddNodeToNetworkTable@handle:
  2280                           	opt stack 0
  2281  000109                     ___lwmod@divisor:
  2282                           	opt stack 0
  2283                           
  2284                           ; 2 bytes @ 0x9
  2285  000109                     	ds	1
  2286  00010A                     ??_BroadcastJitter:
  2287  00010A                     ?_decode_variable:
  2288                           	opt stack 0
  2289  00010A                     TxPacket@CCA:
  2290                           	opt stack 0
  2291  00010A                     MiApp_SetChannel@channel:
  2292                           	opt stack 0
  2293  00010A                     sendHIDText@c:
  2294                           	opt stack 0
  2295  00010A                     ___awdiv@counter:
  2296                           	opt stack 0
  2297  00010A                     sendHIDBinary@buffer:
  2298                           	opt stack 0
  2299  00010A                     decode_variable@p_buffer:
  2300                           	opt stack 0
  2301                           
  2302                           ; 2 bytes @ 0xA
  2303  00010A                     	ds	1
  2304  00010B                     ??_TxPacket:
  2305  00010B                     ___awdiv@sign:
  2306                           	opt stack 0
  2307  00010B                     ___lwmod@counter:
  2308                           	opt stack 0
  2309  00010B                     _sendHIDText$4973:
  2310                           	opt stack 0
  2311  00010B                     ___ftadd@f2:
  2312                           	opt stack 0
  2313                           
  2314                           ; 3 bytes @ 0xB
  2315  00010B                     	ds	1
  2316  00010C                     ??_encode_ufixed16_variable:
  2317  00010C                     ??_encode_uint8_variable:
  2318  00010C                     ?_sprintf:
  2319                           	opt stack 0
  2320  00010C                     sendHIDBinary@length:
  2321                           	opt stack 0
  2322  00010C                     DELAY_ms@ms:
  2323                           	opt stack 0
  2324  00010C                     sprintf@sp:
  2325                           	opt stack 0
  2326  00010C                     ___awdiv@quotient:
  2327                           	opt stack 0
  2328                           
  2329                           ; 2 bytes @ 0xC
  2330  00010C                     	ds	1
  2331  00010D                     ??_sendHIDBinary:
  2332  00010D                     encode_uint8_variable@m_signed:
  2333                           	opt stack 0
  2334  00010D                     encode_ufixed16_variable@m_signed:
  2335                           	opt stack 0
  2336  00010D                     sendHIDText@p:
  2337                           	opt stack 0
  2338                           
  2339                           ; 2 bytes @ 0xD
  2340  00010D                     	ds	1
  2341  00010E                     ??___ftadd:
  2342  00010E                     ??_MiMAC_ChannelAssessment:
  2343  00010E                     encode_uint8_variable@m_writable:
  2344                           	opt stack 0
  2345  00010E                     encode_ufixed16_variable@m_writable:
  2346                           	opt stack 0
  2347  00010E                     encode@delta:
  2348                           	opt stack 0
  2349  00010E                     _sendHIDBinary$4970:
  2350                           	opt stack 0
  2351  00010E                     sprintf@f:
  2352                           	opt stack 0
  2353  00010E                     DELAY_ms@cyclesRequiredForEntireDelay:
  2354                           	opt stack 0
  2355                           
  2356                           ; 4 bytes @ 0xE
  2357  00010E                     	ds	1
  2358  00010F                     sendHIDText@size:
  2359                           	opt stack 0
  2360                           
  2361                           ; 2 bytes @ 0xF
  2362  00010F                     	ds	1
  2363  000110                     ??_send_answer_to_update:
  2364  000110                     encode@i:
  2365                           	opt stack 0
  2366                           
  2367                           ; 1 bytes @ 0x10
  2368  000110                     	ds	1
  2369  000111                     ___ftadd@sign:
  2370                           	opt stack 0
  2371  000111                     encode@part1:
  2372                           	opt stack 0
  2373                           
  2374                           ; 2 bytes @ 0x11
  2375  000111                     	ds	1
  2376  000112                     ___ftadd@exp2:
  2377                           	opt stack 0
  2378  000112                     MiMAC_Init@initValue:
  2379                           	opt stack 0
  2380  000112                     BroadcastJitter@t1:
  2381                           	opt stack 0
  2382  000112                     MiMAC_ChannelAssessment@result:
  2383                           	opt stack 0
  2384                           
  2385                           ; 6 bytes @ 0x12
  2386  000112                     	ds	1
  2387  000113                     ___ftadd@exp1:
  2388                           	opt stack 0
  2389  000113                     encode@part2:
  2390                           	opt stack 0
  2391  000113                     TxPacket@t1:
  2392                           	opt stack 0
  2393                           
  2394                           ; 4 bytes @ 0x13
  2395  000113                     	ds	1
  2396  000114                     ??_decode_variable:
  2397  000114                     ?___fttol:
  2398                           	opt stack 0
  2399  000114                     ___fttol@f1:
  2400                           	opt stack 0
  2401                           
  2402                           ; 3 bytes @ 0x14
  2403  000114                     	ds	1
  2404  000115                     MiMAC_Init@i:
  2405                           	opt stack 0
  2406  000115                     encode@sum:
  2407                           	opt stack 0
  2408                           
  2409                           ; 2 bytes @ 0x15
  2410  000115                     	ds	1
  2411  000116                     ??_MiApp_ProtocolInit:
  2412  000116                     BroadcastJitter@t2:
  2413                           	opt stack 0
  2414  000116                     decode_variable@var:
  2415                           	opt stack 0
  2416                           
  2417                           ; 10 bytes @ 0x16
  2418  000116                     	ds	1
  2419  000117                     MiApp_ProtocolInit@bNetworkFreezer:
  2420                           	opt stack 0
  2421  000117                     CTR@text:
  2422                           	opt stack 0
  2423  000117                     CBC_MAC@text:
  2424                           	opt stack 0
  2425  000117                     TxPacket@t2:
  2426                           	opt stack 0
  2427                           
  2428                           ; 4 bytes @ 0x17
  2429  000117                     	ds	1
  2430  000118                     ??_sprintf:
  2431  000118                     ??___fttol:
  2432  000118                     MiMAC_ChannelAssessment@AssessmentMode:
  2433                           	opt stack 0
  2434  000118                     MiApp_ProtocolInit@MIP:
  2435                           	opt stack 0
  2436                           
  2437                           ; 3 bytes @ 0x18
  2438  000118                     	ds	1
  2439  000119                     MiMAC_ChannelAssessment@k:
  2440                           	opt stack 0
  2441  000119                     CTR@len:
  2442                           	opt stack 0
  2443  000119                     CBC_MAC@len:
  2444                           	opt stack 0
  2445                           
  2446                           ; 1 bytes @ 0x19
  2447  000119                     	ds	1
  2448  00011A                     BroadcastJitter@range:
  2449                           	opt stack 0
  2450  00011A                     MiMAC_ChannelAssessment@count:
  2451                           	opt stack 0
  2452  00011A                     CTR@key:
  2453                           	opt stack 0
  2454  00011A                     CBC_MAC@key:
  2455                           	opt stack 0
  2456                           
  2457                           ; 2 bytes @ 0x1A
  2458  00011A                     	ds	1
  2459  00011B                     TxPacket@CCARetries:
  2460                           	opt stack 0
  2461  00011B                     BroadcastJitter@jitter:
  2462                           	opt stack 0
  2463  00011B                     MiApp_ProtocolInit@i:
  2464                           	opt stack 0
  2465                           
  2466                           ; 1 bytes @ 0x1B
  2467  00011B                     	ds	1
  2468  00011C                     TxPacket@reTry:
  2469                           	opt stack 0
  2470  00011C                     MiMAC_ChannelAssessment@i:
  2471                           	opt stack 0
  2472  00011C                     sprintf@idx:
  2473                           	opt stack 0
  2474  00011C                     CTR@nounce:
  2475                           	opt stack 0
  2476  00011C                     CBC_MAC@MIC:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x1C
  2480  00011C                     	ds	1
  2481  00011D                     TxPacket@allowedTxFailure:
  2482                           	opt stack 0
  2483  00011D                     sprintf@prec:
  2484                           	opt stack 0
  2485  00011D                     ___fttol@sign1:
  2486                           	opt stack 0
  2487  00011D                     MiApp_NoiseDetection@ChannelMap:
  2488                           	opt stack 0
  2489                           
  2490                           ; 4 bytes @ 0x1D
  2491  00011D                     	ds	1
  2492  00011E                     ??_CTR:
  2493  00011E                     ??_CBC_MAC:
  2494  00011E                     TxPacket@status:
  2495                           	opt stack 0
  2496  00011E                     sprintf@cp:
  2497                           	opt stack 0
  2498  00011E                     ___fttol@lval:
  2499                           	opt stack 0
  2500                           
  2501                           ; 4 bytes @ 0x1E
  2502  00011E                     	ds	1
  2503  00011F                     TxPacket@TxPacketLen:
  2504                           	opt stack 0
  2505                           
  2506                           ; 1 bytes @ 0x1F
  2507  00011F                     	ds	1
  2508  000120                     TxPacket@i:
  2509                           	opt stack 0
  2510  000120                     sprintf@ap:
  2511                           	opt stack 0
  2512                           
  2513                           ; 2 bytes @ 0x20
  2514  000120                     	ds	1
  2515  000121                     TxPacket@rssival:
  2516                           	opt stack 0
  2517  000121                     CTR@block:
  2518                           	opt stack 0
  2519  000121                     CBC_MAC@block:
  2520                           	opt stack 0
  2521  000121                     MiApp_NoiseDetection@ScanDuration:
  2522                           	opt stack 0
  2523                           
  2524                           ; 1 bytes @ 0x21
  2525  000121                     	ds	1
  2526  000122                     CTR@i:
  2527                           	opt stack 0
  2528  000122                     CBC_MAC@j:
  2529                           	opt stack 0
  2530  000122                     MiApp_NoiseDetection@DetectionMode:
  2531                           	opt stack 0
  2532  000122                     ___fttol@exp1:
  2533                           	opt stack 0
  2534  000122                     sprintf@len:
  2535                           	opt stack 0
  2536                           
  2537                           ; 2 bytes @ 0x22
  2538  000122                     	ds	1
  2539  000123                     ?___altoft:
  2540                           	opt stack 0
  2541  000123                     CTR@j:
  2542                           	opt stack 0
  2543  000123                     CBC_MAC@i:
  2544                           	opt stack 0
  2545  000123                     MiApp_NoiseDetection@RSSIValue:
  2546                           	opt stack 0
  2547  000123                     ___altoft@c:
  2548                           	opt stack 0
  2549                           
  2550                           ; 4 bytes @ 0x23
  2551  000123                     	ds	1
  2552  000124                     CCM_Enc@text:
  2553                           	opt stack 0
  2554  000124                     CCM_Dec@text:
  2555                           	opt stack 0
  2556  000124                     sprintf@val:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x24
  2560  000124                     	ds	1
  2561  000125                     ??_MiApp_NoiseDetection:
  2562                           
  2563                           ; 0 bytes @ 0x25
  2564  000125                     	ds	1
  2565  000126                     CCM_Enc@headerLen:
  2566                           	opt stack 0
  2567  000126                     CCM_Dec@headerLen:
  2568                           	opt stack 0
  2569  000126                     sprintf@flag:
  2570                           	opt stack 0
  2571                           
  2572                           ; 1 bytes @ 0x26
  2573  000126                     	ds	1
  2574  000127                     ??___altoft:
  2575  000127                     CCM_Enc@payloadLen:
  2576                           	opt stack 0
  2577  000127                     CCM_Dec@payloadLen:
  2578                           	opt stack 0
  2579  000127                     sprintf@width:
  2580                           	opt stack 0
  2581                           
  2582                           ; 2 bytes @ 0x27
  2583  000127                     	ds	1
  2584  000128                     CCM_Enc@key:
  2585                           	opt stack 0
  2586  000128                     CCM_Dec@key:
  2587                           	opt stack 0
  2588                           
  2589                           ; 2 bytes @ 0x28
  2590  000128                     	ds	1
  2591  000129                     sprintf@c:
  2592                           	opt stack 0
  2593                           
  2594                           ; 1 bytes @ 0x29
  2595  000129                     	ds	1
  2596  00012A                     ??_CCM_Enc:
  2597  00012A                     ??_CCM_Dec:
  2598                           
  2599                           ; 0 bytes @ 0x2A
  2600  00012A                     	ds	1
  2601  00012B                     ___altoft@exp:
  2602                           	opt stack 0
  2603                           
  2604                           ; 1 bytes @ 0x2B
  2605  00012B                     	ds	1
  2606  00012C                     ___altoft@sign:
  2607                           	opt stack 0
  2608  00012C                     _CCM_Enc$1978:
  2609                           	opt stack 0
  2610                           
  2611                           ; 2 bytes @ 0x2C
  2612  00012C                     	ds	1
  2613  00012D                     ?_floor:
  2614                           	opt stack 0
  2615  00012D                     floor@x:
  2616                           	opt stack 0
  2617                           
  2618                           ; 3 bytes @ 0x2D
  2619  00012D                     	ds	1
  2620  00012E                     CCM_Enc@i:
  2621                           	opt stack 0
  2622  00012E                     MiApp_NoiseDetection@channelMask:
  2623                           	opt stack 0
  2624                           
  2625                           ; 4 bytes @ 0x2E
  2626  00012E                     	ds	1
  2627  00012F                     MiMAC_SendPacket@transParam:
  2628                           	opt stack 0
  2629                           
  2630                           ; 3 bytes @ 0x2F
  2631  00012F                     	ds	1
  2632  000130                     _CCM_Dec$1986:
  2633                           	opt stack 0
  2634  000130                     floor@i:
  2635                           	opt stack 0
  2636                           
  2637                           ; 3 bytes @ 0x30
  2638  000130                     	ds	2
  2639  000132                     CCM_Dec@i:
  2640                           	opt stack 0
  2641  000132                     MiMAC_SendPacket@MACPayload:
  2642                           	opt stack 0
  2643  000132                     MiApp_NoiseDetection@t1:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x32
  2647  000132                     	ds	1
  2648  000133                     ??_MiMAC_ReceivedPacket:
  2649  000133                     floor@expon:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x33
  2653  000133                     	ds	1
  2654  000134                     MiMAC_SendPacket@MACPayloadLen:
  2655                           	opt stack 0
  2656                           
  2657                           ; 1 bytes @ 0x34
  2658  000134                     	ds	1
  2659  000135                     ??_MiMAC_SendPacket:
  2660  000135                     ?___ftneg:
  2661                           	opt stack 0
  2662  000135                     ___ftneg@f1:
  2663                           	opt stack 0
  2664                           
  2665                           ; 3 bytes @ 0x35
  2666  000135                     	ds	1
  2667  000136                     MiMAC_SendPacket@headerLen:
  2668                           	opt stack 0
  2669  000136                     MiApp_NoiseDetection@t2:
  2670                           	opt stack 0
  2671                           
  2672                           ; 4 bytes @ 0x36
  2673  000136                     	ds	1
  2674  000137                     MiMAC_SendPacket@TxIndex:
  2675                           	opt stack 0
  2676                           
  2677                           ; 1 bytes @ 0x37
  2678  000137                     	ds	1
  2679  000138                     ?___ftmul:
  2680                           	opt stack 0
  2681  000138                     MiMAC_SendPacket@i:
  2682                           	opt stack 0
  2683  000138                     ___ftmul@f1:
  2684                           	opt stack 0
  2685                           
  2686                           ; 3 bytes @ 0x38
  2687  000138                     	ds	1
  2688  000139                     SendMACPacket@Address:
  2689                           	opt stack 0
  2690                           
  2691                           ; 2 bytes @ 0x39
  2692  000139                     	ds	1
  2693  00013A                     MiApp_NoiseDetection@OptimalChannel:
  2694                           	opt stack 0
  2695                           
  2696                           ; 1 bytes @ 0x3A
  2697  00013A                     	ds	1
  2698  00013B                     SendMACPacket@PacketType:
  2699                           	opt stack 0
  2700  00013B                     MiApp_NoiseDetection@j:
  2701                           	opt stack 0
  2702  00013B                     ___ftmul@f2:
  2703                           	opt stack 0
  2704  00013B                     MiMAC_ReceivedPacket@currentTick:
  2705                           	opt stack 0
  2706                           
  2707                           ; 4 bytes @ 0x3B
  2708  00013B                     	ds	1
  2709  00013C                     ??_SendMACPacket:
  2710  00013C                     MiApp_NoiseDetection@k:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0x3C
  2714  00013C                     	ds	1
  2715  00013D                     MiApp_NoiseDetection@RSSIcheck:
  2716                           	opt stack 0
  2717  00013D                     RouteMessage@PANID:
  2718                           	opt stack 0
  2719                           
  2720                           ; 2 bytes @ 0x3D
  2721  00013D                     	ds	1
  2722  00013E                     ??___ftmul:
  2723  00013E                     MiApp_NoiseDetection@minRSSI:
  2724                           	opt stack 0
  2725                           
  2726                           ; 1 bytes @ 0x3E
  2727  00013E                     	ds	1
  2728  00013F                     MiApp_NoiseDetection@i:
  2729                           	opt stack 0
  2730  00013F                     RouteMessage@ShortAddress:
  2731                           	opt stack 0
  2732  00013F                     MiMAC_ReceivedPacket@FrameCounter:
  2733                           	opt stack 0
  2734                           
  2735                           ; 4 bytes @ 0x3F
  2736  00013F                     	ds	1
  2737  000140                     MiApp_NoiseDetection@maxRSSI:
  2738                           	opt stack 0
  2739                           
  2740                           ; 1 bytes @ 0x40
  2741  000140                     	ds	1
  2742  000141                     RouteMessage@SecEn:
  2743                           	opt stack 0
  2744  000141                     MiApp_StartConnection@ScanDuration:
  2745                           	opt stack 0
  2746  000141                     ___ftmul@exp:
  2747                           	opt stack 0
  2748                           
  2749                           ; 1 bytes @ 0x41
  2750  000141                     	ds	1
  2751  000142                     ??_RouteMessage:
  2752  000142                     ___ftmul@f3_as_product:
  2753                           	opt stack 0
  2754  000142                     MiApp_StartConnection@ChannelMap:
  2755                           	opt stack 0
  2756                           
  2757                           ; 4 bytes @ 0x42
  2758  000142                     	ds	1
  2759  000143                     MiMAC_ReceivedPacket@k:
  2760                           	opt stack 0
  2761                           
  2762                           ; 1 bytes @ 0x43
  2763  000143                     	ds	1
  2764  000144                     MiMAC_ReceivedPacket@j:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0x44
  2768  000144                     	ds	1
  2769  000145                     MiMAC_ReceivedPacket@PayloadIndex:
  2770                           	opt stack 0
  2771  000145                     RouteMessage@j:
  2772                           	opt stack 0
  2773  000145                     ___ftmul@cntr:
  2774                           	opt stack 0
  2775                           
  2776                           ; 1 bytes @ 0x45
  2777  000145                     	ds	1
  2778  000146                     ??_MiApp_StartConnection:
  2779  000146                     MiMAC_ReceivedPacket@i:
  2780                           	opt stack 0
  2781  000146                     RouteMessage@parentNode:
  2782                           	opt stack 0
  2783  000146                     ___ftmul@sign:
  2784                           	opt stack 0
  2785                           
  2786                           ; 1 bytes @ 0x46
  2787  000146                     	ds	1
  2788  000147                     ??_send_complete_update:
  2789  000147                     ??_send_periodic_update:
  2790  000147                     RouteMessage@i:
  2791                           	opt stack 0
  2792  000147                     MiApp_StartConnection@Mode:
  2793                           	opt stack 0
  2794                           
  2795                           ; 1 bytes @ 0x47
  2796  000147                     	ds	1
  2797  000148                     MiApp_StartConnection@channel:
  2798                           	opt stack 0
  2799  000148                     UnicastShortAddress@DestAddress:
  2800                           	opt stack 0
  2801  000148                     _send_complete_update$6060:
  2802                           	opt stack 0
  2803  000148                     _send_periodic_update$6064:
  2804                           	opt stack 0
  2805                           
  2806                           ; 3 bytes @ 0x48
  2807  000148                     	ds	1
  2808  000149                     MiApp_StartConnection@RSSIValue:
  2809                           	opt stack 0
  2810                           
  2811                           ; 1 bytes @ 0x49
  2812  000149                     	ds	1
  2813  00014A                     ??_MiWiTasks:
  2814                           
  2815                           ; 0 bytes @ 0x4A
  2816  00014A                     	ds	1
  2817  00014B                     _send_complete_update$6061:
  2818                           	opt stack 0
  2819  00014B                     _send_periodic_update$6065:
  2820                           	opt stack 0
  2821                           
  2822                           ; 3 bytes @ 0x4B
  2823  00014B                     	ds	3
  2824  00014E                     _send_complete_update$6062:
  2825                           	opt stack 0
  2826  00014E                     _send_periodic_update$6066:
  2827                           	opt stack 0
  2828                           
  2829                           ; 3 bytes @ 0x4E
  2830  00014E                     	ds	3
  2831  000151                     _send_complete_update$6063:
  2832                           	opt stack 0
  2833  000151                     _send_periodic_update$6067:
  2834                           	opt stack 0
  2835                           
  2836                           ; 3 bytes @ 0x51
  2837  000151                     	ds	1
  2838  000152                     MiWiTasks@t2:
  2839                           	opt stack 0
  2840                           
  2841                           ; 4 bytes @ 0x52
  2842  000152                     	ds	4
  2843  000156                     MiWiTasks@t1_2546:
  2844                           	opt stack 0
  2845                           
  2846                           ; 4 bytes @ 0x56
  2847  000156                     	ds	4
  2848  00015A                     MiWiTasks@t2_2557:
  2849                           	opt stack 0
  2850                           
  2851                           ; 4 bytes @ 0x5A
  2852  00015A                     	ds	4
  2853  00015E                     MiWiTasks@CoordAddress:
  2854                           	opt stack 0
  2855                           
  2856                           ; 2 bytes @ 0x5E
  2857  00015E                     	ds	2
  2858  000160                     MiWiTasks@mask:
  2859                           	opt stack 0
  2860                           
  2861                           ; 1 bytes @ 0x60
  2862  000160                     	ds	1
  2863  000161                     MiWiTasks@entry_2536:
  2864                           	opt stack 0
  2865                           
  2866                           ; 1 bytes @ 0x61
  2867  000161                     	ds	1
  2868  000162                     MiWiTasks@jitter:
  2869                           	opt stack 0
  2870                           
  2871                           ; 1 bytes @ 0x62
  2872  000162                     	ds	1
  2873  000163                     MiWiTasks@associateStatus:
  2874                           	opt stack 0
  2875                           
  2876                           ; 1 bytes @ 0x63
  2877  000163                     	ds	1
  2878  000164                     MiWiTasks@t1:
  2879                           	opt stack 0
  2880                           
  2881                           ; 4 bytes @ 0x64
  2882  000164                     	ds	4
  2883  000168                     MiWiTasks@coordinatorNumber:
  2884                           	opt stack 0
  2885                           
  2886                           ; 1 bytes @ 0x68
  2887  000168                     	ds	1
  2888  000169                     MiWiTasks@j_2544:
  2889                           	opt stack 0
  2890                           
  2891                           ; 2 bytes @ 0x69
  2892  000169                     	ds	2
  2893  00016B                     MiWiTasks@cIndex:
  2894                           	opt stack 0
  2895                           
  2896                           ; 1 bytes @ 0x6B
  2897  00016B                     	ds	1
  2898  00016C                     MiWiTasks@j_2569:
  2899                           	opt stack 0
  2900                           
  2901                           ; 1 bytes @ 0x6C
  2902  00016C                     	ds	1
  2903  00016D                     MiWiTasks@destPANID:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x6D
  2907  00016D                     	ds	2
  2908  00016F                     MiWiTasks@rxIndex:
  2909                           	opt stack 0
  2910                           
  2911                           ; 1 bytes @ 0x6F
  2912  00016F                     	ds	1
  2913  000170                     MiWiTasks@CapacityByte:
  2914                           	opt stack 0
  2915                           
  2916                           ; 1 bytes @ 0x70
  2917  000170                     	ds	1
  2918  000171                     MiWiTasks@j_2488:
  2919                           	opt stack 0
  2920                           
  2921                           ; 1 bytes @ 0x71
  2922  000171                     	ds	1
  2923  000172                     MiWiTasks@j_2532:
  2924                           	opt stack 0
  2925                           
  2926                           ; 1 bytes @ 0x72
  2927  000172                     	ds	1
  2928  000173                     MiWiTasks@destShortAddress:
  2929                           	opt stack 0
  2930                           
  2931                           ; 2 bytes @ 0x73
  2932  000173                     	ds	2
  2933  000175                     MiWiTasks@sourcePANID:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x75
  2937  000175                     	ds	2
  2938  000177                     MiWiTasks@handle:
  2939                           	opt stack 0
  2940                           
  2941                           ; 1 bytes @ 0x77
  2942  000177                     	ds	1
  2943  000178                     MiWiTasks@sourceShortAddress:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x78
  2947  000178                     	ds	2
  2948  00017A                     MiWiTasks@entry:
  2949                           	opt stack 0
  2950                           
  2951                           ; 1 bytes @ 0x7A
  2952  00017A                     	ds	1
  2953  00017B                     MiWiTasks@j:
  2954                           	opt stack 0
  2955                           
  2956                           ; 1 bytes @ 0x7B
  2957  00017B                     	ds	1
  2958  00017C                     MiWiTasks@i:
  2959                           	opt stack 0
  2960                           
  2961                           ; 1 bytes @ 0x7C
  2962  00017C                     	ds	1
  2963  00017D                     MiApp_UnicastAddress@DestAddress:
  2964                           	opt stack 0
  2965                           
  2966                           ; 2 bytes @ 0x7D
  2967  00017D                     	ds	2
  2968  00017F                     MiApp_UnicastAddress@PermanentAddr:
  2969                           	opt stack 0
  2970                           
  2971                           ; 1 bytes @ 0x7F
  2972  00017F                     	ds	1
  2973  000180                     MiApp_UnicastAddress@SecEn:
  2974                           	opt stack 0
  2975                           
  2976                           ; 1 bytes @ 0x80
  2977  000180                     	ds	1
  2978  000181                     ??_MiApp_UnicastAddress:
  2979                           
  2980                           ; 0 bytes @ 0x81
  2981  000181                     	ds	8
  2982  000189                     ??_main:
  2983                           
  2984                           ; 0 bytes @ 0x89
  2985  000189                     	ds	7
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           postdec1	equ	0xFE5
  2993                           fsr1h	equ	0xFE2
  2994                           fsr1l	equ	0xFE1
  2995                           
  2996                           	psect	cstackBANK0
  2997  0000A3                     __pcstackBANK0:
  2998                           	opt stack 0
  2999  0000A3                     ?i2_MiWi_TickGet:
  3000                           	opt stack 0
  3001  0000A3                     i2SPIPut@i:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x0
  3005  0000A3                     	ds	1
  3006  0000A4                     i2SPIPut@v:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x1
  3010  0000A4                     	ds	1
  3011  0000A5                     i2RegisterRead@value:
  3012                           	opt stack 0
  3013  0000A5                     i2WriteFIFO@Data:
  3014                           	opt stack 0
  3015  0000A5                     i2RegisterSet@setting:
  3016                           	opt stack 0
  3017                           
  3018                           ; 2 bytes @ 0x2
  3019  0000A5                     	ds	1
  3020  0000A6                     i2RegisterRead@IRQ1select:
  3021                           	opt stack 0
  3022  0000A6                     i2WriteFIFO@IRQ1select:
  3023                           	opt stack 0
  3024                           
  3025                           ; 1 bytes @ 0x3
  3026  0000A6                     	ds	1
  3027  0000A7                     ??i2_MiWi_TickGet:
  3028  0000A7                     i2RegisterSet@IRQ1select:
  3029                           	opt stack 0
  3030  0000A7                     i2RegisterRead@IRQ0select:
  3031                           	opt stack 0
  3032  0000A7                     i2WriteFIFO@IRQ0select:
  3033                           	opt stack 0
  3034                           
  3035                           ; 1 bytes @ 0x4
  3036  0000A7                     	ds	1
  3037  0000A8                     i2MiWi_TickGet@failureCounter:
  3038                           	opt stack 0
  3039  0000A8                     i2RegisterSet@IRQ0select:
  3040                           	opt stack 0
  3041  0000A8                     i2RegisterRead@address:
  3042                           	opt stack 0
  3043                           
  3044                           ; 1 bytes @ 0x5
  3045  0000A8                     	ds	1
  3046  0000A9                     i2SetRFMode@mode:
  3047                           	opt stack 0
  3048  0000A9                     i2MiWi_TickGet@currentTime:
  3049                           	opt stack 0
  3050                           
  3051                           ; 4 bytes @ 0x6
  3052  0000A9                     	ds	4
  3053  0000AD                     i2TxPacket@CCA:
  3054                           	opt stack 0
  3055                           
  3056                           ; 1 bytes @ 0xA
  3057  0000AD                     	ds	1
  3058  0000AE                     ??i2_TxPacket:
  3059                           
  3060                           ; 0 bytes @ 0xB
  3061  0000AE                     	ds	8
  3062  0000B6                     i2TxPacket@t1:
  3063                           	opt stack 0
  3064                           
  3065                           ; 4 bytes @ 0x13
  3066  0000B6                     	ds	4
  3067  0000BA                     i2TxPacket@t2:
  3068                           	opt stack 0
  3069                           
  3070                           ; 4 bytes @ 0x17
  3071  0000BA                     	ds	4
  3072  0000BE                     i2TxPacket@status:
  3073                           	opt stack 0
  3074                           
  3075                           ; 1 bytes @ 0x1B
  3076  0000BE                     	ds	1
  3077  0000BF                     i2TxPacket@CCARetries:
  3078                           	opt stack 0
  3079                           
  3080                           ; 1 bytes @ 0x1C
  3081  0000BF                     	ds	1
  3082  0000C0                     i2TxPacket@reTry:
  3083                           	opt stack 0
  3084                           
  3085                           ; 1 bytes @ 0x1D
  3086  0000C0                     	ds	1
  3087  0000C1                     i2TxPacket@allowedTxFailure:
  3088                           	opt stack 0
  3089                           
  3090                           ; 1 bytes @ 0x1E
  3091  0000C1                     	ds	1
  3092  0000C2                     i2TxPacket@TxPacketLen:
  3093                           	opt stack 0
  3094                           
  3095                           ; 1 bytes @ 0x1F
  3096  0000C2                     	ds	1
  3097  0000C3                     i2TxPacket@i:
  3098                           	opt stack 0
  3099                           
  3100                           ; 1 bytes @ 0x20
  3101  0000C3                     	ds	1
  3102  0000C4                     i2TxPacket@rssival:
  3103                           	opt stack 0
  3104                           
  3105                           ; 1 bytes @ 0x21
  3106  0000C4                     	ds	1
  3107  0000C5                     ??_MIWIInterruptHandler:
  3108                           
  3109                           ; 0 bytes @ 0x22
  3110  0000C5                     	ds	6
  3111  0000CB                     MIWIInterruptHandler@counter:
  3112                           	opt stack 0
  3113                           
  3114                           ; 2 bytes @ 0x28
  3115  0000CB                     	ds	2
  3116  0000CD                     MIWIInterruptHandler@fifo_stat:
  3117                           	opt stack 0
  3118                           
  3119                           ; 1 bytes @ 0x2A
  3120  0000CD                     	ds	1
  3121  0000CE                     MIWIInterruptHandler@ackPacket:
  3122                           	opt stack 0
  3123                           
  3124                           ; 4 bytes @ 0x2B
  3125  0000CE                     	ds	4
  3126  0000D2                     MIWIInterruptHandler@bAck:
  3127                           	opt stack 0
  3128                           
  3129                           ; 1 bytes @ 0x2F
  3130  0000D2                     	ds	1
  3131  0000D3                     MIWIInterruptHandler@RxPacketPtr:
  3132                           	opt stack 0
  3133                           
  3134                           ; 1 bytes @ 0x30
  3135  0000D3                     	ds	1
  3136  0000D4                     MIWIInterruptHandler@ackInfoIndex:
  3137                           	opt stack 0
  3138                           
  3139                           ; 1 bytes @ 0x31
  3140  0000D4                     	ds	1
  3141  0000D5                     MIWIInterruptHandler@PacketLen:
  3142                           	opt stack 0
  3143                           
  3144                           ; 1 bytes @ 0x32
  3145  0000D5                     	ds	1
  3146  0000D6                     MIWIInterruptHandler@BankIndex:
  3147                           	opt stack 0
  3148                           
  3149                           ; 1 bytes @ 0x33
  3150  0000D6                     	ds	1
  3151  0000D7                     MIWIInterruptHandler@i:
  3152                           	opt stack 0
  3153                           
  3154                           ; 1 bytes @ 0x34
  3155  0000D7                     	ds	1
  3156  0000D8                     ??_SYS_InterruptHigh:
  3157                           
  3158                           ; 0 bytes @ 0x35
  3159  0000D8                     	ds	14
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           fsr1h	equ	0xFE2
  3168                           fsr1l	equ	0xFE1
  3169                           
  3170                           	psect	cstackCOMRAM
  3171  000001                     __pcstackCOMRAM:
  3172                           	opt stack 0
  3173  000001                     ??_USBStdGetDscHandler:
  3174  000001                     ??_USBStdGetStatusHandler:
  3175  000001                     ?i1_USBTransferOnePacket:
  3176                           	opt stack 0
  3177  000001                     ?i1___ftpack:
  3178                           	opt stack 0
  3179  000001                     USBConfigureEndpoint@direction:
  3180                           	opt stack 0
  3181  000001                     USBCtrlTrfTxService@byteToSend:
  3182                           	opt stack 0
  3183  000001                     USBCtrlTrfRxService@i:
  3184                           	opt stack 0
  3185  000001                     i1USBTransferOnePacket@dir:
  3186                           	opt stack 0
  3187  000001                     i1memset@p1:
  3188                           	opt stack 0
  3189  000001                     i1___ftpack@arg:
  3190                           	opt stack 0
  3191                           
  3192                           ; 3 bytes @ 0x0
  3193  000001                     	ds	1
  3194  000002                     ??_USBConfigureEndpoint:
  3195  000002                     USBCtrlTrfRxService@byteToRead:
  3196                           	opt stack 0
  3197  000002                     USBCtrlTrfInHandler@lastDTS:
  3198                           	opt stack 0
  3199  000002                     USBStdGetStatusHandler@p:
  3200                           	opt stack 0
  3201  000002                     i1USBTransferOnePacket@data:
  3202                           	opt stack 0
  3203                           
  3204                           ; 2 bytes @ 0x1
  3205  000002                     	ds	1
  3206  000003                     i1memset@c:
  3207                           	opt stack 0
  3208                           
  3209                           ; 2 bytes @ 0x2
  3210  000003                     	ds	1
  3211  000004                     i1USBTransferOnePacket@len:
  3212                           	opt stack 0
  3213  000004                     i1___ftpack@exp:
  3214                           	opt stack 0
  3215                           
  3216                           ; 1 bytes @ 0x3
  3217  000004                     	ds	1
  3218  000005                     i1USBTransferOnePacket@ep:
  3219                           	opt stack 0
  3220  000005                     i1___ftpack@sign:
  3221                           	opt stack 0
  3222  000005                     i1memset@n:
  3223                           	opt stack 0
  3224                           
  3225                           ; 2 bytes @ 0x4
  3226  000005                     	ds	1
  3227  000006                     ??i1___ftpack:
  3228  000006                     USBConfigureEndpoint@EPNum:
  3229                           	opt stack 0
  3230  000006                     i1USBTransferOnePacket@handle:
  3231                           	opt stack 0
  3232                           
  3233                           ; 2 bytes @ 0x5
  3234  000006                     	ds	1
  3235  000007                     USBConfigureEndpoint@handle:
  3236                           	opt stack 0
  3237  000007                     i1memset@p:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x6
  3241  000007                     	ds	2
  3242  000009                     ?i1___ftadd:
  3243                           	opt stack 0
  3244  000009                     USBEnableEndpoint@options:
  3245                           	opt stack 0
  3246  000009                     i1USBDeviceInit@i:
  3247                           	opt stack 0
  3248  000009                     i1___ftadd@f1:
  3249                           	opt stack 0
  3250                           
  3251                           ; 3 bytes @ 0x8
  3252  000009                     	ds	1
  3253  00000A                     USBEnableEndpoint@p:
  3254                           	opt stack 0
  3255                           
  3256                           ; 2 bytes @ 0x9
  3257  00000A                     	ds	2
  3258  00000C                     USBEnableEndpoint@ep:
  3259                           	opt stack 0
  3260  00000C                     i1___ftadd@f2:
  3261                           	opt stack 0
  3262                           
  3263                           ; 3 bytes @ 0xB
  3264  00000C                     	ds	1
  3265  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3266                           	opt stack 0
  3267                           
  3268                           ; 2 bytes @ 0xC
  3269  00000D                     	ds	2
  3270  00000F                     ??i1___ftadd:
  3271  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3272                           	opt stack 0
  3273                           
  3274                           ; 2 bytes @ 0xE
  3275  00000F                     	ds	2
  3276  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x10
  3280  000011                     	ds	1
  3281  000012                     i1___ftadd@sign:
  3282                           	opt stack 0
  3283                           
  3284                           ; 1 bytes @ 0x11
  3285  000012                     	ds	1
  3286  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3287  000013                     i1___ftadd@exp2:
  3288                           	opt stack 0
  3289                           
  3290                           ; 1 bytes @ 0x12
  3291  000013                     	ds	1
  3292  000014                     i1___ftadd@exp1:
  3293                           	opt stack 0
  3294                           
  3295                           ; 1 bytes @ 0x13
  3296  000014                     	ds	1
  3297  000015                     ??_USBStdFeatureReqHandler:
  3298  000015                     USBStdSetCfgHandler@i:
  3299                           	opt stack 0
  3300                           
  3301                           ; 1 bytes @ 0x14
  3302  000015                     	ds	1
  3303  000016                     USBStdFeatureReqHandler@pUEP:
  3304                           	opt stack 0
  3305                           
  3306                           ; 2 bytes @ 0x15
  3307  000016                     	ds	2
  3308  000018                     USBStdFeatureReqHandler@current_ep_data:
  3309                           	opt stack 0
  3310                           
  3311                           ; 1 bytes @ 0x17
  3312  000018                     	ds	1
  3313  000019                     USBStdFeatureReqHandler@p:
  3314                           	opt stack 0
  3315                           
  3316                           ; 2 bytes @ 0x18
  3317  000019                     	ds	2
  3318  00001B                     ??_USBCtrlEPService:
  3319  00001B                     
  3320                           ; 0 bytes @ 0x1A
  3321  00001B                     	ds	2
  3322  00001D                     USBCtrlEPService@setup_cnt:
  3323                           	opt stack 0
  3324                           
  3325                           ; 1 bytes @ 0x1C
  3326  00001D                     	ds	1
  3327  00001E                     USBDeviceTasks@i:
  3328                           	opt stack 0
  3329                           
  3330                           ; 1 bytes @ 0x1D
  3331  00001E                     	ds	1
  3332  00001F                     ??_SYS_InterruptLow:
  3333                           
  3334                           ; 0 bytes @ 0x1E
  3335  00001F                     	ds	19
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           postinc0	equ	0xFEE
  3341                           wreg	equ	0xFE8
  3342                           postdec1	equ	0xFE5
  3343                           fsr1h	equ	0xFE2
  3344                           fsr1l	equ	0xFE1
  3345                           
  3346 ;;
  3347 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  3348 ;;
  3349 ;; *************** function _main *****************
  3350 ;; Defined at:
  3351 ;;		line 146 in file "src/main.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  last_update     1   19[BANK3 ] unsigned char 
  3356 ;;  shortaddress    2   29[BANK3 ] unsigned char [2]
  3357 ;;  uid             2    0        unsigned char [2]
  3358 ;;  size            1   28[BANK3 ] unsigned char 
  3359 ;;  rssi            1   25[BANK3 ] unsigned char 
  3360 ;;  power           1   24[BANK3 ] unsigned char 
  3361 ;;  x               2   26[BANK3 ] int 
  3362 ;;  result          1    0        unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;		None               void
  3365 ;; Registers used:
  3366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Totals:         0       0       7       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;Total ram usage:       19 bytes
  3377 ;; Hardware stack levels required when called:   28
  3378 ;; This function calls:
  3379 ;;		_MiApp_ConnectionMode
  3380 ;;		_MiApp_DiscardMessage
  3381 ;;		_MiApp_MessageAvailable
  3382 ;;		_MiApp_NoiseDetection
  3383 ;;		_MiApp_ProtocolInit
  3384 ;;		_MiApp_SetChannel
  3385 ;;		_MiApp_StartConnection
  3386 ;;		_MiApp_UnicastAddress
  3387 ;;		_MiMAC_SetPower
  3388 ;;		_MiWiTasks
  3389 ;;		_SYSTEM_Initialize
  3390 ;;		_USBDeviceAttach
  3391 ;;		_USBDeviceInit
  3392 ;;		_USBTransferOnePacket
  3393 ;;		_dBm_to_mW
  3394 ;;		_decode_variable
  3395 ;;		_memcpy
  3396 ;;		_sendHIDBinary
  3397 ;;		_sendHIDText
  3398 ;;		_send_answer_to_update
  3399 ;;		_send_complete_update
  3400 ;;		_send_network_register
  3401 ;;		_send_periodic_update
  3402 ;;		_sprintf
  3403 ;;		_strcpy
  3404 ;;		_timer_reset
  3405 ;;		_update_LED
  3406 ;;		_update_variable
  3407 ;; This function is called by:
  3408 ;;		Startup code after reset
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text0
  3413  003D4A                     __ptext0:
  3414                           	opt stack 0
  3415  003D4A                     _main:
  3416                           	opt stack 3
  3417                           
  3418                           ;main.c: 148: SYSTEM_Initialize();
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;incstack = 0
  3422  003D4A  EC0F  F043         	call	_SYSTEM_Initialize	;wreg free
  3423                           
  3424                           ;main.c: 153: myAppState = STATE_INIT;
  3425  003D4E  0E00               	movlw	0
  3426  003D50  6E52               	movwf	_myAppState,c
  3427                           
  3428                           ;main.c: 155: bool result;
  3429                           ;main.c: 157: myLongAddress[0] = myMUTA_version;
  3430  003D52  0EF2               	movlw	242
  3431  003D54  6EF6               	movwf	tblptrl,c
  3432  003D56                     	if	1	;There is more than 1 active tblptr byte
  3433  003D56  0EFF               	movlw	255
  3434  003D58  6EF7               	movwf	tblptrh,c
  3435  003D5A                     	endif
  3436  003D5A                     	if	1	;There are 3 active tblptr bytes
  3437  003D5A  0E01               	movlw	1
  3438  003D5C  6EF8               	movwf	tblptru,c
  3439  003D5E                     	endif
  3440  003D5E  0008               	tblrd		*
  3441  003D60  CFF5 F1E8          	movff	tablat,_myLongAddress
  3442                           
  3443                           ;main.c: 158: myLongAddress[1] = myMODEL;
  3444  003D64  0EF4               	movlw	244
  3445  003D66  6EF6               	movwf	tblptrl,c
  3446  003D68                     	if	1	;There is more than 1 active tblptr byte
  3447  003D68  0EFF               	movlw	255
  3448  003D6A  6EF7               	movwf	tblptrh,c
  3449  003D6C                     	endif
  3450  003D6C                     	if	1	;There are 3 active tblptr bytes
  3451  003D6C  0E01               	movlw	1
  3452  003D6E  6EF8               	movwf	tblptru,c
  3453  003D70                     	endif
  3454  003D70  0008               	tblrd		*
  3455  003D72  CFF5 F1E9          	movff	tablat,_myLongAddress+1
  3456                           
  3457                           ;main.c: 159: myLongAddress[2] = myUID[0];
  3458  003D76  0EF6               	movlw	246
  3459  003D78  6EF6               	movwf	tblptrl,c
  3460  003D7A                     	if	1	;There is more than 1 active tblptr byte
  3461  003D7A  0EFF               	movlw	255
  3462  003D7C  6EF7               	movwf	tblptrh,c
  3463  003D7E                     	endif
  3464  003D7E                     	if	1	;There are 3 active tblptr bytes
  3465  003D7E  0E01               	movlw	1
  3466  003D80  6EF8               	movwf	tblptru,c
  3467  003D82                     	endif
  3468  003D82  0008               	tblrd		*
  3469  003D84  CFF5 F1EA          	movff	tablat,_myLongAddress+2
  3470                           
  3471                           ;main.c: 160: myLongAddress[3] = myUID[1];
  3472  003D88  0EF7               	movlw	247
  3473  003D8A  6EF6               	movwf	tblptrl,c
  3474  003D8C  0EFF               	movlw	255
  3475  003D8E  6EF7               	movwf	tblptrh,c
  3476  003D90  0E01               	movlw	1
  3477  003D92  6EF8               	movwf	tblptru,c
  3478  003D94  0008               	tblrd		*
  3479  003D96  CFF5 F1EB          	movff	tablat,_myLongAddress+3
  3480                           
  3481                           ;main.c: 163: for (int x=0; x<8; x++)
  3482  003D9A  0E00               	movlw	0
  3483  003D9C  0103               	movlb	3	; () banked
  3484  003D9E  6FDF               	movwf	(main@x+1)& (0+255),b
  3485  003DA0  0E00               	movlw	0
  3486  003DA2  6FDE               	movwf	main@x& (0+255),b
  3487  003DA4                     l21612:
  3488                           
  3489                           ; BSR set to: 3
  3490  003DA4  0103               	movlb	3	; () banked
  3491  003DA6  BFDF               	btfsc	(main@x+1)& (0+255),7,b
  3492  003DA8  D008               	goto	l21616
  3493  003DAA  0103               	movlb	3	; () banked
  3494  003DAC  51DF               	movf	(main@x+1)& (0+255),w,b
  3495  003DAE  E11E               	bnz	l21622
  3496  003DB0  0E08               	movlw	8
  3497  003DB2  0103               	movlb	3	; () banked
  3498  003DB4  5DDE               	subwf	main@x& (0+255),w,b
  3499  003DB6  B0D8               	btfsc	status,0,c
  3500  003DB8  D019               	goto	l21622
  3501  003DBA                     l21616:
  3502                           
  3503                           ; BSR set to: 3
  3504                           ;main.c: 164: mySecurityKey[x] = StaticSecurityKey[x];
  3505  003DBA  0EEC               	movlw	236
  3506  003DBC  0103               	movlb	3	; () banked
  3507  003DBE  25DE               	addwf	main@x& (0+255),w,b
  3508  003DC0  6EF6               	movwf	tblptrl,c
  3509  003DC2  0E1F               	movlw	31
  3510  003DC4  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3511  003DC6  6EF7               	movwf	tblptrh,c
  3512  003DC8  6AF8               	clrf	tblptru,c
  3513  003DCA  0E00               	movlw	0
  3514  003DCC  22F8               	addwfc	tblptru,f,c
  3515  003DCE  0E79               	movlw	low _mySecurityKey
  3516  003DD0  0103               	movlb	3	; () banked
  3517  003DD2  25DE               	addwf	main@x& (0+255),w,b
  3518  003DD4  6ED9               	movwf	fsr2l,c
  3519  003DD6  0E00               	movlw	high _mySecurityKey
  3520  003DD8  0103               	movlb	3	; () banked
  3521  003DDA  21DF               	addwfc	(main@x+1)& (0+255),w,b
  3522  003DDC  6EDA               	movwf	fsr2h,c
  3523  003DDE  0008               	tblrd		*
  3524  003DE0  CFF5 FFDF          	movff	tablat,indf2
  3525                           
  3526                           ; BSR set to: 3
  3527  003DE4  0103               	movlb	3	; () banked
  3528  003DE6  4BDE               	infsnz	main@x& (0+255),f,b
  3529  003DE8  2BDF               	incf	(main@x+1)& (0+255),f,b
  3530  003DEA  D7DC               	goto	l21612
  3531  003DEC                     l21622:
  3532                           
  3533                           ; BSR set to: 3
  3534                           ;main.c: 171: status_led = LED_FAST_PULSE;
  3535  003DEC  0E01               	movlw	1
  3536  003DEE  6E55               	movwf	_status_led,c	;volatile
  3537                           
  3538                           ; BSR set to: 3
  3539                           ;main.c: 172: update_LED();
  3540  003DF0  ECC2  F059         	call	_update_LED	;wreg free
  3541                           
  3542                           ;main.c: 175: USBDeviceInit();
  3543  003DF4  ECD6  F03D         	call	_USBDeviceInit	;wreg free
  3544                           
  3545                           ;main.c: 179: USBDeviceAttach();
  3546  003DF8  EC47  F05C         	call	_USBDeviceAttach	;wreg free
  3547  003DFC                     l21630:
  3548                           
  3549                           ;main.c: 181: {
  3550                           ;main.c: 185: if( USBDeviceState < CONFIGURED_STATE )
  3551  003DFC  0E20               	movlw	32
  3552  003DFE  604B               	cpfslt	_USBDeviceState,c	;volatile
  3553  003E00  D001               	goto	l1735
  3554  003E02  D7FC               	goto	l21630
  3555  003E04                     l1735:
  3556                           
  3557                           ;main.c: 187: if( UCONbits.SUSPND == 1 )
  3558  003E04  B265               	btfsc	3941,1,c	;volatile
  3559  003E06  D7FA               	goto	l21630
  3560                           
  3561                           ;main.c: 189: myAppState = STATE_USB_READY;
  3562                           
  3563                           ;main.c: 188: continue;
  3564  003E08  0E01               	movlw	1
  3565  003E0A  6E52               	movwf	_myAppState,c
  3566                           
  3567                           ;main.c: 191: }
  3568                           ;main.c: 193: strcpy(ToSendDataBuffer, "I|RESET");
  3569                           
  3570                           ;main.c: 190: break;
  3571  003E0C  0E84               	movlw	low _ToSendDataBuffer
  3572  003E0E  0101               	movlb	1	; () banked
  3573  003E10  6F00               	movwf	strcpy@to& (0+255),b
  3574  003E12  0E03               	movlw	high _ToSendDataBuffer
  3575  003E14  0101               	movlb	1	; () banked
  3576  003E16  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3577  003E18  0EB5               	movlw	low STR_1
  3578  003E1A  0101               	movlb	1	; () banked
  3579  003E1C  6F02               	movwf	strcpy@from& (0+255),b
  3580  003E1E  0E23               	movlw	high STR_1
  3581  003E20  0101               	movlb	1	; () banked
  3582  003E22  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3583  003E24  EC64  F05C         	call	_strcpy	;wreg free
  3584                           
  3585                           ;main.c: 194: sendHIDText(ToSendDataBuffer);
  3586  003E28  0E84               	movlw	low _ToSendDataBuffer
  3587  003E2A  0101               	movlb	1	; () banked
  3588  003E2C  6F07               	movwf	sendHIDText@str& (0+255),b
  3589  003E2E  0E03               	movlw	high _ToSendDataBuffer
  3590  003E30  0101               	movlb	1	; () banked
  3591  003E32  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3592  003E34  EC76  F04F         	call	_sendHIDText	;wreg free
  3593                           
  3594                           ;main.c: 195: _delay((unsigned long)((20)*(16000000/4000.0)));
  3595  003E38  0E68               	movlw	104
  3596  003E3A  0101               	movlb	1	; () banked
  3597  003E3C  6F89               	movwf	??_main& (0+255),b
  3598  003E3E  0EE4               	movlw	228
  3599  003E40                     u25157:
  3600  003E40  2EE8               	decfsz	wreg,f,c
  3601  003E42  D7FE               	goto	u25157
  3602  003E44  2F89               	decfsz	??_main& (0+255),f,b
  3603  003E46  D7FC               	goto	u25157
  3604  003E48  D000               	nop2	
  3605                           
  3606                           ;main.c: 199: send_network_register();
  3607  003E4A  EC85  F053         	call	_send_network_register	;wreg free
  3608  003E4E                     l21646:
  3609                           
  3610                           ;main.c: 201: {
  3611                           ;main.c: 203: if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN) == 0
      +                          )
  3612  003E4E  0101               	movlb	1	; () banked
  3613  003E50  51B7               	movf	_USBOutHandle& (0+255),w,b
  3614  003E52  0101               	movlb	1	; () banked
  3615  003E54  11B8               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  3616  003E56  B4D8               	btfsc	status,2,c
  3617  003E58  D013               	goto	l21650
  3618                           
  3619                           ; BSR set to: 1
  3620  003E5A  C1B7  FFD9         	movff	_USBOutHandle,fsr2l
  3621  003E5E  C1B8  FFDA         	movff	_USBOutHandle+1,fsr2h
  3622  003E62  0101               	movlb	1	; () banked
  3623  003E64  AEDF               	btfss	indf2,7,c
  3624  003E66  D004               	goto	u24620
  3625  003E68  0101               	movlb	1	; () banked
  3626  003E6A  6B89               	clrf	??_main& (0+255),b
  3627  003E6C  2B89               	incf	??_main& (0+255),f,b
  3628  003E6E  D002               	goto	u24628
  3629  003E70                     u24620:
  3630  003E70  0101               	movlb	1	; () banked
  3631  003E72  6B89               	clrf	??_main& (0+255),b
  3632  003E74                     u24628:
  3633  003E74  0101               	movlb	1	; () banked
  3634  003E76  5189               	movf	??_main& (0+255),w,b
  3635  003E78  0103               	movlb	3	; () banked
  3636  003E7A  6FD8               	movwf	_main$4898& (0+255),b
  3637  003E7C  6BD9               	clrf	(_main$4898+1)& (0+255),b
  3638  003E7E  D005               	goto	l21652
  3639  003E80                     l21650:
  3640  003E80  0E00               	movlw	0
  3641  003E82  0103               	movlb	3	; () banked
  3642  003E84  6FD9               	movwf	(_main$4898+1)& (0+255),b
  3643  003E86  0E00               	movlw	0
  3644  003E88  6FD8               	movwf	_main$4898& (0+255),b
  3645  003E8A                     l21652:
  3646                           
  3647                           ; BSR set to: 3
  3648  003E8A  0103               	movlb	3	; () banked
  3649  003E8C  51D8               	movf	_main$4898& (0+255),w,b
  3650  003E8E  0103               	movlb	3	; () banked
  3651  003E90  11D9               	iorwf	(_main$4898+1)& (0+255),w,b
  3652  003E92  B4D8               	btfsc	status,2,c
  3653  003E94  D01E               	goto	l21668
  3654  003E96  D7DB               	goto	l21646
  3655  003E98                     l21656:
  3656                           
  3657                           ;main.c: 208: if (ReceivedDataBuffer[1] != 0x00 || ReceivedDataBuffer[2] != 0x00 || Rece
      +                          ivedDataBuffer[3] != 4 ||ReceivedDataBuffer[4] != 02 || ReceivedDataBuffer[5] != 0xff)
  3658  003E98  0104               	movlb	4	; () banked
  3659  003E9A  5101               	movf	(_ReceivedDataBuffer+1)& (0+255),w,b
  3660  003E9C  A4D8               	btfss	status,2,c
  3661  003E9E  D011               	goto	l1749
  3662                           
  3663                           ; BSR set to: 4
  3664  003EA0  0104               	movlb	4	; () banked
  3665  003EA2  5102               	movf	(_ReceivedDataBuffer+2)& (0+255),w,b
  3666  003EA4  A4D8               	btfss	status,2,c
  3667  003EA6  D00D               	goto	l1749
  3668                           
  3669                           ; BSR set to: 4
  3670  003EA8  0E04               	movlw	4
  3671  003EAA  0104               	movlb	4	; () banked
  3672  003EAC  1903               	xorwf	(_ReceivedDataBuffer+3)& (0+255),w,b
  3673  003EAE  A4D8               	btfss	status,2,c
  3674  003EB0  D008               	goto	l1749
  3675                           
  3676                           ; BSR set to: 4
  3677  003EB2  0E02               	movlw	2
  3678  003EB4  0104               	movlb	4	; () banked
  3679  003EB6  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  3680  003EB8  A4D8               	btfss	status,2,c
  3681  003EBA  D003               	goto	l1749
  3682                           
  3683                           ; BSR set to: 4
  3684  003EBC  0104               	movlb	4	; () banked
  3685  003EBE  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  3686  003EC0  A4D8               	btfss	status,2,c
  3687  003EC2                     l1749:
  3688                           
  3689                           ; BSR set to: 4
  3690  003EC2  00FF               	reset		;# 
  3691                           
  3692                           ;main.c: 213: }
  3693                           ;main.c: 214: mySecurityKey[2] = ReceivedDataBuffer[6];
  3694  003EC4  C406  F07B         	movff	_ReceivedDataBuffer+6,_mySecurityKey+2
  3695                           
  3696                           ;main.c: 215: mySecurityKey[6] = ReceivedDataBuffer[7];
  3697  003EC8  C407  F07F         	movff	_ReceivedDataBuffer+7,_mySecurityKey+6
  3698                           
  3699                           ;main.c: 216: break;
  3700  003ECC  D00A               	goto	l21670
  3701  003ECE                     l1751:
  3702                           
  3703                           ; BSR set to: 4
  3704  003ECE  00FF               	reset		;# 
  3705                           
  3706                           ;main.c: 223: }
  3707                           
  3708                           ;main.c: 222: break;
  3709                           
  3710                           ;main.c: 220: default:
  3711                           
  3712                           ;main.c: 219: break;
  3713  003ED0  D008               	goto	l21670
  3714  003ED2                     l21668:
  3715  003ED2  0104               	movlb	4	; () banked
  3716  003ED4  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  3717                           
  3718                           ; Switch size 1, requested type "space"
  3719                           ; Number of cases is 2, Range of values is 83 to 88
  3720                           ; switch strategies available:
  3721                           ; Name         Instructions Cycles
  3722                           ; simple_byte            7     4 (average)
  3723                           ;	Chosen strategy is simple_byte
  3724  003ED6  0A53               	xorlw	83	; case 83
  3725  003ED8  B4D8               	btfsc	status,2,c
  3726  003EDA  D7DE               	goto	l21656
  3727  003EDC  0A0B               	xorlw	11	; case 88
  3728  003EDE  B4D8               	btfsc	status,2,c
  3729  003EE0  D7F6               	goto	l1751
  3730  003EE2                     l21670:
  3731                           
  3732                           ;main.c: 225: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  3733  003EE2  0E00               	movlw	0
  3734  003EE4  0101               	movlb	1	; () banked
  3735  003EE6  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  3736  003EE8  0E00               	movlw	low _ReceivedDataBuffer
  3737  003EEA  0101               	movlb	1	; () banked
  3738  003EEC  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  3739  003EEE  0E04               	movlw	high _ReceivedDataBuffer
  3740  003EF0  0101               	movlb	1	; () banked
  3741  003EF2  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  3742  003EF4  0E40               	movlw	64
  3743  003EF6  0101               	movlb	1	; () banked
  3744  003EF8  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  3745  003EFA  0E01               	movlw	1
  3746  003EFC  ECA1  F04C         	call	_USBTransferOnePacket
  3747  003F00  C100  F1B7         	movff	?_USBTransferOnePacket,_USBOutHandle
  3748  003F04  C101  F1B8         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  3749                           
  3750                           ;main.c: 227: }
  3751                           ;main.c: 228: }
  3752                           ;main.c: 232: MiApp_ProtocolInit(0);
  3753                           
  3754                           ;main.c: 226: break;
  3755  003F08  0E00               	movlw	0
  3756  003F0A  EC0E  F03D         	call	_MiApp_ProtocolInit
  3757                           
  3758                           ;main.c: 233: m_power = 0x00;
  3759  003F0E  0E00               	movlw	0
  3760  003F10  0101               	movlb	1	; () banked
  3761  003F12  6FC8               	movwf	_m_power& (0+255),b
  3762                           
  3763                           ; BSR set to: 1
  3764                           ;main.c: 234: MiMAC_SetPower(m_power);
  3765  003F14  0101               	movlb	1	; () banked
  3766  003F16  51C8               	movf	_m_power& (0+255),w,b
  3767  003F18  EC2A  F05C         	call	_MiMAC_SetPower
  3768                           
  3769                           ;main.c: 237: strcpy(ToSendDataBuffer, "I|scanning channels for noise...");
  3770  003F1C  0E84               	movlw	low _ToSendDataBuffer
  3771  003F1E  0101               	movlb	1	; () banked
  3772  003F20  6F00               	movwf	strcpy@to& (0+255),b
  3773  003F22  0E03               	movlw	high _ToSendDataBuffer
  3774  003F24  0101               	movlb	1	; () banked
  3775  003F26  6F01               	movwf	(strcpy@to+1)& (0+255),b
  3776  003F28  0E04               	movlw	low STR_2
  3777  003F2A  0101               	movlb	1	; () banked
  3778  003F2C  6F02               	movwf	strcpy@from& (0+255),b
  3779  003F2E  0E23               	movlw	high STR_2
  3780  003F30  0101               	movlb	1	; () banked
  3781  003F32  6F03               	movwf	(strcpy@from+1)& (0+255),b
  3782  003F34  EC64  F05C         	call	_strcpy	;wreg free
  3783                           
  3784                           ;main.c: 238: sendHIDText(ToSendDataBuffer);
  3785  003F38  0E84               	movlw	low _ToSendDataBuffer
  3786  003F3A  0101               	movlb	1	; () banked
  3787  003F3C  6F07               	movwf	sendHIDText@str& (0+255),b
  3788  003F3E  0E03               	movlw	high _ToSendDataBuffer
  3789  003F40  0101               	movlb	1	; () banked
  3790  003F42  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3791  003F44  EC76  F04F         	call	_sendHIDText	;wreg free
  3792                           
  3793                           ;main.c: 239: _delay((unsigned long)((20)*(16000000/4000.0)));
  3794  003F48  0E68               	movlw	104
  3795  003F4A  0101               	movlb	1	; () banked
  3796  003F4C  6F89               	movwf	??_main& (0+255),b
  3797  003F4E  0EE4               	movlw	228
  3798  003F50                     u25167:
  3799  003F50  2EE8               	decfsz	wreg,f,c
  3800  003F52  D7FE               	goto	u25167
  3801  003F54  2F89               	decfsz	??_main& (0+255),f,b
  3802  003F56  D7FC               	goto	u25167
  3803  003F58  D000               	nop2	
  3804                           
  3805                           ;main.c: 242: BestChannel = MiApp_NoiseDetection(0x00000100, 14, 0x00, &noise_level);
  3806  003F5A  0E00               	movlw	0
  3807  003F5C  0101               	movlb	1	; () banked
  3808  003F5E  6F1D               	movwf	MiApp_NoiseDetection@ChannelMap& (0+255),b
  3809  003F60  0E01               	movlw	1
  3810  003F62  6F1E               	movwf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),b
  3811  003F64  0E00               	movlw	0
  3812  003F66  6F1F               	movwf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),b
  3813  003F68  0E00               	movlw	0
  3814  003F6A  6F20               	movwf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),b
  3815  003F6C  0E0E               	movlw	14
  3816  003F6E  0101               	movlb	1	; () banked
  3817  003F70  6F21               	movwf	MiApp_NoiseDetection@ScanDuration& (0+255),b
  3818  003F72  0E00               	movlw	0
  3819  003F74  0101               	movlb	1	; () banked
  3820  003F76  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
  3821  003F78  0EF7               	movlw	low _noise_level
  3822  003F7A  0101               	movlb	1	; () banked
  3823  003F7C  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
  3824  003F7E  0E01               	movlw	high _noise_level
  3825  003F80  0101               	movlb	1	; () banked
  3826  003F82  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
  3827  003F84  ECD9  F037         	call	_MiApp_NoiseDetection	;wreg free
  3828  003F88  0101               	movlb	1	; () banked
  3829  003F8A  6FBE               	movwf	_BestChannel& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 244: sprintf(ToSendDataBuffer, "I|best channel: %i (noise == %i)", BestChannel,
      +                           noise_level);
  3833  003F8C  0E84               	movlw	low _ToSendDataBuffer
  3834  003F8E  0101               	movlb	1	; () banked
  3835  003F90  6F0C               	movwf	sprintf@sp& (0+255),b
  3836  003F92  0E03               	movlw	high _ToSendDataBuffer
  3837  003F94  0101               	movlb	1	; () banked
  3838  003F96  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3839  003F98  0EE3               	movlw	low STR_3
  3840  003F9A  0101               	movlb	1	; () banked
  3841  003F9C  6F0E               	movwf	sprintf@f& (0+255),b
  3842  003F9E  0E22               	movlw	high STR_3
  3843  003FA0  0101               	movlb	1	; () banked
  3844  003FA2  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3845  003FA4  C1BE  F110         	movff	_BestChannel,?_sprintf+4
  3846  003FA8  0101               	movlb	1	; () banked
  3847  003FAA  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3848  003FAC  C1F7  F112         	movff	_noise_level,?_sprintf+6
  3849  003FB0  0101               	movlb	1	; () banked
  3850  003FB2  6B13               	clrf	(?_sprintf+7)& (0+255),b
  3851  003FB4  ECDC  F029         	call	_sprintf	;wreg free
  3852                           
  3853                           ;main.c: 245: sendHIDText(ToSendDataBuffer);
  3854  003FB8  0E84               	movlw	low _ToSendDataBuffer
  3855  003FBA  0101               	movlb	1	; () banked
  3856  003FBC  6F07               	movwf	sendHIDText@str& (0+255),b
  3857  003FBE  0E03               	movlw	high _ToSendDataBuffer
  3858  003FC0  0101               	movlb	1	; () banked
  3859  003FC2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3860  003FC4  EC76  F04F         	call	_sendHIDText	;wreg free
  3861                           
  3862                           ;main.c: 246: _delay((unsigned long)((20)*(16000000/4000.0)));
  3863  003FC8  0E68               	movlw	104
  3864  003FCA  0101               	movlb	1	; () banked
  3865  003FCC  6F89               	movwf	??_main& (0+255),b
  3866  003FCE  0EE4               	movlw	228
  3867  003FD0                     u25177:
  3868  003FD0  2EE8               	decfsz	wreg,f,c
  3869  003FD2  D7FE               	goto	u25177
  3870  003FD4  2F89               	decfsz	??_main& (0+255),f,b
  3871  003FD6  D7FC               	goto	u25177
  3872  003FD8  D000               	nop2	
  3873                           
  3874                           ;main.c: 248: if( MiApp_SetChannel(BestChannel) == 0 )
  3875  003FDA  0101               	movlb	1	; () banked
  3876  003FDC  51BE               	movf	_BestChannel& (0+255),w,b
  3877  003FDE  EC68  F05D         	call	_MiApp_SetChannel
  3878  003FE2  0900               	iorlw	0
  3879  003FE4  A4D8               	btfss	status,2,c
  3880  003FE6  D025               	goto	l21702
  3881                           
  3882                           ;main.c: 249: {
  3883                           ;main.c: 250: sprintf(ToSendDataBuffer, "I|Error: unable to set channel %i! (T_T)", Best
      +                          Channel);
  3884  003FE8  0E84               	movlw	low _ToSendDataBuffer
  3885  003FEA  0101               	movlb	1	; () banked
  3886  003FEC  6F0C               	movwf	sprintf@sp& (0+255),b
  3887  003FEE  0E03               	movlw	high _ToSendDataBuffer
  3888  003FF0  0101               	movlb	1	; () banked
  3889  003FF2  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3890  003FF4  0E6C               	movlw	low STR_4
  3891  003FF6  0101               	movlb	1	; () banked
  3892  003FF8  6F0E               	movwf	sprintf@f& (0+255),b
  3893  003FFA  0E22               	movlw	high STR_4
  3894  003FFC  0101               	movlb	1	; () banked
  3895  003FFE  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3896  004000  C1BE  F110         	movff	_BestChannel,?_sprintf+4
  3897  004004  0101               	movlb	1	; () banked
  3898  004006  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3899  004008  ECDC  F029         	call	_sprintf	;wreg free
  3900                           
  3901                           ;main.c: 251: sendHIDText(ToSendDataBuffer);
  3902  00400C  0E84               	movlw	low _ToSendDataBuffer
  3903  00400E  0101               	movlb	1	; () banked
  3904  004010  6F07               	movwf	sendHIDText@str& (0+255),b
  3905  004012  0E03               	movlw	high _ToSendDataBuffer
  3906  004014  0101               	movlb	1	; () banked
  3907  004016  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3908  004018  EC76  F04F         	call	_sendHIDText	;wreg free
  3909                           
  3910                           ;main.c: 252: _delay((unsigned long)((20)*(16000000/4000.0)));
  3911  00401C  0E68               	movlw	104
  3912  00401E  0101               	movlb	1	; () banked
  3913  004020  6F89               	movwf	??_main& (0+255),b
  3914  004022  0EE4               	movlw	228
  3915  004024                     u25187:
  3916  004024  2EE8               	decfsz	wreg,f,c
  3917  004026  D7FE               	goto	u25187
  3918  004028  2F89               	decfsz	??_main& (0+255),f,b
  3919  00402A  D7FC               	goto	u25187
  3920  00402C  D000               	nop2	
  3921                           
  3922                           ;main.c: 253: return;
  3923  00402E  EFF2  F000         	goto	start
  3924  004032                     l21702:
  3925                           
  3926                           ;main.c: 254: }
  3927                           ;main.c: 256: sprintf(ToSendDataBuffer, "I|creating network...");
  3928  004032  0E84               	movlw	low _ToSendDataBuffer
  3929  004034  0101               	movlb	1	; () banked
  3930  004036  6F0C               	movwf	sprintf@sp& (0+255),b
  3931  004038  0E03               	movlw	high _ToSendDataBuffer
  3932  00403A  0101               	movlb	1	; () banked
  3933  00403C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3934  00403E  0E7D               	movlw	low STR_5
  3935  004040  0101               	movlb	1	; () banked
  3936  004042  6F0E               	movwf	sprintf@f& (0+255),b
  3937  004044  0E23               	movlw	high STR_5
  3938  004046  0101               	movlb	1	; () banked
  3939  004048  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3940  00404A  ECDC  F029         	call	_sprintf	;wreg free
  3941                           
  3942                           ;main.c: 257: sendHIDText(ToSendDataBuffer);
  3943  00404E  0E84               	movlw	low _ToSendDataBuffer
  3944  004050  0101               	movlb	1	; () banked
  3945  004052  6F07               	movwf	sendHIDText@str& (0+255),b
  3946  004054  0E03               	movlw	high _ToSendDataBuffer
  3947  004056  0101               	movlb	1	; () banked
  3948  004058  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  3949  00405A  EC76  F04F         	call	_sendHIDText	;wreg free
  3950                           
  3951                           ;main.c: 258: _delay((unsigned long)((20)*(16000000/4000.0)));
  3952  00405E  0E68               	movlw	104
  3953  004060  0101               	movlb	1	; () banked
  3954  004062  6F89               	movwf	??_main& (0+255),b
  3955  004064  0EE4               	movlw	228
  3956  004066                     u25197:
  3957  004066  2EE8               	decfsz	wreg,f,c
  3958  004068  D7FE               	goto	u25197
  3959  00406A  2F89               	decfsz	??_main& (0+255),f,b
  3960  00406C  D7FC               	goto	u25197
  3961  00406E  D000               	nop2	
  3962                           
  3963                           ;main.c: 260: MiApp_StartConnection(0x00, 0, 0);
  3964  004070  0E00               	movlw	0
  3965  004072  0101               	movlb	1	; () banked
  3966  004074  6F41               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  3967  004076  0E00               	movlw	0
  3968  004078  0101               	movlb	1	; () banked
  3969  00407A  6F42               	movwf	MiApp_StartConnection@ChannelMap& (0+255),b
  3970  00407C  0E00               	movlw	0
  3971  00407E  6F43               	movwf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  3972  004080  0E00               	movlw	0
  3973  004082  6F44               	movwf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  3974  004084  0E00               	movlw	0
  3975  004086  6F45               	movwf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  3976  004088  0E00               	movlw	0
  3977  00408A  EC45  F048         	call	_MiApp_StartConnection
  3978                           
  3979                           ;main.c: 261: MiApp_ConnectionMode(0x03);
  3980  00408E  0E03               	movlw	3
  3981  004090  EC00  F05D         	call	_MiApp_ConnectionMode
  3982                           
  3983                           ;main.c: 263: sprintf(ToSendDataBuffer, "I|PANID:%02x%02x Ch:%02d",myPANID.v[1],myPANID.
      +                          v[0],BestChannel);
  3984  004094  0E84               	movlw	low _ToSendDataBuffer
  3985  004096  0101               	movlb	1	; () banked
  3986  004098  6F0C               	movwf	sprintf@sp& (0+255),b
  3987  00409A  0E03               	movlw	high _ToSendDataBuffer
  3988  00409C  0101               	movlb	1	; () banked
  3989  00409E  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  3990  0040A0  0E64               	movlw	low STR_6
  3991  0040A2  0101               	movlb	1	; () banked
  3992  0040A4  6F0E               	movwf	sprintf@f& (0+255),b
  3993  0040A6  0E23               	movlw	high STR_6
  3994  0040A8  0101               	movlb	1	; () banked
  3995  0040AA  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  3996  0040AC  C1F1  F110         	movff	_myPANID+1,?_sprintf+4
  3997  0040B0  0101               	movlb	1	; () banked
  3998  0040B2  6B11               	clrf	(?_sprintf+5)& (0+255),b
  3999  0040B4  C1F0  F112         	movff	_myPANID,?_sprintf+6
  4000  0040B8  0101               	movlb	1	; () banked
  4001  0040BA  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4002  0040BC  C1BE  F114         	movff	_BestChannel,?_sprintf+8
  4003  0040C0  0101               	movlb	1	; () banked
  4004  0040C2  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4005  0040C4  ECDC  F029         	call	_sprintf	;wreg free
  4006                           
  4007                           ;main.c: 264: sendHIDText(ToSendDataBuffer);
  4008  0040C8  0E84               	movlw	low _ToSendDataBuffer
  4009  0040CA  0101               	movlb	1	; () banked
  4010  0040CC  6F07               	movwf	sendHIDText@str& (0+255),b
  4011  0040CE  0E03               	movlw	high _ToSendDataBuffer
  4012  0040D0  0101               	movlb	1	; () banked
  4013  0040D2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4014  0040D4  EC76  F04F         	call	_sendHIDText	;wreg free
  4015                           
  4016                           ;main.c: 265: _delay((unsigned long)((20)*(16000000/4000.0)));
  4017  0040D8  0E68               	movlw	104
  4018  0040DA  0101               	movlb	1	; () banked
  4019  0040DC  6F89               	movwf	??_main& (0+255),b
  4020  0040DE  0EE4               	movlw	228
  4021  0040E0                     u25207:
  4022  0040E0  2EE8               	decfsz	wreg,f,c
  4023  0040E2  D7FE               	goto	u25207
  4024  0040E4  2F89               	decfsz	??_main& (0+255),f,b
  4025  0040E6  D7FC               	goto	u25207
  4026  0040E8  D000               	nop2	
  4027                           
  4028                           ;main.c: 267: sprintf(ToSendDataBuffer, "I|operator's address: %02x%02x", myShortAddress
      +                          .v[1], myShortAddress.v[0]);
  4029  0040EA  0E84               	movlw	low _ToSendDataBuffer
  4030  0040EC  0101               	movlb	1	; () banked
  4031  0040EE  6F0C               	movwf	sprintf@sp& (0+255),b
  4032  0040F0  0E03               	movlw	high _ToSendDataBuffer
  4033  0040F2  0101               	movlb	1	; () banked
  4034  0040F4  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4035  0040F6  0E45               	movlw	low STR_7
  4036  0040F8  0101               	movlb	1	; () banked
  4037  0040FA  6F0E               	movwf	sprintf@f& (0+255),b
  4038  0040FC  0E23               	movlw	high STR_7
  4039  0040FE  0101               	movlb	1	; () banked
  4040  004100  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4041  004102  C1F3  F110         	movff	_myShortAddress+1,?_sprintf+4
  4042  004106  0101               	movlb	1	; () banked
  4043  004108  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4044  00410A  C1F2  F112         	movff	_myShortAddress,?_sprintf+6
  4045  00410E  0101               	movlb	1	; () banked
  4046  004110  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4047  004112  ECDC  F029         	call	_sprintf	;wreg free
  4048                           
  4049                           ;main.c: 268: sendHIDText(ToSendDataBuffer);
  4050  004116  0E84               	movlw	low _ToSendDataBuffer
  4051  004118  0101               	movlb	1	; () banked
  4052  00411A  6F07               	movwf	sendHIDText@str& (0+255),b
  4053  00411C  0E03               	movlw	high _ToSendDataBuffer
  4054  00411E  0101               	movlb	1	; () banked
  4055  004120  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4056  004122  EC76  F04F         	call	_sendHIDText	;wreg free
  4057                           
  4058                           ;main.c: 269: _delay((unsigned long)((20)*(16000000/4000.0)));
  4059  004126  0E68               	movlw	104
  4060  004128  0101               	movlb	1	; () banked
  4061  00412A  6F89               	movwf	??_main& (0+255),b
  4062  00412C  0EE4               	movlw	228
  4063  00412E                     u25217:
  4064  00412E  2EE8               	decfsz	wreg,f,c
  4065  004130  D7FE               	goto	u25217
  4066  004132  2F89               	decfsz	??_main& (0+255),f,b
  4067  004134  D7FC               	goto	u25217
  4068  004136  D000               	nop2	
  4069                           
  4070                           ;main.c: 271: sprintf(ToSendDataBuffer, "I|status: ready!");
  4071  004138  0E84               	movlw	low _ToSendDataBuffer
  4072  00413A  0101               	movlb	1	; () banked
  4073  00413C  6F0C               	movwf	sprintf@sp& (0+255),b
  4074  00413E  0E03               	movlw	high _ToSendDataBuffer
  4075  004140  0101               	movlb	1	; () banked
  4076  004142  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4077  004144  0EA4               	movlw	low STR_8
  4078  004146  0101               	movlb	1	; () banked
  4079  004148  6F0E               	movwf	sprintf@f& (0+255),b
  4080  00414A  0E23               	movlw	high STR_8
  4081  00414C  0101               	movlb	1	; () banked
  4082  00414E  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4083  004150  ECDC  F029         	call	_sprintf	;wreg free
  4084                           
  4085                           ;main.c: 272: sendHIDText(ToSendDataBuffer);
  4086  004154  0E84               	movlw	low _ToSendDataBuffer
  4087  004156  0101               	movlb	1	; () banked
  4088  004158  6F07               	movwf	sendHIDText@str& (0+255),b
  4089  00415A  0E03               	movlw	high _ToSendDataBuffer
  4090  00415C  0101               	movlb	1	; () banked
  4091  00415E  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4092  004160  EC76  F04F         	call	_sendHIDText	;wreg free
  4093                           
  4094                           ;main.c: 273: _delay((unsigned long)((20)*(16000000/4000.0)));
  4095  004164  0E68               	movlw	104
  4096  004166  0101               	movlb	1	; () banked
  4097  004168  6F89               	movwf	??_main& (0+255),b
  4098  00416A  0EE4               	movlw	228
  4099  00416C                     u25227:
  4100  00416C  2EE8               	decfsz	wreg,f,c
  4101  00416E  D7FE               	goto	u25227
  4102  004170  2F89               	decfsz	??_main& (0+255),f,b
  4103  004172  D7FC               	goto	u25227
  4104  004174  D000               	nop2	
  4105                           
  4106                           ;main.c: 278: send_complete_update();
  4107  004176  EC13  F031         	call	_send_complete_update	;wreg free
  4108                           
  4109                           ;main.c: 281: MiApp_ConnectionMode(0x00);
  4110  00417A  0E00               	movlw	0
  4111  00417C  EC00  F05D         	call	_MiApp_ConnectionMode
  4112                           
  4113                           ;main.c: 283: sprintf(ToSendDataBuffer, "I|accepting scans & connections");
  4114  004180  0E84               	movlw	low _ToSendDataBuffer
  4115  004182  0101               	movlb	1	; () banked
  4116  004184  6F0C               	movwf	sprintf@sp& (0+255),b
  4117  004186  0E03               	movlw	high _ToSendDataBuffer
  4118  004188  0101               	movlb	1	; () banked
  4119  00418A  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4120  00418C  0E25               	movlw	low STR_9
  4121  00418E  0101               	movlb	1	; () banked
  4122  004190  6F0E               	movwf	sprintf@f& (0+255),b
  4123  004192  0E23               	movlw	high STR_9
  4124  004194  0101               	movlb	1	; () banked
  4125  004196  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4126  004198  ECDC  F029         	call	_sprintf	;wreg free
  4127                           
  4128                           ;main.c: 284: sendHIDText(ToSendDataBuffer);
  4129  00419C  0E84               	movlw	low _ToSendDataBuffer
  4130  00419E  0101               	movlb	1	; () banked
  4131  0041A0  6F07               	movwf	sendHIDText@str& (0+255),b
  4132  0041A2  0E03               	movlw	high _ToSendDataBuffer
  4133  0041A4  0101               	movlb	1	; () banked
  4134  0041A6  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4135  0041A8  EC76  F04F         	call	_sendHIDText	;wreg free
  4136                           
  4137                           ;main.c: 285: _delay((unsigned long)((20)*(16000000/4000.0)));
  4138  0041AC  0E68               	movlw	104
  4139  0041AE  0101               	movlb	1	; () banked
  4140  0041B0  6F89               	movwf	??_main& (0+255),b
  4141  0041B2  0EE4               	movlw	228
  4142  0041B4                     u25237:
  4143  0041B4  2EE8               	decfsz	wreg,f,c
  4144  0041B6  D7FE               	goto	u25237
  4145  0041B8  2F89               	decfsz	??_main& (0+255),f,b
  4146  0041BA  D7FC               	goto	u25237
  4147  0041BC  D000               	nop2	
  4148                           
  4149                           ;main.c: 287: myAppState = STATE_READY;
  4150  0041BE  0E02               	movlw	2
  4151  0041C0  6E52               	movwf	_myAppState,c
  4152                           
  4153                           ;main.c: 288: status_led = LED_SLOW_PULSE;
  4154  0041C2  0E02               	movlw	2
  4155  0041C4  6E55               	movwf	_status_led,c	;volatile
  4156                           
  4157                           ;main.c: 289: update_LED();
  4158  0041C6  ECC2  F059         	call	_update_LED	;wreg free
  4159                           
  4160                           ;main.c: 291: m_uptime_days = 0;
  4161  0041CA  0E00               	movlw	0
  4162  0041CC  0101               	movlb	1	; () banked
  4163  0041CE  6FB0               	movwf	_m_uptime_days& (0+255),b	;volatile
  4164  0041D0  0E00               	movlw	0
  4165  0041D2  0101               	movlb	1	; () banked
  4166  0041D4  6FB1               	movwf	(_m_uptime_days+1)& (0+255),b	;volatile
  4167  0041D6  0E00               	movlw	0
  4168  0041D8  0101               	movlb	1	; () banked
  4169  0041DA  6FB2               	movwf	(_m_uptime_days+2)& (0+255),b	;volatile
  4170                           
  4171                           ; BSR set to: 1
  4172                           ;main.c: 292: timer_reset();
  4173  0041DC  EC96  F05D         	call	_timer_reset	;wreg free
  4174  0041E0                     l21750:
  4175                           
  4176                           ;main.c: 297: {
  4177                           ;main.c: 298: uint8_t shortaddress[2];
  4178                           ;main.c: 299: uint8_t power;
  4179                           ;main.c: 300: uint8_t rssi;
  4180                           ;main.c: 301: uint8_t uid[2];
  4181                           ;main.c: 302: uint8_t size;
  4182                           ;main.c: 306: MiWiTasks();
  4183  0041E0  ECE3  F011         	call	_MiWiTasks	;wreg free
  4184                           
  4185                           ;main.c: 310: if(MiApp_MessageAvailable())
  4186  0041E4  ECB8  F05D         	call	_MiApp_MessageAvailable	;wreg free
  4187  0041E8  0900               	iorlw	0
  4188  0041EA  B4D8               	btfsc	status,2,c
  4189  0041EC  D1FD               	goto	l21852
  4190                           
  4191                           ;main.c: 311: {
  4192                           ;main.c: 312: shortaddress[0] = rxMessage.SourceAddress[0];
  4193  0041EE  C193  FFD9         	movff	_rxMessage+3,fsr2l
  4194  0041F2  C194  FFDA         	movff	_rxMessage+4,fsr2h
  4195  0041F6  50DF               	movf	indf2,w,c
  4196  0041F8  0103               	movlb	3	; () banked
  4197  0041FA  6FE1               	movwf	main@shortaddress& (0+255),b
  4198                           
  4199                           ; BSR set to: 3
  4200                           ;main.c: 313: shortaddress[1] = rxMessage.SourceAddress[1];
  4201  0041FC  0101               	movlb	1	; () banked
  4202  0041FE  EE20 F001          	lfsr	2,1
  4203  004202  5193               	movf	(_rxMessage+3)& (0+255),w,b
  4204  004204  26D9               	addwf	fsr2l,f,c
  4205  004206  5194               	movf	(_rxMessage+4)& (0+255),w,b
  4206  004208  22DA               	addwfc	fsr2h,f,c
  4207  00420A  50DF               	movf	indf2,w,c
  4208  00420C  0103               	movlb	3	; () banked
  4209  00420E  6FE2               	movwf	(main@shortaddress+1)& (0+255),b
  4210                           
  4211                           ;main.c: 314: switch(rxMessage.Payload[0])
  4212  004210  D1D9               	goto	l21850
  4213  004212                     l1760:
  4214                           
  4215                           ;main.c: 317: rssi = rxMessage.PacketRSSI;
  4216  004212  C198  F3DD         	movff	_rxMessage+8,main@rssi
  4217                           
  4218                           ;main.c: 318: power = rxMessage.Payload[1];
  4219  004216  0101               	movlb	1	; () banked
  4220  004218  EE20 F001          	lfsr	2,1
  4221  00421C  5195               	movf	(_rxMessage+5)& (0+255),w,b
  4222  00421E  26D9               	addwf	fsr2l,f,c
  4223  004220  5196               	movf	(_rxMessage+6)& (0+255),w,b
  4224  004222  22DA               	addwfc	fsr2h,f,c
  4225  004224  50DF               	movf	indf2,w,c
  4226  004226  0103               	movlb	3	; () banked
  4227  004228  6FDC               	movwf	main@power& (0+255),b
  4228                           
  4229                           ; BSR set to: 3
  4230                           ;main.c: 319: MiApp_DiscardMessage();
  4231  00422A  ECC1  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4232                           
  4233                           ;main.c: 321: {TxData = 11;};
  4234  00422E  0E0B               	movlw	11
  4235  004230  0101               	movlb	1	; () banked
  4236  004232  6FC6               	movwf	_TxData& (0+255),b
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;main.c: 322: TxBuffer[TxData++] = 01;
  4240  004234  0101               	movlb	1	; () banked
  4241  004236  51C6               	movf	_TxData& (0+255),w,b
  4242  004238  0D01               	mullw	1
  4243  00423A  0EA6               	movlw	low _TxBuffer
  4244  00423C  24F3               	addwf	prodl,w,c
  4245  00423E  6ED9               	movwf	fsr2l,c
  4246  004240  0E02               	movlw	high _TxBuffer
  4247  004242  20F4               	addwfc	prodh,w,c
  4248  004244  6EDA               	movwf	fsr2h,c
  4249  004246  0E01               	movlw	1
  4250  004248  6EDF               	movwf	indf2,c
  4251                           
  4252                           ; BSR set to: 1
  4253  00424A  0101               	movlb	1	; () banked
  4254  00424C  2BC6               	incf	_TxData& (0+255),f,b
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;main.c: 323: TxBuffer[TxData++] = power;
  4258  00424E  0101               	movlb	1	; () banked
  4259  004250  51C6               	movf	_TxData& (0+255),w,b
  4260  004252  0D01               	mullw	1
  4261  004254  0EA6               	movlw	low _TxBuffer
  4262  004256  24F3               	addwf	prodl,w,c
  4263  004258  6ED9               	movwf	fsr2l,c
  4264  00425A  0E02               	movlw	high _TxBuffer
  4265  00425C  20F4               	addwfc	prodh,w,c
  4266  00425E  6EDA               	movwf	fsr2h,c
  4267  004260  C3DC  FFDF         	movff	main@power,indf2
  4268                           
  4269                           ; BSR set to: 1
  4270  004264  0101               	movlb	1	; () banked
  4271  004266  2BC6               	incf	_TxData& (0+255),f,b
  4272                           
  4273                           ; BSR set to: 1
  4274                           ;main.c: 324: TxBuffer[TxData++] = rssi;
  4275  004268  0101               	movlb	1	; () banked
  4276  00426A  51C6               	movf	_TxData& (0+255),w,b
  4277  00426C  0D01               	mullw	1
  4278  00426E  0EA6               	movlw	low _TxBuffer
  4279  004270  24F3               	addwf	prodl,w,c
  4280  004272  6ED9               	movwf	fsr2l,c
  4281  004274  0E02               	movlw	high _TxBuffer
  4282  004276  20F4               	addwfc	prodh,w,c
  4283  004278  6EDA               	movwf	fsr2h,c
  4284  00427A  C3DD  FFDF         	movff	main@rssi,indf2
  4285                           
  4286                           ; BSR set to: 1
  4287  00427E  0101               	movlb	1	; () banked
  4288  004280  2BC6               	incf	_TxData& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;main.c: 326: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4292  004282  0EE1               	movlw	low main@shortaddress
  4293  004284  0101               	movlb	1	; () banked
  4294  004286  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4295  004288  0E03               	movlw	high main@shortaddress
  4296  00428A  0101               	movlb	1	; () banked
  4297  00428C  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4298  00428E  0E00               	movlw	0
  4299  004290  0101               	movlb	1	; () banked
  4300  004292  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4301  004294  0E01               	movlw	1
  4302  004296  0101               	movlb	1	; () banked
  4303  004298  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4304  00429A  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  4305  00429E  06E8               	decf	wreg,f,c
  4306  0042A0  A4D8               	btfss	status,2,c
  4307  0042A2  D02B               	goto	l21782
  4308                           
  4309                           ;main.c: 327: {
  4310                           ;main.c: 328: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: OK, %s, RSSI=%i", shorta
      +                          ddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4311  0042A4  0E84               	movlw	low _ToSendDataBuffer
  4312  0042A6  0101               	movlb	1	; () banked
  4313  0042A8  6F0C               	movwf	sprintf@sp& (0+255),b
  4314  0042AA  0E03               	movlw	high _ToSendDataBuffer
  4315  0042AC  0101               	movlb	1	; () banked
  4316  0042AE  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4317  0042B0  0EBC               	movlw	low STR_10
  4318  0042B2  0101               	movlb	1	; () banked
  4319  0042B4  6F0E               	movwf	sprintf@f& (0+255),b
  4320  0042B6  0E22               	movlw	high STR_10
  4321  0042B8  0101               	movlb	1	; () banked
  4322  0042BA  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4323  0042BC  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4324  0042C0  0101               	movlb	1	; () banked
  4325  0042C2  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4326  0042C4  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4327  0042C8  0101               	movlb	1	; () banked
  4328  0042CA  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4329  0042CC  0103               	movlb	3	; () banked
  4330  0042CE  51DC               	movf	main@power& (0+255),w,b
  4331  0042D0  EC58  F051         	call	_dBm_to_mW
  4332  0042D4  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4333  0042D8  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4334  0042DC  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4335  0042E0  0101               	movlb	1	; () banked
  4336  0042E2  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4337  0042E4  ECDC  F029         	call	_sprintf	;wreg free
  4338                           
  4339                           ;main.c: 329: sendHIDText(ToSendDataBuffer);
  4340  0042E8  0E84               	movlw	low _ToSendDataBuffer
  4341  0042EA  0101               	movlb	1	; () banked
  4342  0042EC  6F07               	movwf	sendHIDText@str& (0+255),b
  4343  0042EE  0E03               	movlw	high _ToSendDataBuffer
  4344  0042F0  0101               	movlb	1	; () banked
  4345  0042F2  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4346  0042F4  EC76  F04F         	call	_sendHIDText	;wreg free
  4347                           
  4348                           ;main.c: 331: }
  4349  0042F8  D773               	goto	l21750
  4350  0042FA                     l21782:
  4351                           
  4352                           ;main.c: 332: else
  4353                           ;main.c: 333: {
  4354                           ;main.c: 334: sprintf(ToSendDataBuffer, "I|%02x%02x:POWER_TEST: error sending back, %s, 
      +                          RSSI=%i", shortaddress[1], shortaddress[0], dBm_to_mW(power), rssi);
  4355  0042FA  0E84               	movlw	low _ToSendDataBuffer
  4356  0042FC  0101               	movlb	1	; () banked
  4357  0042FE  6F0C               	movwf	sprintf@sp& (0+255),b
  4358  004300  0E03               	movlw	high _ToSendDataBuffer
  4359  004302  0101               	movlb	1	; () banked
  4360  004304  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4361  004306  0ED5               	movlw	low STR_11
  4362  004308  0101               	movlb	1	; () banked
  4363  00430A  6F0E               	movwf	sprintf@f& (0+255),b
  4364  00430C  0E21               	movlw	high STR_11
  4365  00430E  0101               	movlb	1	; () banked
  4366  004310  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4367  004312  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4368  004316  0101               	movlb	1	; () banked
  4369  004318  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4370  00431A  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4371  00431E  0101               	movlb	1	; () banked
  4372  004320  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4373  004322  0103               	movlb	3	; () banked
  4374  004324  51DC               	movf	main@power& (0+255),w,b
  4375  004326  EC58  F051         	call	_dBm_to_mW
  4376  00432A  C100  F114         	movff	?_dBm_to_mW,?_sprintf+8
  4377  00432E  C101  F115         	movff	?_dBm_to_mW+1,?_sprintf+9
  4378  004332  C3DD  F116         	movff	main@rssi,?_sprintf+10
  4379  004336  0101               	movlb	1	; () banked
  4380  004338  6B17               	clrf	(?_sprintf+11)& (0+255),b
  4381  00433A  ECDC  F029         	call	_sprintf	;wreg free
  4382                           
  4383                           ;main.c: 335: sendHIDText(ToSendDataBuffer);
  4384  00433E  0E84               	movlw	low _ToSendDataBuffer
  4385  004340  0101               	movlb	1	; () banked
  4386  004342  6F07               	movwf	sendHIDText@str& (0+255),b
  4387  004344  0E03               	movlw	high _ToSendDataBuffer
  4388  004346  0101               	movlb	1	; () banked
  4389  004348  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4390  00434A  EC76  F04F         	call	_sendHIDText	;wreg free
  4391                           
  4392                           ;main.c: 337: }
  4393                           ;main.c: 338: break;
  4394  00434E  D748               	goto	l21750
  4395  004350                     l21786:
  4396                           
  4397                           ;main.c: 342: p_buffer = &m_buffer[0];
  4398  004350  0ED1               	movlw	low _m_buffer
  4399  004352  0101               	movlb	1	; () banked
  4400  004354  6FB9               	movwf	_p_buffer& (0+255),b
  4401  004356  0E02               	movlw	high _m_buffer
  4402  004358  0101               	movlb	1	; () banked
  4403  00435A  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;main.c: 343: *(p_buffer++) = 0x4d;
  4407  00435C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4408  004360  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4409  004364  0E4D               	movlw	77
  4410  004366  6EDF               	movwf	indf2,c
  4411                           
  4412                           ; BSR set to: 1
  4413  004368  0101               	movlb	1	; () banked
  4414  00436A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4415  00436C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4416                           
  4417                           ;main.c: 344: *(p_buffer++) = shortaddress[0];
  4418  00436E  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4419  004372  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4420  004376  C3E1  FFDF         	movff	main@shortaddress,indf2
  4421                           
  4422                           ; BSR set to: 1
  4423  00437A  0101               	movlb	1	; () banked
  4424  00437C  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4425  00437E  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;main.c: 345: *(p_buffer++) = shortaddress[1];
  4429  004380  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4430  004384  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4431  004388  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4432  00438C  0101               	movlb	1	; () banked
  4433  00438E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4434  004390  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;main.c: 346: size = rxMessage.PayloadSize;
  4438  004392  C197  F3E0         	movff	_rxMessage+7,main@size
  4439                           
  4440                           ; BSR set to: 1
  4441                           ;main.c: 347: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4442  004396  C1B9  F100         	movff	_p_buffer,memcpy@d1
  4443  00439A  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  4444  00439E  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4445  0043A2  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4446  0043A6  C3E0  F104         	movff	main@size,memcpy@n
  4447  0043AA  0101               	movlb	1	; () banked
  4448  0043AC  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4449  0043AE  EC91  F059         	call	_memcpy	;wreg free
  4450                           
  4451                           ;main.c: 348: p_buffer += size;
  4452  0043B2  0103               	movlb	3	; () banked
  4453  0043B4  51E0               	movf	main@size& (0+255),w,b
  4454  0043B6  0D01               	mullw	1
  4455  0043B8  50F3               	movf	prodl,w,c
  4456  0043BA  0101               	movlb	1	; () banked
  4457  0043BC  27B9               	addwf	_p_buffer& (0+255),f,b
  4458  0043BE  50F4               	movf	prodh,w,c
  4459  0043C0  0101               	movlb	1	; () banked
  4460  0043C2  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4461                           
  4462                           ; BSR set to: 1
  4463                           ;main.c: 350: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4464  0043C4  0ED1               	movlw	low _m_buffer
  4465  0043C6  0101               	movlb	1	; () banked
  4466  0043C8  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4467  0043CA  0E02               	movlw	high _m_buffer
  4468  0043CC  0101               	movlb	1	; () banked
  4469  0043CE  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4470  0043D0  0ED1               	movlw	_m_buffer& (0+255)
  4471  0043D2  0800               	sublw	0
  4472  0043D4  0101               	movlb	1	; () banked
  4473  0043D6  25B9               	addwf	_p_buffer& (0+255),w,b
  4474  0043D8  0101               	movlb	1	; () banked
  4475  0043DA  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4476  0043DC  EC7A  F055         	call	_sendHIDBinary	;wreg free
  4477                           
  4478                           ;main.c: 351: MiApp_DiscardMessage();
  4479  0043E0  ECC1  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4480                           
  4481                           ;main.c: 352: break;
  4482  0043E4  D6FD               	goto	l21750
  4483  0043E6                     l21806:
  4484                           
  4485                           ;main.c: 355: {TxData = 11;};
  4486  0043E6  0E0B               	movlw	11
  4487  0043E8  0101               	movlb	1	; () banked
  4488  0043EA  6FC6               	movwf	_TxData& (0+255),b
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;main.c: 356: size = rxMessage.PayloadSize;
  4492  0043EC  C197  F3E0         	movff	_rxMessage+7,main@size
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;main.c: 357: memcpy(&TxBuffer[TxData], &rxMessage.Payload[0], size);
  4496  0043F0  0101               	movlb	1	; () banked
  4497  0043F2  51C6               	movf	_TxData& (0+255),w,b
  4498  0043F4  0D01               	mullw	1
  4499  0043F6  0EA6               	movlw	low _TxBuffer
  4500  0043F8  24F3               	addwf	prodl,w,c
  4501  0043FA  0101               	movlb	1	; () banked
  4502  0043FC  6F00               	movwf	memcpy@d1& (0+255),b
  4503  0043FE  0E02               	movlw	high _TxBuffer
  4504  004400  20F4               	addwfc	prodh,w,c
  4505  004402  0101               	movlb	1	; () banked
  4506  004404  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  4507  004406  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4508  00440A  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4509  00440E  C3E0  F104         	movff	main@size,memcpy@n
  4510  004412  0101               	movlb	1	; () banked
  4511  004414  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4512  004416  EC91  F059         	call	_memcpy	;wreg free
  4513                           
  4514                           ;main.c: 358: TxData = TxData + size;
  4515  00441A  0101               	movlb	1	; () banked
  4516  00441C  51C6               	movf	_TxData& (0+255),w,b
  4517  00441E  0103               	movlb	3	; () banked
  4518  004420  25E0               	addwf	main@size& (0+255),w,b
  4519  004422  0101               	movlb	1	; () banked
  4520  004424  6FC6               	movwf	_TxData& (0+255),b
  4521                           
  4522                           ; BSR set to: 1
  4523                           ;main.c: 359: MiApp_DiscardMessage();
  4524  004426  ECC1  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4525                           
  4526                           ;main.c: 361: if (MiApp_UnicastAddress(&shortaddress, 0, 1) == 1)
  4527  00442A  0EE1               	movlw	low main@shortaddress
  4528  00442C  0101               	movlb	1	; () banked
  4529  00442E  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  4530  004430  0E03               	movlw	high main@shortaddress
  4531  004432  0101               	movlb	1	; () banked
  4532  004434  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  4533  004436  0E00               	movlw	0
  4534  004438  0101               	movlb	1	; () banked
  4535  00443A  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  4536  00443C  0E01               	movlw	1
  4537  00443E  0101               	movlb	1	; () banked
  4538  004440  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  4539  004442  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  4540  004446  06E8               	decf	wreg,f,c
  4541  004448  A4D8               	btfss	status,2,c
  4542  00444A  D023               	goto	l21822
  4543                           
  4544                           ;main.c: 362: {
  4545                           ;main.c: 363: sprintf(ToSendDataBuffer, "I|%02x%02x:PING successful: payload_size=%i", s
      +                          hortaddress[1], shortaddress[0], size);
  4546  00444C  0E84               	movlw	low _ToSendDataBuffer
  4547  00444E  0101               	movlb	1	; () banked
  4548  004450  6F0C               	movwf	sprintf@sp& (0+255),b
  4549  004452  0E03               	movlw	high _ToSendDataBuffer
  4550  004454  0101               	movlb	1	; () banked
  4551  004456  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4552  004458  0E40               	movlw	low STR_12
  4553  00445A  0101               	movlb	1	; () banked
  4554  00445C  6F0E               	movwf	sprintf@f& (0+255),b
  4555  00445E  0E22               	movlw	high STR_12
  4556  004460  0101               	movlb	1	; () banked
  4557  004462  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4558  004464  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4559  004468  0101               	movlb	1	; () banked
  4560  00446A  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4561  00446C  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4562  004470  0101               	movlb	1	; () banked
  4563  004472  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4564  004474  C3E0  F114         	movff	main@size,?_sprintf+8
  4565  004478  0101               	movlb	1	; () banked
  4566  00447A  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4567  00447C  ECDC  F029         	call	_sprintf	;wreg free
  4568                           
  4569                           ;main.c: 364: sendHIDText(ToSendDataBuffer);
  4570  004480  0E84               	movlw	low _ToSendDataBuffer
  4571  004482  0101               	movlb	1	; () banked
  4572  004484  6F07               	movwf	sendHIDText@str& (0+255),b
  4573  004486  0E03               	movlw	high _ToSendDataBuffer
  4574  004488  0101               	movlb	1	; () banked
  4575  00448A  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4576  00448C  EC76  F04F         	call	_sendHIDText	;wreg free
  4577                           
  4578                           ;main.c: 366: }
  4579  004490  D6A7               	goto	l21750
  4580  004492                     l21822:
  4581                           
  4582                           ;main.c: 367: else
  4583                           ;main.c: 368: {
  4584                           ;main.c: 369: sprintf(ToSendDataBuffer, "I|%02x%02x:PING error sending back: payload_siz
      +                          e=%i", shortaddress[1], shortaddress[0], size);
  4585  004492  0E84               	movlw	low _ToSendDataBuffer
  4586  004494  0101               	movlb	1	; () banked
  4587  004496  6F0C               	movwf	sprintf@sp& (0+255),b
  4588  004498  0E03               	movlw	high _ToSendDataBuffer
  4589  00449A  0101               	movlb	1	; () banked
  4590  00449C  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4591  00449E  0E0C               	movlw	low STR_13
  4592  0044A0  0101               	movlb	1	; () banked
  4593  0044A2  6F0E               	movwf	sprintf@f& (0+255),b
  4594  0044A4  0E22               	movlw	high STR_13
  4595  0044A6  0101               	movlb	1	; () banked
  4596  0044A8  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4597  0044AA  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4598  0044AE  0101               	movlb	1	; () banked
  4599  0044B0  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4600  0044B2  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4601  0044B6  0101               	movlb	1	; () banked
  4602  0044B8  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4603  0044BA  C3E0  F114         	movff	main@size,?_sprintf+8
  4604  0044BE  0101               	movlb	1	; () banked
  4605  0044C0  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4606  0044C2  ECDC  F029         	call	_sprintf	;wreg free
  4607                           
  4608                           ;main.c: 370: sendHIDText(ToSendDataBuffer);
  4609  0044C6  0E84               	movlw	low _ToSendDataBuffer
  4610  0044C8  0101               	movlb	1	; () banked
  4611  0044CA  6F07               	movwf	sendHIDText@str& (0+255),b
  4612  0044CC  0E03               	movlw	high _ToSendDataBuffer
  4613  0044CE  0101               	movlb	1	; () banked
  4614  0044D0  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4615  0044D2  EC76  F04F         	call	_sendHIDText	;wreg free
  4616                           
  4617                           ;main.c: 372: }
  4618                           ;main.c: 373: break;
  4619  0044D6  D684               	goto	l21750
  4620  0044D8                     l21826:
  4621                           
  4622                           ;main.c: 377: p_buffer = &m_buffer[0];
  4623  0044D8  0ED1               	movlw	low _m_buffer
  4624  0044DA  0101               	movlb	1	; () banked
  4625  0044DC  6FB9               	movwf	_p_buffer& (0+255),b
  4626  0044DE  0E02               	movlw	high _m_buffer
  4627  0044E0  0101               	movlb	1	; () banked
  4628  0044E2  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;main.c: 378: *(p_buffer++) = 0x4d;
  4632  0044E4  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4633  0044E8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4634  0044EC  0E4D               	movlw	77
  4635  0044EE  6EDF               	movwf	indf2,c
  4636                           
  4637                           ; BSR set to: 1
  4638  0044F0  0101               	movlb	1	; () banked
  4639  0044F2  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4640  0044F4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4641                           
  4642                           ;main.c: 379: *(p_buffer++) = shortaddress[0];
  4643  0044F6  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4644  0044FA  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4645  0044FE  C3E1  FFDF         	movff	main@shortaddress,indf2
  4646                           
  4647                           ; BSR set to: 1
  4648  004502  0101               	movlb	1	; () banked
  4649  004504  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4650  004506  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;main.c: 380: *(p_buffer++) = shortaddress[1];
  4654  004508  C1B9  FFD9         	movff	_p_buffer,fsr2l
  4655  00450C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  4656  004510  C3E2  FFDF         	movff	main@shortaddress+1,indf2
  4657  004514  0101               	movlb	1	; () banked
  4658  004516  4BB9               	infsnz	_p_buffer& (0+255),f,b
  4659  004518  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;main.c: 381: size = rxMessage.PayloadSize;
  4663  00451A  C197  F3E0         	movff	_rxMessage+7,main@size
  4664                           
  4665                           ; BSR set to: 1
  4666                           ;main.c: 382: memcpy(p_buffer, &rxMessage.Payload[0], size);
  4667  00451E  C1B9  F100         	movff	_p_buffer,memcpy@d1
  4668  004522  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  4669  004526  C195  F102         	movff	_rxMessage+5,memcpy@s1
  4670  00452A  C196  F103         	movff	_rxMessage+6,memcpy@s1+1
  4671  00452E  C3E0  F104         	movff	main@size,memcpy@n
  4672  004532  0101               	movlb	1	; () banked
  4673  004534  6B05               	clrf	(memcpy@n+1)& (0+255),b
  4674  004536  EC91  F059         	call	_memcpy	;wreg free
  4675                           
  4676                           ;main.c: 383: p_buffer += size;
  4677  00453A  0103               	movlb	3	; () banked
  4678  00453C  51E0               	movf	main@size& (0+255),w,b
  4679  00453E  0D01               	mullw	1
  4680  004540  50F3               	movf	prodl,w,c
  4681  004542  0101               	movlb	1	; () banked
  4682  004544  27B9               	addwf	_p_buffer& (0+255),f,b
  4683  004546  50F4               	movf	prodh,w,c
  4684  004548  0101               	movlb	1	; () banked
  4685  00454A  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4686                           
  4687                           ; BSR set to: 1
  4688                           ;main.c: 385: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  4689  00454C  0ED1               	movlw	low _m_buffer
  4690  00454E  0101               	movlb	1	; () banked
  4691  004550  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  4692  004552  0E02               	movlw	high _m_buffer
  4693  004554  0101               	movlb	1	; () banked
  4694  004556  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  4695  004558  0ED1               	movlw	_m_buffer& (0+255)
  4696  00455A  0800               	sublw	0
  4697  00455C  0101               	movlb	1	; () banked
  4698  00455E  25B9               	addwf	_p_buffer& (0+255),w,b
  4699  004560  0101               	movlb	1	; () banked
  4700  004562  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  4701  004564  EC7A  F055         	call	_sendHIDBinary	;wreg free
  4702                           
  4703                           ;main.c: 386: MiApp_DiscardMessage();
  4704  004568  ECC1  F05D         	call	_MiApp_DiscardMessage	;wreg free
  4705                           
  4706                           ;main.c: 387: break;
  4707  00456C  D639               	goto	l21750
  4708  00456E                     l21846:
  4709                           
  4710                           ;main.c: 391: sprintf(ToSendDataBuffer, "I|%02x%02x: %i command not recognized!", shorta
      +                          ddress[1], shortaddress[0], rxMessage.Payload[0]);
  4711  00456E  0E84               	movlw	low _ToSendDataBuffer
  4712  004570  0101               	movlb	1	; () banked
  4713  004572  6F0C               	movwf	sprintf@sp& (0+255),b
  4714  004574  0E03               	movlw	high _ToSendDataBuffer
  4715  004576  0101               	movlb	1	; () banked
  4716  004578  6F0D               	movwf	(sprintf@sp+1)& (0+255),b
  4717  00457A  0E95               	movlw	low STR_14
  4718  00457C  0101               	movlb	1	; () banked
  4719  00457E  6F0E               	movwf	sprintf@f& (0+255),b
  4720  004580  0E22               	movlw	high STR_14
  4721  004582  0101               	movlb	1	; () banked
  4722  004584  6F0F               	movwf	(sprintf@f+1)& (0+255),b
  4723  004586  C3E2  F110         	movff	main@shortaddress+1,?_sprintf+4
  4724  00458A  0101               	movlb	1	; () banked
  4725  00458C  6B11               	clrf	(?_sprintf+5)& (0+255),b
  4726  00458E  C3E1  F112         	movff	main@shortaddress,?_sprintf+6
  4727  004592  0101               	movlb	1	; () banked
  4728  004594  6B13               	clrf	(?_sprintf+7)& (0+255),b
  4729  004596  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4730  00459A  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4731  00459E  50DF               	movf	indf2,w,c
  4732  0045A0  0101               	movlb	1	; () banked
  4733  0045A2  6F89               	movwf	??_main& (0+255),b
  4734  0045A4  0101               	movlb	1	; () banked
  4735  0045A6  5189               	movf	??_main& (0+255),w,b
  4736  0045A8  0101               	movlb	1	; () banked
  4737  0045AA  6F14               	movwf	(?_sprintf+8)& (0+255),b
  4738  0045AC  6B15               	clrf	(?_sprintf+9)& (0+255),b
  4739  0045AE  ECDC  F029         	call	_sprintf	;wreg free
  4740                           
  4741                           ;main.c: 392: sendHIDText(ToSendDataBuffer);
  4742  0045B2  0E84               	movlw	low _ToSendDataBuffer
  4743  0045B4  0101               	movlb	1	; () banked
  4744  0045B6  6F07               	movwf	sendHIDText@str& (0+255),b
  4745  0045B8  0E03               	movlw	high _ToSendDataBuffer
  4746  0045BA  0101               	movlb	1	; () banked
  4747  0045BC  6F08               	movwf	(sendHIDText@str+1)& (0+255),b
  4748  0045BE  EC76  F04F         	call	_sendHIDText	;wreg free
  4749                           
  4750                           ;main.c: 393: }
  4751  0045C2  D60E               	goto	l21750
  4752  0045C4                     l21850:
  4753  0045C4  C195  FFD9         	movff	_rxMessage+5,fsr2l
  4754  0045C8  C196  FFDA         	movff	_rxMessage+6,fsr2h
  4755  0045CC  50DF               	movf	indf2,w,c
  4756                           
  4757                           ; Switch size 1, requested type "space"
  4758                           ; Number of cases is 4, Range of values is 1 to 4
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte           13     7 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763  0045CE  0A01               	xorlw	1	; case 1
  4764  0045D0  B4D8               	btfsc	status,2,c
  4765  0045D2  D61F               	goto	l1760
  4766  0045D4  0A03               	xorlw	3	; case 2
  4767  0045D6  B4D8               	btfsc	status,2,c
  4768  0045D8  D6BB               	goto	l21786
  4769  0045DA  0A01               	xorlw	1	; case 3
  4770  0045DC  B4D8               	btfsc	status,2,c
  4771  0045DE  D703               	goto	l21806
  4772  0045E0  0A07               	xorlw	7	; case 4
  4773  0045E2  B4D8               	btfsc	status,2,c
  4774  0045E4  D779               	goto	l21826
  4775  0045E6  D7C3               	goto	l21846
  4776  0045E8                     l21852:
  4777                           
  4778                           ;main.c: 398: else if((USBOutHandle==0?0:((volatile BDT_ENTRY*)USBOutHandle)->STAT.UOWN)
      +                           == 0)
  4779  0045E8  0101               	movlb	1	; () banked
  4780  0045EA  51B7               	movf	_USBOutHandle& (0+255),w,b
  4781  0045EC  0101               	movlb	1	; () banked
  4782  0045EE  11B8               	iorwf	(_USBOutHandle+1)& (0+255),w,b
  4783  0045F0  B4D8               	btfsc	status,2,c
  4784  0045F2  D013               	goto	l21856
  4785                           
  4786                           ; BSR set to: 1
  4787  0045F4  C1B7  FFD9         	movff	_USBOutHandle,fsr2l
  4788  0045F8  C1B8  FFDA         	movff	_USBOutHandle+1,fsr2h
  4789  0045FC  0101               	movlb	1	; () banked
  4790  0045FE  AEDF               	btfss	indf2,7,c
  4791  004600  D004               	goto	u24740
  4792  004602  0101               	movlb	1	; () banked
  4793  004604  6B89               	clrf	??_main& (0+255),b
  4794  004606  2B89               	incf	??_main& (0+255),f,b
  4795  004608  D002               	goto	u24748
  4796  00460A                     u24740:
  4797  00460A  0101               	movlb	1	; () banked
  4798  00460C  6B89               	clrf	??_main& (0+255),b
  4799  00460E                     u24748:
  4800  00460E  0101               	movlb	1	; () banked
  4801  004610  5189               	movf	??_main& (0+255),w,b
  4802  004612  0103               	movlb	3	; () banked
  4803  004614  6FDA               	movwf	_main$4921& (0+255),b
  4804  004616  6BDB               	clrf	(_main$4921+1)& (0+255),b
  4805  004618  D005               	goto	l21858
  4806  00461A                     l21856:
  4807  00461A  0E00               	movlw	0
  4808  00461C  0103               	movlb	3	; () banked
  4809  00461E  6FDB               	movwf	(_main$4921+1)& (0+255),b
  4810  004620  0E00               	movlw	0
  4811  004622  6FDA               	movwf	_main$4921& (0+255),b
  4812  004624                     l21858:
  4813                           
  4814                           ; BSR set to: 3
  4815  004624  0103               	movlb	3	; () banked
  4816  004626  51DA               	movf	_main$4921& (0+255),w,b
  4817  004628  0103               	movlb	3	; () banked
  4818  00462A  11DB               	iorwf	(_main$4921+1)& (0+255),w,b
  4819  00462C  B4D8               	btfsc	status,2,c
  4820  00462E  D0C9               	goto	l21898
  4821  004630  D0E4               	goto	l21902
  4822  004632                     l1777:
  4823                           
  4824                           ; BSR set to: 4
  4825  004632  00FF               	reset		;# 
  4826                           
  4827                           ;main.c: 404: break;
  4828  004634  D0CE               	goto	l21900
  4829  004636                     l1779:
  4830                           
  4831                           ; BSR set to: 4
  4832                           ;main.c: 407: shortaddress[0] = ReceivedDataBuffer[1];
  4833  004636  C401  F3E1         	movff	_ReceivedDataBuffer+1,main@shortaddress
  4834                           
  4835                           ;main.c: 408: shortaddress[1] = ReceivedDataBuffer[2];
  4836  00463A  C402  F3E2         	movff	_ReceivedDataBuffer+2,main@shortaddress+1
  4837                           
  4838                           ;main.c: 409: size = ReceivedDataBuffer[3];
  4839  00463E  C403  F3E0         	movff	_ReceivedDataBuffer+3,main@size
  4840                           
  4841                           ; BSR set to: 4
  4842                           ;main.c: 410: if ((shortaddress[0] == 0x00) && (shortaddress[1] == 0x00))
  4843  004642  0103               	movlb	3	; () banked
  4844  004644  51E1               	movf	main@shortaddress& (0+255),w,b
  4845  004646  0103               	movlb	3	; () banked
  4846  004648  A4D8               	btfss	status,2,c
  4847  00464A  D078               	goto	l21884
  4848                           
  4849                           ; BSR set to: 3
  4850  00464C  0103               	movlb	3	; () banked
  4851  00464E  51E2               	movf	(main@shortaddress+1)& (0+255),w,b
  4852  004650  A4D8               	btfss	status,2,c
  4853  004652  D074               	goto	l21884
  4854                           
  4855                           ; BSR set to: 3
  4856                           ;main.c: 411: {
  4857                           ;main.c: 413: if ((ReceivedDataBuffer[4] == 04) && (size > 2))
  4858  004654  0E04               	movlw	4
  4859  004656  0104               	movlb	4	; () banked
  4860  004658  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  4861  00465A  A4D8               	btfss	status,2,c
  4862  00465C  D0BA               	goto	l21900
  4863                           
  4864                           ; BSR set to: 4
  4865  00465E  0E02               	movlw	2
  4866  004660  0103               	movlb	3	; () banked
  4867  004662  65E0               	cpfsgt	main@size& (0+255),b
  4868  004664  D0B6               	goto	l21900
  4869                           
  4870                           ; BSR set to: 3
  4871                           ;main.c: 414: {
  4872                           ;main.c: 415: bool last_update = (ReceivedDataBuffer[5] == 0xff);
  4873  004666  0104               	movlb	4	; () banked
  4874  004668  2905               	incf	(_ReceivedDataBuffer+5)& (0+255),w,b
  4875  00466A  A4D8               	btfss	status,2,c
  4876  00466C  D002               	goto	u24800
  4877  00466E  0E01               	movlw	1
  4878  004670  D001               	goto	u24810
  4879  004672                     u24800:
  4880  004672  0E00               	movlw	0
  4881  004674                     u24810:
  4882  004674  0103               	movlb	3	; () banked
  4883  004676  6FD7               	movwf	main@last_update& (0+255),b
  4884                           
  4885                           ;main.c: 417: p_buffer = &ReceivedDataBuffer[6];
  4886  004678  0E06               	movlw	low (_ReceivedDataBuffer+6)
  4887  00467A  0101               	movlb	1	; () banked
  4888  00467C  6FB9               	movwf	_p_buffer& (0+255),b
  4889  00467E  0E04               	movlw	high (_ReceivedDataBuffer+6)
  4890  004680  0101               	movlb	1	; () banked
  4891  004682  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  4892                           
  4893                           ;main.c: 418: while ((p_buffer - &ReceivedDataBuffer[6]) < (size - 2))
  4894  004684  D018               	goto	l21878
  4895  004686                     l21872:
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;main.c: 419: {
  4899                           ;main.c: 420: m_var = decode_variable(p_buffer);
  4900  004686  C1B9  F10A         	movff	_p_buffer,decode_variable@p_buffer
  4901  00468A  C1BA  F10B         	movff	_p_buffer+1,decode_variable@p_buffer+1
  4902  00468E  EC4D  F04A         	call	_decode_variable	;wreg free
  4903  004692  EE21  F0DE         	lfsr	2,_m_var
  4904  004696  0E09               	movlw	9
  4905  004698                     u24821:
  4906  004698  CFEB FFDB          	movff	plusw0,plusw2
  4907  00469C  06E8               	decf	wreg,f,c
  4908  00469E  E2FC               	bc	u24821
  4909                           
  4910                           ;main.c: 421: p_buffer += m_var.size;
  4911  0046A0  0101               	movlb	1	; () banked
  4912  0046A2  51E7               	movf	(_m_var+9)& (0+255),w,b
  4913  0046A4  0D01               	mullw	1
  4914  0046A6  50F3               	movf	prodl,w,c
  4915  0046A8  0101               	movlb	1	; () banked
  4916  0046AA  27B9               	addwf	_p_buffer& (0+255),f,b
  4917  0046AC  50F4               	movf	prodh,w,c
  4918  0046AE  0101               	movlb	1	; () banked
  4919  0046B0  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  4920                           
  4921                           ; BSR set to: 1
  4922                           ;main.c: 426: update_variable();
  4923  0046B2  ECBA  F04B         	call	_update_variable	;wreg free
  4924  0046B6                     l21878:
  4925  0046B6  0EFE               	movlw	254
  4926  0046B8  0101               	movlb	1	; () banked
  4927  0046BA  6F89               	movwf	??_main& (0+255),b
  4928  0046BC  0EFF               	movlw	255
  4929  0046BE  0101               	movlb	1	; () banked
  4930  0046C0  6F8A               	movwf	(??_main+1)& (0+255),b
  4931  0046C2  0103               	movlb	3	; () banked
  4932  0046C4  51E0               	movf	main@size& (0+255),w,b
  4933  0046C6  0101               	movlb	1	; () banked
  4934  0046C8  6F8B               	movwf	(??_main+2)& (0+255),b
  4935  0046CA  6B8C               	clrf	(??_main+3)& (0+255),b
  4936  0046CC  0101               	movlb	1	; () banked
  4937  0046CE  5189               	movf	??_main& (0+255),w,b
  4938  0046D0  0101               	movlb	1	; () banked
  4939  0046D2  278B               	addwf	(??_main+2)& (0+255),f,b
  4940  0046D4  0101               	movlb	1	; () banked
  4941  0046D6  518A               	movf	(??_main+1)& (0+255),w,b
  4942  0046D8  0101               	movlb	1	; () banked
  4943  0046DA  238C               	addwfc	(??_main+3)& (0+255),f,b
  4944  0046DC  0E00               	movlw	low _ReceivedDataBuffer
  4945  0046DE  0101               	movlb	1	; () banked
  4946  0046E0  6F8D               	movwf	(??_main+4)& (0+255),b
  4947  0046E2  0E04               	movlw	high _ReceivedDataBuffer
  4948  0046E4  0101               	movlb	1	; () banked
  4949  0046E6  6F8E               	movwf	(??_main+5)& (0+255),b
  4950  0046E8  0E06               	movlw	6
  4951  0046EA  0101               	movlb	1	; () banked
  4952  0046EC  278D               	addwf	(??_main+4)& (0+255),f,b
  4953  0046EE  0E00               	movlw	0
  4954  0046F0  238E               	addwfc	(??_main+5)& (0+255),f,b
  4955  0046F2  0101               	movlb	1	; () banked
  4956  0046F4  1F8D               	comf	(??_main+4)& (0+255),f,b
  4957  0046F6  1F8E               	comf	(??_main+5)& (0+255),f,b
  4958  0046F8  4B8D               	infsnz	(??_main+4)& (0+255),f,b
  4959  0046FA  2B8E               	incf	(??_main+5)& (0+255),f,b
  4960  0046FC  0101               	movlb	1	; () banked
  4961  0046FE  51B9               	movf	_p_buffer& (0+255),w,b
  4962  004700  0101               	movlb	1	; () banked
  4963  004702  278D               	addwf	(??_main+4)& (0+255),f,b
  4964  004704  0101               	movlb	1	; () banked
  4965  004706  51BA               	movf	(_p_buffer+1)& (0+255),w,b
  4966  004708  0101               	movlb	1	; () banked
  4967  00470A  238E               	addwfc	(??_main+5)& (0+255),f,b
  4968  00470C  0101               	movlb	1	; () banked
  4969  00470E  518B               	movf	(??_main+2)& (0+255),w,b
  4970  004710  0101               	movlb	1	; () banked
  4971  004712  5D8D               	subwf	(??_main+4)& (0+255),w,b
  4972  004714  0101               	movlb	1	; () banked
  4973  004716  518E               	movf	(??_main+5)& (0+255),w,b
  4974  004718  0A80               	xorlw	128
  4975  00471A  0101               	movlb	1	; () banked
  4976  00471C  6F8F               	movwf	(??_main+6)& (0+255),b
  4977  00471E  0101               	movlb	1	; () banked
  4978  004720  518C               	movf	(??_main+3)& (0+255),w,b
  4979  004722  0A80               	xorlw	128
  4980  004724  0101               	movlb	1	; () banked
  4981  004726  598F               	subwfb	(??_main+6)& (0+255),w,b
  4982  004728  A0D8               	btfss	status,0,c
  4983  00472A  D7AD               	goto	l21872
  4984                           
  4985                           ; BSR set to: 1
  4986                           ;main.c: 427: }
  4987                           ;main.c: 428: if (last_update)
  4988                           
  4989                           ; BSR set to: 1
  4990  00472C  0103               	movlb	3	; () banked
  4991  00472E  51D7               	movf	main@last_update& (0+255),w,b
  4992  004730  0103               	movlb	3	; () banked
  4993  004732  B4D8               	btfsc	status,2,c
  4994  004734  D04E               	goto	l21900
  4995                           
  4996                           ; BSR set to: 3
  4997                           ;main.c: 429: {
  4998                           ;main.c: 431: send_answer_to_update();
  4999  004736  EC40  F03C         	call	_send_answer_to_update	;wreg free
  5000                           
  5001                           ;main.c: 432: }
  5002                           ;main.c: 433: }
  5003                           ;main.c: 434: }
  5004  00473A  D04B               	goto	l21900
  5005  00473C                     l21884:
  5006                           
  5007                           ;main.c: 435: else
  5008                           ;main.c: 436: {
  5009                           ;main.c: 437: {TxData = 11;};
  5010  00473C  0E0B               	movlw	11
  5011  00473E  0101               	movlb	1	; () banked
  5012  004740  6FC6               	movwf	_TxData& (0+255),b
  5013                           
  5014                           ; BSR set to: 1
  5015                           ;main.c: 438: memcpy(&TxBuffer[TxData], &ReceivedDataBuffer[4], size);
  5016  004742  0101               	movlb	1	; () banked
  5017  004744  51C6               	movf	_TxData& (0+255),w,b
  5018  004746  0D01               	mullw	1
  5019  004748  0EA6               	movlw	low _TxBuffer
  5020  00474A  24F3               	addwf	prodl,w,c
  5021  00474C  0101               	movlb	1	; () banked
  5022  00474E  6F00               	movwf	memcpy@d1& (0+255),b
  5023  004750  0E02               	movlw	high _TxBuffer
  5024  004752  20F4               	addwfc	prodh,w,c
  5025  004754  0101               	movlb	1	; () banked
  5026  004756  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  5027  004758  0E04               	movlw	low (_ReceivedDataBuffer+4)
  5028  00475A  0101               	movlb	1	; () banked
  5029  00475C  6F02               	movwf	memcpy@s1& (0+255),b
  5030  00475E  0E04               	movlw	high (_ReceivedDataBuffer+4)
  5031  004760  0101               	movlb	1	; () banked
  5032  004762  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  5033  004764  C3E0  F104         	movff	main@size,memcpy@n
  5034  004768  0101               	movlb	1	; () banked
  5035  00476A  6B05               	clrf	(memcpy@n+1)& (0+255),b
  5036  00476C  EC91  F059         	call	_memcpy	;wreg free
  5037                           
  5038                           ;main.c: 439: TxData = TxData + size;
  5039  004770  0101               	movlb	1	; () banked
  5040  004772  51C6               	movf	_TxData& (0+255),w,b
  5041  004774  0103               	movlb	3	; () banked
  5042  004776  25E0               	addwf	main@size& (0+255),w,b
  5043  004778  0101               	movlb	1	; () banked
  5044  00477A  6FC6               	movwf	_TxData& (0+255),b
  5045                           
  5046                           ; BSR set to: 1
  5047                           ;main.c: 440: if (ReceivedDataBuffer[4] == 02)
  5048  00477C  0E02               	movlw	2
  5049  00477E  0104               	movlb	4	; () banked
  5050  004780  1904               	xorwf	(_ReceivedDataBuffer+4)& (0+255),w,b
  5051  004782  A4D8               	btfss	status,2,c
  5052  004784  D00F               	goto	l21894
  5053                           
  5054                           ; BSR set to: 4
  5055                           ;main.c: 442: MiApp_UnicastAddress(&shortaddress, 0, 0) == 1;
  5056  004786  0EE1               	movlw	low main@shortaddress
  5057  004788  0101               	movlb	1	; () banked
  5058  00478A  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  5059  00478C  0E03               	movlw	high main@shortaddress
  5060  00478E  0101               	movlb	1	; () banked
  5061  004790  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  5062  004792  0E00               	movlw	0
  5063  004794  0101               	movlb	1	; () banked
  5064  004796  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  5065  004798  0E00               	movlw	0
  5066  00479A  0101               	movlb	1	; () banked
  5067  00479C  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  5068  00479E  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  5069  0047A2  D017               	goto	l21900
  5070  0047A4                     l21894:
  5071                           
  5072                           ;main.c: 443: else
  5073                           ;main.c: 444: MiApp_UnicastAddress(&shortaddress, 0, 1);
  5074  0047A4  0EE1               	movlw	low main@shortaddress
  5075  0047A6  0101               	movlb	1	; () banked
  5076  0047A8  6F7D               	movwf	MiApp_UnicastAddress@DestAddress& (0+255),b
  5077  0047AA  0E03               	movlw	high main@shortaddress
  5078  0047AC  0101               	movlb	1	; () banked
  5079  0047AE  6F7E               	movwf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),b
  5080  0047B0  0E00               	movlw	0
  5081  0047B2  0101               	movlb	1	; () banked
  5082  0047B4  6F7F               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  5083  0047B6  0E01               	movlw	1
  5084  0047B8  0101               	movlb	1	; () banked
  5085  0047BA  6F80               	movwf	MiApp_UnicastAddress@SecEn& (0+255),b
  5086  0047BC  ECDE  F02E         	call	_MiApp_UnicastAddress	;wreg free
  5087                           
  5088                           ;main.c: 454: }
  5089                           
  5090                           ;main.c: 453: break;
  5091                           
  5092                           ;main.c: 451: default:
  5093                           
  5094                           ;main.c: 449: }
  5095                           ;main.c: 450: break;
  5096  0047C0  D008               	goto	l21900
  5097  0047C2                     l21898:
  5098  0047C2  0104               	movlb	4	; () banked
  5099  0047C4  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
  5100                           
  5101                           ; Switch size 1, requested type "space"
  5102                           ; Number of cases is 2, Range of values is 83 to 88
  5103                           ; switch strategies available:
  5104                           ; Name         Instructions Cycles
  5105                           ; simple_byte            7     4 (average)
  5106                           ;	Chosen strategy is simple_byte
  5107  0047C6  0A53               	xorlw	83	; case 83
  5108  0047C8  B4D8               	btfsc	status,2,c
  5109  0047CA  D735               	goto	l1779
  5110  0047CC  0A0B               	xorlw	11	; case 88
  5111  0047CE  B4D8               	btfsc	status,2,c
  5112  0047D0  D730               	goto	l1777
  5113  0047D2                     l21900:
  5114                           
  5115                           ;main.c: 456: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&ReceivedDataBuffer,64);
  5116  0047D2  0E00               	movlw	0
  5117  0047D4  0101               	movlb	1	; () banked
  5118  0047D6  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
  5119  0047D8  0E00               	movlw	low _ReceivedDataBuffer
  5120  0047DA  0101               	movlb	1	; () banked
  5121  0047DC  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
  5122  0047DE  0E04               	movlw	high _ReceivedDataBuffer
  5123  0047E0  0101               	movlb	1	; () banked
  5124  0047E2  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  5125  0047E4  0E40               	movlw	64
  5126  0047E6  0101               	movlb	1	; () banked
  5127  0047E8  6F03               	movwf	USBTransferOnePacket@len& (0+255),b
  5128  0047EA  0E01               	movlw	1
  5129  0047EC  ECA1  F04C         	call	_USBTransferOnePacket
  5130  0047F0  C100  F1B7         	movff	?_USBTransferOnePacket,_USBOutHandle
  5131  0047F4  C101  F1B8         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
  5132                           
  5133                           ;main.c: 457: }
  5134  0047F8  D4F3               	goto	l21750
  5135  0047FA                     l21902:
  5136                           
  5137                           ;main.c: 461: else if (timer_flag == 1)
  5138  0047FA  0101               	movlb	1	; () banked
  5139  0047FC  05CB               	decf	_timer_flag& (0+255),w,b	;volatile
  5140  0047FE  A4D8               	btfss	status,2,c
  5141  004800  D4EF               	goto	l21750
  5142                           
  5143                           ; BSR set to: 1
  5144                           ;main.c: 462: {
  5145                           ;main.c: 463: send_periodic_update();
  5146  004802  ECD0  F038         	call	_send_periodic_update	;wreg free
  5147                           
  5148                           ;main.c: 464: timer_flag = 0;
  5149  004806  0E00               	movlw	0
  5150  004808  0101               	movlb	1	; () banked
  5151  00480A  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  5152                           
  5153                           ; BSR set to: 1
  5154                           
  5155                           ; BSR set to: 1
  5156                           
  5157                           ; BSR set to: 1
  5158                           
  5159                           ; BSR set to: 1
  5160  00480C  D4E9               	goto	l21750
  5161  00480E                     __end_of_main:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           postinc0	equ	0xFEE
  5170                           plusw0	equ	0xFEB
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           plusw2	equ	0xFDB
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function _update_variable *****************
  5182 ;; Defined at:
  5183 ;;		line 610 in file "src/main.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   19
  5204 ;; This function calls:
  5205 ;;		_MiMAC_SetPower
  5206 ;;		_RtccWrOn
  5207 ;;		_labelcmp
  5208 ;;		_mW_ufixed16_to_dBm
  5209 ;; This function is called by:
  5210 ;;		_main
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text1
  5215  009774                     __ptext1:
  5216                           	opt stack 0
  5217  009774                     _update_variable:
  5218                           	opt stack 11
  5219                           
  5220                           ;main.c: 613: if (labelcmp(m_var.label, (uint8_t*)POWER_LABEL) == 1)
  5221                           
  5222                           ;incstack = 0
  5223  009774  0EDE               	movlw	low _m_var
  5224  009776  0101               	movlb	1	; () banked
  5225  009778  6F00               	movwf	labelcmp@p1& (0+255),b
  5226  00977A  0E01               	movlw	high _m_var
  5227  00977C  0101               	movlb	1	; () banked
  5228  00977E  6F01               	movwf	(labelcmp@p1+1)& (0+255),b
  5229  009780  0EC1               	movlw	low _POWER_LABEL
  5230  009782  0101               	movlb	1	; () banked
  5231  009784  6F02               	movwf	labelcmp@p2& (0+255),b
  5232  009786  0E21               	movlw	high _POWER_LABEL
  5233  009788  0101               	movlb	1	; () banked
  5234  00978A  6F03               	movwf	(labelcmp@p2+1)& (0+255),b
  5235  00978C  EC29  F053         	call	_labelcmp	;wreg free
  5236  009790  06E8               	decf	wreg,f,c
  5237  009792  A4D8               	btfss	status,2,c
  5238  009794  D010               	goto	l21002
  5239                           
  5240                           ;main.c: 614: {
  5241                           ;main.c: 615: m_power = mW_ufixed16_to_dBm(m_var.value_byte1, m_var.value_byte2);
  5242  009796  C1E3  F100         	movff	_m_var+5,mW_ufixed16_to_dBm@value2
  5243  00979A  0101               	movlb	1	; () banked
  5244  00979C  51E2               	movf	(_m_var+4)& (0+255),w,b
  5245  00979E  EC13  F04F         	call	_mW_ufixed16_to_dBm
  5246  0097A2  0101               	movlb	1	; () banked
  5247  0097A4  6FC8               	movwf	_m_power& (0+255),b
  5248                           
  5249                           ;main.c: 616: MiMAC_SetPower(m_power);
  5250  0097A6  0101               	movlb	1	; () banked
  5251  0097A8  51C8               	movf	_m_power& (0+255),w,b
  5252  0097AA  EC2A  F05C         	call	_MiMAC_SetPower
  5253                           
  5254                           ;main.c: 617: Pwr_updated = 1;
  5255  0097AE  0E01               	movlw	1
  5256  0097B0  0100               	movlb	0	; () banked
  5257  0097B2  6F9A               	movwf	_Pwr_updated& (0+255),b
  5258                           
  5259                           ;main.c: 618: }
  5260  0097B4  0012               	return	
  5261  0097B6                     l21002:
  5262                           
  5263                           ;main.c: 619: else if ((labelcmp(m_var.label, (uint8_t*)UPDATE_FREQUENCY_LABEL) == 1) &&
      +                           (m_var.unit == 4) && (m_var.type == 0))
  5264  0097B6  0EDE               	movlw	low _m_var
  5265  0097B8  0101               	movlb	1	; () banked
  5266  0097BA  6F00               	movwf	labelcmp@p1& (0+255),b
  5267  0097BC  0E01               	movlw	high _m_var
  5268  0097BE  0101               	movlb	1	; () banked
  5269  0097C0  6F01               	movwf	(labelcmp@p1+1)& (0+255),b
  5270  0097C2  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
  5271  0097C4  0101               	movlb	1	; () banked
  5272  0097C6  6F02               	movwf	labelcmp@p2& (0+255),b
  5273  0097C8  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  5274  0097CA  0101               	movlb	1	; () banked
  5275  0097CC  6F03               	movwf	(labelcmp@p2+1)& (0+255),b
  5276  0097CE  EC29  F053         	call	_labelcmp	;wreg free
  5277  0097D2  06E8               	decf	wreg,f,c
  5278  0097D4  A4D8               	btfss	status,2,c
  5279  0097D6  0012               	return	
  5280  0097D8  0E04               	movlw	4
  5281  0097DA  0101               	movlb	1	; () banked
  5282  0097DC  19E4               	xorwf	(_m_var+6)& (0+255),w,b
  5283  0097DE  A4D8               	btfss	status,2,c
  5284  0097E0  0012               	return	
  5285                           
  5286                           ; BSR set to: 1
  5287  0097E2  0101               	movlb	1	; () banked
  5288  0097E4  51E1               	movf	(_m_var+3)& (0+255),w,b
  5289  0097E6  A4D8               	btfss	status,2,c
  5290  0097E8  0012               	return	
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;main.c: 621: {
  5294                           ;main.c: 622: if (m_var.value_byte1 == 0)
  5295  0097EA  0101               	movlb	1	; () banked
  5296  0097EC  51E2               	movf	(_m_var+4)& (0+255),w,b
  5297  0097EE  A4D8               	btfss	status,2,c
  5298  0097F0  D019               	goto	l1813
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;main.c: 623: {
  5302                           ;main.c: 624: m_update_frequency = 0;
  5303  0097F2  0E00               	movlw	0
  5304  0097F4  0101               	movlb	1	; () banked
  5305  0097F6  6FFA               	movwf	_m_update_frequency& (0+255),b	;volatile
  5306                           
  5307                           ; BSR set to: 1
  5308                           ;main.c: 625: RtccWrOn();
  5309  0097F8  ECAF  F05D         	call	_RtccWrOn	;wreg free
  5310                           
  5311                           ;main.c: 626: RTCCFGbits.RTCPTR0 = 0;
  5312  0097FC  010F               	movlb	15	; () banked
  5313  0097FE  913F               	bcf	63,0,b	;volatile
  5314                           
  5315                           ; BSR set to: 15
  5316                           ;main.c: 627: RTCCFGbits.RTCPTR1 = 0;
  5317  009800  010F               	movlb	15	; () banked
  5318  009802  933F               	bcf	63,1,b	;volatile
  5319                           
  5320                           ; BSR set to: 15
  5321                           ;main.c: 628: RTCVALHbits.RTCVALH = 0x00;
  5322  009804  0E00               	movlw	0
  5323  009806  010F               	movlb	15	; () banked
  5324  009808  6F3B               	movwf	59,b	;volatile
  5325                           
  5326                           ; BSR set to: 15
  5327                           ;main.c: 629: RTCVALLbits.RTCVALL = 0x00;
  5328  00980A  0E00               	movlw	0
  5329  00980C  010F               	movlb	15	; () banked
  5330  00980E  6F3A               	movwf	58,b	;volatile
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;main.c: 630: ALRMCFGbits.AMASK = 0b0010;
  5334  009810  010F               	movlb	15	; () banked
  5335  009812  5147               	movf	71,w,b	;volatile
  5336  009814  0BC3               	andlw	-61
  5337  009816  0908               	iorlw	8
  5338  009818  6F47               	movwf	71,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;main.c: 631: (RTCCFGbits.RTCWREN = 0);
  5342  00981A  010F               	movlb	15	; () banked
  5343  00981C  9B3F               	bcf	63,5,b	;volatile
  5344                           
  5345                           ; BSR set to: 15
  5346                           ;main.c: 632: timer_count = 1;
  5347  00981E  0E01               	movlw	1
  5348  009820  6E5D               	movwf	_timer_count,c	;volatile
  5349  009822  D017               	goto	l21046
  5350  009824                     l1813:
  5351                           
  5352                           ; BSR set to: 1
  5353                           ;main.c: 635: else
  5354                           ;main.c: 636: {
  5355                           ;main.c: 637: m_update_frequency = m_var.value_byte1;
  5356  009824  C1E2  F1FA         	movff	_m_var+4,_m_update_frequency	;volatile
  5357                           
  5358                           ; BSR set to: 1
  5359                           ;main.c: 638: RtccWrOn();
  5360  009828  ECAF  F05D         	call	_RtccWrOn	;wreg free
  5361                           
  5362                           ;main.c: 639: RTCCFGbits.RTCPTR0 = 0;
  5363  00982C  010F               	movlb	15	; () banked
  5364  00982E  913F               	bcf	63,0,b	;volatile
  5365                           
  5366                           ; BSR set to: 15
  5367                           ;main.c: 640: RTCCFGbits.RTCPTR1 = 0;
  5368  009830  010F               	movlb	15	; () banked
  5369  009832  933F               	bcf	63,1,b	;volatile
  5370                           
  5371                           ; BSR set to: 15
  5372                           ;main.c: 641: RTCVALHbits.RTCVALH = 0x00;
  5373  009834  0E00               	movlw	0
  5374  009836  010F               	movlb	15	; () banked
  5375  009838  6F3B               	movwf	59,b	;volatile
  5376                           
  5377                           ; BSR set to: 15
  5378                           ;main.c: 642: RTCVALLbits.RTCVALL = 0x00;
  5379  00983A  0E00               	movlw	0
  5380  00983C  010F               	movlb	15	; () banked
  5381  00983E  6F3A               	movwf	58,b	;volatile
  5382                           
  5383                           ; BSR set to: 15
  5384                           ;main.c: 643: ALRMCFGbits.AMASK = 0b0011;
  5385  009840  010F               	movlb	15	; () banked
  5386  009842  5147               	movf	71,w,b	;volatile
  5387  009844  0BC3               	andlw	-61
  5388  009846  090C               	iorlw	12
  5389  009848  6F47               	movwf	71,b	;volatile
  5390                           
  5391                           ; BSR set to: 15
  5392                           ;main.c: 644: (RTCCFGbits.RTCWREN = 0);
  5393  00984A  010F               	movlb	15	; () banked
  5394  00984C  9B3F               	bcf	63,5,b	;volatile
  5395                           
  5396                           ; BSR set to: 15
  5397                           ;main.c: 645: timer_count = m_update_frequency;
  5398  00984E  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
  5399  009852                     l21046:
  5400                           
  5401                           ; BSR set to: 15
  5402                           ;main.c: 646: timer_flag = 0;
  5403  009852  0E00               	movlw	0
  5404  009854  0101               	movlb	1	; () banked
  5405  009856  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  5406                           
  5407                           ; BSR set to: 1
  5408                           ;main.c: 647: }
  5409                           ;main.c: 648: UpF_updated = 1;
  5410                           
  5411                           ; BSR set to: 1
  5412  009858  0E01               	movlw	1
  5413  00985A  0100               	movlb	0	; () banked
  5414  00985C  6F9E               	movwf	_UpF_updated& (0+255),b
  5415                           
  5416                           ; BSR set to: 0
  5417  00985E  0012               	return	
  5418  009860                     __end_of_update_variable:
  5419                           	opt stack 0
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           prodh	equ	0xFF4
  5425                           prodl	equ	0xFF3
  5426                           postinc0	equ	0xFEE
  5427                           plusw0	equ	0xFEB
  5428                           wreg	equ	0xFE8
  5429                           postdec1	equ	0xFE5
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           indf2	equ	0xFDF
  5433                           plusw2	equ	0xFDB
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8
  5437                           
  5438 ;; *************** function _mW_ufixed16_to_dBm *****************
  5439 ;; Defined at:
  5440 ;;		line 22 in file "../../muta/muta_messages.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  value1          1    wreg     unsigned char 
  5443 ;;  value2          1    0[BANK1 ] unsigned char 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  value1          1    1[BANK1 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5455 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;Total ram usage:        2 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:   16
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_update_variable
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text2
  5470  009E26                     __ptext2:
  5471                           	opt stack 0
  5472  009E26                     _mW_ufixed16_to_dBm:
  5473                           	opt stack 13
  5474                           
  5475                           ;incstack = 0
  5476                           ;mW_ufixed16_to_dBm@value1 stored from wreg
  5477  009E26  0101               	movlb	1	; () banked
  5478  009E28  6F01               	movwf	mW_ufixed16_to_dBm@value1& (0+255),b
  5479                           
  5480                           ;muta_messages.c: 24: if (value1==20 && value2==0)
  5481  009E2A  0E14               	movlw	20
  5482  009E2C  0101               	movlb	1	; () banked
  5483  009E2E  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5484  009E30  A4D8               	btfss	status,2,c
  5485  009E32  D007               	goto	l19310
  5486                           
  5487                           ; BSR set to: 1
  5488  009E34  0101               	movlb	1	; () banked
  5489  009E36  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5490  009E38  0101               	movlb	1	; () banked
  5491  009E3A  A4D8               	btfss	status,2,c
  5492  009E3C  D002               	goto	l19310
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;muta_messages.c: 25: return 0x00;
  5496  009E3E  0E00               	movlw	0
  5497                           
  5498                           ; BSR set to: 1
  5499                           
  5500                           ; BSR set to: 1
  5501  009E40  0012               	return	
  5502  009E42                     l19310:
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;muta_messages.c: 26: else if (value1==10 && value2==0)
  5506  009E42  0E0A               	movlw	10
  5507  009E44  0101               	movlb	1	; () banked
  5508  009E46  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5509  009E48  A4D8               	btfss	status,2,c
  5510  009E4A  D007               	goto	l19320
  5511                           
  5512                           ; BSR set to: 1
  5513  009E4C  0101               	movlb	1	; () banked
  5514  009E4E  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5515  009E50  0101               	movlb	1	; () banked
  5516  009E52  A4D8               	btfss	status,2,c
  5517  009E54  D002               	goto	l19320
  5518                           
  5519                           ; BSR set to: 1
  5520                           ;muta_messages.c: 27: return 0x01;
  5521  009E56  0E01               	movlw	1
  5522                           
  5523                           ; BSR set to: 1
  5524                           
  5525                           ; BSR set to: 1
  5526  009E58  0012               	return	
  5527  009E5A                     l19320:
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;muta_messages.c: 28: else if (value1==5 && value2==0)
  5531  009E5A  0E05               	movlw	5
  5532  009E5C  0101               	movlb	1	; () banked
  5533  009E5E  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5534  009E60  A4D8               	btfss	status,2,c
  5535  009E62  D007               	goto	l19330
  5536                           
  5537                           ; BSR set to: 1
  5538  009E64  0101               	movlb	1	; () banked
  5539  009E66  5100               	movf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5540  009E68  0101               	movlb	1	; () banked
  5541  009E6A  A4D8               	btfss	status,2,c
  5542  009E6C  D002               	goto	l19330
  5543                           
  5544                           ; BSR set to: 1
  5545                           ;muta_messages.c: 29: return 0x02;
  5546  009E6E  0E02               	movlw	2
  5547                           
  5548                           ; BSR set to: 1
  5549                           
  5550                           ; BSR set to: 1
  5551  009E70  0012               	return	
  5552  009E72                     l19330:
  5553                           
  5554                           ; BSR set to: 1
  5555                           ;muta_messages.c: 30: else if (value1==2 && value2==50)
  5556  009E72  0E02               	movlw	2
  5557  009E74  0101               	movlb	1	; () banked
  5558  009E76  1901               	xorwf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5559  009E78  A4D8               	btfss	status,2,c
  5560  009E7A  D007               	goto	l19340
  5561                           
  5562                           ; BSR set to: 1
  5563  009E7C  0E32               	movlw	50
  5564  009E7E  0101               	movlb	1	; () banked
  5565  009E80  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5566  009E82  A4D8               	btfss	status,2,c
  5567  009E84  D002               	goto	l19340
  5568                           
  5569                           ; BSR set to: 1
  5570                           ;muta_messages.c: 31: return 0x03;
  5571  009E86  0E03               	movlw	3
  5572                           
  5573                           ; BSR set to: 1
  5574                           
  5575                           ; BSR set to: 1
  5576  009E88  0012               	return	
  5577  009E8A                     l19340:
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;muta_messages.c: 32: else if (value1==1 && value2==25)
  5581  009E8A  0101               	movlb	1	; () banked
  5582  009E8C  0501               	decf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5583  009E8E  A4D8               	btfss	status,2,c
  5584  009E90  D007               	goto	l19350
  5585                           
  5586                           ; BSR set to: 1
  5587  009E92  0E19               	movlw	25
  5588  009E94  0101               	movlb	1	; () banked
  5589  009E96  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5590  009E98  A4D8               	btfss	status,2,c
  5591  009E9A  D002               	goto	l19350
  5592                           
  5593                           ; BSR set to: 1
  5594                           ;muta_messages.c: 33: return 0x04;
  5595  009E9C  0E04               	movlw	4
  5596                           
  5597                           ; BSR set to: 1
  5598                           
  5599                           ; BSR set to: 1
  5600  009E9E  0012               	return	
  5601  009EA0                     l19350:
  5602                           
  5603                           ; BSR set to: 1
  5604                           ;muta_messages.c: 34: else if (value1==0 && value2==60)
  5605  009EA0  0101               	movlb	1	; () banked
  5606  009EA2  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5607  009EA4  0101               	movlb	1	; () banked
  5608  009EA6  A4D8               	btfss	status,2,c
  5609  009EA8  D007               	goto	l19360
  5610                           
  5611                           ; BSR set to: 1
  5612  009EAA  0E3C               	movlw	60
  5613  009EAC  0101               	movlb	1	; () banked
  5614  009EAE  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5615  009EB0  A4D8               	btfss	status,2,c
  5616  009EB2  D002               	goto	l19360
  5617                           
  5618                           ; BSR set to: 1
  5619                           ;muta_messages.c: 35: return 0x05;
  5620  009EB4  0E05               	movlw	5
  5621                           
  5622                           ; BSR set to: 1
  5623                           
  5624                           ; BSR set to: 1
  5625  009EB6  0012               	return	
  5626  009EB8                     l19360:
  5627                           
  5628                           ; BSR set to: 1
  5629                           ;muta_messages.c: 36: else if (value1==0 && value2==30)
  5630  009EB8  0101               	movlb	1	; () banked
  5631  009EBA  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5632  009EBC  0101               	movlb	1	; () banked
  5633  009EBE  A4D8               	btfss	status,2,c
  5634  009EC0  D007               	goto	l19370
  5635                           
  5636                           ; BSR set to: 1
  5637  009EC2  0E1E               	movlw	30
  5638  009EC4  0101               	movlb	1	; () banked
  5639  009EC6  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5640  009EC8  A4D8               	btfss	status,2,c
  5641  009ECA  D002               	goto	l19370
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;muta_messages.c: 37: return 0x06;
  5645  009ECC  0E06               	movlw	6
  5646                           
  5647                           ; BSR set to: 1
  5648                           
  5649                           ; BSR set to: 1
  5650  009ECE  0012               	return	
  5651  009ED0                     l19370:
  5652                           
  5653                           ; BSR set to: 1
  5654                           ;muta_messages.c: 38: else if (value1==0 && value2==15)
  5655  009ED0  0101               	movlb	1	; () banked
  5656  009ED2  5101               	movf	mW_ufixed16_to_dBm@value1& (0+255),w,b
  5657  009ED4  0101               	movlb	1	; () banked
  5658  009ED6  A4D8               	btfss	status,2,c
  5659  009ED8  D007               	goto	l19380
  5660                           
  5661                           ; BSR set to: 1
  5662  009EDA  0E0F               	movlw	15
  5663  009EDC  0101               	movlb	1	; () banked
  5664  009EDE  1900               	xorwf	mW_ufixed16_to_dBm@value2& (0+255),w,b
  5665  009EE0  A4D8               	btfss	status,2,c
  5666  009EE2  D002               	goto	l19380
  5667                           
  5668                           ; BSR set to: 1
  5669                           ;muta_messages.c: 39: return 0x07;
  5670  009EE4  0E07               	movlw	7
  5671                           
  5672                           ; BSR set to: 1
  5673                           
  5674                           ; BSR set to: 1
  5675  009EE6  0012               	return	
  5676  009EE8                     l19380:
  5677                           
  5678                           ; BSR set to: 1
  5679                           ;muta_messages.c: 40: else
  5680                           ;muta_messages.c: 41: return 0x07;
  5681  009EE8  0E07               	movlw	7
  5682                           
  5683                           ; BSR set to: 1
  5684                           
  5685                           ; BSR set to: 1
  5686                           
  5687                           ; BSR set to: 1
  5688                           
  5689                           ; BSR set to: 1
  5690                           
  5691                           ; BSR set to: 1
  5692                           
  5693                           ; BSR set to: 1
  5694                           
  5695                           ; BSR set to: 1
  5696                           
  5697                           ; BSR set to: 1
  5698  009EEA  0012               	return	
  5699  009EEC                     __end_of_mW_ufixed16_to_dBm:
  5700                           	opt stack 0
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           postinc0	equ	0xFEE
  5708                           plusw0	equ	0xFEB
  5709                           wreg	equ	0xFE8
  5710                           postdec1	equ	0xFE5
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           indf2	equ	0xFDF
  5714                           plusw2	equ	0xFDB
  5715                           fsr2h	equ	0xFDA
  5716                           fsr2l	equ	0xFD9
  5717                           status	equ	0xFD8
  5718                           
  5719 ;; *************** function _labelcmp *****************
  5720 ;; Defined at:
  5721 ;;		line 16 in file "../../muta/muta_messages.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  p1              2    0[BANK1 ] PTR unsigned char 
  5724 ;;		 -> m_var(10), 
  5725 ;;  p2              2    2[BANK1 ] PTR unsigned char 
  5726 ;;		 -> UPDATE_FREQUENCY_LABEL(4), POWER_LABEL(4), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      unsigned char 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5738 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;Total ram usage:        8 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:   16
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_update_variable
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text3
  5753  00A652                     __ptext3:
  5754                           	opt stack 0
  5755  00A652                     _labelcmp:
  5756                           	opt stack 13
  5757                           
  5758                           ;muta_messages.c: 18: return (*p1==*p2)&&(*(p1+1)==*(p2+1))&&(*(p1+2)==*(p2+2));
  5759                           
  5760                           ; BSR set to: 1
  5761                           ;incstack = 0
  5762  00A652  0E00               	movlw	0
  5763  00A654  0101               	movlb	1	; () banked
  5764  00A656  6F07               	movwf	_labelcmp$5111& (0+255),b
  5765                           
  5766                           ; BSR set to: 1
  5767  00A658  C100  FFD9         	movff	labelcmp@p1,fsr2l
  5768  00A65C  C101  FFDA         	movff	labelcmp@p1+1,fsr2h
  5769  00A660  50DF               	movf	indf2,w,c
  5770  00A662  0101               	movlb	1	; () banked
  5771  00A664  6F04               	movwf	??_labelcmp& (0+255),b
  5772  00A666  C102  FFF6         	movff	labelcmp@p2,tblptrl
  5773  00A66A  C103  FFF7         	movff	labelcmp@p2+1,tblptrh
  5774  00A66E                     	if	0	;tblptru may be non-zero
  5775  00A66E                     	endif
  5776  00A66E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5777  00A66E  0E00               	movlw	low (__mediumconst shr (0+16))
  5778  00A670  6EF8               	movwf	tblptru,c
  5779  00A672                     	endif
  5780  00A672  0008               	tblrd		*
  5781  00A674  50F5               	movf	tablat,w,c
  5782  00A676  0101               	movlb	1	; () banked
  5783  00A678  1904               	xorwf	??_labelcmp& (0+255),w,b
  5784  00A67A  A4D8               	btfss	status,2,c
  5785  00A67C  D043               	goto	l1977
  5786                           
  5787                           ; BSR set to: 1
  5788  00A67E  0101               	movlb	1	; () banked
  5789  00A680  EE20 F001          	lfsr	2,1
  5790  00A684  5100               	movf	labelcmp@p1& (0+255),w,b
  5791  00A686  26D9               	addwf	fsr2l,f,c
  5792  00A688  5101               	movf	(labelcmp@p1+1)& (0+255),w,b
  5793  00A68A  22DA               	addwfc	fsr2h,f,c
  5794  00A68C  50DF               	movf	indf2,w,c
  5795  00A68E  0101               	movlb	1	; () banked
  5796  00A690  6F04               	movwf	??_labelcmp& (0+255),b
  5797  00A692  0E01               	movlw	1
  5798  00A694  0101               	movlb	1	; () banked
  5799  00A696  2502               	addwf	labelcmp@p2& (0+255),w,b
  5800  00A698  0101               	movlb	1	; () banked
  5801  00A69A  6F05               	movwf	(??_labelcmp+1)& (0+255),b
  5802  00A69C  0E00               	movlw	0
  5803  00A69E  0101               	movlb	1	; () banked
  5804  00A6A0  2103               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  5805  00A6A2  0101               	movlb	1	; () banked
  5806  00A6A4  6F06               	movwf	(??_labelcmp+2)& (0+255),b
  5807  00A6A6  C105  FFF6         	movff	??_labelcmp+1,tblptrl
  5808  00A6AA  C106  FFF7         	movff	??_labelcmp+2,tblptrh
  5809  00A6AE                     	if	0	;tblptru may be non-zero
  5810  00A6AE                     	endif
  5811  00A6AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5812  00A6AE  0E00               	movlw	low (__mediumconst shr (0+16))
  5813  00A6B0  6EF8               	movwf	tblptru,c
  5814  00A6B2                     	endif
  5815  00A6B2  0008               	tblrd		*
  5816  00A6B4  50F5               	movf	tablat,w,c
  5817  00A6B6  0101               	movlb	1	; () banked
  5818  00A6B8  1904               	xorwf	??_labelcmp& (0+255),w,b
  5819  00A6BA  A4D8               	btfss	status,2,c
  5820  00A6BC  D023               	goto	l1977
  5821                           
  5822                           ; BSR set to: 1
  5823  00A6BE  0101               	movlb	1	; () banked
  5824  00A6C0  EE20 F002          	lfsr	2,2
  5825  00A6C4  5100               	movf	labelcmp@p1& (0+255),w,b
  5826  00A6C6  26D9               	addwf	fsr2l,f,c
  5827  00A6C8  5101               	movf	(labelcmp@p1+1)& (0+255),w,b
  5828  00A6CA  22DA               	addwfc	fsr2h,f,c
  5829  00A6CC  50DF               	movf	indf2,w,c
  5830  00A6CE  0101               	movlb	1	; () banked
  5831  00A6D0  6F04               	movwf	??_labelcmp& (0+255),b
  5832  00A6D2  0E02               	movlw	2
  5833  00A6D4  0101               	movlb	1	; () banked
  5834  00A6D6  2502               	addwf	labelcmp@p2& (0+255),w,b
  5835  00A6D8  0101               	movlb	1	; () banked
  5836  00A6DA  6F05               	movwf	(??_labelcmp+1)& (0+255),b
  5837  00A6DC  0E00               	movlw	0
  5838  00A6DE  0101               	movlb	1	; () banked
  5839  00A6E0  2103               	addwfc	(labelcmp@p2+1)& (0+255),w,b
  5840  00A6E2  0101               	movlb	1	; () banked
  5841  00A6E4  6F06               	movwf	(??_labelcmp+2)& (0+255),b
  5842  00A6E6  C105  FFF6         	movff	??_labelcmp+1,tblptrl
  5843  00A6EA  C106  FFF7         	movff	??_labelcmp+2,tblptrh
  5844  00A6EE                     	if	0	;tblptru may be non-zero
  5845  00A6EE                     	endif
  5846  00A6EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5847  00A6EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5848  00A6F0  6EF8               	movwf	tblptru,c
  5849  00A6F2                     	endif
  5850  00A6F2  0008               	tblrd		*
  5851  00A6F4  50F5               	movf	tablat,w,c
  5852  00A6F6  0101               	movlb	1	; () banked
  5853  00A6F8  1904               	xorwf	??_labelcmp& (0+255),w,b
  5854  00A6FA  A4D8               	btfss	status,2,c
  5855  00A6FC  D003               	goto	l1977
  5856                           
  5857                           ; BSR set to: 1
  5858  00A6FE  0E01               	movlw	1
  5859  00A700  0101               	movlb	1	; () banked
  5860  00A702  6F07               	movwf	_labelcmp$5111& (0+255),b
  5861  00A704                     l1977:
  5862                           
  5863                           ; BSR set to: 1
  5864  00A704  0101               	movlb	1	; () banked
  5865  00A706  5107               	movf	_labelcmp$5111& (0+255),w,b
  5866  00A708  0012               	return	
  5867  00A70A                     __end_of_labelcmp:
  5868                           	opt stack 0
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           prodh	equ	0xFF4
  5874                           prodl	equ	0xFF3
  5875                           postinc0	equ	0xFEE
  5876                           plusw0	equ	0xFEB
  5877                           wreg	equ	0xFE8
  5878                           postdec1	equ	0xFE5
  5879                           fsr1h	equ	0xFE2
  5880                           fsr1l	equ	0xFE1
  5881                           indf2	equ	0xFDF
  5882                           plusw2	equ	0xFDB
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _MiMAC_SetPower *****************
  5888 ;; Defined at:
  5889 ;;		line 537 in file "src/miwi/drv_mrf_miwi_89xa.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  outputPower     1    wreg     unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  outputPower     1    8[BANK1 ] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      unsigned char 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5906 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5907 ;;Total ram usage:        3 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:   18
  5910 ;; This function calls:
  5911 ;;		_RegisterSet
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;;		_update_variable
  5915 ;;		_adapt_power_level
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text4
  5920  00B854                     __ptext4:
  5921                           	opt stack 0
  5922  00B854                     _MiMAC_SetPower:
  5923                           	opt stack 11
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;incstack = 0
  5927                           ;MiMAC_SetPower@outputPower stored from wreg
  5928  00B854  0101               	movlb	1	; () banked
  5929  00B856  6F08               	movwf	MiMAC_SetPower@outputPower& (0+255),b
  5930                           
  5931                           ;drv_mrf_miwi_89xa.c: 539: if( outputPower > 0x07 )
  5932  00B858  0E07               	movlw	7
  5933  00B85A  0101               	movlb	1	; () banked
  5934  00B85C  6508               	cpfsgt	MiMAC_SetPower@outputPower& (0+255),b
  5935  00B85E  D001               	goto	l18996
  5936  00B860  0012               	return	
  5937  00B862                     l18996:
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;drv_mrf_miwi_89xa.c: 542: }
  5941                           ;drv_mrf_miwi_89xa.c: 543: RegisterSet(0x3400 | ((0xF0 | (0x00<<1)) & 0xF0) | (outputPow
      +                          er<<1));
  5942  00B862  0101               	movlb	1	; () banked
  5943  00B864  5108               	movf	MiMAC_SetPower@outputPower& (0+255),w,b
  5944  00B866  0101               	movlb	1	; () banked
  5945  00B868  6F06               	movwf	??_MiMAC_SetPower& (0+255),b
  5946  00B86A  6B07               	clrf	(??_MiMAC_SetPower+1)& (0+255),b
  5947  00B86C  90D8               	bcf	status,0,c
  5948  00B86E  0101               	movlb	1	; () banked
  5949  00B870  3706               	rlcf	??_MiMAC_SetPower& (0+255),f,b
  5950  00B872  3707               	rlcf	(??_MiMAC_SetPower+1)& (0+255),f,b
  5951  00B874  0EF0               	movlw	240
  5952  00B876  0101               	movlb	1	; () banked
  5953  00B878  1106               	iorwf	??_MiMAC_SetPower& (0+255),w,b
  5954  00B87A  0101               	movlb	1	; () banked
  5955  00B87C  6F02               	movwf	RegisterSet@setting& (0+255),b
  5956  00B87E  0E34               	movlw	52
  5957  00B880  0101               	movlb	1	; () banked
  5958  00B882  1107               	iorwf	(??_MiMAC_SetPower+1)& (0+255),w,b
  5959  00B884  0101               	movlb	1	; () banked
  5960  00B886  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
  5961  00B888  EC01  F05B         	call	_RegisterSet	;wreg free
  5962  00B88C  0012               	return	
  5963  00B88E                     __end_of_MiMAC_SetPower:
  5964                           	opt stack 0
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           postinc0	equ	0xFEE
  5972                           plusw0	equ	0xFEB
  5973                           wreg	equ	0xFE8
  5974                           postdec1	equ	0xFE5
  5975                           fsr1h	equ	0xFE2
  5976                           fsr1l	equ	0xFE1
  5977                           indf2	equ	0xFDF
  5978                           plusw2	equ	0xFDB
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _update_LED *****************
  5984 ;; Defined at:
  5985 ;;		line 732 in file "src/main.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  2  203[None  ] int 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:   16
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text5
  6014  00B384                     __ptext5:
  6015                           	opt stack 0
  6016  00B384                     _update_LED:
  6017                           	opt stack 14
  6018                           
  6019                           ;main.c: 734: switch(status_led)
  6020                           
  6021                           ;incstack = 0
  6022  00B384  D021               	goto	l19962
  6023  00B386                     l1858:
  6024                           
  6025                           ;main.c: 738: CCP1CONbits.DC1B0 = 0;
  6026  00B386  98BA               	bcf	4026,4,c	;volatile
  6027                           
  6028                           ;main.c: 739: CCP1CONbits.DC1B1 = 0;
  6029  00B388  9ABA               	bcf	4026,5,c	;volatile
  6030                           
  6031                           ;main.c: 740: CCPR1L = 0;
  6032  00B38A  0E00               	movlw	0
  6033  00B38C  6EBB               	movwf	4027,c	;volatile
  6034                           
  6035                           ;main.c: 741: LED_increasing = 1;
  6036  00B38E  0E01               	movlw	1
  6037  00B390  6E45               	movwf	_LED_increasing,c	;volatile
  6038                           
  6039                           ;main.c: 742: break;
  6040  00B392  0012               	return	
  6041  00B394                     l1860:
  6042                           
  6043                           ;main.c: 746: CCP1CONbits.DC1B0 = 1023 & 1;
  6044  00B394  88BA               	bsf	4026,4,c	;volatile
  6045                           
  6046                           ;main.c: 747: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
  6047  00B396  8ABA               	bsf	4026,5,c	;volatile
  6048                           
  6049                           ;main.c: 748: CCPR1L = (1023 >> 2);
  6050  00B398  68BB               	setf	4027,c	;volatile
  6051                           
  6052                           ;main.c: 749: repeat_full = 4;
  6053  00B39A  0E04               	movlw	4
  6054  00B39C  6E53               	movwf	_repeat_full,c	;volatile
  6055                           
  6056                           ;main.c: 750: break;
  6057  00B39E  0012               	return	
  6058  00B3A0                     l19948:
  6059                           
  6060                           ;main.c: 753: T4CONbits.T4CKPS = 0b01;
  6061  00B3A0  5076               	movf	3958,w,c	;volatile
  6062  00B3A2  0BFC               	andlw	-4
  6063  00B3A4  0901               	iorlw	1
  6064  00B3A6  6E76               	movwf	3958,c	;volatile
  6065                           
  6066                           ;main.c: 755: CCP1CONbits.DC1B0 = 235 & 1;
  6067  00B3A8  88BA               	bsf	4026,4,c	;volatile
  6068                           
  6069                           ;main.c: 756: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  6070  00B3AA  8ABA               	bsf	4026,5,c	;volatile
  6071                           
  6072                           ;main.c: 757: CCPR1L = (235 >> 2);
  6073  00B3AC  0E3A               	movlw	58
  6074  00B3AE  6EBB               	movwf	4027,c	;volatile
  6075                           
  6076                           ;main.c: 758: LED_increasing = 0;
  6077  00B3B0  0E00               	movlw	0
  6078  00B3B2  6E45               	movwf	_LED_increasing,c	;volatile
  6079                           
  6080                           ;main.c: 759: break;
  6081  00B3B4  0012               	return	
  6082  00B3B6                     l19954:
  6083                           
  6084                           ;main.c: 762: T4CONbits.T4CKPS = 0b11;
  6085  00B3B6  0E03               	movlw	3
  6086  00B3B8  1276               	iorwf	3958,f,c	;volatile
  6087                           
  6088                           ;main.c: 764: CCP1CONbits.DC1B0 = 235 & 1;
  6089  00B3BA  88BA               	bsf	4026,4,c	;volatile
  6090                           
  6091                           ;main.c: 765: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
  6092  00B3BC  8ABA               	bsf	4026,5,c	;volatile
  6093                           
  6094                           ;main.c: 766: CCPR1L = (235 >> 2);
  6095  00B3BE  0E3A               	movlw	58
  6096  00B3C0  6EBB               	movwf	4027,c	;volatile
  6097                           
  6098                           ;main.c: 767: LED_increasing = 0;
  6099  00B3C2  0E00               	movlw	0
  6100  00B3C4  6E45               	movwf	_LED_increasing,c	;volatile
  6101                           
  6102                           ;main.c: 769: }
  6103                           
  6104                           ;main.c: 768: break;
  6105  00B3C6  0012               	return	
  6106  00B3C8                     l19962:
  6107  00B3C8  5055               	movf	_status_led,w,c	;volatile
  6108                           
  6109                           ; Switch size 1, requested type "space"
  6110                           ; Number of cases is 4, Range of values is 0 to 3
  6111                           ; switch strategies available:
  6112                           ; Name         Instructions Cycles
  6113                           ; simple_byte           13     7 (average)
  6114                           ;	Chosen strategy is simple_byte
  6115  00B3CA  0A00               	xorlw	0	; case 0
  6116  00B3CC  B4D8               	btfsc	status,2,c
  6117  00B3CE  D7DB               	goto	l1858
  6118  00B3D0  0A01               	xorlw	1	; case 1
  6119  00B3D2  B4D8               	btfsc	status,2,c
  6120  00B3D4  D7E5               	goto	l19948
  6121  00B3D6  0A03               	xorlw	3	; case 2
  6122  00B3D8  B4D8               	btfsc	status,2,c
  6123  00B3DA  D7ED               	goto	l19954
  6124  00B3DC  0A01               	xorlw	1	; case 3
  6125  00B3DE  A4D8               	btfss	status,2,c
  6126  00B3E0  0012               	return	
  6127  00B3E2  D7D8               	goto	l1860
  6128  00B3E4                     __end_of_update_LED:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           postinc0	equ	0xFEE
  6137                           plusw0	equ	0xFEB
  6138                           wreg	equ	0xFE8
  6139                           postdec1	equ	0xFE5
  6140                           fsr1h	equ	0xFE2
  6141                           fsr1l	equ	0xFE1
  6142                           indf2	equ	0xFDF
  6143                           plusw2	equ	0xFDB
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _timer_reset *****************
  6149 ;; Defined at:
  6150 ;;		line 652 in file "src/main.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;		None               void
  6157 ;; Registers used:
  6158 ;;		wreg, status,2
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:   16
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text6
  6179  00BB2C                     __ptext6:
  6180                           	opt stack 0
  6181  00BB2C                     _timer_reset:
  6182                           	opt stack 14
  6183                           
  6184                           ;main.c: 661: if (m_update_frequency == 0)
  6185                           
  6186                           ;incstack = 0
  6187  00BB2C  0101               	movlb	1	; () banked
  6188  00BB2E  51FA               	movf	_m_update_frequency& (0+255),w,b	;volatile
  6189  00BB30  A4D8               	btfss	status,2,c
  6190  00BB32  D003               	goto	l1818
  6191                           
  6192                           ; BSR set to: 1
  6193                           ;main.c: 662: timer_count = 1;
  6194  00BB34  0E01               	movlw	1
  6195  00BB36  6E5D               	movwf	_timer_count,c	;volatile
  6196  00BB38  D002               	goto	l20912
  6197  00BB3A                     l1818:
  6198                           
  6199                           ; BSR set to: 1
  6200                           ;main.c: 663: else
  6201                           ;main.c: 664: timer_count = m_update_frequency;
  6202  00BB3A  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
  6203  00BB3E                     l20912:
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;main.c: 665: timer_flag = 0;
  6207  00BB3E  0E00               	movlw	0
  6208  00BB40  0101               	movlb	1	; () banked
  6209  00BB42  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
  6210                           
  6211                           ; BSR set to: 1
  6212  00BB44  0012               	return		;funcret
  6213  00BB46                     __end_of_timer_reset:
  6214                           	opt stack 0
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           postinc0	equ	0xFEE
  6222                           plusw0	equ	0xFEB
  6223                           wreg	equ	0xFE8
  6224                           postdec1	equ	0xFE5
  6225                           fsr1h	equ	0xFE2
  6226                           fsr1l	equ	0xFE1
  6227                           indf2	equ	0xFDF
  6228                           plusw2	equ	0xFDB
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _strcpy *****************
  6234 ;; Defined at:
  6235 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  to              2    0[BANK1 ] PTR unsigned char 
  6238 ;;		 -> ToSendDataBuffer(64), 
  6239 ;;  from            2    2[BANK1 ] PTR const unsigned char 
  6240 ;;		 -> STR_2(33), STR_1(8), 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  cp              2    4[BANK1 ] PTR unsigned char 
  6243 ;;		 -> ToSendDataBuffer(64), 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  2    0[BANK1 ] PTR unsigned char 
  6246 ;; Registers used:
  6247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6253 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;Total ram usage:        6 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:   16
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text7
  6268  00B8C8                     __ptext7:
  6269                           	opt stack 0
  6270  00B8C8                     _strcpy:
  6271                           	opt stack 14
  6272                           
  6273                           ; BSR set to: 1
  6274                           ;incstack = 0
  6275  00B8C8  C100  F104         	movff	strcpy@to,strcpy@cp
  6276  00B8CC  C101  F105         	movff	strcpy@to+1,strcpy@cp+1
  6277  00B8D0  D006               	goto	l20558
  6278  00B8D2                     l20556:
  6279  00B8D2  0101               	movlb	1	; () banked
  6280  00B8D4  4B04               	infsnz	strcpy@cp& (0+255),f,b
  6281  00B8D6  2B05               	incf	(strcpy@cp+1)& (0+255),f,b
  6282  00B8D8  0101               	movlb	1	; () banked
  6283  00B8DA  4B02               	infsnz	strcpy@from& (0+255),f,b
  6284  00B8DC  2B03               	incf	(strcpy@from+1)& (0+255),f,b
  6285  00B8DE                     l20558:
  6286  00B8DE  C102  FFF6         	movff	strcpy@from,tblptrl
  6287  00B8E2  C103  FFF7         	movff	strcpy@from+1,tblptrh
  6288  00B8E6                     	if	0	;tblptru may be non-zero
  6289  00B8E6                     	endif
  6290  00B8E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6291  00B8E6  0E00               	movlw	low (__mediumconst shr (0+16))
  6292  00B8E8  6EF8               	movwf	tblptru,c
  6293  00B8EA                     	endif
  6294  00B8EA  C104  FFD9         	movff	strcpy@cp,fsr2l
  6295  00B8EE  C105  FFDA         	movff	strcpy@cp+1,fsr2h
  6296  00B8F2  0008               	tblrd		*
  6297  00B8F4  CFF5 FFDF          	movff	tablat,indf2
  6298  00B8F8  50DF               	movf	indf2,w,c
  6299  00B8FA  B4D8               	btfsc	status,2,c
  6300  00B8FC  0012               	return	
  6301  00B8FE  D7E9               	goto	l20556
  6302  00B900                     __end_of_strcpy:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           postinc0	equ	0xFEE
  6311                           plusw0	equ	0xFEB
  6312                           wreg	equ	0xFE8
  6313                           postdec1	equ	0xFE5
  6314                           fsr1h	equ	0xFE2
  6315                           fsr1l	equ	0xFE1
  6316                           indf2	equ	0xFDF
  6317                           plusw2	equ	0xFDB
  6318                           fsr2h	equ	0xFDA
  6319                           fsr2l	equ	0xFD9
  6320                           status	equ	0xFD8
  6321                           
  6322 ;; *************** function _sprintf *****************
  6323 ;; Defined at:
  6324 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  sp              2   12[BANK1 ] PTR unsigned char 
  6327 ;;		 -> ToSendDataBuffer(64), 
  6328 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  6329 ;;		 -> STR_14(39), STR_13(52), STR_12(44), STR_11(55), 
  6330 ;;		 -> STR_10(39), STR_9(32), STR_8(17), STR_7(31), 
  6331 ;;		 -> STR_6(25), STR_5(22), STR_4(41), STR_3(33), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  idx             1   28[BANK1 ] unsigned char 
  6334 ;;  tmpval          4    0        struct .
  6335 ;;  width           2   39[BANK1 ] int 
  6336 ;;  val             2   36[BANK1 ] unsigned int 
  6337 ;;  len             2   34[BANK1 ] unsigned int 
  6338 ;;  ap              2   32[BANK1 ] PTR void [1]
  6339 ;;		 -> ?_sprintf(2), 
  6340 ;;  cp              2   30[BANK1 ] PTR const unsigned char 
  6341 ;;		 -> STR_15(7), TX_POWER_INVALID(6), TX_POWER_N_8_DB_MW(7), TX_POWER_N_5_DB_MW(6), 
  6342 ;;		 -> TX_POWER_N_2_DB_MW(6), TX_POWER_1_DB_MW(7), TX_POWER_4_DB_MW(6), TX_POWER_7_DB_MW(4), 
  6343 ;;		 -> TX_POWER_10_DB_MW(5), TX_POWER_13_DB_MW(5), 
  6344 ;;  c               1   41[BANK1 ] char 
  6345 ;;  flag            1   38[BANK1 ] unsigned char 
  6346 ;;  prec            1   29[BANK1 ] char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  2   12[BANK1 ] int 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6356 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6358 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;Total ram usage:       30 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:   17
  6363 ;; This function calls:
  6364 ;;		___lwdiv
  6365 ;;		___lwmod
  6366 ;;		___wmul
  6367 ;;		_isdigit
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text8
  6374  0053B8                     __ptext8:
  6375                           	opt stack 0
  6376  0053B8                     _sprintf:
  6377                           	opt stack 13
  6378                           
  6379                           ;doprnt.c: 494: va_list ap;
  6380                           ;doprnt.c: 499: signed char c;
  6381                           ;doprnt.c: 501: int width;
  6382                           ;doprnt.c: 506: signed char prec;
  6383                           ;doprnt.c: 508: unsigned char flag;
  6384                           ;doprnt.c: 523: union {
  6385                           ;doprnt.c: 524: unsigned long vd;
  6386                           ;doprnt.c: 525: double integ;
  6387                           ;doprnt.c: 526: } tmpval;
  6388                           ;doprnt.c: 528: unsigned int val;
  6389                           ;doprnt.c: 529: unsigned len;
  6390                           ;doprnt.c: 530: const char * cp;
  6391                           ;doprnt.c: 533: *ap = __va_start();
  6392                           
  6393                           ;incstack = 0
  6394  0053B8  0E10               	movlw	low (?_sprintf+4)
  6395  0053BA  0101               	movlb	1	; () banked
  6396  0053BC  6F20               	movwf	sprintf@ap& (0+255),b
  6397  0053BE  0E01               	movlw	high (?_sprintf+4)
  6398  0053C0  0101               	movlb	1	; () banked
  6399  0053C2  6F21               	movwf	(sprintf@ap+1)& (0+255),b
  6400                           
  6401                           ;doprnt.c: 536: while(c = *f++) {
  6402  0053C4  D288               	goto	l20790
  6403  0053C6                     l20618:
  6404                           
  6405                           ; BSR set to: 1
  6406                           ;doprnt.c: 538: if(c != '%')
  6407  0053C6  0E25               	movlw	37
  6408  0053C8  0101               	movlb	1	; () banked
  6409  0053CA  1929               	xorwf	sprintf@c& (0+255),w,b
  6410  0053CC  B4D8               	btfsc	status,2,c
  6411  0053CE  D00A               	goto	l20624
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;doprnt.c: 540: {
  6415                           ;doprnt.c: 541: ((*sp++ = (c)));
  6416  0053D0  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6417  0053D4  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6418  0053D8  C129  FFDF         	movff	sprintf@c,indf2
  6419                           
  6420                           ; BSR set to: 1
  6421  0053DC  0101               	movlb	1	; () banked
  6422  0053DE  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6423  0053E0  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6424                           
  6425                           ;doprnt.c: 542: continue;
  6426  0053E2  D279               	goto	l20790
  6427  0053E4                     l20624:
  6428                           
  6429                           ; BSR set to: 1
  6430                           ;doprnt.c: 543: }
  6431                           ;doprnt.c: 546: width = 0;
  6432  0053E4  0E00               	movlw	0
  6433  0053E6  0101               	movlb	1	; () banked
  6434  0053E8  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6435  0053EA  0E00               	movlw	0
  6436  0053EC  6F27               	movwf	sprintf@width& (0+255),b
  6437                           
  6438                           ;doprnt.c: 548: flag = 0;
  6439  0053EE  0E00               	movlw	0
  6440  0053F0  0101               	movlb	1	; () banked
  6441  0053F2  6F26               	movwf	sprintf@flag& (0+255),b
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;doprnt.c: 551: switch(*f) {
  6445                           
  6446                           ;doprnt.c: 550: for(;;) {
  6447  0053F4  D005               	goto	l20630
  6448  0053F6                     l20626:
  6449                           
  6450                           ;doprnt.c: 580: flag |= 0x04;
  6451  0053F6  0101               	movlb	1	; () banked
  6452  0053F8  8526               	bsf	sprintf@flag& (0+255),2,b
  6453                           
  6454                           ;doprnt.c: 581: f++;
  6455  0053FA  0101               	movlb	1	; () banked
  6456  0053FC  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6457  0053FE  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6458  005400                     l20630:
  6459  005400  C10E  FFF6         	movff	sprintf@f,tblptrl
  6460  005404  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6461  005408                     	if	0	;tblptru may be non-zero
  6462  005408                     	endif
  6463  005408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6464  005408  0E00               	movlw	low (__mediumconst shr (0+16))
  6465  00540A  6EF8               	movwf	tblptru,c
  6466  00540C                     	endif
  6467  00540C  0008               	tblrd		*
  6468  00540E  50F5               	movf	tablat,w,c
  6469                           
  6470                           ; Switch size 1, requested type "space"
  6471                           ; Number of cases is 1, Range of values is 48 to 48
  6472                           ; switch strategies available:
  6473                           ; Name         Instructions Cycles
  6474                           ; simple_byte            4     3 (average)
  6475                           ;	Chosen strategy is simple_byte
  6476  005410  0A30               	xorlw	48	; case 48
  6477  005412  B4D8               	btfsc	status,2,c
  6478  005414  D7F0               	goto	l20626
  6479                           
  6480                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6481                           
  6482                           ;doprnt.c: 586: }
  6483                           
  6484                           ;doprnt.c: 585: break;
  6485  005416  C10E  FFF6         	movff	sprintf@f,tblptrl
  6486  00541A  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6487  00541E                     	if	0	;tblptru may be non-zero
  6488  00541E                     	endif
  6489  00541E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6490  00541E  0E00               	movlw	low (__mediumconst shr (0+16))
  6491  005420  6EF8               	movwf	tblptru,c
  6492  005422                     	endif
  6493  005422  0008               	tblrd		*
  6494  005424  50F5               	movf	tablat,w,c
  6495  005426  EC2C  F05D         	call	_isdigit
  6496  00542A  A0D8               	btfss	status,0,c
  6497  00542C  D0CE               	goto	l20682
  6498                           
  6499                           ;doprnt.c: 598: width = 0;
  6500  00542E  0E00               	movlw	0
  6501  005430  0101               	movlb	1	; () banked
  6502  005432  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6503  005434  0E00               	movlw	0
  6504  005436  6F27               	movwf	sprintf@width& (0+255),b
  6505  005438                     l20636:
  6506                           
  6507                           ;doprnt.c: 600: width *= 10;
  6508  005438  C127  F100         	movff	sprintf@width,___wmul@multiplier
  6509  00543C  C128  F101         	movff	sprintf@width+1,___wmul@multiplier+1
  6510  005440  0E00               	movlw	0
  6511  005442  0101               	movlb	1	; () banked
  6512  005444  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6513  005446  0E0A               	movlw	10
  6514  005448  6F02               	movwf	___wmul@multiplicand& (0+255),b
  6515  00544A  EC80  F05C         	call	___wmul	;wreg free
  6516  00544E  C100  F127         	movff	?___wmul,sprintf@width
  6517  005452  C101  F128         	movff	?___wmul+1,sprintf@width+1
  6518                           
  6519                           ;doprnt.c: 601: width += *f++ - '0';
  6520  005456  0ED0               	movlw	208
  6521  005458  0101               	movlb	1	; () banked
  6522  00545A  6F18               	movwf	??_sprintf& (0+255),b
  6523  00545C  0EFF               	movlw	255
  6524  00545E  0101               	movlb	1	; () banked
  6525  005460  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6526  005462  C10E  FFF6         	movff	sprintf@f,tblptrl
  6527  005466  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6528  00546A                     	if	0	;tblptru may be non-zero
  6529  00546A                     	endif
  6530  00546A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6531  00546A  0E00               	movlw	low (__mediumconst shr (0+16))
  6532  00546C  6EF8               	movwf	tblptru,c
  6533  00546E                     	endif
  6534  00546E  0008               	tblrd		*
  6535  005470  50F5               	movf	tablat,w,c
  6536  005472  0101               	movlb	1	; () banked
  6537  005474  6F1A               	movwf	(??_sprintf+2)& (0+255),b
  6538  005476  6B1B               	clrf	(??_sprintf+3)& (0+255),b
  6539  005478  0101               	movlb	1	; () banked
  6540  00547A  5118               	movf	??_sprintf& (0+255),w,b
  6541  00547C  0101               	movlb	1	; () banked
  6542  00547E  271A               	addwf	(??_sprintf+2)& (0+255),f,b
  6543  005480  0101               	movlb	1	; () banked
  6544  005482  5119               	movf	(??_sprintf+1)& (0+255),w,b
  6545  005484  0101               	movlb	1	; () banked
  6546  005486  231B               	addwfc	(??_sprintf+3)& (0+255),f,b
  6547  005488  0101               	movlb	1	; () banked
  6548  00548A  511A               	movf	(??_sprintf+2)& (0+255),w,b
  6549  00548C  0101               	movlb	1	; () banked
  6550  00548E  2727               	addwf	sprintf@width& (0+255),f,b
  6551  005490  0101               	movlb	1	; () banked
  6552  005492  511B               	movf	(??_sprintf+3)& (0+255),w,b
  6553  005494  0101               	movlb	1	; () banked
  6554  005496  2328               	addwfc	(sprintf@width+1)& (0+255),f,b
  6555                           
  6556                           ; BSR set to: 1
  6557  005498  0101               	movlb	1	; () banked
  6558  00549A  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6559  00549C  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6563  00549E  C10E  FFF6         	movff	sprintf@f,tblptrl
  6564  0054A2  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6565  0054A6                     	if	0	;tblptru may be non-zero
  6566  0054A6                     	endif
  6567  0054A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6568  0054A6  0E00               	movlw	low (__mediumconst shr (0+16))
  6569  0054A8  6EF8               	movwf	tblptru,c
  6570  0054AA                     	endif
  6571  0054AA  0008               	tblrd		*
  6572  0054AC  50F5               	movf	tablat,w,c
  6573  0054AE  EC2C  F05D         	call	_isdigit
  6574  0054B2  A0D8               	btfss	status,0,c
  6575  0054B4  D08A               	goto	l20682
  6576  0054B6  D7C0               	goto	l20636
  6577  0054B8                     l20644:
  6578                           
  6579                           ;doprnt.c: 721: flag |= 0x80;
  6580  0054B8  0101               	movlb	1	; () banked
  6581  0054BA  8F26               	bsf	sprintf@flag& (0+255),7,b
  6582                           
  6583                           ;doprnt.c: 723: break;
  6584  0054BC  D0A4               	goto	l2161
  6585  0054BE                     l20646:
  6586                           
  6587                           ; BSR set to: 1
  6588                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6589  0054BE  C120  FFD9         	movff	sprintf@ap,fsr2l
  6590  0054C2  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6591  0054C6  CFDE F11E          	movff	postinc2,sprintf@cp
  6592  0054CA  CFDD F11F          	movff	postdec2,sprintf@cp+1
  6593                           
  6594                           ; BSR set to: 1
  6595  0054CE  0E02               	movlw	2
  6596  0054D0  0101               	movlb	1	; () banked
  6597  0054D2  2720               	addwf	sprintf@ap& (0+255),f,b
  6598  0054D4  0E00               	movlw	0
  6599  0054D6  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;doprnt.c: 740: if(!cp)
  6603  0054D8  0101               	movlb	1	; () banked
  6604  0054DA  511E               	movf	sprintf@cp& (0+255),w,b
  6605  0054DC  0101               	movlb	1	; () banked
  6606  0054DE  111F               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6607  0054E0  A4D8               	btfss	status,2,c
  6608  0054E2  D006               	goto	l20654
  6609                           
  6610                           ; BSR set to: 1
  6611                           ;doprnt.c: 741: cp = "(null)";
  6612  0054E4  0EBD               	movlw	low STR_15
  6613  0054E6  0101               	movlb	1	; () banked
  6614  0054E8  6F1E               	movwf	sprintf@cp& (0+255),b
  6615  0054EA  0E23               	movlw	high STR_15
  6616  0054EC  0101               	movlb	1	; () banked
  6617  0054EE  6F1F               	movwf	(sprintf@cp+1)& (0+255),b
  6618  0054F0                     l20654:
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;doprnt.c: 745: len = 0;
  6622  0054F0  0E00               	movlw	0
  6623  0054F2  0101               	movlb	1	; () banked
  6624  0054F4  6F23               	movwf	(sprintf@len+1)& (0+255),b
  6625  0054F6  0E00               	movlw	0
  6626  0054F8  6F22               	movwf	sprintf@len& (0+255),b
  6627                           
  6628                           ;doprnt.c: 746: while(cp[len])
  6629  0054FA  D003               	goto	l20658
  6630  0054FC                     l20656:
  6631                           
  6632                           ; BSR set to: 1
  6633                           ;doprnt.c: 747: len++;
  6634  0054FC  0101               	movlb	1	; () banked
  6635  0054FE  4B22               	infsnz	sprintf@len& (0+255),f,b
  6636  005500  2B23               	incf	(sprintf@len+1)& (0+255),f,b
  6637  005502                     l20658:
  6638                           
  6639                           ; BSR set to: 1
  6640  005502  0101               	movlb	1	; () banked
  6641  005504  5122               	movf	sprintf@len& (0+255),w,b
  6642  005506  0101               	movlb	1	; () banked
  6643  005508  251E               	addwf	sprintf@cp& (0+255),w,b
  6644  00550A  0101               	movlb	1	; () banked
  6645  00550C  6F18               	movwf	??_sprintf& (0+255),b
  6646  00550E  0101               	movlb	1	; () banked
  6647  005510  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6648  005512  0101               	movlb	1	; () banked
  6649  005514  211F               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6650  005516  0101               	movlb	1	; () banked
  6651  005518  6F19               	movwf	(??_sprintf+1)& (0+255),b
  6652  00551A  C118  FFF6         	movff	??_sprintf,tblptrl
  6653  00551E  C119  FFF7         	movff	??_sprintf+1,tblptrh
  6654  005522                     	if	0	;tblptru may be non-zero
  6655  005522                     	endif
  6656  005522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6657  005522  0E00               	movlw	low (__mediumconst shr (0+16))
  6658  005524  6EF8               	movwf	tblptru,c
  6659  005526                     	endif
  6660  005526  0008               	tblrd		*
  6661  005528  50F5               	movf	tablat,w,c
  6662  00552A  0900               	iorlw	0
  6663  00552C  A4D8               	btfss	status,2,c
  6664  00552E  D7E6               	goto	l20656
  6665                           
  6666                           ; BSR set to: 1
  6667                           ;doprnt.c: 757: if(width > len)
  6668                           
  6669                           ; BSR set to: 1
  6670  005530  0101               	movlb	1	; () banked
  6671  005532  5127               	movf	sprintf@width& (0+255),w,b
  6672  005534  0101               	movlb	1	; () banked
  6673  005536  5D22               	subwf	sprintf@len& (0+255),w,b
  6674  005538  0101               	movlb	1	; () banked
  6675  00553A  5128               	movf	(sprintf@width+1)& (0+255),w,b
  6676  00553C  0101               	movlb	1	; () banked
  6677  00553E  5923               	subwfb	(sprintf@len+1)& (0+255),w,b
  6678  005540  B0D8               	btfsc	status,0,c
  6679  005542  D009               	goto	l20664
  6680                           
  6681                           ; BSR set to: 1
  6682                           ;doprnt.c: 758: width -= len;
  6683  005544  0101               	movlb	1	; () banked
  6684  005546  5122               	movf	sprintf@len& (0+255),w,b
  6685  005548  0101               	movlb	1	; () banked
  6686  00554A  5F27               	subwf	sprintf@width& (0+255),f,b
  6687  00554C  0101               	movlb	1	; () banked
  6688  00554E  5123               	movf	(sprintf@len+1)& (0+255),w,b
  6689  005550  0101               	movlb	1	; () banked
  6690  005552  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  6691  005554  D00F               	goto	l20670
  6692  005556                     l20664:
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;doprnt.c: 759: else
  6696                           ;doprnt.c: 760: width = 0;
  6697  005556  0E00               	movlw	0
  6698  005558  0101               	movlb	1	; () banked
  6699  00555A  6F28               	movwf	(sprintf@width+1)& (0+255),b
  6700  00555C  0E00               	movlw	0
  6701  00555E  6F27               	movwf	sprintf@width& (0+255),b
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;doprnt.c: 764: while(width--)
  6705  005560  D009               	goto	l20670
  6706  005562                     l20666:
  6707                           
  6708                           ; BSR set to: 1
  6709                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6710  005562  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6711  005566  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6712  00556A  0E20               	movlw	32
  6713  00556C  6EDF               	movwf	indf2,c
  6714                           
  6715                           ; BSR set to: 1
  6716  00556E  0101               	movlb	1	; () banked
  6717  005570  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6718  005572  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6719  005574                     l20670:
  6720                           
  6721                           ; BSR set to: 1
  6722  005574  0101               	movlb	1	; () banked
  6723  005576  0727               	decf	sprintf@width& (0+255),f,b
  6724  005578  A0D8               	btfss	status,0,c
  6725  00557A  0728               	decf	(sprintf@width+1)& (0+255),f,b
  6726  00557C  0101               	movlb	1	; () banked
  6727  00557E  2927               	incf	sprintf@width& (0+255),w,b
  6728  005580  E1F0               	bnz	l20666
  6729  005582  0101               	movlb	1	; () banked
  6730  005584  2928               	incf	(sprintf@width+1)& (0+255),w,b
  6731  005586  B4D8               	btfsc	status,2,c
  6732  005588  D014               	goto	l20678
  6733  00558A  D7EB               	goto	l20666
  6734  00558C                     l20672:
  6735                           
  6736                           ; BSR set to: 1
  6737                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6738  00558C  C11E  FFF6         	movff	sprintf@cp,tblptrl
  6739  005590  C11F  FFF7         	movff	sprintf@cp+1,tblptrh
  6740  005594                     	if	0	;tblptru may be non-zero
  6741  005594                     	endif
  6742  005594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6743  005594  0E00               	movlw	low (__mediumconst shr (0+16))
  6744  005596  6EF8               	movwf	tblptru,c
  6745  005598                     	endif
  6746  005598  C10C  FFD9         	movff	sprintf@sp,fsr2l
  6747  00559C  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  6748  0055A0  0008               	tblrd		*
  6749  0055A2  CFF5 FFDF          	movff	tablat,indf2
  6750                           
  6751                           ; BSR set to: 1
  6752  0055A6  0101               	movlb	1	; () banked
  6753  0055A8  4B1E               	infsnz	sprintf@cp& (0+255),f,b
  6754  0055AA  2B1F               	incf	(sprintf@cp+1)& (0+255),f,b
  6755                           
  6756                           ; BSR set to: 1
  6757  0055AC  0101               	movlb	1	; () banked
  6758  0055AE  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  6759  0055B0  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  6760  0055B2                     l20678:
  6761                           
  6762                           ; BSR set to: 1
  6763  0055B2  0101               	movlb	1	; () banked
  6764  0055B4  0722               	decf	sprintf@len& (0+255),f,b
  6765  0055B6  A0D8               	btfss	status,0,c
  6766  0055B8  0723               	decf	(sprintf@len+1)& (0+255),f,b
  6767  0055BA  0101               	movlb	1	; () banked
  6768  0055BC  2922               	incf	sprintf@len& (0+255),w,b
  6769  0055BE  E1E6               	bnz	l20672
  6770  0055C0  0101               	movlb	1	; () banked
  6771  0055C2  2923               	incf	(sprintf@len+1)& (0+255),w,b
  6772  0055C4  B4D8               	btfsc	status,2,c
  6773  0055C6  D187               	goto	l20790
  6774  0055C8  D7E1               	goto	l20672
  6775  0055CA                     l20682:
  6776  0055CA  C10E  FFF6         	movff	sprintf@f,tblptrl
  6777  0055CE  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  6778  0055D2  0101               	movlb	1	; () banked
  6779  0055D4  4B0E               	infsnz	sprintf@f& (0+255),f,b
  6780  0055D6  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  6781  0055D8                     	if	0	;tblptru may be non-zero
  6782  0055D8                     	endif
  6783  0055D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6784  0055D8  0E00               	movlw	low (__mediumconst shr (0+16))
  6785  0055DA  6EF8               	movwf	tblptru,c
  6786  0055DC                     	endif
  6787  0055DC  0008               	tblrd		*
  6788  0055DE  CFF5 F129          	movff	tablat,sprintf@c
  6789  0055E2  0101               	movlb	1	; () banked
  6790  0055E4  5129               	movf	sprintf@c& (0+255),w,b
  6791                           
  6792                           ; Switch size 1, requested type "space"
  6793                           ; Number of cases is 5, Range of values is 0 to 120
  6794                           ; switch strategies available:
  6795                           ; Name         Instructions Cycles
  6796                           ; simple_byte           16     9 (average)
  6797                           ;	Chosen strategy is simple_byte
  6798  0055E6  0A00               	xorlw	0	; case 0
  6799  0055E8  B4D8               	btfsc	status,2,c
  6800  0055EA  D185               	goto	l20792
  6801  0055EC  0A64               	xorlw	100	; case 100
  6802  0055EE  B4D8               	btfsc	status,2,c
  6803  0055F0  D00A               	goto	l2161
  6804  0055F2  0A0D               	xorlw	13	; case 105
  6805  0055F4  B4D8               	btfsc	status,2,c
  6806  0055F6  D007               	goto	l2161
  6807  0055F8  0A1A               	xorlw	26	; case 115
  6808  0055FA  B4D8               	btfsc	status,2,c
  6809  0055FC  D760               	goto	l20646
  6810  0055FE  0A0B               	xorlw	11	; case 120
  6811  005600  B4D8               	btfsc	status,2,c
  6812  005602  D75A               	goto	l20644
  6813  005604  D168               	goto	l20790
  6814  005606                     l2161:
  6815                           
  6816                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  6817  005606  0101               	movlb	1	; () banked
  6818  005608  BF26               	btfsc	sprintf@flag& (0+255),7,b
  6819  00560A  D019               	goto	l20694
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;doprnt.c: 1253: {
  6823                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6824  00560C  C120  FFD9         	movff	sprintf@ap,fsr2l
  6825  005610  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6826  005614  CFDE F124          	movff	postinc2,sprintf@val
  6827  005618  CFDD F125          	movff	postdec2,sprintf@val+1
  6828                           
  6829                           ; BSR set to: 1
  6830  00561C  0E02               	movlw	2
  6831  00561E  0101               	movlb	1	; () banked
  6832  005620  2720               	addwf	sprintf@ap& (0+255),f,b
  6833  005622  0E00               	movlw	0
  6834  005624  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;doprnt.c: 1261: if((int)val < 0) {
  6838  005626  0101               	movlb	1	; () banked
  6839  005628  AF25               	btfss	(sprintf@val+1)& (0+255),7,b
  6840  00562A  D059               	goto	l20728
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;doprnt.c: 1262: flag |= 0x03;
  6844  00562C  0E03               	movlw	3
  6845  00562E  0101               	movlb	1	; () banked
  6846  005630  1326               	iorwf	sprintf@flag& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;doprnt.c: 1263: val = -val;
  6850  005632  0101               	movlb	1	; () banked
  6851  005634  6D24               	negf	sprintf@val& (0+255),b
  6852  005636  1F25               	comf	(sprintf@val+1)& (0+255),f,b
  6853  005638  B0D8               	btfsc	status,0,c
  6854  00563A  2B25               	incf	(sprintf@val+1)& (0+255),f,b
  6855                           
  6856                           ; BSR set to: 1
  6857                           ;doprnt.c: 1264: }
  6858                           ;doprnt.c: 1266: }
  6859  00563C  D050               	goto	l20728
  6860  00563E                     l20694:
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;doprnt.c: 1268: else
  6864                           ;doprnt.c: 1273: {
  6865                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6866  00563E  C120  FFD9         	movff	sprintf@ap,fsr2l
  6867  005642  C121  FFDA         	movff	sprintf@ap+1,fsr2h
  6868  005646  CFDE F124          	movff	postinc2,sprintf@val
  6869  00564A  CFDD F125          	movff	postdec2,sprintf@val+1
  6870                           
  6871                           ; BSR set to: 1
  6872  00564E  0E02               	movlw	2
  6873  005650  0101               	movlb	1	; () banked
  6874  005652  2720               	addwf	sprintf@ap& (0+255),f,b
  6875  005654  0E00               	movlw	0
  6876  005656  2321               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6877                           
  6878                           ; BSR set to: 1
  6879                           ;doprnt.c: 1287: }
  6880                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  6881  005658  D042               	goto	l20728
  6882  00565A                     l20698:
  6883                           
  6884                           ; BSR set to: 1
  6885                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6886  00565A  0E01               	movlw	1
  6887  00565C  0101               	movlb	1	; () banked
  6888  00565E  6F29               	movwf	sprintf@c& (0+255),b
  6889  005660                     l20700:
  6890                           
  6891                           ; BSR set to: 1
  6892  005660  0E05               	movlw	5
  6893  005662  0101               	movlb	1	; () banked
  6894  005664  1929               	xorwf	sprintf@c& (0+255),w,b
  6895  005666  B4D8               	btfsc	status,2,c
  6896  005668  D043               	goto	l20730
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;doprnt.c: 1306: if(val < dpowers[c])
  6900                           
  6901                           ; BSR set to: 1
  6902                           
  6903                           ; BSR set to: 1
  6904  00566A  0101               	movlb	1	; () banked
  6905  00566C  5129               	movf	sprintf@c& (0+255),w,b
  6906  00566E  0D02               	mullw	2
  6907  005670  0EB1               	movlw	low _dpowers
  6908  005672  24F3               	addwf	prodl,w,c
  6909  005674  6EF6               	movwf	tblptrl,c
  6910  005676  0E20               	movlw	high _dpowers
  6911  005678  20F4               	addwfc	prodh,w,c
  6912  00567A  6EF7               	movwf	tblptrh,c
  6913  00567C                     	if	1	;There are 3 active tblptr bytes
  6914  00567C  6AF8               	clrf	tblptru,c
  6915  00567E  0E00               	movlw	low (__mediumconst shr (0+16))
  6916  005680  22F8               	addwfc	tblptru,f,c
  6917  005682                     	endif
  6918  005682  0009               	tblrd		*+
  6919  005684  50F5               	movf	tablat,w,c
  6920  005686  0101               	movlb	1	; () banked
  6921  005688  5D24               	subwf	sprintf@val& (0+255),w,b
  6922  00568A  0009               	tblrd		*+
  6923  00568C  50F5               	movf	tablat,w,c
  6924  00568E  0101               	movlb	1	; () banked
  6925  005690  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6926  005692  A0D8               	btfss	status,0,c
  6927  005694  D02D               	goto	l20730
  6928                           
  6929                           ; BSR set to: 1
  6930                           
  6931                           ; BSR set to: 1
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;doprnt.c: 1307: break;
  6935  005696  0101               	movlb	1	; () banked
  6936  005698  2B29               	incf	sprintf@c& (0+255),f,b
  6937  00569A  D7E2               	goto	l20700
  6938  00569C                     l20712:
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6942  00569C  0E01               	movlw	1
  6943  00569E  0101               	movlb	1	; () banked
  6944  0056A0  6F29               	movwf	sprintf@c& (0+255),b
  6945  0056A2                     l20714:
  6946                           
  6947                           ; BSR set to: 1
  6948  0056A2  0E04               	movlw	4
  6949  0056A4  0101               	movlb	1	; () banked
  6950  0056A6  1929               	xorwf	sprintf@c& (0+255),w,b
  6951  0056A8  B4D8               	btfsc	status,2,c
  6952  0056AA  D022               	goto	l20730
  6953                           
  6954                           ; BSR set to: 1
  6955                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6956                           
  6957                           ; BSR set to: 1
  6958                           
  6959                           ; BSR set to: 1
  6960  0056AC  0101               	movlb	1	; () banked
  6961  0056AE  5129               	movf	sprintf@c& (0+255),w,b
  6962  0056B0  0D02               	mullw	2
  6963  0056B2  0EBB               	movlw	low _hexpowers
  6964  0056B4  24F3               	addwf	prodl,w,c
  6965  0056B6  6EF6               	movwf	tblptrl,c
  6966  0056B8  0E20               	movlw	high _hexpowers
  6967  0056BA  20F4               	addwfc	prodh,w,c
  6968  0056BC  6EF7               	movwf	tblptrh,c
  6969  0056BE                     	if	1	;There are 3 active tblptr bytes
  6970  0056BE  6AF8               	clrf	tblptru,c
  6971  0056C0  0E00               	movlw	low (__mediumconst shr (0+16))
  6972  0056C2  22F8               	addwfc	tblptru,f,c
  6973  0056C4                     	endif
  6974  0056C4  0009               	tblrd		*+
  6975  0056C6  50F5               	movf	tablat,w,c
  6976  0056C8  0101               	movlb	1	; () banked
  6977  0056CA  5D24               	subwf	sprintf@val& (0+255),w,b
  6978  0056CC  0009               	tblrd		*+
  6979  0056CE  50F5               	movf	tablat,w,c
  6980  0056D0  0101               	movlb	1	; () banked
  6981  0056D2  5925               	subwfb	(sprintf@val+1)& (0+255),w,b
  6982  0056D4  A0D8               	btfss	status,0,c
  6983  0056D6  D00C               	goto	l20730
  6984                           
  6985                           ; BSR set to: 1
  6986                           
  6987                           ; BSR set to: 1
  6988                           
  6989                           ; BSR set to: 1
  6990                           ;doprnt.c: 1318: break;
  6991  0056D8  0101               	movlb	1	; () banked
  6992  0056DA  2B29               	incf	sprintf@c& (0+255),f,b
  6993  0056DC  D7E2               	goto	l20714
  6994  0056DE                     l20728:
  6995                           
  6996                           ; BSR set to: 1
  6997  0056DE  0101               	movlb	1	; () banked
  6998  0056E0  5126               	movf	sprintf@flag& (0+255),w,b
  6999  0056E2  0B80               	andlw	128
  7000                           
  7001                           ; Switch size 1, requested type "space"
  7002                           ; Number of cases is 2, Range of values is 0 to 128
  7003                           ; switch strategies available:
  7004                           ; Name         Instructions Cycles
  7005                           ; simple_byte            7     4 (average)
  7006                           ;	Chosen strategy is simple_byte
  7007  0056E4  0A00               	xorlw	0	; case 0
  7008  0056E6  B4D8               	btfsc	status,2,c
  7009  0056E8  D7B8               	goto	l20698
  7010  0056EA  0A80               	xorlw	128	; case 128
  7011  0056EC  B4D8               	btfsc	status,2,c
  7012  0056EE  D7D6               	goto	l20712
  7013  0056F0                     l20730:
  7014                           
  7015                           ; BSR set to: 1
  7016                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7017  0056F0  0101               	movlb	1	; () banked
  7018  0056F2  5127               	movf	sprintf@width& (0+255),w,b
  7019  0056F4  0101               	movlb	1	; () banked
  7020  0056F6  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7021  0056F8  B4D8               	btfsc	status,2,c
  7022  0056FA  D00B               	goto	l20736
  7023                           
  7024                           ; BSR set to: 1
  7025  0056FC  C126  F118         	movff	sprintf@flag,??_sprintf
  7026  005700  0E03               	movlw	3
  7027  005702  0101               	movlb	1	; () banked
  7028  005704  1718               	andwf	??_sprintf& (0+255),f,b
  7029  005706  B4D8               	btfsc	status,2,c
  7030  005708  D004               	goto	l20736
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;doprnt.c: 1346: width--;
  7034  00570A  0101               	movlb	1	; () banked
  7035  00570C  0727               	decf	sprintf@width& (0+255),f,b
  7036  00570E  A0D8               	btfss	status,0,c
  7037  005710  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7038  005712                     l20736:
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;doprnt.c: 1381: if(width > c)
  7042  005712  0E80               	movlw	128
  7043  005714  0101               	movlb	1	; () banked
  7044  005716  BF29               	btfsc	sprintf@c& (0+255),7,b
  7045  005718  0E7F               	movlw	127
  7046  00571A  0101               	movlb	1	; () banked
  7047  00571C  6F18               	movwf	??_sprintf& (0+255),b
  7048  00571E  0101               	movlb	1	; () banked
  7049  005720  5127               	movf	sprintf@width& (0+255),w,b
  7050  005722  0101               	movlb	1	; () banked
  7051  005724  5D29               	subwf	sprintf@c& (0+255),w,b
  7052  005726  0101               	movlb	1	; () banked
  7053  005728  5128               	movf	(sprintf@width+1)& (0+255),w,b
  7054  00572A  0A80               	xorlw	128
  7055  00572C  0101               	movlb	1	; () banked
  7056  00572E  5918               	subwfb	??_sprintf& (0+255),w,b
  7057  005730  B0D8               	btfsc	status,0,c
  7058  005732  D00B               	goto	l20740
  7059                           
  7060                           ; BSR set to: 1
  7061                           ;doprnt.c: 1382: width -= c;
  7062  005734  0101               	movlb	1	; () banked
  7063  005736  5129               	movf	sprintf@c& (0+255),w,b
  7064  005738  0101               	movlb	1	; () banked
  7065  00573A  5F27               	subwf	sprintf@width& (0+255),f,b
  7066  00573C  0E00               	movlw	0
  7067  00573E  0101               	movlb	1	; () banked
  7068  005740  BF29               	btfsc	sprintf@c& (0+255),7,b
  7069  005742  0EFF               	movlw	255
  7070  005744  0101               	movlb	1	; () banked
  7071  005746  5B28               	subwfb	(sprintf@width+1)& (0+255),f,b
  7072  005748  D005               	goto	l20742
  7073  00574A                     l20740:
  7074                           
  7075                           ; BSR set to: 1
  7076                           ;doprnt.c: 1383: else
  7077                           ;doprnt.c: 1384: width = 0;
  7078  00574A  0E00               	movlw	0
  7079  00574C  0101               	movlb	1	; () banked
  7080  00574E  6F28               	movwf	(sprintf@width+1)& (0+255),b
  7081  005750  0E00               	movlw	0
  7082  005752  6F27               	movwf	sprintf@width& (0+255),b
  7083  005754                     l20742:
  7084                           
  7085                           ; BSR set to: 1
  7086                           ;doprnt.c: 1387: if(flag & 0x04) {
  7087  005754  0101               	movlb	1	; () banked
  7088  005756  A526               	btfss	sprintf@flag& (0+255),2,b
  7089  005758  D024               	goto	l20758
  7090                           
  7091                           ; BSR set to: 1
  7092                           ;doprnt.c: 1392: if(flag & 0x03)
  7093  00575A  C126  F118         	movff	sprintf@flag,??_sprintf
  7094  00575E  0E03               	movlw	3
  7095  005760  0101               	movlb	1	; () banked
  7096  005762  1718               	andwf	??_sprintf& (0+255),f,b
  7097  005764  B4D8               	btfsc	status,2,c
  7098  005766  D009               	goto	l20750
  7099                           
  7100                           ; BSR set to: 1
  7101                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  7102  005768  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7103  00576C  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7104  005770  0E2D               	movlw	45
  7105  005772  6EDF               	movwf	indf2,c
  7106                           
  7107                           ; BSR set to: 1
  7108  005774  0101               	movlb	1	; () banked
  7109  005776  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7110  005778  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7111  00577A                     l20750:
  7112                           
  7113                           ; BSR set to: 1
  7114                           ;doprnt.c: 1415: if(width)
  7115  00577A  0101               	movlb	1	; () banked
  7116  00577C  5127               	movf	sprintf@width& (0+255),w,b
  7117  00577E  0101               	movlb	1	; () banked
  7118  005780  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7119  005782  B4D8               	btfsc	status,2,c
  7120  005784  D037               	goto	l20772
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7124                           
  7125                           ; BSR set to: 1
  7126                           
  7127                           ;doprnt.c: 1416: do
  7128  005786  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7129  00578A  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7130  00578E  0E30               	movlw	48
  7131  005790  6EDF               	movwf	indf2,c
  7132                           
  7133                           ; BSR set to: 1
  7134  005792  0101               	movlb	1	; () banked
  7135  005794  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7136  005796  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;doprnt.c: 1418: while(--width);
  7140  005798  0101               	movlb	1	; () banked
  7141  00579A  0727               	decf	sprintf@width& (0+255),f,b
  7142  00579C  A0D8               	btfss	status,0,c
  7143  00579E  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7144  0057A0  D7EC               	goto	l20750
  7145  0057A2                     l20758:
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;doprnt.c: 1422: {
  7149                           ;doprnt.c: 1424: if(width
  7150                           ;doprnt.c: 1428: )
  7151  0057A2  0101               	movlb	1	; () banked
  7152  0057A4  5127               	movf	sprintf@width& (0+255),w,b
  7153  0057A6  0101               	movlb	1	; () banked
  7154  0057A8  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7155  0057AA  B4D8               	btfsc	status,2,c
  7156  0057AC  D013               	goto	l20766
  7157  0057AE                     l20760:
  7158                           
  7159                           ; BSR set to: 1
  7160                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7161  0057AE  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7162  0057B2  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7163  0057B6  0E20               	movlw	32
  7164  0057B8  6EDF               	movwf	indf2,c
  7165                           
  7166                           ; BSR set to: 1
  7167  0057BA  0101               	movlb	1	; () banked
  7168  0057BC  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7169  0057BE  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 1
  7172                           ;doprnt.c: 1431: while(--width);
  7173  0057C0  0101               	movlb	1	; () banked
  7174  0057C2  0727               	decf	sprintf@width& (0+255),f,b
  7175  0057C4  A0D8               	btfss	status,0,c
  7176  0057C6  0728               	decf	(sprintf@width+1)& (0+255),f,b
  7177  0057C8  0101               	movlb	1	; () banked
  7178  0057CA  5127               	movf	sprintf@width& (0+255),w,b
  7179  0057CC  0101               	movlb	1	; () banked
  7180  0057CE  1128               	iorwf	(sprintf@width+1)& (0+255),w,b
  7181  0057D0  A4D8               	btfss	status,2,c
  7182  0057D2  D7ED               	goto	l20760
  7183  0057D4                     l20766:
  7184                           
  7185                           ; BSR set to: 1
  7186                           ;doprnt.c: 1438: if(flag & 0x03)
  7187  0057D4  C126  F118         	movff	sprintf@flag,??_sprintf
  7188  0057D8  0E03               	movlw	3
  7189  0057DA  0101               	movlb	1	; () banked
  7190  0057DC  1718               	andwf	??_sprintf& (0+255),f,b
  7191  0057DE  B4D8               	btfsc	status,2,c
  7192  0057E0  D009               	goto	l20772
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7196  0057E2  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7197  0057E6  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7198  0057EA  0E2D               	movlw	45
  7199  0057EC  6EDF               	movwf	indf2,c
  7200                           
  7201                           ; BSR set to: 1
  7202  0057EE  0101               	movlb	1	; () banked
  7203  0057F0  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7204  0057F2  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7205  0057F4                     l20772:
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;doprnt.c: 1469: }
  7209                           ;doprnt.c: 1472: prec = c;
  7210  0057F4  C129  F11D         	movff	sprintf@c,sprintf@prec
  7211                           
  7212                           ;doprnt.c: 1474: while(prec--) {
  7213  0057F8  D068               	goto	l20788
  7214  0057FA                     l20774:
  7215                           
  7216                           ; BSR set to: 1
  7217                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7218  0057FA  0101               	movlb	1	; () banked
  7219  0057FC  511D               	movf	sprintf@prec& (0+255),w,b
  7220  0057FE  0D02               	mullw	2
  7221  005800  0EB1               	movlw	low _dpowers
  7222  005802  24F3               	addwf	prodl,w,c
  7223  005804  6EF6               	movwf	tblptrl,c
  7224  005806  0E20               	movlw	high _dpowers
  7225  005808  20F4               	addwfc	prodh,w,c
  7226  00580A  6EF7               	movwf	tblptrh,c
  7227  00580C                     	if	1	;There are 3 active tblptr bytes
  7228  00580C  6AF8               	clrf	tblptru,c
  7229  00580E  0E00               	movlw	low (__mediumconst shr (0+16))
  7230  005810  22F8               	addwfc	tblptru,f,c
  7231  005812                     	endif
  7232  005812  0009               	tblrd		*+
  7233  005814  CFF5 F102          	movff	tablat,___lwdiv@divisor
  7234  005818  000A               	tblrd		*-
  7235  00581A  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  7236  00581E  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  7237  005822  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  7238  005826  EC04  F058         	call	___lwdiv	;wreg free
  7239  00582A  C100  F107         	movff	?___lwdiv,___lwmod@dividend
  7240  00582E  C101  F108         	movff	?___lwdiv+1,___lwmod@dividend+1
  7241  005832  0E00               	movlw	0
  7242  005834  0101               	movlb	1	; () banked
  7243  005836  6F0A               	movwf	(___lwmod@divisor+1)& (0+255),b
  7244  005838  0E0A               	movlw	10
  7245  00583A  6F09               	movwf	___lwmod@divisor& (0+255),b
  7246  00583C  EC60  F059         	call	___lwmod	;wreg free
  7247  005840  0101               	movlb	1	; () banked
  7248  005842  5107               	movf	?___lwmod& (0+255),w,b
  7249  005844  0F30               	addlw	48
  7250  005846  0101               	movlb	1	; () banked
  7251  005848  6F29               	movwf	sprintf@c& (0+255),b
  7252                           
  7253                           ;doprnt.c: 1491: break;
  7254  00584A  D036               	goto	l20784
  7255  00584C                     l20776:
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;doprnt.c: 1499: {
  7259                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7260  00584C  C124  F100         	movff	sprintf@val,___lwdiv@dividend
  7261  005850  C125  F101         	movff	sprintf@val+1,___lwdiv@dividend+1
  7262  005854  0101               	movlb	1	; () banked
  7263  005856  511D               	movf	sprintf@prec& (0+255),w,b
  7264  005858  0D02               	mullw	2
  7265  00585A  0EBB               	movlw	low _hexpowers
  7266  00585C  24F3               	addwf	prodl,w,c
  7267  00585E  6EF6               	movwf	tblptrl,c
  7268  005860  0E20               	movlw	high _hexpowers
  7269  005862  20F4               	addwfc	prodh,w,c
  7270  005864  6EF7               	movwf	tblptrh,c
  7271  005866                     	if	1	;There are 3 active tblptr bytes
  7272  005866  6AF8               	clrf	tblptru,c
  7273  005868  0E00               	movlw	low (__mediumconst shr (0+16))
  7274  00586A  22F8               	addwfc	tblptru,f,c
  7275  00586C                     	endif
  7276  00586C  0009               	tblrd		*+
  7277  00586E  CFF5 F102          	movff	tablat,___lwdiv@divisor
  7278  005872  000A               	tblrd		*-
  7279  005874  CFF5 F103          	movff	tablat,___lwdiv@divisor+1
  7280  005878  EC04  F058         	call	___lwdiv	;wreg free
  7281  00587C  0101               	movlb	1	; () banked
  7282  00587E  5100               	movf	?___lwdiv& (0+255),w,b
  7283  005880  0B0F               	andlw	15
  7284  005882  0101               	movlb	1	; () banked
  7285  005884  6F1C               	movwf	sprintf@idx& (0+255),b
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  7289  005886  0101               	movlb	1	; () banked
  7290  005888  511C               	movf	sprintf@idx& (0+255),w,b
  7291  00588A  0D01               	mullw	1
  7292  00588C  0E93               	movlw	low STR_16
  7293  00588E  24F3               	addwf	prodl,w,c
  7294  005890  6EF6               	movwf	tblptrl,c
  7295  005892  0E23               	movlw	high STR_16
  7296  005894  20F4               	addwfc	prodh,w,c
  7297  005896  6EF7               	movwf	tblptrh,c
  7298  005898                     	if	1	;There are 3 active tblptr bytes
  7299  005898  6AF8               	clrf	tblptru,c
  7300  00589A  0E00               	movlw	low (__mediumconst shr (0+16))
  7301  00589C  22F8               	addwfc	tblptru,f,c
  7302  00589E                     	endif
  7303  00589E  0008               	tblrd		*
  7304  0058A0  CFF5 F129          	movff	tablat,sprintf@c
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;doprnt.c: 1523: }
  7308                           
  7309                           ;doprnt.c: 1508: }
  7310                           ;doprnt.c: 1510: break;
  7311  0058A4  D009               	goto	l20784
  7312  0058A6                     l20782:
  7313                           
  7314                           ; BSR set to: 1
  7315  0058A6  0101               	movlb	1	; () banked
  7316  0058A8  5126               	movf	sprintf@flag& (0+255),w,b
  7317  0058AA  0B80               	andlw	128
  7318                           
  7319                           ; Switch size 1, requested type "space"
  7320                           ; Number of cases is 2, Range of values is 0 to 128
  7321                           ; switch strategies available:
  7322                           ; Name         Instructions Cycles
  7323                           ; simple_byte            7     4 (average)
  7324                           ;	Chosen strategy is simple_byte
  7325  0058AC  0A00               	xorlw	0	; case 0
  7326  0058AE  B4D8               	btfsc	status,2,c
  7327  0058B0  D7A4               	goto	l20774
  7328  0058B2  0A80               	xorlw	128	; case 128
  7329  0058B4  B4D8               	btfsc	status,2,c
  7330  0058B6  D7CA               	goto	l20776
  7331  0058B8                     l20784:
  7332                           
  7333                           ; BSR set to: 1
  7334                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7335  0058B8  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7336  0058BC  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7337  0058C0  C129  FFDF         	movff	sprintf@c,indf2
  7338                           
  7339                           ; BSR set to: 1
  7340  0058C4  0101               	movlb	1	; () banked
  7341  0058C6  4B0C               	infsnz	sprintf@sp& (0+255),f,b
  7342  0058C8  2B0D               	incf	(sprintf@sp+1)& (0+255),f,b
  7343  0058CA                     l20788:
  7344                           
  7345                           ; BSR set to: 1
  7346  0058CA  0101               	movlb	1	; () banked
  7347  0058CC  071D               	decf	sprintf@prec& (0+255),f,b
  7348  0058CE  0101               	movlb	1	; () banked
  7349  0058D0  291D               	incf	sprintf@prec& (0+255),w,b
  7350  0058D2  A4D8               	btfss	status,2,c
  7351  0058D4  D7E8               	goto	l20782
  7352  0058D6                     l20790:
  7353                           
  7354                           ; BSR set to: 1
  7355  0058D6  C10E  FFF6         	movff	sprintf@f,tblptrl
  7356  0058DA  C10F  FFF7         	movff	sprintf@f+1,tblptrh
  7357  0058DE  0101               	movlb	1	; () banked
  7358  0058E0  4B0E               	infsnz	sprintf@f& (0+255),f,b
  7359  0058E2  2B0F               	incf	(sprintf@f+1)& (0+255),f,b
  7360  0058E4                     	if	0	;tblptru may be non-zero
  7361  0058E4                     	endif
  7362  0058E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7363  0058E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7364  0058E6  6EF8               	movwf	tblptru,c
  7365  0058E8                     	endif
  7366  0058E8  0008               	tblrd		*
  7367  0058EA  CFF5 F129          	movff	tablat,sprintf@c
  7368  0058EE  0101               	movlb	1	; () banked
  7369  0058F0  5129               	movf	sprintf@c& (0+255),w,b
  7370  0058F2  A4D8               	btfss	status,2,c
  7371  0058F4  D568               	goto	l20618
  7372  0058F6                     l20792:
  7373                           
  7374                           ;doprnt.c: 1538: *sp = 0;
  7375  0058F6  C10C  FFD9         	movff	sprintf@sp,fsr2l
  7376  0058FA  C10D  FFDA         	movff	sprintf@sp+1,fsr2h
  7377  0058FE  0E00               	movlw	0
  7378  005900  6EDF               	movwf	indf2,c
  7379  005902  0012               	return	
  7380  005904                     __end_of_sprintf:
  7381                           	opt stack 0
  7382                           tblptru	equ	0xFF8
  7383                           tblptrh	equ	0xFF7
  7384                           tblptrl	equ	0xFF6
  7385                           tablat	equ	0xFF5
  7386                           prodh	equ	0xFF4
  7387                           prodl	equ	0xFF3
  7388                           postinc0	equ	0xFEE
  7389                           plusw0	equ	0xFEB
  7390                           wreg	equ	0xFE8
  7391                           postdec1	equ	0xFE5
  7392                           fsr1h	equ	0xFE2
  7393                           fsr1l	equ	0xFE1
  7394                           indf2	equ	0xFDF
  7395                           postinc2	equ	0xFDE
  7396                           postdec2	equ	0xFDD
  7397                           plusw2	equ	0xFDB
  7398                           fsr2h	equ	0xFDA
  7399                           fsr2l	equ	0xFD9
  7400                           status	equ	0xFD8
  7401                           
  7402 ;; *************** function _isdigit *****************
  7403 ;; Defined at:
  7404 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  c               1    wreg     unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  c               1    2[BANK1 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;		None               void
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;Total ram usage:        3 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:   16
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_sprintf
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text9
  7433  00BA58                     __ptext9:
  7434                           	opt stack 0
  7435  00BA58                     _isdigit:
  7436                           	opt stack 13
  7437                           
  7438                           ;incstack = 0
  7439                           ;isdigit@c stored from wreg
  7440  00BA58  0101               	movlb	1	; () banked
  7441  00BA5A  6F02               	movwf	isdigit@c& (0+255),b
  7442  00BA5C  0E00               	movlw	0
  7443  00BA5E  0101               	movlb	1	; () banked
  7444  00BA60  6F01               	movwf	_isdigit$5571& (0+255),b
  7445                           
  7446                           ; BSR set to: 1
  7447  00BA62  0E3A               	movlw	58
  7448  00BA64  0101               	movlb	1	; () banked
  7449  00BA66  6102               	cpfslt	isdigit@c& (0+255),b
  7450  00BA68  D007               	goto	l19392
  7451                           
  7452                           ; BSR set to: 1
  7453  00BA6A  0E2F               	movlw	47
  7454  00BA6C  0101               	movlb	1	; () banked
  7455  00BA6E  6502               	cpfsgt	isdigit@c& (0+255),b
  7456  00BA70  D003               	goto	l19392
  7457                           
  7458                           ; BSR set to: 1
  7459  00BA72  0E01               	movlw	1
  7460  00BA74  0101               	movlb	1	; () banked
  7461  00BA76  6F01               	movwf	_isdigit$5571& (0+255),b
  7462  00BA78                     l19392:
  7463                           
  7464                           ; BSR set to: 1
  7465  00BA78  C101  F100         	movff	_isdigit$5571,??_isdigit
  7466  00BA7C  0101               	movlb	1	; () banked
  7467  00BA7E  3100               	rrcf	??_isdigit& (0+255),w,b
  7468  00BA80  0012               	return	
  7469  00BA82                     __end_of_isdigit:
  7470                           	opt stack 0
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           postinc0	equ	0xFEE
  7478                           plusw0	equ	0xFEB
  7479                           wreg	equ	0xFE8
  7480                           postdec1	equ	0xFE5
  7481                           fsr1h	equ	0xFE2
  7482                           fsr1l	equ	0xFE1
  7483                           indf2	equ	0xFDF
  7484                           postinc2	equ	0xFDE
  7485                           postdec2	equ	0xFDD
  7486                           plusw2	equ	0xFDB
  7487                           fsr2h	equ	0xFDA
  7488                           fsr2l	equ	0xFD9
  7489                           status	equ	0xFD8
  7490                           
  7491 ;; *************** function ___wmul *****************
  7492 ;; Defined at:
  7493 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  multiplier      2    0[BANK1 ] unsigned int 
  7496 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  product         2    4[BANK1 ] unsigned int 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2    0[BANK1 ] unsigned int 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0, prodl, prodh
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7508 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7511 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7512 ;;Total ram usage:        6 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   16
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_sprintf
  7519 ;;		_getReceiverBW
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text10
  7524  00B900                     __ptext10:
  7525                           	opt stack 0
  7526  00B900                     ___wmul:
  7527                           	opt stack 13
  7528                           
  7529                           ; BSR set to: 1
  7530                           ;incstack = 0
  7531  00B900  0101               	movlb	1	; () banked
  7532  00B902  5100               	movf	___wmul@multiplier& (0+255),w,b
  7533  00B904  0101               	movlb	1	; () banked
  7534  00B906  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7535  00B908  CFF3 F104          	movff	prodl,___wmul@product
  7536  00B90C  CFF4 F105          	movff	prodh,___wmul@product+1
  7537  00B910  0101               	movlb	1	; () banked
  7538  00B912  5100               	movf	___wmul@multiplier& (0+255),w,b
  7539  00B914  0101               	movlb	1	; () banked
  7540  00B916  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7541  00B918  50F3               	movf	prodl,w,c
  7542  00B91A  0101               	movlb	1	; () banked
  7543  00B91C  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7544  00B91E  0101               	movlb	1	; () banked
  7545  00B920  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7546  00B922  0101               	movlb	1	; () banked
  7547  00B924  0302               	mulwf	___wmul@multiplicand& (0+255),b
  7548  00B926  50F3               	movf	prodl,w,c
  7549  00B928  0101               	movlb	1	; () banked
  7550  00B92A  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  7551                           
  7552                           ; BSR set to: 1
  7553  00B92C  C104  F100         	movff	___wmul@product,?___wmul
  7554  00B930  C105  F101         	movff	___wmul@product+1,?___wmul+1
  7555  00B934  0012               	return	
  7556  00B936                     __end_of___wmul:
  7557                           	opt stack 0
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           postinc0	equ	0xFEE
  7565                           plusw0	equ	0xFEB
  7566                           wreg	equ	0xFE8
  7567                           postdec1	equ	0xFE5
  7568                           fsr1h	equ	0xFE2
  7569                           fsr1l	equ	0xFE1
  7570                           indf2	equ	0xFDF
  7571                           postinc2	equ	0xFDE
  7572                           postdec2	equ	0xFDD
  7573                           plusw2	equ	0xFDB
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function ___lwmod *****************
  7579 ;; Defined at:
  7580 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  dividend        2    7[BANK1 ] unsigned int 
  7583 ;;  divisor         2    9[BANK1 ] unsigned int 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  counter         1   11[BANK1 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  2    7[BANK1 ] unsigned int 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7595 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7598 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;Total ram usage:        5 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:   16
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_sprintf
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text11
  7610  00B2C0                     __ptext11:
  7611                           	opt stack 0
  7612  00B2C0                     ___lwmod:
  7613                           	opt stack 13
  7614                           
  7615                           ; BSR set to: 1
  7616                           ;incstack = 0
  7617  00B2C0  0101               	movlb	1	; () banked
  7618  00B2C2  5109               	movf	___lwmod@divisor& (0+255),w,b
  7619  00B2C4  0101               	movlb	1	; () banked
  7620  00B2C6  110A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7621  00B2C8  B4D8               	btfsc	status,2,c
  7622  00B2CA  D026               	goto	l2663
  7623                           
  7624                           ; BSR set to: 1
  7625  00B2CC  0E01               	movlw	1
  7626  00B2CE  0101               	movlb	1	; () banked
  7627  00B2D0  6F0B               	movwf	___lwmod@counter& (0+255),b
  7628  00B2D2  D006               	goto	l19460
  7629  00B2D4                     l19458:
  7630                           
  7631                           ; BSR set to: 1
  7632  00B2D4  0101               	movlb	1	; () banked
  7633  00B2D6  90D8               	bcf	status,0,c
  7634  00B2D8  3709               	rlcf	___lwmod@divisor& (0+255),f,b
  7635  00B2DA  370A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7636  00B2DC  0101               	movlb	1	; () banked
  7637  00B2DE  2B0B               	incf	___lwmod@counter& (0+255),f,b
  7638  00B2E0                     l19460:
  7639                           
  7640                           ; BSR set to: 1
  7641  00B2E0  0101               	movlb	1	; () banked
  7642  00B2E2  AF0A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7643  00B2E4  D7F7               	goto	l19458
  7644  00B2E6                     l19462:
  7645                           
  7646                           ; BSR set to: 1
  7647  00B2E6  0101               	movlb	1	; () banked
  7648  00B2E8  5109               	movf	___lwmod@divisor& (0+255),w,b
  7649  00B2EA  0101               	movlb	1	; () banked
  7650  00B2EC  5D07               	subwf	___lwmod@dividend& (0+255),w,b
  7651  00B2EE  0101               	movlb	1	; () banked
  7652  00B2F0  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7653  00B2F2  0101               	movlb	1	; () banked
  7654  00B2F4  5908               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7655  00B2F6  A0D8               	btfss	status,0,c
  7656  00B2F8  D008               	goto	l19466
  7657                           
  7658                           ; BSR set to: 1
  7659  00B2FA  0101               	movlb	1	; () banked
  7660  00B2FC  5109               	movf	___lwmod@divisor& (0+255),w,b
  7661  00B2FE  0101               	movlb	1	; () banked
  7662  00B300  5F07               	subwf	___lwmod@dividend& (0+255),f,b
  7663  00B302  0101               	movlb	1	; () banked
  7664  00B304  510A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7665  00B306  0101               	movlb	1	; () banked
  7666  00B308  5B08               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7667  00B30A                     l19466:
  7668                           
  7669                           ; BSR set to: 1
  7670  00B30A  0101               	movlb	1	; () banked
  7671  00B30C  90D8               	bcf	status,0,c
  7672  00B30E  330A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7673  00B310  3309               	rrcf	___lwmod@divisor& (0+255),f,b
  7674                           
  7675                           ; BSR set to: 1
  7676  00B312  0101               	movlb	1	; () banked
  7677  00B314  2F0B               	decfsz	___lwmod@counter& (0+255),f,b
  7678  00B316  D7E7               	goto	l19462
  7679  00B318                     l2663:
  7680                           
  7681                           ; BSR set to: 1
  7682  00B318  C107  F107         	movff	___lwmod@dividend,?___lwmod
  7683  00B31C  C108  F108         	movff	___lwmod@dividend+1,?___lwmod+1
  7684                           
  7685                           ; BSR set to: 1
  7686  00B320  0012               	return		;funcret
  7687  00B322                     __end_of___lwmod:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           postinc0	equ	0xFEE
  7696                           plusw0	equ	0xFEB
  7697                           wreg	equ	0xFE8
  7698                           postdec1	equ	0xFE5
  7699                           fsr1h	equ	0xFE2
  7700                           fsr1l	equ	0xFE1
  7701                           indf2	equ	0xFDF
  7702                           postinc2	equ	0xFDE
  7703                           postdec2	equ	0xFDD
  7704                           plusw2	equ	0xFDB
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _send_periodic_update *****************
  7710 ;; Defined at:
  7711 ;;		line 587 in file "src/main.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  tmp             1    0        unsigned char 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;Total ram usage:       13 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   19
  7732 ;; This function calls:
  7733 ;;		___ftadd
  7734 ;;		___ftmul
  7735 ;;		___ftneg
  7736 ;;		___fttol
  7737 ;;		_encode_ufixed16_variable
  7738 ;;		_floor
  7739 ;;		_memcpy
  7740 ;;		_sendHIDBinary
  7741 ;; This function is called by:
  7742 ;;		_main
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text12
  7747  0071A0                     __ptext12:
  7748                           	opt stack 0
  7749  0071A0                     _send_periodic_update:
  7750                           	opt stack 11
  7751                           
  7752                           ;main.c: 589: p_buffer = m_buffer;
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;incstack = 0
  7756  0071A0  0ED1               	movlw	low _m_buffer
  7757  0071A2  0101               	movlb	1	; () banked
  7758  0071A4  6FB9               	movwf	_p_buffer& (0+255),b
  7759  0071A6  0E02               	movlw	high _m_buffer
  7760  0071A8  0101               	movlb	1	; () banked
  7761  0071AA  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  7762                           
  7763                           ; BSR set to: 1
  7764                           ;main.c: 590: *(p_buffer++) = 0x4d;
  7765  0071AC  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7766  0071B0  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7767  0071B4  0E4D               	movlw	77
  7768  0071B6  6EDF               	movwf	indf2,c
  7769                           
  7770                           ; BSR set to: 1
  7771  0071B8  0101               	movlb	1	; () banked
  7772  0071BA  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7773  0071BC  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;main.c: 591: *(p_buffer++) = 0x00;
  7777  0071BE  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7778  0071C2  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7779  0071C6  0E00               	movlw	0
  7780  0071C8  6EDF               	movwf	indf2,c
  7781                           
  7782                           ; BSR set to: 1
  7783  0071CA  0101               	movlb	1	; () banked
  7784  0071CC  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7785  0071CE  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 1
  7788                           ;main.c: 592: *(p_buffer++) = 0x00;
  7789  0071D0  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7790  0071D4  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7791  0071D8  0E00               	movlw	0
  7792  0071DA  6EDF               	movwf	indf2,c
  7793                           
  7794                           ; BSR set to: 1
  7795  0071DC  0101               	movlb	1	; () banked
  7796  0071DE  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7797  0071E0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7798                           
  7799                           ; BSR set to: 1
  7800                           ;main.c: 593: *(p_buffer++) = 04;
  7801  0071E2  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7802  0071E6  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7803  0071EA  0E04               	movlw	4
  7804  0071EC  6EDF               	movwf	indf2,c
  7805                           
  7806                           ; BSR set to: 1
  7807  0071EE  0101               	movlb	1	; () banked
  7808  0071F0  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7809  0071F2  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;main.c: 594: *(p_buffer++) = 0xff;
  7813  0071F4  C1B9  FFD9         	movff	_p_buffer,fsr2l
  7814  0071F8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  7815  0071FC  0EFF               	movlw	255
  7816  0071FE  6EDF               	movwf	indf2,c
  7817                           
  7818                           ; BSR set to: 1
  7819  007200  0101               	movlb	1	; () banked
  7820  007202  4BB9               	infsnz	_p_buffer& (0+255),f,b
  7821  007204  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;main.c: 597: memcpy(m_var.label, UPTIME_LABEL, 3);
  7825  007206  0EDE               	movlw	low _m_var
  7826  007208  0101               	movlb	1	; () banked
  7827  00720A  6F00               	movwf	memcpy@d1& (0+255),b
  7828  00720C  0E01               	movlw	high _m_var
  7829  00720E  0101               	movlb	1	; () banked
  7830  007210  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  7831  007212  0ECD               	movlw	low _UPTIME_LABEL
  7832  007214  0101               	movlb	1	; () banked
  7833  007216  6F02               	movwf	memcpy@s1& (0+255),b
  7834  007218  0E21               	movlw	high _UPTIME_LABEL
  7835  00721A  0101               	movlb	1	; () banked
  7836  00721C  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  7837  00721E  0E00               	movlw	0
  7838  007220  0101               	movlb	1	; () banked
  7839  007222  6F05               	movwf	(memcpy@n+1)& (0+255),b
  7840  007224  0E03               	movlw	3
  7841  007226  6F04               	movwf	memcpy@n& (0+255),b
  7842  007228  EC91  F059         	call	_memcpy	;wreg free
  7843                           
  7844                           ;main.c: 598: m_var.unit = 7;
  7845  00722C  0E07               	movlw	7
  7846  00722E  0101               	movlb	1	; () banked
  7847  007230  6FE4               	movwf	(_m_var+6)& (0+255),b
  7848                           
  7849                           ; BSR set to: 1
  7850                           ;main.c: 599: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  7851  007232  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  7852  007236  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  7853  00723A  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  7854  00723E  EC50  F049         	call	_floor	;wreg free
  7855  007242  C12D  F148         	movff	?_floor,_send_periodic_update$6064
  7856  007246  C12E  F149         	movff	?_floor+1,_send_periodic_update$6064+1
  7857  00724A  C12F  F14A         	movff	?_floor+2,_send_periodic_update$6064+2
  7858                           
  7859                           ;main.c: 599: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  7860  00724E  C148  F114         	movff	_send_periodic_update$6064,___fttol@f1
  7861  007252  C149  F115         	movff	_send_periodic_update$6064+1,___fttol@f1+1
  7862  007256  C14A  F116         	movff	_send_periodic_update$6064+2,___fttol@f1+2
  7863  00725A  EC2A  F041         	call	___fttol	;wreg free
  7864  00725E  0101               	movlb	1	; () banked
  7865  007260  5114               	movf	?___fttol& (0+255),w,b
  7866  007262  0101               	movlb	1	; () banked
  7867  007264  6FE2               	movwf	(_m_var+4)& (0+255),b
  7868                           
  7869                           ; BSR set to: 1
  7870                           ;main.c: 600: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7871  007266  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  7872  00726A  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  7873  00726E  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  7874  007272  EC50  F049         	call	_floor	;wreg free
  7875  007276  C12D  F135         	movff	?_floor,___ftneg@f1
  7876  00727A  C12E  F136         	movff	?_floor+1,___ftneg@f1+1
  7877  00727E  C12F  F137         	movff	?_floor+2,___ftneg@f1+2
  7878  007282  ECD0  F05C         	call	___ftneg	;wreg free
  7879  007286  C135  F14B         	movff	?___ftneg,_send_periodic_update$6065
  7880  00728A  C136  F14C         	movff	?___ftneg+1,_send_periodic_update$6065+1
  7881  00728E  C137  F14D         	movff	?___ftneg+2,_send_periodic_update$6065+2
  7882                           
  7883                           ;main.c: 600: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7884  007292  0E00               	movlw	0
  7885  007294  0101               	movlb	1	; () banked
  7886  007296  6F3B               	movwf	___ftmul@f2& (0+255),b
  7887  007298  0EC8               	movlw	200
  7888  00729A  0101               	movlb	1	; () banked
  7889  00729C  6F3C               	movwf	(___ftmul@f2+1)& (0+255),b
  7890  00729E  0E42               	movlw	66
  7891  0072A0  0101               	movlb	1	; () banked
  7892  0072A2  6F3D               	movwf	(___ftmul@f2+2)& (0+255),b
  7893  0072A4  C1B0  F10B         	movff	_m_uptime_days,___ftadd@f2	;volatile
  7894  0072A8  C1B1  F10C         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  7895  0072AC  C1B2  F10D         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  7896  0072B0  C14B  F108         	movff	_send_periodic_update$6065,___ftadd@f1
  7897  0072B4  C14C  F109         	movff	_send_periodic_update$6065+1,___ftadd@f1+1
  7898  0072B8  C14D  F10A         	movff	_send_periodic_update$6065+2,___ftadd@f1+2
  7899  0072BC  EC6E  F034         	call	___ftadd	;wreg free
  7900  0072C0  C108  F138         	movff	?___ftadd,___ftmul@f1
  7901  0072C4  C109  F139         	movff	?___ftadd+1,___ftmul@f1+1
  7902  0072C8  C10A  F13A         	movff	?___ftadd+2,___ftmul@f1+2
  7903  0072CC  EC86  F03E         	call	___ftmul	;wreg free
  7904  0072D0  C138  F14E         	movff	?___ftmul,_send_periodic_update$6066
  7905  0072D4  C139  F14F         	movff	?___ftmul+1,_send_periodic_update$6066+1
  7906  0072D8  C13A  F150         	movff	?___ftmul+2,_send_periodic_update$6066+2
  7907                           
  7908                           ;main.c: 600: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7909  0072DC  C14E  F12D         	movff	_send_periodic_update$6066,floor@x
  7910  0072E0  C14F  F12E         	movff	_send_periodic_update$6066+1,floor@x+1
  7911  0072E4  C150  F12F         	movff	_send_periodic_update$6066+2,floor@x+2
  7912  0072E8  EC50  F049         	call	_floor	;wreg free
  7913  0072EC  C12D  F151         	movff	?_floor,_send_periodic_update$6067
  7914  0072F0  C12E  F152         	movff	?_floor+1,_send_periodic_update$6067+1
  7915  0072F4  C12F  F153         	movff	?_floor+2,_send_periodic_update$6067+2
  7916                           
  7917                           ;main.c: 600: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  7918  0072F8  C151  F114         	movff	_send_periodic_update$6067,___fttol@f1
  7919  0072FC  C152  F115         	movff	_send_periodic_update$6067+1,___fttol@f1+1
  7920  007300  C153  F116         	movff	_send_periodic_update$6067+2,___fttol@f1+2
  7921  007304  EC2A  F041         	call	___fttol	;wreg free
  7922  007308  0101               	movlb	1	; () banked
  7923  00730A  5114               	movf	?___fttol& (0+255),w,b
  7924  00730C  0101               	movlb	1	; () banked
  7925  00730E  6FE3               	movwf	(_m_var+5)& (0+255),b
  7926                           
  7927                           ; BSR set to: 1
  7928                           ;main.c: 601: m_var.writable = 0;
  7929  007310  0E00               	movlw	0
  7930  007312  0101               	movlb	1	; () banked
  7931  007314  6FE5               	movwf	(_m_var+7)& (0+255),b
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;main.c: 602: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  7935  007316  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  7936  00731A  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  7937  00731E  EE21  F0DE         	lfsr	2,_m_var
  7938  007322  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  7939  007326  0E09               	movlw	9
  7940  007328                     u23971:
  7941  007328  CFDB FFEB          	movff	plusw2,plusw0
  7942  00732C  06E8               	decf	wreg,f,c
  7943  00732E  E2FC               	bc	u23971
  7944  007330  ECFB  F050         	call	_encode_ufixed16_variable	;wreg free
  7945  007334  0101               	movlb	1	; () banked
  7946  007336  6F47               	movwf	??_send_periodic_update& (0+255),b
  7947  007338  0101               	movlb	1	; () banked
  7948  00733A  5147               	movf	??_send_periodic_update& (0+255),w,b
  7949  00733C  0D01               	mullw	1
  7950  00733E  50F3               	movf	prodl,w,c
  7951  007340  0101               	movlb	1	; () banked
  7952  007342  27B9               	addwf	_p_buffer& (0+255),f,b
  7953  007344  50F4               	movf	prodh,w,c
  7954  007346  0101               	movlb	1	; () banked
  7955  007348  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;main.c: 604: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  7959  00734A  0ED1               	movlw	low _m_buffer
  7960  00734C  0101               	movlb	1	; () banked
  7961  00734E  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  7962  007350  0E02               	movlw	high _m_buffer
  7963  007352  0101               	movlb	1	; () banked
  7964  007354  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  7965  007356  0ED1               	movlw	_m_buffer& (0+255)
  7966  007358  0800               	sublw	0
  7967  00735A  0101               	movlb	1	; () banked
  7968  00735C  25B9               	addwf	_p_buffer& (0+255),w,b
  7969  00735E  0101               	movlb	1	; () banked
  7970  007360  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  7971  007362  EC7A  F055         	call	_sendHIDBinary	;wreg free
  7972                           
  7973                           ;main.c: 605: _delay((unsigned long)((20)*(16000000/4000.0)));
  7974  007366  0E68               	movlw	104
  7975  007368  0101               	movlb	1	; () banked
  7976  00736A  6F47               	movwf	??_send_periodic_update& (0+255),b
  7977  00736C  0EE4               	movlw	228
  7978  00736E                     u25247:
  7979  00736E  2EE8               	decfsz	wreg,f,c
  7980  007370  D7FE               	goto	u25247
  7981  007372  2F47               	decfsz	??_send_periodic_update& (0+255),f,b
  7982  007374  D7FC               	goto	u25247
  7983  007376  D000               	nop2	
  7984  007378  0012               	return		;funcret
  7985  00737A                     __end_of_send_periodic_update:
  7986                           	opt stack 0
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           prodh	equ	0xFF4
  7992                           prodl	equ	0xFF3
  7993                           postinc0	equ	0xFEE
  7994                           plusw0	equ	0xFEB
  7995                           wreg	equ	0xFE8
  7996                           postdec1	equ	0xFE5
  7997                           fsr1h	equ	0xFE2
  7998                           fsr1l	equ	0xFE1
  7999                           indf2	equ	0xFDF
  8000                           postinc2	equ	0xFDE
  8001                           postdec2	equ	0xFDD
  8002                           plusw2	equ	0xFDB
  8003                           fsr2h	equ	0xFDA
  8004                           fsr2l	equ	0xFD9
  8005                           status	equ	0xFD8
  8006                           
  8007 ;; *************** function _send_network_register *****************
  8008 ;; Defined at:
  8009 ;;		line 472 in file "src/main.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;		None
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;		None               void
  8016 ;; Registers used:
  8017 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8027 ;;Total ram usage:        0 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:   18
  8030 ;; This function calls:
  8031 ;;		_memcpy
  8032 ;;		_sendHIDBinary
  8033 ;; This function is called by:
  8034 ;;		_main
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text13
  8039  00A70A                     __ptext13:
  8040                           	opt stack 0
  8041  00A70A                     _send_network_register:
  8042                           	opt stack 12
  8043                           
  8044                           ;main.c: 475: p_buffer = &m_buffer[0];
  8045                           
  8046                           ;incstack = 0
  8047  00A70A  0ED1               	movlw	low _m_buffer
  8048  00A70C  0101               	movlb	1	; () banked
  8049  00A70E  6FB9               	movwf	_p_buffer& (0+255),b
  8050  00A710  0E02               	movlw	high _m_buffer
  8051  00A712  0101               	movlb	1	; () banked
  8052  00A714  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;main.c: 476: *(p_buffer++) = 0x4d;
  8056  00A716  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8057  00A71A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8058  00A71E  0E4D               	movlw	77
  8059  00A720  6EDF               	movwf	indf2,c
  8060                           
  8061                           ; BSR set to: 1
  8062  00A722  0101               	movlb	1	; () banked
  8063  00A724  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8064  00A726  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8065                           
  8066                           ; BSR set to: 1
  8067                           ;main.c: 477: *(p_buffer++) = 0x00;
  8068  00A728  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8069  00A72C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8070  00A730  0E00               	movlw	0
  8071  00A732  6EDF               	movwf	indf2,c
  8072                           
  8073                           ; BSR set to: 1
  8074  00A734  0101               	movlb	1	; () banked
  8075  00A736  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8076  00A738  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;main.c: 478: *(p_buffer++) = 0x00;
  8080  00A73A  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8081  00A73E  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8082  00A742  0E00               	movlw	0
  8083  00A744  6EDF               	movwf	indf2,c
  8084                           
  8085                           ; BSR set to: 1
  8086  00A746  0101               	movlb	1	; () banked
  8087  00A748  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8088  00A74A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8089                           
  8090                           ; BSR set to: 1
  8091                           ;main.c: 480: *(p_buffer++) = 02;
  8092  00A74C  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8093  00A750  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8094  00A754  0E02               	movlw	2
  8095  00A756  6EDF               	movwf	indf2,c
  8096                           
  8097                           ; BSR set to: 1
  8098  00A758  0101               	movlb	1	; () banked
  8099  00A75A  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8100  00A75C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;main.c: 481: memcpy(p_buffer, &myLongAddress[0], 4);
  8104  00A75E  C1B9  F100         	movff	_p_buffer,memcpy@d1
  8105  00A762  C1BA  F101         	movff	_p_buffer+1,memcpy@d1+1
  8106  00A766  0EE8               	movlw	low _myLongAddress
  8107  00A768  0101               	movlb	1	; () banked
  8108  00A76A  6F02               	movwf	memcpy@s1& (0+255),b
  8109  00A76C  0E01               	movlw	high _myLongAddress
  8110  00A76E  0101               	movlb	1	; () banked
  8111  00A770  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8112  00A772  0E00               	movlw	0
  8113  00A774  0101               	movlb	1	; () banked
  8114  00A776  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8115  00A778  0E04               	movlw	4
  8116  00A77A  6F04               	movwf	memcpy@n& (0+255),b
  8117  00A77C  EC91  F059         	call	_memcpy	;wreg free
  8118                           
  8119                           ;main.c: 482: p_buffer += 4;
  8120  00A780  0E04               	movlw	4
  8121  00A782  0101               	movlb	1	; () banked
  8122  00A784  27B9               	addwf	_p_buffer& (0+255),f,b
  8123  00A786  0E00               	movlw	0
  8124  00A788  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;main.c: 486: *(p_buffer++) = 0xf0;
  8128  00A78A  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8129  00A78E  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8130  00A792  0EF0               	movlw	240
  8131  00A794  6EDF               	movwf	indf2,c
  8132                           
  8133                           ; BSR set to: 1
  8134  00A796  0101               	movlb	1	; () banked
  8135  00A798  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8136  00A79A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;main.c: 489: sendHIDBinary(&m_buffer[0], (p_buffer-&m_buffer[0]));
  8140  00A79C  0ED1               	movlw	low _m_buffer
  8141  00A79E  0101               	movlb	1	; () banked
  8142  00A7A0  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8143  00A7A2  0E02               	movlw	high _m_buffer
  8144  00A7A4  0101               	movlb	1	; () banked
  8145  00A7A6  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8146  00A7A8  0ED1               	movlw	_m_buffer& (0+255)
  8147  00A7AA  0800               	sublw	0
  8148  00A7AC  0101               	movlb	1	; () banked
  8149  00A7AE  25B9               	addwf	_p_buffer& (0+255),w,b
  8150  00A7B0  0101               	movlb	1	; () banked
  8151  00A7B2  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8152  00A7B4  EC7A  F055         	call	_sendHIDBinary	;wreg free
  8153  00A7B8  0012               	return		;funcret
  8154  00A7BA                     __end_of_send_network_register:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           postinc0	equ	0xFEE
  8163                           plusw0	equ	0xFEB
  8164                           wreg	equ	0xFE8
  8165                           postdec1	equ	0xFE5
  8166                           fsr1h	equ	0xFE2
  8167                           fsr1l	equ	0xFE1
  8168                           indf2	equ	0xFDF
  8169                           postinc2	equ	0xFDE
  8170                           postdec2	equ	0xFDD
  8171                           plusw2	equ	0xFDB
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176 ;; *************** function _send_complete_update *****************
  8177 ;; Defined at:
  8178 ;;		line 495 in file "src/main.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  tmp             1    0        unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;		None               void
  8185 ;; Registers used:
  8186 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;Total ram usage:       13 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:   19
  8199 ;; This function calls:
  8200 ;;		___ftadd
  8201 ;;		___ftmul
  8202 ;;		___ftneg
  8203 ;;		___fttol
  8204 ;;		_dBm_to_mW_ufixed16
  8205 ;;		_encode_ufixed16_variable
  8206 ;;		_encode_uint8_variable
  8207 ;;		_floor
  8208 ;;		_memcpy
  8209 ;;		_sendHIDBinary
  8210 ;; This function is called by:
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text14
  8216  006226                     __ptext14:
  8217                           	opt stack 0
  8218  006226                     _send_complete_update:
  8219                           	opt stack 11
  8220                           
  8221                           ;main.c: 497: uint8_t tmp;
  8222                           ;main.c: 498: p_buffer = m_buffer;
  8223                           
  8224                           ;incstack = 0
  8225  006226  0ED1               	movlw	low _m_buffer
  8226  006228  0101               	movlb	1	; () banked
  8227  00622A  6FB9               	movwf	_p_buffer& (0+255),b
  8228  00622C  0E02               	movlw	high _m_buffer
  8229  00622E  0101               	movlb	1	; () banked
  8230  006230  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8231                           
  8232                           ; BSR set to: 1
  8233                           ;main.c: 499: *(p_buffer++) = 0x4d;
  8234  006232  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8235  006236  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8236  00623A  0E4D               	movlw	77
  8237  00623C  6EDF               	movwf	indf2,c
  8238                           
  8239                           ; BSR set to: 1
  8240  00623E  0101               	movlb	1	; () banked
  8241  006240  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8242  006242  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8243                           
  8244                           ; BSR set to: 1
  8245                           ;main.c: 500: *(p_buffer++) = 0x00;
  8246  006244  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8247  006248  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8248  00624C  0E00               	movlw	0
  8249  00624E  6EDF               	movwf	indf2,c
  8250                           
  8251                           ; BSR set to: 1
  8252  006250  0101               	movlb	1	; () banked
  8253  006252  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8254  006254  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 1
  8257                           ;main.c: 501: *(p_buffer++) = 0x00;
  8258  006256  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8259  00625A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8260  00625E  0E00               	movlw	0
  8261  006260  6EDF               	movwf	indf2,c
  8262                           
  8263                           ; BSR set to: 1
  8264  006262  0101               	movlb	1	; () banked
  8265  006264  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8266  006266  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8267                           
  8268                           ; BSR set to: 1
  8269                           ;main.c: 502: *(p_buffer++) = 04;
  8270  006268  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8271  00626C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8272  006270  0E04               	movlw	4
  8273  006272  6EDF               	movwf	indf2,c
  8274                           
  8275                           ; BSR set to: 1
  8276  006274  0101               	movlb	1	; () banked
  8277  006276  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8278  006278  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8279                           
  8280                           ; BSR set to: 1
  8281                           ;main.c: 503: *(p_buffer++) = 0xf0;
  8282  00627A  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8283  00627E  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8284  006282  0EF0               	movlw	240
  8285  006284  6EDF               	movwf	indf2,c
  8286                           
  8287                           ; BSR set to: 1
  8288  006286  0101               	movlb	1	; () banked
  8289  006288  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8290  00628A  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8291                           
  8292                           ; BSR set to: 1
  8293                           ;main.c: 505: memcpy(m_var.label, POWER_LABEL, 3);
  8294  00628C  0EDE               	movlw	low _m_var
  8295  00628E  0101               	movlb	1	; () banked
  8296  006290  6F00               	movwf	memcpy@d1& (0+255),b
  8297  006292  0E01               	movlw	high _m_var
  8298  006294  0101               	movlb	1	; () banked
  8299  006296  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8300  006298  0EC1               	movlw	low _POWER_LABEL
  8301  00629A  0101               	movlb	1	; () banked
  8302  00629C  6F02               	movwf	memcpy@s1& (0+255),b
  8303  00629E  0E21               	movlw	high _POWER_LABEL
  8304  0062A0  0101               	movlb	1	; () banked
  8305  0062A2  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8306  0062A4  0E00               	movlw	0
  8307  0062A6  0101               	movlb	1	; () banked
  8308  0062A8  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8309  0062AA  0E03               	movlw	3
  8310  0062AC  6F04               	movwf	memcpy@n& (0+255),b
  8311  0062AE  EC91  F059         	call	_memcpy	;wreg free
  8312                           
  8313                           ;main.c: 506: m_var.unit = 8;
  8314  0062B2  0E08               	movlw	8
  8315  0062B4  0101               	movlb	1	; () banked
  8316  0062B6  6FE4               	movwf	(_m_var+6)& (0+255),b
  8317                           
  8318                           ; BSR set to: 1
  8319                           ;main.c: 507: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
  8320  0062B8  0EE2               	movlw	low (_m_var+4)
  8321  0062BA  0101               	movlb	1	; () banked
  8322  0062BC  6F00               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
  8323  0062BE  0E01               	movlw	high (_m_var+4)
  8324  0062C0  0101               	movlb	1	; () banked
  8325  0062C2  6F01               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
  8326  0062C4  0EE3               	movlw	low (_m_var+5)
  8327  0062C6  0101               	movlb	1	; () banked
  8328  0062C8  6F02               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
  8329  0062CA  0E01               	movlw	high (_m_var+5)
  8330  0062CC  0101               	movlb	1	; () banked
  8331  0062CE  6F03               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
  8332  0062D0  0101               	movlb	1	; () banked
  8333  0062D2  51C8               	movf	_m_power& (0+255),w,b
  8334  0062D4  EC7E  F045         	call	_dBm_to_mW_ufixed16
  8335                           
  8336                           ;main.c: 508: m_var.writable = 1;
  8337  0062D8  0E01               	movlw	1
  8338  0062DA  0101               	movlb	1	; () banked
  8339  0062DC  6FE5               	movwf	(_m_var+7)& (0+255),b
  8340                           
  8341                           ; BSR set to: 1
  8342                           ;main.c: 509: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  8343  0062DE  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  8344  0062E2  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  8345  0062E6  EE21  F0DE         	lfsr	2,_m_var
  8346  0062EA  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  8347  0062EE  0E09               	movlw	9
  8348  0062F0                     u23761:
  8349  0062F0  CFDB FFEB          	movff	plusw2,plusw0
  8350  0062F4  06E8               	decf	wreg,f,c
  8351  0062F6  E2FC               	bc	u23761
  8352  0062F8  ECFB  F050         	call	_encode_ufixed16_variable	;wreg free
  8353  0062FC  0101               	movlb	1	; () banked
  8354  0062FE  6F47               	movwf	??_send_complete_update& (0+255),b
  8355  006300  0101               	movlb	1	; () banked
  8356  006302  5147               	movf	??_send_complete_update& (0+255),w,b
  8357  006304  0D01               	mullw	1
  8358  006306  50F3               	movf	prodl,w,c
  8359  006308  0101               	movlb	1	; () banked
  8360  00630A  27B9               	addwf	_p_buffer& (0+255),f,b
  8361  00630C  50F4               	movf	prodh,w,c
  8362  00630E  0101               	movlb	1	; () banked
  8363  006310  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8364                           
  8365                           ; BSR set to: 1
  8366                           ;main.c: 510: memcpy(m_var.label, CHANNEL_LABEL, 3);
  8367  006312  0EDE               	movlw	low _m_var
  8368  006314  0101               	movlb	1	; () banked
  8369  006316  6F00               	movwf	memcpy@d1& (0+255),b
  8370  006318  0E01               	movlw	high _m_var
  8371  00631A  0101               	movlb	1	; () banked
  8372  00631C  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8373  00631E  0EB9               	movlw	low _CHANNEL_LABEL
  8374  006320  0101               	movlb	1	; () banked
  8375  006322  6F02               	movwf	memcpy@s1& (0+255),b
  8376  006324  0E21               	movlw	high _CHANNEL_LABEL
  8377  006326  0101               	movlb	1	; () banked
  8378  006328  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8379  00632A  0E00               	movlw	0
  8380  00632C  0101               	movlb	1	; () banked
  8381  00632E  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8382  006330  0E03               	movlw	3
  8383  006332  6F04               	movwf	memcpy@n& (0+255),b
  8384  006334  EC91  F059         	call	_memcpy	;wreg free
  8385                           
  8386                           ;main.c: 511: m_var.unit = 0;
  8387  006338  0E00               	movlw	0
  8388  00633A  0101               	movlb	1	; () banked
  8389  00633C  6FE4               	movwf	(_m_var+6)& (0+255),b
  8390                           
  8391                           ; BSR set to: 1
  8392                           ;main.c: 512: m_var.value_byte1 = BestChannel;
  8393  00633E  C1BE  F1E2         	movff	_BestChannel,_m_var+4
  8394                           
  8395                           ; BSR set to: 1
  8396                           ;main.c: 513: m_var.writable = 0;
  8397  006342  0E00               	movlw	0
  8398  006344  0101               	movlb	1	; () banked
  8399  006346  6FE5               	movwf	(_m_var+7)& (0+255),b
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;main.c: 514: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8403  006348  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8404  00634C  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8405  006350  EE21  F0DE         	lfsr	2,_m_var
  8406  006354  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8407  006358  0E09               	movlw	9
  8408  00635A                     u23771:
  8409  00635A  CFDB FFEB          	movff	plusw2,plusw0
  8410  00635E  06E8               	decf	wreg,f,c
  8411  006360  E2FC               	bc	u23771
  8412  006362  EC89  F054         	call	_encode_uint8_variable	;wreg free
  8413  006366  0101               	movlb	1	; () banked
  8414  006368  6F47               	movwf	??_send_complete_update& (0+255),b
  8415  00636A  0101               	movlb	1	; () banked
  8416  00636C  5147               	movf	??_send_complete_update& (0+255),w,b
  8417  00636E  0D01               	mullw	1
  8418  006370  50F3               	movf	prodl,w,c
  8419  006372  0101               	movlb	1	; () banked
  8420  006374  27B9               	addwf	_p_buffer& (0+255),f,b
  8421  006376  50F4               	movf	prodh,w,c
  8422  006378  0101               	movlb	1	; () banked
  8423  00637A  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 1
  8426                           ;main.c: 515: memcpy(m_var.label, NOISE_LABEL, 3);
  8427  00637C  0EDE               	movlw	low _m_var
  8428  00637E  0101               	movlb	1	; () banked
  8429  006380  6F00               	movwf	memcpy@d1& (0+255),b
  8430  006382  0E01               	movlw	high _m_var
  8431  006384  0101               	movlb	1	; () banked
  8432  006386  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8433  006388  0EBD               	movlw	low _NOISE_LABEL
  8434  00638A  0101               	movlb	1	; () banked
  8435  00638C  6F02               	movwf	memcpy@s1& (0+255),b
  8436  00638E  0E21               	movlw	high _NOISE_LABEL
  8437  006390  0101               	movlb	1	; () banked
  8438  006392  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8439  006394  0E00               	movlw	0
  8440  006396  0101               	movlb	1	; () banked
  8441  006398  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8442  00639A  0E03               	movlw	3
  8443  00639C  6F04               	movwf	memcpy@n& (0+255),b
  8444  00639E  EC91  F059         	call	_memcpy	;wreg free
  8445                           
  8446                           ;main.c: 516: m_var.unit = 0;
  8447  0063A2  0E00               	movlw	0
  8448  0063A4  0101               	movlb	1	; () banked
  8449  0063A6  6FE4               	movwf	(_m_var+6)& (0+255),b
  8450                           
  8451                           ; BSR set to: 1
  8452                           ;main.c: 517: m_var.value_byte1 = noise_level;
  8453  0063A8  C1F7  F1E2         	movff	_noise_level,_m_var+4
  8454                           
  8455                           ; BSR set to: 1
  8456                           ;main.c: 518: m_var.writable = 0;
  8457  0063AC  0E00               	movlw	0
  8458  0063AE  0101               	movlb	1	; () banked
  8459  0063B0  6FE5               	movwf	(_m_var+7)& (0+255),b
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;main.c: 519: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8463  0063B2  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8464  0063B6  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8465  0063BA  EE21  F0DE         	lfsr	2,_m_var
  8466  0063BE  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8467  0063C2  0E09               	movlw	9
  8468  0063C4                     u23781:
  8469  0063C4  CFDB FFEB          	movff	plusw2,plusw0
  8470  0063C8  06E8               	decf	wreg,f,c
  8471  0063CA  E2FC               	bc	u23781
  8472  0063CC  EC89  F054         	call	_encode_uint8_variable	;wreg free
  8473  0063D0  0101               	movlb	1	; () banked
  8474  0063D2  6F47               	movwf	??_send_complete_update& (0+255),b
  8475  0063D4  0101               	movlb	1	; () banked
  8476  0063D6  5147               	movf	??_send_complete_update& (0+255),w,b
  8477  0063D8  0D01               	mullw	1
  8478  0063DA  50F3               	movf	prodl,w,c
  8479  0063DC  0101               	movlb	1	; () banked
  8480  0063DE  27B9               	addwf	_p_buffer& (0+255),f,b
  8481  0063E0  50F4               	movf	prodh,w,c
  8482  0063E2  0101               	movlb	1	; () banked
  8483  0063E4  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;main.c: 521: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8487  0063E6  0ED1               	movlw	low _m_buffer
  8488  0063E8  0101               	movlb	1	; () banked
  8489  0063EA  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8490  0063EC  0E02               	movlw	high _m_buffer
  8491  0063EE  0101               	movlb	1	; () banked
  8492  0063F0  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8493  0063F2  0ED1               	movlw	_m_buffer& (0+255)
  8494  0063F4  0800               	sublw	0
  8495  0063F6  0101               	movlb	1	; () banked
  8496  0063F8  25B9               	addwf	_p_buffer& (0+255),w,b
  8497  0063FA  0101               	movlb	1	; () banked
  8498  0063FC  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8499  0063FE  EC7A  F055         	call	_sendHIDBinary	;wreg free
  8500                           
  8501                           ;main.c: 522: _delay((unsigned long)((20)*(16000000/4000.0)));
  8502  006402  0E68               	movlw	104
  8503  006404  0101               	movlb	1	; () banked
  8504  006406  6F47               	movwf	??_send_complete_update& (0+255),b
  8505  006408  0EE4               	movlw	228
  8506  00640A                     u25257:
  8507  00640A  2EE8               	decfsz	wreg,f,c
  8508  00640C  D7FE               	goto	u25257
  8509  00640E  2F47               	decfsz	??_send_complete_update& (0+255),f,b
  8510  006410  D7FC               	goto	u25257
  8511  006412  D000               	nop2	
  8512                           
  8513                           ;main.c: 524: p_buffer = m_buffer;
  8514  006414  0ED1               	movlw	low _m_buffer
  8515  006416  0101               	movlb	1	; () banked
  8516  006418  6FB9               	movwf	_p_buffer& (0+255),b
  8517  00641A  0E02               	movlw	high _m_buffer
  8518  00641C  0101               	movlb	1	; () banked
  8519  00641E  6FBA               	movwf	(_p_buffer+1)& (0+255),b
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;main.c: 525: *(p_buffer++) = 0x4d;
  8523  006420  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8524  006424  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8525  006428  0E4D               	movlw	77
  8526  00642A  6EDF               	movwf	indf2,c
  8527                           
  8528                           ; BSR set to: 1
  8529  00642C  0101               	movlb	1	; () banked
  8530  00642E  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8531  006430  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8532                           
  8533                           ; BSR set to: 1
  8534                           ;main.c: 526: *(p_buffer++) = 0x00;
  8535  006432  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8536  006436  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8537  00643A  0E00               	movlw	0
  8538  00643C  6EDF               	movwf	indf2,c
  8539                           
  8540                           ; BSR set to: 1
  8541  00643E  0101               	movlb	1	; () banked
  8542  006440  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8543  006442  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8544                           
  8545                           ; BSR set to: 1
  8546                           ;main.c: 527: *(p_buffer++) = 0x00;
  8547  006444  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8548  006448  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8549  00644C  0E00               	movlw	0
  8550  00644E  6EDF               	movwf	indf2,c
  8551                           
  8552                           ; BSR set to: 1
  8553  006450  0101               	movlb	1	; () banked
  8554  006452  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8555  006454  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8556                           
  8557                           ; BSR set to: 1
  8558                           ;main.c: 528: *(p_buffer++) = 04;
  8559  006456  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8560  00645A  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8561  00645E  0E04               	movlw	4
  8562  006460  6EDF               	movwf	indf2,c
  8563                           
  8564                           ; BSR set to: 1
  8565  006462  0101               	movlb	1	; () banked
  8566  006464  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8567  006466  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;main.c: 529: *(p_buffer++) = 0xff;
  8571  006468  C1B9  FFD9         	movff	_p_buffer,fsr2l
  8572  00646C  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
  8573  006470  0EFF               	movlw	255
  8574  006472  6EDF               	movwf	indf2,c
  8575                           
  8576                           ; BSR set to: 1
  8577  006474  0101               	movlb	1	; () banked
  8578  006476  4BB9               	infsnz	_p_buffer& (0+255),f,b
  8579  006478  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;main.c: 532: memcpy(m_var.label, UPTIME_LABEL, 3);
  8583  00647A  0EDE               	movlw	low _m_var
  8584  00647C  0101               	movlb	1	; () banked
  8585  00647E  6F00               	movwf	memcpy@d1& (0+255),b
  8586  006480  0E01               	movlw	high _m_var
  8587  006482  0101               	movlb	1	; () banked
  8588  006484  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8589  006486  0ECD               	movlw	low _UPTIME_LABEL
  8590  006488  0101               	movlb	1	; () banked
  8591  00648A  6F02               	movwf	memcpy@s1& (0+255),b
  8592  00648C  0E21               	movlw	high _UPTIME_LABEL
  8593  00648E  0101               	movlb	1	; () banked
  8594  006490  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8595  006492  0E00               	movlw	0
  8596  006494  0101               	movlb	1	; () banked
  8597  006496  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8598  006498  0E03               	movlw	3
  8599  00649A  6F04               	movwf	memcpy@n& (0+255),b
  8600  00649C  EC91  F059         	call	_memcpy	;wreg free
  8601                           
  8602                           ;main.c: 533: m_var.unit = 7;
  8603  0064A0  0E07               	movlw	7
  8604  0064A2  0101               	movlb	1	; () banked
  8605  0064A4  6FE4               	movwf	(_m_var+6)& (0+255),b
  8606                           
  8607                           ; BSR set to: 1
  8608                           ;main.c: 534: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  8609  0064A6  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  8610  0064AA  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  8611  0064AE  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  8612  0064B2  EC50  F049         	call	_floor	;wreg free
  8613  0064B6  C12D  F148         	movff	?_floor,_send_complete_update$6060
  8614  0064BA  C12E  F149         	movff	?_floor+1,_send_complete_update$6060+1
  8615  0064BE  C12F  F14A         	movff	?_floor+2,_send_complete_update$6060+2
  8616                           
  8617                           ;main.c: 534: m_var.value_byte1 = (uint8_t)floor(m_uptime_days);
  8618  0064C2  C148  F114         	movff	_send_complete_update$6060,___fttol@f1
  8619  0064C6  C149  F115         	movff	_send_complete_update$6060+1,___fttol@f1+1
  8620  0064CA  C14A  F116         	movff	_send_complete_update$6060+2,___fttol@f1+2
  8621  0064CE  EC2A  F041         	call	___fttol	;wreg free
  8622  0064D2  0101               	movlb	1	; () banked
  8623  0064D4  5114               	movf	?___fttol& (0+255),w,b
  8624  0064D6  0101               	movlb	1	; () banked
  8625  0064D8  6FE2               	movwf	(_m_var+4)& (0+255),b
  8626                           
  8627                           ; BSR set to: 1
  8628                           ;main.c: 535: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8629  0064DA  C1B0  F12D         	movff	_m_uptime_days,floor@x	;volatile
  8630  0064DE  C1B1  F12E         	movff	_m_uptime_days+1,floor@x+1	;volatile
  8631  0064E2  C1B2  F12F         	movff	_m_uptime_days+2,floor@x+2	;volatile
  8632  0064E6  EC50  F049         	call	_floor	;wreg free
  8633  0064EA  C12D  F135         	movff	?_floor,___ftneg@f1
  8634  0064EE  C12E  F136         	movff	?_floor+1,___ftneg@f1+1
  8635  0064F2  C12F  F137         	movff	?_floor+2,___ftneg@f1+2
  8636  0064F6  ECD0  F05C         	call	___ftneg	;wreg free
  8637  0064FA  C135  F14B         	movff	?___ftneg,_send_complete_update$6061
  8638  0064FE  C136  F14C         	movff	?___ftneg+1,_send_complete_update$6061+1
  8639  006502  C137  F14D         	movff	?___ftneg+2,_send_complete_update$6061+2
  8640                           
  8641                           ;main.c: 535: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8642  006506  0E00               	movlw	0
  8643  006508  0101               	movlb	1	; () banked
  8644  00650A  6F3B               	movwf	___ftmul@f2& (0+255),b
  8645  00650C  0EC8               	movlw	200
  8646  00650E  0101               	movlb	1	; () banked
  8647  006510  6F3C               	movwf	(___ftmul@f2+1)& (0+255),b
  8648  006512  0E42               	movlw	66
  8649  006514  0101               	movlb	1	; () banked
  8650  006516  6F3D               	movwf	(___ftmul@f2+2)& (0+255),b
  8651  006518  C1B0  F10B         	movff	_m_uptime_days,___ftadd@f2	;volatile
  8652  00651C  C1B1  F10C         	movff	_m_uptime_days+1,___ftadd@f2+1	;volatile
  8653  006520  C1B2  F10D         	movff	_m_uptime_days+2,___ftadd@f2+2	;volatile
  8654  006524  C14B  F108         	movff	_send_complete_update$6061,___ftadd@f1
  8655  006528  C14C  F109         	movff	_send_complete_update$6061+1,___ftadd@f1+1
  8656  00652C  C14D  F10A         	movff	_send_complete_update$6061+2,___ftadd@f1+2
  8657  006530  EC6E  F034         	call	___ftadd	;wreg free
  8658  006534  C108  F138         	movff	?___ftadd,___ftmul@f1
  8659  006538  C109  F139         	movff	?___ftadd+1,___ftmul@f1+1
  8660  00653C  C10A  F13A         	movff	?___ftadd+2,___ftmul@f1+2
  8661  006540  EC86  F03E         	call	___ftmul	;wreg free
  8662  006544  C138  F14E         	movff	?___ftmul,_send_complete_update$6062
  8663  006548  C139  F14F         	movff	?___ftmul+1,_send_complete_update$6062+1
  8664  00654C  C13A  F150         	movff	?___ftmul+2,_send_complete_update$6062+2
  8665                           
  8666                           ;main.c: 535: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8667  006550  C14E  F12D         	movff	_send_complete_update$6062,floor@x
  8668  006554  C14F  F12E         	movff	_send_complete_update$6062+1,floor@x+1
  8669  006558  C150  F12F         	movff	_send_complete_update$6062+2,floor@x+2
  8670  00655C  EC50  F049         	call	_floor	;wreg free
  8671  006560  C12D  F151         	movff	?_floor,_send_complete_update$6063
  8672  006564  C12E  F152         	movff	?_floor+1,_send_complete_update$6063+1
  8673  006568  C12F  F153         	movff	?_floor+2,_send_complete_update$6063+2
  8674                           
  8675                           ;main.c: 535: m_var.value_byte2 = (uint8_t)floor(((m_uptime_days - floor(m_uptime_days))
      +                          *100));
  8676  00656C  C151  F114         	movff	_send_complete_update$6063,___fttol@f1
  8677  006570  C152  F115         	movff	_send_complete_update$6063+1,___fttol@f1+1
  8678  006574  C153  F116         	movff	_send_complete_update$6063+2,___fttol@f1+2
  8679  006578  EC2A  F041         	call	___fttol	;wreg free
  8680  00657C  0101               	movlb	1	; () banked
  8681  00657E  5114               	movf	?___fttol& (0+255),w,b
  8682  006580  0101               	movlb	1	; () banked
  8683  006582  6FE3               	movwf	(_m_var+5)& (0+255),b
  8684                           
  8685                           ; BSR set to: 1
  8686                           ;main.c: 536: m_var.writable = 0;
  8687  006584  0E00               	movlw	0
  8688  006586  0101               	movlb	1	; () banked
  8689  006588  6FE5               	movwf	(_m_var+7)& (0+255),b
  8690                           
  8691                           ; BSR set to: 1
  8692                           ;main.c: 537: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
  8693  00658A  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
  8694  00658E  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
  8695  006592  EE21  F0DE         	lfsr	2,_m_var
  8696  006596  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
  8697  00659A  0E09               	movlw	9
  8698  00659C                     u23791:
  8699  00659C  CFDB FFEB          	movff	plusw2,plusw0
  8700  0065A0  06E8               	decf	wreg,f,c
  8701  0065A2  E2FC               	bc	u23791
  8702  0065A4  ECFB  F050         	call	_encode_ufixed16_variable	;wreg free
  8703  0065A8  0101               	movlb	1	; () banked
  8704  0065AA  6F47               	movwf	??_send_complete_update& (0+255),b
  8705  0065AC  0101               	movlb	1	; () banked
  8706  0065AE  5147               	movf	??_send_complete_update& (0+255),w,b
  8707  0065B0  0D01               	mullw	1
  8708  0065B2  50F3               	movf	prodl,w,c
  8709  0065B4  0101               	movlb	1	; () banked
  8710  0065B6  27B9               	addwf	_p_buffer& (0+255),f,b
  8711  0065B8  50F4               	movf	prodh,w,c
  8712  0065BA  0101               	movlb	1	; () banked
  8713  0065BC  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8714                           
  8715                           ; BSR set to: 1
  8716                           ;main.c: 539: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
  8717  0065BE  0EDE               	movlw	low _m_var
  8718  0065C0  0101               	movlb	1	; () banked
  8719  0065C2  6F00               	movwf	memcpy@d1& (0+255),b
  8720  0065C4  0E01               	movlw	high _m_var
  8721  0065C6  0101               	movlb	1	; () banked
  8722  0065C8  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  8723  0065CA  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
  8724  0065CC  0101               	movlb	1	; () banked
  8725  0065CE  6F02               	movwf	memcpy@s1& (0+255),b
  8726  0065D0  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
  8727  0065D2  0101               	movlb	1	; () banked
  8728  0065D4  6F03               	movwf	(memcpy@s1+1)& (0+255),b
  8729  0065D6  0E00               	movlw	0
  8730  0065D8  0101               	movlb	1	; () banked
  8731  0065DA  6F05               	movwf	(memcpy@n+1)& (0+255),b
  8732  0065DC  0E03               	movlw	3
  8733  0065DE  6F04               	movwf	memcpy@n& (0+255),b
  8734  0065E0  EC91  F059         	call	_memcpy	;wreg free
  8735                           
  8736                           ;main.c: 540: m_var.unit = 4;
  8737  0065E4  0E04               	movlw	4
  8738  0065E6  0101               	movlb	1	; () banked
  8739  0065E8  6FE4               	movwf	(_m_var+6)& (0+255),b
  8740                           
  8741                           ; BSR set to: 1
  8742                           ;main.c: 541: m_var.value_byte1 = m_update_frequency;
  8743  0065EA  C1FA  F1E2         	movff	_m_update_frequency,_m_var+4	;volatile
  8744                           
  8745                           ; BSR set to: 1
  8746                           ;main.c: 542: m_var.writable = 1;
  8747  0065EE  0E01               	movlw	1
  8748  0065F0  0101               	movlb	1	; () banked
  8749  0065F2  6FE5               	movwf	(_m_var+7)& (0+255),b
  8750                           
  8751                           ; BSR set to: 1
  8752                           ;main.c: 543: p_buffer += encode_uint8_variable(p_buffer, m_var);
  8753  0065F4  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
  8754  0065F8  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
  8755  0065FC  EE21  F0DE         	lfsr	2,_m_var
  8756  006600  EE01  F002         	lfsr	0,encode_uint8_variable@var
  8757  006604  0E09               	movlw	9
  8758  006606                     u23801:
  8759  006606  CFDB FFEB          	movff	plusw2,plusw0
  8760  00660A  06E8               	decf	wreg,f,c
  8761  00660C  E2FC               	bc	u23801
  8762  00660E  EC89  F054         	call	_encode_uint8_variable	;wreg free
  8763  006612  0101               	movlb	1	; () banked
  8764  006614  6F47               	movwf	??_send_complete_update& (0+255),b
  8765  006616  0101               	movlb	1	; () banked
  8766  006618  5147               	movf	??_send_complete_update& (0+255),w,b
  8767  00661A  0D01               	mullw	1
  8768  00661C  50F3               	movf	prodl,w,c
  8769  00661E  0101               	movlb	1	; () banked
  8770  006620  27B9               	addwf	_p_buffer& (0+255),f,b
  8771  006622  50F4               	movf	prodh,w,c
  8772  006624  0101               	movlb	1	; () banked
  8773  006626  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
  8774                           
  8775                           ; BSR set to: 1
  8776                           ;main.c: 545: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
  8777  006628  0ED1               	movlw	low _m_buffer
  8778  00662A  0101               	movlb	1	; () banked
  8779  00662C  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
  8780  00662E  0E02               	movlw	high _m_buffer
  8781  006630  0101               	movlb	1	; () banked
  8782  006632  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
  8783  006634  0ED1               	movlw	_m_buffer& (0+255)
  8784  006636  0800               	sublw	0
  8785  006638  0101               	movlb	1	; () banked
  8786  00663A  25B9               	addwf	_p_buffer& (0+255),w,b
  8787  00663C  0101               	movlb	1	; () banked
  8788  00663E  6F0C               	movwf	sendHIDBinary@length& (0+255),b
  8789  006640  EC7A  F055         	call	_sendHIDBinary	;wreg free
  8790                           
  8791                           ;main.c: 546: _delay((unsigned long)((20)*(16000000/4000.0)));
  8792  006644  0E68               	movlw	104
  8793  006646  0101               	movlb	1	; () banked
  8794  006648  6F47               	movwf	??_send_complete_update& (0+255),b
  8795  00664A  0EE4               	movlw	228
  8796  00664C                     u25267:
  8797  00664C  2EE8               	decfsz	wreg,f,c
  8798  00664E  D7FE               	goto	u25267
  8799  006650  2F47               	decfsz	??_send_complete_update& (0+255),f,b
  8800  006652  D7FC               	goto	u25267
  8801  006654  D000               	nop2	
  8802  006656  0012               	return		;funcret
  8803  006658                     __end_of_send_complete_update:
  8804                           	opt stack 0
  8805                           tblptru	equ	0xFF8
  8806                           tblptrh	equ	0xFF7
  8807                           tblptrl	equ	0xFF6
  8808                           tablat	equ	0xFF5
  8809                           prodh	equ	0xFF4
  8810                           prodl	equ	0xFF3
  8811                           postinc0	equ	0xFEE
  8812                           plusw0	equ	0xFEB
  8813                           wreg	equ	0xFE8
  8814                           postdec1	equ	0xFE5
  8815                           fsr1h	equ	0xFE2
  8816                           fsr1l	equ	0xFE1
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           plusw2	equ	0xFDB
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function _floor *****************
  8826 ;; Defined at:
  8827 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  x               3   45[BANK1 ] unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  i               3   48[BANK1 ] unsigned char 
  8832 ;;  expon           2   51[BANK1 ] int 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  3   45[BANK1 ] int 
  8835 ;; Registers used:
  8836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8842 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8845 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8846 ;;Total ram usage:        8 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:   18
  8849 ;; This function calls:
  8850 ;;		___altoft
  8851 ;;		___ftadd
  8852 ;;		___ftge
  8853 ;;		___fttol
  8854 ;;		_frexp
  8855 ;; This function is called by:
  8856 ;;		_send_complete_update
  8857 ;;		_send_periodic_update
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text15
  8862  0092A0                     __ptext15:
  8863                           	opt stack 0
  8864  0092A0                     _floor:
  8865                           	opt stack 11
  8866                           
  8867                           ;incstack = 0
  8868  0092A0  C12D  F100         	movff	floor@x,frexp@value
  8869  0092A4  C12E  F101         	movff	floor@x+1,frexp@value+1
  8870  0092A8  C12F  F102         	movff	floor@x+2,frexp@value+2
  8871  0092AC  0E33               	movlw	low floor@expon
  8872  0092AE  0101               	movlb	1	; () banked
  8873  0092B0  6F03               	movwf	frexp@eptr& (0+255),b
  8874  0092B2  0E01               	movlw	high floor@expon
  8875  0092B4  0101               	movlb	1	; () banked
  8876  0092B6  6F04               	movwf	(frexp@eptr+1)& (0+255),b
  8877  0092B8  ECF3  F056         	call	_frexp	;wreg free
  8878  0092BC  0101               	movlb	1	; () banked
  8879  0092BE  AF34               	btfss	(floor@expon+1)& (0+255),7,b
  8880  0092C0  D017               	goto	l19278
  8881                           
  8882                           ; BSR set to: 1
  8883  0092C2  0101               	movlb	1	; () banked
  8884  0092C4  AF2F               	btfss	(floor@x+2)& (0+255),7,b
  8885  0092C6  D00A               	goto	l19274
  8886                           
  8887                           ; BSR set to: 1
  8888  0092C8  0E00               	movlw	0
  8889  0092CA  0101               	movlb	1	; () banked
  8890  0092CC  6F2D               	movwf	?_floor& (0+255),b
  8891  0092CE  0E80               	movlw	128
  8892  0092D0  0101               	movlb	1	; () banked
  8893  0092D2  6F2E               	movwf	(?_floor+1)& (0+255),b
  8894  0092D4  0EBF               	movlw	191
  8895  0092D6  0101               	movlb	1	; () banked
  8896  0092D8  6F2F               	movwf	(?_floor+2)& (0+255),b
  8897                           
  8898                           ; BSR set to: 1
  8899  0092DA  0012               	return	
  8900  0092DC                     l19274:
  8901                           
  8902                           ; BSR set to: 1
  8903  0092DC  0E00               	movlw	0
  8904  0092DE  0101               	movlb	1	; () banked
  8905  0092E0  6F2D               	movwf	?_floor& (0+255),b
  8906  0092E2  0E00               	movlw	0
  8907  0092E4  0101               	movlb	1	; () banked
  8908  0092E6  6F2E               	movwf	(?_floor+1)& (0+255),b
  8909  0092E8  0E00               	movlw	0
  8910  0092EA  0101               	movlb	1	; () banked
  8911  0092EC  6F2F               	movwf	(?_floor+2)& (0+255),b
  8912                           
  8913                           ; BSR set to: 1
  8914  0092EE  0012               	return	
  8915  0092F0                     l19278:
  8916                           
  8917                           ; BSR set to: 1
  8918  0092F0  0101               	movlb	1	; () banked
  8919  0092F2  5134               	movf	(floor@expon+1)& (0+255),w,b
  8920  0092F4  E105               	bnz	u21980
  8921  0092F6  0E15               	movlw	21
  8922  0092F8  0101               	movlb	1	; () banked
  8923  0092FA  5D33               	subwf	floor@expon& (0+255),w,b
  8924  0092FC  A0D8               	btfss	status,0,c
  8925  0092FE  D007               	goto	l19282
  8926  009300                     u21980:
  8927                           
  8928                           ; BSR set to: 1
  8929  009300  C12D  F12D         	movff	floor@x,?_floor
  8930  009304  C12E  F12E         	movff	floor@x+1,?_floor+1
  8931  009308  C12F  F12F         	movff	floor@x+2,?_floor+2
  8932  00930C  0012               	return	
  8933  00930E                     l19282:
  8934                           
  8935                           ; BSR set to: 1
  8936  00930E  C12D  F114         	movff	floor@x,___fttol@f1
  8937  009312  C12E  F115         	movff	floor@x+1,___fttol@f1+1
  8938  009316  C12F  F116         	movff	floor@x+2,___fttol@f1+2
  8939  00931A  EC2A  F041         	call	___fttol	;wreg free
  8940  00931E  C114  F123         	movff	?___fttol,___altoft@c
  8941  009322  C115  F124         	movff	?___fttol+1,___altoft@c+1
  8942  009326  C116  F125         	movff	?___fttol+2,___altoft@c+2
  8943  00932A  C117  F126         	movff	?___fttol+3,___altoft@c+3
  8944  00932E  ECDC  F054         	call	___altoft	;wreg free
  8945  009332  C123  F130         	movff	?___altoft,floor@i
  8946  009336  C124  F131         	movff	?___altoft+1,floor@i+1
  8947  00933A  C125  F132         	movff	?___altoft+2,floor@i+2
  8948  00933E  C12D  F100         	movff	floor@x,___ftge@ff1
  8949  009342  C12E  F101         	movff	floor@x+1,___ftge@ff1+1
  8950  009346  C12F  F102         	movff	floor@x+2,___ftge@ff1+2
  8951  00934A  C130  F103         	movff	floor@i,___ftge@ff2
  8952  00934E  C131  F104         	movff	floor@i+1,___ftge@ff2+1
  8953  009352  C132  F105         	movff	floor@i+2,___ftge@ff2+2
  8954  009356  EC4B  F04E         	call	___ftge	;wreg free
  8955  00935A  0101               	movlb	1	; () banked
  8956  00935C  B0D8               	btfsc	status,0,c
  8957  00935E  D018               	goto	l2456
  8958                           
  8959                           ; BSR set to: 1
  8960  009360  C130  F108         	movff	floor@i,___ftadd@f1
  8961  009364  C131  F109         	movff	floor@i+1,___ftadd@f1+1
  8962  009368  C132  F10A         	movff	floor@i+2,___ftadd@f1+2
  8963  00936C  0E00               	movlw	0
  8964  00936E  0101               	movlb	1	; () banked
  8965  009370  6F0B               	movwf	___ftadd@f2& (0+255),b
  8966  009372  0E80               	movlw	128
  8967  009374  0101               	movlb	1	; () banked
  8968  009376  6F0C               	movwf	(___ftadd@f2+1)& (0+255),b
  8969  009378  0EBF               	movlw	191
  8970  00937A  0101               	movlb	1	; () banked
  8971  00937C  6F0D               	movwf	(___ftadd@f2+2)& (0+255),b
  8972  00937E  EC6E  F034         	call	___ftadd	;wreg free
  8973  009382  C108  F12D         	movff	?___ftadd,?_floor
  8974  009386  C109  F12E         	movff	?___ftadd+1,?_floor+1
  8975  00938A  C10A  F12F         	movff	?___ftadd+2,?_floor+2
  8976  00938E  0012               	return	
  8977  009390                     l2456:
  8978                           
  8979                           ; BSR set to: 1
  8980  009390  C130  F12D         	movff	floor@i,?_floor
  8981  009394  C131  F12E         	movff	floor@i+1,?_floor+1
  8982  009398  C132  F12F         	movff	floor@i+2,?_floor+2
  8983  00939C  0012               	return		;funcret
  8984  00939E                     __end_of_floor:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           postinc0	equ	0xFEE
  8993                           plusw0	equ	0xFEB
  8994                           wreg	equ	0xFE8
  8995                           postdec1	equ	0xFE5
  8996                           fsr1h	equ	0xFE2
  8997                           fsr1l	equ	0xFE1
  8998                           indf2	equ	0xFDF
  8999                           postinc2	equ	0xFDE
  9000                           postdec2	equ	0xFDD
  9001                           plusw2	equ	0xFDB
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function _frexp *****************
  9007 ;; Defined at:
  9008 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  value           3    0[BANK1 ] int 
  9011 ;;  eptr            2    3[BANK1 ] PTR int 
  9012 ;;		 -> floor@expon(2), 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  3    0[BANK1 ] PTR int 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9024 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;Total ram usage:        7 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:   16
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_floor
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text16
  9039  00ADE6                     __ptext16:
  9040                           	opt stack 0
  9041  00ADE6                     _frexp:
  9042                           	opt stack 12
  9043                           
  9044                           ;incstack = 0
  9045  00ADE6  0101               	movlb	1	; () banked
  9046  00ADE8  5100               	movf	frexp@value& (0+255),w,b
  9047  00ADEA  0101               	movlb	1	; () banked
  9048  00ADEC  1101               	iorwf	(frexp@value+1)& (0+255),w,b
  9049  00ADEE  0101               	movlb	1	; () banked
  9050  00ADF0  1102               	iorwf	(frexp@value+2)& (0+255),w,b
  9051  00ADF2  A4D8               	btfss	status,2,c
  9052  00ADF4  D009               	goto	l18874
  9053                           
  9054                           ; BSR set to: 1
  9055  00ADF6  C103  FFD9         	movff	frexp@eptr,fsr2l
  9056  00ADFA  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9057  00ADFE  0E00               	movlw	0
  9058  00AE00  6EDE               	movwf	postinc2,c
  9059  00AE02  0E00               	movlw	0
  9060  00AE04  6EDD               	movwf	postdec2,c
  9061                           
  9062                           ; BSR set to: 1
  9063                           ;	Return value of _frexp is never used
  9064  00AE06  0012               	return	
  9065  00AE08                     l18874:
  9066                           
  9067                           ; BSR set to: 1
  9068  00AE08  0101               	movlb	1	; () banked
  9069  00AE0A  5102               	movf	(frexp@value+2)& (0+255),w,b
  9070  00AE0C  0B7F               	andlw	127
  9071  00AE0E  0101               	movlb	1	; () banked
  9072  00AE10  6F05               	movwf	??_frexp& (0+255),b
  9073  00AE12  6B06               	clrf	(??_frexp+1)& (0+255),b
  9074  00AE14  90D8               	bcf	status,0,c
  9075  00AE16  0101               	movlb	1	; () banked
  9076  00AE18  3705               	rlcf	??_frexp& (0+255),f,b
  9077  00AE1A  3706               	rlcf	(??_frexp+1)& (0+255),f,b
  9078  00AE1C  C103  FFD9         	movff	frexp@eptr,fsr2l
  9079  00AE20  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9080  00AE24  C105  FFDE         	movff	??_frexp,postinc2
  9081  00AE28  C106  FFDD         	movff	??_frexp+1,postdec2
  9082  00AE2C  0101               	movlb	1	; () banked
  9083  00AE2E  AF01               	btfss	(frexp@value+1)& (0+255),7,b
  9084  00AE30  D004               	goto	u21510
  9085  00AE32  0101               	movlb	1	; () banked
  9086  00AE34  6B05               	clrf	??_frexp& (0+255),b
  9087  00AE36  2B05               	incf	??_frexp& (0+255),f,b
  9088  00AE38  D002               	goto	u21518
  9089  00AE3A                     u21510:
  9090  00AE3A  0101               	movlb	1	; () banked
  9091  00AE3C  6B05               	clrf	??_frexp& (0+255),b
  9092  00AE3E                     u21518:
  9093  00AE3E  0101               	movlb	1	; () banked
  9094  00AE40  5105               	movf	??_frexp& (0+255),w,b
  9095  00AE42  C103  FFD9         	movff	frexp@eptr,fsr2l
  9096  00AE46  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9097  00AE4A  12DE               	iorwf	postinc2,f,c
  9098  00AE4C  0E00               	movlw	0
  9099  00AE4E  12DD               	iorwf	postdec2,f,c
  9100                           
  9101                           ; BSR set to: 1
  9102  00AE50  C103  FFD9         	movff	frexp@eptr,fsr2l
  9103  00AE54  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  9104  00AE58  0E82               	movlw	130
  9105  00AE5A  26DE               	addwf	postinc2,f,c
  9106  00AE5C  0EFF               	movlw	255
  9107  00AE5E  22DD               	addwfc	postdec2,f,c
  9108                           
  9109                           ; BSR set to: 1
  9110  00AE60  0101               	movlb	1	; () banked
  9111  00AE62  8102               	bsf	(frexp@value+2)& (0+255),0,b
  9112  00AE64  8302               	bsf	(frexp@value+2)& (0+255),1,b
  9113  00AE66  8502               	bsf	(frexp@value+2)& (0+255),2,b
  9114  00AE68  8702               	bsf	(frexp@value+2)& (0+255),3,b
  9115  00AE6A  8902               	bsf	(frexp@value+2)& (0+255),4,b
  9116  00AE6C  8B02               	bsf	(frexp@value+2)& (0+255),5,b
  9117  00AE6E  9D02               	bcf	(frexp@value+2)& (0+255),6,b
  9118                           
  9119                           ; BSR set to: 1
  9120  00AE70  0101               	movlb	1	; () banked
  9121  00AE72  9F01               	bcf	(frexp@value+1)& (0+255),7,b
  9122  00AE74  0012               	return	
  9123  00AE76                     __end_of_frexp:
  9124                           	opt stack 0
  9125                           tblptru	equ	0xFF8
  9126                           tblptrh	equ	0xFF7
  9127                           tblptrl	equ	0xFF6
  9128                           tablat	equ	0xFF5
  9129                           prodh	equ	0xFF4
  9130                           prodl	equ	0xFF3
  9131                           postinc0	equ	0xFEE
  9132                           plusw0	equ	0xFEB
  9133                           wreg	equ	0xFE8
  9134                           postdec1	equ	0xFE5
  9135                           fsr1h	equ	0xFE2
  9136                           fsr1l	equ	0xFE1
  9137                           indf2	equ	0xFDF
  9138                           postinc2	equ	0xFDE
  9139                           postdec2	equ	0xFDD
  9140                           plusw2	equ	0xFDB
  9141                           fsr2h	equ	0xFDA
  9142                           fsr2l	equ	0xFD9
  9143                           status	equ	0xFD8
  9144                           
  9145 ;; *************** function ___fttol *****************
  9146 ;; Defined at:
  9147 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  f1              3   20[BANK1 ] float 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  lval            4   30[BANK1 ] unsigned long 
  9152 ;;  exp1            1   34[BANK1 ] unsigned char 
  9153 ;;  sign1           1   29[BANK1 ] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  4   20[BANK1 ] long 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9163 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9164 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9165 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9166 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;Total ram usage:       15 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:   16
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_send_complete_update
  9174 ;;		_send_periodic_update
  9175 ;;		_floor
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text17
  9180  008254                     __ptext17:
  9181                           	opt stack 0
  9182  008254                     ___fttol:
  9183                           	opt stack 12
  9184                           
  9185                           ; BSR set to: 1
  9186                           ;incstack = 0
  9187  008254  C116  F118         	movff	___fttol@f1+2,??___fttol
  9188  008258  0101               	movlb	1	; () banked
  9189  00825A  6B19               	clrf	(??___fttol+1)& (0+255),b
  9190  00825C  6B1A               	clrf	(??___fttol+2)& (0+255),b
  9191  00825E  0101               	movlb	1	; () banked
  9192  008260  3515               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9193  008262  0101               	movlb	1	; () banked
  9194  008264  3718               	rlcf	??___fttol& (0+255),f,b
  9195  008266  E301               	bnc	u21551
  9196  008268  8119               	bsf	(??___fttol+1)& (0+255),0,b
  9197  00826A                     u21551:
  9198  00826A  0101               	movlb	1	; () banked
  9199  00826C  5118               	movf	??___fttol& (0+255),w,b
  9200  00826E  0101               	movlb	1	; () banked
  9201  008270  6F22               	movwf	___fttol@exp1& (0+255),b
  9202  008272  0101               	movlb	1	; () banked
  9203  008274  5122               	movf	___fttol@exp1& (0+255),w,b
  9204  008276  A4D8               	btfss	status,2,c
  9205  008278  D00A               	goto	l18908
  9206                           
  9207                           ; BSR set to: 1
  9208  00827A  0E00               	movlw	0
  9209  00827C  0101               	movlb	1	; () banked
  9210  00827E  6F14               	movwf	?___fttol& (0+255),b
  9211  008280  0E00               	movlw	0
  9212  008282  6F15               	movwf	(?___fttol+1)& (0+255),b
  9213  008284  0E00               	movlw	0
  9214  008286  6F16               	movwf	(?___fttol+2)& (0+255),b
  9215  008288  0E00               	movlw	0
  9216  00828A  6F17               	movwf	(?___fttol+3)& (0+255),b
  9217                           
  9218                           ; BSR set to: 1
  9219  00828C  0012               	return	
  9220  00828E                     l18908:
  9221                           
  9222                           ; BSR set to: 1
  9223  00828E  0E17               	movlw	23
  9224  008290  0101               	movlb	1	; () banked
  9225  008292  6F18               	movwf	??___fttol& (0+255),b
  9226  008294  C114  F119         	movff	___fttol@f1,??___fttol+1
  9227  008298  C115  F11A         	movff	___fttol@f1+1,??___fttol+2
  9228  00829C  C116  F11B         	movff	___fttol@f1+2,??___fttol+3
  9229  0082A0  0101               	movlb	1	; () banked
  9230  0082A2  2918               	incf	??___fttol& (0+255),w,b
  9231  0082A4  0101               	movlb	1	; () banked
  9232  0082A6  6F1C               	movwf	(??___fttol+4)& (0+255),b
  9233  0082A8  D005               	goto	u21570
  9234  0082AA                     u21575:
  9235  0082AA  0101               	movlb	1	; () banked
  9236  0082AC  90D8               	bcf	status,0,c
  9237  0082AE  331B               	rrcf	(??___fttol+3)& (0+255),f,b
  9238  0082B0  331A               	rrcf	(??___fttol+2)& (0+255),f,b
  9239  0082B2  3319               	rrcf	(??___fttol+1)& (0+255),f,b
  9240  0082B4                     u21570:
  9241  0082B4  0101               	movlb	1	; () banked
  9242  0082B6  2F1C               	decfsz	(??___fttol+4)& (0+255),f,b
  9243  0082B8  D7F8               	goto	u21575
  9244  0082BA  0101               	movlb	1	; () banked
  9245  0082BC  5119               	movf	(??___fttol+1)& (0+255),w,b
  9246  0082BE  0101               	movlb	1	; () banked
  9247  0082C0  6F1D               	movwf	___fttol@sign1& (0+255),b
  9248                           
  9249                           ; BSR set to: 1
  9250  0082C2  0101               	movlb	1	; () banked
  9251  0082C4  8F15               	bsf	(___fttol@f1+1)& (0+255),7,b
  9252                           
  9253                           ; BSR set to: 1
  9254  0082C6  0EFF               	movlw	255
  9255  0082C8  0101               	movlb	1	; () banked
  9256  0082CA  1714               	andwf	___fttol@f1& (0+255),f,b
  9257  0082CC  0EFF               	movlw	255
  9258  0082CE  0101               	movlb	1	; () banked
  9259  0082D0  1715               	andwf	(___fttol@f1+1)& (0+255),f,b
  9260  0082D2  0E00               	movlw	0
  9261  0082D4  0101               	movlb	1	; () banked
  9262  0082D6  1716               	andwf	(___fttol@f1+2)& (0+255),f,b
  9263                           
  9264                           ; BSR set to: 1
  9265  0082D8  0101               	movlb	1	; () banked
  9266  0082DA  5114               	movf	___fttol@f1& (0+255),w,b
  9267  0082DC  0101               	movlb	1	; () banked
  9268  0082DE  6F1E               	movwf	___fttol@lval& (0+255),b
  9269  0082E0  0101               	movlb	1	; () banked
  9270  0082E2  5115               	movf	(___fttol@f1+1)& (0+255),w,b
  9271  0082E4  0101               	movlb	1	; () banked
  9272  0082E6  6F1F               	movwf	(___fttol@lval+1)& (0+255),b
  9273  0082E8  0101               	movlb	1	; () banked
  9274  0082EA  5116               	movf	(___fttol@f1+2)& (0+255),w,b
  9275  0082EC  0101               	movlb	1	; () banked
  9276  0082EE  6F20               	movwf	(___fttol@lval+2)& (0+255),b
  9277  0082F0  0101               	movlb	1	; () banked
  9278  0082F2  6B21               	clrf	(___fttol@lval+3)& (0+255),b
  9279                           
  9280                           ; BSR set to: 1
  9281  0082F4  0E8E               	movlw	142
  9282  0082F6  0101               	movlb	1	; () banked
  9283  0082F8  5F22               	subwf	___fttol@exp1& (0+255),f,b
  9284                           
  9285                           ; BSR set to: 1
  9286  0082FA  0101               	movlb	1	; () banked
  9287  0082FC  AF22               	btfss	___fttol@exp1& (0+255),7,b
  9288  0082FE  D01A               	goto	l18930
  9289                           
  9290                           ; BSR set to: 1
  9291  008300  0101               	movlb	1	; () banked
  9292  008302  5122               	movf	___fttol@exp1& (0+255),w,b
  9293  008304  0A80               	xorlw	128
  9294  008306  0F8F               	addlw	143
  9295  008308  B0D8               	btfsc	status,0,c
  9296  00830A  D00A               	goto	l18926
  9297                           
  9298                           ; BSR set to: 1
  9299  00830C  0E00               	movlw	0
  9300  00830E  0101               	movlb	1	; () banked
  9301  008310  6F14               	movwf	?___fttol& (0+255),b
  9302  008312  0E00               	movlw	0
  9303  008314  6F15               	movwf	(?___fttol+1)& (0+255),b
  9304  008316  0E00               	movlw	0
  9305  008318  6F16               	movwf	(?___fttol+2)& (0+255),b
  9306  00831A  0E00               	movlw	0
  9307  00831C  6F17               	movwf	(?___fttol+3)& (0+255),b
  9308                           
  9309                           ; BSR set to: 1
  9310  00831E  0012               	return	
  9311  008320                     l18926:
  9312                           
  9313                           ; BSR set to: 1
  9314  008320  0101               	movlb	1	; () banked
  9315  008322  90D8               	bcf	status,0,c
  9316  008324  3321               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9317  008326  3320               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9318  008328  331F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9319  00832A  331E               	rrcf	___fttol@lval& (0+255),f,b
  9320                           
  9321                           ; BSR set to: 1
  9322  00832C  0101               	movlb	1	; () banked
  9323  00832E  3F22               	incfsz	___fttol@exp1& (0+255),f,b
  9324  008330  D7F7               	goto	l18926
  9325                           
  9326                           ; BSR set to: 1
  9327  008332  D01B               	goto	l18940
  9328  008334                     l18930:
  9329                           
  9330                           ; BSR set to: 1
  9331  008334  0E17               	movlw	23
  9332  008336  0101               	movlb	1	; () banked
  9333  008338  6522               	cpfsgt	___fttol@exp1& (0+255),b
  9334  00833A  D012               	goto	l18938
  9335                           
  9336                           ; BSR set to: 1
  9337  00833C  0E00               	movlw	0
  9338  00833E  0101               	movlb	1	; () banked
  9339  008340  6F14               	movwf	?___fttol& (0+255),b
  9340  008342  0E00               	movlw	0
  9341  008344  6F15               	movwf	(?___fttol+1)& (0+255),b
  9342  008346  0E00               	movlw	0
  9343  008348  6F16               	movwf	(?___fttol+2)& (0+255),b
  9344  00834A  0E00               	movlw	0
  9345  00834C  6F17               	movwf	(?___fttol+3)& (0+255),b
  9346                           
  9347                           ; BSR set to: 1
  9348  00834E  0012               	return	
  9349  008350                     l18936:
  9350                           
  9351                           ; BSR set to: 1
  9352  008350  0101               	movlb	1	; () banked
  9353  008352  90D8               	bcf	status,0,c
  9354  008354  371E               	rlcf	___fttol@lval& (0+255),f,b
  9355  008356  371F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9356  008358  3720               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9357  00835A  3721               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9358  00835C  0101               	movlb	1	; () banked
  9359  00835E  0722               	decf	___fttol@exp1& (0+255),f,b
  9360  008360                     l18938:
  9361                           
  9362                           ; BSR set to: 1
  9363  008360  0101               	movlb	1	; () banked
  9364  008362  5122               	movf	___fttol@exp1& (0+255),w,b
  9365  008364  0101               	movlb	1	; () banked
  9366  008366  A4D8               	btfss	status,2,c
  9367  008368  D7F3               	goto	l18936
  9368  00836A                     l18940:
  9369                           
  9370                           ; BSR set to: 1
  9371  00836A  0101               	movlb	1	; () banked
  9372  00836C  511D               	movf	___fttol@sign1& (0+255),w,b
  9373  00836E  0101               	movlb	1	; () banked
  9374  008370  B4D8               	btfsc	status,2,c
  9375  008372  D009               	goto	l18944
  9376                           
  9377                           ; BSR set to: 1
  9378  008374  0101               	movlb	1	; () banked
  9379  008376  1F21               	comf	(___fttol@lval+3)& (0+255),f,b
  9380  008378  1F20               	comf	(___fttol@lval+2)& (0+255),f,b
  9381  00837A  1F1F               	comf	(___fttol@lval+1)& (0+255),f,b
  9382  00837C  6D1E               	negf	___fttol@lval& (0+255),b
  9383  00837E  0E00               	movlw	0
  9384  008380  231F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9385  008382  2320               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9386  008384  2321               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9387  008386                     l18944:
  9388                           
  9389                           ; BSR set to: 1
  9390  008386  C11E  F114         	movff	___fttol@lval,?___fttol
  9391  00838A  C11F  F115         	movff	___fttol@lval+1,?___fttol+1
  9392  00838E  C120  F116         	movff	___fttol@lval+2,?___fttol+2
  9393  008392  C121  F117         	movff	___fttol@lval+3,?___fttol+3
  9394  008396  0012               	return	
  9395  008398                     __end_of___fttol:
  9396                           	opt stack 0
  9397                           tblptru	equ	0xFF8
  9398                           tblptrh	equ	0xFF7
  9399                           tblptrl	equ	0xFF6
  9400                           tablat	equ	0xFF5
  9401                           prodh	equ	0xFF4
  9402                           prodl	equ	0xFF3
  9403                           postinc0	equ	0xFEE
  9404                           plusw0	equ	0xFEB
  9405                           wreg	equ	0xFE8
  9406                           postdec1	equ	0xFE5
  9407                           fsr1h	equ	0xFE2
  9408                           fsr1l	equ	0xFE1
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           postdec2	equ	0xFDD
  9412                           plusw2	equ	0xFDB
  9413                           fsr2h	equ	0xFDA
  9414                           fsr2l	equ	0xFD9
  9415                           status	equ	0xFD8
  9416                           
  9417 ;; *************** function ___ftge *****************
  9418 ;; Defined at:
  9419 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  ff1             3    0[BANK1 ] float 
  9422 ;;  ff2             3    3[BANK1 ] float 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;		None               void
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        9 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   16
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_floor
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text18
  9449  009C96                     __ptext18:
  9450                           	opt stack 0
  9451  009C96                     ___ftge:
  9452                           	opt stack 12
  9453                           
  9454                           ; BSR set to: 1
  9455                           ;incstack = 0
  9456  009C96  0101               	movlb	1	; () banked
  9457  009C98  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9458  009C9A  D01D               	goto	l18888
  9459                           
  9460                           ; BSR set to: 1
  9461  009C9C  C100  F106         	movff	___ftge@ff1,??___ftge
  9462  009CA0  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  9463  009CA4  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  9464  009CA8  0101               	movlb	1	; () banked
  9465  009CAA  1F06               	comf	??___ftge& (0+255),f,b
  9466  009CAC  1F07               	comf	(??___ftge+1)& (0+255),f,b
  9467  009CAE  1F08               	comf	(??___ftge+2)& (0+255),f,b
  9468  009CB0  2B06               	incf	??___ftge& (0+255),f,b
  9469  009CB2  0E00               	movlw	0
  9470  009CB4  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  9471  009CB6  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  9472  009CB8  0E00               	movlw	0
  9473  009CBA  0101               	movlb	1	; () banked
  9474  009CBC  2506               	addwf	??___ftge& (0+255),w,b
  9475  009CBE  0101               	movlb	1	; () banked
  9476  009CC0  6F00               	movwf	___ftge@ff1& (0+255),b
  9477  009CC2  0E00               	movlw	0
  9478  009CC4  0101               	movlb	1	; () banked
  9479  009CC6  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  9480  009CC8  0101               	movlb	1	; () banked
  9481  009CCA  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  9482  009CCC  0E80               	movlw	128
  9483  009CCE  0101               	movlb	1	; () banked
  9484  009CD0  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  9485  009CD2  0101               	movlb	1	; () banked
  9486  009CD4  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  9487  009CD6                     l18888:
  9488                           
  9489                           ; BSR set to: 1
  9490  009CD6  0101               	movlb	1	; () banked
  9491  009CD8  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9492  009CDA  D01D               	goto	l18892
  9493                           
  9494                           ; BSR set to: 1
  9495  009CDC  C103  F106         	movff	___ftge@ff2,??___ftge
  9496  009CE0  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  9497  009CE4  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  9498  009CE8  0101               	movlb	1	; () banked
  9499  009CEA  1F06               	comf	??___ftge& (0+255),f,b
  9500  009CEC  1F07               	comf	(??___ftge+1)& (0+255),f,b
  9501  009CEE  1F08               	comf	(??___ftge+2)& (0+255),f,b
  9502  009CF0  2B06               	incf	??___ftge& (0+255),f,b
  9503  009CF2  0E00               	movlw	0
  9504  009CF4  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  9505  009CF6  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  9506  009CF8  0E00               	movlw	0
  9507  009CFA  0101               	movlb	1	; () banked
  9508  009CFC  2506               	addwf	??___ftge& (0+255),w,b
  9509  009CFE  0101               	movlb	1	; () banked
  9510  009D00  6F03               	movwf	___ftge@ff2& (0+255),b
  9511  009D02  0E00               	movlw	0
  9512  009D04  0101               	movlb	1	; () banked
  9513  009D06  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  9514  009D08  0101               	movlb	1	; () banked
  9515  009D0A  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  9516  009D0C  0E80               	movlw	128
  9517  009D0E  0101               	movlb	1	; () banked
  9518  009D10  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  9519  009D12  0101               	movlb	1	; () banked
  9520  009D14  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  9521  009D16                     l18892:
  9522                           
  9523                           ; BSR set to: 1
  9524  009D16  0E00               	movlw	0
  9525  009D18  0101               	movlb	1	; () banked
  9526  009D1A  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  9527  009D1C  0E00               	movlw	0
  9528  009D1E  0101               	movlb	1	; () banked
  9529  009D20  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9530  009D22  0E80               	movlw	128
  9531  009D24  0101               	movlb	1	; () banked
  9532  009D26  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9533                           
  9534                           ; BSR set to: 1
  9535  009D28  0E00               	movlw	0
  9536  009D2A  0101               	movlb	1	; () banked
  9537  009D2C  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  9538  009D2E  0E00               	movlw	0
  9539  009D30  0101               	movlb	1	; () banked
  9540  009D32  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9541  009D34  0E80               	movlw	128
  9542  009D36  0101               	movlb	1	; () banked
  9543  009D38  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9544  009D3A  0101               	movlb	1	; () banked
  9545  009D3C  5103               	movf	___ftge@ff2& (0+255),w,b
  9546  009D3E  0101               	movlb	1	; () banked
  9547  009D40  5D00               	subwf	___ftge@ff1& (0+255),w,b
  9548  009D42  0101               	movlb	1	; () banked
  9549  009D44  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  9550  009D46  0101               	movlb	1	; () banked
  9551  009D48  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9552  009D4A  0101               	movlb	1	; () banked
  9553  009D4C  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  9554  009D4E  0101               	movlb	1	; () banked
  9555  009D50  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9556  009D52  B0D8               	btfsc	status,0,c
  9557  009D54  D002               	goto	l18898
  9558                           
  9559                           ; BSR set to: 1
  9560  009D56  90D8               	bcf	status,0,c
  9561  009D58  0012               	return	
  9562  009D5A                     l18898:
  9563                           
  9564                           ; BSR set to: 1
  9565  009D5A  80D8               	bsf	status,0,c
  9566                           
  9567                           ; BSR set to: 1
  9568  009D5C  0012               	return	
  9569  009D5E                     __end_of___ftge:
  9570                           	opt stack 0
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           postinc0	equ	0xFEE
  9578                           plusw0	equ	0xFEB
  9579                           wreg	equ	0xFE8
  9580                           postdec1	equ	0xFE5
  9581                           fsr1h	equ	0xFE2
  9582                           fsr1l	equ	0xFE1
  9583                           indf2	equ	0xFDF
  9584                           postinc2	equ	0xFDE
  9585                           postdec2	equ	0xFDD
  9586                           plusw2	equ	0xFDB
  9587                           fsr2h	equ	0xFDA
  9588                           fsr2l	equ	0xFD9
  9589                           status	equ	0xFD8
  9590                           
  9591 ;; *************** function ___ftadd *****************
  9592 ;; Defined at:
  9593 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  f1              3    8[BANK1 ] float 
  9596 ;;  f2              3   11[BANK1 ] float 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  exp1            1   19[BANK1 ] unsigned char 
  9599 ;;  exp2            1   18[BANK1 ] unsigned char 
  9600 ;;  sign            1   17[BANK1 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  3    8[BANK1 ] float 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9610 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9613 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9614 ;;Total ram usage:       12 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   17
  9617 ;; This function calls:
  9618 ;;		___ftpack
  9619 ;; This function is called by:
  9620 ;;		_send_complete_update
  9621 ;;		_send_periodic_update
  9622 ;;		_floor
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text19
  9627  0068DC                     __ptext19:
  9628                           	opt stack 0
  9629  0068DC                     ___ftadd:
  9630                           	opt stack 11
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;incstack = 0
  9634  0068DC  C10A  F10E         	movff	___ftadd@f1+2,??___ftadd
  9635  0068E0  0101               	movlb	1	; () banked
  9636  0068E2  6B0F               	clrf	(??___ftadd+1)& (0+255),b
  9637  0068E4  6B10               	clrf	(??___ftadd+2)& (0+255),b
  9638  0068E6  0101               	movlb	1	; () banked
  9639  0068E8  3509               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  9640  0068EA  0101               	movlb	1	; () banked
  9641  0068EC  370E               	rlcf	??___ftadd& (0+255),f,b
  9642  0068EE  E301               	bnc	u21291
  9643  0068F0  810F               	bsf	(??___ftadd+1)& (0+255),0,b
  9644  0068F2                     u21291:
  9645  0068F2  0101               	movlb	1	; () banked
  9646  0068F4  510E               	movf	??___ftadd& (0+255),w,b
  9647  0068F6  0101               	movlb	1	; () banked
  9648  0068F8  6F13               	movwf	___ftadd@exp1& (0+255),b
  9649  0068FA  C10D  F10E         	movff	___ftadd@f2+2,??___ftadd
  9650  0068FE  0101               	movlb	1	; () banked
  9651  006900  6B0F               	clrf	(??___ftadd+1)& (0+255),b
  9652  006902  6B10               	clrf	(??___ftadd+2)& (0+255),b
  9653  006904  0101               	movlb	1	; () banked
  9654  006906  350C               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  9655  006908  0101               	movlb	1	; () banked
  9656  00690A  370E               	rlcf	??___ftadd& (0+255),f,b
  9657  00690C  E301               	bnc	u21301
  9658  00690E  810F               	bsf	(??___ftadd+1)& (0+255),0,b
  9659  006910                     u21301:
  9660  006910  0101               	movlb	1	; () banked
  9661  006912  510E               	movf	??___ftadd& (0+255),w,b
  9662  006914  0101               	movlb	1	; () banked
  9663  006916  6F12               	movwf	___ftadd@exp2& (0+255),b
  9664                           
  9665                           ; BSR set to: 1
  9666  006918  0101               	movlb	1	; () banked
  9667  00691A  5113               	movf	___ftadd@exp1& (0+255),w,b
  9668  00691C  0101               	movlb	1	; () banked
  9669  00691E  B4D8               	btfsc	status,2,c
  9670  006920  D011               	goto	l2493
  9671                           
  9672                           ; BSR set to: 1
  9673  006922  0101               	movlb	1	; () banked
  9674  006924  5112               	movf	___ftadd@exp2& (0+255),w,b
  9675  006926  0101               	movlb	1	; () banked
  9676  006928  5D13               	subwf	___ftadd@exp1& (0+255),w,b
  9677  00692A  B0D8               	btfsc	status,0,c
  9678  00692C  D012               	goto	l18806
  9679                           
  9680                           ; BSR set to: 1
  9681  00692E  0101               	movlb	1	; () banked
  9682  006930  5113               	movf	___ftadd@exp1& (0+255),w,b
  9683  006932  0800               	sublw	0
  9684  006934  0101               	movlb	1	; () banked
  9685  006936  2512               	addwf	___ftadd@exp2& (0+255),w,b
  9686  006938  0101               	movlb	1	; () banked
  9687  00693A  6F0E               	movwf	??___ftadd& (0+255),b
  9688  00693C  0E18               	movlw	24
  9689  00693E  0101               	movlb	1	; () banked
  9690  006940  650E               	cpfsgt	??___ftadd& (0+255),b
  9691  006942  D007               	goto	l18806
  9692  006944                     l2493:
  9693                           
  9694                           ; BSR set to: 1
  9695  006944  C10B  F108         	movff	___ftadd@f2,?___ftadd
  9696  006948  C10C  F109         	movff	___ftadd@f2+1,?___ftadd+1
  9697  00694C  C10D  F10A         	movff	___ftadd@f2+2,?___ftadd+2
  9698  006950  0012               	return	
  9699  006952                     l18806:
  9700                           
  9701                           ; BSR set to: 1
  9702  006952  0101               	movlb	1	; () banked
  9703  006954  5112               	movf	___ftadd@exp2& (0+255),w,b
  9704  006956  0101               	movlb	1	; () banked
  9705  006958  B4D8               	btfsc	status,2,c
  9706  00695A  D011               	goto	l2497
  9707                           
  9708                           ; BSR set to: 1
  9709  00695C  0101               	movlb	1	; () banked
  9710  00695E  5113               	movf	___ftadd@exp1& (0+255),w,b
  9711  006960  0101               	movlb	1	; () banked
  9712  006962  5D12               	subwf	___ftadd@exp2& (0+255),w,b
  9713  006964  B0D8               	btfsc	status,0,c
  9714  006966  D012               	goto	l18812
  9715                           
  9716                           ; BSR set to: 1
  9717  006968  0101               	movlb	1	; () banked
  9718  00696A  5112               	movf	___ftadd@exp2& (0+255),w,b
  9719  00696C  0800               	sublw	0
  9720  00696E  0101               	movlb	1	; () banked
  9721  006970  2513               	addwf	___ftadd@exp1& (0+255),w,b
  9722  006972  0101               	movlb	1	; () banked
  9723  006974  6F0E               	movwf	??___ftadd& (0+255),b
  9724  006976  0E18               	movlw	24
  9725  006978  0101               	movlb	1	; () banked
  9726  00697A  650E               	cpfsgt	??___ftadd& (0+255),b
  9727  00697C  D007               	goto	l18812
  9728  00697E                     l2497:
  9729                           
  9730                           ; BSR set to: 1
  9731  00697E  C108  F108         	movff	___ftadd@f1,?___ftadd
  9732  006982  C109  F109         	movff	___ftadd@f1+1,?___ftadd+1
  9733  006986  C10A  F10A         	movff	___ftadd@f1+2,?___ftadd+2
  9734  00698A  0012               	return	
  9735  00698C                     l18812:
  9736                           
  9737                           ; BSR set to: 1
  9738  00698C  0E06               	movlw	6
  9739  00698E  0101               	movlb	1	; () banked
  9740  006990  6F11               	movwf	___ftadd@sign& (0+255),b
  9741                           
  9742                           ; BSR set to: 1
  9743  006992  0101               	movlb	1	; () banked
  9744  006994  AF0A               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9745  006996  D002               	goto	l18818
  9746                           
  9747                           ; BSR set to: 1
  9748  006998  0101               	movlb	1	; () banked
  9749  00699A  8F11               	bsf	___ftadd@sign& (0+255),7,b
  9750  00699C                     l18818:
  9751                           
  9752                           ; BSR set to: 1
  9753  00699C  0101               	movlb	1	; () banked
  9754  00699E  AF0D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9755  0069A0  D002               	goto	l2499
  9756                           
  9757                           ; BSR set to: 1
  9758  0069A2  0101               	movlb	1	; () banked
  9759  0069A4  8D11               	bsf	___ftadd@sign& (0+255),6,b
  9760  0069A6                     l2499:
  9761                           
  9762                           ; BSR set to: 1
  9763  0069A6  0101               	movlb	1	; () banked
  9764  0069A8  8F09               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9765                           
  9766                           ; BSR set to: 1
  9767  0069AA  0EFF               	movlw	255
  9768  0069AC  0101               	movlb	1	; () banked
  9769  0069AE  1708               	andwf	___ftadd@f1& (0+255),f,b
  9770  0069B0  0EFF               	movlw	255
  9771  0069B2  0101               	movlb	1	; () banked
  9772  0069B4  1709               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9773  0069B6  0E00               	movlw	0
  9774  0069B8  0101               	movlb	1	; () banked
  9775  0069BA  170A               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9776  0069BC  0101               	movlb	1	; () banked
  9777  0069BE  8F0C               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9778                           
  9779                           ; BSR set to: 1
  9780  0069C0  0EFF               	movlw	255
  9781  0069C2  0101               	movlb	1	; () banked
  9782  0069C4  170B               	andwf	___ftadd@f2& (0+255),f,b
  9783  0069C6  0EFF               	movlw	255
  9784  0069C8  0101               	movlb	1	; () banked
  9785  0069CA  170C               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9786  0069CC  0E00               	movlw	0
  9787  0069CE  0101               	movlb	1	; () banked
  9788  0069D0  170D               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9789                           
  9790                           ; BSR set to: 1
  9791  0069D2  0101               	movlb	1	; () banked
  9792  0069D4  5112               	movf	___ftadd@exp2& (0+255),w,b
  9793  0069D6  0101               	movlb	1	; () banked
  9794  0069D8  5D13               	subwf	___ftadd@exp1& (0+255),w,b
  9795  0069DA  B0D8               	btfsc	status,0,c
  9796  0069DC  D025               	goto	l18838
  9797  0069DE                     l18828:
  9798                           
  9799                           ; BSR set to: 1
  9800  0069DE  0101               	movlb	1	; () banked
  9801  0069E0  90D8               	bcf	status,0,c
  9802  0069E2  370B               	rlcf	___ftadd@f2& (0+255),f,b
  9803  0069E4  370C               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9804  0069E6  370D               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9805  0069E8  0101               	movlb	1	; () banked
  9806  0069EA  0712               	decf	___ftadd@exp2& (0+255),f,b
  9807                           
  9808                           ; BSR set to: 1
  9809  0069EC  0101               	movlb	1	; () banked
  9810  0069EE  5113               	movf	___ftadd@exp1& (0+255),w,b
  9811  0069F0  0101               	movlb	1	; () banked
  9812  0069F2  1912               	xorwf	___ftadd@exp2& (0+255),w,b
  9813  0069F4  B4D8               	btfsc	status,2,c
  9814  0069F6  D011               	goto	l18836
  9815                           
  9816                           ; BSR set to: 1
  9817  0069F8  0101               	movlb	1	; () banked
  9818  0069FA  0711               	decf	___ftadd@sign& (0+255),f,b
  9819  0069FC  C111  F10E         	movff	___ftadd@sign,??___ftadd
  9820  006A00  0E07               	movlw	7
  9821  006A02  0101               	movlb	1	; () banked
  9822  006A04  170E               	andwf	??___ftadd& (0+255),f,b
  9823  006A06  B4D8               	btfsc	status,2,c
  9824  006A08  D008               	goto	l18836
  9825  006A0A  D7E9               	goto	l18828
  9826  006A0C                     l18834:
  9827                           
  9828                           ; BSR set to: 1
  9829  006A0C  0101               	movlb	1	; () banked
  9830  006A0E  90D8               	bcf	status,0,c
  9831  006A10  330A               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9832  006A12  3309               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9833  006A14  3308               	rrcf	___ftadd@f1& (0+255),f,b
  9834  006A16  0101               	movlb	1	; () banked
  9835  006A18  2B13               	incf	___ftadd@exp1& (0+255),f,b
  9836  006A1A                     l18836:
  9837                           
  9838                           ; BSR set to: 1
  9839  006A1A  0101               	movlb	1	; () banked
  9840  006A1C  5112               	movf	___ftadd@exp2& (0+255),w,b
  9841  006A1E  0101               	movlb	1	; () banked
  9842  006A20  1913               	xorwf	___ftadd@exp1& (0+255),w,b
  9843  006A22  B4D8               	btfsc	status,2,c
  9844  006A24  D02B               	goto	l2508
  9845  006A26  D7F2               	goto	l18834
  9846  006A28                     l18838:
  9847                           
  9848                           ; BSR set to: 1
  9849  006A28  0101               	movlb	1	; () banked
  9850  006A2A  5113               	movf	___ftadd@exp1& (0+255),w,b
  9851  006A2C  0101               	movlb	1	; () banked
  9852  006A2E  5D12               	subwf	___ftadd@exp2& (0+255),w,b
  9853  006A30  B0D8               	btfsc	status,0,c
  9854  006A32  D024               	goto	l2508
  9855  006A34                     l18840:
  9856                           
  9857                           ; BSR set to: 1
  9858  006A34  0101               	movlb	1	; () banked
  9859  006A36  90D8               	bcf	status,0,c
  9860  006A38  3708               	rlcf	___ftadd@f1& (0+255),f,b
  9861  006A3A  3709               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9862  006A3C  370A               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9863  006A3E  0101               	movlb	1	; () banked
  9864  006A40  0713               	decf	___ftadd@exp1& (0+255),f,b
  9865                           
  9866                           ; BSR set to: 1
  9867  006A42  0101               	movlb	1	; () banked
  9868  006A44  5113               	movf	___ftadd@exp1& (0+255),w,b
  9869  006A46  0101               	movlb	1	; () banked
  9870  006A48  1912               	xorwf	___ftadd@exp2& (0+255),w,b
  9871  006A4A  B4D8               	btfsc	status,2,c
  9872  006A4C  D011               	goto	l18848
  9873                           
  9874                           ; BSR set to: 1
  9875  006A4E  0101               	movlb	1	; () banked
  9876  006A50  0711               	decf	___ftadd@sign& (0+255),f,b
  9877  006A52  C111  F10E         	movff	___ftadd@sign,??___ftadd
  9878  006A56  0E07               	movlw	7
  9879  006A58  0101               	movlb	1	; () banked
  9880  006A5A  170E               	andwf	??___ftadd& (0+255),f,b
  9881  006A5C  B4D8               	btfsc	status,2,c
  9882  006A5E  D008               	goto	l18848
  9883  006A60  D7E9               	goto	l18840
  9884  006A62                     l18846:
  9885                           
  9886                           ; BSR set to: 1
  9887  006A62  0101               	movlb	1	; () banked
  9888  006A64  90D8               	bcf	status,0,c
  9889  006A66  330D               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9890  006A68  330C               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9891  006A6A  330B               	rrcf	___ftadd@f2& (0+255),f,b
  9892  006A6C  0101               	movlb	1	; () banked
  9893  006A6E  2B12               	incf	___ftadd@exp2& (0+255),f,b
  9894  006A70                     l18848:
  9895                           
  9896                           ; BSR set to: 1
  9897  006A70  0101               	movlb	1	; () banked
  9898  006A72  5112               	movf	___ftadd@exp2& (0+255),w,b
  9899  006A74  0101               	movlb	1	; () banked
  9900  006A76  1913               	xorwf	___ftadd@exp1& (0+255),w,b
  9901  006A78  A4D8               	btfss	status,2,c
  9902  006A7A  D7F3               	goto	l18846
  9903  006A7C                     l2508:
  9904                           
  9905                           ; BSR set to: 1
  9906  006A7C  0101               	movlb	1	; () banked
  9907  006A7E  AF11               	btfss	___ftadd@sign& (0+255),7,b
  9908  006A80  D012               	goto	l2517
  9909                           
  9910                           ; BSR set to: 1
  9911  006A82  0EFF               	movlw	255
  9912  006A84  0101               	movlb	1	; () banked
  9913  006A86  1B08               	xorwf	___ftadd@f1& (0+255),f,b
  9914  006A88  0EFF               	movlw	255
  9915  006A8A  0101               	movlb	1	; () banked
  9916  006A8C  1B09               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9917  006A8E  0EFF               	movlw	255
  9918  006A90  0101               	movlb	1	; () banked
  9919  006A92  1B0A               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  9920  006A94  0E01               	movlw	1
  9921  006A96  0101               	movlb	1	; () banked
  9922  006A98  2708               	addwf	___ftadd@f1& (0+255),f,b
  9923  006A9A  0E00               	movlw	0
  9924  006A9C  0101               	movlb	1	; () banked
  9925  006A9E  2309               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  9926  006AA0  0E00               	movlw	0
  9927  006AA2  0101               	movlb	1	; () banked
  9928  006AA4  230A               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  9929  006AA6                     l2517:
  9930                           
  9931                           ; BSR set to: 1
  9932  006AA6  0101               	movlb	1	; () banked
  9933  006AA8  AD11               	btfss	___ftadd@sign& (0+255),6,b
  9934  006AAA  D012               	goto	l18854
  9935                           
  9936                           ; BSR set to: 1
  9937  006AAC  0EFF               	movlw	255
  9938  006AAE  0101               	movlb	1	; () banked
  9939  006AB0  1B0B               	xorwf	___ftadd@f2& (0+255),f,b
  9940  006AB2  0EFF               	movlw	255
  9941  006AB4  0101               	movlb	1	; () banked
  9942  006AB6  1B0C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9943  006AB8  0EFF               	movlw	255
  9944  006ABA  0101               	movlb	1	; () banked
  9945  006ABC  1B0D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9946  006ABE  0E01               	movlw	1
  9947  006AC0  0101               	movlb	1	; () banked
  9948  006AC2  270B               	addwf	___ftadd@f2& (0+255),f,b
  9949  006AC4  0E00               	movlw	0
  9950  006AC6  0101               	movlb	1	; () banked
  9951  006AC8  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9952  006ACA  0E00               	movlw	0
  9953  006ACC  0101               	movlb	1	; () banked
  9954  006ACE  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9955  006AD0                     l18854:
  9956                           
  9957                           ; BSR set to: 1
  9958  006AD0  0E00               	movlw	0
  9959  006AD2  0101               	movlb	1	; () banked
  9960  006AD4  6F11               	movwf	___ftadd@sign& (0+255),b
  9961                           
  9962                           ; BSR set to: 1
  9963  006AD6  0101               	movlb	1	; () banked
  9964  006AD8  5108               	movf	___ftadd@f1& (0+255),w,b
  9965  006ADA  0101               	movlb	1	; () banked
  9966  006ADC  270B               	addwf	___ftadd@f2& (0+255),f,b
  9967  006ADE  0101               	movlb	1	; () banked
  9968  006AE0  5109               	movf	(___ftadd@f1+1)& (0+255),w,b
  9969  006AE2  0101               	movlb	1	; () banked
  9970  006AE4  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9971  006AE6  0101               	movlb	1	; () banked
  9972  006AE8  510A               	movf	(___ftadd@f1+2)& (0+255),w,b
  9973  006AEA  0101               	movlb	1	; () banked
  9974  006AEC  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9975                           
  9976                           ; BSR set to: 1
  9977  006AEE  0101               	movlb	1	; () banked
  9978  006AF0  AF0D               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9979  006AF2  D015               	goto	l18864
  9980                           
  9981                           ; BSR set to: 1
  9982  006AF4  0EFF               	movlw	255
  9983  006AF6  0101               	movlb	1	; () banked
  9984  006AF8  1B0B               	xorwf	___ftadd@f2& (0+255),f,b
  9985  006AFA  0EFF               	movlw	255
  9986  006AFC  0101               	movlb	1	; () banked
  9987  006AFE  1B0C               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9988  006B00  0EFF               	movlw	255
  9989  006B02  0101               	movlb	1	; () banked
  9990  006B04  1B0D               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9991  006B06  0E01               	movlw	1
  9992  006B08  0101               	movlb	1	; () banked
  9993  006B0A  270B               	addwf	___ftadd@f2& (0+255),f,b
  9994  006B0C  0E00               	movlw	0
  9995  006B0E  0101               	movlb	1	; () banked
  9996  006B10  230C               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9997  006B12  0E00               	movlw	0
  9998  006B14  0101               	movlb	1	; () banked
  9999  006B16  230D               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10000                           
 10001                           ; BSR set to: 1
 10002  006B18  0E01               	movlw	1
 10003  006B1A  0101               	movlb	1	; () banked
 10004  006B1C  6F11               	movwf	___ftadd@sign& (0+255),b
 10005  006B1E                     l18864:
 10006                           
 10007                           ; BSR set to: 1
 10008  006B1E  C10B  F100         	movff	___ftadd@f2,___ftpack@arg
 10009  006B22  C10C  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
 10010  006B26  C10D  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
 10011  006B2A  C113  F103         	movff	___ftadd@exp1,___ftpack@exp
 10012  006B2E  C111  F104         	movff	___ftadd@sign,___ftpack@sign
 10013  006B32  ECBF  F047         	call	___ftpack	;wreg free
 10014  006B36  C100  F108         	movff	?___ftpack,?___ftadd
 10015  006B3A  C101  F109         	movff	?___ftpack+1,?___ftadd+1
 10016  006B3E  C102  F10A         	movff	?___ftpack+2,?___ftadd+2
 10017  006B42  0012               	return	
 10018  006B44                     __end_of___ftadd:
 10019                           	opt stack 0
 10020                           tblptru	equ	0xFF8
 10021                           tblptrh	equ	0xFF7
 10022                           tblptrl	equ	0xFF6
 10023                           tablat	equ	0xFF5
 10024                           prodh	equ	0xFF4
 10025                           prodl	equ	0xFF3
 10026                           postinc0	equ	0xFEE
 10027                           plusw0	equ	0xFEB
 10028                           wreg	equ	0xFE8
 10029                           postdec1	equ	0xFE5
 10030                           fsr1h	equ	0xFE2
 10031                           fsr1l	equ	0xFE1
 10032                           indf2	equ	0xFDF
 10033                           postinc2	equ	0xFDE
 10034                           postdec2	equ	0xFDD
 10035                           plusw2	equ	0xFDB
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function ___altoft *****************
 10041 ;; Defined at:
 10042 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  c               4   35[BANK1 ] long 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  sign            1   44[BANK1 ] unsigned char 
 10047 ;;  exp             1   43[BANK1 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  3   35[BANK1 ] float 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10057 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10059 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10060 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10061 ;;Total ram usage:       10 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:   17
 10064 ;; This function calls:
 10065 ;;		___ftpack
 10066 ;; This function is called by:
 10067 ;;		_floor
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text20
 10072  00A9B8                     __ptext20:
 10073                           	opt stack 0
 10074  00A9B8                     ___altoft:
 10075                           	opt stack 11
 10076                           
 10077                           ;incstack = 0
 10078  00A9B8  0E00               	movlw	0
 10079  00A9BA  0101               	movlb	1	; () banked
 10080  00A9BC  6F2C               	movwf	___altoft@sign& (0+255),b
 10081  00A9BE  0E8E               	movlw	142
 10082  00A9C0  0101               	movlb	1	; () banked
 10083  00A9C2  6F2B               	movwf	___altoft@exp& (0+255),b
 10084                           
 10085                           ; BSR set to: 1
 10086  00A9C4  0101               	movlb	1	; () banked
 10087  00A9C6  AF26               	btfss	(___altoft@c+3)& (0+255),7,b
 10088  00A9C8  D015               	goto	l18792
 10089                           
 10090                           ; BSR set to: 1
 10091  00A9CA  0101               	movlb	1	; () banked
 10092  00A9CC  1F26               	comf	(___altoft@c+3)& (0+255),f,b
 10093  00A9CE  1F25               	comf	(___altoft@c+2)& (0+255),f,b
 10094  00A9D0  1F24               	comf	(___altoft@c+1)& (0+255),f,b
 10095  00A9D2  6D23               	negf	___altoft@c& (0+255),b
 10096  00A9D4  0E00               	movlw	0
 10097  00A9D6  2324               	addwfc	(___altoft@c+1)& (0+255),f,b
 10098  00A9D8  2325               	addwfc	(___altoft@c+2)& (0+255),f,b
 10099  00A9DA  2326               	addwfc	(___altoft@c+3)& (0+255),f,b
 10100                           
 10101                           ; BSR set to: 1
 10102  00A9DC  0E01               	movlw	1
 10103  00A9DE  0101               	movlb	1	; () banked
 10104  00A9E0  6F2C               	movwf	___altoft@sign& (0+255),b
 10105                           
 10106                           ; BSR set to: 1
 10107  00A9E2  D008               	goto	l18792
 10108  00A9E4                     l18790:
 10109                           
 10110                           ; BSR set to: 1
 10111  00A9E4  0101               	movlb	1	; () banked
 10112  00A9E6  90D8               	bcf	status,0,c
 10113  00A9E8  3326               	rrcf	(___altoft@c+3)& (0+255),f,b
 10114  00A9EA  3325               	rrcf	(___altoft@c+2)& (0+255),f,b
 10115  00A9EC  3324               	rrcf	(___altoft@c+1)& (0+255),f,b
 10116  00A9EE  3323               	rrcf	___altoft@c& (0+255),f,b
 10117  00A9F0  0101               	movlb	1	; () banked
 10118  00A9F2  2B2B               	incf	___altoft@exp& (0+255),f,b
 10119  00A9F4                     l18792:
 10120                           
 10121                           ; BSR set to: 1
 10122  00A9F4  0E00               	movlw	0
 10123  00A9F6  0101               	movlb	1	; () banked
 10124  00A9F8  1523               	andwf	___altoft@c& (0+255),w,b
 10125  00A9FA  0101               	movlb	1	; () banked
 10126  00A9FC  6F27               	movwf	??___altoft& (0+255),b
 10127  00A9FE  0E00               	movlw	0
 10128  00AA00  0101               	movlb	1	; () banked
 10129  00AA02  1524               	andwf	(___altoft@c+1)& (0+255),w,b
 10130  00AA04  0101               	movlb	1	; () banked
 10131  00AA06  6F28               	movwf	(??___altoft+1)& (0+255),b
 10132  00AA08  0E00               	movlw	0
 10133  00AA0A  0101               	movlb	1	; () banked
 10134  00AA0C  1525               	andwf	(___altoft@c+2)& (0+255),w,b
 10135  00AA0E  0101               	movlb	1	; () banked
 10136  00AA10  6F29               	movwf	(??___altoft+2)& (0+255),b
 10137  00AA12  0EFF               	movlw	255
 10138  00AA14  0101               	movlb	1	; () banked
 10139  00AA16  1526               	andwf	(___altoft@c+3)& (0+255),w,b
 10140  00AA18  0101               	movlb	1	; () banked
 10141  00AA1A  6F2A               	movwf	(??___altoft+3)& (0+255),b
 10142  00AA1C  0101               	movlb	1	; () banked
 10143  00AA1E  5127               	movf	??___altoft& (0+255),w,b
 10144  00AA20  0101               	movlb	1	; () banked
 10145  00AA22  1128               	iorwf	(??___altoft+1)& (0+255),w,b
 10146  00AA24  0101               	movlb	1	; () banked
 10147  00AA26  1129               	iorwf	(??___altoft+2)& (0+255),w,b
 10148  00AA28  0101               	movlb	1	; () banked
 10149  00AA2A  112A               	iorwf	(??___altoft+3)& (0+255),w,b
 10150  00AA2C  A4D8               	btfss	status,2,c
 10151  00AA2E  D7DA               	goto	l18790
 10152                           
 10153                           ; BSR set to: 1
 10154                           
 10155                           ; BSR set to: 1
 10156  00AA30  C123  F100         	movff	___altoft@c,___ftpack@arg
 10157  00AA34  C124  F101         	movff	___altoft@c+1,___ftpack@arg+1
 10158  00AA38  C125  F102         	movff	___altoft@c+2,___ftpack@arg+2
 10159  00AA3C  C12B  F103         	movff	___altoft@exp,___ftpack@exp
 10160  00AA40  C12C  F104         	movff	___altoft@sign,___ftpack@sign
 10161  00AA44  ECBF  F047         	call	___ftpack	;wreg free
 10162  00AA48  C100  F123         	movff	?___ftpack,?___altoft
 10163  00AA4C  C101  F124         	movff	?___ftpack+1,?___altoft+1
 10164  00AA50  C102  F125         	movff	?___ftpack+2,?___altoft+2
 10165  00AA54  0012               	return	
 10166  00AA56                     __end_of___altoft:
 10167                           	opt stack 0
 10168                           tblptru	equ	0xFF8
 10169                           tblptrh	equ	0xFF7
 10170                           tblptrl	equ	0xFF6
 10171                           tablat	equ	0xFF5
 10172                           prodh	equ	0xFF4
 10173                           prodl	equ	0xFF3
 10174                           postinc0	equ	0xFEE
 10175                           plusw0	equ	0xFEB
 10176                           wreg	equ	0xFE8
 10177                           postdec1	equ	0xFE5
 10178                           fsr1h	equ	0xFE2
 10179                           fsr1l	equ	0xFE1
 10180                           indf2	equ	0xFDF
 10181                           postinc2	equ	0xFDE
 10182                           postdec2	equ	0xFDD
 10183                           plusw2	equ	0xFDB
 10184                           fsr2h	equ	0xFDA
 10185                           fsr2l	equ	0xFD9
 10186                           status	equ	0xFD8
 10187                           
 10188 ;; *************** function ___ftneg *****************
 10189 ;; Defined at:
 10190 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  f1              3   53[BANK1 ] float 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  3   53[BANK1 ] float 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10204 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10207 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10208 ;;Total ram usage:        3 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:   16
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_send_complete_update
 10215 ;;		_send_periodic_update
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text21
 10220  00B9A0                     __ptext21:
 10221                           	opt stack 0
 10222  00B9A0                     ___ftneg:
 10223                           	opt stack 13
 10224                           
 10225                           ;incstack = 0
 10226  00B9A0  0101               	movlb	1	; () banked
 10227  00B9A2  5135               	movf	___ftneg@f1& (0+255),w,b
 10228  00B9A4  0101               	movlb	1	; () banked
 10229  00B9A6  1136               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10230  00B9A8  0101               	movlb	1	; () banked
 10231  00B9AA  1137               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 10232  00B9AC  B4D8               	btfsc	status,2,c
 10233  00B9AE  D009               	goto	l2550
 10234                           
 10235                           ; BSR set to: 1
 10236  00B9B0  0E00               	movlw	0
 10237  00B9B2  0101               	movlb	1	; () banked
 10238  00B9B4  1B35               	xorwf	___ftneg@f1& (0+255),f,b
 10239  00B9B6  0E00               	movlw	0
 10240  00B9B8  0101               	movlb	1	; () banked
 10241  00B9BA  1B36               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10242  00B9BC  0E80               	movlw	128
 10243  00B9BE  0101               	movlb	1	; () banked
 10244  00B9C0  1B37               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10245  00B9C2                     l2550:
 10246                           
 10247                           ; BSR set to: 1
 10248  00B9C2  C135  F135         	movff	___ftneg@f1,?___ftneg
 10249  00B9C6  C136  F136         	movff	___ftneg@f1+1,?___ftneg+1
 10250  00B9CA  C137  F137         	movff	___ftneg@f1+2,?___ftneg+2
 10251                           
 10252                           ; BSR set to: 1
 10253  00B9CE  0012               	return		;funcret
 10254  00B9D0                     __end_of___ftneg:
 10255                           	opt stack 0
 10256                           tblptru	equ	0xFF8
 10257                           tblptrh	equ	0xFF7
 10258                           tblptrl	equ	0xFF6
 10259                           tablat	equ	0xFF5
 10260                           prodh	equ	0xFF4
 10261                           prodl	equ	0xFF3
 10262                           postinc0	equ	0xFEE
 10263                           plusw0	equ	0xFEB
 10264                           wreg	equ	0xFE8
 10265                           postdec1	equ	0xFE5
 10266                           fsr1h	equ	0xFE2
 10267                           fsr1l	equ	0xFE1
 10268                           indf2	equ	0xFDF
 10269                           postinc2	equ	0xFDE
 10270                           postdec2	equ	0xFDD
 10271                           plusw2	equ	0xFDB
 10272                           fsr2h	equ	0xFDA
 10273                           fsr2l	equ	0xFD9
 10274                           status	equ	0xFD8
 10275                           
 10276 ;; *************** function ___ftmul *****************
 10277 ;; Defined at:
 10278 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  f1              3   56[BANK1 ] float 
 10281 ;;  f2              3   59[BANK1 ] float 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  f3_as_produc    3   66[BANK1 ] unsigned um
 10284 ;;  sign            1   70[BANK1 ] unsigned char 
 10285 ;;  cntr            1   69[BANK1 ] unsigned char 
 10286 ;;  exp             1   65[BANK1 ] unsigned char 
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  3   56[BANK1 ] float 
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10296 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10297 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10298 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10299 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;Total ram usage:       15 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:   17
 10303 ;; This function calls:
 10304 ;;		___ftpack
 10305 ;; This function is called by:
 10306 ;;		_send_complete_update
 10307 ;;		_send_periodic_update
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text22
 10312  007D0C                     __ptext22:
 10313                           	opt stack 0
 10314  007D0C                     ___ftmul:
 10315                           	opt stack 12
 10316                           
 10317                           ; BSR set to: 1
 10318                           ;incstack = 0
 10319  007D0C  C13A  F13E         	movff	___ftmul@f1+2,??___ftmul
 10320  007D10  0101               	movlb	1	; () banked
 10321  007D12  6B3F               	clrf	(??___ftmul+1)& (0+255),b
 10322  007D14  6B40               	clrf	(??___ftmul+2)& (0+255),b
 10323  007D16  0101               	movlb	1	; () banked
 10324  007D18  3539               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10325  007D1A  0101               	movlb	1	; () banked
 10326  007D1C  373E               	rlcf	??___ftmul& (0+255),f,b
 10327  007D1E  E301               	bnc	u22211
 10328  007D20  813F               	bsf	(??___ftmul+1)& (0+255),0,b
 10329  007D22                     u22211:
 10330  007D22  0101               	movlb	1	; () banked
 10331  007D24  513E               	movf	??___ftmul& (0+255),w,b
 10332  007D26  0101               	movlb	1	; () banked
 10333  007D28  6F41               	movwf	___ftmul@exp& (0+255),b
 10334  007D2A  0101               	movlb	1	; () banked
 10335  007D2C  5141               	movf	___ftmul@exp& (0+255),w,b
 10336  007D2E  A4D8               	btfss	status,2,c
 10337  007D30  D00A               	goto	l19408
 10338                           
 10339                           ; BSR set to: 1
 10340  007D32  0E00               	movlw	0
 10341  007D34  0101               	movlb	1	; () banked
 10342  007D36  6F38               	movwf	?___ftmul& (0+255),b
 10343  007D38  0E00               	movlw	0
 10344  007D3A  0101               	movlb	1	; () banked
 10345  007D3C  6F39               	movwf	(?___ftmul+1)& (0+255),b
 10346  007D3E  0E00               	movlw	0
 10347  007D40  0101               	movlb	1	; () banked
 10348  007D42  6F3A               	movwf	(?___ftmul+2)& (0+255),b
 10349                           
 10350                           ; BSR set to: 1
 10351  007D44  0012               	return	
 10352  007D46                     l19408:
 10353                           
 10354                           ; BSR set to: 1
 10355  007D46  C13D  F13E         	movff	___ftmul@f2+2,??___ftmul
 10356  007D4A  0101               	movlb	1	; () banked
 10357  007D4C  6B3F               	clrf	(??___ftmul+1)& (0+255),b
 10358  007D4E  6B40               	clrf	(??___ftmul+2)& (0+255),b
 10359  007D50  0101               	movlb	1	; () banked
 10360  007D52  353C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10361  007D54  0101               	movlb	1	; () banked
 10362  007D56  373E               	rlcf	??___ftmul& (0+255),f,b
 10363  007D58  E301               	bnc	u22231
 10364  007D5A  813F               	bsf	(??___ftmul+1)& (0+255),0,b
 10365  007D5C                     u22231:
 10366  007D5C  0101               	movlb	1	; () banked
 10367  007D5E  513E               	movf	??___ftmul& (0+255),w,b
 10368  007D60  0101               	movlb	1	; () banked
 10369  007D62  6F46               	movwf	___ftmul@sign& (0+255),b
 10370  007D64  0101               	movlb	1	; () banked
 10371  007D66  5146               	movf	___ftmul@sign& (0+255),w,b
 10372  007D68  A4D8               	btfss	status,2,c
 10373  007D6A  D00A               	goto	l19414
 10374                           
 10375                           ; BSR set to: 1
 10376  007D6C  0E00               	movlw	0
 10377  007D6E  0101               	movlb	1	; () banked
 10378  007D70  6F38               	movwf	?___ftmul& (0+255),b
 10379  007D72  0E00               	movlw	0
 10380  007D74  0101               	movlb	1	; () banked
 10381  007D76  6F39               	movwf	(?___ftmul+1)& (0+255),b
 10382  007D78  0E00               	movlw	0
 10383  007D7A  0101               	movlb	1	; () banked
 10384  007D7C  6F3A               	movwf	(?___ftmul+2)& (0+255),b
 10385                           
 10386                           ; BSR set to: 1
 10387  007D7E  0012               	return	
 10388  007D80                     l19414:
 10389                           
 10390                           ; BSR set to: 1
 10391  007D80  0101               	movlb	1	; () banked
 10392  007D82  5146               	movf	___ftmul@sign& (0+255),w,b
 10393  007D84  0F7B               	addlw	123
 10394  007D86  0101               	movlb	1	; () banked
 10395  007D88  2741               	addwf	___ftmul@exp& (0+255),f,b
 10396                           
 10397                           ; BSR set to: 1
 10398  007D8A  C13A  F146         	movff	___ftmul@f1+2,___ftmul@sign
 10399  007D8E  0101               	movlb	1	; () banked
 10400  007D90  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10401  007D92  0101               	movlb	1	; () banked
 10402  007D94  1B46               	xorwf	___ftmul@sign& (0+255),f,b
 10403  007D96  0E80               	movlw	128
 10404  007D98  0101               	movlb	1	; () banked
 10405  007D9A  1746               	andwf	___ftmul@sign& (0+255),f,b
 10406                           
 10407                           ; BSR set to: 1
 10408  007D9C  0101               	movlb	1	; () banked
 10409  007D9E  8F39               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10410                           
 10411                           ; BSR set to: 1
 10412  007DA0  0101               	movlb	1	; () banked
 10413  007DA2  8F3C               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10414                           
 10415                           ; BSR set to: 1
 10416  007DA4  0EFF               	movlw	255
 10417  007DA6  0101               	movlb	1	; () banked
 10418  007DA8  173B               	andwf	___ftmul@f2& (0+255),f,b
 10419  007DAA  0EFF               	movlw	255
 10420  007DAC  0101               	movlb	1	; () banked
 10421  007DAE  173C               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10422  007DB0  0E00               	movlw	0
 10423  007DB2  0101               	movlb	1	; () banked
 10424  007DB4  173D               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10425                           
 10426                           ; BSR set to: 1
 10427  007DB6  0E00               	movlw	0
 10428  007DB8  0101               	movlb	1	; () banked
 10429  007DBA  6F42               	movwf	___ftmul@f3_as_product& (0+255),b
 10430  007DBC  0E00               	movlw	0
 10431  007DBE  0101               	movlb	1	; () banked
 10432  007DC0  6F43               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10433  007DC2  0E00               	movlw	0
 10434  007DC4  0101               	movlb	1	; () banked
 10435  007DC6  6F44               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10436                           
 10437                           ; BSR set to: 1
 10438  007DC8  0E07               	movlw	7
 10439  007DCA  0101               	movlb	1	; () banked
 10440  007DCC  6F45               	movwf	___ftmul@cntr& (0+255),b
 10441  007DCE                     l19428:
 10442                           
 10443                           ; BSR set to: 1
 10444  007DCE  0101               	movlb	1	; () banked
 10445  007DD0  A138               	btfss	___ftmul@f1& (0+255),0,b
 10446  007DD2  D00C               	goto	l19432
 10447                           
 10448                           ; BSR set to: 1
 10449  007DD4  0101               	movlb	1	; () banked
 10450  007DD6  513B               	movf	___ftmul@f2& (0+255),w,b
 10451  007DD8  0101               	movlb	1	; () banked
 10452  007DDA  2742               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10453  007DDC  0101               	movlb	1	; () banked
 10454  007DDE  513C               	movf	(___ftmul@f2+1)& (0+255),w,b
 10455  007DE0  0101               	movlb	1	; () banked
 10456  007DE2  2343               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10457  007DE4  0101               	movlb	1	; () banked
 10458  007DE6  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10459  007DE8  0101               	movlb	1	; () banked
 10460  007DEA  2344               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10461  007DEC                     l19432:
 10462                           
 10463                           ; BSR set to: 1
 10464  007DEC  0101               	movlb	1	; () banked
 10465  007DEE  90D8               	bcf	status,0,c
 10466  007DF0  333A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10467  007DF2  3339               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10468  007DF4  3338               	rrcf	___ftmul@f1& (0+255),f,b
 10469  007DF6  0101               	movlb	1	; () banked
 10470  007DF8  90D8               	bcf	status,0,c
 10471  007DFA  373B               	rlcf	___ftmul@f2& (0+255),f,b
 10472  007DFC  373C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10473  007DFE  373D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10474                           
 10475                           ; BSR set to: 1
 10476  007E00  0101               	movlb	1	; () banked
 10477  007E02  2F45               	decfsz	___ftmul@cntr& (0+255),f,b
 10478  007E04  D7E4               	goto	l19428
 10479                           
 10480                           ; BSR set to: 1
 10481                           
 10482                           ; BSR set to: 1
 10483  007E06  0E09               	movlw	9
 10484  007E08  0101               	movlb	1	; () banked
 10485  007E0A  6F45               	movwf	___ftmul@cntr& (0+255),b
 10486  007E0C                     l19438:
 10487                           
 10488                           ; BSR set to: 1
 10489  007E0C  0101               	movlb	1	; () banked
 10490  007E0E  A138               	btfss	___ftmul@f1& (0+255),0,b
 10491  007E10  D00C               	goto	l19442
 10492                           
 10493                           ; BSR set to: 1
 10494  007E12  0101               	movlb	1	; () banked
 10495  007E14  513B               	movf	___ftmul@f2& (0+255),w,b
 10496  007E16  0101               	movlb	1	; () banked
 10497  007E18  2742               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10498  007E1A  0101               	movlb	1	; () banked
 10499  007E1C  513C               	movf	(___ftmul@f2+1)& (0+255),w,b
 10500  007E1E  0101               	movlb	1	; () banked
 10501  007E20  2343               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10502  007E22  0101               	movlb	1	; () banked
 10503  007E24  513D               	movf	(___ftmul@f2+2)& (0+255),w,b
 10504  007E26  0101               	movlb	1	; () banked
 10505  007E28  2344               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10506  007E2A                     l19442:
 10507                           
 10508                           ; BSR set to: 1
 10509  007E2A  0101               	movlb	1	; () banked
 10510  007E2C  90D8               	bcf	status,0,c
 10511  007E2E  333A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10512  007E30  3339               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10513  007E32  3338               	rrcf	___ftmul@f1& (0+255),f,b
 10514  007E34  0101               	movlb	1	; () banked
 10515  007E36  90D8               	bcf	status,0,c
 10516  007E38  3344               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10517  007E3A  3343               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10518  007E3C  3342               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 1
 10521  007E3E  0101               	movlb	1	; () banked
 10522  007E40  2F45               	decfsz	___ftmul@cntr& (0+255),f,b
 10523  007E42  D7E4               	goto	l19438
 10524                           
 10525                           ; BSR set to: 1
 10526                           
 10527                           ; BSR set to: 1
 10528  007E44  C142  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
 10529  007E48  C143  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10530  007E4C  C144  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10531  007E50  C141  F103         	movff	___ftmul@exp,___ftpack@exp
 10532  007E54  C146  F104         	movff	___ftmul@sign,___ftpack@sign
 10533  007E58  ECBF  F047         	call	___ftpack	;wreg free
 10534  007E5C  C100  F138         	movff	?___ftpack,?___ftmul
 10535  007E60  C101  F139         	movff	?___ftpack+1,?___ftmul+1
 10536  007E64  C102  F13A         	movff	?___ftpack+2,?___ftmul+2
 10537  007E68  0012               	return	
 10538  007E6A                     __end_of___ftmul:
 10539                           	opt stack 0
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           postinc0	equ	0xFEE
 10547                           plusw0	equ	0xFEB
 10548                           wreg	equ	0xFE8
 10549                           postdec1	equ	0xFE5
 10550                           fsr1h	equ	0xFE2
 10551                           fsr1l	equ	0xFE1
 10552                           indf2	equ	0xFDF
 10553                           postinc2	equ	0xFDE
 10554                           postdec2	equ	0xFDD
 10555                           plusw2	equ	0xFDB
 10556                           fsr2h	equ	0xFDA
 10557                           fsr2l	equ	0xFD9
 10558                           status	equ	0xFD8
 10559                           
 10560 ;; *************** function ___ftpack *****************
 10561 ;; Defined at:
 10562 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  arg             3    0[BANK1 ] unsigned um
 10565 ;;  exp             1    3[BANK1 ] unsigned char 
 10566 ;;  sign            1    4[BANK1 ] unsigned char 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  3    0[BANK1 ] float 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10578 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;Total ram usage:        8 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:   16
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		___altoft
 10589 ;;		___ftadd
 10590 ;;		___ftmul
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text23
 10595  008F7E                     __ptext23:
 10596                           	opt stack 0
 10597  008F7E                     ___ftpack:
 10598                           	opt stack 11
 10599                           
 10600                           ;incstack = 0
 10601  008F7E  0101               	movlb	1	; () banked
 10602  008F80  5103               	movf	___ftpack@exp& (0+255),w,b
 10603  008F82  0101               	movlb	1	; () banked
 10604  008F84  B4D8               	btfsc	status,2,c
 10605  008F86  D008               	goto	l17800
 10606                           
 10607                           ; BSR set to: 1
 10608  008F88  0101               	movlb	1	; () banked
 10609  008F8A  5100               	movf	___ftpack@arg& (0+255),w,b
 10610  008F8C  0101               	movlb	1	; () banked
 10611  008F8E  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10612  008F90  0101               	movlb	1	; () banked
 10613  008F92  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10614  008F94  A4D8               	btfss	status,2,c
 10615  008F96  D011               	goto	l17806
 10616  008F98                     l17800:
 10617                           
 10618                           ; BSR set to: 1
 10619  008F98  0E00               	movlw	0
 10620  008F9A  0101               	movlb	1	; () banked
 10621  008F9C  6F00               	movwf	?___ftpack& (0+255),b
 10622  008F9E  0E00               	movlw	0
 10623  008FA0  0101               	movlb	1	; () banked
 10624  008FA2  6F01               	movwf	(?___ftpack+1)& (0+255),b
 10625  008FA4  0E00               	movlw	0
 10626  008FA6  0101               	movlb	1	; () banked
 10627  008FA8  6F02               	movwf	(?___ftpack+2)& (0+255),b
 10628                           
 10629                           ; BSR set to: 1
 10630  008FAA  0012               	return	
 10631  008FAC                     l17804:
 10632                           
 10633                           ; BSR set to: 1
 10634  008FAC  0101               	movlb	1	; () banked
 10635  008FAE  2B03               	incf	___ftpack@exp& (0+255),f,b
 10636  008FB0  0101               	movlb	1	; () banked
 10637  008FB2  90D8               	bcf	status,0,c
 10638  008FB4  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10639  008FB6  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10640  008FB8  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10641  008FBA                     l17806:
 10642                           
 10643                           ; BSR set to: 1
 10644  008FBA  0E00               	movlw	0
 10645  008FBC  0101               	movlb	1	; () banked
 10646  008FBE  1500               	andwf	___ftpack@arg& (0+255),w,b
 10647  008FC0  0101               	movlb	1	; () banked
 10648  008FC2  6F05               	movwf	??___ftpack& (0+255),b
 10649  008FC4  0E00               	movlw	0
 10650  008FC6  0101               	movlb	1	; () banked
 10651  008FC8  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10652  008FCA  0101               	movlb	1	; () banked
 10653  008FCC  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10654  008FCE  0EFE               	movlw	254
 10655  008FD0  0101               	movlb	1	; () banked
 10656  008FD2  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10657  008FD4  0101               	movlb	1	; () banked
 10658  008FD6  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10659  008FD8  0101               	movlb	1	; () banked
 10660  008FDA  5105               	movf	??___ftpack& (0+255),w,b
 10661  008FDC  0101               	movlb	1	; () banked
 10662  008FDE  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10663  008FE0  0101               	movlb	1	; () banked
 10664  008FE2  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10665  008FE4  B4D8               	btfsc	status,2,c
 10666  008FE6  D011               	goto	l17812
 10667  008FE8  D7E1               	goto	l17804
 10668  008FEA                     l17808:
 10669                           
 10670                           ; BSR set to: 1
 10671  008FEA  0101               	movlb	1	; () banked
 10672  008FEC  2B03               	incf	___ftpack@exp& (0+255),f,b
 10673                           
 10674                           ; BSR set to: 1
 10675  008FEE  0E01               	movlw	1
 10676  008FF0  0101               	movlb	1	; () banked
 10677  008FF2  2700               	addwf	___ftpack@arg& (0+255),f,b
 10678  008FF4  0E00               	movlw	0
 10679  008FF6  0101               	movlb	1	; () banked
 10680  008FF8  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10681  008FFA  0E00               	movlw	0
 10682  008FFC  0101               	movlb	1	; () banked
 10683  008FFE  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10684  009000  0101               	movlb	1	; () banked
 10685  009002  90D8               	bcf	status,0,c
 10686  009004  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10687  009006  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10688  009008  3300               	rrcf	___ftpack@arg& (0+255),f,b
 10689  00900A                     l17812:
 10690                           
 10691                           ; BSR set to: 1
 10692  00900A  0E00               	movlw	0
 10693  00900C  0101               	movlb	1	; () banked
 10694  00900E  1500               	andwf	___ftpack@arg& (0+255),w,b
 10695  009010  0101               	movlb	1	; () banked
 10696  009012  6F05               	movwf	??___ftpack& (0+255),b
 10697  009014  0E00               	movlw	0
 10698  009016  0101               	movlb	1	; () banked
 10699  009018  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10700  00901A  0101               	movlb	1	; () banked
 10701  00901C  6F06               	movwf	(??___ftpack+1)& (0+255),b
 10702  00901E  0EFF               	movlw	255
 10703  009020  0101               	movlb	1	; () banked
 10704  009022  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10705  009024  0101               	movlb	1	; () banked
 10706  009026  6F07               	movwf	(??___ftpack+2)& (0+255),b
 10707  009028  0101               	movlb	1	; () banked
 10708  00902A  5105               	movf	??___ftpack& (0+255),w,b
 10709  00902C  0101               	movlb	1	; () banked
 10710  00902E  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 10711  009030  0101               	movlb	1	; () banked
 10712  009032  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 10713  009034  B4D8               	btfsc	status,2,c
 10714  009036  D008               	goto	l17816
 10715  009038  D7D8               	goto	l17808
 10716  00903A                     l17814:
 10717                           
 10718                           ; BSR set to: 1
 10719  00903A  0101               	movlb	1	; () banked
 10720  00903C  0703               	decf	___ftpack@exp& (0+255),f,b
 10721  00903E  0101               	movlb	1	; () banked
 10722  009040  90D8               	bcf	status,0,c
 10723  009042  3700               	rlcf	___ftpack@arg& (0+255),f,b
 10724  009044  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10725  009046  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10726  009048                     l17816:
 10727                           
 10728                           ; BSR set to: 1
 10729  009048  0101               	movlb	1	; () banked
 10730  00904A  BF01               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10731  00904C  D004               	goto	l2445
 10732                           
 10733                           ; BSR set to: 1
 10734  00904E  0E02               	movlw	2
 10735  009050  0101               	movlb	1	; () banked
 10736  009052  6103               	cpfslt	___ftpack@exp& (0+255),b
 10737  009054  D7F2               	goto	l17814
 10738  009056                     l2445:
 10739                           
 10740                           ; BSR set to: 1
 10741  009056  0101               	movlb	1	; () banked
 10742  009058  B103               	btfsc	___ftpack@exp& (0+255),0,b
 10743  00905A  D002               	goto	l17822
 10744                           
 10745                           ; BSR set to: 1
 10746  00905C  0101               	movlb	1	; () banked
 10747  00905E  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10748  009060                     l17822:
 10749                           
 10750                           ; BSR set to: 1
 10751  009060  0101               	movlb	1	; () banked
 10752  009062  90D8               	bcf	status,0,c
 10753  009064  3303               	rrcf	___ftpack@exp& (0+255),f,b
 10754  009066  0101               	movlb	1	; () banked
 10755  009068  5103               	movf	___ftpack@exp& (0+255),w,b
 10756  00906A  0101               	movlb	1	; () banked
 10757  00906C  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10758                           
 10759                           ; BSR set to: 1
 10760  00906E  0101               	movlb	1	; () banked
 10761  009070  5104               	movf	___ftpack@sign& (0+255),w,b
 10762  009072  0101               	movlb	1	; () banked
 10763  009074  B4D8               	btfsc	status,2,c
 10764  009076  D002               	goto	l17828
 10765                           
 10766                           ; BSR set to: 1
 10767  009078  0101               	movlb	1	; () banked
 10768  00907A  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10769  00907C                     l17828:
 10770                           
 10771                           ; BSR set to: 1
 10772  00907C  C100  F100         	movff	___ftpack@arg,?___ftpack
 10773  009080  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 10774  009084  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 10775  009088  0012               	return	
 10776  00908A                     __end_of___ftpack:
 10777                           	opt stack 0
 10778                           tblptru	equ	0xFF8
 10779                           tblptrh	equ	0xFF7
 10780                           tblptrl	equ	0xFF6
 10781                           tablat	equ	0xFF5
 10782                           prodh	equ	0xFF4
 10783                           prodl	equ	0xFF3
 10784                           postinc0	equ	0xFEE
 10785                           plusw0	equ	0xFEB
 10786                           wreg	equ	0xFE8
 10787                           postdec1	equ	0xFE5
 10788                           fsr1h	equ	0xFE2
 10789                           fsr1l	equ	0xFE1
 10790                           indf2	equ	0xFDF
 10791                           postinc2	equ	0xFDE
 10792                           postdec2	equ	0xFDD
 10793                           plusw2	equ	0xFDB
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function _send_answer_to_update *****************
 10799 ;; Defined at:
 10800 ;;		line 552 in file "src/main.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;  tmp             1    0        unsigned char 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;		None               void
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10816 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;Total ram usage:        1 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:   18
 10821 ;; This function calls:
 10822 ;;		_dBm_to_mW_ufixed16
 10823 ;;		_encode_ufixed16_variable
 10824 ;;		_encode_uint8_variable
 10825 ;;		_memcpy
 10826 ;;		_sendHIDBinary
 10827 ;; This function is called by:
 10828 ;;		_main
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text24
 10833  007880                     __ptext24:
 10834                           	opt stack 0
 10835  007880                     _send_answer_to_update:
 10836                           	opt stack 12
 10837                           
 10838                           ;main.c: 554: p_buffer = m_buffer;
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;incstack = 0
 10842  007880  0ED1               	movlw	low _m_buffer
 10843  007882  0101               	movlb	1	; () banked
 10844  007884  6FB9               	movwf	_p_buffer& (0+255),b
 10845  007886  0E02               	movlw	high _m_buffer
 10846  007888  0101               	movlb	1	; () banked
 10847  00788A  6FBA               	movwf	(_p_buffer+1)& (0+255),b
 10848                           
 10849                           ; BSR set to: 1
 10850                           ;main.c: 555: *(p_buffer++) = 0x4d;
 10851  00788C  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10852  007890  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10853  007894  0E4D               	movlw	77
 10854  007896  6EDF               	movwf	indf2,c
 10855                           
 10856                           ; BSR set to: 1
 10857  007898  0101               	movlb	1	; () banked
 10858  00789A  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10859  00789C  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10860                           
 10861                           ; BSR set to: 1
 10862                           ;main.c: 556: *(p_buffer++) = 0x00;
 10863  00789E  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10864  0078A2  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10865  0078A6  0E00               	movlw	0
 10866  0078A8  6EDF               	movwf	indf2,c
 10867                           
 10868                           ; BSR set to: 1
 10869  0078AA  0101               	movlb	1	; () banked
 10870  0078AC  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10871  0078AE  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10872                           
 10873                           ; BSR set to: 1
 10874                           ;main.c: 557: *(p_buffer++) = 0x00;
 10875  0078B0  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10876  0078B4  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10877  0078B8  0E00               	movlw	0
 10878  0078BA  6EDF               	movwf	indf2,c
 10879                           
 10880                           ; BSR set to: 1
 10881  0078BC  0101               	movlb	1	; () banked
 10882  0078BE  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10883  0078C0  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10884                           
 10885                           ; BSR set to: 1
 10886                           ;main.c: 558: *(p_buffer++) = 04;
 10887  0078C2  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10888  0078C6  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10889  0078CA  0E04               	movlw	4
 10890  0078CC  6EDF               	movwf	indf2,c
 10891                           
 10892                           ; BSR set to: 1
 10893  0078CE  0101               	movlb	1	; () banked
 10894  0078D0  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10895  0078D2  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;main.c: 559: *(p_buffer++) = 0xff;
 10899  0078D4  C1B9  FFD9         	movff	_p_buffer,fsr2l
 10900  0078D8  C1BA  FFDA         	movff	_p_buffer+1,fsr2h
 10901  0078DC  0EFF               	movlw	255
 10902  0078DE  6EDF               	movwf	indf2,c
 10903                           
 10904                           ; BSR set to: 1
 10905  0078E0  0101               	movlb	1	; () banked
 10906  0078E2  4BB9               	infsnz	_p_buffer& (0+255),f,b
 10907  0078E4  2BBA               	incf	(_p_buffer+1)& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;main.c: 561: if (Pwr_updated)
 10911  0078E6  0100               	movlb	0	; () banked
 10912  0078E8  519A               	movf	_Pwr_updated& (0+255),w,b
 10913  0078EA  B4D8               	btfsc	status,2,c
 10914  0078EC  D043               	goto	l21084
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;main.c: 562: {
 10918                           ;main.c: 564: memcpy(m_var.label, POWER_LABEL, 3);
 10919  0078EE  0EDE               	movlw	low _m_var
 10920  0078F0  0101               	movlb	1	; () banked
 10921  0078F2  6F00               	movwf	memcpy@d1& (0+255),b
 10922  0078F4  0E01               	movlw	high _m_var
 10923  0078F6  0101               	movlb	1	; () banked
 10924  0078F8  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 10925  0078FA  0EC1               	movlw	low _POWER_LABEL
 10926  0078FC  0101               	movlb	1	; () banked
 10927  0078FE  6F02               	movwf	memcpy@s1& (0+255),b
 10928  007900  0E21               	movlw	high _POWER_LABEL
 10929  007902  0101               	movlb	1	; () banked
 10930  007904  6F03               	movwf	(memcpy@s1+1)& (0+255),b
 10931  007906  0E00               	movlw	0
 10932  007908  0101               	movlb	1	; () banked
 10933  00790A  6F05               	movwf	(memcpy@n+1)& (0+255),b
 10934  00790C  0E03               	movlw	3
 10935  00790E  6F04               	movwf	memcpy@n& (0+255),b
 10936  007910  EC91  F059         	call	_memcpy	;wreg free
 10937                           
 10938                           ;main.c: 565: m_var.unit = 8;
 10939  007914  0E08               	movlw	8
 10940  007916  0101               	movlb	1	; () banked
 10941  007918  6FE4               	movwf	(_m_var+6)& (0+255),b
 10942                           
 10943                           ; BSR set to: 1
 10944                           ;main.c: 566: dBm_to_mW_ufixed16(m_power, &(m_var.value_byte1), &(m_var.value_byte2));
 10945  00791A  0EE2               	movlw	low (_m_var+4)
 10946  00791C  0101               	movlb	1	; () banked
 10947  00791E  6F00               	movwf	dBm_to_mW_ufixed16@value1& (0+255),b
 10948  007920  0E01               	movlw	high (_m_var+4)
 10949  007922  0101               	movlb	1	; () banked
 10950  007924  6F01               	movwf	(dBm_to_mW_ufixed16@value1+1)& (0+255),b
 10951  007926  0EE3               	movlw	low (_m_var+5)
 10952  007928  0101               	movlb	1	; () banked
 10953  00792A  6F02               	movwf	dBm_to_mW_ufixed16@value2& (0+255),b
 10954  00792C  0E01               	movlw	high (_m_var+5)
 10955  00792E  0101               	movlb	1	; () banked
 10956  007930  6F03               	movwf	(dBm_to_mW_ufixed16@value2+1)& (0+255),b
 10957  007932  0101               	movlb	1	; () banked
 10958  007934  51C8               	movf	_m_power& (0+255),w,b
 10959  007936  EC7E  F045         	call	_dBm_to_mW_ufixed16
 10960                           
 10961                           ;main.c: 567: m_var.writable = 1;
 10962  00793A  0E01               	movlw	1
 10963  00793C  0101               	movlb	1	; () banked
 10964  00793E  6FE5               	movwf	(_m_var+7)& (0+255),b
 10965                           
 10966                           ; BSR set to: 1
 10967                           ;main.c: 568: p_buffer += encode_ufixed16_variable(p_buffer, m_var);
 10968  007940  C1B9  F100         	movff	_p_buffer,encode_ufixed16_variable@buffer
 10969  007944  C1BA  F101         	movff	_p_buffer+1,encode_ufixed16_variable@buffer+1
 10970  007948  EE21  F0DE         	lfsr	2,_m_var
 10971  00794C  EE01  F002         	lfsr	0,encode_ufixed16_variable@var
 10972  007950  0E09               	movlw	9
 10973  007952                     u23941:
 10974  007952  CFDB FFEB          	movff	plusw2,plusw0
 10975  007956  06E8               	decf	wreg,f,c
 10976  007958  E2FC               	bc	u23941
 10977  00795A  ECFB  F050         	call	_encode_ufixed16_variable	;wreg free
 10978  00795E  0101               	movlb	1	; () banked
 10979  007960  6F10               	movwf	??_send_answer_to_update& (0+255),b
 10980  007962  0101               	movlb	1	; () banked
 10981  007964  5110               	movf	??_send_answer_to_update& (0+255),w,b
 10982  007966  0D01               	mullw	1
 10983  007968  50F3               	movf	prodl,w,c
 10984  00796A  0101               	movlb	1	; () banked
 10985  00796C  27B9               	addwf	_p_buffer& (0+255),f,b
 10986  00796E  50F4               	movf	prodh,w,c
 10987  007970  0101               	movlb	1	; () banked
 10988  007972  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
 10989  007974                     l21084:
 10990                           
 10991                           ;main.c: 569: }
 10992                           ;main.c: 570: if (UpF_updated)
 10993  007974  0100               	movlb	0	; () banked
 10994  007976  519E               	movf	_UpF_updated& (0+255),w,b
 10995  007978  B4D8               	btfsc	status,2,c
 10996  00797A  D038               	goto	l21098
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;main.c: 571: {
 11000                           ;main.c: 573: memcpy(m_var.label, UPDATE_FREQUENCY_LABEL, 3);
 11001  00797C  0EDE               	movlw	low _m_var
 11002  00797E  0101               	movlb	1	; () banked
 11003  007980  6F00               	movwf	memcpy@d1& (0+255),b
 11004  007982  0E01               	movlw	high _m_var
 11005  007984  0101               	movlb	1	; () banked
 11006  007986  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 11007  007988  0EC9               	movlw	low _UPDATE_FREQUENCY_LABEL
 11008  00798A  0101               	movlb	1	; () banked
 11009  00798C  6F02               	movwf	memcpy@s1& (0+255),b
 11010  00798E  0E21               	movlw	high _UPDATE_FREQUENCY_LABEL
 11011  007990  0101               	movlb	1	; () banked
 11012  007992  6F03               	movwf	(memcpy@s1+1)& (0+255),b
 11013  007994  0E00               	movlw	0
 11014  007996  0101               	movlb	1	; () banked
 11015  007998  6F05               	movwf	(memcpy@n+1)& (0+255),b
 11016  00799A  0E03               	movlw	3
 11017  00799C  6F04               	movwf	memcpy@n& (0+255),b
 11018  00799E  EC91  F059         	call	_memcpy	;wreg free
 11019                           
 11020                           ;main.c: 574: m_var.unit = 4;
 11021  0079A2  0E04               	movlw	4
 11022  0079A4  0101               	movlb	1	; () banked
 11023  0079A6  6FE4               	movwf	(_m_var+6)& (0+255),b
 11024                           
 11025                           ; BSR set to: 1
 11026                           ;main.c: 575: m_var.value_byte1 = m_update_frequency;
 11027  0079A8  C1FA  F1E2         	movff	_m_update_frequency,_m_var+4	;volatile
 11028                           
 11029                           ; BSR set to: 1
 11030                           ;main.c: 576: m_var.writable = 1;
 11031  0079AC  0E01               	movlw	1
 11032  0079AE  0101               	movlb	1	; () banked
 11033  0079B0  6FE5               	movwf	(_m_var+7)& (0+255),b
 11034                           
 11035                           ; BSR set to: 1
 11036                           ;main.c: 577: p_buffer += encode_uint8_variable(p_buffer, m_var);
 11037  0079B2  C1B9  F100         	movff	_p_buffer,encode_uint8_variable@buffer
 11038  0079B6  C1BA  F101         	movff	_p_buffer+1,encode_uint8_variable@buffer+1
 11039  0079BA  EE21  F0DE         	lfsr	2,_m_var
 11040  0079BE  EE01  F002         	lfsr	0,encode_uint8_variable@var
 11041  0079C2  0E09               	movlw	9
 11042  0079C4                     u23961:
 11043  0079C4  CFDB FFEB          	movff	plusw2,plusw0
 11044  0079C8  06E8               	decf	wreg,f,c
 11045  0079CA  E2FC               	bc	u23961
 11046  0079CC  EC89  F054         	call	_encode_uint8_variable	;wreg free
 11047  0079D0  0101               	movlb	1	; () banked
 11048  0079D2  6F10               	movwf	??_send_answer_to_update& (0+255),b
 11049  0079D4  0101               	movlb	1	; () banked
 11050  0079D6  5110               	movf	??_send_answer_to_update& (0+255),w,b
 11051  0079D8  0D01               	mullw	1
 11052  0079DA  50F3               	movf	prodl,w,c
 11053  0079DC  0101               	movlb	1	; () banked
 11054  0079DE  27B9               	addwf	_p_buffer& (0+255),f,b
 11055  0079E0  50F4               	movf	prodh,w,c
 11056  0079E2  0101               	movlb	1	; () banked
 11057  0079E4  23BA               	addwfc	(_p_buffer+1)& (0+255),f,b
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;main.c: 578: UpF_updated = 0;
 11061  0079E6  0E00               	movlw	0
 11062  0079E8  0100               	movlb	0	; () banked
 11063  0079EA  6F9E               	movwf	_UpF_updated& (0+255),b
 11064  0079EC                     l21098:
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;main.c: 579: }
 11068                           ;main.c: 581: sendHIDBinary(m_buffer, (p_buffer-m_buffer));
 11069  0079EC  0ED1               	movlw	low _m_buffer
 11070  0079EE  0101               	movlb	1	; () banked
 11071  0079F0  6F0A               	movwf	sendHIDBinary@buffer& (0+255),b
 11072  0079F2  0E02               	movlw	high _m_buffer
 11073  0079F4  0101               	movlb	1	; () banked
 11074  0079F6  6F0B               	movwf	(sendHIDBinary@buffer+1)& (0+255),b
 11075  0079F8  0ED1               	movlw	_m_buffer& (0+255)
 11076  0079FA  0800               	sublw	0
 11077  0079FC  0101               	movlb	1	; () banked
 11078  0079FE  25B9               	addwf	_p_buffer& (0+255),w,b
 11079  007A00  0101               	movlb	1	; () banked
 11080  007A02  6F0C               	movwf	sendHIDBinary@length& (0+255),b
 11081  007A04  EC7A  F055         	call	_sendHIDBinary	;wreg free
 11082                           
 11083                           ;main.c: 582: _delay((unsigned long)((20)*(16000000/4000.0)));
 11084  007A08  0E68               	movlw	104
 11085  007A0A  0101               	movlb	1	; () banked
 11086  007A0C  6F10               	movwf	??_send_answer_to_update& (0+255),b
 11087  007A0E  0EE4               	movlw	228
 11088  007A10                     u25277:
 11089  007A10  2EE8               	decfsz	wreg,f,c
 11090  007A12  D7FE               	goto	u25277
 11091  007A14  2F10               	decfsz	??_send_answer_to_update& (0+255),f,b
 11092  007A16  D7FC               	goto	u25277
 11093  007A18  D000               	nop2	
 11094  007A1A  0012               	return		;funcret
 11095  007A1C                     __end_of_send_answer_to_update:
 11096                           	opt stack 0
 11097                           tblptru	equ	0xFF8
 11098                           tblptrh	equ	0xFF7
 11099                           tblptrl	equ	0xFF6
 11100                           tablat	equ	0xFF5
 11101                           prodh	equ	0xFF4
 11102                           prodl	equ	0xFF3
 11103                           postinc0	equ	0xFEE
 11104                           plusw0	equ	0xFEB
 11105                           wreg	equ	0xFE8
 11106                           postdec1	equ	0xFE5
 11107                           fsr1h	equ	0xFE2
 11108                           fsr1l	equ	0xFE1
 11109                           indf2	equ	0xFDF
 11110                           postinc2	equ	0xFDE
 11111                           postdec2	equ	0xFDD
 11112                           plusw2	equ	0xFDB
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function _sendHIDBinary *****************
 11118 ;; Defined at:
 11119 ;;		line 684 in file "src/main.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
 11122 ;;		 -> m_buffer(32), 
 11123 ;;  length          1   12[BANK1 ] unsigned char 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;		None
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      unsigned char 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11135 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11137 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11139 ;;Total ram usage:        6 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:   17
 11142 ;; This function calls:
 11143 ;;		_USBTransferOnePacket
 11144 ;;		_memcpy
 11145 ;; This function is called by:
 11146 ;;		_main
 11147 ;;		_send_network_register
 11148 ;;		_send_complete_update
 11149 ;;		_send_answer_to_update
 11150 ;;		_send_periodic_update
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text25
 11155  00AAF4                     __ptext25:
 11156                           	opt stack 0
 11157  00AAF4                     _sendHIDBinary:
 11158                           	opt stack 12
 11159                           
 11160                           ;main.c: 686: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11161                           
 11162                           ;incstack = 0
 11163  00AAF4  0E1F               	movlw	31
 11164  00AAF6  644B               	cpfsgt	_USBDeviceState,c	;volatile
 11165  00AAF8  0012               	return	
 11166  00AAFA  B265               	btfsc	3941,1,c	;volatile
 11167  00AAFC  0012               	return	
 11168  00AAFE                     l19154:
 11169                           
 11170                           ;main.c: 691: {
 11171                           ;main.c: 692: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
 11172  00AAFE  0100               	movlb	0	; () banked
 11173  00AB00  5193               	movf	_USBInHandle& (0+255),w,b
 11174  00AB02  0100               	movlb	0	; () banked
 11175  00AB04  1194               	iorwf	(_USBInHandle+1)& (0+255),w,b
 11176  00AB06  B4D8               	btfsc	status,2,c
 11177  00AB08  D013               	goto	l19158
 11178                           
 11179                           ; BSR set to: 0
 11180  00AB0A  C093  FFD9         	movff	_USBInHandle,fsr2l
 11181  00AB0E  C094  FFDA         	movff	_USBInHandle+1,fsr2h
 11182  00AB12  0100               	movlb	0	; () banked
 11183  00AB14  AEDF               	btfss	indf2,7,c
 11184  00AB16  D004               	goto	u21900
 11185  00AB18  0101               	movlb	1	; () banked
 11186  00AB1A  6B0D               	clrf	??_sendHIDBinary& (0+255),b
 11187  00AB1C  2B0D               	incf	??_sendHIDBinary& (0+255),f,b
 11188  00AB1E  D002               	goto	u21908
 11189  00AB20                     u21900:
 11190  00AB20  0101               	movlb	1	; () banked
 11191  00AB22  6B0D               	clrf	??_sendHIDBinary& (0+255),b
 11192  00AB24                     u21908:
 11193  00AB24  0101               	movlb	1	; () banked
 11194  00AB26  510D               	movf	??_sendHIDBinary& (0+255),w,b
 11195  00AB28  0101               	movlb	1	; () banked
 11196  00AB2A  6F0E               	movwf	_sendHIDBinary$4970& (0+255),b
 11197  00AB2C  6B0F               	clrf	(_sendHIDBinary$4970+1)& (0+255),b
 11198  00AB2E  D005               	goto	l19160
 11199  00AB30                     l19158:
 11200  00AB30  0E00               	movlw	0
 11201  00AB32  0101               	movlb	1	; () banked
 11202  00AB34  6F0F               	movwf	(_sendHIDBinary$4970+1)& (0+255),b
 11203  00AB36  0E00               	movlw	0
 11204  00AB38  6F0E               	movwf	_sendHIDBinary$4970& (0+255),b
 11205  00AB3A                     l19160:
 11206                           
 11207                           ; BSR set to: 1
 11208  00AB3A  0101               	movlb	1	; () banked
 11209  00AB3C  510E               	movf	_sendHIDBinary$4970& (0+255),w,b
 11210  00AB3E  0101               	movlb	1	; () banked
 11211  00AB40  110F               	iorwf	(_sendHIDBinary$4970+1)& (0+255),w,b
 11212  00AB42  A4D8               	btfss	status,2,c
 11213  00AB44  D7DC               	goto	l19154
 11214                           
 11215                           ; BSR set to: 1
 11216                           ;main.c: 693: {
 11217                           ;main.c: 694: memcpy(&ToSendDataBuffer[0], buffer, length);
 11218  00AB46  0E84               	movlw	low _ToSendDataBuffer
 11219  00AB48  0101               	movlb	1	; () banked
 11220  00AB4A  6F00               	movwf	memcpy@d1& (0+255),b
 11221  00AB4C  0E03               	movlw	high _ToSendDataBuffer
 11222  00AB4E  0101               	movlb	1	; () banked
 11223  00AB50  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 11224  00AB52  C10A  F102         	movff	sendHIDBinary@buffer,memcpy@s1
 11225  00AB56  C10B  F103         	movff	sendHIDBinary@buffer+1,memcpy@s1+1
 11226  00AB5A  C10C  F104         	movff	sendHIDBinary@length,memcpy@n
 11227  00AB5E  0101               	movlb	1	; () banked
 11228  00AB60  6B05               	clrf	(memcpy@n+1)& (0+255),b
 11229  00AB62  EC91  F059         	call	_memcpy	;wreg free
 11230                           
 11231                           ;main.c: 695: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],length);
 11232  00AB66  0E01               	movlw	1
 11233  00AB68  0101               	movlb	1	; () banked
 11234  00AB6A  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
 11235  00AB6C  0E84               	movlw	low _ToSendDataBuffer
 11236  00AB6E  0101               	movlb	1	; () banked
 11237  00AB70  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
 11238  00AB72  0E03               	movlw	high _ToSendDataBuffer
 11239  00AB74  0101               	movlb	1	; () banked
 11240  00AB76  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11241  00AB78  C10C  F103         	movff	sendHIDBinary@length,USBTransferOnePacket@len
 11242  00AB7C  0E01               	movlw	1
 11243  00AB7E  ECA1  F04C         	call	_USBTransferOnePacket
 11244  00AB82  C100  F093         	movff	?_USBTransferOnePacket,_USBInHandle
 11245  00AB86  C101  F094         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 11246                           
 11247                           ;main.c: 696: return 1;
 11248                           ;	Return value of _sendHIDBinary is never used
 11249  00AB8A  0012               	return	
 11250  00AB8C                     __end_of_sendHIDBinary:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           postinc0	equ	0xFEE
 11259                           plusw0	equ	0xFEB
 11260                           wreg	equ	0xFE8
 11261                           postdec1	equ	0xFE5
 11262                           fsr1h	equ	0xFE2
 11263                           fsr1l	equ	0xFE1
 11264                           indf2	equ	0xFDF
 11265                           postinc2	equ	0xFDE
 11266                           postdec2	equ	0xFDD
 11267                           plusw2	equ	0xFDB
 11268                           fsr2h	equ	0xFDA
 11269                           fsr2l	equ	0xFD9
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function _encode_uint8_variable *****************
 11273 ;; Defined at:
 11274 ;;		line 118 in file "../../muta/muta_messages.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 11277 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 11278 ;;  var            10    2[BANK1 ] struct .
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  m_writable      1   14[BANK1 ] unsigned char 
 11281 ;;  m_signed        1   13[BANK1 ] unsigned char 
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      unsigned char 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11291 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;Total ram usage:       15 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:   16
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_send_complete_update
 11302 ;;		_send_answer_to_update
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text26
 11307  00A912                     __ptext26:
 11308                           	opt stack 0
 11309  00A912                     _encode_uint8_variable:
 11310                           	opt stack 13
 11311                           
 11312                           ;muta_messages.c: 120: *(buffer++) = var.label[0];
 11313                           
 11314                           ;incstack = 0
 11315  00A912  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11316  00A916  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11317  00A91A  C102  FFDF         	movff	encode_uint8_variable@var,indf2
 11318  00A91E  0101               	movlb	1	; () banked
 11319  00A920  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11320  00A922  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11321                           
 11322                           ; BSR set to: 1
 11323                           ;muta_messages.c: 121: *(buffer++) = var.label[1];
 11324  00A924  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11325  00A928  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11326  00A92C  C103  FFDF         	movff	encode_uint8_variable@var+1,indf2
 11327  00A930  0101               	movlb	1	; () banked
 11328  00A932  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11329  00A934  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11330                           
 11331                           ; BSR set to: 1
 11332                           ;muta_messages.c: 122: *(buffer++) = var.label[2];
 11333  00A936  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11334  00A93A  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11335  00A93E  C104  FFDF         	movff	encode_uint8_variable@var+2,indf2
 11336                           
 11337                           ; BSR set to: 1
 11338  00A942  0101               	movlb	1	; () banked
 11339  00A944  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11340  00A946  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11341                           
 11342                           ; BSR set to: 1
 11343                           ;muta_messages.c: 123: uint8_t m_signed = 0;
 11344  00A948  0E00               	movlw	0
 11345  00A94A  0101               	movlb	1	; () banked
 11346  00A94C  6F0D               	movwf	encode_uint8_variable@m_signed& (0+255),b
 11347                           
 11348                           ; BSR set to: 1
 11349                           ;muta_messages.c: 124: uint8_t m_writable = 0;
 11350  00A94E  0E00               	movlw	0
 11351  00A950  0101               	movlb	1	; () banked
 11352  00A952  6F0E               	movwf	encode_uint8_variable@m_writable& (0+255),b
 11353                           
 11354                           ; BSR set to: 1
 11355                           ;muta_messages.c: 125: if (var._signed)
 11356  00A954  0101               	movlb	1	; () banked
 11357  00A956  510A               	movf	(encode_uint8_variable@var+8)& (0+255),w,b
 11358  00A958  B4D8               	btfsc	status,2,c
 11359  00A95A  D003               	goto	l2028
 11360                           
 11361                           ; BSR set to: 1
 11362                           ;muta_messages.c: 126: { m_signed = 1; }
 11363  00A95C  0E01               	movlw	1
 11364  00A95E  0101               	movlb	1	; () banked
 11365  00A960  6F0D               	movwf	encode_uint8_variable@m_signed& (0+255),b
 11366  00A962                     l2028:
 11367                           
 11368                           ; BSR set to: 1
 11369                           ;muta_messages.c: 127: if (var.writable)
 11370  00A962  0101               	movlb	1	; () banked
 11371  00A964  5109               	movf	(encode_uint8_variable@var+7)& (0+255),w,b
 11372  00A966  B4D8               	btfsc	status,2,c
 11373  00A968  D003               	goto	l19250
 11374                           
 11375                           ; BSR set to: 1
 11376                           ;muta_messages.c: 128: { m_writable = 1; }
 11377  00A96A  0E01               	movlw	1
 11378  00A96C  0101               	movlb	1	; () banked
 11379  00A96E  6F0E               	movwf	encode_uint8_variable@m_writable& (0+255),b
 11380  00A970                     l19250:
 11381                           
 11382                           ; BSR set to: 1
 11383                           ;muta_messages.c: 129: var.type = (0 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
 11384  00A970  C10E  F10C         	movff	encode_uint8_variable@m_writable,??_encode_uint8_variable
 11385  00A974  0101               	movlb	1	; () banked
 11386  00A976  3B0C               	swapf	??_encode_uint8_variable& (0+255),f,b
 11387  00A978  0EF0               	movlw	240
 11388  00A97A  170C               	andwf	??_encode_uint8_variable& (0+255),f,b
 11389  00A97C  0101               	movlb	1	; () banked
 11390  00A97E  390D               	swapf	encode_uint8_variable@m_signed& (0+255),w,b
 11391  00A980  46E8               	rlncf	wreg,f,c
 11392  00A982  0BE0               	andlw	224
 11393  00A984  0101               	movlb	1	; () banked
 11394  00A986  250C               	addwf	??_encode_uint8_variable& (0+255),w,b
 11395  00A988  0101               	movlb	1	; () banked
 11396  00A98A  2508               	addwf	(encode_uint8_variable@var+6)& (0+255),w,b
 11397  00A98C  0101               	movlb	1	; () banked
 11398  00A98E  6F05               	movwf	(encode_uint8_variable@var+3)& (0+255),b
 11399                           
 11400                           ; BSR set to: 1
 11401                           ;muta_messages.c: 130: *(buffer++) = var.type;
 11402  00A990  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11403  00A994  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11404  00A998  C105  FFDF         	movff	encode_uint8_variable@var+3,indf2
 11405                           
 11406                           ; BSR set to: 1
 11407  00A99C  0101               	movlb	1	; () banked
 11408  00A99E  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11409  00A9A0  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;muta_messages.c: 131: *(buffer++) = var.value_byte1;
 11413  00A9A2  C100  FFD9         	movff	encode_uint8_variable@buffer,fsr2l
 11414  00A9A6  C101  FFDA         	movff	encode_uint8_variable@buffer+1,fsr2h
 11415  00A9AA  C106  FFDF         	movff	encode_uint8_variable@var+4,indf2
 11416                           
 11417                           ; BSR set to: 1
 11418  00A9AE  0101               	movlb	1	; () banked
 11419  00A9B0  4B00               	infsnz	encode_uint8_variable@buffer& (0+255),f,b
 11420  00A9B2  2B01               	incf	(encode_uint8_variable@buffer+1)& (0+255),f,b
 11421                           
 11422                           ; BSR set to: 1
 11423                           ;muta_messages.c: 132: return 5;
 11424  00A9B4  0E05               	movlw	5
 11425  00A9B6  0012               	return	
 11426  00A9B8                     __end_of_encode_uint8_variable:
 11427                           	opt stack 0
 11428                           tblptru	equ	0xFF8
 11429                           tblptrh	equ	0xFF7
 11430                           tblptrl	equ	0xFF6
 11431                           tablat	equ	0xFF5
 11432                           prodh	equ	0xFF4
 11433                           prodl	equ	0xFF3
 11434                           postinc0	equ	0xFEE
 11435                           plusw0	equ	0xFEB
 11436                           wreg	equ	0xFE8
 11437                           postdec1	equ	0xFE5
 11438                           fsr1h	equ	0xFE2
 11439                           fsr1l	equ	0xFE1
 11440                           indf2	equ	0xFDF
 11441                           postinc2	equ	0xFDE
 11442                           postdec2	equ	0xFDD
 11443                           plusw2	equ	0xFDB
 11444                           fsr2h	equ	0xFDA
 11445                           fsr2l	equ	0xFD9
 11446                           status	equ	0xFD8
 11447                           
 11448 ;; *************** function _encode_ufixed16_variable *****************
 11449 ;; Defined at:
 11450 ;;		line 153 in file "../../muta/muta_messages.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 11453 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 11454 ;;  var            10    2[BANK1 ] struct .
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;  m_writable      1   14[BANK1 ] unsigned char 
 11457 ;;  m_signed        1   13[BANK1 ] unsigned char 
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      unsigned char 
 11460 ;; Registers used:
 11461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11467 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11468 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11469 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11470 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11471 ;;Total ram usage:       15 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:   16
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_send_complete_update
 11478 ;;		_send_answer_to_update
 11479 ;;		_send_periodic_update
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           	psect	text27
 11484  00A1F6                     __ptext27:
 11485                           	opt stack 0
 11486  00A1F6                     _encode_ufixed16_variable:
 11487                           	opt stack 13
 11488                           
 11489                           ;muta_messages.c: 155: *(buffer++) = var.label[0];
 11490                           
 11491                           ; BSR set to: 1
 11492                           ;incstack = 0
 11493  00A1F6  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11494  00A1FA  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11495  00A1FE  C102  FFDF         	movff	encode_ufixed16_variable@var,indf2
 11496  00A202  0101               	movlb	1	; () banked
 11497  00A204  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11498  00A206  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11499                           
 11500                           ; BSR set to: 1
 11501                           ;muta_messages.c: 156: *(buffer++) = var.label[1];
 11502  00A208  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11503  00A20C  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11504  00A210  C103  FFDF         	movff	encode_ufixed16_variable@var+1,indf2
 11505  00A214  0101               	movlb	1	; () banked
 11506  00A216  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11507  00A218  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11508                           
 11509                           ; BSR set to: 1
 11510                           ;muta_messages.c: 157: *(buffer++) = var.label[2];
 11511  00A21A  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11512  00A21E  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11513  00A222  C104  FFDF         	movff	encode_ufixed16_variable@var+2,indf2
 11514                           
 11515                           ; BSR set to: 1
 11516  00A226  0101               	movlb	1	; () banked
 11517  00A228  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11518  00A22A  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11519                           
 11520                           ; BSR set to: 1
 11521                           ;muta_messages.c: 158: uint8_t m_signed = 0;
 11522  00A22C  0E00               	movlw	0
 11523  00A22E  0101               	movlb	1	; () banked
 11524  00A230  6F0D               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
 11525                           
 11526                           ; BSR set to: 1
 11527                           ;muta_messages.c: 159: uint8_t m_writable = 0;
 11528  00A232  0E00               	movlw	0
 11529  00A234  0101               	movlb	1	; () banked
 11530  00A236  6F0E               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
 11531                           
 11532                           ; BSR set to: 1
 11533                           ;muta_messages.c: 160: if (var._signed)
 11534  00A238  0101               	movlb	1	; () banked
 11535  00A23A  510A               	movf	(encode_ufixed16_variable@var+8)& (0+255),w,b
 11536  00A23C  B4D8               	btfsc	status,2,c
 11537  00A23E  D003               	goto	l2038
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;muta_messages.c: 161: m_signed = 1;
 11541  00A240  0E01               	movlw	1
 11542  00A242  0101               	movlb	1	; () banked
 11543  00A244  6F0D               	movwf	encode_ufixed16_variable@m_signed& (0+255),b
 11544  00A246                     l2038:
 11545                           
 11546                           ; BSR set to: 1
 11547                           ;muta_messages.c: 162: if (var.writable)
 11548  00A246  0101               	movlb	1	; () banked
 11549  00A248  5109               	movf	(encode_ufixed16_variable@var+7)& (0+255),w,b
 11550  00A24A  B4D8               	btfsc	status,2,c
 11551  00A24C  D003               	goto	l19212
 11552                           
 11553                           ; BSR set to: 1
 11554                           ;muta_messages.c: 163: m_writable = 1;
 11555  00A24E  0E01               	movlw	1
 11556  00A250  0101               	movlb	1	; () banked
 11557  00A252  6F0E               	movwf	encode_ufixed16_variable@m_writable& (0+255),b
 11558  00A254                     l19212:
 11559                           
 11560                           ; BSR set to: 1
 11561                           ;muta_messages.c: 164: var.type = (2 << 6)+ (m_signed << 5) + (m_writable << 4) + var.un
      +                          it;
 11562  00A254  C10E  F10C         	movff	encode_ufixed16_variable@m_writable,??_encode_ufixed16_variable
 11563  00A258  0101               	movlb	1	; () banked
 11564  00A25A  3B0C               	swapf	??_encode_ufixed16_variable& (0+255),f,b
 11565  00A25C  0EF0               	movlw	240
 11566  00A25E  170C               	andwf	??_encode_ufixed16_variable& (0+255),f,b
 11567  00A260  0101               	movlb	1	; () banked
 11568  00A262  390D               	swapf	encode_ufixed16_variable@m_signed& (0+255),w,b
 11569  00A264  46E8               	rlncf	wreg,f,c
 11570  00A266  0BE0               	andlw	224
 11571  00A268  0101               	movlb	1	; () banked
 11572  00A26A  250C               	addwf	??_encode_ufixed16_variable& (0+255),w,b
 11573  00A26C  0101               	movlb	1	; () banked
 11574  00A26E  2508               	addwf	(encode_ufixed16_variable@var+6)& (0+255),w,b
 11575  00A270  0F80               	addlw	128
 11576  00A272  0101               	movlb	1	; () banked
 11577  00A274  6F05               	movwf	(encode_ufixed16_variable@var+3)& (0+255),b
 11578                           
 11579                           ; BSR set to: 1
 11580                           ;muta_messages.c: 165: *(buffer++) = var.type;
 11581  00A276  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11582  00A27A  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11583  00A27E  C105  FFDF         	movff	encode_ufixed16_variable@var+3,indf2
 11584                           
 11585                           ; BSR set to: 1
 11586  00A282  0101               	movlb	1	; () banked
 11587  00A284  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11588  00A286  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11589                           
 11590                           ; BSR set to: 1
 11591                           ;muta_messages.c: 166: *(buffer++) = var.value_byte2;
 11592  00A288  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11593  00A28C  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11594  00A290  C107  FFDF         	movff	encode_ufixed16_variable@var+5,indf2
 11595                           
 11596                           ; BSR set to: 1
 11597  00A294  0101               	movlb	1	; () banked
 11598  00A296  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11599  00A298  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11600                           
 11601                           ; BSR set to: 1
 11602                           ;muta_messages.c: 167: *(buffer++) = var.value_byte1;
 11603  00A29A  C100  FFD9         	movff	encode_ufixed16_variable@buffer,fsr2l
 11604  00A29E  C101  FFDA         	movff	encode_ufixed16_variable@buffer+1,fsr2h
 11605  00A2A2  C106  FFDF         	movff	encode_ufixed16_variable@var+4,indf2
 11606                           
 11607                           ; BSR set to: 1
 11608  00A2A6  0101               	movlb	1	; () banked
 11609  00A2A8  4B00               	infsnz	encode_ufixed16_variable@buffer& (0+255),f,b
 11610  00A2AA  2B01               	incf	(encode_ufixed16_variable@buffer+1)& (0+255),f,b
 11611                           
 11612                           ; BSR set to: 1
 11613                           ;muta_messages.c: 168: return 6;
 11614  00A2AC  0E06               	movlw	6
 11615  00A2AE  0012               	return	
 11616  00A2B0                     __end_of_encode_ufixed16_variable:
 11617                           	opt stack 0
 11618                           tblptru	equ	0xFF8
 11619                           tblptrh	equ	0xFF7
 11620                           tblptrl	equ	0xFF6
 11621                           tablat	equ	0xFF5
 11622                           prodh	equ	0xFF4
 11623                           prodl	equ	0xFF3
 11624                           postinc0	equ	0xFEE
 11625                           plusw0	equ	0xFEB
 11626                           wreg	equ	0xFE8
 11627                           postdec1	equ	0xFE5
 11628                           fsr1h	equ	0xFE2
 11629                           fsr1l	equ	0xFE1
 11630                           indf2	equ	0xFDF
 11631                           postinc2	equ	0xFDE
 11632                           postdec2	equ	0xFDD
 11633                           plusw2	equ	0xFDB
 11634                           fsr2h	equ	0xFDA
 11635                           fsr2l	equ	0xFD9
 11636                           status	equ	0xFD8
 11637                           
 11638 ;; *************** function _dBm_to_mW_ufixed16 *****************
 11639 ;; Defined at:
 11640 ;;		line 45 in file "../../muta/muta_messages.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;  power           1    wreg     unsigned char 
 11643 ;;  value1          2    0[BANK1 ] PTR unsigned char 
 11644 ;;		 -> m_var(10), 
 11645 ;;  value2          2    2[BANK1 ] PTR unsigned char 
 11646 ;;		 -> m_var(10), 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  power           1    4[BANK1 ] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;		None               void
 11651 ;; Registers used:
 11652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11658 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11659 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;Total ram usage:        5 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:   16
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_send_complete_update
 11669 ;;		_send_answer_to_update
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           	psect	text28
 11674  008AFC                     __ptext28:
 11675                           	opt stack 0
 11676  008AFC                     _dBm_to_mW_ufixed16:
 11677                           	opt stack 13
 11678                           
 11679                           ; BSR set to: 1
 11680                           ;incstack = 0
 11681                           ;dBm_to_mW_ufixed16@power stored from wreg
 11682  008AFC  0101               	movlb	1	; () banked
 11683  008AFE  6F04               	movwf	dBm_to_mW_ufixed16@power& (0+255),b
 11684                           
 11685                           ;muta_messages.c: 47: switch(power)
 11686  008B00  D075               	goto	l19190
 11687  008B02                     l19170:
 11688                           
 11689                           ;muta_messages.c: 50: *value1 = 20;
 11690  008B02  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11691  008B06  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11692  008B0A  0E14               	movlw	20
 11693  008B0C  6EDF               	movwf	indf2,c
 11694                           
 11695                           ;muta_messages.c: 51: *value2 = 0;
 11696  008B0E  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11697  008B12  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11698  008B16  0E00               	movlw	0
 11699  008B18  6EDF               	movwf	indf2,c
 11700                           
 11701                           ;muta_messages.c: 52: break;
 11702  008B1A  0012               	return	
 11703  008B1C                     l19172:
 11704                           
 11705                           ;muta_messages.c: 54: *value1 = 10;
 11706  008B1C  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11707  008B20  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11708  008B24  0E0A               	movlw	10
 11709  008B26  6EDF               	movwf	indf2,c
 11710                           
 11711                           ;muta_messages.c: 55: *value2 = 0;
 11712  008B28  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11713  008B2C  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11714  008B30  0E00               	movlw	0
 11715  008B32  6EDF               	movwf	indf2,c
 11716                           
 11717                           ;muta_messages.c: 56: break;
 11718  008B34  0012               	return	
 11719  008B36                     l19174:
 11720                           
 11721                           ;muta_messages.c: 58: *value1 = 5;
 11722  008B36  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11723  008B3A  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11724  008B3E  0E05               	movlw	5
 11725  008B40  6EDF               	movwf	indf2,c
 11726                           
 11727                           ;muta_messages.c: 59: *value2 = 0;
 11728  008B42  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11729  008B46  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11730  008B4A  0E00               	movlw	0
 11731  008B4C  6EDF               	movwf	indf2,c
 11732                           
 11733                           ;muta_messages.c: 60: break;
 11734  008B4E  0012               	return	
 11735  008B50                     l19176:
 11736                           
 11737                           ;muta_messages.c: 62: *value1 = 2;
 11738  008B50  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11739  008B54  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11740  008B58  0E02               	movlw	2
 11741  008B5A  6EDF               	movwf	indf2,c
 11742                           
 11743                           ;muta_messages.c: 63: *value2 = 50;
 11744  008B5C  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11745  008B60  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11746  008B64  0E32               	movlw	50
 11747  008B66  6EDF               	movwf	indf2,c
 11748                           
 11749                           ;muta_messages.c: 64: break;
 11750  008B68  0012               	return	
 11751  008B6A                     l19178:
 11752                           
 11753                           ;muta_messages.c: 66: *value1 = 1;
 11754  008B6A  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11755  008B6E  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11756  008B72  0E01               	movlw	1
 11757  008B74  6EDF               	movwf	indf2,c
 11758                           
 11759                           ;muta_messages.c: 67: *value2 = 25;
 11760  008B76  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11761  008B7A  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11762  008B7E  0E19               	movlw	25
 11763  008B80  6EDF               	movwf	indf2,c
 11764                           
 11765                           ;muta_messages.c: 68: break;
 11766  008B82  0012               	return	
 11767  008B84                     l19180:
 11768                           
 11769                           ;muta_messages.c: 70: *value1 = 0;
 11770  008B84  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11771  008B88  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11772  008B8C  0E00               	movlw	0
 11773  008B8E  6EDF               	movwf	indf2,c
 11774                           
 11775                           ;muta_messages.c: 71: *value2 = 60;
 11776  008B90  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11777  008B94  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11778  008B98  0E3C               	movlw	60
 11779  008B9A  6EDF               	movwf	indf2,c
 11780                           
 11781                           ;muta_messages.c: 72: break;
 11782  008B9C  0012               	return	
 11783  008B9E                     l19182:
 11784                           
 11785                           ;muta_messages.c: 74: *value1 = 0;
 11786  008B9E  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11787  008BA2  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11788  008BA6  0E00               	movlw	0
 11789  008BA8  6EDF               	movwf	indf2,c
 11790                           
 11791                           ;muta_messages.c: 75: *value2 = 30;
 11792  008BAA  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11793  008BAE  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11794  008BB2  0E1E               	movlw	30
 11795  008BB4  6EDF               	movwf	indf2,c
 11796                           
 11797                           ;muta_messages.c: 76: break;
 11798  008BB6  0012               	return	
 11799  008BB8                     l19184:
 11800                           
 11801                           ;muta_messages.c: 78: *value1 = 0;
 11802  008BB8  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11803  008BBC  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11804  008BC0  0E00               	movlw	0
 11805  008BC2  6EDF               	movwf	indf2,c
 11806                           
 11807                           ;muta_messages.c: 79: *value2 = 15;
 11808  008BC4  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11809  008BC8  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11810  008BCC  0E0F               	movlw	15
 11811  008BCE  6EDF               	movwf	indf2,c
 11812                           
 11813                           ;muta_messages.c: 80: break;
 11814  008BD0  0012               	return	
 11815  008BD2                     l19186:
 11816                           
 11817                           ;muta_messages.c: 82: *value1 = 0;
 11818  008BD2  C100  FFD9         	movff	dBm_to_mW_ufixed16@value1,fsr2l
 11819  008BD6  C101  FFDA         	movff	dBm_to_mW_ufixed16@value1+1,fsr2h
 11820  008BDA  0E00               	movlw	0
 11821  008BDC  6EDF               	movwf	indf2,c
 11822                           
 11823                           ;muta_messages.c: 83: *value2 = 0;
 11824  008BDE  C102  FFD9         	movff	dBm_to_mW_ufixed16@value2,fsr2l
 11825  008BE2  C103  FFDA         	movff	dBm_to_mW_ufixed16@value2+1,fsr2h
 11826  008BE6  0E00               	movlw	0
 11827  008BE8  6EDF               	movwf	indf2,c
 11828                           
 11829                           ;muta_messages.c: 85: }
 11830                           
 11831                           ;muta_messages.c: 84: break;
 11832  008BEA  0012               	return	
 11833  008BEC                     l19190:
 11834  008BEC  0101               	movlb	1	; () banked
 11835  008BEE  5104               	movf	dBm_to_mW_ufixed16@power& (0+255),w,b
 11836                           
 11837                           ; Switch size 1, requested type "space"
 11838                           ; Number of cases is 8, Range of values is 0 to 7
 11839                           ; switch strategies available:
 11840                           ; Name         Instructions Cycles
 11841                           ; simple_byte           25    13 (average)
 11842                           ;	Chosen strategy is simple_byte
 11843  008BF0  0A00               	xorlw	0	; case 0
 11844  008BF2  B4D8               	btfsc	status,2,c
 11845  008BF4  D786               	goto	l19170
 11846  008BF6  0A01               	xorlw	1	; case 1
 11847  008BF8  B4D8               	btfsc	status,2,c
 11848  008BFA  D790               	goto	l19172
 11849  008BFC  0A03               	xorlw	3	; case 2
 11850  008BFE  B4D8               	btfsc	status,2,c
 11851  008C00  D79A               	goto	l19174
 11852  008C02  0A01               	xorlw	1	; case 3
 11853  008C04  B4D8               	btfsc	status,2,c
 11854  008C06  D7A4               	goto	l19176
 11855  008C08  0A07               	xorlw	7	; case 4
 11856  008C0A  B4D8               	btfsc	status,2,c
 11857  008C0C  D7AE               	goto	l19178
 11858  008C0E  0A01               	xorlw	1	; case 5
 11859  008C10  B4D8               	btfsc	status,2,c
 11860  008C12  D7B8               	goto	l19180
 11861  008C14  0A03               	xorlw	3	; case 6
 11862  008C16  B4D8               	btfsc	status,2,c
 11863  008C18  D7C2               	goto	l19182
 11864  008C1A  0A01               	xorlw	1	; case 7
 11865  008C1C  B4D8               	btfsc	status,2,c
 11866  008C1E  D7CC               	goto	l19184
 11867  008C20  D7D8               	goto	l19186
 11868  008C22                     __end_of_dBm_to_mW_ufixed16:
 11869                           	opt stack 0
 11870                           tblptru	equ	0xFF8
 11871                           tblptrh	equ	0xFF7
 11872                           tblptrl	equ	0xFF6
 11873                           tablat	equ	0xFF5
 11874                           prodh	equ	0xFF4
 11875                           prodl	equ	0xFF3
 11876                           postinc0	equ	0xFEE
 11877                           plusw0	equ	0xFEB
 11878                           wreg	equ	0xFE8
 11879                           postdec1	equ	0xFE5
 11880                           fsr1h	equ	0xFE2
 11881                           fsr1l	equ	0xFE1
 11882                           indf2	equ	0xFDF
 11883                           postinc2	equ	0xFDE
 11884                           postdec2	equ	0xFDD
 11885                           plusw2	equ	0xFDB
 11886                           fsr2h	equ	0xFDA
 11887                           fsr2l	equ	0xFD9
 11888                           status	equ	0xFD8
 11889                           
 11890 ;; *************** function _sendHIDText *****************
 11891 ;; Defined at:
 11892 ;;		line 704 in file "src/main.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;  str             2    7[BANK1 ] PTR unsigned char 
 11895 ;;		 -> ToSendDataBuffer(64), 
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;  size            2   15[BANK1 ] int 
 11898 ;;  p               2   13[BANK1 ] PTR unsigned char 
 11899 ;;		 -> ToSendDataBuffer(64), 
 11900 ;;  c               1   10[BANK1 ] unsigned char 
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  1    wreg      unsigned char 
 11903 ;; Registers used:
 11904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11910 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11911 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11912 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11913 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11914 ;;Total ram usage:       10 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:   17
 11917 ;; This function calls:
 11918 ;;		_USBTransferOnePacket
 11919 ;; This function is called by:
 11920 ;;		_main
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text29
 11925  009EEC                     __ptext29:
 11926                           	opt stack 0
 11927  009EEC                     _sendHIDText:
 11928                           	opt stack 13
 11929                           
 11930                           ;main.c: 706: if ((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11931                           
 11932                           ;incstack = 0
 11933  009EEC  0E1F               	movlw	31
 11934  009EEE  644B               	cpfsgt	_USBDeviceState,c	;volatile
 11935  009EF0  0012               	return	
 11936  009EF2  B265               	btfsc	3941,1,c	;volatile
 11937  009EF4  0012               	return	
 11938  009EF6                     l20564:
 11939                           
 11940                           ;main.c: 711: {
 11941                           ;main.c: 712: if(!(USBInHandle==0?0:((volatile BDT_ENTRY*)USBInHandle)->STAT.UOWN))
 11942  009EF6  0100               	movlb	0	; () banked
 11943  009EF8  5193               	movf	_USBInHandle& (0+255),w,b
 11944  009EFA  0100               	movlb	0	; () banked
 11945  009EFC  1194               	iorwf	(_USBInHandle+1)& (0+255),w,b
 11946  009EFE  B4D8               	btfsc	status,2,c
 11947  009F00  D013               	goto	l20568
 11948                           
 11949                           ; BSR set to: 0
 11950  009F02  C093  FFD9         	movff	_USBInHandle,fsr2l
 11951  009F06  C094  FFDA         	movff	_USBInHandle+1,fsr2h
 11952  009F0A  0100               	movlb	0	; () banked
 11953  009F0C  AEDF               	btfss	indf2,7,c
 11954  009F0E  D004               	goto	u23450
 11955  009F10  0101               	movlb	1	; () banked
 11956  009F12  6B09               	clrf	??_sendHIDText& (0+255),b
 11957  009F14  2B09               	incf	??_sendHIDText& (0+255),f,b
 11958  009F16  D002               	goto	u23458
 11959  009F18                     u23450:
 11960  009F18  0101               	movlb	1	; () banked
 11961  009F1A  6B09               	clrf	??_sendHIDText& (0+255),b
 11962  009F1C                     u23458:
 11963  009F1C  0101               	movlb	1	; () banked
 11964  009F1E  5109               	movf	??_sendHIDText& (0+255),w,b
 11965  009F20  0101               	movlb	1	; () banked
 11966  009F22  6F0B               	movwf	_sendHIDText$4973& (0+255),b
 11967  009F24  6B0C               	clrf	(_sendHIDText$4973+1)& (0+255),b
 11968  009F26  D005               	goto	l20570
 11969  009F28                     l20568:
 11970  009F28  0E00               	movlw	0
 11971  009F2A  0101               	movlb	1	; () banked
 11972  009F2C  6F0C               	movwf	(_sendHIDText$4973+1)& (0+255),b
 11973  009F2E  0E00               	movlw	0
 11974  009F30  6F0B               	movwf	_sendHIDText$4973& (0+255),b
 11975  009F32                     l20570:
 11976                           
 11977                           ; BSR set to: 1
 11978  009F32  0101               	movlb	1	; () banked
 11979  009F34  510B               	movf	_sendHIDText$4973& (0+255),w,b
 11980  009F36  0101               	movlb	1	; () banked
 11981  009F38  110C               	iorwf	(_sendHIDText$4973+1)& (0+255),w,b
 11982  009F3A  A4D8               	btfss	status,2,c
 11983  009F3C  D7DC               	goto	l20564
 11984                           
 11985                           ; BSR set to: 1
 11986                           ;main.c: 713: {
 11987                           ;main.c: 714: uint8_t* p = &ToSendDataBuffer[0];
 11988  009F3E  0E84               	movlw	low _ToSendDataBuffer
 11989  009F40  0101               	movlb	1	; () banked
 11990  009F42  6F0D               	movwf	sendHIDText@p& (0+255),b
 11991  009F44  0E03               	movlw	high _ToSendDataBuffer
 11992  009F46  0101               	movlb	1	; () banked
 11993  009F48  6F0E               	movwf	(sendHIDText@p+1)& (0+255),b
 11994                           
 11995                           ; BSR set to: 1
 11996                           ;main.c: 715: int size = 0;
 11997  009F4A  0E00               	movlw	0
 11998  009F4C  0101               	movlb	1	; () banked
 11999  009F4E  6F10               	movwf	(sendHIDText@size+1)& (0+255),b
 12000  009F50  0E00               	movlw	0
 12001  009F52  6F0F               	movwf	sendHIDText@size& (0+255),b
 12002                           
 12003                           ;main.c: 716: uint8_t c;
 12004                           ;main.c: 717: while ( c = *str++ )
 12005  009F54  D00C               	goto	l20582
 12006  009F56                     l20576:
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;main.c: 718: {
 12010                           ;main.c: 719: *p = c;
 12011  009F56  C10D  FFD9         	movff	sendHIDText@p,fsr2l
 12012  009F5A  C10E  FFDA         	movff	sendHIDText@p+1,fsr2h
 12013  009F5E  C10A  FFDF         	movff	sendHIDText@c,indf2
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;main.c: 720: p++;
 12017  009F62  0101               	movlb	1	; () banked
 12018  009F64  4B0D               	infsnz	sendHIDText@p& (0+255),f,b
 12019  009F66  2B0E               	incf	(sendHIDText@p+1)& (0+255),f,b
 12020                           
 12021                           ; BSR set to: 1
 12022                           ;main.c: 721: size++;
 12023  009F68  0101               	movlb	1	; () banked
 12024  009F6A  4B0F               	infsnz	sendHIDText@size& (0+255),f,b
 12025  009F6C  2B10               	incf	(sendHIDText@size+1)& (0+255),f,b
 12026  009F6E                     l20582:
 12027                           
 12028                           ; BSR set to: 1
 12029  009F6E  C107  FFD9         	movff	sendHIDText@str,fsr2l
 12030  009F72  C108  FFDA         	movff	sendHIDText@str+1,fsr2h
 12031  009F76  0101               	movlb	1	; () banked
 12032  009F78  4B07               	infsnz	sendHIDText@str& (0+255),f,b
 12033  009F7A  2B08               	incf	(sendHIDText@str+1)& (0+255),f,b
 12034  009F7C  50DF               	movf	indf2,w,c
 12035  009F7E  0101               	movlb	1	; () banked
 12036  009F80  6F0A               	movwf	sendHIDText@c& (0+255),b
 12037  009F82  0101               	movlb	1	; () banked
 12038  009F84  510A               	movf	sendHIDText@c& (0+255),w,b
 12039  009F86  A4D8               	btfss	status,2,c
 12040  009F88  D7E6               	goto	l20576
 12041                           
 12042                           ; BSR set to: 1
 12043                           ;main.c: 722: }
 12044                           ;main.c: 723: USBInHandle = USBTransferOnePacket(1,1,&ToSendDataBuffer[0],size);
 12045                           
 12046                           ; BSR set to: 1
 12047  009F8A  0E01               	movlw	1
 12048  009F8C  0101               	movlb	1	; () banked
 12049  009F8E  6F00               	movwf	USBTransferOnePacket@dir& (0+255),b
 12050  009F90  0E84               	movlw	low _ToSendDataBuffer
 12051  009F92  0101               	movlb	1	; () banked
 12052  009F94  6F01               	movwf	USBTransferOnePacket@data& (0+255),b
 12053  009F96  0E03               	movlw	high _ToSendDataBuffer
 12054  009F98  0101               	movlb	1	; () banked
 12055  009F9A  6F02               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12056  009F9C  C10F  F103         	movff	sendHIDText@size,USBTransferOnePacket@len
 12057  009FA0  0E01               	movlw	1
 12058  009FA2  ECA1  F04C         	call	_USBTransferOnePacket
 12059  009FA6  C100  F093         	movff	?_USBTransferOnePacket,_USBInHandle
 12060  009FAA  C101  F094         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 12061                           
 12062                           ;main.c: 724: return 1;
 12063                           ;	Return value of _sendHIDText is never used
 12064  009FAE  0012               	return	
 12065  009FB0                     __end_of_sendHIDText:
 12066                           	opt stack 0
 12067                           tblptru	equ	0xFF8
 12068                           tblptrh	equ	0xFF7
 12069                           tblptrl	equ	0xFF6
 12070                           tablat	equ	0xFF5
 12071                           prodh	equ	0xFF4
 12072                           prodl	equ	0xFF3
 12073                           postinc0	equ	0xFEE
 12074                           plusw0	equ	0xFEB
 12075                           wreg	equ	0xFE8
 12076                           postdec1	equ	0xFE5
 12077                           fsr1h	equ	0xFE2
 12078                           fsr1l	equ	0xFE1
 12079                           indf2	equ	0xFDF
 12080                           postinc2	equ	0xFDE
 12081                           postdec2	equ	0xFDD
 12082                           plusw2	equ	0xFDB
 12083                           fsr2h	equ	0xFDA
 12084                           fsr2l	equ	0xFD9
 12085                           status	equ	0xFD8
 12086                           
 12087 ;; *************** function _USBTransferOnePacket *****************
 12088 ;; Defined at:
 12089 ;;		line 995 in file "src/usb/usb_device.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;  ep              1    wreg     unsigned char 
 12092 ;;  dir             1    0[BANK1 ] unsigned char 
 12093 ;;  data            2    1[BANK1 ] PTR unsigned char 
 12094 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 12095 ;;  len             1    3[BANK1 ] unsigned char 
 12096 ;; Auto vars:     Size  Location     Type
 12097 ;;  ep              1    4[BANK1 ] unsigned char 
 12098 ;;  handle          2    5[BANK1 ] PTR volatile struct __BD
 12099 ;;		 -> BDT(32), NULL(0), 
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  2    0[BANK1 ] PTR void 
 12102 ;; Registers used:
 12103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12104 ;; Tracked objects:
 12105 ;;		On entry : 0/0
 12106 ;;		On exit  : 0/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12109 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12110 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12112 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12113 ;;Total ram usage:        7 bytes
 12114 ;; Hardware stack levels used:    1
 12115 ;; Hardware stack levels required when called:   16
 12116 ;; This function calls:
 12117 ;;		Nothing
 12118 ;; This function is called by:
 12119 ;;		_main
 12120 ;;		_sendHIDBinary
 12121 ;;		_sendHIDText
 12122 ;; This function uses a non-reentrant model
 12123 ;;
 12124                           
 12125                           	psect	text30
 12126  009942                     __ptext30:
 12127                           	opt stack 0
 12128  009942                     _USBTransferOnePacket:
 12129                           	opt stack 12
 12130                           
 12131                           ;incstack = 0
 12132                           ;USBTransferOnePacket@ep stored from wreg
 12133  009942  0101               	movlb	1	; () banked
 12134  009944  6F04               	movwf	USBTransferOnePacket@ep& (0+255),b
 12135                           
 12136                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12137                           ;usb_device.c: 1000: if(dir != 0)
 12138  009946  0101               	movlb	1	; () banked
 12139  009948  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12140  00994A  0101               	movlb	1	; () banked
 12141  00994C  B4D8               	btfsc	status,2,c
 12142  00994E  D008               	goto	l18746
 12143                           
 12144                           ; BSR set to: 1
 12145                           ;usb_device.c: 1001: {
 12146                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12147  009950  0101               	movlb	1	; () banked
 12148  009952  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12149  009954  0D02               	mullw	2
 12150  009956  0E8B               	movlw	low _pBDTEntryIn
 12151  009958  24F3               	addwf	prodl,w,c
 12152  00995A  6ED9               	movwf	fsr2l,c
 12153  00995C  0E00               	movlw	high _pBDTEntryIn
 12154  00995E  D007               	goto	L1
 12155  009960                     l18746:
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;usb_device.c: 1005: else
 12159                           ;usb_device.c: 1006: {
 12160                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12161  009960  0101               	movlb	1	; () banked
 12162  009962  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12163  009964  0D02               	mullw	2
 12164  009966  0E8F               	movlw	low _pBDTEntryOut
 12165  009968  24F3               	addwf	prodl,w,c
 12166  00996A  6ED9               	movwf	fsr2l,c
 12167  00996C  0E00               	movlw	high _pBDTEntryOut
 12168  00996E                     L1:
 12169  00996E  20F4               	addwfc	prodh,w,c
 12170  009970  6EDA               	movwf	fsr2h,c
 12171  009972  CFDE F105          	movff	postinc2,USBTransferOnePacket@handle
 12172  009976  CFDD F106          	movff	postdec2,USBTransferOnePacket@handle+1
 12173                           
 12174                           ; BSR set to: 1
 12175                           ;usb_device.c: 1009: }
 12176                           ;usb_device.c: 1013: if(handle == 0)
 12177                           
 12178                           ; BSR set to: 1
 12179  00997A  0101               	movlb	1	; () banked
 12180  00997C  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12181  00997E  0101               	movlb	1	; () banked
 12182  009980  1106               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12183  009982  A4D8               	btfss	status,2,c
 12184  009984  D007               	goto	l18754
 12185                           
 12186                           ; BSR set to: 1
 12187                           ;usb_device.c: 1014: {
 12188                           ;usb_device.c: 1015: return 0;
 12189  009986  0E00               	movlw	0
 12190  009988  0101               	movlb	1	; () banked
 12191  00998A  6F00               	movwf	?_USBTransferOnePacket& (0+255),b
 12192  00998C  0E00               	movlw	0
 12193  00998E  0101               	movlb	1	; () banked
 12194  009990  6F01               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12195                           
 12196                           ; BSR set to: 1
 12197  009992  0012               	return	
 12198  009994                     l18754:
 12199                           
 12200                           ; BSR set to: 1
 12201                           ;usb_device.c: 1016: }
 12202                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12203  009994  0101               	movlb	1	; () banked
 12204  009996  EE20 F002          	lfsr	2,2
 12205  00999A  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12206  00999C  26D9               	addwf	fsr2l,f,c
 12207  00999E  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12208  0099A0  22DA               	addwfc	fsr2h,f,c
 12209  0099A2  C101  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12210  0099A6  C102  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12211                           
 12212                           ;usb_device.c: 1030: handle->CNT = len;
 12213  0099AA  0101               	movlb	1	; () banked
 12214  0099AC  EE20 F001          	lfsr	2,1
 12215  0099B0  5105               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12216  0099B2  26D9               	addwf	fsr2l,f,c
 12217  0099B4  5106               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12218  0099B6  22DA               	addwfc	fsr2h,f,c
 12219  0099B8  C103  FFDF         	movff	USBTransferOnePacket@len,indf2
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12223  0099BC  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12224  0099C0  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12225  0099C4  0E40               	movlw	64
 12226  0099C6  16DF               	andwf	indf2,f,c
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12230  0099C8  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12231  0099CC  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12232  0099D0  0E00               	movlw	0
 12233  0099D2  86DB               	bsf	plusw2,3,c
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12237  0099D4  C105  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12238  0099D8  C106  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12239  0099DC  0E00               	movlw	0
 12240  0099DE  8EDB               	bsf	plusw2,7,c
 12241                           
 12242                           ; BSR set to: 1
 12243                           ;usb_device.c: 1036: if(dir != 0)
 12244  0099E0  0101               	movlb	1	; () banked
 12245  0099E2  5100               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12246  0099E4  0101               	movlb	1	; () banked
 12247  0099E6  B4D8               	btfsc	status,2,c
 12248  0099E8  D008               	goto	l18766
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;usb_device.c: 1037: {
 12252                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12253  0099EA  0101               	movlb	1	; () banked
 12254  0099EC  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12255  0099EE  0D02               	mullw	2
 12256  0099F0  0E8B               	movlw	low _pBDTEntryIn
 12257  0099F2  24F3               	addwf	prodl,w,c
 12258  0099F4  6ED9               	movwf	fsr2l,c
 12259  0099F6  0E00               	movlw	high _pBDTEntryIn
 12260  0099F8  D007               	goto	L2
 12261  0099FA                     l18766:
 12262                           
 12263                           ; BSR set to: 1
 12264                           ;usb_device.c: 1041: else
 12265                           ;usb_device.c: 1042: {
 12266                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12267  0099FA  0101               	movlb	1	; () banked
 12268  0099FC  5104               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12269  0099FE  0D02               	mullw	2
 12270  009A00  0E8F               	movlw	low _pBDTEntryOut
 12271  009A02  24F3               	addwf	prodl,w,c
 12272  009A04  6ED9               	movwf	fsr2l,c
 12273  009A06  0E00               	movlw	high _pBDTEntryOut
 12274  009A08                     L2:
 12275  009A08  20F4               	addwfc	prodh,w,c
 12276  009A0A  6EDA               	movwf	fsr2h,c
 12277  009A0C  0E04               	movlw	4
 12278  009A0E  1ADF               	xorwf	indf2,f,c
 12279                           
 12280                           ; BSR set to: 1
 12281                           ;usb_device.c: 1045: }
 12282                           ;usb_device.c: 1046: return (void*)handle;
 12283                           
 12284                           ; BSR set to: 1
 12285  009A10  C105  F100         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12286  009A14  C106  F101         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12287  009A18  0012               	return	
 12288  009A1A                     __end_of_USBTransferOnePacket:
 12289                           	opt stack 0
 12290                           tblptru	equ	0xFF8
 12291                           tblptrh	equ	0xFF7
 12292                           tblptrl	equ	0xFF6
 12293                           tablat	equ	0xFF5
 12294                           prodh	equ	0xFF4
 12295                           prodl	equ	0xFF3
 12296                           postinc0	equ	0xFEE
 12297                           plusw0	equ	0xFEB
 12298                           wreg	equ	0xFE8
 12299                           postdec1	equ	0xFE5
 12300                           fsr1h	equ	0xFE2
 12301                           fsr1l	equ	0xFE1
 12302                           indf2	equ	0xFDF
 12303                           postinc2	equ	0xFDE
 12304                           postdec2	equ	0xFDD
 12305                           plusw2	equ	0xFDB
 12306                           fsr2h	equ	0xFDA
 12307                           fsr2l	equ	0xFD9
 12308                           status	equ	0xFD8
 12309                           
 12310 ;; *************** function _decode_variable *****************
 12311 ;; Defined at:
 12312 ;;		line 195 in file "../../muta/muta_messages.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  p_buffer        2   10[BANK1 ] PTR unsigned char 
 12315 ;;		 -> m_buffer(32), ReceivedDataBuffer(64), NULL(0), 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;  var            10   22[BANK1 ] struct .
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  10   10[BANK1 ] struct .
 12320 ;; Registers used:
 12321 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12327 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12328 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12329 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12330 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;Total ram usage:       22 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:   17
 12334 ;; This function calls:
 12335 ;;		_memcpy
 12336 ;; This function is called by:
 12337 ;;		_main
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text31
 12342  00949A                     __ptext31:
 12343                           	opt stack 0
 12344  00949A                     _decode_variable:
 12345                           	opt stack 13
 12346                           
 12347                           ;muta_messages.c: 197: MUTA_VARIABLE var;
 12348                           ;muta_messages.c: 198: memcpy(var.label, p_buffer, 3);
 12349                           
 12350                           ; BSR set to: 1
 12351                           ;incstack = 0
 12352  00949A  0E16               	movlw	low decode_variable@var
 12353  00949C  0101               	movlb	1	; () banked
 12354  00949E  6F00               	movwf	memcpy@d1& (0+255),b
 12355  0094A0  0E01               	movlw	high decode_variable@var
 12356  0094A2  0101               	movlb	1	; () banked
 12357  0094A4  6F01               	movwf	(memcpy@d1+1)& (0+255),b
 12358  0094A6  C10A  F102         	movff	decode_variable@p_buffer,memcpy@s1
 12359  0094AA  C10B  F103         	movff	decode_variable@p_buffer+1,memcpy@s1+1
 12360  0094AE  0E00               	movlw	0
 12361  0094B0  0101               	movlb	1	; () banked
 12362  0094B2  6F05               	movwf	(memcpy@n+1)& (0+255),b
 12363  0094B4  0E03               	movlw	3
 12364  0094B6  6F04               	movwf	memcpy@n& (0+255),b
 12365  0094B8  EC91  F059         	call	_memcpy	;wreg free
 12366                           
 12367                           ;muta_messages.c: 199: p_buffer += 3;
 12368  0094BC  0E03               	movlw	3
 12369  0094BE  0101               	movlb	1	; () banked
 12370  0094C0  270A               	addwf	decode_variable@p_buffer& (0+255),f,b
 12371  0094C2  0E00               	movlw	0
 12372  0094C4  230B               	addwfc	(decode_variable@p_buffer+1)& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 1
 12375                           ;muta_messages.c: 201: var.unit = *p_buffer & 0b00001111;
 12376  0094C6  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12377  0094CA  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12378  0094CE  50DF               	movf	indf2,w,c
 12379  0094D0  0B0F               	andlw	15
 12380  0094D2  0101               	movlb	1	; () banked
 12381  0094D4  6F1C               	movwf	(decode_variable@var+6)& (0+255),b
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;muta_messages.c: 202: if (*p_buffer & 0b00010000)
 12385  0094D6  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12386  0094DA  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12387  0094DE  0101               	movlb	1	; () banked
 12388  0094E0  A8DF               	btfss	indf2,4,c
 12389  0094E2  D002               	goto	l20966
 12390                           
 12391                           ; BSR set to: 1
 12392                           ;muta_messages.c: 203: var.writable = 1;
 12393  0094E4  0E01               	movlw	1
 12394  0094E6  D001               	goto	L3
 12395  0094E8                     l20966:
 12396                           
 12397                           ; BSR set to: 1
 12398                           ;muta_messages.c: 204: else
 12399                           ;muta_messages.c: 205: var.writable = 0;
 12400  0094E8  0E00               	movlw	0
 12401  0094EA                     L3:
 12402  0094EA  0101               	movlb	1	; () banked
 12403  0094EC  6F1D               	movwf	(decode_variable@var+7)& (0+255),b
 12404                           
 12405                           ; BSR set to: 1
 12406                           ;muta_messages.c: 206: if (*p_buffer & 0b00100000)
 12407                           
 12408                           ; BSR set to: 1
 12409  0094EE  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12410  0094F2  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12411  0094F6  0101               	movlb	1	; () banked
 12412  0094F8  AADF               	btfss	indf2,5,c
 12413  0094FA  D002               	goto	l20972
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;muta_messages.c: 207: var._signed = 1;
 12417  0094FC  0E01               	movlw	1
 12418  0094FE  D001               	goto	L4
 12419  009500                     l20972:
 12420                           
 12421                           ; BSR set to: 1
 12422                           ;muta_messages.c: 208: else
 12423                           ;muta_messages.c: 209: var._signed = 0;
 12424  009500  0E00               	movlw	0
 12425  009502                     L4:
 12426  009502  0101               	movlb	1	; () banked
 12427  009504  6F1E               	movwf	(decode_variable@var+8)& (0+255),b
 12428                           
 12429                           ; BSR set to: 1
 12430                           ;muta_messages.c: 211: var.type = (*p_buffer++ & 0b11000000) >> 6;
 12431                           
 12432                           ; BSR set to: 1
 12433  009506  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12434  00950A  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12435  00950E  50DF               	movf	indf2,w,c
 12436  009510  0101               	movlb	1	; () banked
 12437  009512  6F14               	movwf	??_decode_variable& (0+255),b
 12438  009514  0E06               	movlw	6
 12439  009516  0101               	movlb	1	; () banked
 12440  009518  6F15               	movwf	(??_decode_variable+1)& (0+255),b
 12441  00951A                     u23845:
 12442  00951A  0101               	movlb	1	; () banked
 12443  00951C  90D8               	bcf	status,0,c
 12444  00951E  3314               	rrcf	??_decode_variable& (0+255),f,b
 12445  009520  0101               	movlb	1	; () banked
 12446  009522  2F15               	decfsz	(??_decode_variable+1)& (0+255),f,b
 12447  009524  D7FA               	goto	u23845
 12448  009526  0101               	movlb	1	; () banked
 12449  009528  5114               	movf	??_decode_variable& (0+255),w,b
 12450  00952A  0B03               	andlw	3
 12451  00952C  0101               	movlb	1	; () banked
 12452  00952E  6F19               	movwf	(decode_variable@var+3)& (0+255),b
 12453                           
 12454                           ; BSR set to: 1
 12455  009530  0101               	movlb	1	; () banked
 12456  009532  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12457  009534  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12458                           
 12459                           ; BSR set to: 1
 12460                           ;muta_messages.c: 212: var.value_byte1 = *p_buffer++;
 12461  009536  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12462  00953A  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12463  00953E  50DF               	movf	indf2,w,c
 12464  009540  0101               	movlb	1	; () banked
 12465  009542  6F1A               	movwf	(decode_variable@var+4)& (0+255),b
 12466                           
 12467                           ; BSR set to: 1
 12468  009544  0101               	movlb	1	; () banked
 12469  009546  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12470  009548  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12471                           
 12472                           ;muta_messages.c: 213: if ((var.type == 1) || (var.type == 2))
 12473  00954A  0101               	movlb	1	; () banked
 12474  00954C  0519               	decf	(decode_variable@var+3)& (0+255),w,b
 12475  00954E  B4D8               	btfsc	status,2,c
 12476  009550  D005               	goto	l20984
 12477                           
 12478                           ; BSR set to: 1
 12479  009552  0E02               	movlw	2
 12480  009554  0101               	movlb	1	; () banked
 12481  009556  1919               	xorwf	(decode_variable@var+3)& (0+255),w,b
 12482  009558  A4D8               	btfss	status,2,c
 12483  00955A  D00C               	goto	l20990
 12484  00955C                     l20984:
 12485                           
 12486                           ; BSR set to: 1
 12487                           ;muta_messages.c: 214: {
 12488                           ;muta_messages.c: 215: var.value_byte2 = *p_buffer++;
 12489  00955C  C10A  FFD9         	movff	decode_variable@p_buffer,fsr2l
 12490  009560  C10B  FFDA         	movff	decode_variable@p_buffer+1,fsr2h
 12491  009564  50DF               	movf	indf2,w,c
 12492  009566  0101               	movlb	1	; () banked
 12493  009568  6F1B               	movwf	(decode_variable@var+5)& (0+255),b
 12494                           
 12495                           ; BSR set to: 1
 12496  00956A  0101               	movlb	1	; () banked
 12497  00956C  4B0A               	infsnz	decode_variable@p_buffer& (0+255),f,b
 12498  00956E  2B0B               	incf	(decode_variable@p_buffer+1)& (0+255),f,b
 12499                           
 12500                           ; BSR set to: 1
 12501                           ;muta_messages.c: 216: var.size = 6;
 12502  009570  0E06               	movlw	6
 12503  009572  D001               	goto	L5
 12504  009574                     l20990:
 12505                           
 12506                           ; BSR set to: 1
 12507                           ;muta_messages.c: 218: else
 12508                           ;muta_messages.c: 219: var.size = 5;
 12509  009574  0E05               	movlw	5
 12510  009576                     L5:
 12511  009576  0101               	movlb	1	; () banked
 12512  009578  6F1F               	movwf	(decode_variable@var+9)& (0+255),b
 12513                           
 12514                           ; BSR set to: 1
 12515                           ;muta_messages.c: 220: return var;
 12516                           
 12517                           ; BSR set to: 1
 12518  00957A  EE21  F016         	lfsr	2,decode_variable@var
 12519  00957E  EE01  F00A         	lfsr	0,?_decode_variable
 12520  009582  0E09               	movlw	9
 12521  009584                     u23871:
 12522  009584  CFDB FFEB          	movff	plusw2,plusw0
 12523  009588  06E8               	decf	wreg,f,c
 12524  00958A  E2FC               	bc	u23871
 12525  00958C  0012               	return	
 12526  00958E                     __end_of_decode_variable:
 12527                           	opt stack 0
 12528                           tblptru	equ	0xFF8
 12529                           tblptrh	equ	0xFF7
 12530                           tblptrl	equ	0xFF6
 12531                           tablat	equ	0xFF5
 12532                           prodh	equ	0xFF4
 12533                           prodl	equ	0xFF3
 12534                           postinc0	equ	0xFEE
 12535                           plusw0	equ	0xFEB
 12536                           wreg	equ	0xFE8
 12537                           postdec1	equ	0xFE5
 12538                           fsr1h	equ	0xFE2
 12539                           fsr1l	equ	0xFE1
 12540                           indf2	equ	0xFDF
 12541                           postinc2	equ	0xFDE
 12542                           postdec2	equ	0xFDD
 12543                           plusw2	equ	0xFDB
 12544                           fsr2h	equ	0xFDA
 12545                           fsr2l	equ	0xFD9
 12546                           status	equ	0xFD8
 12547                           
 12548 ;; *************** function _memcpy *****************
 12549 ;; Defined at:
 12550 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;  d1              2    0[BANK1 ] PTR void 
 12553 ;;		 -> decode_variable@var(10), m_var(10), m_buffer(32), ReceivedDataBuffer(64), 
 12554 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 12555 ;;  s1              2    2[BANK1 ] PTR const void 
 12556 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 12557 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 12558 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 12559 ;;  n               2    4[BANK1 ] unsigned int 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  s               2    8[BANK1 ] PTR const unsigned char 
 12562 ;;		 -> do_PING@buffer(21), UPDATE_FREQUENCY_LABEL(4), UPTIME_LABEL(4), NOISE_LABEL(4), 
 12563 ;;		 -> CHANNEL_LABEL(4), POWER_LABEL(4), m_buffer(32), ReceivedDataBuffer(64), 
 12564 ;;		 -> myLongAddress(4), NULL(0), RxPacket.Payload(64), RxPacket(132), 
 12565 ;;  d               2    6[BANK1 ] PTR unsigned char 
 12566 ;;		 -> decode_variable@var(10), m_var(10), m_buffer(32), ReceivedDataBuffer(64), 
 12567 ;;		 -> ToSendDataBuffer(64), TxBuffer(43), NULL(0), 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2    0[BANK1 ] PTR void 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12577 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12578 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12580 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12581 ;;Total ram usage:       10 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:   16
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_main
 12588 ;;		_send_network_register
 12589 ;;		_send_complete_update
 12590 ;;		_send_answer_to_update
 12591 ;;		_send_periodic_update
 12592 ;;		_sendHIDBinary
 12593 ;;		_decode_variable
 12594 ;;		_do_NETWORK_REGISTER
 12595 ;;		_do_PING
 12596 ;;		_do_UPDATE
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text32
 12601  00B322                     __ptext32:
 12602                           	opt stack 0
 12603  00B322                     _memcpy:
 12604                           	opt stack 12
 12605                           
 12606                           ; BSR set to: 1
 12607                           ;incstack = 0
 12608  00B322  C102  F108         	movff	memcpy@s1,memcpy@s
 12609  00B326  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
 12610  00B32A  C100  F106         	movff	memcpy@d1,memcpy@d
 12611  00B32E  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
 12612  00B332  D01C               	goto	l18780
 12613  00B334                     l18774:
 12614  00B334  C108  FFF6         	movff	memcpy@s,tblptrl
 12615  00B338  C109  FFF7         	movff	memcpy@s+1,tblptrh
 12616  00B33C  0E00               	movlw	low (__mediumconst shr (0+16))
 12617  00B33E  6EF8               	movwf	tblptru,c
 12618  00B340  C106  FFD9         	movff	memcpy@d,fsr2l
 12619  00B344  C107  FFDA         	movff	memcpy@d+1,fsr2h
 12620  00B348  0E0E               	movlw	(high __ramtop+-1)
 12621  00B34A  64F7               	cpfsgt	tblptrh,c
 12622  00B34C  D003               	bra	u21257
 12623  00B34E  0008               	tblrd		*
 12624  00B350  50F5               	movf	tablat,w,c
 12625  00B352  D005               	bra	u21250
 12626  00B354                     u21257:
 12627  00B354  CFF6 FFE9          	movff	tblptrl,fsr0l
 12628  00B358  CFF7 FFEA          	movff	tblptrh,fsr0h
 12629  00B35C  50EF               	movf	indf0,w,c
 12630  00B35E                     u21250:
 12631  00B35E  6EDF               	movwf	indf2,c
 12632  00B360  0101               	movlb	1	; () banked
 12633  00B362  4B08               	infsnz	memcpy@s& (0+255),f,b
 12634  00B364  2B09               	incf	(memcpy@s+1)& (0+255),f,b
 12635                           
 12636                           ; BSR set to: 1
 12637  00B366  0101               	movlb	1	; () banked
 12638  00B368  4B06               	infsnz	memcpy@d& (0+255),f,b
 12639  00B36A  2B07               	incf	(memcpy@d+1)& (0+255),f,b
 12640  00B36C                     l18780:
 12641  00B36C  0101               	movlb	1	; () banked
 12642  00B36E  0704               	decf	memcpy@n& (0+255),f,b
 12643  00B370  A0D8               	btfss	status,0,c
 12644  00B372  0705               	decf	(memcpy@n+1)& (0+255),f,b
 12645  00B374  0101               	movlb	1	; () banked
 12646  00B376  2904               	incf	memcpy@n& (0+255),w,b
 12647  00B378  E1DD               	bnz	l18774
 12648  00B37A  0101               	movlb	1	; () banked
 12649  00B37C  2905               	incf	(memcpy@n+1)& (0+255),w,b
 12650  00B37E  B4D8               	btfsc	status,2,c
 12651  00B380  0012               	return	
 12652  00B382  D7D8               	goto	l18774
 12653  00B384                     __end_of_memcpy:
 12654                           	opt stack 0
 12655                           tblptru	equ	0xFF8
 12656                           tblptrh	equ	0xFF7
 12657                           tblptrl	equ	0xFF6
 12658                           tablat	equ	0xFF5
 12659                           prodh	equ	0xFF4
 12660                           prodl	equ	0xFF3
 12661                           indf0	equ	0xFEF
 12662                           postinc0	equ	0xFEE
 12663                           plusw0	equ	0xFEB
 12664                           fsr0h	equ	0xFEA
 12665                           fsr0l	equ	0xFE9
 12666                           wreg	equ	0xFE8
 12667                           postdec1	equ	0xFE5
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           postdec2	equ	0xFDD
 12673                           plusw2	equ	0xFDB
 12674                           fsr2h	equ	0xFDA
 12675                           fsr2l	equ	0xFD9
 12676                           status	equ	0xFD8
 12677                           
 12678 ;; *************** function _dBm_to_mW *****************
 12679 ;; Defined at:
 12680 ;;		line 89 in file "../../muta/muta_messages.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  power           1    wreg     unsigned char 
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  power           1    2[BANK1 ] unsigned char 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  2    0[BANK1 ] PTR const unsigned char 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12694 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;Total ram usage:        3 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:   16
 12701 ;; This function calls:
 12702 ;;		Nothing
 12703 ;; This function is called by:
 12704 ;;		_main
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text33
 12709  00A2B0                     __ptext33:
 12710                           	opt stack 0
 12711  00A2B0                     _dBm_to_mW:
 12712                           	opt stack 14
 12713                           
 12714                           ; BSR set to: 1
 12715                           ;incstack = 0
 12716                           ;dBm_to_mW@power stored from wreg
 12717  00A2B0  0101               	movlb	1	; () banked
 12718  00A2B2  6F02               	movwf	dBm_to_mW@power& (0+255),b
 12719                           
 12720                           ;muta_messages.c: 91: switch(power)
 12721  00A2B4  D03F               	goto	l20954
 12722  00A2B6                     l20916:
 12723                           
 12724                           ;muta_messages.c: 94: return TX_POWER_13_DB_MW;
 12725  00A2B6  0EB4               	movlw	low _TX_POWER_13_DB_MW
 12726  00A2B8  0101               	movlb	1	; () banked
 12727  00A2BA  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12728  00A2BC  0E21               	movlw	high _TX_POWER_13_DB_MW
 12729  00A2BE  0101               	movlb	1	; () banked
 12730  00A2C0  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12731                           
 12732                           ; BSR set to: 1
 12733  00A2C2  0012               	return	
 12734  00A2C4                     l20920:
 12735                           
 12736                           ; BSR set to: 1
 12737                           ;muta_messages.c: 96: return TX_POWER_10_DB_MW;
 12738  00A2C4  0EAF               	movlw	low _TX_POWER_10_DB_MW
 12739  00A2C6  0101               	movlb	1	; () banked
 12740  00A2C8  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12741  00A2CA  0E21               	movlw	high _TX_POWER_10_DB_MW
 12742  00A2CC  0101               	movlb	1	; () banked
 12743  00A2CE  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12744                           
 12745                           ; BSR set to: 1
 12746  00A2D0  0012               	return	
 12747  00A2D2                     l20924:
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;muta_messages.c: 98: return TX_POWER_7_DB_MW;
 12751  00A2D2  0EC5               	movlw	low _TX_POWER_7_DB_MW
 12752  00A2D4  0101               	movlb	1	; () banked
 12753  00A2D6  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12754  00A2D8  0E21               	movlw	high _TX_POWER_7_DB_MW
 12755  00A2DA  0101               	movlb	1	; () banked
 12756  00A2DC  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12757                           
 12758                           ; BSR set to: 1
 12759  00A2DE  0012               	return	
 12760  00A2E0                     l20928:
 12761                           
 12762                           ; BSR set to: 1
 12763                           ;muta_messages.c: 100: return TX_POWER_4_DB_MW;
 12764  00A2E0  0E97               	movlw	low _TX_POWER_4_DB_MW
 12765  00A2E2  0101               	movlb	1	; () banked
 12766  00A2E4  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12767  00A2E6  0E21               	movlw	high _TX_POWER_4_DB_MW
 12768  00A2E8  0101               	movlb	1	; () banked
 12769  00A2EA  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12770                           
 12771                           ; BSR set to: 1
 12772  00A2EC  0012               	return	
 12773  00A2EE                     l20932:
 12774                           
 12775                           ; BSR set to: 1
 12776                           ;muta_messages.c: 102: return TX_POWER_1_DB_MW;
 12777  00A2EE  0E89               	movlw	low _TX_POWER_1_DB_MW
 12778  00A2F0  0101               	movlb	1	; () banked
 12779  00A2F2  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12780  00A2F4  0E21               	movlw	high _TX_POWER_1_DB_MW
 12781  00A2F6  0101               	movlb	1	; () banked
 12782  00A2F8  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12783                           
 12784                           ; BSR set to: 1
 12785  00A2FA  0012               	return	
 12786  00A2FC                     l20936:
 12787                           
 12788                           ; BSR set to: 1
 12789                           ;muta_messages.c: 104: return TX_POWER_N_2_DB_MW;
 12790  00A2FC  0EA3               	movlw	low _TX_POWER_N_2_DB_MW
 12791  00A2FE  0101               	movlb	1	; () banked
 12792  00A300  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12793  00A302  0E21               	movlw	high _TX_POWER_N_2_DB_MW
 12794  00A304  0101               	movlb	1	; () banked
 12795  00A306  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12796                           
 12797                           ; BSR set to: 1
 12798  00A308  0012               	return	
 12799  00A30A                     l20940:
 12800                           
 12801                           ; BSR set to: 1
 12802                           ;muta_messages.c: 106: return TX_POWER_N_5_DB_MW;
 12803  00A30A  0EA9               	movlw	low _TX_POWER_N_5_DB_MW
 12804  00A30C  0101               	movlb	1	; () banked
 12805  00A30E  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12806  00A310  0E21               	movlw	high _TX_POWER_N_5_DB_MW
 12807  00A312  0101               	movlb	1	; () banked
 12808  00A314  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12809                           
 12810                           ; BSR set to: 1
 12811  00A316  0012               	return	
 12812  00A318                     l20944:
 12813                           
 12814                           ; BSR set to: 1
 12815                           ;muta_messages.c: 108: return TX_POWER_N_8_DB_MW;
 12816  00A318  0E90               	movlw	low _TX_POWER_N_8_DB_MW
 12817  00A31A  0101               	movlb	1	; () banked
 12818  00A31C  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12819  00A31E  0E21               	movlw	high _TX_POWER_N_8_DB_MW
 12820  00A320  0101               	movlb	1	; () banked
 12821  00A322  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12822                           
 12823                           ; BSR set to: 1
 12824  00A324  0012               	return	
 12825  00A326                     l20948:
 12826                           
 12827                           ; BSR set to: 1
 12828                           ;muta_messages.c: 110: return TX_POWER_INVALID;
 12829  00A326  0E9D               	movlw	low _TX_POWER_INVALID
 12830  00A328  0101               	movlb	1	; () banked
 12831  00A32A  6F00               	movwf	?_dBm_to_mW& (0+255),b
 12832  00A32C  0E21               	movlw	high _TX_POWER_INVALID
 12833  00A32E  0101               	movlb	1	; () banked
 12834  00A330  6F01               	movwf	(?_dBm_to_mW+1)& (0+255),b
 12835                           
 12836                           ; BSR set to: 1
 12837                           ;muta_messages.c: 111: }
 12838                           
 12839                           ; BSR set to: 1
 12840  00A332  0012               	return	
 12841  00A334                     l20954:
 12842  00A334  0101               	movlb	1	; () banked
 12843  00A336  5102               	movf	dBm_to_mW@power& (0+255),w,b
 12844                           
 12845                           ; Switch size 1, requested type "space"
 12846                           ; Number of cases is 8, Range of values is 0 to 7
 12847                           ; switch strategies available:
 12848                           ; Name         Instructions Cycles
 12849                           ; simple_byte           25    13 (average)
 12850                           ;	Chosen strategy is simple_byte
 12851  00A338  0A00               	xorlw	0	; case 0
 12852  00A33A  B4D8               	btfsc	status,2,c
 12853  00A33C  D7BC               	goto	l20916
 12854  00A33E  0A01               	xorlw	1	; case 1
 12855  00A340  B4D8               	btfsc	status,2,c
 12856  00A342  D7C0               	goto	l20920
 12857  00A344  0A03               	xorlw	3	; case 2
 12858  00A346  B4D8               	btfsc	status,2,c
 12859  00A348  D7C4               	goto	l20924
 12860  00A34A  0A01               	xorlw	1	; case 3
 12861  00A34C  B4D8               	btfsc	status,2,c
 12862  00A34E  D7C8               	goto	l20928
 12863  00A350  0A07               	xorlw	7	; case 4
 12864  00A352  B4D8               	btfsc	status,2,c
 12865  00A354  D7CC               	goto	l20932
 12866  00A356  0A01               	xorlw	1	; case 5
 12867  00A358  B4D8               	btfsc	status,2,c
 12868  00A35A  D7D0               	goto	l20936
 12869  00A35C  0A03               	xorlw	3	; case 6
 12870  00A35E  B4D8               	btfsc	status,2,c
 12871  00A360  D7D4               	goto	l20940
 12872  00A362  0A01               	xorlw	1	; case 7
 12873  00A364  B4D8               	btfsc	status,2,c
 12874  00A366  D7D8               	goto	l20944
 12875  00A368  D7DE               	goto	l20948
 12876  00A36A                     __end_of_dBm_to_mW:
 12877                           	opt stack 0
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           indf0	equ	0xFEF
 12885                           postinc0	equ	0xFEE
 12886                           plusw0	equ	0xFEB
 12887                           fsr0h	equ	0xFEA
 12888                           fsr0l	equ	0xFE9
 12889                           wreg	equ	0xFE8
 12890                           postdec1	equ	0xFE5
 12891                           fsr1h	equ	0xFE2
 12892                           fsr1l	equ	0xFE1
 12893                           indf2	equ	0xFDF
 12894                           postinc2	equ	0xFDE
 12895                           postdec2	equ	0xFDD
 12896                           plusw2	equ	0xFDB
 12897                           fsr2h	equ	0xFDA
 12898                           fsr2l	equ	0xFD9
 12899                           status	equ	0xFD8
 12900                           
 12901 ;; *************** function _USBDeviceInit *****************
 12902 ;; Defined at:
 12903 ;;		line 298 in file "src/usb/usb_device.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;		None
 12906 ;; Auto vars:     Size  Location     Type
 12907 ;;  i               1    8[BANK1 ] unsigned char 
 12908 ;; Return value:  Size  Location     Type
 12909 ;;		None               void
 12910 ;; Registers used:
 12911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12918 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12920 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12921 ;;Total ram usage:        1 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; Hardware stack levels required when called:   17
 12924 ;; This function calls:
 12925 ;;		_memset
 12926 ;; This function is called by:
 12927 ;;		_main
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text34
 12932  007BAC                     __ptext34:
 12933                           	opt stack 0
 12934  007BAC                     _USBDeviceInit:
 12935                           	opt stack 13
 12936                           
 12937                           ;usb_device.c: 300: uint8_t i;
 12938                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 12939                           
 12940                           ; BSR set to: 1
 12941                           ;incstack = 0
 12942  007BAC  98A0               	bcf	4000,4,c	;volatile
 12943                           
 12944                           ;usb_device.c: 305: {UEIR = 0;};
 12945  007BAE  0E00               	movlw	0
 12946  007BB0  6E63               	movwf	3939,c	;volatile
 12947                           
 12948                           ;usb_device.c: 308: {UIR = 0;};
 12949  007BB2  0E00               	movlw	0
 12950  007BB4  6E62               	movwf	3938,c	;volatile
 12951                           
 12952                           ;usb_device.c: 311: UEP0 = 0;
 12953  007BB6  0E00               	movlw	0
 12954  007BB8  010F               	movlb	15	; () banked
 12955  007BBA  6F26               	movwf	38,b	;volatile
 12956                           
 12957                           ; BSR set to: 15
 12958                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 12959  007BBC  0E27               	movlw	39
 12960  007BBE  0101               	movlb	1	; () banked
 12961  007BC0  6F00               	movwf	memset@p1& (0+255),b
 12962  007BC2  0E0F               	movlw	15
 12963  007BC4  0101               	movlb	1	; () banked
 12964  007BC6  6F01               	movwf	(memset@p1+1)& (0+255),b
 12965  007BC8  0E00               	movlw	0
 12966  007BCA  0101               	movlb	1	; () banked
 12967  007BCC  6F03               	movwf	(memset@c+1)& (0+255),b
 12968  007BCE  0E00               	movlw	0
 12969  007BD0  6F02               	movwf	memset@c& (0+255),b
 12970  007BD2  0E00               	movlw	0
 12971  007BD4  0101               	movlb	1	; () banked
 12972  007BD6  6F05               	movwf	(memset@n+1)& (0+255),b
 12973  007BD8  0E01               	movlw	1
 12974  007BDA  6F04               	movwf	memset@n& (0+255),b
 12975  007BDC  ECB6  F05C         	call	_memset	;wreg free
 12976                           
 12977                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12978  007BE0  0E16               	movlw	22
 12979  007BE2  010F               	movlb	15	; () banked
 12980  007BE4  6F39               	movwf	57,b	;volatile
 12981                           
 12982                           ; BSR set to: 15
 12983  007BE6  0E9F               	movlw	159
 12984  007BE8  010F               	movlb	15	; () banked
 12985  007BEA  6F37               	movwf	55,b	;volatile
 12986                           
 12987                           ; BSR set to: 15
 12988  007BEC  0E7B               	movlw	123
 12989  007BEE  010F               	movlb	15	; () banked
 12990  007BF0  6F36               	movwf	54,b	;volatile
 12991                           
 12992                           ; BSR set to: 15
 12993                           ;usb_device.c: 318: ;
 12994                           ;usb_device.c: 321: ;
 12995                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12996  007BF2  0E00               	movlw	0
 12997  007BF4  0101               	movlb	1	; () banked
 12998  007BF6  6F08               	movwf	USBDeviceInit@i& (0+255),b
 12999  007BF8                     l20484:
 13000                           
 13001                           ; BSR set to: 1
 13002  007BF8  0E07               	movlw	7
 13003  007BFA  0101               	movlb	1	; () banked
 13004  007BFC  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 13005  007BFE  D001               	goto	l20488
 13006  007C00  D010               	goto	l1222
 13007  007C02                     l20488:
 13008                           
 13009                           ; BSR set to: 1
 13010                           ;usb_device.c: 325: {
 13011                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 13012  007C02  0101               	movlb	1	; () banked
 13013  007C04  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13014  007C06  0D04               	mullw	4
 13015  007C08  0E00               	movlw	0
 13016  007C0A  24F3               	addwf	prodl,w,c
 13017  007C0C  6ED9               	movwf	fsr2l,c
 13018  007C0E  0E0D               	movlw	13
 13019  007C10  20F4               	addwfc	prodh,w,c
 13020  007C12  6EDA               	movwf	fsr2h,c
 13021  007C14  6ADE               	clrf	postinc2,c
 13022  007C16  6ADE               	clrf	postinc2,c
 13023  007C18  6ADE               	clrf	postinc2,c
 13024  007C1A  6ADD               	clrf	postdec2,c
 13025                           
 13026                           ; BSR set to: 1
 13027  007C1C  0101               	movlb	1	; () banked
 13028  007C1E  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 13029  007C20  D7EB               	goto	l20484
 13030  007C22                     l1222:
 13031                           
 13032                           ; BSR set to: 1
 13033                           ;usb_device.c: 327: }
 13034                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 13035  007C22  8C65               	bsf	3941,6,c	;volatile
 13036                           
 13037                           ; BSR set to: 1
 13038                           ;usb_device.c: 333: UADDR = 0x00;
 13039  007C24  0E00               	movlw	0
 13040  007C26  010F               	movlb	15	; () banked
 13041  007C28  6F38               	movwf	56,b	;volatile
 13042                           
 13043                           ; BSR set to: 15
 13044                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 13045  007C2A  9865               	bcf	3941,4,c	;volatile
 13046                           
 13047                           ; BSR set to: 15
 13048                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 13049  007C2C  9C65               	bcf	3941,6,c	;volatile
 13050                           
 13051                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 13052  007C2E  D00C               	goto	l20508
 13053  007C30                     l20500:
 13054                           
 13055                           ;usb_device.c: 343: {
 13056                           ;usb_device.c: 344: (UIR &= 0xF7);
 13057  007C30  9662               	bcf	3938,3,c	;volatile
 13058                           
 13059                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 13060  007C32  0E00               	movlw	0
 13061  007C34  0100               	movlb	0	; () banked
 13062  007C36  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 13066  007C38  0E00               	movlw	0
 13067  007C3A  0100               	movlb	0	; () banked
 13068  007C3C  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 13072  007C3E  0E00               	movlw	0
 13073  007C40  0100               	movlb	0	; () banked
 13074  007C42  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 13075  007C44  0E00               	movlw	0
 13076  007C46  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 13077  007C48                     l20508:
 13078  007C48  B662               	btfsc	3938,3,c	;volatile
 13079  007C4A  D7F2               	goto	l20500
 13080                           
 13081                           ;usb_device.c: 349: }
 13082                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 13083  007C4C  0E01               	movlw	1
 13084  007C4E  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13085                           
 13086                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 13087  007C50  0E01               	movlw	1
 13088  007C52  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13089                           
 13090                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 13091  007C54  0E00               	movlw	0
 13092  007C56  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13093                           
 13094                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 13095  007C58  0E00               	movlw	0
 13096  007C5A  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13097                           
 13098                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 13099  007C5C  0E00               	movlw	0
 13100  007C5E  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 13101                           
 13102                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 13103  007C60  0E00               	movlw	0
 13104  007C62  0101               	movlb	1	; () banked
 13105  007C64  6F08               	movwf	USBDeviceInit@i& (0+255),b
 13106  007C66                     l20512:
 13107                           
 13108                           ; BSR set to: 1
 13109  007C66  0E01               	movlw	1
 13110  007C68  0101               	movlb	1	; () banked
 13111  007C6A  6508               	cpfsgt	USBDeviceInit@i& (0+255),b
 13112  007C6C  D001               	goto	l20516
 13113  007C6E  D033               	goto	l20522
 13114  007C70                     l20516:
 13115                           
 13116                           ; BSR set to: 1
 13117                           ;usb_device.c: 363: {
 13118                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 13119  007C70  0101               	movlb	1	; () banked
 13120  007C72  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13121  007C74  0D02               	mullw	2
 13122  007C76  0E8B               	movlw	low _pBDTEntryIn
 13123  007C78  24F3               	addwf	prodl,w,c
 13124  007C7A  6ED9               	movwf	fsr2l,c
 13125  007C7C  0E00               	movlw	high _pBDTEntryIn
 13126  007C7E  20F4               	addwfc	prodh,w,c
 13127  007C80  6EDA               	movwf	fsr2h,c
 13128  007C82  0E00               	movlw	0
 13129  007C84  6EDE               	movwf	postinc2,c
 13130  007C86  0E00               	movlw	0
 13131  007C88  6EDD               	movwf	postdec2,c
 13132                           
 13133                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 13134  007C8A  0101               	movlb	1	; () banked
 13135  007C8C  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13136  007C8E  0D02               	mullw	2
 13137  007C90  0E8F               	movlw	low _pBDTEntryOut
 13138  007C92  24F3               	addwf	prodl,w,c
 13139  007C94  6ED9               	movwf	fsr2l,c
 13140  007C96  0E00               	movlw	high _pBDTEntryOut
 13141  007C98  20F4               	addwfc	prodh,w,c
 13142  007C9A  6EDA               	movwf	fsr2h,c
 13143  007C9C  0E00               	movlw	0
 13144  007C9E  6EDE               	movwf	postinc2,c
 13145  007CA0  0E00               	movlw	0
 13146  007CA2  6EDD               	movwf	postdec2,c
 13147                           
 13148                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 13149  007CA4  0101               	movlb	1	; () banked
 13150  007CA6  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13151  007CA8  0D01               	mullw	1
 13152  007CAA  0E95               	movlw	low _ep_data_in
 13153  007CAC  24F3               	addwf	prodl,w,c
 13154  007CAE  6ED9               	movwf	fsr2l,c
 13155  007CB0  0E00               	movlw	high _ep_data_in
 13156  007CB2  20F4               	addwfc	prodh,w,c
 13157  007CB4  6EDA               	movwf	fsr2h,c
 13158  007CB6  0E00               	movlw	0
 13159  007CB8  6EDF               	movwf	indf2,c
 13160                           
 13161                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 13162  007CBA  0101               	movlb	1	; () banked
 13163  007CBC  5108               	movf	USBDeviceInit@i& (0+255),w,b
 13164  007CBE  0D01               	mullw	1
 13165  007CC0  0E97               	movlw	low _ep_data_out
 13166  007CC2  24F3               	addwf	prodl,w,c
 13167  007CC4  6ED9               	movwf	fsr2l,c
 13168  007CC6  0E00               	movlw	high _ep_data_out
 13169  007CC8  20F4               	addwfc	prodh,w,c
 13170  007CCA  6EDA               	movwf	fsr2h,c
 13171  007CCC  0E00               	movlw	0
 13172  007CCE  6EDF               	movwf	indf2,c
 13173                           
 13174                           ; BSR set to: 1
 13175  007CD0  0101               	movlb	1	; () banked
 13176  007CD2  2B08               	incf	USBDeviceInit@i& (0+255),f,b
 13177  007CD4  D7C8               	goto	l20512
 13178  007CD6                     l20522:
 13179                           
 13180                           ; BSR set to: 1
 13181                           ;usb_device.c: 368: }
 13182                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13183  007CD6  0E08               	movlw	8
 13184  007CD8  0100               	movlb	0	; () banked
 13185  007CDA  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 13186  007CDC  0E0D               	movlw	13
 13187  007CDE  0100               	movlb	0	; () banked
 13188  007CE0  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 13192  007CE2  0E16               	movlw	22
 13193  007CE4  010F               	movlb	15	; () banked
 13194  007CE6  6F26               	movwf	38,b	;volatile
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13198  007CE8  0E0D               	movlw	13
 13199  007CEA  010D               	movlb	13	; () banked
 13200  007CEC  6F03               	movwf	3,b	;volatile
 13201  007CEE  0E20               	movlw	32
 13202  007CF0  6F02               	movwf	2,b	;volatile
 13203                           
 13204                           ; BSR set to: 13
 13205                           ;usb_device.c: 376: BDT[0].CNT = 8;
 13206  007CF2  0E08               	movlw	8
 13207  007CF4  010D               	movlb	13	; () banked
 13208  007CF6  6F01               	movwf	1,b	;volatile
 13209                           
 13210                           ; BSR set to: 13
 13211                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 13212  007CF8  0E04               	movlw	4
 13213  007CFA  010D               	movlb	13	; () banked
 13214  007CFC  6F00               	movwf	0,b	;volatile
 13215                           
 13216                           ; BSR set to: 13
 13217                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 13218  007CFE  010D               	movlb	13	; () banked
 13219  007D00  8F00               	bsf	0,7,b	;volatile
 13220                           
 13221                           ; BSR set to: 13
 13222                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 13223  007D02  0E00               	movlw	0
 13224  007D04  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 13225                           
 13226                           ; BSR set to: 13
 13227                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 13228  007D06  0E00               	movlw	0
 13229  007D08  6E4B               	movwf	_USBDeviceState,c	;volatile
 13230                           
 13231                           ; BSR set to: 13
 13232  007D0A  0012               	return		;funcret
 13233  007D0C                     __end_of_USBDeviceInit:
 13234                           	opt stack 0
 13235                           tblptru	equ	0xFF8
 13236                           tblptrh	equ	0xFF7
 13237                           tblptrl	equ	0xFF6
 13238                           tablat	equ	0xFF5
 13239                           prodh	equ	0xFF4
 13240                           prodl	equ	0xFF3
 13241                           indf0	equ	0xFEF
 13242                           postinc0	equ	0xFEE
 13243                           plusw0	equ	0xFEB
 13244                           fsr0h	equ	0xFEA
 13245                           fsr0l	equ	0xFE9
 13246                           wreg	equ	0xFE8
 13247                           postdec1	equ	0xFE5
 13248                           fsr1h	equ	0xFE2
 13249                           fsr1l	equ	0xFE1
 13250                           indf2	equ	0xFDF
 13251                           postinc2	equ	0xFDE
 13252                           postdec2	equ	0xFDD
 13253                           plusw2	equ	0xFDB
 13254                           fsr2h	equ	0xFDA
 13255                           fsr2l	equ	0xFD9
 13256                           status	equ	0xFD8
 13257                           
 13258 ;; *************** function _memset *****************
 13259 ;; Defined at:
 13260 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;  p1              2    0[BANK1 ] PTR void 
 13263 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 13264 ;;  c               2    2[BANK1 ] int 
 13265 ;;  n               2    4[BANK1 ] unsigned int 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;  p               2    6[BANK1 ] PTR unsigned char 
 13268 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  2    0[BANK1 ] PTR void 
 13271 ;; Registers used:
 13272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13278 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13279 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13281 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13282 ;;Total ram usage:        8 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:   16
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_USBDeviceInit
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           	psect	text35
 13293  00B96C                     __ptext35:
 13294                           	opt stack 0
 13295  00B96C                     _memset:
 13296                           	opt stack 13
 13297                           
 13298                           ; BSR set to: 13
 13299                           ;incstack = 0
 13300  00B96C  C100  F106         	movff	memset@p1,memset@p
 13301  00B970  C101  F107         	movff	memset@p1+1,memset@p+1
 13302  00B974  D009               	goto	l19148
 13303  00B976                     l19144:
 13304  00B976  C106  FFD9         	movff	memset@p,fsr2l
 13305  00B97A  C107  FFDA         	movff	memset@p+1,fsr2h
 13306  00B97E  C102  FFDF         	movff	memset@c,indf2
 13307  00B982  0101               	movlb	1	; () banked
 13308  00B984  4B06               	infsnz	memset@p& (0+255),f,b
 13309  00B986  2B07               	incf	(memset@p+1)& (0+255),f,b
 13310  00B988                     l19148:
 13311  00B988  0101               	movlb	1	; () banked
 13312  00B98A  0704               	decf	memset@n& (0+255),f,b
 13313  00B98C  A0D8               	btfss	status,0,c
 13314  00B98E  0705               	decf	(memset@n+1)& (0+255),f,b
 13315  00B990  0101               	movlb	1	; () banked
 13316  00B992  2904               	incf	memset@n& (0+255),w,b
 13317  00B994  E1F0               	bnz	l19144
 13318  00B996  0101               	movlb	1	; () banked
 13319  00B998  2905               	incf	(memset@n+1)& (0+255),w,b
 13320  00B99A  B4D8               	btfsc	status,2,c
 13321  00B99C  0012               	return	
 13322  00B99E  D7EB               	goto	l19144
 13323  00B9A0                     __end_of_memset:
 13324                           	opt stack 0
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           indf0	equ	0xFEF
 13332                           postinc0	equ	0xFEE
 13333                           plusw0	equ	0xFEB
 13334                           fsr0h	equ	0xFEA
 13335                           fsr0l	equ	0xFE9
 13336                           wreg	equ	0xFE8
 13337                           postdec1	equ	0xFE5
 13338                           fsr1h	equ	0xFE2
 13339                           fsr1l	equ	0xFE1
 13340                           indf2	equ	0xFDF
 13341                           postinc2	equ	0xFDE
 13342                           postdec2	equ	0xFDD
 13343                           plusw2	equ	0xFDB
 13344                           fsr2h	equ	0xFDA
 13345                           fsr2l	equ	0xFD9
 13346                           status	equ	0xFD8
 13347                           
 13348 ;; *************** function _USBDeviceAttach *****************
 13349 ;; Defined at:
 13350 ;;		line 1352 in file "src/usb/usb_device.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;		None
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;		None               void
 13357 ;; Registers used:
 13358 ;;		wreg, status,2
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;Total ram usage:        0 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:   16
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_main
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           	psect	text36
 13379  00B88E                     __ptext36:
 13380                           	opt stack 0
 13381  00B88E                     _USBDeviceAttach:
 13382                           	opt stack 14
 13383                           
 13384                           ;usb_device.c: 1356: {
 13385                           ;usb_device.c: 1357: if(1 == 1)
 13386                           
 13387                           ; BSR set to: 1
 13388                           ;incstack = 0
 13389  00B88E  504B               	movf	_USBDeviceState,w,c	;volatile
 13390  00B890  A4D8               	btfss	status,2,c
 13391  00B892  0012               	return	
 13392                           
 13393                           ;usb_device.c: 1358: {
 13394                           ;usb_device.c: 1360: UCON = 0;
 13395  00B894  0E00               	movlw	0
 13396  00B896  6E65               	movwf	3941,c	;volatile
 13397                           
 13398                           ;usb_device.c: 1363: UIE = 0;
 13399  00B898  0E00               	movlw	0
 13400  00B89A  010F               	movlb	15	; () banked
 13401  00B89C  6F36               	movwf	54,b	;volatile
 13402                           
 13403                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 13404  00B89E  0E16               	movlw	22
 13405  00B8A0  010F               	movlb	15	; () banked
 13406  00B8A2  6F39               	movwf	57,b	;volatile
 13407  00B8A4  0E9F               	movlw	159
 13408  00B8A6  010F               	movlb	15	; () banked
 13409  00B8A8  6F37               	movwf	55,b	;volatile
 13410  00B8AA  0E7B               	movlw	123
 13411  00B8AC  010F               	movlb	15	; () banked
 13412  00B8AE  6F36               	movwf	54,b	;volatile
 13413                           
 13414                           ; BSR set to: 15
 13415                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 0; PIE2bits.USBIE = 1;INTCONbit
      +                          s.GIEL = 1;INTCONbits.GIEH = 1;};
 13416  00B8B0  8ED0               	bsf	4048,7,c	;volatile
 13417                           
 13418                           ; BSR set to: 15
 13419  00B8B2  98A2               	bcf	4002,4,c	;volatile
 13420                           
 13421                           ; BSR set to: 15
 13422  00B8B4  88A0               	bsf	4000,4,c	;volatile
 13423                           
 13424                           ; BSR set to: 15
 13425  00B8B6  8CF2               	bsf	intcon,6,c	;volatile
 13426                           
 13427                           ; BSR set to: 15
 13428  00B8B8  8EF2               	bsf	intcon,7,c	;volatile
 13429                           
 13430                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 13431  00B8BA  D001               	goto	l1283
 13432  00B8BC                     l1284:
 13433  00B8BC  8665               	bsf	3941,3,c	;volatile
 13434  00B8BE                     l1283:
 13435  00B8BE  A665               	btfss	3941,3,c	;volatile
 13436  00B8C0  D7FD               	goto	l1284
 13437                           
 13438                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 13439  00B8C2  0E01               	movlw	1
 13440  00B8C4  6E4B               	movwf	_USBDeviceState,c	;volatile
 13441  00B8C6  0012               	return	
 13442  00B8C8                     __end_of_USBDeviceAttach:
 13443                           	opt stack 0
 13444                           tblptru	equ	0xFF8
 13445                           tblptrh	equ	0xFF7
 13446                           tblptrl	equ	0xFF6
 13447                           tablat	equ	0xFF5
 13448                           prodh	equ	0xFF4
 13449                           prodl	equ	0xFF3
 13450                           intcon	equ	0xFF2
 13451                           indf0	equ	0xFEF
 13452                           postinc0	equ	0xFEE
 13453                           plusw0	equ	0xFEB
 13454                           fsr0h	equ	0xFEA
 13455                           fsr0l	equ	0xFE9
 13456                           wreg	equ	0xFE8
 13457                           postdec1	equ	0xFE5
 13458                           fsr1h	equ	0xFE2
 13459                           fsr1l	equ	0xFE1
 13460                           indf2	equ	0xFDF
 13461                           postinc2	equ	0xFDE
 13462                           postdec2	equ	0xFDD
 13463                           plusw2	equ	0xFDB
 13464                           fsr2h	equ	0xFDA
 13465                           fsr2l	equ	0xFD9
 13466                           status	equ	0xFD8
 13467                           
 13468 ;; *************** function _SYSTEM_Initialize *****************
 13469 ;; Defined at:
 13470 ;;		line 60 in file "src/18F27J53/system.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;		None
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;  pll_startup_    2    0[BANK1 ] unsigned int 
 13475 ;; Return value:  Size  Location     Type
 13476 ;;		None               void
 13477 ;; Registers used:
 13478 ;;		wreg, status,2, status,0, cstack
 13479 ;; Tracked objects:
 13480 ;;		On entry : 0/0
 13481 ;;		On exit  : 0/0
 13482 ;;		Unchanged: 0/0
 13483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13485 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13487 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13488 ;;Total ram usage:        2 bytes
 13489 ;; Hardware stack levels used:    1
 13490 ;; Hardware stack levels required when called:   17
 13491 ;; This function calls:
 13492 ;;		_RtccWrOn
 13493 ;; This function is called by:
 13494 ;;		_main
 13495 ;; This function uses a non-reentrant model
 13496 ;;
 13497                           
 13498                           	psect	text37
 13499  00861E                     __ptext37:
 13500                           	opt stack 0
 13501  00861E                     _SYSTEM_Initialize:
 13502                           	opt stack 13
 13503                           
 13504                           ;system.c: 64: unsigned int pll_startup_counter = 600;
 13505                           
 13506                           ;incstack = 0
 13507  00861E  0E02               	movlw	2
 13508  008620  0101               	movlb	1	; () banked
 13509  008622  6F01               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 13510  008624  0E58               	movlw	88
 13511  008626  6F00               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 13512                           
 13513                           ; BSR set to: 1
 13514                           ;system.c: 65: OSCTUNEbits.PLLEN = 1;
 13515  008628  8C9B               	bsf	3995,6,c	;volatile
 13516  00862A                     l19548:
 13517                           
 13518                           ; BSR set to: 1
 13519  00862A  0101               	movlb	1	; () banked
 13520  00862C  0700               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 13521  00862E  A0D8               	btfss	status,0,c
 13522  008630  0701               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 13523  008632  0101               	movlb	1	; () banked
 13524  008634  2900               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 13525  008636  E1F9               	bnz	l19548
 13526  008638  0101               	movlb	1	; () banked
 13527  00863A  2901               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 13528  00863C  A4D8               	btfss	status,2,c
 13529  00863E  D7F5               	goto	l19548
 13530                           
 13531                           ; BSR set to: 1
 13532                           ;system.c: 74: TRISA = 0;
 13533                           
 13534                           ; BSR set to: 1
 13535  008640  0E00               	movlw	0
 13536  008642  6E92               	movwf	3986,c	;volatile
 13537                           
 13538                           ;system.c: 75: TRISB = 0;
 13539  008644  0E00               	movlw	0
 13540  008646  6E93               	movwf	3987,c	;volatile
 13541                           
 13542                           ;system.c: 76: TRISC = 0;
 13543  008648  0E00               	movlw	0
 13544  00864A  6E94               	movwf	3988,c	;volatile
 13545                           
 13546                           ; BSR set to: 1
 13547                           ;system.c: 78: LATCbits.LATC0 = 1;
 13548  00864C  808B               	bsf	3979,0,c	;volatile
 13549                           
 13550                           ;system.c: 83: RTCCFG = 0x0;
 13551  00864E  0E00               	movlw	0
 13552  008650  010F               	movlb	15	; () banked
 13553  008652  6F3F               	movwf	63,b	;volatile
 13554                           
 13555                           ;system.c: 84: RTCCAL = 0x00;
 13556  008654  0E00               	movlw	0
 13557  008656  010F               	movlb	15	; () banked
 13558  008658  6F3E               	movwf	62,b	;volatile
 13559                           
 13560                           ; BSR set to: 15
 13561                           ;system.c: 93: (RTCCFGbits.RTCWREN = 0);
 13562  00865A  010F               	movlb	15	; () banked
 13563  00865C  9B3F               	bcf	63,5,b	;volatile
 13564                           
 13565                           ; BSR set to: 15
 13566                           ;system.c: 94: RtccWrOn();
 13567  00865E  ECAF  F05D         	call	_RtccWrOn	;wreg free
 13568                           
 13569                           ;system.c: 95: (RTCCFGbits.RTCEN=1);
 13570  008662  010F               	movlb	15	; () banked
 13571  008664  8F3F               	bsf	63,7,b	;volatile
 13572                           
 13573                           ; BSR set to: 15
 13574                           ;system.c: 96: (ALRMCFGbits.ALRMEN=1);
 13575  008666  010F               	movlb	15	; () banked
 13576  008668  8F47               	bsf	71,7,b	;volatile
 13577                           
 13578                           ; BSR set to: 15
 13579                           ;system.c: 97: RTCCFGbits.RTCPTR0 = 0;
 13580  00866A  010F               	movlb	15	; () banked
 13581  00866C  913F               	bcf	63,0,b	;volatile
 13582                           
 13583                           ; BSR set to: 15
 13584                           ;system.c: 98: RTCCFGbits.RTCPTR1 = 0;
 13585  00866E  010F               	movlb	15	; () banked
 13586  008670  933F               	bcf	63,1,b	;volatile
 13587                           
 13588                           ; BSR set to: 15
 13589                           ;system.c: 99: RTCVALHbits.RTCVALH = 0x00;
 13590  008672  0E00               	movlw	0
 13591  008674  010F               	movlb	15	; () banked
 13592  008676  6F3B               	movwf	59,b	;volatile
 13593                           
 13594                           ; BSR set to: 15
 13595                           ;system.c: 100: RTCVALLbits.RTCVALL = 0x00;
 13596  008678  0E00               	movlw	0
 13597  00867A  010F               	movlb	15	; () banked
 13598  00867C  6F3A               	movwf	58,b	;volatile
 13599                           
 13600                           ; BSR set to: 15
 13601                           ;system.c: 102: ALRMCFGbits.AMASK = 0b0011;
 13602  00867E  010F               	movlb	15	; () banked
 13603  008680  5147               	movf	71,w,b	;volatile
 13604  008682  0BC3               	andlw	-61
 13605  008684  090C               	iorlw	12
 13606  008686  6F47               	movwf	71,b	;volatile
 13607                           
 13608                           ; BSR set to: 15
 13609                           ;system.c: 104: ALRMCFGbits.CHIME = 1;
 13610  008688  010F               	movlb	15	; () banked
 13611  00868A  8D47               	bsf	71,6,b	;volatile
 13612                           
 13613                           ; BSR set to: 15
 13614                           ;system.c: 105: ALRMCFGbits.ALRMEN = 1;
 13615  00868C  010F               	movlb	15	; () banked
 13616  00868E  8F47               	bsf	71,7,b	;volatile
 13617                           
 13618                           ; BSR set to: 15
 13619                           ;system.c: 106: (RTCCFGbits.RTCWREN = 0);
 13620  008690  010F               	movlb	15	; () banked
 13621  008692  9B3F               	bcf	63,5,b	;volatile
 13622                           
 13623                           ; BSR set to: 15
 13624                           ;system.c: 109: IPR3bits.RTCCIP = 0;
 13625  008694  90A5               	bcf	4005,0,c	;volatile
 13626                           
 13627                           ; BSR set to: 15
 13628                           ;system.c: 110: PIR3bits.RTCCIF = 0;
 13629  008696  90A4               	bcf	4004,0,c	;volatile
 13630                           
 13631                           ; BSR set to: 15
 13632                           ;system.c: 111: PIE3bits.RTCCIE = 1;
 13633  008698  80A3               	bsf	4003,0,c	;volatile
 13634                           
 13635                           ; BSR set to: 15
 13636                           ;system.c: 117: EECON2 = 0x55;
 13637  00869A  0E55               	movlw	85
 13638  00869C  6EA7               	movwf	4007,c	;volatile
 13639                           
 13640                           ; BSR set to: 15
 13641                           ;system.c: 118: EECON2 = 0xAA;
 13642  00869E  0EAA               	movlw	170
 13643  0086A0  6EA7               	movwf	4007,c	;volatile
 13644                           
 13645                           ; BSR set to: 15
 13646                           ;system.c: 119: PPSCONbits.IOLOCK = 0;
 13647  0086A2  010E               	movlb	14	; () banked
 13648  0086A4  91BF               	bcf	191,0,b	;volatile
 13649                           
 13650                           ; BSR set to: 14
 13651                           ;system.c: 122: RPINR1 = 13;
 13652  0086A6  0E0D               	movlw	13
 13653  0086A8  010E               	movlb	14	; () banked
 13654  0086AA  6FE1               	movwf	225,b	;volatile
 13655                           
 13656                           ; BSR set to: 14
 13657                           ;system.c: 123: RPINR21 = 12;
 13658  0086AC  0E0C               	movlw	12
 13659  0086AE  010E               	movlb	14	; () banked
 13660  0086B0  6FFC               	movwf	252,b	;volatile
 13661                           
 13662                           ; BSR set to: 14
 13663                           ;system.c: 124: RPINR22 = 5;
 13664  0086B2  0E05               	movlw	5
 13665  0086B4  010E               	movlb	14	; () banked
 13666  0086B6  6FFD               	movwf	253,b	;volatile
 13667                           
 13668                           ; BSR set to: 14
 13669                           ;system.c: 127: RPOR4 = 10;
 13670  0086B8  0E0A               	movlw	10
 13671  0086BA  010E               	movlb	14	; () banked
 13672  0086BC  6FC4               	movwf	196,b	;volatile
 13673                           
 13674                           ; BSR set to: 14
 13675                           ;system.c: 128: RPOR5 = 11;
 13676  0086BE  0E0B               	movlw	11
 13677  0086C0  010E               	movlb	14	; () banked
 13678  0086C2  6FC5               	movwf	197,b	;volatile
 13679                           
 13680                           ; BSR set to: 14
 13681                           ;system.c: 130: RPOR17 = 14;
 13682  0086C4  0E0E               	movlw	14
 13683  0086C6  010E               	movlb	14	; () banked
 13684  0086C8  6FD1               	movwf	209,b	;volatile
 13685                           
 13686                           ; BSR set to: 14
 13687                           ;system.c: 136: EECON2 = 0x55;
 13688  0086CA  0E55               	movlw	85
 13689  0086CC  6EA7               	movwf	4007,c	;volatile
 13690                           
 13691                           ; BSR set to: 14
 13692                           ;system.c: 137: EECON2 = 0xAA;
 13693  0086CE  0EAA               	movlw	170
 13694  0086D0  6EA7               	movwf	4007,c	;volatile
 13695                           
 13696                           ; BSR set to: 14
 13697                           ;system.c: 138: PPSCONbits.IOLOCK = 1;
 13698  0086D2  010E               	movlb	14	; () banked
 13699  0086D4  81BF               	bsf	191,0,b	;volatile
 13700                           
 13701                           ; BSR set to: 14
 13702                           ;system.c: 147: ANCON0 = 0xFF;
 13703  0086D6  010F               	movlb	15	; () banked
 13704  0086D8  6948               	setf	72,b	;volatile
 13705                           
 13706                           ; BSR set to: 15
 13707                           ;system.c: 148: ANCON1 = 0x1F;
 13708  0086DA  0E1F               	movlw	31
 13709  0086DC  010F               	movlb	15	; () banked
 13710  0086DE  6F49               	movwf	73,b	;volatile
 13711                           
 13712                           ; BSR set to: 15
 13713                           ;system.c: 151: RTCEN = 0;
 13714  0086E0  010F               	movlb	15	; () banked
 13715  0086E2  9F3F               	bcf	63,7,b	;volatile
 13716                           
 13717                           ; BSR set to: 15
 13718                           ;system.c: 152: RTCOE = 0;
 13719  0086E4  010F               	movlb	15	; () banked
 13720  0086E6  953F               	bcf	63,2,b	;volatile
 13721                           
 13722                           ; BSR set to: 15
 13723                           ;system.c: 158: RCONbits.IPEN = 1;
 13724  0086E8  8ED0               	bsf	4048,7,c	;volatile
 13725                           
 13726                           ; BSR set to: 15
 13727                           ;system.c: 164: LATCbits.LATC6 = 1;
 13728  0086EA  8C8B               	bsf	3979,6,c	;volatile
 13729                           
 13730                           ; BSR set to: 15
 13731                           ;system.c: 165: LATBbits.LATB3 = 1;
 13732  0086EC  868A               	bsf	3978,3,c	;volatile
 13733                           
 13734                           ; BSR set to: 15
 13735                           ;system.c: 167: TRISCbits.TRISC6 = 0;
 13736  0086EE  9C94               	bcf	3988,6,c	;volatile
 13737                           
 13738                           ; BSR set to: 15
 13739                           ;system.c: 168: TRISBbits.TRISB3 = 0;
 13740  0086F0  9693               	bcf	3987,3,c	;volatile
 13741                           
 13742                           ; BSR set to: 15
 13743                           ;system.c: 171: TRISBbits.TRISB0 = 1;
 13744  0086F2  8093               	bsf	3987,0,c	;volatile
 13745                           
 13746                           ; BSR set to: 15
 13747                           ;system.c: 172: TRISCbits.TRISC2 = 1;
 13748  0086F4  8494               	bsf	3988,2,c	;volatile
 13749                           
 13750                           ; BSR set to: 15
 13751                           ;system.c: 175: INTCON2bits.INTEDG1 = 1;
 13752  0086F6  8AF1               	bsf	intcon2,5,c	;volatile
 13753                           
 13754                           ; BSR set to: 15
 13755                           ;system.c: 178: INTCON2bits.INTEDG0 = 1;
 13756  0086F8  8CF1               	bsf	intcon2,6,c	;volatile
 13757                           
 13758                           ; BSR set to: 15
 13759                           ;system.c: 180: INTCONbits.INT0IF = 0;
 13760  0086FA  92F2               	bcf	intcon,1,c	;volatile
 13761                           
 13762                           ; BSR set to: 15
 13763                           ;system.c: 181: INTCONbits.INT0IE = 1;
 13764  0086FC  88F2               	bsf	intcon,4,c	;volatile
 13765                           
 13766                           ; BSR set to: 15
 13767                           ;system.c: 183: INTCON3bits.INT1IF = 0;
 13768  0086FE  90F0               	bcf	intcon3,0,c	;volatile
 13769                           
 13770                           ; BSR set to: 15
 13771                           ;system.c: 184: INTCON3bits.INT1IP = 1;
 13772  008700  8CF0               	bsf	intcon3,6,c	;volatile
 13773                           
 13774                           ; BSR set to: 15
 13775                           ;system.c: 185: INTCON3bits.INT1IE = 1;
 13776  008702  86F0               	bsf	intcon3,3,c	;volatile
 13777                           
 13778                           ; BSR set to: 15
 13779                           ;system.c: 191: TRISCbits.TRISC1 = 1;
 13780  008704  8294               	bsf	3988,1,c	;volatile
 13781                           
 13782                           ; BSR set to: 15
 13783                           ;system.c: 192: TRISBbits.TRISB1 = 0;
 13784  008706  9293               	bcf	3987,1,c	;volatile
 13785                           
 13786                           ; BSR set to: 15
 13787                           ;system.c: 193: TRISBbits.TRISB2 = 0;
 13788  008708  9493               	bcf	3987,2,c	;volatile
 13789                           
 13790                           ; BSR set to: 15
 13791                           ;system.c: 195: SSP2STAT = 0xC0;
 13792  00870A  0EC0               	movlw	192
 13793  00870C  6E73               	movwf	3955,c	;volatile
 13794                           
 13795                           ; BSR set to: 15
 13796                           ;system.c: 196: SSP2CON1 = 0x21;
 13797  00870E  0E21               	movlw	33
 13798  008710  6E72               	movwf	3954,c	;volatile
 13799                           
 13800                           ; BSR set to: 15
 13801                           ;system.c: 199: LATAbits.LATA5 = 0;
 13802  008712  9A89               	bcf	3977,5,c	;volatile
 13803                           
 13804                           ; BSR set to: 15
 13805                           ;system.c: 200: TRISAbits.TRISA5 = 1;
 13806  008714  8A92               	bsf	3986,5,c	;volatile
 13807                           
 13808                           ; BSR set to: 15
 13809                           ;system.c: 205: INTCONbits.GIEH = 1;
 13810  008716  8EF2               	bsf	intcon,7,c	;volatile
 13811                           
 13812                           ; BSR set to: 15
 13813                           ;system.c: 206: INTCONbits.GIEL = 1;
 13814  008718  8CF2               	bsf	intcon,6,c	;volatile
 13815                           
 13816                           ; BSR set to: 15
 13817                           ;system.c: 215: TRISCbits.TRISC6 = 1;
 13818  00871A  8C94               	bsf	3988,6,c	;volatile
 13819                           
 13820                           ; BSR set to: 15
 13821                           ;system.c: 220: CCPTMRS0 = 0x00;
 13822  00871C  0E00               	movlw	0
 13823  00871E  010F               	movlb	15	; () banked
 13824  008720  6F52               	movwf	82,b	;volatile
 13825                           
 13826                           ; BSR set to: 15
 13827                           ;system.c: 222: PR2 = 0xF9;
 13828  008722  0EF9               	movlw	249
 13829  008724  6ECB               	movwf	4043,c	;volatile
 13830                           
 13831                           ; BSR set to: 15
 13832                           ;system.c: 223: CCP1CONbits.DC1B = 0b00;
 13833  008726  0ECF               	movlw	-49
 13834  008728  16BA               	andwf	4026,f,c	;volatile
 13835                           
 13836                           ; BSR set to: 15
 13837                           ;system.c: 224: CCP1CONbits.CCP1M = 0b1100;
 13838  00872A  50BA               	movf	4026,w,c	;volatile
 13839  00872C  0BF0               	andlw	-16
 13840  00872E  090C               	iorlw	12
 13841  008730  6EBA               	movwf	4026,c	;volatile
 13842                           
 13843                           ; BSR set to: 15
 13844                           ;system.c: 225: CCPR1L = 0x00;
 13845  008732  0E00               	movlw	0
 13846  008734  6EBB               	movwf	4027,c	;volatile
 13847                           
 13848                           ; BSR set to: 15
 13849                           ;system.c: 227: T2CONbits.T2CKPS = 0b10;
 13850  008736  50CA               	movf	4042,w,c	;volatile
 13851  008738  0BFC               	andlw	-4
 13852  00873A  0902               	iorlw	2
 13853  00873C  6ECA               	movwf	4042,c	;volatile
 13854                           
 13855                           ; BSR set to: 15
 13856                           ;system.c: 228: T2CONbits.TMR2ON = 0b1;
 13857  00873E  84CA               	bsf	4042,2,c	;volatile
 13858                           
 13859                           ; BSR set to: 15
 13860                           ;system.c: 231: TRISCbits.TRISC6 = 0;
 13861  008740  9C94               	bcf	3988,6,c	;volatile
 13862                           
 13863                           ; BSR set to: 15
 13864                           ;system.c: 238: T4CONbits.T4OUTPS = 0b1111;
 13865  008742  8676               	bsf	3958,3,c	;volatile
 13866  008744  8876               	bsf	3958,4,c	;volatile
 13867  008746  8A76               	bsf	3958,5,c	;volatile
 13868  008748  8C76               	bsf	3958,6,c	;volatile
 13869                           
 13870                           ; BSR set to: 15
 13871                           ;system.c: 239: T4CONbits.T4CKPS = 0b11;
 13872  00874A  0E03               	movlw	3
 13873  00874C  1276               	iorwf	3958,f,c	;volatile
 13874                           
 13875                           ; BSR set to: 15
 13876                           ;system.c: 240: PR4 = 234;
 13877  00874E  0EEA               	movlw	234
 13878  008750  6E77               	movwf	3959,c	;volatile
 13879                           
 13880                           ; BSR set to: 15
 13881                           ;system.c: 241: IPR3bits.TMR4IP = 0;
 13882  008752  96A5               	bcf	4005,3,c	;volatile
 13883                           
 13884                           ; BSR set to: 15
 13885                           ;system.c: 242: PIR3bits.TMR4IF = 0;
 13886  008754  96A4               	bcf	4004,3,c	;volatile
 13887                           
 13888                           ; BSR set to: 15
 13889                           ;system.c: 243: PIE3bits.TMR4IE = 1;
 13890  008756  86A3               	bsf	4003,3,c	;volatile
 13891                           
 13892                           ; BSR set to: 15
 13893                           ;system.c: 244: T4CONbits.TMR4ON = 1;
 13894  008758  8476               	bsf	3958,2,c	;volatile
 13895                           
 13896                           ; BSR set to: 15
 13897  00875A  0012               	return		;funcret
 13898  00875C                     __end_of_SYSTEM_Initialize:
 13899                           	opt stack 0
 13900                           tblptru	equ	0xFF8
 13901                           tblptrh	equ	0xFF7
 13902                           tblptrl	equ	0xFF6
 13903                           tablat	equ	0xFF5
 13904                           prodh	equ	0xFF4
 13905                           prodl	equ	0xFF3
 13906                           intcon	equ	0xFF2
 13907                           intcon2	equ	0xFF1
 13908                           intcon3	equ	0xFF0
 13909                           indf0	equ	0xFEF
 13910                           postinc0	equ	0xFEE
 13911                           plusw0	equ	0xFEB
 13912                           fsr0h	equ	0xFEA
 13913                           fsr0l	equ	0xFE9
 13914                           wreg	equ	0xFE8
 13915                           postdec1	equ	0xFE5
 13916                           fsr1h	equ	0xFE2
 13917                           fsr1l	equ	0xFE1
 13918                           indf2	equ	0xFDF
 13919                           postinc2	equ	0xFDE
 13920                           postdec2	equ	0xFDD
 13921                           plusw2	equ	0xFDB
 13922                           fsr2h	equ	0xFDA
 13923                           fsr2l	equ	0xFD9
 13924                           status	equ	0xFD8
 13925                           
 13926 ;; *************** function _RtccWrOn *****************
 13927 ;; Defined at:
 13928 ;;		line 21 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\rtcc\RtccWrOn.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;		None
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  data            2    0        unsigned int 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;		None               void
 13935 ;; Registers used:
 13936 ;;		wreg, status,2
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;Total ram usage:        0 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; Hardware stack levels required when called:   16
 13949 ;; This function calls:
 13950 ;;		Nothing
 13951 ;; This function is called by:
 13952 ;;		_SYSTEM_Initialize
 13953 ;;		_update_variable
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text38
 13958  00BB5E                     __ptext38:
 13959                           	opt stack 0
 13960  00BB5E                     _RtccWrOn:
 13961                           	opt stack 13
 13962                           
 13963                           ; BSR set to: 15
 13964                           ;incstack = 0
 13965  00BB5E  9CF2               	bcf	intcon,6,c	;volatile
 13966  00BB60  0E55               	movlw	85
 13967  00BB62  6EA7               	movwf	4007,c	;volatile
 13968  00BB64  0EAA               	movlw	170
 13969  00BB66  6EA7               	movwf	4007,c	;volatile
 13970  00BB68  010F               	movlb	15	; () banked
 13971  00BB6A  8B3F               	bsf	63,5,b	;volatile
 13972                           
 13973                           ; BSR set to: 15
 13974  00BB6C  8CF2               	bsf	intcon,6,c	;volatile
 13975                           
 13976                           ; BSR set to: 15
 13977  00BB6E  0012               	return		;funcret
 13978  00BB70                     __end_of_RtccWrOn:
 13979                           	opt stack 0
 13980                           tblptru	equ	0xFF8
 13981                           tblptrh	equ	0xFF7
 13982                           tblptrl	equ	0xFF6
 13983                           tablat	equ	0xFF5
 13984                           prodh	equ	0xFF4
 13985                           prodl	equ	0xFF3
 13986                           intcon	equ	0xFF2
 13987                           intcon2	equ	0xFF1
 13988                           intcon3	equ	0xFF0
 13989                           indf0	equ	0xFEF
 13990                           postinc0	equ	0xFEE
 13991                           plusw0	equ	0xFEB
 13992                           fsr0h	equ	0xFEA
 13993                           fsr0l	equ	0xFE9
 13994                           wreg	equ	0xFE8
 13995                           postdec1	equ	0xFE5
 13996                           fsr1h	equ	0xFE2
 13997                           fsr1l	equ	0xFE1
 13998                           indf2	equ	0xFDF
 13999                           postinc2	equ	0xFDE
 14000                           postdec2	equ	0xFDD
 14001                           plusw2	equ	0xFDB
 14002                           fsr2h	equ	0xFDA
 14003                           fsr2l	equ	0xFD9
 14004                           status	equ	0xFD8
 14005                           
 14006 ;; *************** function _MiApp_UnicastAddress *****************
 14007 ;; Defined at:
 14008 ;;		line 4566 in file "src/miwi/miwi_mesh.c"
 14009 ;; Parameters:    Size  Location     Type
 14010 ;;  DestAddress     2  125[BANK1 ] PTR unsigned char 
 14011 ;;		 -> do_UPDATE@shortaddress(2), do_POWER_TEST@shortaddress(2), do_NETWORK_REGISTER@shortaddress(2), main@shortaddress
      +(2), 
 14012 ;;		 -> openSocketInfo.ShortAddress1(2), openSocketInfo(18), tempShortAddress(2), 
 14013 ;;  PermanentAdd    1  127[BANK1 ] unsigned char 
 14014 ;;  SecEn           1  128[BANK1 ] unsigned char 
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  t2              4    4[BANK3 ] struct _MIWI_TICK
 14017 ;;  t1              4    0[BANK3 ] struct _MIWI_TICK
 14018 ;;  t2              4   12[BANK3 ] struct _MIWI_TICK
 14019 ;;  t1              4    8[BANK3 ] struct _MIWI_TICK
 14020 ;;  handle          1   18[BANK3 ] unsigned char 
 14021 ;;  i               1   17[BANK3 ] unsigned char 
 14022 ;;  MiWiFrameCon    1   16[BANK3 ] unsigned char 
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  1    wreg      unsigned char 
 14025 ;; Registers used:
 14026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14032 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14033 ;;      Locals:         0       0       0       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14034 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14035 ;;      Totals:         0       0      12       0      19       0       0       0       0       0       0       0       
      +0       0       0       0
 14036 ;;Total ram usage:       31 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; Hardware stack levels required when called:   27
 14039 ;; This function calls:
 14040 ;;		_MiApp_DiscardMessage
 14041 ;;		_MiApp_MessageAvailable
 14042 ;;		_MiMAC_SendPacket
 14043 ;;		_MiWi_TickGet
 14044 ;;		_RouteMessage
 14045 ;;		_SearchForLongAddress
 14046 ;; This function is called by:
 14047 ;;		_main
 14048 ;;		_OpenSocket
 14049 ;;		_do_NETWORK_REGISTER
 14050 ;;		_do_POWER_TEST
 14051 ;;		_do_PING
 14052 ;;		_do_UPDATE
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text39
 14057  005DBC                     __ptext39:
 14058                           	opt stack 0
 14059  005DBC                     _MiApp_UnicastAddress:
 14060                           	opt stack 3
 14061                           
 14062                           ;miwi_mesh.c: 4568: uint8_t handle;
 14063                           ;miwi_mesh.c: 4569: uint8_t i;
 14064                           ;miwi_mesh.c: 4570: uint8_t MiWiFrameControl;
 14065                           ;miwi_mesh.c: 4572: if( MiWiAckRequired && TxBuffer[11])
 14066                           
 14067                           ; BSR set to: 15
 14068                           ;incstack = 0
 14069  005DBC  0101               	movlb	1	; () banked
 14070  005DBE  51C1               	movf	_MiWiAckRequired& (0+255),w,b
 14071  005DC0  B4D8               	btfsc	status,2,c
 14072  005DC2  D00C               	goto	l20094
 14073                           
 14074                           ; BSR set to: 1
 14075  005DC4  0102               	movlb	2	; () banked
 14076  005DC6  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 14077  005DC8  B4D8               	btfsc	status,2,c
 14078  005DCA  D008               	goto	l20094
 14079                           
 14080                           ; BSR set to: 2
 14081                           ;miwi_mesh.c: 4573: {
 14082                           ;miwi_mesh.c: 4574: MiWiStateMachine.bits.MiWiAckInProgress = 1;
 14083  005DCC  0101               	movlb	1	; () banked
 14084  005DCE  87B5               	bsf	_MiWiStateMachine& (0+255),3,b
 14085                           
 14086                           ;miwi_mesh.c: 4575: AcknowledgementSeq = MiWiSeqNum;
 14087  005DD0  C1C3  F1F8         	movff	_MiWiSeqNum,_AcknowledgementSeq
 14088                           
 14089                           ; BSR set to: 1
 14090                           ;miwi_mesh.c: 4576: MiWiFrameControl = 0x06;
 14091  005DD4  0E06               	movlw	6
 14092  005DD6  0103               	movlb	3	; () banked
 14093  005DD8  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14094                           
 14095                           ;miwi_mesh.c: 4577: }
 14096  005DDA  D005               	goto	l1014
 14097  005DDC                     l20094:
 14098                           
 14099                           ;miwi_mesh.c: 4578: else
 14100                           ;miwi_mesh.c: 4579: {
 14101                           ;miwi_mesh.c: 4580: MiWiFrameControl = 0x02;
 14102  005DDC  0E02               	movlw	2
 14103  005DDE  0103               	movlb	3	; () banked
 14104  005DE0  6FD4               	movwf	MiApp_UnicastAddress@MiWiFrameControl& (0+255),b
 14105                           
 14106                           ; BSR set to: 3
 14107                           ;miwi_mesh.c: 4581: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14108  005DE2  0101               	movlb	1	; () banked
 14109  005DE4  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14110  005DE6                     l1014:
 14111                           
 14112                           ;miwi_mesh.c: 4582: }
 14113                           ;miwi_mesh.c: 4584: if( PermanentAddr )
 14114  005DE6  0101               	movlb	1	; () banked
 14115  005DE8  517F               	movf	MiApp_UnicastAddress@PermanentAddr& (0+255),w,b
 14116  005DEA  0101               	movlb	1	; () banked
 14117  005DEC  B4D8               	btfsc	status,2,c
 14118  005DEE  D160               	goto	l20218
 14119                           
 14120                           ; BSR set to: 1
 14121                           ;miwi_mesh.c: 4585: {
 14122                           ;miwi_mesh.c: 4586: for(i = 0; i < 4; i++)
 14123  005DF0  0E00               	movlw	0
 14124  005DF2  0103               	movlb	3	; () banked
 14125  005DF4  6FD5               	movwf	MiApp_UnicastAddress@i& (0+255),b
 14126  005DF6                     l20100:
 14127                           
 14128                           ; BSR set to: 3
 14129  005DF6  0E03               	movlw	3
 14130  005DF8  0103               	movlb	3	; () banked
 14131  005DFA  65D5               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 14132  005DFC  D001               	goto	l20104
 14133  005DFE  D019               	goto	l20110
 14134  005E00                     l20104:
 14135                           
 14136                           ; BSR set to: 3
 14137                           ;miwi_mesh.c: 4587: {
 14138                           ;miwi_mesh.c: 4588: tempLongAddress[i] = DestAddress[i];
 14139  005E00  0103               	movlb	3	; () banked
 14140  005E02  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14141  005E04  0D01               	mullw	1
 14142  005E06  50F3               	movf	prodl,w,c
 14143  005E08  0101               	movlb	1	; () banked
 14144  005E0A  257D               	addwf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14145  005E0C  6ED9               	movwf	fsr2l,c
 14146  005E0E  50F4               	movf	prodh,w,c
 14147  005E10  0101               	movlb	1	; () banked
 14148  005E12  217E               	addwfc	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14149  005E14  6EDA               	movwf	fsr2h,c
 14150  005E16  0103               	movlb	3	; () banked
 14151  005E18  51D5               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 14152  005E1A  0D01               	mullw	1
 14153  005E1C  0EA6               	movlw	low _tempLongAddress
 14154  005E1E  24F3               	addwf	prodl,w,c
 14155  005E20  6EE1               	movwf	fsr1l,c
 14156  005E22  0E01               	movlw	high _tempLongAddress
 14157  005E24  20F4               	addwfc	prodh,w,c
 14158  005E26  6EE2               	movwf	fsr1h,c
 14159  005E28  CFDF FFE7          	movff	indf2,indf1
 14160                           
 14161                           ; BSR set to: 3
 14162  005E2C  0103               	movlb	3	; () banked
 14163  005E2E  2BD5               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 14164  005E30  D7E2               	goto	l20100
 14165  005E32                     l20110:
 14166                           
 14167                           ; BSR set to: 3
 14168                           ;miwi_mesh.c: 4589: }
 14169                           ;miwi_mesh.c: 4590: if( (handle = SearchForLongAddress()) == 0xFF )
 14170  005E32  ECAF  F04E         	call	_SearchForLongAddress	;wreg free
 14171  005E36  0103               	movlb	3	; () banked
 14172  005E38  6FD6               	movwf	MiApp_UnicastAddress@handle& (0+255),b
 14173  005E3A  0103               	movlb	3	; () banked
 14174  005E3C  29D6               	incf	MiApp_UnicastAddress@handle& (0+255),w,b
 14175  005E3E  A4D8               	btfss	status,2,c
 14176  005E40  D03D               	goto	l20150
 14177  005E42                     l1019:
 14178                           
 14179                           ; BSR set to: 3
 14180                           ;miwi_mesh.c: 4594: TxBuffer[0] = defaultHops;
 14181  005E42  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 14182                           
 14183                           ; BSR set to: 3
 14184                           ;miwi_mesh.c: 4595: TxBuffer[1] = 0x02;
 14185  005E46  0E02               	movlw	2
 14186  005E48  0102               	movlb	2	; () banked
 14187  005E4A  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 14188                           
 14189                           ; BSR set to: 2
 14190                           ;miwi_mesh.c: 4596: TxBuffer[2] = 0xFF;
 14191  005E4C  0102               	movlb	2	; () banked
 14192  005E4E  69A8               	setf	(_TxBuffer+2)& (0+255),b
 14193                           
 14194                           ; BSR set to: 2
 14195                           ;miwi_mesh.c: 4597: TxBuffer[3] = 0xFF;
 14196  005E50  0102               	movlb	2	; () banked
 14197  005E52  69A9               	setf	(_TxBuffer+3)& (0+255),b
 14198                           
 14199                           ; BSR set to: 2
 14200                           ;miwi_mesh.c: 4598: TxBuffer[4] = 0xFF;
 14201  005E54  0102               	movlb	2	; () banked
 14202  005E56  69AA               	setf	(_TxBuffer+4)& (0+255),b
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;miwi_mesh.c: 4599: TxBuffer[5] = 0xFF;
 14206  005E58  0102               	movlb	2	; () banked
 14207  005E5A  69AB               	setf	(_TxBuffer+5)& (0+255),b
 14208                           
 14209                           ; BSR set to: 2
 14210                           ;miwi_mesh.c: 4600: TxBuffer[6] = myPANID.v[0];
 14211  005E5C  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14212                           
 14213                           ; BSR set to: 2
 14214                           ;miwi_mesh.c: 4601: TxBuffer[7] = myPANID.v[1];
 14215  005E60  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14216                           
 14217                           ; BSR set to: 2
 14218                           ;miwi_mesh.c: 4602: TxBuffer[8] = myShortAddress.v[0];
 14219  005E64  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14220                           
 14221                           ; BSR set to: 2
 14222                           ;miwi_mesh.c: 4603: TxBuffer[9] = myShortAddress.v[1];
 14223  005E68  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14224                           
 14225                           ; BSR set to: 2
 14226                           ;miwi_mesh.c: 4604: TxBuffer[10] = MiWiSeqNum++;
 14227  005E6C  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14228                           
 14229                           ; BSR set to: 2
 14230  005E70  0101               	movlb	1	; () banked
 14231  005E72  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14232                           
 14233                           ; BSR set to: 1
 14234                           ;miwi_mesh.c: 4617: MTP.flags.Val = 0;
 14235  005E74  0E00               	movlw	0
 14236  005E76  0101               	movlb	1	; () banked
 14237  005E78  6FAD               	movwf	_MTP& (0+255),b
 14238                           
 14239                           ; BSR set to: 1
 14240                           ;miwi_mesh.c: 4618: MTP.flags.bits.ackReq = 1;
 14241  005E7A  0101               	movlb	1	; () banked
 14242  005E7C  8BAD               	bsf	_MTP& (0+255),5,b
 14243                           
 14244                           ; BSR set to: 1
 14245                           ;miwi_mesh.c: 4619: MTP.flags.bits.secEn = SecEn;
 14246  005E7E  0101               	movlb	1	; () banked
 14247  005E80  B180               	btfsc	MiApp_UnicastAddress@SecEn& (0+255),0,b
 14248  005E82  D003               	bra	u23065
 14249  005E84  0101               	movlb	1	; () banked
 14250  005E86  97AD               	bcf	_MTP& (0+255),3,b
 14251  005E88  D002               	bra	u23066
 14252  005E8A                     u23065:
 14253  005E8A  0101               	movlb	1	; () banked
 14254  005E8C  87AD               	bsf	_MTP& (0+255),3,b
 14255  005E8E                     u23066:
 14256                           
 14257                           ; BSR set to: 1
 14258                           ;miwi_mesh.c: 4620: MTP.DestAddress = DestAddress;
 14259  005E8E  C17D  F1AE         	movff	MiApp_UnicastAddress@DestAddress,_MTP+1
 14260  005E92  C17E  F1AF         	movff	MiApp_UnicastAddress@DestAddress+1,_MTP+2
 14261                           
 14262                           ; BSR set to: 1
 14263                           ;miwi_mesh.c: 4626: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14264  005E96  0101               	movlb	1	; () banked
 14265  005E98  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14266                           
 14267                           ; BSR set to: 1
 14268                           ;miwi_mesh.c: 4628: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 14269  005E9A  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 14270  005E9E  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 14271  005EA2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 14272  005EA6  0EA6               	movlw	low _TxBuffer
 14273  005EA8  0101               	movlb	1	; () banked
 14274  005EAA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 14275  005EAC  0E02               	movlw	high _TxBuffer
 14276  005EAE  0101               	movlb	1	; () banked
 14277  005EB0  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 14278  005EB2  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 14279  005EB6  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 14280  005EBA  0012               	return	
 14281  005EBC                     l20150:
 14282                           
 14283                           ;miwi_mesh.c: 4630: else
 14284                           ;miwi_mesh.c: 4631: {
 14285                           ;miwi_mesh.c: 4632: if( ConnectionTable[handle].status.bits.shortAddressValid == 0 )
 14286  005EBC  0103               	movlb	3	; () banked
 14287  005EBE  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14288  005EC0  0D09               	mullw	9
 14289  005EC2  0E08               	movlw	8
 14290  005EC4  26F3               	addwf	prodl,f,c
 14291  005EC6  0E00               	movlw	0
 14292  005EC8  22F4               	addwfc	prodh,f,c
 14293  005ECA  0E00               	movlw	low _ConnectionTable
 14294  005ECC  24F3               	addwf	prodl,w,c
 14295  005ECE  6ED9               	movwf	fsr2l,c
 14296  005ED0  0E06               	movlw	high _ConnectionTable
 14297  005ED2  20F4               	addwfc	prodh,w,c
 14298  005ED4  6EDA               	movwf	fsr2h,c
 14299  005ED6  A6DF               	btfss	indf2,3,c
 14300  005ED8  D7B4               	goto	l1019
 14301                           
 14302                           ; BSR set to: 3
 14303                           ;miwi_mesh.c: 4635: }
 14304                           ;miwi_mesh.c: 4637: if( MiWiAckRequired )
 14305                           
 14306                           ; BSR set to: 3
 14307                           
 14308                           ; BSR set to: 3
 14309                           ;miwi_mesh.c: 4633: {
 14310                           ;miwi_mesh.c: 4634: goto DIRECT_LONG_ADDRESS;
 14311  005EDA  0101               	movlb	1	; () banked
 14312  005EDC  51C1               	movf	_MiWiAckRequired& (0+255),w,b
 14313  005EDE  B4D8               	btfsc	status,2,c
 14314  005EE0  D011               	goto	l20158
 14315                           
 14316                           ; BSR set to: 1
 14317                           ;miwi_mesh.c: 4638: {
 14318                           ;miwi_mesh.c: 4639: AcknowledgementAddr.Val = ConnectionTable[handle].AltAddress.Val;
 14319  005EE2  0103               	movlb	3	; () banked
 14320  005EE4  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14321  005EE6  0D09               	mullw	9
 14322  005EE8  0E02               	movlw	2
 14323  005EEA  26F3               	addwf	prodl,f,c
 14324  005EEC  0E00               	movlw	0
 14325  005EEE  22F4               	addwfc	prodh,f,c
 14326  005EF0  0E00               	movlw	low _ConnectionTable
 14327  005EF2  24F3               	addwf	prodl,w,c
 14328  005EF4  6ED9               	movwf	fsr2l,c
 14329  005EF6  0E06               	movlw	high _ConnectionTable
 14330  005EF8  20F4               	addwfc	prodh,w,c
 14331  005EFA  6EDA               	movwf	fsr2h,c
 14332  005EFC  CFDE F1B3          	movff	postinc2,_AcknowledgementAddr
 14333  005F00  CFDD F1B4          	movff	postdec2,_AcknowledgementAddr+1
 14334  005F04                     l20158:
 14335                           
 14336                           ;miwi_mesh.c: 4640: }
 14337                           ;miwi_mesh.c: 4642: TxBuffer[0] = 4;
 14338  005F04  0E04               	movlw	4
 14339  005F06  0102               	movlb	2	; () banked
 14340  005F08  6FA6               	movwf	_TxBuffer& (0+255),b
 14341                           
 14342                           ; BSR set to: 2
 14343                           ;miwi_mesh.c: 4643: TxBuffer[1] = MiWiFrameControl;
 14344  005F0A  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14345                           
 14346                           ; BSR set to: 2
 14347                           ;miwi_mesh.c: 4644: TxBuffer[2] = ConnectionTable[handle].PANID.v[0];
 14348  005F0E  0103               	movlb	3	; () banked
 14349  005F10  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14350  005F12  0D09               	mullw	9
 14351  005F14  0E00               	movlw	low _ConnectionTable
 14352  005F16  24F3               	addwf	prodl,w,c
 14353  005F18  6ED9               	movwf	fsr2l,c
 14354  005F1A  0E06               	movlw	high _ConnectionTable
 14355  005F1C  20F4               	addwfc	prodh,w,c
 14356  005F1E  6EDA               	movwf	fsr2h,c
 14357  005F20  50DF               	movf	indf2,w,c
 14358  005F22  0102               	movlb	2	; () banked
 14359  005F24  6FA8               	movwf	(_TxBuffer+2)& (0+255),b
 14360                           
 14361                           ; BSR set to: 2
 14362                           ;miwi_mesh.c: 4645: TxBuffer[3] = ConnectionTable[handle].PANID.v[1];
 14363  005F26  0103               	movlb	3	; () banked
 14364  005F28  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14365  005F2A  0D09               	mullw	9
 14366  005F2C  0E01               	movlw	1
 14367  005F2E  26F3               	addwf	prodl,f,c
 14368  005F30  0E00               	movlw	0
 14369  005F32  22F4               	addwfc	prodh,f,c
 14370  005F34  0E00               	movlw	low _ConnectionTable
 14371  005F36  24F3               	addwf	prodl,w,c
 14372  005F38  6ED9               	movwf	fsr2l,c
 14373  005F3A  0E06               	movlw	high _ConnectionTable
 14374  005F3C  20F4               	addwfc	prodh,w,c
 14375  005F3E  6EDA               	movwf	fsr2h,c
 14376  005F40  50DF               	movf	indf2,w,c
 14377  005F42  0102               	movlb	2	; () banked
 14378  005F44  6FA9               	movwf	(_TxBuffer+3)& (0+255),b
 14379                           
 14380                           ; BSR set to: 2
 14381                           ;miwi_mesh.c: 4646: TxBuffer[4] = ConnectionTable[handle].AltAddress.v[0];
 14382  005F46  0103               	movlb	3	; () banked
 14383  005F48  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14384  005F4A  0D09               	mullw	9
 14385  005F4C  0E02               	movlw	2
 14386  005F4E  26F3               	addwf	prodl,f,c
 14387  005F50  0E00               	movlw	0
 14388  005F52  22F4               	addwfc	prodh,f,c
 14389  005F54  0E00               	movlw	low _ConnectionTable
 14390  005F56  24F3               	addwf	prodl,w,c
 14391  005F58  6ED9               	movwf	fsr2l,c
 14392  005F5A  0E06               	movlw	high _ConnectionTable
 14393  005F5C  20F4               	addwfc	prodh,w,c
 14394  005F5E  6EDA               	movwf	fsr2h,c
 14395  005F60  50DF               	movf	indf2,w,c
 14396  005F62  0102               	movlb	2	; () banked
 14397  005F64  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 14398                           
 14399                           ; BSR set to: 2
 14400                           ;miwi_mesh.c: 4647: TxBuffer[5] = ConnectionTable[handle].AltAddress.v[1];
 14401  005F66  0103               	movlb	3	; () banked
 14402  005F68  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14403  005F6A  0D09               	mullw	9
 14404  005F6C  0E03               	movlw	3
 14405  005F6E  26F3               	addwf	prodl,f,c
 14406  005F70  0E00               	movlw	0
 14407  005F72  22F4               	addwfc	prodh,f,c
 14408  005F74  0E00               	movlw	low _ConnectionTable
 14409  005F76  24F3               	addwf	prodl,w,c
 14410  005F78  6ED9               	movwf	fsr2l,c
 14411  005F7A  0E06               	movlw	high _ConnectionTable
 14412  005F7C  20F4               	addwfc	prodh,w,c
 14413  005F7E  6EDA               	movwf	fsr2h,c
 14414  005F80  50DF               	movf	indf2,w,c
 14415  005F82  0102               	movlb	2	; () banked
 14416  005F84  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 14417                           
 14418                           ; BSR set to: 2
 14419                           ;miwi_mesh.c: 4648: TxBuffer[6] = myPANID.v[0];
 14420  005F86  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14421                           
 14422                           ; BSR set to: 2
 14423                           ;miwi_mesh.c: 4649: TxBuffer[7] = myPANID.v[1];
 14424  005F8A  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14425                           
 14426                           ; BSR set to: 2
 14427                           ;miwi_mesh.c: 4650: TxBuffer[8] = myShortAddress.v[0];
 14428  005F8E  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14429                           
 14430                           ; BSR set to: 2
 14431                           ;miwi_mesh.c: 4651: TxBuffer[9] = myShortAddress.v[1];
 14432  005F92  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14433                           
 14434                           ; BSR set to: 2
 14435                           ;miwi_mesh.c: 4652: TxBuffer[10] = MiWiSeqNum++;
 14436  005F96  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14437                           
 14438                           ; BSR set to: 2
 14439  005F9A  0101               	movlb	1	; () banked
 14440  005F9C  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14441                           
 14442                           ; BSR set to: 1
 14443                           ;miwi_mesh.c: 4654: if( 0 == RouteMessage(ConnectionTable[handle].PANID, ConnectionTable
      +                          [handle].AltAddress, SecEn) )
 14444  005F9E  0103               	movlb	3	; () banked
 14445  005FA0  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14446  005FA2  0D09               	mullw	9
 14447  005FA4  0E00               	movlw	low _ConnectionTable
 14448  005FA6  24F3               	addwf	prodl,w,c
 14449  005FA8  6ED9               	movwf	fsr2l,c
 14450  005FAA  0E06               	movlw	high _ConnectionTable
 14451  005FAC  20F4               	addwfc	prodh,w,c
 14452  005FAE  6EDA               	movwf	fsr2h,c
 14453  005FB0  CFDE F13D          	movff	postinc2,RouteMessage@PANID
 14454  005FB4  CFDD F13E          	movff	postdec2,RouteMessage@PANID+1
 14455  005FB8  0103               	movlb	3	; () banked
 14456  005FBA  51D6               	movf	MiApp_UnicastAddress@handle& (0+255),w,b
 14457  005FBC  0D09               	mullw	9
 14458  005FBE  0E02               	movlw	2
 14459  005FC0  26F3               	addwf	prodl,f,c
 14460  005FC2  0E00               	movlw	0
 14461  005FC4  22F4               	addwfc	prodh,f,c
 14462  005FC6  0E00               	movlw	low _ConnectionTable
 14463  005FC8  24F3               	addwf	prodl,w,c
 14464  005FCA  6ED9               	movwf	fsr2l,c
 14465  005FCC  0E06               	movlw	high _ConnectionTable
 14466  005FCE  20F4               	addwfc	prodh,w,c
 14467  005FD0  6EDA               	movwf	fsr2h,c
 14468  005FD2  CFDE F13F          	movff	postinc2,RouteMessage@ShortAddress
 14469  005FD6  CFDD F140          	movff	postdec2,RouteMessage@ShortAddress+1
 14470  005FDA  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 14471  005FDE  EC07  F024         	call	_RouteMessage	;wreg free
 14472  005FE2  0900               	iorlw	0
 14473  005FE4  A4D8               	btfss	status,2,c
 14474  005FE6  D004               	goto	l1024
 14475                           
 14476                           ;miwi_mesh.c: 4655: {
 14477                           ;miwi_mesh.c: 4656: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14478  005FE8  0101               	movlb	1	; () banked
 14479  005FEA  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14480                           
 14481                           ; BSR set to: 1
 14482                           ;miwi_mesh.c: 4657: return 0;
 14483  005FEC  0E00               	movlw	0
 14484                           
 14485                           ; BSR set to: 1
 14486  005FEE  0012               	return	
 14487  005FF0                     l1024:
 14488                           
 14489                           ;miwi_mesh.c: 4659: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14490  005FF0  0101               	movlb	1	; () banked
 14491  005FF2  A7B5               	btfss	_MiWiStateMachine& (0+255),3,b
 14492  005FF4  D05B               	goto	l20214
 14493                           
 14494                           ; BSR set to: 1
 14495                           ;miwi_mesh.c: 4660: {
 14496                           ;miwi_mesh.c: 4661: MIWI_TICK t1, t2;
 14497                           ;miwi_mesh.c: 4662: t1 = MiWi_TickGet();
 14498  005FF6  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 14499  005FFA  C100  F3C4         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1
 14500  005FFE  C101  F3C5         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1+1
 14501  006002  C102  F3C6         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1+2
 14502  006006  C103  F3C7         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1+3
 14503  00600A                     l20194:
 14504                           
 14505                           ;miwi_mesh.c: 4664: {
 14506                           ;miwi_mesh.c: 4665: if( MiApp_MessageAvailable())
 14507  00600A  ECB8  F05D         	call	_MiApp_MessageAvailable	;wreg free
 14508  00600E  0900               	iorlw	0
 14509  006010  A4D8               	btfss	status,2,c
 14510                           
 14511                           ;miwi_mesh.c: 4666: {
 14512                           ;miwi_mesh.c: 4667: MiApp_DiscardMessage();
 14513  006012  ECC1  F05D         	call	_MiApp_DiscardMessage	;wreg free
 14514                           
 14515                           ;miwi_mesh.c: 4668: }
 14516                           ;miwi_mesh.c: 4670: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14517  006016  0101               	movlb	1	; () banked
 14518  006018  B7B5               	btfsc	_MiWiStateMachine& (0+255),3,b
 14519  00601A  D002               	goto	l20204
 14520                           
 14521                           ; BSR set to: 1
 14522                           ;miwi_mesh.c: 4671: {
 14523                           ;miwi_mesh.c: 4672: return 1;
 14524  00601C  0E01               	movlw	1
 14525                           
 14526                           ; BSR set to: 1
 14527  00601E  0012               	return	
 14528  006020                     l20204:
 14529                           
 14530                           ; BSR set to: 1
 14531                           ;miwi_mesh.c: 4673: }
 14532                           ;miwi_mesh.c: 4674: t2 = MiWi_TickGet();
 14533  006020  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 14534  006024  C100  F3C8         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2
 14535  006028  C101  F3C9         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2+1
 14536  00602C  C102  F3CA         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2+2
 14537  006030  C103  F3CB         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2+3
 14538                           
 14539                           ;miwi_mesh.c: 4675: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 14540  006034  C3C4  F181         	movff	MiApp_UnicastAddress@t1,??_MiApp_UnicastAddress
 14541  006038  C3C5  F182         	movff	MiApp_UnicastAddress@t1+1,??_MiApp_UnicastAddress+1
 14542  00603C  C3C6  F183         	movff	MiApp_UnicastAddress@t1+2,??_MiApp_UnicastAddress+2
 14543  006040  C3C7  F184         	movff	MiApp_UnicastAddress@t1+3,??_MiApp_UnicastAddress+3
 14544  006044  0101               	movlb	1	; () banked
 14545  006046  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 14546  006048  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14547  00604A  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14548  00604C  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14549  00604E  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 14550  006050  0E00               	movlw	0
 14551  006052  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14552  006054  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14553  006056  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14554  006058  0103               	movlb	3	; () banked
 14555  00605A  51C8               	movf	MiApp_UnicastAddress@t2& (0+255),w,b
 14556  00605C  0101               	movlb	1	; () banked
 14557  00605E  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 14558  006060  0101               	movlb	1	; () banked
 14559  006062  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 14560  006064  0103               	movlb	3	; () banked
 14561  006066  51C9               	movf	(MiApp_UnicastAddress@t2+1)& (0+255),w,b
 14562  006068  0101               	movlb	1	; () banked
 14563  00606A  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 14564  00606C  0101               	movlb	1	; () banked
 14565  00606E  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 14566  006070  0103               	movlb	3	; () banked
 14567  006072  51CA               	movf	(MiApp_UnicastAddress@t2+2)& (0+255),w,b
 14568  006074  0101               	movlb	1	; () banked
 14569  006076  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 14570  006078  0101               	movlb	1	; () banked
 14571  00607A  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 14572  00607C  0103               	movlb	3	; () banked
 14573  00607E  51CB               	movf	(MiApp_UnicastAddress@t2+3)& (0+255),w,b
 14574  006080  0101               	movlb	1	; () banked
 14575  006082  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 14576  006084  0101               	movlb	1	; () banked
 14577  006086  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 14578  006088  0101               	movlb	1	; () banked
 14579  00608A  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 14580  00608C  E10B               	bnz	u23130
 14581  00608E  0E21               	movlw	33
 14582  006090  0101               	movlb	1	; () banked
 14583  006092  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 14584  006094  0EA1               	movlw	161
 14585  006096  0101               	movlb	1	; () banked
 14586  006098  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 14587  00609A  0E07               	movlw	7
 14588  00609C  0101               	movlb	1	; () banked
 14589  00609E  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 14590  0060A0  A0D8               	btfss	status,0,c
 14591  0060A2  D7B3               	goto	l20194
 14592  0060A4                     u23130:
 14593                           
 14594                           ; BSR set to: 1
 14595                           ;miwi_mesh.c: 4676: {
 14596                           ;miwi_mesh.c: 4677: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14597  0060A4  0101               	movlb	1	; () banked
 14598  0060A6  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14599                           
 14600                           ; BSR set to: 1
 14601                           ;miwi_mesh.c: 4678: return 0;
 14602  0060A8  0E00               	movlw	0
 14603                           
 14604                           ; BSR set to: 1
 14605  0060AA  0012               	return	
 14606  0060AC                     l20214:
 14607                           
 14608                           ; BSR set to: 1
 14609                           ;miwi_mesh.c: 4679: }
 14610                           ;miwi_mesh.c: 4680: }
 14611                           ;miwi_mesh.c: 4681: }
 14612                           ;miwi_mesh.c: 4682: return 1;
 14613  0060AC  0E01               	movlw	1
 14614                           
 14615                           ; BSR set to: 1
 14616  0060AE  0012               	return	
 14617  0060B0                     l20218:
 14618                           
 14619                           ;miwi_mesh.c: 4740: }
 14620                           ;miwi_mesh.c: 4741: }
 14621                           ;miwi_mesh.c: 4743: TxBuffer[0] = 4;
 14622  0060B0  0E04               	movlw	4
 14623  0060B2  0102               	movlb	2	; () banked
 14624  0060B4  6FA6               	movwf	_TxBuffer& (0+255),b
 14625                           
 14626                           ; BSR set to: 2
 14627                           ;miwi_mesh.c: 4744: TxBuffer[1] = MiWiFrameControl;
 14628  0060B6  C3D4  F2A7         	movff	MiApp_UnicastAddress@MiWiFrameControl,_TxBuffer+1
 14629                           
 14630                           ; BSR set to: 2
 14631                           ;miwi_mesh.c: 4745: TxBuffer[2] = myPANID.v[0];
 14632  0060BA  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 14633                           
 14634                           ; BSR set to: 2
 14635                           ;miwi_mesh.c: 4746: TxBuffer[3] = myPANID.v[1];
 14636  0060BE  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 14637                           
 14638                           ; BSR set to: 2
 14639                           ;miwi_mesh.c: 4747: TxBuffer[4] = DestAddress[0];
 14640  0060C2  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14641  0060C6  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14642  0060CA  50DF               	movf	indf2,w,c
 14643  0060CC  0102               	movlb	2	; () banked
 14644  0060CE  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 14645                           
 14646                           ; BSR set to: 2
 14647                           ;miwi_mesh.c: 4748: TxBuffer[5] = DestAddress[1];
 14648  0060D0  0101               	movlb	1	; () banked
 14649  0060D2  EE20 F001          	lfsr	2,1
 14650  0060D6  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14651  0060D8  26D9               	addwf	fsr2l,f,c
 14652  0060DA  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14653  0060DC  22DA               	addwfc	fsr2h,f,c
 14654  0060DE  50DF               	movf	indf2,w,c
 14655  0060E0  0102               	movlb	2	; () banked
 14656  0060E2  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 14657                           
 14658                           ; BSR set to: 2
 14659                           ;miwi_mesh.c: 4749: TxBuffer[6] = myPANID.v[0];
 14660  0060E4  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 14661                           
 14662                           ; BSR set to: 2
 14663                           ;miwi_mesh.c: 4750: TxBuffer[7] = myPANID.v[1];
 14664  0060E8  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 14665                           
 14666                           ; BSR set to: 2
 14667                           ;miwi_mesh.c: 4751: TxBuffer[8] = myShortAddress.v[0];
 14668  0060EC  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 14669                           
 14670                           ; BSR set to: 2
 14671                           ;miwi_mesh.c: 4752: TxBuffer[9] = myShortAddress.v[1];
 14672  0060F0  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 14673                           
 14674                           ; BSR set to: 2
 14675                           ;miwi_mesh.c: 4753: TxBuffer[10] = MiWiSeqNum++;
 14676  0060F4  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 14677                           
 14678                           ; BSR set to: 2
 14679  0060F8  0101               	movlb	1	; () banked
 14680  0060FA  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 14681                           
 14682                           ; BSR set to: 1
 14683                           ;miwi_mesh.c: 4755: AcknowledgementAddr.v[0] = DestAddress[0];
 14684  0060FC  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14685  006100  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14686  006104  50DF               	movf	indf2,w,c
 14687  006106  0101               	movlb	1	; () banked
 14688  006108  6FB3               	movwf	_AcknowledgementAddr& (0+255),b
 14689                           
 14690                           ; BSR set to: 1
 14691                           ;miwi_mesh.c: 4756: AcknowledgementAddr.v[1] = DestAddress[1];
 14692  00610A  0101               	movlb	1	; () banked
 14693  00610C  EE20 F001          	lfsr	2,1
 14694  006110  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14695  006112  26D9               	addwf	fsr2l,f,c
 14696  006114  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14697  006116  22DA               	addwfc	fsr2h,f,c
 14698  006118  50DF               	movf	indf2,w,c
 14699  00611A  0101               	movlb	1	; () banked
 14700  00611C  6FB4               	movwf	(_AcknowledgementAddr+1)& (0+255),b
 14701                           
 14702                           ; BSR set to: 1
 14703                           ;miwi_mesh.c: 4759: tempShortAddress.v[0] = DestAddress[0];
 14704  00611E  C17D  FFD9         	movff	MiApp_UnicastAddress@DestAddress,fsr2l
 14705  006122  C17E  FFDA         	movff	MiApp_UnicastAddress@DestAddress+1,fsr2h
 14706  006126  50DF               	movf	indf2,w,c
 14707  006128  0101               	movlb	1	; () banked
 14708  00612A  6FF4               	movwf	_tempShortAddress& (0+255),b
 14709                           
 14710                           ; BSR set to: 1
 14711                           ;miwi_mesh.c: 4760: tempShortAddress.v[1] = DestAddress[1];
 14712  00612C  0101               	movlb	1	; () banked
 14713  00612E  EE20 F001          	lfsr	2,1
 14714  006132  517D               	movf	MiApp_UnicastAddress@DestAddress& (0+255),w,b
 14715  006134  26D9               	addwf	fsr2l,f,c
 14716  006136  517E               	movf	(MiApp_UnicastAddress@DestAddress+1)& (0+255),w,b
 14717  006138  22DA               	addwfc	fsr2h,f,c
 14718  00613A  50DF               	movf	indf2,w,c
 14719  00613C  0101               	movlb	1	; () banked
 14720  00613E  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 14721                           
 14722                           ; BSR set to: 1
 14723                           ;miwi_mesh.c: 4761: if( 0 == RouteMessage(myPANID, tempShortAddress, SecEn) )
 14724  006140  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 14725  006144  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 14726  006148  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 14727  00614C  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 14728  006150  C180  F141         	movff	MiApp_UnicastAddress@SecEn,RouteMessage@SecEn
 14729  006154  EC07  F024         	call	_RouteMessage	;wreg free
 14730  006158  0900               	iorlw	0
 14731  00615A  A4D8               	btfss	status,2,c
 14732  00615C  D004               	goto	l1033
 14733                           
 14734                           ;miwi_mesh.c: 4762: {
 14735                           ;miwi_mesh.c: 4763: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14736  00615E  0101               	movlb	1	; () banked
 14737  006160  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14738                           
 14739                           ; BSR set to: 1
 14740                           ;miwi_mesh.c: 4764: return 0;
 14741  006162  0E00               	movlw	0
 14742                           
 14743                           ; BSR set to: 1
 14744  006164  0012               	return	
 14745  006166                     l1033:
 14746                           
 14747                           ;miwi_mesh.c: 4766: else if( MiWiStateMachine.bits.MiWiAckInProgress )
 14748  006166  0101               	movlb	1	; () banked
 14749  006168  A7B5               	btfss	_MiWiStateMachine& (0+255),3,b
 14750  00616A  D05B               	goto	l20282
 14751                           
 14752                           ; BSR set to: 1
 14753                           ;miwi_mesh.c: 4767: {
 14754                           ;miwi_mesh.c: 4768: MIWI_TICK t1, t2;
 14755                           ;miwi_mesh.c: 4769: t1 = MiWi_TickGet();
 14756  00616C  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 14757  006170  C100  F3CC         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t1_2749
 14758  006174  C101  F3CD         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t1_2749+1
 14759  006178  C102  F3CE         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t1_2749+2
 14760  00617C  C103  F3CF         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t1_2749+3
 14761  006180                     l20262:
 14762                           
 14763                           ;miwi_mesh.c: 4771: {
 14764                           ;miwi_mesh.c: 4772: if( MiApp_MessageAvailable())
 14765  006180  ECB8  F05D         	call	_MiApp_MessageAvailable	;wreg free
 14766  006184  0900               	iorlw	0
 14767  006186  A4D8               	btfss	status,2,c
 14768                           
 14769                           ;miwi_mesh.c: 4773: {
 14770                           ;miwi_mesh.c: 4774: MiApp_DiscardMessage();
 14771  006188  ECC1  F05D         	call	_MiApp_DiscardMessage	;wreg free
 14772                           
 14773                           ;miwi_mesh.c: 4775: }
 14774                           ;miwi_mesh.c: 4776: if( MiWiStateMachine.bits.MiWiAckInProgress == 0 )
 14775  00618C  0101               	movlb	1	; () banked
 14776  00618E  B7B5               	btfsc	_MiWiStateMachine& (0+255),3,b
 14777  006190  D002               	goto	l20272
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;miwi_mesh.c: 4777: {
 14781                           ;miwi_mesh.c: 4778: return 1;
 14782  006192  0E01               	movlw	1
 14783                           
 14784                           ; BSR set to: 1
 14785  006194  0012               	return	
 14786  006196                     l20272:
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;miwi_mesh.c: 4779: }
 14790                           ;miwi_mesh.c: 4780: t2 = MiWi_TickGet();
 14791  006196  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 14792  00619A  C100  F3D0         	movff	?_MiWi_TickGet,MiApp_UnicastAddress@t2_2760
 14793  00619E  C101  F3D1         	movff	?_MiWi_TickGet+1,MiApp_UnicastAddress@t2_2760+1
 14794  0061A2  C102  F3D2         	movff	?_MiWi_TickGet+2,MiApp_UnicastAddress@t2_2760+2
 14795  0061A6  C103  F3D3         	movff	?_MiWi_TickGet+3,MiApp_UnicastAddress@t2_2760+3
 14796                           
 14797                           ;miwi_mesh.c: 4781: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
 14798  0061AA  C3CC  F181         	movff	MiApp_UnicastAddress@t1_2749,??_MiApp_UnicastAddress
 14799  0061AE  C3CD  F182         	movff	MiApp_UnicastAddress@t1_2749+1,??_MiApp_UnicastAddress+1
 14800  0061B2  C3CE  F183         	movff	MiApp_UnicastAddress@t1_2749+2,??_MiApp_UnicastAddress+2
 14801  0061B6  C3CF  F184         	movff	MiApp_UnicastAddress@t1_2749+3,??_MiApp_UnicastAddress+3
 14802  0061BA  0101               	movlb	1	; () banked
 14803  0061BC  1F81               	comf	??_MiApp_UnicastAddress& (0+255),f,b
 14804  0061BE  1F82               	comf	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14805  0061C0  1F83               	comf	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14806  0061C2  1F84               	comf	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14807  0061C4  2B81               	incf	??_MiApp_UnicastAddress& (0+255),f,b
 14808  0061C6  0E00               	movlw	0
 14809  0061C8  2382               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),f,b
 14810  0061CA  2383               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),f,b
 14811  0061CC  2384               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),f,b
 14812  0061CE  0103               	movlb	3	; () banked
 14813  0061D0  51D0               	movf	MiApp_UnicastAddress@t2_2760& (0+255),w,b
 14814  0061D2  0101               	movlb	1	; () banked
 14815  0061D4  2581               	addwf	??_MiApp_UnicastAddress& (0+255),w,b
 14816  0061D6  0101               	movlb	1	; () banked
 14817  0061D8  6F85               	movwf	(??_MiApp_UnicastAddress+4)& (0+255),b
 14818  0061DA  0103               	movlb	3	; () banked
 14819  0061DC  51D1               	movf	(MiApp_UnicastAddress@t2_2760+1)& (0+255),w,b
 14820  0061DE  0101               	movlb	1	; () banked
 14821  0061E0  2182               	addwfc	(??_MiApp_UnicastAddress+1)& (0+255),w,b
 14822  0061E2  0101               	movlb	1	; () banked
 14823  0061E4  6F86               	movwf	(??_MiApp_UnicastAddress+5)& (0+255),b
 14824  0061E6  0103               	movlb	3	; () banked
 14825  0061E8  51D2               	movf	(MiApp_UnicastAddress@t2_2760+2)& (0+255),w,b
 14826  0061EA  0101               	movlb	1	; () banked
 14827  0061EC  2183               	addwfc	(??_MiApp_UnicastAddress+2)& (0+255),w,b
 14828  0061EE  0101               	movlb	1	; () banked
 14829  0061F0  6F87               	movwf	(??_MiApp_UnicastAddress+6)& (0+255),b
 14830  0061F2  0103               	movlb	3	; () banked
 14831  0061F4  51D3               	movf	(MiApp_UnicastAddress@t2_2760+3)& (0+255),w,b
 14832  0061F6  0101               	movlb	1	; () banked
 14833  0061F8  2184               	addwfc	(??_MiApp_UnicastAddress+3)& (0+255),w,b
 14834  0061FA  0101               	movlb	1	; () banked
 14835  0061FC  6F88               	movwf	(??_MiApp_UnicastAddress+7)& (0+255),b
 14836  0061FE  0101               	movlb	1	; () banked
 14837  006200  5188               	movf	(??_MiApp_UnicastAddress+7)& (0+255),w,b
 14838  006202  E10B               	bnz	u23180
 14839  006204  0E21               	movlw	33
 14840  006206  0101               	movlb	1	; () banked
 14841  006208  5D85               	subwf	(??_MiApp_UnicastAddress+4)& (0+255),w,b
 14842  00620A  0EA1               	movlw	161
 14843  00620C  0101               	movlb	1	; () banked
 14844  00620E  5986               	subwfb	(??_MiApp_UnicastAddress+5)& (0+255),w,b
 14845  006210  0E07               	movlw	7
 14846  006212  0101               	movlb	1	; () banked
 14847  006214  5987               	subwfb	(??_MiApp_UnicastAddress+6)& (0+255),w,b
 14848  006216  A0D8               	btfss	status,0,c
 14849  006218  D7B3               	goto	l20262
 14850  00621A                     u23180:
 14851                           
 14852                           ; BSR set to: 1
 14853                           ;miwi_mesh.c: 4782: {
 14854                           ;miwi_mesh.c: 4783: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 14855  00621A  0101               	movlb	1	; () banked
 14856  00621C  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 14857                           
 14858                           ; BSR set to: 1
 14859                           ;miwi_mesh.c: 4784: return 0;
 14860  00621E  0E00               	movlw	0
 14861                           
 14862                           ; BSR set to: 1
 14863  006220  0012               	return	
 14864  006222                     l20282:
 14865                           
 14866                           ; BSR set to: 1
 14867                           ;miwi_mesh.c: 4785: }
 14868                           ;miwi_mesh.c: 4786: }
 14869                           ;miwi_mesh.c: 4787: }
 14870                           ;miwi_mesh.c: 4788: return 1;
 14871  006222  0E01               	movlw	1
 14872  006224  0012               	return	
 14873  006226                     __end_of_MiApp_UnicastAddress:
 14874                           	opt stack 0
 14875                           tblptru	equ	0xFF8
 14876                           tblptrh	equ	0xFF7
 14877                           tblptrl	equ	0xFF6
 14878                           tablat	equ	0xFF5
 14879                           prodh	equ	0xFF4
 14880                           prodl	equ	0xFF3
 14881                           intcon	equ	0xFF2
 14882                           intcon2	equ	0xFF1
 14883                           intcon3	equ	0xFF0
 14884                           indf0	equ	0xFEF
 14885                           postinc0	equ	0xFEE
 14886                           plusw0	equ	0xFEB
 14887                           fsr0h	equ	0xFEA
 14888                           fsr0l	equ	0xFE9
 14889                           wreg	equ	0xFE8
 14890                           indf1	equ	0xFE7
 14891                           postdec1	equ	0xFE5
 14892                           fsr1h	equ	0xFE2
 14893                           fsr1l	equ	0xFE1
 14894                           indf2	equ	0xFDF
 14895                           postinc2	equ	0xFDE
 14896                           postdec2	equ	0xFDD
 14897                           plusw2	equ	0xFDB
 14898                           fsr2h	equ	0xFDA
 14899                           fsr2l	equ	0xFD9
 14900                           status	equ	0xFD8
 14901                           
 14902 ;; *************** function _MiApp_MessageAvailable *****************
 14903 ;; Defined at:
 14904 ;;		line 4237 in file "src/miwi/miwi_mesh.c"
 14905 ;; Parameters:    Size  Location     Type
 14906 ;;		None
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;		None
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      unsigned char 
 14911 ;; Registers used:
 14912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 0/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14922 ;;Total ram usage:        0 bytes
 14923 ;; Hardware stack levels used:    1
 14924 ;; Hardware stack levels required when called:   26
 14925 ;; This function calls:
 14926 ;;		_MiWiTasks
 14927 ;; This function is called by:
 14928 ;;		_MiApp_UnicastAddress
 14929 ;;		_main
 14930 ;;		_MiApp_SearchConnection
 14931 ;;		_MiApp_EstablishConnection
 14932 ;;		_MiApp_UnicastConnection
 14933 ;;		_do_NETWORK_REGISTER
 14934 ;;		_do_POWER_TEST
 14935 ;;		_do_PING
 14936 ;;		_do_UPDATE
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           	psect	text40
 14941  00BB70                     __ptext40:
 14942                           	opt stack 0
 14943  00BB70                     _MiApp_MessageAvailable:
 14944                           	opt stack 3
 14945                           
 14946                           ;miwi_mesh.c: 4239: MiWiTasks();
 14947                           
 14948                           ;incstack = 0
 14949  00BB70  ECE3  F011         	call	_MiWiTasks	;wreg free
 14950                           
 14951                           ;miwi_mesh.c: 4240: return MiWiStateMachine.bits.RxHasUserData;
 14952  00BB74  0101               	movlb	1	; () banked
 14953  00BB76  A5B5               	btfss	_MiWiStateMachine& (0+255),2,b
 14954  00BB78  D002               	goto	u21760
 14955  00BB7A  0E01               	movlw	1
 14956  00BB7C  0012               	return	
 14957  00BB7E                     u21760:
 14958  00BB7E  0E00               	movlw	0
 14959  00BB80  0012               	return	
 14960  00BB82                     __end_of_MiApp_MessageAvailable:
 14961                           	opt stack 0
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodh	equ	0xFF4
 14967                           prodl	equ	0xFF3
 14968                           intcon	equ	0xFF2
 14969                           intcon2	equ	0xFF1
 14970                           intcon3	equ	0xFF0
 14971                           indf0	equ	0xFEF
 14972                           postinc0	equ	0xFEE
 14973                           plusw0	equ	0xFEB
 14974                           fsr0h	equ	0xFEA
 14975                           fsr0l	equ	0xFE9
 14976                           wreg	equ	0xFE8
 14977                           indf1	equ	0xFE7
 14978                           postdec1	equ	0xFE5
 14979                           fsr1h	equ	0xFE2
 14980                           fsr1l	equ	0xFE1
 14981                           indf2	equ	0xFDF
 14982                           postinc2	equ	0xFDE
 14983                           postdec2	equ	0xFDD
 14984                           plusw2	equ	0xFDB
 14985                           fsr2h	equ	0xFDA
 14986                           fsr2l	equ	0xFD9
 14987                           status	equ	0xFD8
 14988                           
 14989 ;; *************** function _MiWiTasks *****************
 14990 ;; Defined at:
 14991 ;;		line 283 in file "src/miwi/miwi_mesh.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;		None
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  j               2  105[BANK1 ] unsigned int 
 14996 ;;  j               1  113[BANK1 ] unsigned char 
 14997 ;;  j               1  123[BANK1 ] unsigned char 
 14998 ;;  t2              4   90[BANK1 ] struct _MIWI_TICK
 14999 ;;  t1              4   86[BANK1 ] struct _MIWI_TICK
 15000 ;;  jitter          1   98[BANK1 ] unsigned char 
 15001 ;;  CoordAddress    2   94[BANK1 ] struct .
 15002 ;;  j               1  114[BANK1 ] unsigned char 
 15003 ;;  entry           1   97[BANK1 ] unsigned char 
 15004 ;;  CapacityByte    1  112[BANK1 ] struct .
 15005 ;;  cIndex          1  107[BANK1 ] unsigned char 
 15006 ;;  handle          1  119[BANK1 ] unsigned char 
 15007 ;;  associateSta    1   99[BANK1 ] unsigned char 
 15008 ;;  entry           1  122[BANK1 ] unsigned char 
 15009 ;;  coordinatorN    1  104[BANK1 ] unsigned char 
 15010 ;;  mask            1   96[BANK1 ] unsigned char 
 15011 ;;  rxIndex         1  111[BANK1 ] unsigned char 
 15012 ;;  sourceShortA    2  120[BANK1 ] struct .
 15013 ;;  sourcePANID     2  117[BANK1 ] struct .
 15014 ;;  destShortAdd    2  115[BANK1 ] struct .
 15015 ;;  destPANID       2  109[BANK1 ] struct .
 15016 ;;  j               1  108[BANK1 ] unsigned char 
 15017 ;;  t1              4  100[BANK1 ] struct _MIWI_TICK
 15018 ;;  t2              4   82[BANK1 ] struct _MIWI_TICK
 15019 ;;  i               1  124[BANK1 ] unsigned char 
 15020 ;; Return value:  Size  Location     Type
 15021 ;;		None               void
 15022 ;; Registers used:
 15023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15030 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15031 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15032 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15033 ;;Total ram usage:       51 bytes
 15034 ;; Hardware stack levels used:    1
 15035 ;; Hardware stack levels required when called:   25
 15036 ;; This function calls:
 15037 ;;		_AddNodeToNetworkTable
 15038 ;;		_BroadcastJitter
 15039 ;;		_MiMAC_DiscardPacket
 15040 ;;		_MiMAC_ReceivedPacket
 15041 ;;		_MiMAC_SendPacket
 15042 ;;		_MiMAC_SetAltAddress
 15043 ;;		_MiWi_TickGet
 15044 ;;		_RouteMessage
 15045 ;;		_SearchForLongAddress
 15046 ;;		_SearchForShortAddress
 15047 ;;		_SendBeacon
 15048 ;;		_SendMACPacket
 15049 ;;		_UnicastShortAddress
 15050 ;;		_findNextNetworkEntry
 15051 ;; This function is called by:
 15052 ;;		_MiApp_MessageAvailable
 15053 ;;		_main
 15054 ;; This function uses a non-reentrant model
 15055 ;;
 15056                           
 15057                           	psect	text41
 15058  0023C6                     __ptext41:
 15059                           	opt stack 0
 15060  0023C6                     _MiWiTasks:
 15061                           	opt stack 5
 15062                           
 15063                           ;miwi_mesh.c: 285: uint8_t i;
 15064                           ;miwi_mesh.c: 286: MIWI_TICK t1, t2;
 15065                           ;miwi_mesh.c: 288: if( MiMAC_ReceivedPacket() )
 15066                           
 15067                           ; BSR set to: 1
 15068                           ;incstack = 0
 15069  0023C6  EC82  F02C         	call	_MiMAC_ReceivedPacket	;wreg free
 15070  0023CA  0900               	iorlw	0
 15071  0023CC  B4D8               	btfsc	status,2,c
 15072  0023CE  EF88  F01D         	goto	l18674
 15073                           
 15074                           ;miwi_mesh.c: 289: {
 15075                           ;miwi_mesh.c: 290: if( MiWiStateMachine.bits.RxHasUserData )
 15076  0023D2  0101               	movlb	1	; () banked
 15077  0023D4  B5B5               	btfsc	_MiWiStateMachine& (0+255),2,b
 15078  0023D6  0012               	return	
 15079                           
 15080                           ; BSR set to: 1
 15081                           ;miwi_mesh.c: 293: }
 15082                           ;miwi_mesh.c: 295: rxMessage.flags.Val = 0;
 15083                           
 15084                           ; BSR set to: 1
 15085                           
 15086                           ; BSR set to: 1
 15087                           ;miwi_mesh.c: 291: {
 15088                           ;miwi_mesh.c: 292: return;
 15089  0023D8  0E00               	movlw	0
 15090  0023DA  0101               	movlb	1	; () banked
 15091  0023DC  6F90               	movwf	_rxMessage& (0+255),b
 15092                           
 15093                           ; BSR set to: 1
 15094                           ;miwi_mesh.c: 296: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
 15095  0023DE  0101               	movlb	1	; () banked
 15096  0023E0  A59A               	btfss	_MACRxPacket& (0+255),2,b
 15097  0023E2  D004               	goto	u19900
 15098  0023E4  0101               	movlb	1	; () banked
 15099  0023E6  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15100  0023E8  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15101  0023EA  D002               	goto	u19908
 15102  0023EC                     u19900:
 15103  0023EC  0101               	movlb	1	; () banked
 15104  0023EE  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15105  0023F0                     u19908:
 15106  0023F0  0101               	movlb	1	; () banked
 15107  0023F2  5190               	movf	_rxMessage& (0+255),w,b
 15108  0023F4  0101               	movlb	1	; () banked
 15109  0023F6  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15110  0023F8  0BFC               	andlw	-4
 15111  0023FA  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15112  0023FC  0101               	movlb	1	; () banked
 15113  0023FE  6F90               	movwf	_rxMessage& (0+255),b
 15114                           
 15115                           ; BSR set to: 1
 15116                           ;miwi_mesh.c: 297: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15117  002400  0101               	movlb	1	; () banked
 15118  002402  A79A               	btfss	_MACRxPacket& (0+255),3,b
 15119  002404  D003               	bra	u19915
 15120  002406  0101               	movlb	1	; () banked
 15121  002408  8790               	bsf	_rxMessage& (0+255),3,b
 15122  00240A  D002               	bra	u19917
 15123  00240C                     u19915:
 15124  00240C  0101               	movlb	1	; () banked
 15125  00240E  9790               	bcf	_rxMessage& (0+255),3,b
 15126  002410                     u19917:
 15127                           
 15128                           ; BSR set to: 1
 15129                           ;miwi_mesh.c: 298: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 
      +                          0x01) ? 1:0;
 15130  002410  0101               	movlb	1	; () banked
 15131  002412  519A               	movf	_MACRxPacket& (0+255),w,b
 15132  002414  0B03               	andlw	3
 15133  002416  06E8               	decf	wreg,f,c
 15134  002418  A4D8               	btfss	status,2,c
 15135  00241A  D004               	goto	u19920
 15136  00241C  0101               	movlb	1	; () banked
 15137  00241E  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15138  002420  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 15139  002422  D002               	goto	u19938
 15140  002424                     u19920:
 15141  002424  0101               	movlb	1	; () banked
 15142  002426  6B4A               	clrf	??_MiWiTasks& (0+255),b
 15143  002428                     u19938:
 15144  002428  0101               	movlb	1	; () banked
 15145  00242A  3B4A               	swapf	??_MiWiTasks& (0+255),f,b
 15146  00242C  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 15147  00242E  0101               	movlb	1	; () banked
 15148  002430  5190               	movf	_rxMessage& (0+255),w,b
 15149  002432  0101               	movlb	1	; () banked
 15150  002434  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15151  002436  0BDF               	andlw	-33
 15152  002438  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 15153  00243A  0101               	movlb	1	; () banked
 15154  00243C  6F90               	movwf	_rxMessage& (0+255),b
 15155                           
 15156                           ; BSR set to: 1
 15157                           ;miwi_mesh.c: 299: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
 15158  00243E  0101               	movlb	1	; () banked
 15159  002440  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 15160  002442  D003               	bra	u19945
 15161  002444  0101               	movlb	1	; () banked
 15162  002446  8D90               	bsf	_rxMessage& (0+255),6,b
 15163  002448  D002               	bra	u19947
 15164  00244A                     u19945:
 15165  00244A  0101               	movlb	1	; () banked
 15166  00244C  9D90               	bcf	_rxMessage& (0+255),6,b
 15167  00244E                     u19947:
 15168                           
 15169                           ; BSR set to: 1
 15170                           ;miwi_mesh.c: 300: if( MACRxPacket.flags.bits.sourcePrsnt )
 15171  00244E  0101               	movlb	1	; () banked
 15172  002450  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 15173  002452  D006               	goto	l17936
 15174                           
 15175                           ; BSR set to: 1
 15176                           ;miwi_mesh.c: 301: {
 15177                           ;miwi_mesh.c: 305: rxMessage.flags.bits.altSrcAddr = 1;
 15178  002454  0101               	movlb	1	; () banked
 15179  002456  8F90               	bsf	_rxMessage& (0+255),7,b
 15180                           
 15181                           ; BSR set to: 1
 15182                           ;miwi_mesh.c: 307: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 15183  002458  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 15184  00245C  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 15185  002460                     l17936:
 15186                           
 15187                           ; BSR set to: 1
 15188                           ;miwi_mesh.c: 308: }
 15189                           ;miwi_mesh.c: 312: rxMessage.PacketLQI = MACRxPacket.LQIValue;
 15190  002460  C1A1  F199         	movff	_MACRxPacket+7,_rxMessage+9
 15191                           
 15192                           ; BSR set to: 1
 15193                           ;miwi_mesh.c: 313: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
 15194  002464  C1A0  F198         	movff	_MACRxPacket+6,_rxMessage+8
 15195                           
 15196                           ; BSR set to: 1
 15197                           ;miwi_mesh.c: 315: MiWiStateMachine.bits.RxHasUserData = 0;
 15198  002468  0101               	movlb	1	; () banked
 15199  00246A  95B5               	bcf	_MiWiStateMachine& (0+255),2,b
 15200                           
 15201                           ;miwi_mesh.c: 318: switch(MACRxPacket.flags.bits.packetType)
 15202  00246C  EF76  F01D         	goto	l18670
 15203  002470                     l17942:
 15204                           
 15205                           ; BSR set to: 1
 15206                           ;miwi_mesh.c: 348: if( MACRxPacket.PayloadLen < 10 )
 15207  002470  0E0A               	movlw	10
 15208  002472  0101               	movlb	1	; () banked
 15209  002474  619F               	cpfslt	(_MACRxPacket+5)& (0+255),b
 15210  002476  D002               	goto	l17946
 15211  002478  EF84  F01D         	goto	l641
 15212  00247C                     l17946:
 15213                           
 15214                           ; BSR set to: 1
 15215                           ;miwi_mesh.c: 351: }
 15216                           ;miwi_mesh.c: 354: destPANID.v[0] = MACRxPacket.Payload[2];
 15217  00247C  0101               	movlb	1	; () banked
 15218  00247E  EE20 F002          	lfsr	2,2
 15219  002482  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15220  002484  26D9               	addwf	fsr2l,f,c
 15221  002486  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15222  002488  22DA               	addwfc	fsr2h,f,c
 15223  00248A  50DF               	movf	indf2,w,c
 15224  00248C  0101               	movlb	1	; () banked
 15225  00248E  6F6D               	movwf	MiWiTasks@destPANID& (0+255),b
 15226                           
 15227                           ;miwi_mesh.c: 355: destPANID.v[1] = MACRxPacket.Payload[3];
 15228  002490  0101               	movlb	1	; () banked
 15229  002492  EE20 F003          	lfsr	2,3
 15230  002496  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15231  002498  26D9               	addwf	fsr2l,f,c
 15232  00249A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15233  00249C  22DA               	addwfc	fsr2h,f,c
 15234  00249E  50DF               	movf	indf2,w,c
 15235  0024A0  0101               	movlb	1	; () banked
 15236  0024A2  6F6E               	movwf	(MiWiTasks@destPANID+1)& (0+255),b
 15237                           
 15238                           ;miwi_mesh.c: 356: destShortAddress.v[0] = MACRxPacket.Payload[4];
 15239  0024A4  0101               	movlb	1	; () banked
 15240  0024A6  EE20 F004          	lfsr	2,4
 15241  0024AA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15242  0024AC  26D9               	addwf	fsr2l,f,c
 15243  0024AE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15244  0024B0  22DA               	addwfc	fsr2h,f,c
 15245  0024B2  50DF               	movf	indf2,w,c
 15246  0024B4  0101               	movlb	1	; () banked
 15247  0024B6  6F73               	movwf	MiWiTasks@destShortAddress& (0+255),b
 15248                           
 15249                           ;miwi_mesh.c: 357: destShortAddress.v[1] = MACRxPacket.Payload[5];
 15250  0024B8  0101               	movlb	1	; () banked
 15251  0024BA  EE20 F005          	lfsr	2,5
 15252  0024BE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15253  0024C0  26D9               	addwf	fsr2l,f,c
 15254  0024C2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15255  0024C4  22DA               	addwfc	fsr2h,f,c
 15256  0024C6  50DF               	movf	indf2,w,c
 15257  0024C8  0101               	movlb	1	; () banked
 15258  0024CA  6F74               	movwf	(MiWiTasks@destShortAddress+1)& (0+255),b
 15259                           
 15260                           ;miwi_mesh.c: 358: sourcePANID.v[0] = MACRxPacket.Payload[6];
 15261  0024CC  0101               	movlb	1	; () banked
 15262  0024CE  EE20 F006          	lfsr	2,6
 15263  0024D2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15264  0024D4  26D9               	addwf	fsr2l,f,c
 15265  0024D6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15266  0024D8  22DA               	addwfc	fsr2h,f,c
 15267  0024DA  50DF               	movf	indf2,w,c
 15268  0024DC  0101               	movlb	1	; () banked
 15269  0024DE  6F75               	movwf	MiWiTasks@sourcePANID& (0+255),b
 15270                           
 15271                           ;miwi_mesh.c: 359: sourcePANID.v[1] = MACRxPacket.Payload[7];
 15272  0024E0  0101               	movlb	1	; () banked
 15273  0024E2  EE20 F007          	lfsr	2,7
 15274  0024E6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15275  0024E8  26D9               	addwf	fsr2l,f,c
 15276  0024EA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15277  0024EC  22DA               	addwfc	fsr2h,f,c
 15278  0024EE  50DF               	movf	indf2,w,c
 15279  0024F0  0101               	movlb	1	; () banked
 15280  0024F2  6F76               	movwf	(MiWiTasks@sourcePANID+1)& (0+255),b
 15281                           
 15282                           ;miwi_mesh.c: 360: sourceShortAddress.v[0] = MACRxPacket.Payload[8];
 15283  0024F4  0101               	movlb	1	; () banked
 15284  0024F6  EE20 F008          	lfsr	2,8
 15285  0024FA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15286  0024FC  26D9               	addwf	fsr2l,f,c
 15287  0024FE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15288  002500  22DA               	addwfc	fsr2h,f,c
 15289  002502  50DF               	movf	indf2,w,c
 15290  002504  0101               	movlb	1	; () banked
 15291  002506  6F78               	movwf	MiWiTasks@sourceShortAddress& (0+255),b
 15292                           
 15293                           ;miwi_mesh.c: 361: sourceShortAddress.v[1] = MACRxPacket.Payload[9];
 15294  002508  0101               	movlb	1	; () banked
 15295  00250A  EE20 F009          	lfsr	2,9
 15296  00250E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15297  002510  26D9               	addwf	fsr2l,f,c
 15298  002512  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15299  002514  22DA               	addwfc	fsr2h,f,c
 15300  002516  50DF               	movf	indf2,w,c
 15301  002518  0101               	movlb	1	; () banked
 15302  00251A  6F79               	movwf	(MiWiTasks@sourceShortAddress+1)& (0+255),b
 15303                           
 15304                           ; BSR set to: 1
 15305                           ;miwi_mesh.c: 363: rxMessage.flags.Val = 0;
 15306  00251C  0E00               	movlw	0
 15307  00251E  0101               	movlb	1	; () banked
 15308  002520  6F90               	movwf	_rxMessage& (0+255),b
 15309                           
 15310                           ; BSR set to: 1
 15311                           ;miwi_mesh.c: 364: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
 15312  002522  0101               	movlb	1	; () banked
 15313  002524  A79A               	btfss	_MACRxPacket& (0+255),3,b
 15314  002526  D003               	bra	u19975
 15315  002528  0101               	movlb	1	; () banked
 15316  00252A  8790               	bsf	_rxMessage& (0+255),3,b
 15317  00252C  D002               	bra	u19977
 15318  00252E                     u19975:
 15319  00252E  0101               	movlb	1	; () banked
 15320  002530  9790               	bcf	_rxMessage& (0+255),3,b
 15321  002532                     u19977:
 15322                           
 15323                           ; BSR set to: 1
 15324                           ;miwi_mesh.c: 366: if(rxMessage.flags.bits.broadcast || destShortAddress.Val == 0xFFFF)
 15325  002532  0101               	movlb	1	; () banked
 15326  002534  5190               	movf	_rxMessage& (0+255),w,b
 15327  002536  0B03               	andlw	3
 15328  002538  0900               	iorlw	0
 15329  00253A  A4D8               	btfss	status,2,c
 15330  00253C  D007               	goto	l17956
 15331                           
 15332                           ; BSR set to: 1
 15333  00253E  0101               	movlb	1	; () banked
 15334  002540  2973               	incf	MiWiTasks@destShortAddress& (0+255),w,b
 15335  002542  E103               	bnz	u19991
 15336  002544  0101               	movlb	1	; () banked
 15337  002546  2974               	incf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 15338  002548  A4D8               	btfss	status,2,c
 15339  00254A                     u19991:
 15340  00254A  D11C               	goto	l18030
 15341  00254C                     l17956:
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;miwi_mesh.c: 367: {
 15345                           ;miwi_mesh.c: 369: if( sourceShortAddress.Val == myShortAddress.Val &&
 15346                           ;miwi_mesh.c: 370: sourcePANID.Val == myPANID.Val )
 15347  00254C  0101               	movlb	1	; () banked
 15348  00254E  51F2               	movf	_myShortAddress& (0+255),w,b
 15349  002550  0101               	movlb	1	; () banked
 15350  002552  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 15351  002554  E112               	bnz	l17962
 15352  002556  0101               	movlb	1	; () banked
 15353  002558  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15354  00255A  0101               	movlb	1	; () banked
 15355  00255C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15356  00255E  A4D8               	btfss	status,2,c
 15357  002560  D00C               	goto	l17962
 15358                           
 15359                           ; BSR set to: 1
 15360  002562  0101               	movlb	1	; () banked
 15361  002564  51F0               	movf	_myPANID& (0+255),w,b
 15362  002566  0101               	movlb	1	; () banked
 15363  002568  1975               	xorwf	MiWiTasks@sourcePANID& (0+255),w,b
 15364  00256A  E107               	bnz	l17962
 15365  00256C  0101               	movlb	1	; () banked
 15366  00256E  51F1               	movf	(_myPANID+1)& (0+255),w,b
 15367  002570  0101               	movlb	1	; () banked
 15368  002572  1976               	xorwf	(MiWiTasks@sourcePANID+1)& (0+255),w,b
 15369  002574  B4D8               	btfsc	status,2,c
 15370  002576  EF84  F01D         	goto	l641
 15371  00257A                     l17962:
 15372                           
 15373                           ; BSR set to: 1
 15374                           ;miwi_mesh.c: 373: }
 15375                           ;miwi_mesh.c: 377: if(MACRxPacket.Payload[0]>1)
 15376  00257A  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15377  00257E  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15378  002582  0E01               	movlw	1
 15379  002584  64DF               	cpfsgt	indf2,c
 15380  002586  D041               	goto	l17982
 15381                           
 15382                           ; BSR set to: 1
 15383                           ;miwi_mesh.c: 378: {
 15384                           ;miwi_mesh.c: 379: MACRxPacket.Payload[0]--;
 15385  002588  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 15386  00258C  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 15387  002590  06DF               	decf	indf2,f,c
 15388                           
 15389                           ; BSR set to: 1
 15390                           ;miwi_mesh.c: 380: {TxData = 0;};
 15391  002592  0E00               	movlw	0
 15392  002594  0101               	movlb	1	; () banked
 15393  002596  6FC6               	movwf	_TxData& (0+255),b
 15394                           
 15395                           ; BSR set to: 1
 15396                           ;miwi_mesh.c: 381: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 15397  002598  0E00               	movlw	0
 15398  00259A  0101               	movlb	1	; () banked
 15399  00259C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15400  00259E  D01A               	goto	l17976
 15401  0025A0                     l17970:
 15402                           
 15403                           ; BSR set to: 1
 15404                           ;miwi_mesh.c: 382: {
 15405                           ;miwi_mesh.c: 383: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 15406  0025A0  0101               	movlb	1	; () banked
 15407  0025A2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15408  0025A4  0D01               	mullw	1
 15409  0025A6  50F3               	movf	prodl,w,c
 15410  0025A8  0101               	movlb	1	; () banked
 15411  0025AA  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 15412  0025AC  6ED9               	movwf	fsr2l,c
 15413  0025AE  50F4               	movf	prodh,w,c
 15414  0025B0  0101               	movlb	1	; () banked
 15415  0025B2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 15416  0025B4  6EDA               	movwf	fsr2h,c
 15417  0025B6  0101               	movlb	1	; () banked
 15418  0025B8  51C6               	movf	_TxData& (0+255),w,b
 15419  0025BA  0D01               	mullw	1
 15420  0025BC  0EA6               	movlw	low _TxBuffer
 15421  0025BE  24F3               	addwf	prodl,w,c
 15422  0025C0  6EE1               	movwf	fsr1l,c
 15423  0025C2  0E02               	movlw	high _TxBuffer
 15424  0025C4  20F4               	addwfc	prodh,w,c
 15425  0025C6  6EE2               	movwf	fsr1h,c
 15426  0025C8  CFDF FFE7          	movff	indf2,indf1
 15427                           
 15428                           ; BSR set to: 1
 15429  0025CC  0101               	movlb	1	; () banked
 15430  0025CE  2BC6               	incf	_TxData& (0+255),f,b
 15431                           
 15432                           ; BSR set to: 1
 15433  0025D0  0101               	movlb	1	; () banked
 15434  0025D2  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15435  0025D4                     l17976:
 15436                           
 15437                           ; BSR set to: 1
 15438  0025D4  0101               	movlb	1	; () banked
 15439  0025D6  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 15440  0025D8  0101               	movlb	1	; () banked
 15441  0025DA  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 15442  0025DC  A0D8               	btfss	status,0,c
 15443  0025DE  D7E0               	goto	l17970
 15444                           
 15445                           ; BSR set to: 1
 15446                           ;miwi_mesh.c: 384: }
 15447                           ;miwi_mesh.c: 386: MTP.flags.Val = MACRxPacket.flags.Val;
 15448  0025E0  C19A  F1AD         	movff	_MACRxPacket,_MTP
 15449                           
 15450                           ; BSR set to: 1
 15451                           ;miwi_mesh.c: 395: BroadcastJitter(20);
 15452  0025E4  0E14               	movlw	20
 15453  0025E6  ECB5  F051         	call	_BroadcastJitter
 15454                           
 15455                           ;miwi_mesh.c: 398: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15456  0025EA  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 15457  0025EE  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15458  0025F2  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15459  0025F6  0EA6               	movlw	low _TxBuffer
 15460  0025F8  0101               	movlb	1	; () banked
 15461  0025FA  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15462  0025FC  0E02               	movlw	high _TxBuffer
 15463  0025FE  0101               	movlb	1	; () banked
 15464  002600  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15465  002602  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15466  002606  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 15467  00260A                     l17982:
 15468                           
 15469                           ;miwi_mesh.c: 417: }
 15470                           ;miwi_mesh.c: 421: for(i = 0; i < 4; i++)
 15471  00260A  0E00               	movlw	0
 15472  00260C  0101               	movlb	1	; () banked
 15473  00260E  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15474  002610                     l17984:
 15475                           
 15476                           ; BSR set to: 1
 15477  002610  0E03               	movlw	3
 15478  002612  0101               	movlb	1	; () banked
 15479  002614  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15480  002616  D001               	goto	l17988
 15481  002618  D03D               	goto	l18000
 15482  00261A                     l17988:
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;miwi_mesh.c: 422: {
 15486                           ;miwi_mesh.c: 423: if( BroadcastRecords[i].RxCounter &&
 15487                           ;miwi_mesh.c: 424: BroadcastRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
 15488                           ;miwi_mesh.c: 425: BroadcastRecords[i].MiWiSeq == MACRxPacket.Payload[10] )
 15489  00261A  0101               	movlb	1	; () banked
 15490  00261C  517C               	movf	MiWiTasks@i& (0+255),w,b
 15491  00261E  0D08               	mullw	8
 15492  002620  0E03               	movlw	3
 15493  002622  26F3               	addwf	prodl,f,c
 15494  002624  0E00               	movlw	0
 15495  002626  22F4               	addwfc	prodh,f,c
 15496  002628  0E28               	movlw	low _BroadcastRecords
 15497  00262A  24F3               	addwf	prodl,w,c
 15498  00262C  6ED9               	movwf	fsr2l,c
 15499  00262E  0E02               	movlw	high _BroadcastRecords
 15500  002630  20F4               	addwfc	prodh,w,c
 15501  002632  6EDA               	movwf	fsr2h,c
 15502  002634  50DF               	movf	indf2,w,c
 15503  002636  B4D8               	btfsc	status,2,c
 15504  002638  D02A               	goto	l17996
 15505                           
 15506                           ; BSR set to: 1
 15507  00263A  0101               	movlb	1	; () banked
 15508  00263C  517C               	movf	MiWiTasks@i& (0+255),w,b
 15509  00263E  0D08               	mullw	8
 15510  002640  0E28               	movlw	low _BroadcastRecords
 15511  002642  24F3               	addwf	prodl,w,c
 15512  002644  6ED9               	movwf	fsr2l,c
 15513  002646  0E02               	movlw	high _BroadcastRecords
 15514  002648  20F4               	addwfc	prodh,w,c
 15515  00264A  6EDA               	movwf	fsr2h,c
 15516  00264C  0101               	movlb	1	; () banked
 15517  00264E  5178               	movf	MiWiTasks@sourceShortAddress& (0+255),w,b
 15518  002650  18DE               	xorwf	postinc2,w,c
 15519  002652  E11D               	bnz	l17996
 15520  002654  0101               	movlb	1	; () banked
 15521  002656  5179               	movf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15522  002658  18DE               	xorwf	postinc2,w,c
 15523  00265A  A4D8               	btfss	status,2,c
 15524  00265C  D018               	goto	l17996
 15525                           
 15526                           ; BSR set to: 1
 15527  00265E  0101               	movlb	1	; () banked
 15528  002660  EE20 F00A          	lfsr	2,10
 15529  002664  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15530  002666  26D9               	addwf	fsr2l,f,c
 15531  002668  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15532  00266A  22DA               	addwfc	fsr2h,f,c
 15533  00266C  0101               	movlb	1	; () banked
 15534  00266E  517C               	movf	MiWiTasks@i& (0+255),w,b
 15535  002670  0D08               	mullw	8
 15536  002672  0E02               	movlw	2
 15537  002674  26F3               	addwf	prodl,f,c
 15538  002676  0E00               	movlw	0
 15539  002678  22F4               	addwfc	prodh,f,c
 15540  00267A  0E28               	movlw	low _BroadcastRecords
 15541  00267C  24F3               	addwf	prodl,w,c
 15542  00267E  6EE1               	movwf	fsr1l,c
 15543  002680  0E02               	movlw	high _BroadcastRecords
 15544  002682  20F4               	addwfc	prodh,w,c
 15545  002684  6EE2               	movwf	fsr1h,c
 15546  002686  50DE               	movf	postinc2,w,c
 15547  002688  18E6               	xorwf	postinc1,w,c
 15548  00268A  B4D8               	btfsc	status,2,c
 15549  00268C  D003               	goto	l18000
 15550  00268E                     l17996:
 15551                           
 15552                           ; BSR set to: 1
 15553  00268E  0101               	movlb	1	; () banked
 15554  002690  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15555  002692  D7BE               	goto	l17984
 15556  002694                     l18000:
 15557                           
 15558                           ; BSR set to: 1
 15559                           ;miwi_mesh.c: 428: }
 15560                           ;miwi_mesh.c: 429: }
 15561                           ;miwi_mesh.c: 432: if( i < 4 )
 15562  002694  0E04               	movlw	4
 15563  002696  0101               	movlb	1	; () banked
 15564  002698  617C               	cpfslt	MiWiTasks@i& (0+255),b
 15565  00269A  D002               	goto	l18004
 15566  00269C  EF84  F01D         	goto	l641
 15567  0026A0                     l18004:
 15568                           
 15569                           ; BSR set to: 1
 15570                           ;miwi_mesh.c: 438: }
 15571                           ;miwi_mesh.c: 442: for(i = 0; i < 4; i++)
 15572  0026A0  0E00               	movlw	0
 15573  0026A2  0101               	movlb	1	; () banked
 15574  0026A4  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15575  0026A6                     l18006:
 15576                           
 15577                           ; BSR set to: 1
 15578  0026A6  0E03               	movlw	3
 15579  0026A8  0101               	movlb	1	; () banked
 15580  0026AA  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 15581  0026AC  D001               	goto	l18010
 15582  0026AE  D013               	goto	l18018
 15583  0026B0                     l18010:
 15584                           
 15585                           ; BSR set to: 1
 15586                           ;miwi_mesh.c: 443: {
 15587                           ;miwi_mesh.c: 444: if( BroadcastRecords[i].RxCounter == 0 )
 15588  0026B0  0101               	movlb	1	; () banked
 15589  0026B2  517C               	movf	MiWiTasks@i& (0+255),w,b
 15590  0026B4  0D08               	mullw	8
 15591  0026B6  0E03               	movlw	3
 15592  0026B8  26F3               	addwf	prodl,f,c
 15593  0026BA  0E00               	movlw	0
 15594  0026BC  22F4               	addwfc	prodh,f,c
 15595  0026BE  0E28               	movlw	low _BroadcastRecords
 15596  0026C0  24F3               	addwf	prodl,w,c
 15597  0026C2  6ED9               	movwf	fsr2l,c
 15598  0026C4  0E02               	movlw	high _BroadcastRecords
 15599  0026C6  20F4               	addwfc	prodh,w,c
 15600  0026C8  6EDA               	movwf	fsr2h,c
 15601  0026CA  50DF               	movf	indf2,w,c
 15602  0026CC  B4D8               	btfsc	status,2,c
 15603  0026CE  D003               	goto	l18018
 15604                           
 15605                           ; BSR set to: 1
 15606                           
 15607                           ; BSR set to: 1
 15608                           
 15609                           ; BSR set to: 1
 15610                           ;miwi_mesh.c: 445: {
 15611                           ;miwi_mesh.c: 446: break;
 15612  0026D0  0101               	movlb	1	; () banked
 15613  0026D2  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 15614  0026D4  D7E8               	goto	l18006
 15615  0026D6                     l18018:
 15616                           
 15617                           ; BSR set to: 1
 15618                           ;miwi_mesh.c: 447: }
 15619                           ;miwi_mesh.c: 448: }
 15620                           ;miwi_mesh.c: 450: if( i < 4 )
 15621  0026D6  0E04               	movlw	4
 15622  0026D8  0101               	movlb	1	; () banked
 15623  0026DA  617C               	cpfslt	MiWiTasks@i& (0+255),b
 15624  0026DC  D04D               	goto	l18028
 15625                           
 15626                           ; BSR set to: 1
 15627                           ;miwi_mesh.c: 451: {
 15628                           ;miwi_mesh.c: 452: BroadcastRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
 15629  0026DE  0101               	movlb	1	; () banked
 15630  0026E0  517C               	movf	MiWiTasks@i& (0+255),w,b
 15631  0026E2  0D08               	mullw	8
 15632  0026E4  0E28               	movlw	low _BroadcastRecords
 15633  0026E6  24F3               	addwf	prodl,w,c
 15634  0026E8  6ED9               	movwf	fsr2l,c
 15635  0026EA  0E02               	movlw	high _BroadcastRecords
 15636  0026EC  20F4               	addwfc	prodh,w,c
 15637  0026EE  6EDA               	movwf	fsr2h,c
 15638  0026F0  C178  FFDE         	movff	MiWiTasks@sourceShortAddress,postinc2
 15639  0026F4  C179  FFDD         	movff	MiWiTasks@sourceShortAddress+1,postdec2
 15640                           
 15641                           ; BSR set to: 1
 15642                           ;miwi_mesh.c: 453: BroadcastRecords[i].MiWiSeq = MACRxPacket.Payload[10];
 15643  0026F8  0101               	movlb	1	; () banked
 15644  0026FA  EE20 F00A          	lfsr	2,10
 15645  0026FE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15646  002700  26D9               	addwf	fsr2l,f,c
 15647  002702  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15648  002704  22DA               	addwfc	fsr2h,f,c
 15649  002706  0101               	movlb	1	; () banked
 15650  002708  517C               	movf	MiWiTasks@i& (0+255),w,b
 15651  00270A  0D08               	mullw	8
 15652  00270C  0E02               	movlw	2
 15653  00270E  26F3               	addwf	prodl,f,c
 15654  002710  0E00               	movlw	0
 15655  002712  22F4               	addwfc	prodh,f,c
 15656  002714  0E28               	movlw	low _BroadcastRecords
 15657  002716  24F3               	addwf	prodl,w,c
 15658  002718  6EE1               	movwf	fsr1l,c
 15659  00271A  0E02               	movlw	high _BroadcastRecords
 15660  00271C  20F4               	addwfc	prodh,w,c
 15661  00271E  6EE2               	movwf	fsr1h,c
 15662  002720  CFDF FFE7          	movff	indf2,indf1
 15663                           
 15664                           ; BSR set to: 1
 15665                           ;miwi_mesh.c: 454: BroadcastRecords[i].RxCounter = 2 + 1;
 15666  002724  0101               	movlb	1	; () banked
 15667  002726  517C               	movf	MiWiTasks@i& (0+255),w,b
 15668  002728  0D08               	mullw	8
 15669  00272A  0E03               	movlw	3
 15670  00272C  26F3               	addwf	prodl,f,c
 15671  00272E  0E00               	movlw	0
 15672  002730  22F4               	addwfc	prodh,f,c
 15673  002732  0E28               	movlw	low _BroadcastRecords
 15674  002734  24F3               	addwf	prodl,w,c
 15675  002736  6ED9               	movwf	fsr2l,c
 15676  002738  0E02               	movlw	high _BroadcastRecords
 15677  00273A  20F4               	addwfc	prodh,w,c
 15678  00273C  6EDA               	movwf	fsr2h,c
 15679  00273E  0E03               	movlw	3
 15680  002740  6EDF               	movwf	indf2,c
 15681                           
 15682                           ; BSR set to: 1
 15683                           ;miwi_mesh.c: 456: BroadcastRecords[i].StartTick = MiWi_TickGet();
 15684  002742  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 15685  002746  0101               	movlb	1	; () banked
 15686  002748  517C               	movf	MiWiTasks@i& (0+255),w,b
 15687  00274A  0D08               	mullw	8
 15688  00274C  0E04               	movlw	4
 15689  00274E  26F3               	addwf	prodl,f,c
 15690  002750  0E00               	movlw	0
 15691  002752  22F4               	addwfc	prodh,f,c
 15692  002754  0E28               	movlw	low _BroadcastRecords
 15693  002756  24F3               	addwf	prodl,w,c
 15694  002758  6ED9               	movwf	fsr2l,c
 15695  00275A  0E02               	movlw	high _BroadcastRecords
 15696  00275C  20F4               	addwfc	prodh,w,c
 15697  00275E  6EDA               	movwf	fsr2h,c
 15698  002760  0101               	movlb	1	; () banked
 15699  002762  C100  FFDE         	movff	?_MiWi_TickGet,postinc2
 15700  002766  0101               	movlb	1	; () banked
 15701  002768  C101  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 15702  00276C  0101               	movlb	1	; () banked
 15703  00276E  C102  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 15704  002772  0101               	movlb	1	; () banked
 15705  002774  C103  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 15706  002778                     l18028:
 15707                           
 15708                           ; BSR set to: 1
 15709                           ;miwi_mesh.c: 458: }
 15710                           ;miwi_mesh.c: 460: rxMessage.flags.bits.broadcast = 1;
 15711  002778  0101               	movlb	1	; () banked
 15712  00277A  5190               	movf	_rxMessage& (0+255),w,b
 15713  00277C  0BFC               	andlw	-4
 15714  00277E  0901               	iorlw	1
 15715  002780  6F90               	movwf	_rxMessage& (0+255),b
 15716                           
 15717                           ;miwi_mesh.c: 461: goto ThisPacketIsForMe;
 15718  002782  D092               	goto	l18084
 15719  002784                     l18030:
 15720                           
 15721                           ; BSR set to: 1
 15722                           ;miwi_mesh.c: 462: }
 15723                           ;miwi_mesh.c: 465: if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShort
      +                          Address.Val))
 15724  002784  0101               	movlb	1	; () banked
 15725  002786  51F0               	movf	_myPANID& (0+255),w,b
 15726  002788  0101               	movlb	1	; () banked
 15727  00278A  196D               	xorwf	MiWiTasks@destPANID& (0+255),w,b
 15728  00278C  E105               	bnz	u20141
 15729  00278E  0101               	movlb	1	; () banked
 15730  002790  51F1               	movf	(_myPANID+1)& (0+255),w,b
 15731  002792  0101               	movlb	1	; () banked
 15732  002794  196E               	xorwf	(MiWiTasks@destPANID+1)& (0+255),w,b
 15733  002796  A4D8               	btfss	status,2,c
 15734  002798                     u20141:
 15735  002798  D30F               	goto	l18264
 15736                           
 15737                           ; BSR set to: 1
 15738  00279A  0101               	movlb	1	; () banked
 15739  00279C  51F2               	movf	_myShortAddress& (0+255),w,b
 15740  00279E  0101               	movlb	1	; () banked
 15741  0027A0  1973               	xorwf	MiWiTasks@destShortAddress& (0+255),w,b
 15742  0027A2  E105               	bnz	u20151
 15743  0027A4  0101               	movlb	1	; () banked
 15744  0027A6  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15745  0027A8  0101               	movlb	1	; () banked
 15746  0027AA  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 15747  0027AC  A4D8               	btfss	status,2,c
 15748  0027AE                     u20151:
 15749  0027AE  D304               	goto	l18264
 15750                           
 15751                           ; BSR set to: 1
 15752                           ;miwi_mesh.c: 466: {
 15753                           ;miwi_mesh.c: 468: if(MACRxPacket.Payload[1] & 0x04)
 15754  0027B0  0101               	movlb	1	; () banked
 15755  0027B2  EE20 F001          	lfsr	2,1
 15756  0027B6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15757  0027B8  26D9               	addwf	fsr2l,f,c
 15758  0027BA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15759  0027BC  22DA               	addwfc	fsr2h,f,c
 15760  0027BE  0101               	movlb	1	; () banked
 15761  0027C0  A4DF               	btfss	indf2,2,c
 15762  0027C2  D072               	goto	l18084
 15763                           
 15764                           ; BSR set to: 1
 15765                           ;miwi_mesh.c: 469: {
 15766                           ;miwi_mesh.c: 470: TxBuffer[0] = defaultHops;
 15767  0027C4  C1F9  F2A6         	movff	_defaultHops,_TxBuffer
 15768                           
 15769                           ; BSR set to: 1
 15770                           ;miwi_mesh.c: 471: TxBuffer[1] = 0x02;
 15771  0027C8  0E02               	movlw	2
 15772  0027CA  0102               	movlb	2	; () banked
 15773  0027CC  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 15774                           
 15775                           ; BSR set to: 2
 15776                           ;miwi_mesh.c: 472: TxBuffer[2] = sourcePANID.v[0];
 15777  0027CE  C175  F2A8         	movff	MiWiTasks@sourcePANID,_TxBuffer+2
 15778                           
 15779                           ; BSR set to: 2
 15780                           ;miwi_mesh.c: 473: TxBuffer[3] = sourcePANID.v[1];
 15781  0027D2  C176  F2A9         	movff	MiWiTasks@sourcePANID+1,_TxBuffer+3
 15782                           
 15783                           ; BSR set to: 2
 15784                           ;miwi_mesh.c: 474: TxBuffer[4] = sourceShortAddress.v[0];
 15785  0027D6  C178  F2AA         	movff	MiWiTasks@sourceShortAddress,_TxBuffer+4
 15786                           
 15787                           ; BSR set to: 2
 15788                           ;miwi_mesh.c: 475: TxBuffer[5] = sourceShortAddress.v[1];
 15789  0027DA  C179  F2AB         	movff	MiWiTasks@sourceShortAddress+1,_TxBuffer+5
 15790                           
 15791                           ; BSR set to: 2
 15792                           ;miwi_mesh.c: 476: TxBuffer[6] = myPANID.v[0];
 15793  0027DE  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 15794                           
 15795                           ; BSR set to: 2
 15796                           ;miwi_mesh.c: 477: TxBuffer[7] = myPANID.v[1];
 15797  0027E2  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 15798                           
 15799                           ; BSR set to: 2
 15800                           ;miwi_mesh.c: 478: TxBuffer[8] = myShortAddress.v[0];
 15801  0027E6  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 15802                           
 15803                           ; BSR set to: 2
 15804                           ;miwi_mesh.c: 479: TxBuffer[9] = myShortAddress.v[1];
 15805  0027EA  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 15806                           
 15807                           ; BSR set to: 2
 15808                           ;miwi_mesh.c: 480: TxBuffer[10] = MACRxPacket.Payload[11-1];
 15809  0027EE  0101               	movlb	1	; () banked
 15810  0027F0  EE20 F00A          	lfsr	2,10
 15811  0027F4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15812  0027F6  26D9               	addwf	fsr2l,f,c
 15813  0027F8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15814  0027FA  22DA               	addwfc	fsr2h,f,c
 15815  0027FC  50DF               	movf	indf2,w,c
 15816  0027FE  0102               	movlb	2	; () banked
 15817  002800  6FB0               	movwf	(_TxBuffer+10)& (0+255),b
 15818                           
 15819                           ; BSR set to: 2
 15820                           ;miwi_mesh.c: 481: TxBuffer[11] = 0x00;
 15821  002802  0E00               	movlw	0
 15822  002804  0102               	movlb	2	; () banked
 15823  002806  6FB1               	movwf	(_TxBuffer+11)& (0+255),b
 15824                           
 15825                           ; BSR set to: 2
 15826                           ;miwi_mesh.c: 482: TxBuffer[12] = 0x30;
 15827  002808  0E30               	movlw	48
 15828  00280A  0102               	movlb	2	; () banked
 15829  00280C  6FB2               	movwf	(_TxBuffer+12)& (0+255),b
 15830                           
 15831                           ; BSR set to: 2
 15832                           ;miwi_mesh.c: 483: TxData = 13;
 15833  00280E  0E0D               	movlw	13
 15834  002810  0101               	movlb	1	; () banked
 15835  002812  6FC6               	movwf	_TxData& (0+255),b
 15836                           
 15837                           ; BSR set to: 1
 15838                           ;miwi_mesh.c: 486: if( sourceShortAddress.v[1] != myShortAddress.v[1] )
 15839  002814  0101               	movlb	1	; () banked
 15840  002816  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 15841  002818  0101               	movlb	1	; () banked
 15842  00281A  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 15843  00281C  B4D8               	btfsc	status,2,c
 15844  00281E  D00E               	goto	l18068
 15845                           
 15846                           ; BSR set to: 1
 15847                           ;miwi_mesh.c: 487: {
 15848                           ;miwi_mesh.c: 488: RouteMessage(sourcePANID, sourceShortAddress, 0);
 15849  002820  C175  F13D         	movff	MiWiTasks@sourcePANID,RouteMessage@PANID
 15850  002824  C176  F13E         	movff	MiWiTasks@sourcePANID+1,RouteMessage@PANID+1
 15851  002828  C178  F13F         	movff	MiWiTasks@sourceShortAddress,RouteMessage@ShortAddress
 15852  00282C  C179  F140         	movff	MiWiTasks@sourceShortAddress+1,RouteMessage@ShortAddress+1
 15853  002830  0E00               	movlw	0
 15854  002832  0101               	movlb	1	; () banked
 15855  002834  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 15856  002836  EC07  F024         	call	_RouteMessage	;wreg free
 15857                           
 15858                           ;miwi_mesh.c: 489: }
 15859  00283A  D034               	goto	l18082
 15860  00283C                     l18068:
 15861                           
 15862                           ;miwi_mesh.c: 490: else
 15863                           ;miwi_mesh.c: 491: {
 15864                           ;miwi_mesh.c: 492: MTP.flags.Val = 0;
 15865  00283C  0E00               	movlw	0
 15866  00283E  0101               	movlb	1	; () banked
 15867  002840  6FAD               	movwf	_MTP& (0+255),b
 15868                           
 15869                           ; BSR set to: 1
 15870                           ;miwi_mesh.c: 493: MTP.flags.bits.ackReq = 1;
 15871  002842  0101               	movlb	1	; () banked
 15872  002844  8BAD               	bsf	_MTP& (0+255),5,b
 15873                           
 15874                           ; BSR set to: 1
 15875                           ;miwi_mesh.c: 501: tempShortAddress.Val = sourceShortAddress.Val;
 15876  002846  C178  F1F4         	movff	MiWiTasks@sourceShortAddress,_tempShortAddress
 15877  00284A  C179  F1F5         	movff	MiWiTasks@sourceShortAddress+1,_tempShortAddress+1
 15878                           
 15879                           ; BSR set to: 1
 15880                           ;miwi_mesh.c: 502: tempPANID.Val = sourcePANID.Val;
 15881  00284E  C175  F1BB         	movff	MiWiTasks@sourcePANID,_tempPANID
 15882  002852  C176  F1BC         	movff	MiWiTasks@sourcePANID+1,_tempPANID+1
 15883                           
 15884                           ; BSR set to: 1
 15885                           ;miwi_mesh.c: 503: if( (i = SearchForShortAddress()) != 0xFF )
 15886  002856  EC82  F057         	call	_SearchForShortAddress	;wreg free
 15887  00285A  0101               	movlb	1	; () banked
 15888  00285C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 15889  00285E  0101               	movlb	1	; () banked
 15890  002860  297C               	incf	MiWiTasks@i& (0+255),w,b
 15891  002862  B4D8               	btfsc	status,2,c
 15892  002864  D00F               	goto	l18080
 15893                           
 15894                           ; BSR set to: 1
 15895                           ;miwi_mesh.c: 504: {
 15896                           ;miwi_mesh.c: 505: MTP.DestAddress = ConnectionTable[i].Address;
 15897  002866  0101               	movlb	1	; () banked
 15898  002868  517C               	movf	MiWiTasks@i& (0+255),w,b
 15899  00286A  0D09               	mullw	9
 15900  00286C  0E04               	movlw	4
 15901  00286E  26F3               	addwf	prodl,f,c
 15902  002870  0E00               	movlw	0
 15903  002872  22F4               	addwfc	prodh,f,c
 15904  002874  0E00               	movlw	low _ConnectionTable
 15905  002876  24F3               	addwf	prodl,w,c
 15906  002878  0101               	movlb	1	; () banked
 15907  00287A  6FAE               	movwf	(_MTP+1)& (0+255),b
 15908  00287C  0E06               	movlw	high _ConnectionTable
 15909  00287E  20F4               	addwfc	prodh,w,c
 15910  002880  0101               	movlb	1	; () banked
 15911  002882  6FAF               	movwf	(_MTP+2)& (0+255),b
 15912  002884                     l18080:
 15913                           
 15914                           ; BSR set to: 1
 15915                           ;miwi_mesh.c: 506: }
 15916                           ;miwi_mesh.c: 509: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 15917  002884  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 15918  002888  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 15919  00288C  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 15920  002890  0EA6               	movlw	low _TxBuffer
 15921  002892  0101               	movlb	1	; () banked
 15922  002894  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 15923  002896  0E02               	movlw	high _TxBuffer
 15924  002898  0101               	movlb	1	; () banked
 15925  00289A  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 15926  00289C  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 15927  0028A0  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 15928  0028A4                     l18082:
 15929                           
 15930                           ;miwi_mesh.c: 510: }
 15931                           ;miwi_mesh.c: 527: rxMessage.flags.bits.ackReq = 1;
 15932  0028A4  0101               	movlb	1	; () banked
 15933  0028A6  8590               	bsf	_rxMessage& (0+255),2,b
 15934  0028A8                     l18084:
 15935                           
 15936                           ; BSR set to: 1
 15937                           ;miwi_mesh.c: 532: if(MACRxPacket.Payload[11] == 0x00)
 15938  0028A8  0101               	movlb	1	; () banked
 15939  0028AA  EE20 F00B          	lfsr	2,11
 15940  0028AE  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15941  0028B0  26D9               	addwf	fsr2l,f,c
 15942  0028B2  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15943  0028B4  22DA               	addwfc	fsr2h,f,c
 15944  0028B6  50DF               	movf	indf2,w,c
 15945  0028B8  A4D8               	btfss	status,2,c
 15946  0028BA  D238               	goto	l18242
 15947                           
 15948                           ; BSR set to: 1
 15949                           ;miwi_mesh.c: 533: {
 15950                           ;miwi_mesh.c: 534: if( MACRxPacket.Payload[11+1] != 0x30)
 15951  0028BC  0101               	movlb	1	; () banked
 15952  0028BE  EE20 F00C          	lfsr	2,12
 15953  0028C2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15954  0028C4  26D9               	addwf	fsr2l,f,c
 15955  0028C6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15956  0028C8  22DA               	addwfc	fsr2h,f,c
 15957  0028CA  0E30               	movlw	48
 15958  0028CC  18DE               	xorwf	postinc2,w,c
 15959  0028CE  A4D8               	btfss	status,2,c
 15960  0028D0  D200               	goto	l18234
 15961  0028D2  D20F               	goto	l18236
 15962  0028D4                     l667:
 15963                           
 15964                           ; BSR set to: 1
 15965                           ;miwi_mesh.c: 688: {
 15966                           ;miwi_mesh.c: 689: uint8_t j;
 15967                           ;miwi_mesh.c: 692: if(openSocketInfo.status.bits.requestIsOpen == 0)
 15968  0028D4  0101               	movlb	1	; () banked
 15969  0028D6  B3CC               	btfsc	_openSocketInfo& (0+255),1,b
 15970  0028D8  D04E               	goto	l18108
 15971                           
 15972                           ; BSR set to: 1
 15973                           ;miwi_mesh.c: 693: {
 15974                           ;miwi_mesh.c: 696: openSocketInfo.socketStart = MiWi_TickGet();
 15975  0028DA  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 15976  0028DE  C100  F1DA         	movff	?_MiWi_TickGet,_openSocketInfo+14
 15977  0028E2  C101  F1DB         	movff	?_MiWi_TickGet+1,_openSocketInfo+15
 15978  0028E6  C102  F1DC         	movff	?_MiWi_TickGet+2,_openSocketInfo+16
 15979  0028EA  C103  F1DD         	movff	?_MiWi_TickGet+3,_openSocketInfo+17
 15980                           
 15981                           ;miwi_mesh.c: 697: openSocketInfo.ShortAddress1.v[0] = MACRxPacket.Payload[11-3];
 15982  0028EE  0101               	movlb	1	; () banked
 15983  0028F0  EE20 F008          	lfsr	2,8
 15984  0028F4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15985  0028F6  26D9               	addwf	fsr2l,f,c
 15986  0028F8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15987  0028FA  22DA               	addwfc	fsr2h,f,c
 15988  0028FC  50DF               	movf	indf2,w,c
 15989  0028FE  0101               	movlb	1	; () banked
 15990  002900  6FCE               	movwf	(_openSocketInfo+2)& (0+255),b
 15991                           
 15992                           ; BSR set to: 1
 15993                           ;miwi_mesh.c: 698: openSocketInfo.ShortAddress1.v[1] = MACRxPacket.Payload[11-2];
 15994  002902  0101               	movlb	1	; () banked
 15995  002904  EE20 F009          	lfsr	2,9
 15996  002908  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 15997  00290A  26D9               	addwf	fsr2l,f,c
 15998  00290C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 15999  00290E  22DA               	addwfc	fsr2h,f,c
 16000  002910  50DF               	movf	indf2,w,c
 16001  002912  0101               	movlb	1	; () banked
 16002  002914  6FCF               	movwf	(_openSocketInfo+3)& (0+255),b
 16003                           
 16004                           ; BSR set to: 1
 16005                           ;miwi_mesh.c: 701: for(j=0;j<4;j++)
 16006  002916  0E00               	movlw	0
 16007  002918  0101               	movlb	1	; () banked
 16008  00291A  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16009  00291C                     l18098:
 16010                           
 16011                           ; BSR set to: 1
 16012  00291C  0E03               	movlw	3
 16013  00291E  0101               	movlb	1	; () banked
 16014  002920  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16015  002922  D001               	goto	l18102
 16016  002924  D022               	goto	l670
 16017  002926                     l18102:
 16018                           
 16019                           ; BSR set to: 1
 16020                           ;miwi_mesh.c: 702: {
 16021                           ;miwi_mesh.c: 703: openSocketInfo.LongAddress1[j] = MACRxPacket.Payload[j+2+11];
 16022  002926  0101               	movlb	1	; () banked
 16023  002928  517B               	movf	MiWiTasks@j& (0+255),w,b
 16024  00292A  0101               	movlb	1	; () banked
 16025  00292C  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16026  00292E  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16027  002930  0E0D               	movlw	13
 16028  002932  0101               	movlb	1	; () banked
 16029  002934  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16030  002936  0E00               	movlw	0
 16031  002938  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16032  00293A  0101               	movlb	1	; () banked
 16033  00293C  514A               	movf	??_MiWiTasks& (0+255),w,b
 16034  00293E  0101               	movlb	1	; () banked
 16035  002940  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16036  002942  6ED9               	movwf	fsr2l,c
 16037  002944  0101               	movlb	1	; () banked
 16038  002946  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16039  002948  0101               	movlb	1	; () banked
 16040  00294A  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16041  00294C  6EDA               	movwf	fsr2h,c
 16042  00294E  0101               	movlb	1	; () banked
 16043  002950  517B               	movf	MiWiTasks@j& (0+255),w,b
 16044  002952  0D01               	mullw	1
 16045  002954  0ED0               	movlw	low (_openSocketInfo+4)
 16046  002956  24F3               	addwf	prodl,w,c
 16047  002958  6EE1               	movwf	fsr1l,c
 16048  00295A  0E01               	movlw	high (_openSocketInfo+4)
 16049  00295C  20F4               	addwfc	prodh,w,c
 16050  00295E  6EE2               	movwf	fsr1h,c
 16051  002960  CFDF FFE7          	movff	indf2,indf1
 16052                           
 16053                           ; BSR set to: 1
 16054  002964  0101               	movlb	1	; () banked
 16055  002966  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16056  002968  D7D9               	goto	l18098
 16057  00296A                     l670:
 16058                           
 16059                           ; BSR set to: 1
 16060                           ;miwi_mesh.c: 704: }
 16061                           ;miwi_mesh.c: 706: openSocketInfo.status.bits.requestIsOpen = 1;
 16062  00296A  0101               	movlb	1	; () banked
 16063  00296C  83CC               	bsf	_openSocketInfo& (0+255),1,b
 16064                           
 16065                           ;miwi_mesh.c: 707: openSocketInfo.status.bits.matchFound = 0;
 16066  00296E  0101               	movlb	1	; () banked
 16067  002970  91CC               	bcf	_openSocketInfo& (0+255),0,b
 16068                           
 16069                           ;miwi_mesh.c: 715: }
 16070  002972  EF84  F01D         	goto	l641
 16071  002976                     l18108:
 16072                           
 16073                           ; BSR set to: 1
 16074                           ;miwi_mesh.c: 716: else
 16075                           ;miwi_mesh.c: 717: {
 16076                           ;miwi_mesh.c: 720: if( (MACRxPacket.Payload[11-3] == openSocketInfo.ShortAddress1.v[0]) 
      +                          &&
 16077                           ;miwi_mesh.c: 721: (MACRxPacket.Payload[11-2] == openSocketInfo.ShortAddress1.v[1]))
 16078  002976  0101               	movlb	1	; () banked
 16079  002978  EE20 F008          	lfsr	2,8
 16080  00297C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16081  00297E  26D9               	addwf	fsr2l,f,c
 16082  002980  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16083  002982  22DA               	addwfc	fsr2h,f,c
 16084  002984  0101               	movlb	1	; () banked
 16085  002986  51CE               	movf	(_openSocketInfo+2)& (0+255),w,b
 16086  002988  18DE               	xorwf	postinc2,w,c
 16087  00298A  A4D8               	btfss	status,2,c
 16088  00298C  D00D               	goto	l18114
 16089                           
 16090                           ; BSR set to: 1
 16091  00298E  0101               	movlb	1	; () banked
 16092  002990  EE20 F009          	lfsr	2,9
 16093  002994  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16094  002996  26D9               	addwf	fsr2l,f,c
 16095  002998  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16096  00299A  22DA               	addwfc	fsr2h,f,c
 16097  00299C  0101               	movlb	1	; () banked
 16098  00299E  51CF               	movf	(_openSocketInfo+3)& (0+255),w,b
 16099  0029A0  18DE               	xorwf	postinc2,w,c
 16100  0029A2  B4D8               	btfsc	status,2,c
 16101  0029A4  EF84  F01D         	goto	l641
 16102  0029A8                     l18114:
 16103                           
 16104                           ; BSR set to: 1
 16105                           ;miwi_mesh.c: 727: else if(openSocketInfo.ShortAddress1.Val == 0x0000)
 16106  0029A8  0101               	movlb	1	; () banked
 16107  0029AA  51CE               	movf	(_openSocketInfo+2)& (0+255),w,b
 16108  0029AC  0101               	movlb	1	; () banked
 16109  0029AE  11CF               	iorwf	(_openSocketInfo+3)& (0+255),w,b
 16110  0029B0  A4D8               	btfss	status,2,c
 16111  0029B2  D06F               	goto	l18150
 16112                           
 16113                           ; BSR set to: 1
 16114                           ;miwi_mesh.c: 728: {
 16115                           ;miwi_mesh.c: 731: for(j=0;j<4;j++)
 16116  0029B4  0E00               	movlw	0
 16117  0029B6  0101               	movlb	1	; () banked
 16118  0029B8  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16119  0029BA                     l18118:
 16120                           
 16121                           ; BSR set to: 1
 16122  0029BA  0E03               	movlw	3
 16123  0029BC  0101               	movlb	1	; () banked
 16124  0029BE  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16125  0029C0  D001               	goto	l18122
 16126  0029C2  D036               	goto	l18128
 16127  0029C4                     l18122:
 16128                           
 16129                           ; BSR set to: 1
 16130                           ;miwi_mesh.c: 732: {
 16131                           ;miwi_mesh.c: 733: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 16132  0029C4  0101               	movlb	1	; () banked
 16133  0029C6  517B               	movf	MiWiTasks@j& (0+255),w,b
 16134  0029C8  0101               	movlb	1	; () banked
 16135  0029CA  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16136  0029CC  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16137  0029CE  0E0D               	movlw	13
 16138  0029D0  0101               	movlb	1	; () banked
 16139  0029D2  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16140  0029D4  0E00               	movlw	0
 16141  0029D6  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16142  0029D8  0101               	movlb	1	; () banked
 16143  0029DA  514A               	movf	??_MiWiTasks& (0+255),w,b
 16144  0029DC  0101               	movlb	1	; () banked
 16145  0029DE  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16146  0029E0  6ED9               	movwf	fsr2l,c
 16147  0029E2  0101               	movlb	1	; () banked
 16148  0029E4  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16149  0029E6  0101               	movlb	1	; () banked
 16150  0029E8  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16151  0029EA  6EDA               	movwf	fsr2h,c
 16152  0029EC  0101               	movlb	1	; () banked
 16153  0029EE  517B               	movf	MiWiTasks@j& (0+255),w,b
 16154  0029F0  0D01               	mullw	1
 16155  0029F2  0ED6               	movlw	low (_openSocketInfo+10)
 16156  0029F4  24F3               	addwf	prodl,w,c
 16157  0029F6  6EE1               	movwf	fsr1l,c
 16158  0029F8  0E01               	movlw	high (_openSocketInfo+10)
 16159  0029FA  20F4               	addwfc	prodh,w,c
 16160  0029FC  6EE2               	movwf	fsr1h,c
 16161  0029FE  CFDF FFE7          	movff	indf2,indf1
 16162                           
 16163                           ;miwi_mesh.c: 734: tempLongAddress[j] = openSocketInfo.LongAddress2[j];
 16164  002A02  0101               	movlb	1	; () banked
 16165  002A04  517B               	movf	MiWiTasks@j& (0+255),w,b
 16166  002A06  0D01               	mullw	1
 16167  002A08  0ED6               	movlw	low (_openSocketInfo+10)
 16168  002A0A  24F3               	addwf	prodl,w,c
 16169  002A0C  6ED9               	movwf	fsr2l,c
 16170  002A0E  0E01               	movlw	high (_openSocketInfo+10)
 16171  002A10  20F4               	addwfc	prodh,w,c
 16172  002A12  6EDA               	movwf	fsr2h,c
 16173  002A14  0101               	movlb	1	; () banked
 16174  002A16  517B               	movf	MiWiTasks@j& (0+255),w,b
 16175  002A18  0D01               	mullw	1
 16176  002A1A  0EA6               	movlw	low _tempLongAddress
 16177  002A1C  24F3               	addwf	prodl,w,c
 16178  002A1E  6EE1               	movwf	fsr1l,c
 16179  002A20  0E01               	movlw	high _tempLongAddress
 16180  002A22  20F4               	addwfc	prodh,w,c
 16181  002A24  6EE2               	movwf	fsr1h,c
 16182  002A26  CFDF FFE7          	movff	indf2,indf1
 16183                           
 16184                           ; BSR set to: 1
 16185  002A2A  0101               	movlb	1	; () banked
 16186  002A2C  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16187  002A2E  D7C5               	goto	l18118
 16188  002A30                     l18128:
 16189                           
 16190                           ; BSR set to: 1
 16191                           ;miwi_mesh.c: 735: }
 16192                           ;miwi_mesh.c: 739: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 16193  002A30  0101               	movlb	1	; () banked
 16194  002A32  EE20 F008          	lfsr	2,8
 16195  002A36  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16196  002A38  26D9               	addwf	fsr2l,f,c
 16197  002A3A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16198  002A3C  22DA               	addwfc	fsr2h,f,c
 16199  002A3E  50DF               	movf	indf2,w,c
 16200  002A40  0101               	movlb	1	; () banked
 16201  002A42  6FD4               	movwf	(_openSocketInfo+8)& (0+255),b
 16202                           
 16203                           ;miwi_mesh.c: 740: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 16204  002A44  0101               	movlb	1	; () banked
 16205  002A46  EE20 F009          	lfsr	2,9
 16206  002A4A  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16207  002A4C  26D9               	addwf	fsr2l,f,c
 16208  002A4E  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16209  002A50  22DA               	addwfc	fsr2h,f,c
 16210  002A52  50DF               	movf	indf2,w,c
 16211  002A54  0101               	movlb	1	; () banked
 16212  002A56  6FD5               	movwf	(_openSocketInfo+9)& (0+255),b
 16213                           
 16214                           ; BSR set to: 1
 16215                           ;miwi_mesh.c: 742: tempShortAddress.v[0] = openSocketInfo.ShortAddress2.v[0];
 16216  002A58  C1D4  F1F4         	movff	_openSocketInfo+8,_tempShortAddress
 16217                           
 16218                           ; BSR set to: 1
 16219                           ;miwi_mesh.c: 743: tempShortAddress.v[1] = openSocketInfo.ShortAddress2.v[1];
 16220  002A5C  C1D5  F1F5         	movff	_openSocketInfo+9,_tempShortAddress+1
 16221                           
 16222                           ; BSR set to: 1
 16223                           ;miwi_mesh.c: 744: tempPANID.Val = myPANID.Val;
 16224  002A60  C1F0  F1BB         	movff	_myPANID,_tempPANID
 16225  002A64  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 16226                           
 16227                           ; BSR set to: 1
 16228                           ;miwi_mesh.c: 747: openSocketInfo.socketHandle = SearchForShortAddress();
 16229  002A68  EC82  F057         	call	_SearchForShortAddress	;wreg free
 16230  002A6C  0101               	movlb	1	; () banked
 16231  002A6E  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16232                           
 16233                           ; BSR set to: 1
 16234                           ;miwi_mesh.c: 749: if(openSocketInfo.socketHandle == 0xFF)
 16235  002A70  0101               	movlb	1	; () banked
 16236  002A72  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16237  002A74  A4D8               	btfss	status,2,c
 16238  002A76  D0A0               	goto	l18184
 16239                           
 16240                           ; BSR set to: 1
 16241                           ;miwi_mesh.c: 750: {
 16242                           ;miwi_mesh.c: 753: tempNodeStatus.Val = 0x8D;
 16243  002A78  0E8D               	movlw	141
 16244  002A7A  0100               	movlb	0	; () banked
 16245  002A7C  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;miwi_mesh.c: 754: if(tempShortAddress.v[0] & 0x80)
 16249  002A7E  0101               	movlb	1	; () banked
 16250  002A80  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 16251  002A82  D002               	goto	l18146
 16252                           
 16253                           ; BSR set to: 1
 16254                           ;miwi_mesh.c: 755: {
 16255                           ;miwi_mesh.c: 756: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16256  002A84  0100               	movlb	0	; () banked
 16257  002A86  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16258  002A88                     l18146:
 16259                           
 16260                           ;miwi_mesh.c: 757: }
 16261                           ;miwi_mesh.c: 759: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 16262  002A88  EC11  F046         	call	_AddNodeToNetworkTable	;wreg free
 16263  002A8C  0101               	movlb	1	; () banked
 16264  002A8E  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16265                           
 16266                           ; BSR set to: 1
 16267  002A90  D093               	goto	l18184
 16268  002A92                     l18150:
 16269                           
 16270                           ; BSR set to: 1
 16271                           ;miwi_mesh.c: 778: else
 16272                           ;miwi_mesh.c: 779: {
 16273                           ;miwi_mesh.c: 780: ;
 16274                           ;miwi_mesh.c: 784: {TxData = 11;};
 16275  002A92  0E0B               	movlw	11
 16276  002A94  0101               	movlb	1	; () banked
 16277  002A96  6FC6               	movwf	_TxData& (0+255),b
 16278                           
 16279                           ; BSR set to: 1
 16280                           ;miwi_mesh.c: 785: TxBuffer[TxData++] = 0x00;
 16281  002A98  0101               	movlb	1	; () banked
 16282  002A9A  51C6               	movf	_TxData& (0+255),w,b
 16283  002A9C  0D01               	mullw	1
 16284  002A9E  0EA6               	movlw	low _TxBuffer
 16285  002AA0  24F3               	addwf	prodl,w,c
 16286  002AA2  6ED9               	movwf	fsr2l,c
 16287  002AA4  0E02               	movlw	high _TxBuffer
 16288  002AA6  20F4               	addwfc	prodh,w,c
 16289  002AA8  6EDA               	movwf	fsr2h,c
 16290  002AAA  0E00               	movlw	0
 16291  002AAC  6EDF               	movwf	indf2,c
 16292                           
 16293                           ; BSR set to: 1
 16294  002AAE  0101               	movlb	1	; () banked
 16295  002AB0  2BC6               	incf	_TxData& (0+255),f,b
 16296                           
 16297                           ; BSR set to: 1
 16298                           ;miwi_mesh.c: 786: TxBuffer[TxData++] = 0x11;
 16299  002AB2  0101               	movlb	1	; () banked
 16300  002AB4  51C6               	movf	_TxData& (0+255),w,b
 16301  002AB6  0D01               	mullw	1
 16302  002AB8  0EA6               	movlw	low _TxBuffer
 16303  002ABA  24F3               	addwf	prodl,w,c
 16304  002ABC  6ED9               	movwf	fsr2l,c
 16305  002ABE  0E02               	movlw	high _TxBuffer
 16306  002AC0  20F4               	addwfc	prodh,w,c
 16307  002AC2  6EDA               	movwf	fsr2h,c
 16308  002AC4  0E11               	movlw	17
 16309  002AC6  6EDF               	movwf	indf2,c
 16310                           
 16311                           ; BSR set to: 1
 16312  002AC8  0101               	movlb	1	; () banked
 16313  002ACA  2BC6               	incf	_TxData& (0+255),f,b
 16314                           
 16315                           ;miwi_mesh.c: 789: for(j=0;j<4;j++)
 16316  002ACC  0E00               	movlw	0
 16317  002ACE  0101               	movlb	1	; () banked
 16318  002AD0  6F7B               	movwf	MiWiTasks@j& (0+255),b
 16319  002AD2                     l18160:
 16320                           
 16321                           ; BSR set to: 1
 16322  002AD2  0E03               	movlw	3
 16323  002AD4  0101               	movlb	1	; () banked
 16324  002AD6  657B               	cpfsgt	MiWiTasks@j& (0+255),b
 16325  002AD8  D001               	goto	l18164
 16326  002ADA  D038               	goto	l18172
 16327  002ADC                     l18164:
 16328                           
 16329                           ; BSR set to: 1
 16330                           ;miwi_mesh.c: 790: {
 16331                           ;miwi_mesh.c: 791: openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[11+2+j];
 16332  002ADC  0101               	movlb	1	; () banked
 16333  002ADE  517B               	movf	MiWiTasks@j& (0+255),w,b
 16334  002AE0  0101               	movlb	1	; () banked
 16335  002AE2  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16336  002AE4  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16337  002AE6  0E0D               	movlw	13
 16338  002AE8  0101               	movlb	1	; () banked
 16339  002AEA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16340  002AEC  0E00               	movlw	0
 16341  002AEE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16342  002AF0  0101               	movlb	1	; () banked
 16343  002AF2  514A               	movf	??_MiWiTasks& (0+255),w,b
 16344  002AF4  0101               	movlb	1	; () banked
 16345  002AF6  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16346  002AF8  6ED9               	movwf	fsr2l,c
 16347  002AFA  0101               	movlb	1	; () banked
 16348  002AFC  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16349  002AFE  0101               	movlb	1	; () banked
 16350  002B00  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16351  002B02  6EDA               	movwf	fsr2h,c
 16352  002B04  0101               	movlb	1	; () banked
 16353  002B06  517B               	movf	MiWiTasks@j& (0+255),w,b
 16354  002B08  0D01               	mullw	1
 16355  002B0A  0ED6               	movlw	low (_openSocketInfo+10)
 16356  002B0C  24F3               	addwf	prodl,w,c
 16357  002B0E  6EE1               	movwf	fsr1l,c
 16358  002B10  0E01               	movlw	high (_openSocketInfo+10)
 16359  002B12  20F4               	addwfc	prodh,w,c
 16360  002B14  6EE2               	movwf	fsr1h,c
 16361  002B16  CFDF FFE7          	movff	indf2,indf1
 16362                           
 16363                           ;miwi_mesh.c: 792: TxBuffer[TxData++] = openSocketInfo.LongAddress2[j];
 16364  002B1A  0101               	movlb	1	; () banked
 16365  002B1C  517B               	movf	MiWiTasks@j& (0+255),w,b
 16366  002B1E  0D01               	mullw	1
 16367  002B20  0ED6               	movlw	low (_openSocketInfo+10)
 16368  002B22  24F3               	addwf	prodl,w,c
 16369  002B24  6ED9               	movwf	fsr2l,c
 16370  002B26  0E01               	movlw	high (_openSocketInfo+10)
 16371  002B28  20F4               	addwfc	prodh,w,c
 16372  002B2A  6EDA               	movwf	fsr2h,c
 16373  002B2C  0101               	movlb	1	; () banked
 16374  002B2E  51C6               	movf	_TxData& (0+255),w,b
 16375  002B30  0D01               	mullw	1
 16376  002B32  0EA6               	movlw	low _TxBuffer
 16377  002B34  24F3               	addwf	prodl,w,c
 16378  002B36  6EE1               	movwf	fsr1l,c
 16379  002B38  0E02               	movlw	high _TxBuffer
 16380  002B3A  20F4               	addwfc	prodh,w,c
 16381  002B3C  6EE2               	movwf	fsr1h,c
 16382  002B3E  CFDF FFE7          	movff	indf2,indf1
 16383                           
 16384                           ; BSR set to: 1
 16385  002B42  0101               	movlb	1	; () banked
 16386  002B44  2BC6               	incf	_TxData& (0+255),f,b
 16387                           
 16388                           ; BSR set to: 1
 16389  002B46  0101               	movlb	1	; () banked
 16390  002B48  2B7B               	incf	MiWiTasks@j& (0+255),f,b
 16391  002B4A  D7C3               	goto	l18160
 16392  002B4C                     l18172:
 16393                           
 16394                           ; BSR set to: 1
 16395                           ;miwi_mesh.c: 793: }
 16396                           ;miwi_mesh.c: 795: openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[11-3];
 16397  002B4C  0101               	movlb	1	; () banked
 16398  002B4E  EE20 F008          	lfsr	2,8
 16399  002B52  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16400  002B54  26D9               	addwf	fsr2l,f,c
 16401  002B56  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16402  002B58  22DA               	addwfc	fsr2h,f,c
 16403  002B5A  50DF               	movf	indf2,w,c
 16404  002B5C  0101               	movlb	1	; () banked
 16405  002B5E  6FD4               	movwf	(_openSocketInfo+8)& (0+255),b
 16406                           
 16407                           ;miwi_mesh.c: 796: openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[11-2];
 16408  002B60  0101               	movlb	1	; () banked
 16409  002B62  EE20 F009          	lfsr	2,9
 16410  002B66  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16411  002B68  26D9               	addwf	fsr2l,f,c
 16412  002B6A  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16413  002B6C  22DA               	addwfc	fsr2h,f,c
 16414  002B6E  50DF               	movf	indf2,w,c
 16415  002B70  0101               	movlb	1	; () banked
 16416  002B72  6FD5               	movwf	(_openSocketInfo+9)& (0+255),b
 16417                           
 16418                           ; BSR set to: 1
 16419                           ;miwi_mesh.c: 805: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[0];
 16420  002B74  0101               	movlb	1	; () banked
 16421  002B76  51C6               	movf	_TxData& (0+255),w,b
 16422  002B78  0D01               	mullw	1
 16423  002B7A  0EA6               	movlw	low _TxBuffer
 16424  002B7C  24F3               	addwf	prodl,w,c
 16425  002B7E  6ED9               	movwf	fsr2l,c
 16426  002B80  0E02               	movlw	high _TxBuffer
 16427  002B82  20F4               	addwfc	prodh,w,c
 16428  002B84  6EDA               	movwf	fsr2h,c
 16429  002B86  C1D4  FFDF         	movff	_openSocketInfo+8,indf2
 16430                           
 16431                           ; BSR set to: 1
 16432  002B8A  0101               	movlb	1	; () banked
 16433  002B8C  2BC6               	incf	_TxData& (0+255),f,b
 16434                           
 16435                           ; BSR set to: 1
 16436                           ;miwi_mesh.c: 806: TxBuffer[TxData++] = openSocketInfo.ShortAddress2.v[1];
 16437  002B8E  0101               	movlb	1	; () banked
 16438  002B90  51C6               	movf	_TxData& (0+255),w,b
 16439  002B92  0D01               	mullw	1
 16440  002B94  0EA6               	movlw	low _TxBuffer
 16441  002B96  24F3               	addwf	prodl,w,c
 16442  002B98  6ED9               	movwf	fsr2l,c
 16443  002B9A  0E02               	movlw	high _TxBuffer
 16444  002B9C  20F4               	addwfc	prodh,w,c
 16445  002B9E  6EDA               	movwf	fsr2h,c
 16446  002BA0  C1D5  FFDF         	movff	_openSocketInfo+9,indf2
 16447                           
 16448                           ; BSR set to: 1
 16449  002BA4  0101               	movlb	1	; () banked
 16450  002BA6  2BC6               	incf	_TxData& (0+255),f,b
 16451                           
 16452                           ; BSR set to: 1
 16453                           ;miwi_mesh.c: 816: UnicastShortAddress(openSocketInfo.ShortAddress1.v);
 16454  002BA8  0ECE               	movlw	low (_openSocketInfo+2)
 16455  002BAA  0101               	movlb	1	; () banked
 16456  002BAC  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 16457  002BAE  0E01               	movlw	high (_openSocketInfo+2)
 16458  002BB0  0101               	movlb	1	; () banked
 16459  002BB2  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 16460  002BB4  EC5E  F056         	call	_UnicastShortAddress	;wreg free
 16461  002BB8                     l18184:
 16462                           
 16463                           ;miwi_mesh.c: 817: openSocketInfo.status.bits.requestIsOpen = 1;
 16464  002BB8  0101               	movlb	1	; () banked
 16465  002BBA  83CC               	bsf	_openSocketInfo& (0+255),1,b
 16466                           
 16467                           ; BSR set to: 1
 16468                           ;miwi_mesh.c: 818: openSocketInfo.status.bits.matchFound = 1;
 16469  002BBC  0101               	movlb	1	; () banked
 16470  002BBE  81CC               	bsf	_openSocketInfo& (0+255),0,b
 16471                           
 16472                           ; BSR set to: 1
 16473                           ;miwi_mesh.c: 819: }
 16474                           ;miwi_mesh.c: 821: }
 16475                           ;miwi_mesh.c: 822: }
 16476                           ;miwi_mesh.c: 823: break;
 16477                           
 16478                           ; BSR set to: 1
 16479                           
 16480                           ; BSR set to: 1
 16481  002BC0  EF84  F01D         	goto	l641
 16482  002BC4                     l18188:
 16483                           
 16484                           ; BSR set to: 1
 16485                           ;miwi_mesh.c: 827: {
 16486                           ;miwi_mesh.c: 828: uint8_t j;
 16487                           ;miwi_mesh.c: 831: for(j=0;j<4;j++)
 16488  002BC4  0E00               	movlw	0
 16489  002BC6  0101               	movlb	1	; () banked
 16490  002BC8  6F71               	movwf	MiWiTasks@j_2488& (0+255),b
 16491  002BCA                     l18190:
 16492                           
 16493                           ; BSR set to: 1
 16494  002BCA  0E03               	movlw	3
 16495  002BCC  0101               	movlb	1	; () banked
 16496  002BCE  6571               	cpfsgt	MiWiTasks@j_2488& (0+255),b
 16497  002BD0  D001               	goto	l18194
 16498  002BD2  D022               	goto	l18200
 16499  002BD4                     l18194:
 16500                           
 16501                           ; BSR set to: 1
 16502                           ;miwi_mesh.c: 832: {
 16503                           ;miwi_mesh.c: 833: tempLongAddress[j] = MACRxPacket.Payload[j+13];
 16504  002BD4  0101               	movlb	1	; () banked
 16505  002BD6  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 16506  002BD8  0101               	movlb	1	; () banked
 16507  002BDA  6F4A               	movwf	??_MiWiTasks& (0+255),b
 16508  002BDC  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 16509  002BDE  0E0D               	movlw	13
 16510  002BE0  0101               	movlb	1	; () banked
 16511  002BE2  274A               	addwf	??_MiWiTasks& (0+255),f,b
 16512  002BE4  0E00               	movlw	0
 16513  002BE6  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 16514  002BE8  0101               	movlb	1	; () banked
 16515  002BEA  514A               	movf	??_MiWiTasks& (0+255),w,b
 16516  002BEC  0101               	movlb	1	; () banked
 16517  002BEE  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16518  002BF0  6ED9               	movwf	fsr2l,c
 16519  002BF2  0101               	movlb	1	; () banked
 16520  002BF4  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 16521  002BF6  0101               	movlb	1	; () banked
 16522  002BF8  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16523  002BFA  6EDA               	movwf	fsr2h,c
 16524  002BFC  0101               	movlb	1	; () banked
 16525  002BFE  5171               	movf	MiWiTasks@j_2488& (0+255),w,b
 16526  002C00  0D01               	mullw	1
 16527  002C02  0EA6               	movlw	low _tempLongAddress
 16528  002C04  24F3               	addwf	prodl,w,c
 16529  002C06  6EE1               	movwf	fsr1l,c
 16530  002C08  0E01               	movlw	high _tempLongAddress
 16531  002C0A  20F4               	addwfc	prodh,w,c
 16532  002C0C  6EE2               	movwf	fsr1h,c
 16533  002C0E  CFDF FFE7          	movff	indf2,indf1
 16534                           
 16535                           ; BSR set to: 1
 16536  002C12  0101               	movlb	1	; () banked
 16537  002C14  2B71               	incf	MiWiTasks@j_2488& (0+255),f,b
 16538  002C16  D7D9               	goto	l18190
 16539  002C18                     l18200:
 16540                           
 16541                           ; BSR set to: 1
 16542                           ;miwi_mesh.c: 834: }
 16543                           ;miwi_mesh.c: 837: tempNodeStatus.Val = 0x8D;
 16544  002C18  0E8D               	movlw	141
 16545  002C1A  0100               	movlb	0	; () banked
 16546  002C1C  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;miwi_mesh.c: 839: if(MACRxPacket.Payload[13+4] & 0x80)
 16550  002C1E  0101               	movlb	1	; () banked
 16551  002C20  EE20 F011          	lfsr	2,17
 16552  002C24  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16553  002C26  26D9               	addwf	fsr2l,f,c
 16554  002C28  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16555  002C2A  22DA               	addwfc	fsr2h,f,c
 16556  002C2C  0101               	movlb	1	; () banked
 16557  002C2E  AEDF               	btfss	indf2,7,c
 16558  002C30  D002               	goto	l18206
 16559                           
 16560                           ; BSR set to: 1
 16561                           ;miwi_mesh.c: 840: {
 16562                           ;miwi_mesh.c: 841: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16563  002C32  0100               	movlb	0	; () banked
 16564  002C34  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16565  002C36                     l18206:
 16566                           
 16567                           ;miwi_mesh.c: 842: }
 16568                           ;miwi_mesh.c: 845: tempShortAddress.v[0] = MACRxPacket.Payload[4+13];
 16569  002C36  0101               	movlb	1	; () banked
 16570  002C38  EE20 F011          	lfsr	2,17
 16571  002C3C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16572  002C3E  26D9               	addwf	fsr2l,f,c
 16573  002C40  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16574  002C42  22DA               	addwfc	fsr2h,f,c
 16575  002C44  50DF               	movf	indf2,w,c
 16576  002C46  0101               	movlb	1	; () banked
 16577  002C48  6FF4               	movwf	_tempShortAddress& (0+255),b
 16578                           
 16579                           ;miwi_mesh.c: 846: tempShortAddress.v[1] = MACRxPacket.Payload[4+14];
 16580  002C4A  0101               	movlb	1	; () banked
 16581  002C4C  EE20 F012          	lfsr	2,18
 16582  002C50  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16583  002C52  26D9               	addwf	fsr2l,f,c
 16584  002C54  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16585  002C56  22DA               	addwfc	fsr2h,f,c
 16586  002C58  50DF               	movf	indf2,w,c
 16587  002C5A  0101               	movlb	1	; () banked
 16588  002C5C  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 16589                           
 16590                           ; BSR set to: 1
 16591                           ;miwi_mesh.c: 849: tempPANID.Val = myPANID.Val;
 16592  002C5E  C1F0  F1BB         	movff	_myPANID,_tempPANID
 16593  002C62  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 16594                           
 16595                           ; BSR set to: 1
 16596                           ;miwi_mesh.c: 852: openSocketInfo.socketHandle = SearchForShortAddress();
 16597  002C66  EC82  F057         	call	_SearchForShortAddress	;wreg free
 16598  002C6A  0101               	movlb	1	; () banked
 16599  002C6C  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16600                           
 16601                           ; BSR set to: 1
 16602                           ;miwi_mesh.c: 854: if(openSocketInfo.socketHandle != 0xFF)
 16603  002C6E  0101               	movlb	1	; () banked
 16604  002C70  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16605  002C72  B4D8               	btfsc	status,2,c
 16606  002C74  D015               	goto	l18220
 16607                           
 16608                           ; BSR set to: 1
 16609                           ;miwi_mesh.c: 855: {
 16610                           ;miwi_mesh.c: 857: tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].sta
      +                          tus.Val;
 16611  002C76  0101               	movlb	1	; () banked
 16612  002C78  51CD               	movf	(_openSocketInfo+1)& (0+255),w,b
 16613  002C7A  0D09               	mullw	9
 16614  002C7C  0E08               	movlw	8
 16615  002C7E  26F3               	addwf	prodl,f,c
 16616  002C80  0E00               	movlw	0
 16617  002C82  22F4               	addwfc	prodh,f,c
 16618  002C84  0E00               	movlw	low _ConnectionTable
 16619  002C86  24F3               	addwf	prodl,w,c
 16620  002C88  6ED9               	movwf	fsr2l,c
 16621  002C8A  0E06               	movlw	high _ConnectionTable
 16622  002C8C  20F4               	addwfc	prodh,w,c
 16623  002C8E  6EDA               	movwf	fsr2h,c
 16624  002C90  50DF               	movf	indf2,w,c
 16625  002C92  0100               	movlb	0	; () banked
 16626  002C94  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;miwi_mesh.c: 858: tempNodeStatus.bits.longAddressValid = 1;
 16630  002C96  0100               	movlb	0	; () banked
 16631  002C98  85A0               	bsf	_tempNodeStatus& (0+255),2,b
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;miwi_mesh.c: 859: tempNodeStatus.bits.shortAddressValid = 1;
 16635  002C9A  0100               	movlb	0	; () banked
 16636  002C9C  87A0               	bsf	_tempNodeStatus& (0+255),3,b
 16637                           
 16638                           ;miwi_mesh.c: 860: }
 16639  002C9E  D008               	goto	l18226
 16640  002CA0                     l18220:
 16641                           
 16642                           ;miwi_mesh.c: 861: else
 16643                           ;miwi_mesh.c: 862: {
 16644                           ;miwi_mesh.c: 864: tempNodeStatus.Val = 0x8D;
 16645  002CA0  0E8D               	movlw	141
 16646  002CA2  0100               	movlb	0	; () banked
 16647  002CA4  6FA0               	movwf	_tempNodeStatus& (0+255),b
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;miwi_mesh.c: 865: if(tempShortAddress.v[0] & 0x80)
 16651  002CA6  0101               	movlb	1	; () banked
 16652  002CA8  AFF4               	btfss	_tempShortAddress& (0+255),7,b
 16653  002CAA  D002               	goto	l18226
 16654                           
 16655                           ; BSR set to: 1
 16656                           ;miwi_mesh.c: 866: {
 16657                           ;miwi_mesh.c: 867: tempNodeStatus.bits.RXOnWhenIdle = 0;
 16658  002CAC  0100               	movlb	0	; () banked
 16659  002CAE  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 16660  002CB0                     l18226:
 16661                           
 16662                           ;miwi_mesh.c: 868: }
 16663                           ;miwi_mesh.c: 869: }
 16664                           ;miwi_mesh.c: 871: openSocketInfo.socketHandle = AddNodeToNetworkTable();
 16665  002CB0  EC11  F046         	call	_AddNodeToNetworkTable	;wreg free
 16666  002CB4  0101               	movlb	1	; () banked
 16667  002CB6  6FCD               	movwf	(_openSocketInfo+1)& (0+255),b
 16668                           
 16669                           ; BSR set to: 1
 16670                           ;miwi_mesh.c: 872: if( openSocketInfo.socketHandle < 0xFF )
 16671  002CB8  0101               	movlb	1	; () banked
 16672  002CBA  29CD               	incf	(_openSocketInfo+1)& (0+255),w,b
 16673  002CBC  B4D8               	btfsc	status,2,c
 16674  002CBE  D003               	goto	l691
 16675                           
 16676                           ; BSR set to: 1
 16677                           ;miwi_mesh.c: 873: {
 16678                           ;miwi_mesh.c: 883: openSocketInfo.status.bits.matchFound = 1;
 16679  002CC0  0101               	movlb	1	; () banked
 16680  002CC2  81CC               	bsf	_openSocketInfo& (0+255),0,b
 16681                           
 16682                           ;miwi_mesh.c: 884: }
 16683  002CC4  D002               	goto	l692
 16684  002CC6                     l691:
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;miwi_mesh.c: 885: else
 16688                           ;miwi_mesh.c: 886: {
 16689                           ;miwi_mesh.c: 887: openSocketInfo.status.bits.matchFound = 0;
 16690  002CC6  0101               	movlb	1	; () banked
 16691  002CC8  91CC               	bcf	_openSocketInfo& (0+255),0,b
 16692  002CCA                     l692:
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;miwi_mesh.c: 888: }
 16696                           ;miwi_mesh.c: 891: openSocketInfo.status.bits.requestIsOpen = 0;
 16697  002CCA  0101               	movlb	1	; () banked
 16698  002CCC  93CC               	bcf	_openSocketInfo& (0+255),1,b
 16699                           
 16700                           ; BSR set to: 1
 16701                           ;miwi_mesh.c: 969: }
 16702                           
 16703                           ; BSR set to: 1
 16704                           ;miwi_mesh.c: 968: break;
 16705                           
 16706                           ;miwi_mesh.c: 965: default:
 16707                           
 16708                           ;miwi_mesh.c: 893: }
 16709                           ;miwi_mesh.c: 894: break;
 16710  002CCE  EF84  F01D         	goto	l641
 16711  002CD2                     l18234:
 16712                           
 16713                           ; BSR set to: 1
 16714  002CD2  0101               	movlb	1	; () banked
 16715  002CD4  EE20 F00C          	lfsr	2,12
 16716  002CD8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16717  002CDA  26D9               	addwf	fsr2l,f,c
 16718  002CDC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16719  002CDE  22DA               	addwfc	fsr2h,f,c
 16720  002CE0  50DF               	movf	indf2,w,c
 16721                           
 16722                           ; Switch size 1, requested type "space"
 16723                           ; Number of cases is 2, Range of values is 16 to 17
 16724                           ; switch strategies available:
 16725                           ; Name         Instructions Cycles
 16726                           ; simple_byte            7     4 (average)
 16727                           ;	Chosen strategy is simple_byte
 16728  002CE2  0A10               	xorlw	16	; case 16
 16729  002CE4  B4D8               	btfsc	status,2,c
 16730  002CE6  D5F6               	goto	l667
 16731  002CE8  0A01               	xorlw	1	; case 17
 16732  002CEA  B4D8               	btfsc	status,2,c
 16733  002CEC  D76B               	goto	l18188
 16734                           
 16735                           ; BSR set to: 1
 16736                           ;miwi_mesh.c: 970: }
 16737  002CEE  EF84  F01D         	goto	l641
 16738  002CF2                     l18236:
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;miwi_mesh.c: 971: else
 16742                           ;miwi_mesh.c: 972: {
 16743                           ;miwi_mesh.c: 974: if( AcknowledgementSeq == MACRxPacket.Payload[11-1] &&
 16744                           ;miwi_mesh.c: 975: sourceShortAddress.Val == AcknowledgementAddr.Val)
 16745  002CF2  0101               	movlb	1	; () banked
 16746  002CF4  EE20 F00A          	lfsr	2,10
 16747  002CF8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16748  002CFA  26D9               	addwf	fsr2l,f,c
 16749  002CFC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16750  002CFE  22DA               	addwfc	fsr2h,f,c
 16751  002D00  0101               	movlb	1	; () banked
 16752  002D02  51F8               	movf	_AcknowledgementSeq& (0+255),w,b
 16753  002D04  18DE               	xorwf	postinc2,w,c
 16754  002D06  A4D8               	btfss	status,2,c
 16755  002D08  EF84  F01D         	goto	l641
 16756                           
 16757                           ; BSR set to: 1
 16758  002D0C  0101               	movlb	1	; () banked
 16759  002D0E  51B3               	movf	_AcknowledgementAddr& (0+255),w,b
 16760  002D10  0101               	movlb	1	; () banked
 16761  002D12  1978               	xorwf	MiWiTasks@sourceShortAddress& (0+255),w,b
 16762  002D14  E105               	bnz	u20401
 16763  002D16  0101               	movlb	1	; () banked
 16764  002D18  51B4               	movf	(_AcknowledgementAddr+1)& (0+255),w,b
 16765  002D1A  0101               	movlb	1	; () banked
 16766  002D1C  1979               	xorwf	(MiWiTasks@sourceShortAddress+1)& (0+255),w,b
 16767  002D1E  A4D8               	btfss	status,2,c
 16768  002D20                     u20401:
 16769  002D20  EF84  F01D         	goto	l641
 16770                           
 16771                           ; BSR set to: 1
 16772                           ;miwi_mesh.c: 976: {
 16773                           ;miwi_mesh.c: 977: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 16774  002D24  0101               	movlb	1	; () banked
 16775  002D26  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 16776                           
 16777                           ; BSR set to: 1
 16778                           ;miwi_mesh.c: 981: }
 16779                           ;miwi_mesh.c: 982: }
 16780                           
 16781                           ; BSR set to: 1
 16782                           ;miwi_mesh.c: 978: }
 16783                           ;miwi_mesh.c: 980: break;
 16784  002D28  EF84  F01D         	goto	l641
 16785  002D2C                     l18242:
 16786                           
 16787                           ; BSR set to: 1
 16788                           ;miwi_mesh.c: 983: else
 16789                           ;miwi_mesh.c: 984: {
 16790                           ;miwi_mesh.c: 989: rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
 16791  002D2C  0101               	movlb	1	; () banked
 16792  002D2E  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 16793  002D30  0FF5               	addlw	245
 16794  002D32  0101               	movlb	1	; () banked
 16795  002D34  6F97               	movwf	(_rxMessage+7)& (0+255),b
 16796                           
 16797                           ;miwi_mesh.c: 990: rxMessage.Payload = &MACRxPacket.Payload[11];
 16798  002D36  0E0B               	movlw	11
 16799  002D38  0101               	movlb	1	; () banked
 16800  002D3A  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16801  002D3C  0101               	movlb	1	; () banked
 16802  002D3E  6F95               	movwf	(_rxMessage+5)& (0+255),b
 16803  002D40  0E00               	movlw	0
 16804  002D42  0101               	movlb	1	; () banked
 16805  002D44  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16806  002D46  0101               	movlb	1	; () banked
 16807  002D48  6F96               	movwf	(_rxMessage+6)& (0+255),b
 16808                           
 16809                           ; BSR set to: 1
 16810                           ;miwi_mesh.c: 991: rxMessage.SourcePANID.Val = sourcePANID.Val;
 16811  002D4A  C175  F191         	movff	MiWiTasks@sourcePANID,_rxMessage+1
 16812  002D4E  C176  F192         	movff	MiWiTasks@sourcePANID+1,_rxMessage+2
 16813                           
 16814                           ; BSR set to: 1
 16815                           ;miwi_mesh.c: 992: if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF 
      +                          )
 16816  002D52  0101               	movlb	1	; () banked
 16817  002D54  EE20 F008          	lfsr	2,8
 16818  002D58  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16819  002D5A  26D9               	addwf	fsr2l,f,c
 16820  002D5C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16821  002D5E  22DA               	addwfc	fsr2h,f,c
 16822  002D60  28DE               	incf	postinc2,w,c
 16823  002D62  A4D8               	btfss	status,2,c
 16824  002D64  D012               	goto	l697
 16825                           
 16826                           ; BSR set to: 1
 16827  002D66  0101               	movlb	1	; () banked
 16828  002D68  EE20 F009          	lfsr	2,9
 16829  002D6C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 16830  002D6E  26D9               	addwf	fsr2l,f,c
 16831  002D70  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 16832  002D72  22DA               	addwfc	fsr2h,f,c
 16833  002D74  28DE               	incf	postinc2,w,c
 16834  002D76  A4D8               	btfss	status,2,c
 16835  002D78  D008               	goto	l697
 16836                           
 16837                           ; BSR set to: 1
 16838                           ;miwi_mesh.c: 993: {
 16839                           ;miwi_mesh.c: 998: if( MACRxPacket.flags.bits.sourcePrsnt )
 16840  002D7A  0101               	movlb	1	; () banked
 16841  002D7C  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 16842  002D7E  D005               	goto	l697
 16843                           
 16844                           ; BSR set to: 1
 16845                           ;miwi_mesh.c: 999: {
 16846                           ;miwi_mesh.c: 1000: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
 16847  002D80  C19B  F193         	movff	_MACRxPacket+1,_rxMessage+3
 16848  002D84  C19C  F194         	movff	_MACRxPacket+2,_rxMessage+4
 16849                           
 16850                           ;miwi_mesh.c: 1001: }
 16851  002D88  D00C               	goto	l18258
 16852  002D8A                     l697:
 16853                           
 16854                           ; BSR set to: 1
 16855                           ;miwi_mesh.c: 1010: else
 16856                           ;miwi_mesh.c: 1011: {
 16857                           ;miwi_mesh.c: 1012: rxMessage.flags.bits.altSrcAddr = 1;
 16858  002D8A  0101               	movlb	1	; () banked
 16859  002D8C  8F90               	bsf	_rxMessage& (0+255),7,b
 16860                           
 16861                           ; BSR set to: 1
 16862                           ;miwi_mesh.c: 1013: rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
 16863  002D8E  0E08               	movlw	8
 16864  002D90  0101               	movlb	1	; () banked
 16865  002D92  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16866  002D94  0101               	movlb	1	; () banked
 16867  002D96  6F93               	movwf	(_rxMessage+3)& (0+255),b
 16868  002D98  0E00               	movlw	0
 16869  002D9A  0101               	movlb	1	; () banked
 16870  002D9C  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16871  002D9E  0101               	movlb	1	; () banked
 16872  002DA0  6F94               	movwf	(_rxMessage+4)& (0+255),b
 16873  002DA2                     l18258:
 16874                           
 16875                           ; BSR set to: 1
 16876                           ;miwi_mesh.c: 1014: }
 16877                           ;miwi_mesh.c: 1015: rxMessage.flags.bits.srcPrsnt = 1;
 16878  002DA2  0101               	movlb	1	; () banked
 16879  002DA4  8D90               	bsf	_rxMessage& (0+255),6,b
 16880                           
 16881                           ; BSR set to: 1
 16882                           ;miwi_mesh.c: 1017: if( rxMessage.PayloadSize > 0 )
 16883  002DA6  0101               	movlb	1	; () banked
 16884  002DA8  5197               	movf	(_rxMessage+7)& (0+255),w,b
 16885  002DAA  B4D8               	btfsc	status,2,c
 16886  002DAC  EF84  F01D         	goto	l641
 16887                           
 16888                           ; BSR set to: 1
 16889                           ;miwi_mesh.c: 1018: {
 16890                           ;miwi_mesh.c: 1019: MiWiStateMachine.bits.RxHasUserData = 1;
 16891  002DB0  0101               	movlb	1	; () banked
 16892  002DB2  85B5               	bsf	_MiWiStateMachine& (0+255),2,b
 16893                           
 16894                           ; BSR set to: 1
 16895                           ;miwi_mesh.c: 1020: }
 16896                           ;miwi_mesh.c: 1022: }
 16897                           ;miwi_mesh.c: 1023: }
 16898                           
 16899                           ; BSR set to: 1
 16900  002DB4  EF84  F01D         	goto	l641
 16901  002DB8                     l18264:
 16902                           
 16903                           ; BSR set to: 1
 16904                           ;miwi_mesh.c: 1024: else
 16905                           ;miwi_mesh.c: 1025: {
 16906                           ;miwi_mesh.c: 1030: if( MACRxPacket.Payload[0] > 0 )
 16907  002DB8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 16908  002DBC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 16909  002DC0  50DF               	movf	indf2,w,c
 16910  002DC2  B4D8               	btfsc	status,2,c
 16911  002DC4  EF84  F01D         	goto	l641
 16912                           
 16913                           ; BSR set to: 1
 16914                           ;miwi_mesh.c: 1031: {
 16915                           ;miwi_mesh.c: 1032: MACRxPacket.Payload[0]--;
 16916  002DC8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 16917  002DCC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 16918  002DD0  06DF               	decf	indf2,f,c
 16919                           
 16920                           ; BSR set to: 1
 16921                           ;miwi_mesh.c: 1033: {TxData = 0;};
 16922  002DD2  0E00               	movlw	0
 16923  002DD4  0101               	movlb	1	; () banked
 16924  002DD6  6FC6               	movwf	_TxData& (0+255),b
 16925                           
 16926                           ; BSR set to: 1
 16927                           ;miwi_mesh.c: 1034: for(i = 0; i < MACRxPacket.PayloadLen; i++)
 16928  002DD8  0E00               	movlw	0
 16929  002DDA  0101               	movlb	1	; () banked
 16930  002DDC  6F7C               	movwf	MiWiTasks@i& (0+255),b
 16931  002DDE  D01A               	goto	l18278
 16932  002DE0                     l18272:
 16933                           
 16934                           ; BSR set to: 1
 16935                           ;miwi_mesh.c: 1035: {
 16936                           ;miwi_mesh.c: 1036: TxBuffer[TxData++] = MACRxPacket.Payload[i];
 16937  002DE0  0101               	movlb	1	; () banked
 16938  002DE2  517C               	movf	MiWiTasks@i& (0+255),w,b
 16939  002DE4  0D01               	mullw	1
 16940  002DE6  50F3               	movf	prodl,w,c
 16941  002DE8  0101               	movlb	1	; () banked
 16942  002DEA  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 16943  002DEC  6ED9               	movwf	fsr2l,c
 16944  002DEE  50F4               	movf	prodh,w,c
 16945  002DF0  0101               	movlb	1	; () banked
 16946  002DF2  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 16947  002DF4  6EDA               	movwf	fsr2h,c
 16948  002DF6  0101               	movlb	1	; () banked
 16949  002DF8  51C6               	movf	_TxData& (0+255),w,b
 16950  002DFA  0D01               	mullw	1
 16951  002DFC  0EA6               	movlw	low _TxBuffer
 16952  002DFE  24F3               	addwf	prodl,w,c
 16953  002E00  6EE1               	movwf	fsr1l,c
 16954  002E02  0E02               	movlw	high _TxBuffer
 16955  002E04  20F4               	addwfc	prodh,w,c
 16956  002E06  6EE2               	movwf	fsr1h,c
 16957  002E08  CFDF FFE7          	movff	indf2,indf1
 16958                           
 16959                           ; BSR set to: 1
 16960  002E0C  0101               	movlb	1	; () banked
 16961  002E0E  2BC6               	incf	_TxData& (0+255),f,b
 16962                           
 16963                           ; BSR set to: 1
 16964  002E10  0101               	movlb	1	; () banked
 16965  002E12  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 16966  002E14                     l18278:
 16967                           
 16968                           ; BSR set to: 1
 16969  002E14  0101               	movlb	1	; () banked
 16970  002E16  519F               	movf	(_MACRxPacket+5)& (0+255),w,b
 16971  002E18  0101               	movlb	1	; () banked
 16972  002E1A  5D7C               	subwf	MiWiTasks@i& (0+255),w,b
 16973  002E1C  A0D8               	btfss	status,0,c
 16974  002E1E  D7E0               	goto	l18272
 16975                           
 16976                           ; BSR set to: 1
 16977                           ;miwi_mesh.c: 1037: }
 16978                           ;miwi_mesh.c: 1039: if( (destShortAddress.v[1] == myShortAddress.v[1]) &&
 16979                           ;miwi_mesh.c: 1040: (TxBuffer[11] == 0x00) &&
 16980                           ;miwi_mesh.c: 1041: (TxBuffer[12] == 0x30) )
 16981                           
 16982                           ; BSR set to: 1
 16983  002E20  0101               	movlb	1	; () banked
 16984  002E22  51F3               	movf	(_myShortAddress+1)& (0+255),w,b
 16985  002E24  0101               	movlb	1	; () banked
 16986  002E26  1974               	xorwf	(MiWiTasks@destShortAddress+1)& (0+255),w,b
 16987  002E28  A4D8               	btfss	status,2,c
 16988  002E2A  D03C               	goto	l18298
 16989                           
 16990                           ; BSR set to: 1
 16991  002E2C  0102               	movlb	2	; () banked
 16992  002E2E  51B1               	movf	(_TxBuffer+11)& (0+255),w,b
 16993  002E30  A4D8               	btfss	status,2,c
 16994  002E32  D038               	goto	l18298
 16995                           
 16996                           ; BSR set to: 2
 16997  002E34  0E30               	movlw	48
 16998  002E36  0102               	movlb	2	; () banked
 16999  002E38  19B2               	xorwf	(_TxBuffer+12)& (0+255),w,b
 17000  002E3A  A4D8               	btfss	status,2,c
 17001  002E3C  D033               	goto	l18298
 17002                           
 17003                           ; BSR set to: 2
 17004                           ;miwi_mesh.c: 1042: {
 17005                           ;miwi_mesh.c: 1043: MTP.flags.Val = 0;
 17006  002E3E  0E00               	movlw	0
 17007  002E40  0101               	movlb	1	; () banked
 17008  002E42  6FAD               	movwf	_MTP& (0+255),b
 17009                           
 17010                           ; BSR set to: 1
 17011                           ;miwi_mesh.c: 1044: MTP.flags.bits.ackReq = 1;
 17012  002E44  0101               	movlb	1	; () banked
 17013  002E46  8BAD               	bsf	_MTP& (0+255),5,b
 17014                           
 17015                           ; BSR set to: 1
 17016                           ;miwi_mesh.c: 1053: tempShortAddress.Val = destShortAddress.Val;
 17017  002E48  C173  F1F4         	movff	MiWiTasks@destShortAddress,_tempShortAddress
 17018  002E4C  C174  F1F5         	movff	MiWiTasks@destShortAddress+1,_tempShortAddress+1
 17019                           
 17020                           ; BSR set to: 1
 17021                           ;miwi_mesh.c: 1054: if( (i = SearchForShortAddress()) != 0xFF )
 17022  002E50  EC82  F057         	call	_SearchForShortAddress	;wreg free
 17023  002E54  0101               	movlb	1	; () banked
 17024  002E56  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17025  002E58  0101               	movlb	1	; () banked
 17026  002E5A  297C               	incf	MiWiTasks@i& (0+255),w,b
 17027  002E5C  B4D8               	btfsc	status,2,c
 17028  002E5E  EF84  F01D         	goto	l641
 17029                           
 17030                           ; BSR set to: 1
 17031                           ;miwi_mesh.c: 1055: {
 17032                           ;miwi_mesh.c: 1056: MTP.DestAddress = ConnectionTable[i].Address;
 17033  002E62  0101               	movlb	1	; () banked
 17034  002E64  517C               	movf	MiWiTasks@i& (0+255),w,b
 17035  002E66  0D09               	mullw	9
 17036  002E68  0E04               	movlw	4
 17037  002E6A  26F3               	addwf	prodl,f,c
 17038  002E6C  0E00               	movlw	0
 17039  002E6E  22F4               	addwfc	prodh,f,c
 17040  002E70  0E00               	movlw	low _ConnectionTable
 17041  002E72  24F3               	addwf	prodl,w,c
 17042  002E74  0101               	movlb	1	; () banked
 17043  002E76  6FAE               	movwf	(_MTP+1)& (0+255),b
 17044  002E78  0E06               	movlw	high _ConnectionTable
 17045  002E7A  20F4               	addwfc	prodh,w,c
 17046  002E7C  0101               	movlb	1	; () banked
 17047  002E7E  6FAF               	movwf	(_MTP+2)& (0+255),b
 17048                           
 17049                           ; BSR set to: 1
 17050                           ;miwi_mesh.c: 1057: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 17051  002E80  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 17052  002E84  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 17053  002E88  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 17054  002E8C  0EA6               	movlw	low _TxBuffer
 17055  002E8E  0101               	movlb	1	; () banked
 17056  002E90  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 17057  002E92  0E02               	movlw	high _TxBuffer
 17058  002E94  0101               	movlb	1	; () banked
 17059  002E96  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 17060  002E98  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 17061  002E9C  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 17062                           
 17063                           ;miwi_mesh.c: 1058: }
 17064                           ;miwi_mesh.c: 1060: }
 17065  002EA0  EF84  F01D         	goto	l641
 17066  002EA4                     l18298:
 17067                           
 17068                           ;miwi_mesh.c: 1061: else
 17069                           ;miwi_mesh.c: 1062: {
 17070                           ;miwi_mesh.c: 1063: RouteMessage(destPANID, destShortAddress, MACRxPacket.flags.bits.sec
      +                          En);
 17071  002EA4  C16D  F13D         	movff	MiWiTasks@destPANID,RouteMessage@PANID
 17072  002EA8  C16E  F13E         	movff	MiWiTasks@destPANID+1,RouteMessage@PANID+1
 17073  002EAC  C173  F13F         	movff	MiWiTasks@destShortAddress,RouteMessage@ShortAddress
 17074  002EB0  C174  F140         	movff	MiWiTasks@destShortAddress+1,RouteMessage@ShortAddress+1
 17075  002EB4  0E00               	movlw	0
 17076  002EB6  B79A               	btfsc	_MACRxPacket& (0+255),3,b
 17077  002EB8  0E01               	movlw	1
 17078  002EBA  0101               	movlb	1	; () banked
 17079  002EBC  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 17080  002EBE  EC07  F024         	call	_RouteMessage	;wreg free
 17081                           
 17082                           ;miwi_mesh.c: 1064: }
 17083                           ;miwi_mesh.c: 1065: }
 17084                           ;miwi_mesh.c: 1067: }
 17085                           ;miwi_mesh.c: 1069: }
 17086                           ;miwi_mesh.c: 1070: break;
 17087  002EC2  EF84  F01D         	goto	l641
 17088  002EC6                     l18300:
 17089                           
 17090                           ;miwi_mesh.c: 1074: {
 17091                           ;miwi_mesh.c: 1075: uint8_t rxIndex;
 17092                           ;miwi_mesh.c: 1080: rxIndex = 4;
 17093  002EC6  0E04               	movlw	4
 17094  002EC8  0101               	movlb	1	; () banked
 17095  002ECA  6F6F               	movwf	MiWiTasks@rxIndex& (0+255),b
 17096                           
 17097                           ; BSR set to: 1
 17098                           ;miwi_mesh.c: 1084: if(MACRxPacket.Payload[rxIndex+4] != 0x4D )
 17099  002ECC  0101               	movlb	1	; () banked
 17100  002ECE  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17101  002ED0  0101               	movlb	1	; () banked
 17102  002ED2  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17103  002ED4  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17104  002ED6  0E04               	movlw	4
 17105  002ED8  0101               	movlb	1	; () banked
 17106  002EDA  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17107  002EDC  0E00               	movlw	0
 17108  002EDE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17109  002EE0  0101               	movlb	1	; () banked
 17110  002EE2  514A               	movf	??_MiWiTasks& (0+255),w,b
 17111  002EE4  0101               	movlb	1	; () banked
 17112  002EE6  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17113  002EE8  6ED9               	movwf	fsr2l,c
 17114  002EEA  0101               	movlb	1	; () banked
 17115  002EEC  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17116  002EEE  0101               	movlb	1	; () banked
 17117  002EF0  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17118  002EF2  6EDA               	movwf	fsr2h,c
 17119  002EF4  0E4D               	movlw	77
 17120  002EF6  18DE               	xorwf	postinc2,w,c
 17121  002EF8  A4D8               	btfss	status,2,c
 17122  002EFA  EF84  F01D         	goto	l641
 17123                           
 17124                           ; BSR set to: 1
 17125                           ;miwi_mesh.c: 1091: }
 17126                           ;miwi_mesh.c: 1092: }
 17127                           ;miwi_mesh.c: 1095: {
 17128                           ;miwi_mesh.c: 1101: uint8_t coordinatorNumber = MACRxPacket.Payload[3];
 17129                           
 17130                           ; BSR set to: 1
 17131                           
 17132                           ; BSR set to: 1
 17133                           ;miwi_mesh.c: 1085: {
 17134                           ;miwi_mesh.c: 1089: {
 17135                           ;miwi_mesh.c: 1090: break;
 17136  002EFE  0101               	movlb	1	; () banked
 17137  002F00  EE20 F003          	lfsr	2,3
 17138  002F04  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17139  002F06  26D9               	addwf	fsr2l,f,c
 17140  002F08  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17141  002F0A  22DA               	addwfc	fsr2h,f,c
 17142  002F0C  50DF               	movf	indf2,w,c
 17143  002F0E  0101               	movlb	1	; () banked
 17144  002F10  6F68               	movwf	MiWiTasks@coordinatorNumber& (0+255),b
 17145                           
 17146                           ; BSR set to: 1
 17147                           ;miwi_mesh.c: 1103: uint8_t mask = 1<<(coordinatorNumber);
 17148  002F12  C168  F14A         	movff	MiWiTasks@coordinatorNumber,??_MiWiTasks
 17149  002F16  0E01               	movlw	1
 17150  002F18  0101               	movlb	1	; () banked
 17151  002F1A  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17152  002F1C  0101               	movlb	1	; () banked
 17153  002F1E  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 17154  002F20  D003               	goto	u20524
 17155  002F22                     u20525:
 17156  002F22  0101               	movlb	1	; () banked
 17157  002F24  90D8               	bcf	status,0,c
 17158  002F26  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 17159  002F28                     u20524:
 17160  002F28  0101               	movlb	1	; () banked
 17161  002F2A  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 17162  002F2C  D7FA               	goto	u20525
 17163  002F2E  0101               	movlb	1	; () banked
 17164  002F30  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17165  002F32  0101               	movlb	1	; () banked
 17166  002F34  6F60               	movwf	MiWiTasks@mask& (0+255),b
 17167                           
 17168                           ; BSR set to: 1
 17169                           ;miwi_mesh.c: 1109: if(MACRxPacket.Payload[2] == 0x00)
 17170  002F36  0101               	movlb	1	; () banked
 17171  002F38  EE20 F002          	lfsr	2,2
 17172  002F3C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17173  002F3E  26D9               	addwf	fsr2l,f,c
 17174  002F40  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17175  002F42  22DA               	addwfc	fsr2h,f,c
 17176  002F44  50DF               	movf	indf2,w,c
 17177  002F46  A4D8               	btfss	status,2,c
 17178  002F48  D004               	goto	l18314
 17179                           
 17180                           ; BSR set to: 1
 17181                           ;miwi_mesh.c: 1111: {
 17182                           ;miwi_mesh.c: 1113: knownCoordinators |= mask;
 17183  002F4A  0101               	movlb	1	; () banked
 17184  002F4C  5160               	movf	MiWiTasks@mask& (0+255),w,b
 17185  002F4E  0101               	movlb	1	; () banked
 17186  002F50  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 17187  002F52                     l18314:
 17188                           
 17189                           ; BSR set to: 1
 17190                           ;miwi_mesh.c: 1114: }
 17191                           ;miwi_mesh.c: 1116: RoutingTable[coordinatorNumber] = MACRxPacket.Payload[rxIndex+6];
 17192  002F52  0101               	movlb	1	; () banked
 17193  002F54  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17194  002F56  0101               	movlb	1	; () banked
 17195  002F58  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17196  002F5A  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17197  002F5C  0E06               	movlw	6
 17198  002F5E  0101               	movlb	1	; () banked
 17199  002F60  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17200  002F62  0E00               	movlw	0
 17201  002F64  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17202  002F66  0101               	movlb	1	; () banked
 17203  002F68  514A               	movf	??_MiWiTasks& (0+255),w,b
 17204  002F6A  0101               	movlb	1	; () banked
 17205  002F6C  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17206  002F6E  6ED9               	movwf	fsr2l,c
 17207  002F70  0101               	movlb	1	; () banked
 17208  002F72  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17209  002F74  0101               	movlb	1	; () banked
 17210  002F76  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17211  002F78  6EDA               	movwf	fsr2h,c
 17212  002F7A  0101               	movlb	1	; () banked
 17213  002F7C  5168               	movf	MiWiTasks@coordinatorNumber& (0+255),w,b
 17214  002F7E  0D01               	mullw	1
 17215  002F80  0E71               	movlw	low _RoutingTable
 17216  002F82  24F3               	addwf	prodl,w,c
 17217  002F84  6EE1               	movwf	fsr1l,c
 17218  002F86  0E00               	movlw	high _RoutingTable
 17219  002F88  20F4               	addwfc	prodh,w,c
 17220  002F8A  6EE2               	movwf	fsr1h,c
 17221  002F8C  CFDF FFE7          	movff	indf2,indf1
 17222                           
 17223                           ; BSR set to: 1
 17224                           ;miwi_mesh.c: 1120: }
 17225                           ;miwi_mesh.c: 1124: {
 17226                           ;miwi_mesh.c: 1125: uint8_t entry;
 17227                           ;miwi_mesh.c: 1127: tempPANID.v[0] = MACRxPacket.Payload[0];
 17228  002F90  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17229  002F94  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17230  002F98  50DF               	movf	indf2,w,c
 17231  002F9A  0101               	movlb	1	; () banked
 17232  002F9C  6FBB               	movwf	_tempPANID& (0+255),b
 17233                           
 17234                           ; BSR set to: 1
 17235                           ;miwi_mesh.c: 1128: tempPANID.v[1] = MACRxPacket.Payload[1];
 17236  002F9E  0101               	movlb	1	; () banked
 17237  002FA0  EE20 F001          	lfsr	2,1
 17238  002FA4  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17239  002FA6  26D9               	addwf	fsr2l,f,c
 17240  002FA8  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17241  002FAA  22DA               	addwfc	fsr2h,f,c
 17242  002FAC  50DF               	movf	indf2,w,c
 17243  002FAE  0101               	movlb	1	; () banked
 17244  002FB0  6FBC               	movwf	(_tempPANID+1)& (0+255),b
 17245                           
 17246                           ; BSR set to: 1
 17247                           ;miwi_mesh.c: 1129: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17248  002FB2  0101               	movlb	1	; () banked
 17249  002FB4  EE20 F002          	lfsr	2,2
 17250  002FB8  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17251  002FBA  26D9               	addwf	fsr2l,f,c
 17252  002FBC  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17253  002FBE  22DA               	addwfc	fsr2h,f,c
 17254  002FC0  50DF               	movf	indf2,w,c
 17255  002FC2  0101               	movlb	1	; () banked
 17256  002FC4  6FF4               	movwf	_tempShortAddress& (0+255),b
 17257                           
 17258                           ; BSR set to: 1
 17259                           ;miwi_mesh.c: 1130: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17260  002FC6  0101               	movlb	1	; () banked
 17261  002FC8  EE20 F003          	lfsr	2,3
 17262  002FCC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17263  002FCE  26D9               	addwf	fsr2l,f,c
 17264  002FD0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17265  002FD2  22DA               	addwfc	fsr2h,f,c
 17266  002FD4  50DF               	movf	indf2,w,c
 17267  002FD6  0101               	movlb	1	; () banked
 17268  002FD8  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17269                           
 17270                           ; BSR set to: 1
 17271                           ;miwi_mesh.c: 1132: entry = SearchForShortAddress();
 17272  002FDA  EC82  F057         	call	_SearchForShortAddress	;wreg free
 17273  002FDE  0101               	movlb	1	; () banked
 17274  002FE0  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 17275                           
 17276                           ; BSR set to: 1
 17277                           ;miwi_mesh.c: 1133: if(entry == 0xFF)
 17278  002FE2  0101               	movlb	1	; () banked
 17279  002FE4  297A               	incf	MiWiTasks@entry& (0+255),w,b
 17280  002FE6  A4D8               	btfss	status,2,c
 17281  002FE8  D005               	goto	l18330
 17282                           
 17283                           ; BSR set to: 1
 17284                           ;miwi_mesh.c: 1134: {
 17285                           ;miwi_mesh.c: 1137: entry = findNextNetworkEntry();
 17286  002FEA  ECCE  F05B         	call	_findNextNetworkEntry	;wreg free
 17287  002FEE  0101               	movlb	1	; () banked
 17288  002FF0  6F7A               	movwf	MiWiTasks@entry& (0+255),b
 17289                           
 17290                           ;miwi_mesh.c: 1138: }
 17291  002FF2  D03E               	goto	l18348
 17292  002FF4                     l18330:
 17293                           
 17294                           ; BSR set to: 1
 17295                           ;miwi_mesh.c: 1139: else
 17296                           ;miwi_mesh.c: 1140: {
 17297                           ;miwi_mesh.c: 1141: for(i = 0; i < 4; i++)
 17298  002FF4  0E00               	movlw	0
 17299  002FF6  0101               	movlb	1	; () banked
 17300  002FF8  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17301  002FFA                     l18332:
 17302                           
 17303                           ; BSR set to: 1
 17304  002FFA  0E03               	movlw	3
 17305  002FFC  0101               	movlb	1	; () banked
 17306  002FFE  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17307  003000  D001               	goto	l18336
 17308  003002  D030               	goto	l18344
 17309  003004                     l18336:
 17310                           
 17311                           ; BSR set to: 1
 17312                           ;miwi_mesh.c: 1142: {
 17313                           ;miwi_mesh.c: 1143: if( ConnectionTable[entry].Address[i] != MACRxPacket.SourceAddress[i
      +                          ] )
 17314  003004  0101               	movlb	1	; () banked
 17315  003006  517C               	movf	MiWiTasks@i& (0+255),w,b
 17316  003008  0D01               	mullw	1
 17317  00300A  50F3               	movf	prodl,w,c
 17318  00300C  0101               	movlb	1	; () banked
 17319  00300E  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 17320  003010  6ED9               	movwf	fsr2l,c
 17321  003012  50F4               	movf	prodh,w,c
 17322  003014  0101               	movlb	1	; () banked
 17323  003016  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 17324  003018  6EDA               	movwf	fsr2h,c
 17325  00301A  0101               	movlb	1	; () banked
 17326  00301C  517C               	movf	MiWiTasks@i& (0+255),w,b
 17327  00301E  0D01               	mullw	1
 17328  003020  0E04               	movlw	4
 17329  003022  26F3               	addwf	prodl,f,c
 17330  003024  0E00               	movlw	0
 17331  003026  22F4               	addwfc	prodh,f,c
 17332  003028  0E00               	movlw	low _ConnectionTable
 17333  00302A  0101               	movlb	1	; () banked
 17334  00302C  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17335  00302E  0E06               	movlw	high _ConnectionTable
 17336  003030  0101               	movlb	1	; () banked
 17337  003032  6F4C               	movwf	(??_MiWiTasks+2)& (0+255),b
 17338  003034  50F3               	movf	prodl,w,c
 17339  003036  0101               	movlb	1	; () banked
 17340  003038  274B               	addwf	(??_MiWiTasks+1)& (0+255),f,b
 17341  00303A  50F4               	movf	prodh,w,c
 17342  00303C  0101               	movlb	1	; () banked
 17343  00303E  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 17344  003040  0101               	movlb	1	; () banked
 17345  003042  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17346  003044  0D09               	mullw	9
 17347  003046  50F3               	movf	prodl,w,c
 17348  003048  0101               	movlb	1	; () banked
 17349  00304A  254B               	addwf	(??_MiWiTasks+1)& (0+255),w,b
 17350  00304C  6EE1               	movwf	fsr1l,c
 17351  00304E  50F4               	movf	prodh,w,c
 17352  003050  0101               	movlb	1	; () banked
 17353  003052  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 17354  003054  6EE2               	movwf	fsr1h,c
 17355  003056  50DE               	movf	postinc2,w,c
 17356  003058  18E6               	xorwf	postinc1,w,c
 17357  00305A  A4D8               	btfss	status,2,c
 17358  00305C  D003               	goto	l18344
 17359                           
 17360                           ; BSR set to: 1
 17361                           
 17362                           ; BSR set to: 1
 17363                           
 17364                           ; BSR set to: 1
 17365                           ;miwi_mesh.c: 1144: {
 17366                           ;miwi_mesh.c: 1145: break;
 17367  00305E  0101               	movlb	1	; () banked
 17368  003060  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17369  003062  D7CB               	goto	l18332
 17370  003064                     l18344:
 17371                           
 17372                           ; BSR set to: 1
 17373                           ;miwi_mesh.c: 1146: }
 17374                           ;miwi_mesh.c: 1147: }
 17375                           ;miwi_mesh.c: 1148: if( i >= 4 )
 17376  003064  0E03               	movlw	3
 17377  003066  0101               	movlb	1	; () banked
 17378  003068  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17379  00306A  D002               	goto	l18348
 17380                           
 17381                           ; BSR set to: 1
 17382                           ;miwi_mesh.c: 1149: {
 17383                           ;miwi_mesh.c: 1150: entry = 0xFF;
 17384  00306C  0101               	movlb	1	; () banked
 17385  00306E  697A               	setf	MiWiTasks@entry& (0+255),b
 17386  003070                     l18348:
 17387                           
 17388                           ; BSR set to: 1
 17389                           ;miwi_mesh.c: 1151: }
 17390                           ;miwi_mesh.c: 1152: }
 17391                           ;miwi_mesh.c: 1154: if( entry < 0xFF )
 17392  003070  0101               	movlb	1	; () banked
 17393  003072  297A               	incf	MiWiTasks@entry& (0+255),w,b
 17394  003074  B4D8               	btfsc	status,2,c
 17395  003076  D0A9               	goto	l18366
 17396                           
 17397                           ; BSR set to: 1
 17398                           ;miwi_mesh.c: 1155: {
 17399                           ;miwi_mesh.c: 1156: ConnectionTable[entry].PANID.Val = tempPANID.Val;
 17400  003078  0101               	movlb	1	; () banked
 17401  00307A  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17402  00307C  0D09               	mullw	9
 17403  00307E  0E00               	movlw	low _ConnectionTable
 17404  003080  24F3               	addwf	prodl,w,c
 17405  003082  6ED9               	movwf	fsr2l,c
 17406  003084  0E06               	movlw	high _ConnectionTable
 17407  003086  20F4               	addwfc	prodh,w,c
 17408  003088  6EDA               	movwf	fsr2h,c
 17409  00308A  C1BB  FFDE         	movff	_tempPANID,postinc2
 17410  00308E  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 17411                           
 17412                           ;miwi_mesh.c: 1157: ConnectionTable[entry].AltAddress.Val = tempShortAddress.Val;
 17413  003092  0101               	movlb	1	; () banked
 17414  003094  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17415  003096  0D09               	mullw	9
 17416  003098  0E02               	movlw	2
 17417  00309A  26F3               	addwf	prodl,f,c
 17418  00309C  0E00               	movlw	0
 17419  00309E  22F4               	addwfc	prodh,f,c
 17420  0030A0  0E00               	movlw	low _ConnectionTable
 17421  0030A2  24F3               	addwf	prodl,w,c
 17422  0030A4  6ED9               	movwf	fsr2l,c
 17423  0030A6  0E06               	movlw	high _ConnectionTable
 17424  0030A8  20F4               	addwfc	prodh,w,c
 17425  0030AA  6EDA               	movwf	fsr2h,c
 17426  0030AC  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 17427  0030B0  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 17428                           
 17429                           ; BSR set to: 1
 17430                           ;miwi_mesh.c: 1159: for(i = 0; i < 4; i++)
 17431  0030B4  0E00               	movlw	0
 17432  0030B6  0101               	movlb	1	; () banked
 17433  0030B8  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17434  0030BA                     l18354:
 17435                           
 17436                           ; BSR set to: 1
 17437  0030BA  0E03               	movlw	3
 17438  0030BC  0101               	movlb	1	; () banked
 17439  0030BE  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17440  0030C0  D001               	goto	l18358
 17441  0030C2  D02E               	goto	l18364
 17442  0030C4                     l18358:
 17443                           
 17444                           ; BSR set to: 1
 17445                           ;miwi_mesh.c: 1160: {
 17446                           ;miwi_mesh.c: 1161: ConnectionTable[entry].Address[i] = MACRxPacket.SourceAddress[i];
 17447  0030C4  0101               	movlb	1	; () banked
 17448  0030C6  517C               	movf	MiWiTasks@i& (0+255),w,b
 17449  0030C8  0D01               	mullw	1
 17450  0030CA  50F3               	movf	prodl,w,c
 17451  0030CC  0101               	movlb	1	; () banked
 17452  0030CE  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 17453  0030D0  6ED9               	movwf	fsr2l,c
 17454  0030D2  50F4               	movf	prodh,w,c
 17455  0030D4  0101               	movlb	1	; () banked
 17456  0030D6  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 17457  0030D8  6EDA               	movwf	fsr2h,c
 17458  0030DA  0101               	movlb	1	; () banked
 17459  0030DC  517C               	movf	MiWiTasks@i& (0+255),w,b
 17460  0030DE  0D01               	mullw	1
 17461  0030E0  0E04               	movlw	4
 17462  0030E2  26F3               	addwf	prodl,f,c
 17463  0030E4  0E00               	movlw	0
 17464  0030E6  22F4               	addwfc	prodh,f,c
 17465  0030E8  0E00               	movlw	low _ConnectionTable
 17466  0030EA  0101               	movlb	1	; () banked
 17467  0030EC  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17468  0030EE  0E06               	movlw	high _ConnectionTable
 17469  0030F0  0101               	movlb	1	; () banked
 17470  0030F2  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17471  0030F4  50F3               	movf	prodl,w,c
 17472  0030F6  0101               	movlb	1	; () banked
 17473  0030F8  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17474  0030FA  50F4               	movf	prodh,w,c
 17475  0030FC  0101               	movlb	1	; () banked
 17476  0030FE  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17477  003100  0101               	movlb	1	; () banked
 17478  003102  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17479  003104  0D09               	mullw	9
 17480  003106  50F3               	movf	prodl,w,c
 17481  003108  0101               	movlb	1	; () banked
 17482  00310A  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17483  00310C  6EE1               	movwf	fsr1l,c
 17484  00310E  50F4               	movf	prodh,w,c
 17485  003110  0101               	movlb	1	; () banked
 17486  003112  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17487  003114  6EE2               	movwf	fsr1h,c
 17488  003116  CFDF FFE7          	movff	indf2,indf1
 17489                           
 17490                           ; BSR set to: 1
 17491  00311A  0101               	movlb	1	; () banked
 17492  00311C  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17493  00311E  D7CD               	goto	l18354
 17494  003120                     l18364:
 17495                           
 17496                           ; BSR set to: 1
 17497                           ;miwi_mesh.c: 1162: }
 17498                           ;miwi_mesh.c: 1165: ConnectionTable[entry].status.Val = 0;
 17499  003120  0101               	movlb	1	; () banked
 17500  003122  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17501  003124  0D09               	mullw	9
 17502  003126  0E08               	movlw	8
 17503  003128  26F3               	addwf	prodl,f,c
 17504  00312A  0E00               	movlw	0
 17505  00312C  22F4               	addwfc	prodh,f,c
 17506  00312E  0E00               	movlw	low _ConnectionTable
 17507  003130  24F3               	addwf	prodl,w,c
 17508  003132  6ED9               	movwf	fsr2l,c
 17509  003134  0E06               	movlw	high _ConnectionTable
 17510  003136  20F4               	addwfc	prodh,w,c
 17511  003138  6EDA               	movwf	fsr2h,c
 17512  00313A  0E00               	movlw	0
 17513  00313C  6EDF               	movwf	indf2,c
 17514                           
 17515                           ;miwi_mesh.c: 1166: ConnectionTable[entry].status.bits.directConnection = 1;
 17516  00313E  0101               	movlb	1	; () banked
 17517  003140  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17518  003142  0D09               	mullw	9
 17519  003144  0E08               	movlw	8
 17520  003146  26F3               	addwf	prodl,f,c
 17521  003148  0E00               	movlw	0
 17522  00314A  22F4               	addwfc	prodh,f,c
 17523  00314C  0E00               	movlw	low _ConnectionTable
 17524  00314E  24F3               	addwf	prodl,w,c
 17525  003150  6ED9               	movwf	fsr2l,c
 17526  003152  0E06               	movlw	high _ConnectionTable
 17527  003154  20F4               	addwfc	prodh,w,c
 17528  003156  6EDA               	movwf	fsr2h,c
 17529  003158  82DF               	bsf	indf2,1,c
 17530                           
 17531                           ;miwi_mesh.c: 1167: ConnectionTable[entry].status.bits.RXOnWhenIdle = 1;
 17532  00315A  0101               	movlb	1	; () banked
 17533  00315C  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17534  00315E  0D09               	mullw	9
 17535  003160  0E08               	movlw	8
 17536  003162  26F3               	addwf	prodl,f,c
 17537  003164  0E00               	movlw	0
 17538  003166  22F4               	addwfc	prodh,f,c
 17539  003168  0E00               	movlw	low _ConnectionTable
 17540  00316A  24F3               	addwf	prodl,w,c
 17541  00316C  6ED9               	movwf	fsr2l,c
 17542  00316E  0E06               	movlw	high _ConnectionTable
 17543  003170  20F4               	addwfc	prodh,w,c
 17544  003172  6EDA               	movwf	fsr2h,c
 17545  003174  80DF               	bsf	indf2,0,c
 17546                           
 17547                           ;miwi_mesh.c: 1168: ConnectionTable[entry].status.bits.longAddressValid = 1;
 17548  003176  0101               	movlb	1	; () banked
 17549  003178  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17550  00317A  0D09               	mullw	9
 17551  00317C  0E08               	movlw	8
 17552  00317E  26F3               	addwf	prodl,f,c
 17553  003180  0E00               	movlw	0
 17554  003182  22F4               	addwfc	prodh,f,c
 17555  003184  0E00               	movlw	low _ConnectionTable
 17556  003186  24F3               	addwf	prodl,w,c
 17557  003188  6ED9               	movwf	fsr2l,c
 17558  00318A  0E06               	movlw	high _ConnectionTable
 17559  00318C  20F4               	addwfc	prodh,w,c
 17560  00318E  6EDA               	movwf	fsr2h,c
 17561  003190  84DF               	bsf	indf2,2,c
 17562                           
 17563                           ;miwi_mesh.c: 1169: ConnectionTable[entry].status.bits.shortAddressValid = 1;
 17564  003192  0101               	movlb	1	; () banked
 17565  003194  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17566  003196  0D09               	mullw	9
 17567  003198  0E08               	movlw	8
 17568  00319A  26F3               	addwf	prodl,f,c
 17569  00319C  0E00               	movlw	0
 17570  00319E  22F4               	addwfc	prodh,f,c
 17571  0031A0  0E00               	movlw	low _ConnectionTable
 17572  0031A2  24F3               	addwf	prodl,w,c
 17573  0031A4  6ED9               	movwf	fsr2l,c
 17574  0031A6  0E06               	movlw	high _ConnectionTable
 17575  0031A8  20F4               	addwfc	prodh,w,c
 17576  0031AA  6EDA               	movwf	fsr2h,c
 17577  0031AC  86DF               	bsf	indf2,3,c
 17578                           
 17579                           ;miwi_mesh.c: 1170: ConnectionTable[entry].status.bits.isValid = 1;
 17580  0031AE  0101               	movlb	1	; () banked
 17581  0031B0  517A               	movf	MiWiTasks@entry& (0+255),w,b
 17582  0031B2  0D09               	mullw	9
 17583  0031B4  0E08               	movlw	8
 17584  0031B6  26F3               	addwf	prodl,f,c
 17585  0031B8  0E00               	movlw	0
 17586  0031BA  22F4               	addwfc	prodh,f,c
 17587  0031BC  0E00               	movlw	low _ConnectionTable
 17588  0031BE  24F3               	addwf	prodl,w,c
 17589  0031C0  6ED9               	movwf	fsr2l,c
 17590  0031C2  0E06               	movlw	high _ConnectionTable
 17591  0031C4  20F4               	addwfc	prodh,w,c
 17592  0031C6  6EDA               	movwf	fsr2h,c
 17593  0031C8  8EDF               	bsf	indf2,7,c
 17594  0031CA                     l18366:
 17595                           
 17596                           ; BSR set to: 1
 17597                           ;miwi_mesh.c: 1175: }
 17598                           ;miwi_mesh.c: 1176: }
 17599                           ;miwi_mesh.c: 1187: if(MiWiStateMachine.bits.searchingForNetwork)
 17600  0031CA  0101               	movlb	1	; () banked
 17601  0031CC  A1B5               	btfss	_MiWiStateMachine& (0+255),0,b
 17602  0031CE  EF84  F01D         	goto	l641
 17603                           
 17604                           ; BSR set to: 1
 17605                           ;miwi_mesh.c: 1188: {
 17606                           ;miwi_mesh.c: 1194: tempPANID.v[0] = MACRxPacket.Payload[0];
 17607  0031D2  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 17608  0031D6  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 17609  0031DA  50DF               	movf	indf2,w,c
 17610  0031DC  0101               	movlb	1	; () banked
 17611  0031DE  6FBB               	movwf	_tempPANID& (0+255),b
 17612                           
 17613                           ; BSR set to: 1
 17614                           ;miwi_mesh.c: 1195: tempPANID.v[1] = MACRxPacket.Payload[1];
 17615  0031E0  0101               	movlb	1	; () banked
 17616  0031E2  EE20 F001          	lfsr	2,1
 17617  0031E6  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17618  0031E8  26D9               	addwf	fsr2l,f,c
 17619  0031EA  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17620  0031EC  22DA               	addwfc	fsr2h,f,c
 17621  0031EE  50DF               	movf	indf2,w,c
 17622  0031F0  0101               	movlb	1	; () banked
 17623  0031F2  6FBC               	movwf	(_tempPANID+1)& (0+255),b
 17624                           
 17625                           ; BSR set to: 1
 17626                           ;miwi_mesh.c: 1196: tempShortAddress.v[0] = MACRxPacket.Payload[2];
 17627  0031F4  0101               	movlb	1	; () banked
 17628  0031F6  EE20 F002          	lfsr	2,2
 17629  0031FA  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17630  0031FC  26D9               	addwf	fsr2l,f,c
 17631  0031FE  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17632  003200  22DA               	addwfc	fsr2h,f,c
 17633  003202  50DF               	movf	indf2,w,c
 17634  003204  0101               	movlb	1	; () banked
 17635  003206  6FF4               	movwf	_tempShortAddress& (0+255),b
 17636                           
 17637                           ; BSR set to: 1
 17638                           ;miwi_mesh.c: 1197: tempShortAddress.v[1] = MACRxPacket.Payload[3];
 17639  003208  0101               	movlb	1	; () banked
 17640  00320A  EE20 F003          	lfsr	2,3
 17641  00320E  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 17642  003210  26D9               	addwf	fsr2l,f,c
 17643  003212  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 17644  003214  22DA               	addwfc	fsr2h,f,c
 17645  003216  50DF               	movf	indf2,w,c
 17646  003218  0101               	movlb	1	; () banked
 17647  00321A  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 17648                           
 17649                           ; BSR set to: 1
 17650                           ;miwi_mesh.c: 1201: if(MACRxPacket.Payload[rxIndex] == 0xFF)
 17651  00321C  0101               	movlb	1	; () banked
 17652  00321E  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17653  003220  0D01               	mullw	1
 17654  003222  50F3               	movf	prodl,w,c
 17655  003224  0101               	movlb	1	; () banked
 17656  003226  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17657  003228  6ED9               	movwf	fsr2l,c
 17658  00322A  50F4               	movf	prodh,w,c
 17659  00322C  0101               	movlb	1	; () banked
 17660  00322E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17661  003230  6EDA               	movwf	fsr2h,c
 17662  003232  28DE               	incf	postinc2,w,c
 17663  003234  A4D8               	btfss	status,2,c
 17664  003236  EF84  F01D         	goto	l641
 17665                           
 17666                           ; BSR set to: 1
 17667                           ;miwi_mesh.c: 1202: {
 17668                           ;miwi_mesh.c: 1203: MIWI_CAPACITY_INFO CapacityByte;
 17669                           ;miwi_mesh.c: 1204: CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
 17670  00323A  0101               	movlb	1	; () banked
 17671  00323C  516F               	movf	MiWiTasks@rxIndex& (0+255),w,b
 17672  00323E  0101               	movlb	1	; () banked
 17673  003240  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17674  003242  6B4B               	clrf	(??_MiWiTasks+1)& (0+255),b
 17675  003244  0E01               	movlw	1
 17676  003246  0101               	movlb	1	; () banked
 17677  003248  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17678  00324A  0E00               	movlw	0
 17679  00324C  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17680  00324E  0101               	movlb	1	; () banked
 17681  003250  514A               	movf	??_MiWiTasks& (0+255),w,b
 17682  003252  0101               	movlb	1	; () banked
 17683  003254  259D               	addwf	(_MACRxPacket+3)& (0+255),w,b
 17684  003256  6ED9               	movwf	fsr2l,c
 17685  003258  0101               	movlb	1	; () banked
 17686  00325A  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 17687  00325C  0101               	movlb	1	; () banked
 17688  00325E  219E               	addwfc	(_MACRxPacket+4)& (0+255),w,b
 17689  003260  6EDA               	movwf	fsr2h,c
 17690  003262  50DF               	movf	indf2,w,c
 17691  003264  0101               	movlb	1	; () banked
 17692  003266  6F70               	movwf	MiWiTasks@CapacityByte& (0+255),b
 17693                           
 17694                           ; BSR set to: 1
 17695                           ;miwi_mesh.c: 1205: if( (ActiveScanResultIndex < 4) && (CapacityByte.bits.ConnMode <= 0x
      +                          01) )
 17696  003268  0E04               	movlw	4
 17697  00326A  0101               	movlb	1	; () banked
 17698  00326C  61BD               	cpfslt	_ActiveScanResultIndex& (0+255),b
 17699  00326E  EF84  F01D         	goto	l641
 17700                           
 17701                           ; BSR set to: 1
 17702  003272  0101               	movlb	1	; () banked
 17703  003274  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17704  003276  0B03               	andlw	3
 17705  003278  0101               	movlb	1	; () banked
 17706  00327A  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17707  00327C  0E02               	movlw	2
 17708  00327E  0101               	movlb	1	; () banked
 17709  003280  614A               	cpfslt	??_MiWiTasks& (0+255),b
 17710  003282  EF84  F01D         	goto	l641
 17711                           
 17712                           ; BSR set to: 1
 17713                           ;miwi_mesh.c: 1206: {
 17714                           ;miwi_mesh.c: 1208: ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
 17715  003286  0101               	movlb	1	; () banked
 17716  003288  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17717  00328A  0D0A               	mullw	10
 17718  00328C  0E00               	movlw	low _ActiveScanResults
 17719  00328E  24F3               	addwf	prodl,w,c
 17720  003290  6ED9               	movwf	fsr2l,c
 17721  003292  0E02               	movlw	high _ActiveScanResults
 17722  003294  20F4               	addwfc	prodh,w,c
 17723  003296  6EDA               	movwf	fsr2h,c
 17724  003298  C1F6  FFDF         	movff	_currentChannel,indf2
 17725                           
 17726                           ;miwi_mesh.c: 1209: ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.Packe
      +                          tRSSI;
 17727  00329C  0101               	movlb	1	; () banked
 17728  00329E  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17729  0032A0  0D0A               	mullw	10
 17730  0032A2  0E07               	movlw	7
 17731  0032A4  26F3               	addwf	prodl,f,c
 17732  0032A6  0E00               	movlw	0
 17733  0032A8  22F4               	addwfc	prodh,f,c
 17734  0032AA  0E00               	movlw	low _ActiveScanResults
 17735  0032AC  24F3               	addwf	prodl,w,c
 17736  0032AE  6ED9               	movwf	fsr2l,c
 17737  0032B0  0E02               	movlw	high _ActiveScanResults
 17738  0032B2  20F4               	addwfc	prodh,w,c
 17739  0032B4  6EDA               	movwf	fsr2h,c
 17740  0032B6  C198  FFDF         	movff	_rxMessage+8,indf2
 17741                           
 17742                           ;miwi_mesh.c: 1210: ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.Packet
      +                          LQI;
 17743  0032BA  0101               	movlb	1	; () banked
 17744  0032BC  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17745  0032BE  0D0A               	mullw	10
 17746  0032C0  0E08               	movlw	8
 17747  0032C2  26F3               	addwf	prodl,f,c
 17748  0032C4  0E00               	movlw	0
 17749  0032C6  22F4               	addwfc	prodh,f,c
 17750  0032C8  0E00               	movlw	low _ActiveScanResults
 17751  0032CA  24F3               	addwf	prodl,w,c
 17752  0032CC  6ED9               	movwf	fsr2l,c
 17753  0032CE  0E02               	movlw	high _ActiveScanResults
 17754  0032D0  20F4               	addwfc	prodh,w,c
 17755  0032D2  6EDA               	movwf	fsr2h,c
 17756  0032D4  C199  FFDF         	movff	_rxMessage+9,indf2
 17757                           
 17758                           ;miwi_mesh.c: 1211: ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
 17759  0032D8  0101               	movlb	1	; () banked
 17760  0032DA  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17761  0032DC  0D0A               	mullw	10
 17762  0032DE  0E05               	movlw	5
 17763  0032E0  26F3               	addwf	prodl,f,c
 17764  0032E2  0E00               	movlw	0
 17765  0032E4  22F4               	addwfc	prodh,f,c
 17766  0032E6  0E00               	movlw	low _ActiveScanResults
 17767  0032E8  24F3               	addwf	prodl,w,c
 17768  0032EA  6ED9               	movwf	fsr2l,c
 17769  0032EC  0E02               	movlw	high _ActiveScanResults
 17770  0032EE  20F4               	addwfc	prodh,w,c
 17771  0032F0  6EDA               	movwf	fsr2h,c
 17772  0032F2  C1BB  FFDE         	movff	_tempPANID,postinc2
 17773  0032F6  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 17774                           
 17775                           ;miwi_mesh.c: 1213: ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
 17776  0032FA  0101               	movlb	1	; () banked
 17777  0032FC  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17778  0032FE  0D0A               	mullw	10
 17779  003300  0E09               	movlw	9
 17780  003302  26F3               	addwf	prodl,f,c
 17781  003304  0E00               	movlw	0
 17782  003306  22F4               	addwfc	prodh,f,c
 17783  003308  0E00               	movlw	low _ActiveScanResults
 17784  00330A  24F3               	addwf	prodl,w,c
 17785  00330C  6ED9               	movwf	fsr2l,c
 17786  00330E  0E02               	movlw	high _ActiveScanResults
 17787  003310  20F4               	addwfc	prodh,w,c
 17788  003312  6EDA               	movwf	fsr2h,c
 17789  003314  0E00               	movlw	0
 17790  003316  6EDF               	movwf	indf2,c
 17791                           
 17792                           ;miwi_mesh.c: 1214: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
 17793  003318  0101               	movlb	1	; () banked
 17794  00331A  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17795  00331C  0D0A               	mullw	10
 17796  00331E  0E09               	movlw	9
 17797  003320  26F3               	addwf	prodl,f,c
 17798  003322  0E00               	movlw	0
 17799  003324  22F4               	addwfc	prodh,f,c
 17800  003326  0E00               	movlw	low _ActiveScanResults
 17801  003328  24F3               	addwf	prodl,w,c
 17802  00332A  6ED9               	movwf	fsr2l,c
 17803  00332C  0E02               	movlw	high _ActiveScanResults
 17804  00332E  20F4               	addwfc	prodh,w,c
 17805  003330  6EDA               	movwf	fsr2h,c
 17806  003332  0102               	movlb	2	; () banked
 17807  003334  8CDF               	bsf	indf2,6,c
 17808                           
 17809                           ;miwi_mesh.c: 1215: ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = Capa
      +                          cityByte.bits.Role;
 17810  003336  0101               	movlb	1	; () banked
 17811  003338  3170               	rrcf	MiWiTasks@CapacityByte& (0+255),w,b
 17812  00333A  0B03               	andlw	3
 17813  00333C  0101               	movlb	1	; () banked
 17814  00333E  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17815  003340  0101               	movlb	1	; () banked
 17816  003342  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17817  003344  0D0A               	mullw	10
 17818  003346  0E09               	movlw	9
 17819  003348  26F3               	addwf	prodl,f,c
 17820  00334A  0E00               	movlw	0
 17821  00334C  22F4               	addwfc	prodh,f,c
 17822  00334E  0E00               	movlw	low _ActiveScanResults
 17823  003350  24F3               	addwf	prodl,w,c
 17824  003352  6ED9               	movwf	fsr2l,c
 17825  003354  0E02               	movlw	high _ActiveScanResults
 17826  003356  20F4               	addwfc	prodh,w,c
 17827  003358  6EDA               	movwf	fsr2h,c
 17828  00335A  0102               	movlb	2	; () banked
 17829  00335C  50DF               	movf	223,w,c
 17830  00335E  0101               	movlb	1	; () banked
 17831  003360  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 17832  003362  0BFC               	andlw	-4
 17833  003364  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 17834  003366  0102               	movlb	2	; () banked
 17835  003368  6EDF               	movwf	223,c
 17836                           
 17837                           ; BSR set to: 2
 17838                           ;miwi_mesh.c: 1216: if( CapacityByte.bits.Security )
 17839  00336A  0101               	movlb	1	; () banked
 17840  00336C  A770               	btfss	MiWiTasks@CapacityByte& (0+255),3,b
 17841  00336E  D00F               	goto	l18390
 17842                           
 17843                           ; BSR set to: 1
 17844                           ;miwi_mesh.c: 1217: {
 17845                           ;miwi_mesh.c: 1218: ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn 
      +                          = 1;
 17846  003370  0101               	movlb	1	; () banked
 17847  003372  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17848  003374  0D0A               	mullw	10
 17849  003376  0E09               	movlw	9
 17850  003378  26F3               	addwf	prodl,f,c
 17851  00337A  0E00               	movlw	0
 17852  00337C  22F4               	addwfc	prodh,f,c
 17853  00337E  0E00               	movlw	low _ActiveScanResults
 17854  003380  24F3               	addwf	prodl,w,c
 17855  003382  6ED9               	movwf	fsr2l,c
 17856  003384  0E02               	movlw	high _ActiveScanResults
 17857  003386  20F4               	addwfc	prodh,w,c
 17858  003388  6EDA               	movwf	fsr2h,c
 17859  00338A  0102               	movlb	2	; () banked
 17860  00338C  86DF               	bsf	indf2,3,c
 17861  00338E                     l18390:
 17862                           
 17863                           ;miwi_mesh.c: 1219: }
 17864                           ;miwi_mesh.c: 1220: if( CapacityByte.bits.ConnMode <= 0x01 )
 17865  00338E  0101               	movlb	1	; () banked
 17866  003390  3970               	swapf	MiWiTasks@CapacityByte& (0+255),w,b
 17867  003392  0B03               	andlw	3
 17868  003394  0101               	movlb	1	; () banked
 17869  003396  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17870  003398  0E02               	movlw	2
 17871  00339A  0101               	movlb	1	; () banked
 17872  00339C  614A               	cpfslt	??_MiWiTasks& (0+255),b
 17873  00339E  D00F               	goto	l18394
 17874                           
 17875                           ; BSR set to: 1
 17876                           ;miwi_mesh.c: 1221: {
 17877                           ;miwi_mesh.c: 1222: ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin =
      +                           1;
 17878  0033A0  0101               	movlb	1	; () banked
 17879  0033A2  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17880  0033A4  0D0A               	mullw	10
 17881  0033A6  0E09               	movlw	9
 17882  0033A8  26F3               	addwf	prodl,f,c
 17883  0033AA  0E00               	movlw	0
 17884  0033AC  22F4               	addwfc	prodh,f,c
 17885  0033AE  0E00               	movlw	low _ActiveScanResults
 17886  0033B0  24F3               	addwf	prodl,w,c
 17887  0033B2  6ED9               	movwf	fsr2l,c
 17888  0033B4  0E02               	movlw	high _ActiveScanResults
 17889  0033B6  20F4               	addwfc	prodh,w,c
 17890  0033B8  6EDA               	movwf	fsr2h,c
 17891  0033BA  0102               	movlb	2	; () banked
 17892  0033BC  8ADF               	bsf	indf2,5,c
 17893  0033BE                     l18394:
 17894                           
 17895                           ;miwi_mesh.c: 1223: }
 17896                           ;miwi_mesh.c: 1231: for(i = 0; i < 4; i++)
 17897  0033BE  0E00               	movlw	0
 17898  0033C0  0101               	movlb	1	; () banked
 17899  0033C2  6F7C               	movwf	MiWiTasks@i& (0+255),b
 17900  0033C4                     l18396:
 17901                           
 17902                           ; BSR set to: 1
 17903  0033C4  0E03               	movlw	3
 17904  0033C6  0101               	movlb	1	; () banked
 17905  0033C8  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 17906  0033CA  D001               	goto	l18400
 17907  0033CC  D02E               	goto	l18406
 17908  0033CE                     l18400:
 17909                           
 17910                           ; BSR set to: 1
 17911                           ;miwi_mesh.c: 1232: {
 17912                           ;miwi_mesh.c: 1233: ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.Sour
      +                          ceAddress[i];
 17913  0033CE  0101               	movlb	1	; () banked
 17914  0033D0  517C               	movf	MiWiTasks@i& (0+255),w,b
 17915  0033D2  0D01               	mullw	1
 17916  0033D4  50F3               	movf	prodl,w,c
 17917  0033D6  0101               	movlb	1	; () banked
 17918  0033D8  2593               	addwf	(_rxMessage+3)& (0+255),w,b
 17919  0033DA  6ED9               	movwf	fsr2l,c
 17920  0033DC  50F4               	movf	prodh,w,c
 17921  0033DE  0101               	movlb	1	; () banked
 17922  0033E0  2194               	addwfc	(_rxMessage+4)& (0+255),w,b
 17923  0033E2  6EDA               	movwf	fsr2h,c
 17924  0033E4  0101               	movlb	1	; () banked
 17925  0033E6  517C               	movf	MiWiTasks@i& (0+255),w,b
 17926  0033E8  0D01               	mullw	1
 17927  0033EA  0E01               	movlw	1
 17928  0033EC  26F3               	addwf	prodl,f,c
 17929  0033EE  0E00               	movlw	0
 17930  0033F0  22F4               	addwfc	prodh,f,c
 17931  0033F2  0E00               	movlw	low _ActiveScanResults
 17932  0033F4  0101               	movlb	1	; () banked
 17933  0033F6  6F4A               	movwf	??_MiWiTasks& (0+255),b
 17934  0033F8  0E02               	movlw	high _ActiveScanResults
 17935  0033FA  0101               	movlb	1	; () banked
 17936  0033FC  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 17937  0033FE  50F3               	movf	prodl,w,c
 17938  003400  0101               	movlb	1	; () banked
 17939  003402  274A               	addwf	??_MiWiTasks& (0+255),f,b
 17940  003404  50F4               	movf	prodh,w,c
 17941  003406  0101               	movlb	1	; () banked
 17942  003408  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 17943  00340A  0101               	movlb	1	; () banked
 17944  00340C  51BD               	movf	_ActiveScanResultIndex& (0+255),w,b
 17945  00340E  0D0A               	mullw	10
 17946  003410  50F3               	movf	prodl,w,c
 17947  003412  0101               	movlb	1	; () banked
 17948  003414  254A               	addwf	??_MiWiTasks& (0+255),w,b
 17949  003416  6EE1               	movwf	fsr1l,c
 17950  003418  50F4               	movf	prodh,w,c
 17951  00341A  0101               	movlb	1	; () banked
 17952  00341C  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 17953  00341E  6EE2               	movwf	fsr1h,c
 17954  003420  CFDF FFE7          	movff	indf2,indf1
 17955                           
 17956                           ; BSR set to: 1
 17957  003424  0101               	movlb	1	; () banked
 17958  003426  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 17959  003428  D7CD               	goto	l18396
 17960  00342A                     l18406:
 17961                           
 17962                           ; BSR set to: 1
 17963                           ;miwi_mesh.c: 1234: }
 17964                           ;miwi_mesh.c: 1242: ActiveScanResultIndex++;
 17965  00342A  0101               	movlb	1	; () banked
 17966  00342C  2BBD               	incf	_ActiveScanResultIndex& (0+255),f,b
 17967                           
 17968                           ; BSR set to: 1
 17969                           ;miwi_mesh.c: 1243: }
 17970                           ;miwi_mesh.c: 1244: }
 17971                           ;miwi_mesh.c: 1245: }
 17972                           ;miwi_mesh.c: 1246: }
 17973                           ;miwi_mesh.c: 1247: break;
 17974                           
 17975                           ; BSR set to: 1
 17976                           
 17977                           ; BSR set to: 1
 17978  00342E  D36C               	goto	l641
 17979  003430                     l18408:
 17980                           
 17981                           ;miwi_mesh.c: 1258: {
 17982                           ;miwi_mesh.c: 1259: uint8_t handle;
 17983                           ;miwi_mesh.c: 1260: uint8_t associateStatus = 0x00;
 17984  003430  0E00               	movlw	0
 17985  003432  0101               	movlb	1	; () banked
 17986  003434  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 17987                           
 17988                           ; BSR set to: 1
 17989                           ;miwi_mesh.c: 1262: if( ConnMode > 0x01 )
 17990  003436  0E01               	movlw	1
 17991  003438  0101               	movlb	1	; () banked
 17992  00343A  65BF               	cpfsgt	_ConnMode& (0+255),b
 17993  00343C  D001               	goto	l18414
 17994  00343E  D364               	goto	l641
 17995  003440                     l18414:
 17996                           
 17997                           ; BSR set to: 1
 17998                           ;miwi_mesh.c: 1265: }
 17999                           ;miwi_mesh.c: 1268: for(i = 0; i < 4; i++)
 18000  003440  0E00               	movlw	0
 18001  003442  0101               	movlb	1	; () banked
 18002  003444  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18003  003446                     l18416:
 18004                           
 18005                           ; BSR set to: 1
 18006  003446  0E03               	movlw	3
 18007  003448  0101               	movlb	1	; () banked
 18008  00344A  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18009  00344C  D001               	goto	l18420
 18010  00344E  D019               	goto	l18426
 18011  003450                     l18420:
 18012                           
 18013                           ; BSR set to: 1
 18014                           ;miwi_mesh.c: 1269: {
 18015                           ;miwi_mesh.c: 1270: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18016  003450  0101               	movlb	1	; () banked
 18017  003452  517C               	movf	MiWiTasks@i& (0+255),w,b
 18018  003454  0D01               	mullw	1
 18019  003456  50F3               	movf	prodl,w,c
 18020  003458  0101               	movlb	1	; () banked
 18021  00345A  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18022  00345C  6ED9               	movwf	fsr2l,c
 18023  00345E  50F4               	movf	prodh,w,c
 18024  003460  0101               	movlb	1	; () banked
 18025  003462  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18026  003464  6EDA               	movwf	fsr2h,c
 18027  003466  0101               	movlb	1	; () banked
 18028  003468  517C               	movf	MiWiTasks@i& (0+255),w,b
 18029  00346A  0D01               	mullw	1
 18030  00346C  0EA6               	movlw	low _tempLongAddress
 18031  00346E  24F3               	addwf	prodl,w,c
 18032  003470  6EE1               	movwf	fsr1l,c
 18033  003472  0E01               	movlw	high _tempLongAddress
 18034  003474  20F4               	addwfc	prodh,w,c
 18035  003476  6EE2               	movwf	fsr1h,c
 18036  003478  CFDF FFE7          	movff	indf2,indf1
 18037                           
 18038                           ; BSR set to: 1
 18039  00347C  0101               	movlb	1	; () banked
 18040  00347E  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18041  003480  D7E2               	goto	l18416
 18042  003482                     l18426:
 18043                           
 18044                           ; BSR set to: 1
 18045                           ;miwi_mesh.c: 1271: }
 18046                           ;miwi_mesh.c: 1273: handle = SearchForLongAddress();
 18047  003482  ECAF  F04E         	call	_SearchForLongAddress	;wreg free
 18048  003486  0101               	movlb	1	; () banked
 18049  003488  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18050                           
 18051                           ; BSR set to: 1
 18052                           ;miwi_mesh.c: 1274: if( handle == 0xFF )
 18053  00348A  0101               	movlb	1	; () banked
 18054  00348C  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18055  00348E  A4D8               	btfss	status,2,c
 18056  003490  D01C               	goto	l18444
 18057                           
 18058                           ; BSR set to: 1
 18059                           ;miwi_mesh.c: 1275: {
 18060                           ;miwi_mesh.c: 1276: if( ConnMode > 0x00 )
 18061  003492  0101               	movlb	1	; () banked
 18062  003494  51BF               	movf	_ConnMode& (0+255),w,b
 18063  003496  A4D8               	btfss	status,2,c
 18064  003498  D337               	goto	l641
 18065                           
 18066                           ; BSR set to: 1
 18067                           ;miwi_mesh.c: 1279: }
 18068                           ;miwi_mesh.c: 1280: tempNodeStatus.Val = 0xB7;
 18069                           
 18070                           ; BSR set to: 1
 18071                           
 18072                           ; BSR set to: 1
 18073                           ;miwi_mesh.c: 1277: {
 18074                           ;miwi_mesh.c: 1278: break;
 18075  00349A  0EB7               	movlw	183
 18076  00349C  0100               	movlb	0	; () banked
 18077  00349E  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18078                           
 18079                           ; BSR set to: 0
 18080                           ;miwi_mesh.c: 1281: tempPANID.Val = myPANID.Val;
 18081  0034A0  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18082  0034A4  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;miwi_mesh.c: 1284: handle = AddNodeToNetworkTable();
 18086  0034A8  EC11  F046         	call	_AddNodeToNetworkTable	;wreg free
 18087  0034AC  0101               	movlb	1	; () banked
 18088  0034AE  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18089                           
 18090                           ; BSR set to: 1
 18091                           ;miwi_mesh.c: 1285: if( handle == 0xFF )
 18092  0034B0  0101               	movlb	1	; () banked
 18093  0034B2  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18094  0034B4  A4D8               	btfss	status,2,c
 18095  0034B6  D02A               	goto	l18448
 18096                           
 18097                           ; BSR set to: 1
 18098                           ;miwi_mesh.c: 1286: {
 18099                           ;miwi_mesh.c: 1287: associateStatus = 0x01;
 18100  0034B8  0E01               	movlw	1
 18101  0034BA  0101               	movlb	1	; () banked
 18102  0034BC  6F63               	movwf	MiWiTasks@associateStatus& (0+255),b
 18103                           
 18104                           ;miwi_mesh.c: 1288: tempShortAddress.Val = 0xFFFE;
 18105  0034BE  0EFF               	movlw	255
 18106  0034C0  0101               	movlb	1	; () banked
 18107  0034C2  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18108  0034C4  0EFE               	movlw	254
 18109  0034C6  6FF4               	movwf	_tempShortAddress& (0+255),b
 18110                           
 18111                           ;miwi_mesh.c: 1289: goto START_ASSOCIATION_RESPONSE;
 18112  0034C8  D09E               	goto	l18500
 18113  0034CA                     l18444:
 18114                           
 18115                           ; BSR set to: 1
 18116                           ;miwi_mesh.c: 1295: else
 18117                           ;miwi_mesh.c: 1296: {
 18118                           ;miwi_mesh.c: 1297: if( ConnectionTable[handle].status.bits.shortAddressValid )
 18119  0034CA  0101               	movlb	1	; () banked
 18120  0034CC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18121  0034CE  0D09               	mullw	9
 18122  0034D0  0E08               	movlw	8
 18123  0034D2  26F3               	addwf	prodl,f,c
 18124  0034D4  0E00               	movlw	0
 18125  0034D6  22F4               	addwfc	prodh,f,c
 18126  0034D8  0E00               	movlw	low _ConnectionTable
 18127  0034DA  24F3               	addwf	prodl,w,c
 18128  0034DC  6ED9               	movwf	fsr2l,c
 18129  0034DE  0E06               	movlw	high _ConnectionTable
 18130  0034E0  20F4               	addwfc	prodh,w,c
 18131  0034E2  6EDA               	movwf	fsr2h,c
 18132  0034E4  A6DF               	btfss	indf2,3,c
 18133  0034E6  D012               	goto	l18448
 18134                           
 18135                           ; BSR set to: 1
 18136                           ;miwi_mesh.c: 1298: {
 18137                           ;miwi_mesh.c: 1299: tempShortAddress.Val = ConnectionTable[handle].AltAddress.Val;
 18138  0034E8  0101               	movlb	1	; () banked
 18139  0034EA  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18140  0034EC  0D09               	mullw	9
 18141  0034EE  0E02               	movlw	2
 18142  0034F0  26F3               	addwf	prodl,f,c
 18143  0034F2  0E00               	movlw	0
 18144  0034F4  22F4               	addwfc	prodh,f,c
 18145  0034F6  0E00               	movlw	low _ConnectionTable
 18146  0034F8  24F3               	addwf	prodl,w,c
 18147  0034FA  6ED9               	movwf	fsr2l,c
 18148  0034FC  0E06               	movlw	high _ConnectionTable
 18149  0034FE  20F4               	addwfc	prodh,w,c
 18150  003500  6EDA               	movwf	fsr2h,c
 18151  003502  CFDE F1F4          	movff	postinc2,_tempShortAddress
 18152  003506  CFDD F1F5          	movff	postdec2,_tempShortAddress+1
 18153                           
 18154                           ;miwi_mesh.c: 1300: goto START_ASSOCIATION_RESPONSE;
 18155  00350A  D07D               	goto	l18500
 18156  00350C                     l18448:
 18157                           
 18158                           ; BSR set to: 1
 18159                           ;miwi_mesh.c: 1301: }
 18160                           ;miwi_mesh.c: 1302: }
 18161                           ;miwi_mesh.c: 1305: if(handle != 0xFF)
 18162  00350C  0101               	movlb	1	; () banked
 18163  00350E  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18164  003510  B4D8               	btfsc	status,2,c
 18165  003512  D079               	goto	l18500
 18166                           
 18167                           ; BSR set to: 1
 18168                           ;miwi_mesh.c: 1306: {
 18169                           ;miwi_mesh.c: 1308: tempShortAddress.v[0] = handle + 1;
 18170  003514  0101               	movlb	1	; () banked
 18171  003516  2977               	incf	MiWiTasks@handle& (0+255),w,b
 18172  003518  0101               	movlb	1	; () banked
 18173  00351A  6FF4               	movwf	_tempShortAddress& (0+255),b
 18174                           
 18175                           ; BSR set to: 1
 18176                           ;miwi_mesh.c: 1309: tempShortAddress.v[1] = myShortAddress.v[1];
 18177  00351C  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 18178                           
 18179                           ; BSR set to: 1
 18180                           ;miwi_mesh.c: 1310: tempPANID.Val = myPANID.Val;
 18181  003520  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18182  003524  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18183                           
 18184                           ;miwi_mesh.c: 1313: if(role == 0x02)
 18185  003528  0E02               	movlw	2
 18186  00352A  0101               	movlb	1	; () banked
 18187  00352C  19CA               	xorwf	_role& (0+255),w,b
 18188  00352E  A4D8               	btfss	status,2,c
 18189  003530  D047               	goto	l18484
 18190                           
 18191                           ; BSR set to: 1
 18192                           ;miwi_mesh.c: 1314: {
 18193                           ;miwi_mesh.c: 1315: if(MACRxPacket.Payload[1] & 0x40)
 18194  003532  0101               	movlb	1	; () banked
 18195  003534  EE20 F001          	lfsr	2,1
 18196  003538  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18197  00353A  26D9               	addwf	fsr2l,f,c
 18198  00353C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18199  00353E  22DA               	addwfc	fsr2h,f,c
 18200  003540  0101               	movlb	1	; () banked
 18201  003542  ACDF               	btfss	indf2,6,c
 18202  003544  D03D               	goto	l18484
 18203                           
 18204                           ; BSR set to: 1
 18205                           ;miwi_mesh.c: 1316: {
 18206                           ;miwi_mesh.c: 1318: uint8_t j;
 18207                           ;miwi_mesh.c: 1319: API_UINT16_UNION CoordAddress;
 18208                           ;miwi_mesh.c: 1320: uint8_t entry;
 18209                           ;miwi_mesh.c: 1322: CoordAddress.Val = tempShortAddress.Val;
 18210  003546  C1F4  F15E         	movff	_tempShortAddress,MiWiTasks@CoordAddress
 18211  00354A  C1F5  F15F         	movff	_tempShortAddress+1,MiWiTasks@CoordAddress+1
 18212                           
 18213                           ; BSR set to: 1
 18214                           ;miwi_mesh.c: 1323: tempShortAddress.v[0] = 0;
 18215  00354E  0E00               	movlw	0
 18216  003550  0101               	movlb	1	; () banked
 18217  003552  6FF4               	movwf	_tempShortAddress& (0+255),b
 18218                           
 18219                           ;miwi_mesh.c: 1326: for(j=1;j<8;j++)
 18220  003554  0E01               	movlw	1
 18221  003556  0101               	movlb	1	; () banked
 18222  003558  6F72               	movwf	MiWiTasks@j_2532& (0+255),b
 18223  00355A                     l18462:
 18224                           
 18225                           ; BSR set to: 1
 18226  00355A  0E07               	movlw	7
 18227  00355C  0101               	movlb	1	; () banked
 18228  00355E  6572               	cpfsgt	MiWiTasks@j_2532& (0+255),b
 18229  003560  D001               	goto	l746
 18230  003562  D025               	goto	l18480
 18231  003564                     l746:
 18232                           
 18233                           ; BSR set to: 1
 18234                           ;miwi_mesh.c: 1327: {
 18235                           ;miwi_mesh.c: 1328: tempShortAddress.v[1] = j;
 18236  003564  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 18237                           
 18238                           ; BSR set to: 1
 18239                           ;miwi_mesh.c: 1329: entry = SearchForShortAddress();
 18240  003568  EC82  F057         	call	_SearchForShortAddress	;wreg free
 18241  00356C  0101               	movlb	1	; () banked
 18242  00356E  6F61               	movwf	MiWiTasks@entry_2536& (0+255),b
 18243                           
 18244                           ; BSR set to: 1
 18245                           ;miwi_mesh.c: 1331: if(entry == 0xFF)
 18246  003570  0101               	movlb	1	; () banked
 18247  003572  2961               	incf	MiWiTasks@entry_2536& (0+255),w,b
 18248  003574  A4D8               	btfss	status,2,c
 18249  003576  D018               	goto	l18476
 18250                           
 18251                           ; BSR set to: 1
 18252                           ;miwi_mesh.c: 1332: {
 18253                           ;miwi_mesh.c: 1333: tempShortAddress.v[0] = 0x00;
 18254  003578  0E00               	movlw	0
 18255  00357A  0101               	movlb	1	; () banked
 18256  00357C  6FF4               	movwf	_tempShortAddress& (0+255),b
 18257                           
 18258                           ; BSR set to: 1
 18259                           ;miwi_mesh.c: 1334: tempShortAddress.v[1] = j;
 18260  00357E  C172  F1F5         	movff	MiWiTasks@j_2532,_tempShortAddress+1
 18261                           
 18262                           ; BSR set to: 1
 18263                           ;miwi_mesh.c: 1335: knownCoordinators |= (1<<j);
 18264  003582  C172  F14A         	movff	MiWiTasks@j_2532,??_MiWiTasks
 18265  003586  0E01               	movlw	1
 18266  003588  0101               	movlb	1	; () banked
 18267  00358A  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18268  00358C  0101               	movlb	1	; () banked
 18269  00358E  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 18270  003590  D003               	goto	u20824
 18271  003592                     u20825:
 18272  003592  0101               	movlb	1	; () banked
 18273  003594  90D8               	bcf	status,0,c
 18274  003596  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 18275  003598                     u20824:
 18276  003598  0101               	movlb	1	; () banked
 18277  00359A  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 18278  00359C  D7FA               	goto	u20825
 18279  00359E  0101               	movlb	1	; () banked
 18280  0035A0  514B               	movf	(??_MiWiTasks+1)& (0+255),w,b
 18281  0035A2  0101               	movlb	1	; () banked
 18282  0035A4  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 18283                           
 18284                           ;miwi_mesh.c: 1339: break;
 18285  0035A6  D003               	goto	l18480
 18286  0035A8                     l18476:
 18287                           
 18288                           ; BSR set to: 1
 18289  0035A8  0101               	movlb	1	; () banked
 18290  0035AA  2B72               	incf	MiWiTasks@j_2532& (0+255),f,b
 18291  0035AC  D7D6               	goto	l18462
 18292  0035AE                     l18480:
 18293                           
 18294                           ; BSR set to: 1
 18295                           ;miwi_mesh.c: 1340: }
 18296                           ;miwi_mesh.c: 1341: }
 18297                           ;miwi_mesh.c: 1343: if(j==8)
 18298  0035AE  0E08               	movlw	8
 18299  0035B0  0101               	movlb	1	; () banked
 18300  0035B2  1972               	xorwf	MiWiTasks@j_2532& (0+255),w,b
 18301  0035B4  A4D8               	btfss	status,2,c
 18302  0035B6  D004               	goto	l18484
 18303                           
 18304                           ; BSR set to: 1
 18305                           ;miwi_mesh.c: 1344: {
 18306                           ;miwi_mesh.c: 1345: tempShortAddress.Val= CoordAddress.Val;
 18307  0035B8  C15E  F1F4         	movff	MiWiTasks@CoordAddress,_tempShortAddress
 18308  0035BC  C15F  F1F5         	movff	MiWiTasks@CoordAddress+1,_tempShortAddress+1
 18309  0035C0                     l18484:
 18310                           
 18311                           ; BSR set to: 1
 18312                           ;miwi_mesh.c: 1346: }
 18313                           ;miwi_mesh.c: 1348: }
 18314                           ;miwi_mesh.c: 1349: }
 18315                           ;miwi_mesh.c: 1352: tempNodeStatus.Val = 0xBF;
 18316  0035C0  0EBF               	movlw	191
 18317  0035C2  0100               	movlb	0	; () banked
 18318  0035C4  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;miwi_mesh.c: 1355: if((MACRxPacket.Payload[1] & 0x01) == 0)
 18322  0035C6  0101               	movlb	1	; () banked
 18323  0035C8  EE20 F001          	lfsr	2,1
 18324  0035CC  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18325  0035CE  26D9               	addwf	fsr2l,f,c
 18326  0035D0  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18327  0035D2  22DA               	addwfc	fsr2h,f,c
 18328  0035D4  0101               	movlb	1	; () banked
 18329  0035D6  B0DF               	btfsc	indf2,0,c
 18330  0035D8  D004               	goto	l18492
 18331                           
 18332                           ; BSR set to: 1
 18333                           ;miwi_mesh.c: 1356: {
 18334                           ;miwi_mesh.c: 1357: tempNodeStatus.bits.RXOnWhenIdle = 0;
 18335  0035DA  0100               	movlb	0	; () banked
 18336  0035DC  91A0               	bcf	_tempNodeStatus& (0+255),0,b
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;miwi_mesh.c: 1358: tempShortAddress.v[0] |= 0x80;
 18340  0035DE  0101               	movlb	1	; () banked
 18341  0035E0  8FF4               	bsf	_tempShortAddress& (0+255),7,b
 18342  0035E2                     l18492:
 18343                           
 18344                           ; BSR set to: 1
 18345                           ;miwi_mesh.c: 1359: }
 18346                           ;miwi_mesh.c: 1362: handle = AddNodeToNetworkTable();
 18347  0035E2  EC11  F046         	call	_AddNodeToNetworkTable	;wreg free
 18348  0035E6  0101               	movlb	1	; () banked
 18349  0035E8  6F77               	movwf	MiWiTasks@handle& (0+255),b
 18350                           
 18351                           ; BSR set to: 1
 18352                           ;miwi_mesh.c: 1364: ConnectionTable[handle].status.bits.FinishJoin = 1;
 18353  0035EA  0101               	movlb	1	; () banked
 18354  0035EC  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18355  0035EE  0D09               	mullw	9
 18356  0035F0  0E08               	movlw	8
 18357  0035F2  26F3               	addwf	prodl,f,c
 18358  0035F4  0E00               	movlw	0
 18359  0035F6  22F4               	addwfc	prodh,f,c
 18360  0035F8  0E00               	movlw	low _ConnectionTable
 18361  0035FA  24F3               	addwf	prodl,w,c
 18362  0035FC  6ED9               	movwf	fsr2l,c
 18363  0035FE  0E06               	movlw	high _ConnectionTable
 18364  003600  20F4               	addwfc	prodh,w,c
 18365  003602  6EDA               	movwf	fsr2h,c
 18366  003604  88DF               	bsf	indf2,4,c
 18367  003606                     l18500:
 18368                           
 18369                           ; BSR set to: 1
 18370                           ;miwi_mesh.c: 1387: TxBuffer[0] = 0x02;
 18371  003606  0E02               	movlw	2
 18372  003608  0102               	movlb	2	; () banked
 18373  00360A  6FA6               	movwf	_TxBuffer& (0+255),b
 18374                           
 18375                           ; BSR set to: 2
 18376                           ;miwi_mesh.c: 1388: TxBuffer[1] = tempShortAddress.v[0];
 18377  00360C  C1F4  F2A7         	movff	_tempShortAddress,_TxBuffer+1
 18378                           
 18379                           ; BSR set to: 2
 18380                           ;miwi_mesh.c: 1389: TxBuffer[2] = tempShortAddress.v[1];
 18381  003610  C1F5  F2A8         	movff	_tempShortAddress+1,_TxBuffer+2
 18382                           
 18383                           ; BSR set to: 2
 18384                           ;miwi_mesh.c: 1390: TxBuffer[3] = associateStatus;
 18385  003614  C163  F2A9         	movff	MiWiTasks@associateStatus,_TxBuffer+3
 18386                           
 18387                           ; BSR set to: 2
 18388                           ;miwi_mesh.c: 1397: TxData = 4+0;
 18389  003618  0E04               	movlw	4
 18390  00361A  0101               	movlb	1	; () banked
 18391  00361C  6FC6               	movwf	_TxData& (0+255),b
 18392                           
 18393                           ; BSR set to: 1
 18394                           ;miwi_mesh.c: 1400: IncomingFrameCounter[handle].Val = 0;
 18395  00361E  0101               	movlb	1	; () banked
 18396  003620  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18397  003622  0D04               	mullw	4
 18398  003624  0E00               	movlw	low _IncomingFrameCounter
 18399  003626  24F3               	addwf	prodl,w,c
 18400  003628  6ED9               	movwf	fsr2l,c
 18401  00362A  0E05               	movlw	high _IncomingFrameCounter
 18402  00362C  20F4               	addwfc	prodh,w,c
 18403  00362E  6EDA               	movwf	fsr2h,c
 18404  003630  6ADE               	clrf	postinc2,c
 18405  003632  6ADE               	clrf	postinc2,c
 18406  003634  6ADE               	clrf	postinc2,c
 18407  003636  6ADD               	clrf	postdec2,c
 18408                           
 18409                           ; BSR set to: 1
 18410                           ;miwi_mesh.c: 1406: SendMACPacket(ConnectionTable[handle].Address, 0x01);
 18411  003638  0101               	movlb	1	; () banked
 18412  00363A  5177               	movf	MiWiTasks@handle& (0+255),w,b
 18413  00363C  0D09               	mullw	9
 18414  00363E  0E04               	movlw	4
 18415  003640  26F3               	addwf	prodl,f,c
 18416  003642  0E00               	movlw	0
 18417  003644  22F4               	addwfc	prodh,f,c
 18418  003646  0E00               	movlw	low _ConnectionTable
 18419  003648  24F3               	addwf	prodl,w,c
 18420  00364A  0101               	movlb	1	; () banked
 18421  00364C  6F39               	movwf	SendMACPacket@Address& (0+255),b
 18422  00364E  0E06               	movlw	high _ConnectionTable
 18423  003650  20F4               	addwfc	prodh,w,c
 18424  003652  0101               	movlb	1	; () banked
 18425  003654  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 18426  003656  0E01               	movlw	1
 18427  003658  0101               	movlb	1	; () banked
 18428  00365A  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 18429  00365C  ECC6  F057         	call	_SendMACPacket	;wreg free
 18430                           
 18431                           ;miwi_mesh.c: 1408: }
 18432                           ;miwi_mesh.c: 1409: break;
 18433  003660  D253               	goto	l641
 18434  003662                     l18514:
 18435                           
 18436                           ;miwi_mesh.c: 1413: {
 18437                           ;miwi_mesh.c: 1414: if(MACRxPacket.Payload[3] == 0x00)
 18438  003662  0101               	movlb	1	; () banked
 18439  003664  EE20 F003          	lfsr	2,3
 18440  003668  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18441  00366A  26D9               	addwf	fsr2l,f,c
 18442  00366C  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18443  00366E  22DA               	addwfc	fsr2h,f,c
 18444  003670  50DF               	movf	indf2,w,c
 18445  003672  A4D8               	btfss	status,2,c
 18446  003674  D0A4               	goto	l753
 18447                           
 18448                           ; BSR set to: 1
 18449                           ;miwi_mesh.c: 1415: {
 18450                           ;miwi_mesh.c: 1418: myShortAddress.v[0] = MACRxPacket.Payload[1];
 18451  003676  0101               	movlb	1	; () banked
 18452  003678  EE20 F001          	lfsr	2,1
 18453  00367C  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18454  00367E  26D9               	addwf	fsr2l,f,c
 18455  003680  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18456  003682  22DA               	addwfc	fsr2h,f,c
 18457  003684  50DF               	movf	indf2,w,c
 18458  003686  0101               	movlb	1	; () banked
 18459  003688  6FF2               	movwf	_myShortAddress& (0+255),b
 18460                           
 18461                           ;miwi_mesh.c: 1419: myShortAddress.v[1] = MACRxPacket.Payload[2];
 18462  00368A  0101               	movlb	1	; () banked
 18463  00368C  EE20 F002          	lfsr	2,2
 18464  003690  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 18465  003692  26D9               	addwf	fsr2l,f,c
 18466  003694  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 18467  003696  22DA               	addwfc	fsr2h,f,c
 18468  003698  50DF               	movf	indf2,w,c
 18469  00369A  0101               	movlb	1	; () banked
 18470  00369C  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 18471                           
 18472                           ; BSR set to: 1
 18473                           ;miwi_mesh.c: 1422: if(myShortAddress.v[0] == 0x00)
 18474  00369E  0101               	movlb	1	; () banked
 18475  0036A0  51F2               	movf	_myShortAddress& (0+255),w,b
 18476  0036A2  A4D8               	btfss	status,2,c
 18477  0036A4  D025               	goto	l18526
 18478                           
 18479                           ; BSR set to: 1
 18480                           ;miwi_mesh.c: 1423: {
 18481                           ;miwi_mesh.c: 1424: ;
 18482                           ;miwi_mesh.c: 1425: role = 0x01;
 18483  0036A6  0E01               	movlw	1
 18484  0036A8  0101               	movlb	1	; () banked
 18485  0036AA  6FCA               	movwf	_role& (0+255),b
 18486                           
 18487                           ; BSR set to: 1
 18488                           ;miwi_mesh.c: 1426: MiWiCapacityInfo.bits.Role = role;
 18489  0036AC  C1CA  F14A         	movff	_role,??_MiWiTasks
 18490  0036B0  0101               	movlb	1	; () banked
 18491  0036B2  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 18492  0036B4  0101               	movlb	1	; () banked
 18493  0036B6  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 18494  0036B8  0101               	movlb	1	; () banked
 18495  0036BA  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18496  0036BC  0BF9               	andlw	-7
 18497  0036BE  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18498  0036C0  0101               	movlb	1	; () banked
 18499  0036C2  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 18500                           
 18501                           ; BSR set to: 1
 18502                           ;miwi_mesh.c: 1427: knownCoordinators |= ((1<<(myShortAddress.v[1] & 0x07)) + 1);
 18503  0036C4  C1F3  F14A         	movff	_myShortAddress+1,??_MiWiTasks
 18504  0036C8  0E07               	movlw	7
 18505  0036CA  0101               	movlb	1	; () banked
 18506  0036CC  174A               	andwf	??_MiWiTasks& (0+255),f,b
 18507  0036CE  0E01               	movlw	1
 18508  0036D0  0101               	movlb	1	; () banked
 18509  0036D2  6F4B               	movwf	(??_MiWiTasks+1)& (0+255),b
 18510  0036D4  0101               	movlb	1	; () banked
 18511  0036D6  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 18512  0036D8  D003               	goto	u20884
 18513  0036DA                     u20885:
 18514  0036DA  0101               	movlb	1	; () banked
 18515  0036DC  90D8               	bcf	status,0,c
 18516  0036DE  374B               	rlcf	(??_MiWiTasks+1)& (0+255),f,b
 18517  0036E0                     u20884:
 18518  0036E0  0101               	movlb	1	; () banked
 18519  0036E2  2F4A               	decfsz	??_MiWiTasks& (0+255),f,b
 18520  0036E4  D7FA               	goto	u20885
 18521  0036E6  0101               	movlb	1	; () banked
 18522  0036E8  294B               	incf	(??_MiWiTasks+1)& (0+255),w,b
 18523  0036EA  0101               	movlb	1	; () banked
 18524  0036EC  13C7               	iorwf	_knownCoordinators& (0+255),f,b
 18525                           
 18526                           ;miwi_mesh.c: 1429: }
 18527  0036EE  D00F               	goto	l18530
 18528  0036F0                     l18526:
 18529                           
 18530                           ; BSR set to: 1
 18531                           ;miwi_mesh.c: 1430: else
 18532                           ;miwi_mesh.c: 1431: {
 18533                           ;miwi_mesh.c: 1432: ;
 18534                           ;miwi_mesh.c: 1433: role = 0x00;
 18535  0036F0  0E00               	movlw	0
 18536  0036F2  0101               	movlb	1	; () banked
 18537  0036F4  6FCA               	movwf	_role& (0+255),b
 18538                           
 18539                           ; BSR set to: 1
 18540                           ;miwi_mesh.c: 1434: MiWiCapacityInfo.bits.Role = role;
 18541  0036F6  C1CA  F14A         	movff	_role,??_MiWiTasks
 18542  0036FA  0101               	movlb	1	; () banked
 18543  0036FC  474A               	rlncf	??_MiWiTasks& (0+255),f,b
 18544  0036FE  0101               	movlb	1	; () banked
 18545  003700  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 18546  003702  0101               	movlb	1	; () banked
 18547  003704  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18548  003706  0BF9               	andlw	-7
 18549  003708  194A               	xorwf	??_MiWiTasks& (0+255),w,b
 18550  00370A  0101               	movlb	1	; () banked
 18551  00370C  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 18552  00370E                     l18530:
 18553                           
 18554                           ; BSR set to: 1
 18555                           ;miwi_mesh.c: 1435: }
 18556                           ;miwi_mesh.c: 1442: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 18557  00370E  0EF2               	movlw	low _myShortAddress
 18558  003710  0101               	movlb	1	; () banked
 18559  003712  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18560  003714  0E01               	movlw	high _myShortAddress
 18561  003716  0101               	movlb	1	; () banked
 18562  003718  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18563  00371A  0EF0               	movlw	low _myPANID
 18564  00371C  0101               	movlb	1	; () banked
 18565  00371E  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18566  003720  0E01               	movlw	high _myPANID
 18567  003722  0101               	movlb	1	; () banked
 18568  003724  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18569  003726  ECD6  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 18570                           
 18571                           ;miwi_mesh.c: 1445: MiWiStateMachine.bits.memberOfNetwork = 1;
 18572  00372A  0101               	movlb	1	; () banked
 18573  00372C  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 18574                           
 18575                           ; BSR set to: 1
 18576                           ;miwi_mesh.c: 1448: tempNodeStatus.Val = 0xBF;
 18577  00372E  0EBF               	movlw	191
 18578  003730  0100               	movlb	0	; () banked
 18579  003732  6FA0               	movwf	_tempNodeStatus& (0+255),b
 18580                           
 18581                           ; BSR set to: 0
 18582                           ;miwi_mesh.c: 1449: for(i = 0; i < 4; i++)
 18583  003734  0E00               	movlw	0
 18584  003736  0101               	movlb	1	; () banked
 18585  003738  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18586  00373A                     l18538:
 18587                           
 18588                           ; BSR set to: 1
 18589  00373A  0E03               	movlw	3
 18590  00373C  0101               	movlb	1	; () banked
 18591  00373E  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18592  003740  D001               	goto	l18542
 18593  003742  D019               	goto	l18548
 18594  003744                     l18542:
 18595                           
 18596                           ; BSR set to: 1
 18597                           ;miwi_mesh.c: 1450: {
 18598                           ;miwi_mesh.c: 1451: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18599  003744  0101               	movlb	1	; () banked
 18600  003746  517C               	movf	MiWiTasks@i& (0+255),w,b
 18601  003748  0D01               	mullw	1
 18602  00374A  50F3               	movf	prodl,w,c
 18603  00374C  0101               	movlb	1	; () banked
 18604  00374E  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18605  003750  6ED9               	movwf	fsr2l,c
 18606  003752  50F4               	movf	prodh,w,c
 18607  003754  0101               	movlb	1	; () banked
 18608  003756  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18609  003758  6EDA               	movwf	fsr2h,c
 18610  00375A  0101               	movlb	1	; () banked
 18611  00375C  517C               	movf	MiWiTasks@i& (0+255),w,b
 18612  00375E  0D01               	mullw	1
 18613  003760  0EA6               	movlw	low _tempLongAddress
 18614  003762  24F3               	addwf	prodl,w,c
 18615  003764  6EE1               	movwf	fsr1l,c
 18616  003766  0E01               	movlw	high _tempLongAddress
 18617  003768  20F4               	addwfc	prodh,w,c
 18618  00376A  6EE2               	movwf	fsr1h,c
 18619  00376C  CFDF FFE7          	movff	indf2,indf1
 18620                           
 18621                           ; BSR set to: 1
 18622  003770  0101               	movlb	1	; () banked
 18623  003772  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18624  003774  D7E2               	goto	l18538
 18625  003776                     l18548:
 18626                           
 18627                           ; BSR set to: 1
 18628                           ;miwi_mesh.c: 1452: }
 18629                           ;miwi_mesh.c: 1454: if(myShortAddress.v[0] == 0x00)
 18630  003776  0101               	movlb	1	; () banked
 18631  003778  51F2               	movf	_myShortAddress& (0+255),w,b
 18632  00377A  A4D8               	btfss	status,2,c
 18633  00377C  D005               	goto	l758
 18634                           
 18635                           ; BSR set to: 1
 18636                           ;miwi_mesh.c: 1455: {
 18637                           ;miwi_mesh.c: 1458: tempShortAddress.Val = 0x0000;
 18638  00377E  0E00               	movlw	0
 18639  003780  0101               	movlb	1	; () banked
 18640  003782  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 18641  003784  0E00               	movlw	0
 18642  003786  D004               	goto	L6
 18643  003788                     l758:
 18644                           
 18645                           ; BSR set to: 1
 18646                           ;miwi_mesh.c: 1460: else
 18647                           ;miwi_mesh.c: 1461: {
 18648                           ;miwi_mesh.c: 1462: tempShortAddress.v[1] = myShortAddress.v[1];
 18649  003788  C1F3  F1F5         	movff	_myShortAddress+1,_tempShortAddress+1
 18650                           
 18651                           ; BSR set to: 1
 18652                           ;miwi_mesh.c: 1463: tempShortAddress.v[0] = 0x00;
 18653  00378C  0E00               	movlw	0
 18654  00378E  0101               	movlb	1	; () banked
 18655  003790                     L6:
 18656  003790  6FF4               	movwf	_tempShortAddress& (0+255),b
 18657                           
 18658                           ; BSR set to: 1
 18659                           ;miwi_mesh.c: 1464: }
 18660                           ;miwi_mesh.c: 1466: tempPANID.Val = myPANID.Val;
 18661                           
 18662                           ; BSR set to: 1
 18663  003792  C1F0  F1BB         	movff	_myPANID,_tempPANID
 18664  003796  C1F1  F1BC         	movff	_myPANID+1,_tempPANID+1
 18665                           
 18666                           ; BSR set to: 1
 18667                           ;miwi_mesh.c: 1469: myParent = AddNodeToNetworkTable();
 18668  00379A  EC11  F046         	call	_AddNodeToNetworkTable	;wreg free
 18669  00379E  0101               	movlb	1	; () banked
 18670  0037A0  6FC9               	movwf	_myParent& (0+255),b
 18671                           
 18672                           ; BSR set to: 1
 18673                           ;miwi_mesh.c: 1471: IncomingFrameCounter[myParent].Val = 0;
 18674  0037A2  0101               	movlb	1	; () banked
 18675  0037A4  51C9               	movf	_myParent& (0+255),w,b
 18676  0037A6  0D04               	mullw	4
 18677  0037A8  0E00               	movlw	low _IncomingFrameCounter
 18678  0037AA  24F3               	addwf	prodl,w,c
 18679  0037AC  6ED9               	movwf	fsr2l,c
 18680  0037AE  0E05               	movlw	high _IncomingFrameCounter
 18681  0037B0  20F4               	addwfc	prodh,w,c
 18682  0037B2  6EDA               	movwf	fsr2h,c
 18683  0037B4  6ADE               	clrf	postinc2,c
 18684  0037B6  6ADE               	clrf	postinc2,c
 18685  0037B8  6ADE               	clrf	postinc2,c
 18686  0037BA  6ADD               	clrf	postdec2,c
 18687                           
 18688                           ;miwi_mesh.c: 1491: ;
 18689                           ;miwi_mesh.c: 1492: }
 18690  0037BC  D1A5               	goto	l641
 18691  0037BE                     l753:
 18692                           
 18693                           ; BSR set to: 1
 18694                           ;miwi_mesh.c: 1493: else
 18695                           ;miwi_mesh.c: 1494: {
 18696                           ;miwi_mesh.c: 1496: myParent = 0xFF;
 18697  0037BE  0101               	movlb	1	; () banked
 18698  0037C0  69C9               	setf	_myParent& (0+255),b
 18699                           
 18700                           ;miwi_mesh.c: 1497: myPANID.Val = 0xFFFF;
 18701  0037C2  0101               	movlb	1	; () banked
 18702  0037C4  69F0               	setf	_myPANID& (0+255),b
 18703  0037C6  69F1               	setf	(_myPANID+1)& (0+255),b
 18704                           
 18705                           ;miwi_mesh.c: 1498: tempShortAddress.Val = 0xFFFF;
 18706  0037C8  0101               	movlb	1	; () banked
 18707  0037CA  69F4               	setf	_tempShortAddress& (0+255),b
 18708  0037CC  69F5               	setf	(_tempShortAddress+1)& (0+255),b
 18709                           
 18710                           ; BSR set to: 1
 18711                           ;miwi_mesh.c: 1499: MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
 18712  0037CE  0EF4               	movlw	low _tempShortAddress
 18713  0037D0  0101               	movlb	1	; () banked
 18714  0037D2  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 18715  0037D4  0E01               	movlw	high _tempShortAddress
 18716  0037D6  0101               	movlb	1	; () banked
 18717  0037D8  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 18718  0037DA  0EF0               	movlw	low _myPANID
 18719  0037DC  0101               	movlb	1	; () banked
 18720  0037DE  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 18721  0037E0  0E01               	movlw	high _myPANID
 18722  0037E2  0101               	movlb	1	; () banked
 18723  0037E4  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 18724  0037E6  ECD6  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 18725                           
 18726                           ;miwi_mesh.c: 1505: }
 18727                           ;miwi_mesh.c: 1506: }
 18728                           ;miwi_mesh.c: 1507: break;
 18729  0037EA  D18E               	goto	l641
 18730  0037EC                     l18562:
 18731                           
 18732                           ;miwi_mesh.c: 1511: {
 18733                           ;miwi_mesh.c: 1512: uint8_t cIndex;
 18734                           ;miwi_mesh.c: 1527: {
 18735                           ;miwi_mesh.c: 1528: for(i = 0; i < 4; i++)
 18736  0037EC  0E00               	movlw	0
 18737  0037EE  0101               	movlb	1	; () banked
 18738  0037F0  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18739  0037F2                     l18564:
 18740                           
 18741                           ; BSR set to: 1
 18742  0037F2  0E03               	movlw	3
 18743  0037F4  0101               	movlb	1	; () banked
 18744  0037F6  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18745  0037F8  D001               	goto	l18568
 18746  0037FA  D019               	goto	l18574
 18747  0037FC                     l18568:
 18748                           
 18749                           ; BSR set to: 1
 18750                           ;miwi_mesh.c: 1529: {
 18751                           ;miwi_mesh.c: 1530: tempLongAddress[i] = MACRxPacket.SourceAddress[i];
 18752  0037FC  0101               	movlb	1	; () banked
 18753  0037FE  517C               	movf	MiWiTasks@i& (0+255),w,b
 18754  003800  0D01               	mullw	1
 18755  003802  50F3               	movf	prodl,w,c
 18756  003804  0101               	movlb	1	; () banked
 18757  003806  259B               	addwf	(_MACRxPacket+1)& (0+255),w,b
 18758  003808  6ED9               	movwf	fsr2l,c
 18759  00380A  50F4               	movf	prodh,w,c
 18760  00380C  0101               	movlb	1	; () banked
 18761  00380E  219C               	addwfc	(_MACRxPacket+2)& (0+255),w,b
 18762  003810  6EDA               	movwf	fsr2h,c
 18763  003812  0101               	movlb	1	; () banked
 18764  003814  517C               	movf	MiWiTasks@i& (0+255),w,b
 18765  003816  0D01               	mullw	1
 18766  003818  0EA6               	movlw	low _tempLongAddress
 18767  00381A  24F3               	addwf	prodl,w,c
 18768  00381C  6EE1               	movwf	fsr1l,c
 18769  00381E  0E01               	movlw	high _tempLongAddress
 18770  003820  20F4               	addwfc	prodh,w,c
 18771  003822  6EE2               	movwf	fsr1h,c
 18772  003824  CFDF FFE7          	movff	indf2,indf1
 18773                           
 18774                           ; BSR set to: 1
 18775  003828  0101               	movlb	1	; () banked
 18776  00382A  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 18777  00382C  D7E2               	goto	l18564
 18778  00382E                     l18574:
 18779                           
 18780                           ; BSR set to: 1
 18781                           ;miwi_mesh.c: 1531: }
 18782                           ;miwi_mesh.c: 1532: if( (cIndex = SearchForLongAddress()) == 0xFF )
 18783  00382E  ECAF  F04E         	call	_SearchForLongAddress	;wreg free
 18784  003832  0101               	movlb	1	; () banked
 18785  003834  6F6B               	movwf	MiWiTasks@cIndex& (0+255),b
 18786  003836  0101               	movlb	1	; () banked
 18787  003838  296B               	incf	MiWiTasks@cIndex& (0+255),w,b
 18788  00383A  B4D8               	btfsc	status,2,c
 18789  00383C  D165               	goto	l641
 18790                           
 18791                           ; BSR set to: 1
 18792                           ;miwi_mesh.c: 1535: }
 18793                           ;miwi_mesh.c: 1536: }
 18794                           ;miwi_mesh.c: 1539: if( ConnectionTable[cIndex].status.bits.isFamily )
 18795                           
 18796                           ; BSR set to: 1
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;miwi_mesh.c: 1533: {
 18800                           ;miwi_mesh.c: 1534: break;
 18801  00383E  0101               	movlb	1	; () banked
 18802  003840  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 18803  003842  0D09               	mullw	9
 18804  003844  0E08               	movlw	8
 18805  003846  26F3               	addwf	prodl,f,c
 18806  003848  0E00               	movlw	0
 18807  00384A  22F4               	addwfc	prodh,f,c
 18808  00384C  0E00               	movlw	low _ConnectionTable
 18809  00384E  24F3               	addwf	prodl,w,c
 18810  003850  6ED9               	movwf	fsr2l,c
 18811  003852  0E06               	movlw	high _ConnectionTable
 18812  003854  20F4               	addwfc	prodh,w,c
 18813  003856  6EDA               	movwf	fsr2h,c
 18814  003858  AADF               	btfss	indf2,5,c
 18815  00385A  D156               	goto	l641
 18816                           
 18817                           ; BSR set to: 1
 18818                           ;miwi_mesh.c: 1540: {
 18819                           ;miwi_mesh.c: 1541: if( cIndex != myParent )
 18820  00385C  0101               	movlb	1	; () banked
 18821  00385E  51C9               	movf	_myParent& (0+255),w,b
 18822  003860  0101               	movlb	1	; () banked
 18823  003862  196B               	xorwf	MiWiTasks@cIndex& (0+255),w,b
 18824  003864  B4D8               	btfsc	status,2,c
 18825  003866  D010               	goto	l18584
 18826                           
 18827                           ; BSR set to: 1
 18828                           ;miwi_mesh.c: 1542: {
 18829                           ;miwi_mesh.c: 1543: ConnectionTable[cIndex].status.Val = 0;
 18830  003868  0101               	movlb	1	; () banked
 18831  00386A  516B               	movf	MiWiTasks@cIndex& (0+255),w,b
 18832  00386C  0D09               	mullw	9
 18833  00386E  0E08               	movlw	8
 18834  003870  26F3               	addwf	prodl,f,c
 18835  003872  0E00               	movlw	0
 18836  003874  22F4               	addwfc	prodh,f,c
 18837  003876  0E00               	movlw	low _ConnectionTable
 18838  003878  24F3               	addwf	prodl,w,c
 18839  00387A  6ED9               	movwf	fsr2l,c
 18840  00387C  0E06               	movlw	high _ConnectionTable
 18841  00387E  20F4               	addwfc	prodh,w,c
 18842  003880  6EDA               	movwf	fsr2h,c
 18843  003882  0E00               	movlw	0
 18844  003884  6EDF               	movwf	indf2,c
 18845                           
 18846                           ;miwi_mesh.c: 1547: }
 18847  003886  D140               	goto	l641
 18848  003888                     l18584:
 18849                           
 18850                           ; BSR set to: 1
 18851                           ;miwi_mesh.c: 1548: else
 18852                           ;miwi_mesh.c: 1549: {
 18853                           ;miwi_mesh.c: 1551: for(i = 0; i < 64; i++)
 18854  003888  0E00               	movlw	0
 18855  00388A  0101               	movlb	1	; () banked
 18856  00388C  6F7C               	movwf	MiWiTasks@i& (0+255),b
 18857  00388E                     l18586:
 18858                           
 18859                           ; BSR set to: 1
 18860  00388E  0E3F               	movlw	63
 18861  003890  0101               	movlb	1	; () banked
 18862  003892  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 18863  003894  D001               	goto	l18590
 18864  003896  D081               	goto	l769
 18865  003898                     l18590:
 18866                           
 18867                           ; BSR set to: 1
 18868                           ;miwi_mesh.c: 1552: {
 18869                           ;miwi_mesh.c: 1553: if( ConnectionTable[i].status.bits.isValid &&
 18870                           ;miwi_mesh.c: 1554: ConnectionTable[i].status.bits.isFamily && (i != myParent ))
 18871  003898  0101               	movlb	1	; () banked
 18872  00389A  517C               	movf	MiWiTasks@i& (0+255),w,b
 18873  00389C  0D09               	mullw	9
 18874  00389E  0E08               	movlw	8
 18875  0038A0  26F3               	addwf	prodl,f,c
 18876  0038A2  0E00               	movlw	0
 18877  0038A4  22F4               	addwfc	prodh,f,c
 18878  0038A6  0E00               	movlw	low _ConnectionTable
 18879  0038A8  24F3               	addwf	prodl,w,c
 18880  0038AA  6ED9               	movwf	fsr2l,c
 18881  0038AC  0E06               	movlw	high _ConnectionTable
 18882  0038AE  20F4               	addwfc	prodh,w,c
 18883  0038B0  6EDA               	movwf	fsr2h,c
 18884  0038B2  AEDF               	btfss	indf2,7,c
 18885  0038B4  D060               	goto	l18624
 18886                           
 18887                           ; BSR set to: 1
 18888  0038B6  0101               	movlb	1	; () banked
 18889  0038B8  517C               	movf	MiWiTasks@i& (0+255),w,b
 18890  0038BA  0D09               	mullw	9
 18891  0038BC  0E08               	movlw	8
 18892  0038BE  26F3               	addwf	prodl,f,c
 18893  0038C0  0E00               	movlw	0
 18894  0038C2  22F4               	addwfc	prodh,f,c
 18895  0038C4  0E00               	movlw	low _ConnectionTable
 18896  0038C6  24F3               	addwf	prodl,w,c
 18897  0038C8  6ED9               	movwf	fsr2l,c
 18898  0038CA  0E06               	movlw	high _ConnectionTable
 18899  0038CC  20F4               	addwfc	prodh,w,c
 18900  0038CE  6EDA               	movwf	fsr2h,c
 18901  0038D0  AADF               	btfss	indf2,5,c
 18902  0038D2  D051               	goto	l18624
 18903                           
 18904                           ; BSR set to: 1
 18905  0038D4  0101               	movlb	1	; () banked
 18906  0038D6  51C9               	movf	_myParent& (0+255),w,b
 18907  0038D8  0101               	movlb	1	; () banked
 18908  0038DA  197C               	xorwf	MiWiTasks@i& (0+255),w,b
 18909  0038DC  B4D8               	btfsc	status,2,c
 18910  0038DE  D04B               	goto	l18624
 18911                           
 18912                           ; BSR set to: 1
 18913                           ;miwi_mesh.c: 1555: {
 18914                           ;miwi_mesh.c: 1556: uint16_t j;
 18915                           ;miwi_mesh.c: 1558: {TxData = 0;};
 18916  0038E0  0E00               	movlw	0
 18917  0038E2  0101               	movlb	1	; () banked
 18918  0038E4  6FC6               	movwf	_TxData& (0+255),b
 18919                           
 18920                           ; BSR set to: 1
 18921                           ;miwi_mesh.c: 1559: TxBuffer[TxData++] = 0x03;
 18922  0038E6  0101               	movlb	1	; () banked
 18923  0038E8  51C6               	movf	_TxData& (0+255),w,b
 18924  0038EA  0D01               	mullw	1
 18925  0038EC  0EA6               	movlw	low _TxBuffer
 18926  0038EE  24F3               	addwf	prodl,w,c
 18927  0038F0  6ED9               	movwf	fsr2l,c
 18928  0038F2  0E02               	movlw	high _TxBuffer
 18929  0038F4  20F4               	addwfc	prodh,w,c
 18930  0038F6  6EDA               	movwf	fsr2h,c
 18931  0038F8  0E03               	movlw	3
 18932  0038FA  6EDF               	movwf	indf2,c
 18933                           
 18934                           ; BSR set to: 1
 18935  0038FC  0101               	movlb	1	; () banked
 18936  0038FE  2BC6               	incf	_TxData& (0+255),f,b
 18937                           
 18938                           ; BSR set to: 1
 18939                           ;miwi_mesh.c: 1560: MTP.flags.Val = 0;
 18940  003900  0E00               	movlw	0
 18941  003902  0101               	movlb	1	; () banked
 18942  003904  6FAD               	movwf	_MTP& (0+255),b
 18943                           
 18944                           ; BSR set to: 1
 18945                           ;miwi_mesh.c: 1561: MTP.flags.bits.ackReq = 1;
 18946  003906  0101               	movlb	1	; () banked
 18947  003908  8BAD               	bsf	_MTP& (0+255),5,b
 18948                           
 18949                           ; BSR set to: 1
 18950                           ;miwi_mesh.c: 1562: MTP.flags.bits.packetType = 0x01;
 18951  00390A  0101               	movlb	1	; () banked
 18952  00390C  51AD               	movf	_MTP& (0+255),w,b
 18953  00390E  0BFC               	andlw	-4
 18954  003910  0901               	iorlw	1
 18955  003912  6FAD               	movwf	_MTP& (0+255),b
 18956                           
 18957                           ; BSR set to: 1
 18958                           ;miwi_mesh.c: 1569: MTP.flags.bits.sourcePrsnt = 1;
 18959  003914  0101               	movlb	1	; () banked
 18960  003916  8FAD               	bsf	_MTP& (0+255),7,b
 18961                           
 18962                           ; BSR set to: 1
 18963                           ;miwi_mesh.c: 1570: MTP.DestAddress = ConnectionTable[i].Address;
 18964  003918  0101               	movlb	1	; () banked
 18965  00391A  517C               	movf	MiWiTasks@i& (0+255),w,b
 18966  00391C  0D09               	mullw	9
 18967  00391E  0E04               	movlw	4
 18968  003920  26F3               	addwf	prodl,f,c
 18969  003922  0E00               	movlw	0
 18970  003924  22F4               	addwfc	prodh,f,c
 18971  003926  0E00               	movlw	low _ConnectionTable
 18972  003928  24F3               	addwf	prodl,w,c
 18973  00392A  0101               	movlb	1	; () banked
 18974  00392C  6FAE               	movwf	(_MTP+1)& (0+255),b
 18975  00392E  0E06               	movlw	high _ConnectionTable
 18976  003930  20F4               	addwfc	prodh,w,c
 18977  003932  0101               	movlb	1	; () banked
 18978  003934  6FAF               	movwf	(_MTP+2)& (0+255),b
 18979                           
 18980                           ; BSR set to: 1
 18981                           ;miwi_mesh.c: 1572: MiMAC_SendPacket(MTP, TxBuffer, TxData);
 18982  003936  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 18983  00393A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 18984  00393E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 18985  003942  0EA6               	movlw	low _TxBuffer
 18986  003944  0101               	movlb	1	; () banked
 18987  003946  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 18988  003948  0E02               	movlw	high _TxBuffer
 18989  00394A  0101               	movlb	1	; () banked
 18990  00394C  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 18991  00394E  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 18992  003952  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 18993                           
 18994                           ;miwi_mesh.c: 1573: for(j = 0; j < 0xFFF; j++) {}
 18995  003956  0E00               	movlw	0
 18996  003958  0101               	movlb	1	; () banked
 18997  00395A  6F6A               	movwf	(MiWiTasks@j_2544+1)& (0+255),b
 18998  00395C  0E00               	movlw	0
 18999  00395E  6F69               	movwf	MiWiTasks@j_2544& (0+255),b
 19000  003960                     l18616:
 19001                           
 19002                           ; BSR set to: 1
 19003  003960  0101               	movlb	1	; () banked
 19004  003962  2969               	incf	MiWiTasks@j_2544& (0+255),w,b
 19005  003964  0E0F               	movlw	15
 19006  003966  0101               	movlb	1	; () banked
 19007  003968  596A               	subwfb	(MiWiTasks@j_2544+1)& (0+255),w,b
 19008  00396A  B0D8               	btfsc	status,0,c
 19009  00396C  D004               	goto	l18624
 19010                           
 19011                           ; BSR set to: 1
 19012                           
 19013                           ; BSR set to: 1
 19014                           
 19015                           ; BSR set to: 1
 19016  00396E  0101               	movlb	1	; () banked
 19017  003970  4B69               	infsnz	MiWiTasks@j_2544& (0+255),f,b
 19018  003972  2B6A               	incf	(MiWiTasks@j_2544+1)& (0+255),f,b
 19019  003974  D7F5               	goto	l18616
 19020  003976                     l18624:
 19021                           
 19022                           ; BSR set to: 1
 19023                           ;miwi_mesh.c: 1574: }
 19024                           ;miwi_mesh.c: 1575: ConnectionTable[i].status.Val = 0;
 19025  003976  0101               	movlb	1	; () banked
 19026  003978  517C               	movf	MiWiTasks@i& (0+255),w,b
 19027  00397A  0D09               	mullw	9
 19028  00397C  0E08               	movlw	8
 19029  00397E  26F3               	addwf	prodl,f,c
 19030  003980  0E00               	movlw	0
 19031  003982  22F4               	addwfc	prodh,f,c
 19032  003984  0E00               	movlw	low _ConnectionTable
 19033  003986  24F3               	addwf	prodl,w,c
 19034  003988  6ED9               	movwf	fsr2l,c
 19035  00398A  0E06               	movlw	high _ConnectionTable
 19036  00398C  20F4               	addwfc	prodh,w,c
 19037  00398E  6EDA               	movwf	fsr2h,c
 19038  003990  0E00               	movlw	0
 19039  003992  6EDF               	movwf	indf2,c
 19040                           
 19041                           ; BSR set to: 1
 19042  003994  0101               	movlb	1	; () banked
 19043  003996  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 19044  003998  D77A               	goto	l18586
 19045  00399A                     l769:
 19046                           
 19047                           ; BSR set to: 1
 19048                           ;miwi_mesh.c: 1576: }
 19049                           ;miwi_mesh.c: 1577: myParent = 0xFF;
 19050  00399A  0101               	movlb	1	; () banked
 19051  00399C  69C9               	setf	_myParent& (0+255),b
 19052                           
 19053                           ;miwi_mesh.c: 1578: myShortAddress.Val = 0xFFFF;
 19054  00399E  0101               	movlb	1	; () banked
 19055  0039A0  69F2               	setf	_myShortAddress& (0+255),b
 19056  0039A2  69F3               	setf	(_myShortAddress+1)& (0+255),b
 19057                           
 19058                           ;miwi_mesh.c: 1579: myPANID.Val = 0xFFFF;
 19059  0039A4  0101               	movlb	1	; () banked
 19060  0039A6  69F0               	setf	_myPANID& (0+255),b
 19061  0039A8  69F1               	setf	(_myPANID+1)& (0+255),b
 19062                           
 19063                           ; BSR set to: 1
 19064                           ;miwi_mesh.c: 1580: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 19065  0039AA  0EF2               	movlw	low _myShortAddress
 19066  0039AC  0101               	movlb	1	; () banked
 19067  0039AE  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 19068  0039B0  0E01               	movlw	high _myShortAddress
 19069  0039B2  0101               	movlb	1	; () banked
 19070  0039B4  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 19071  0039B6  0EF0               	movlw	low _myPANID
 19072  0039B8  0101               	movlb	1	; () banked
 19073  0039BA  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 19074  0039BC  0E01               	movlw	high _myPANID
 19075  0039BE  0101               	movlb	1	; () banked
 19076  0039C0  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 19077  0039C2  ECD6  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 19078                           
 19079                           ;miwi_mesh.c: 1581: MiWiStateMachine.bits.memberOfNetwork = 0;
 19080  0039C6  0101               	movlb	1	; () banked
 19081  0039C8  93B5               	bcf	_MiWiStateMachine& (0+255),1,b
 19082                           
 19083                           ; BSR set to: 1
 19084                           ;miwi_mesh.c: 1588: }
 19085                           ;miwi_mesh.c: 1589: }
 19086                           ;miwi_mesh.c: 1610: }
 19087                           ;miwi_mesh.c: 1611: break;
 19088                           
 19089                           ; BSR set to: 1
 19090  0039CA  D09E               	goto	l641
 19091  0039CC                     l18634:
 19092                           
 19093                           ;miwi_mesh.c: 1665: {
 19094                           ;miwi_mesh.c: 1666: if( ConnMode > 0x02 )
 19095  0039CC  0E02               	movlw	2
 19096  0039CE  0101               	movlb	1	; () banked
 19097  0039D0  65BF               	cpfsgt	_ConnMode& (0+255),b
 19098  0039D2  D001               	goto	l774
 19099  0039D4  D099               	goto	l641
 19100  0039D6                     l774:
 19101                           
 19102                           ; BSR set to: 1
 19103                           ;miwi_mesh.c: 1669: }
 19104                           ;miwi_mesh.c: 1672: if(MiWiStateMachine.bits.memberOfNetwork)
 19105  0039D6  0101               	movlb	1	; () banked
 19106  0039D8  A3B5               	btfss	_MiWiStateMachine& (0+255),1,b
 19107  0039DA  D096               	goto	l641
 19108                           
 19109                           ; BSR set to: 1
 19110                           ;miwi_mesh.c: 1673: {
 19111                           ;miwi_mesh.c: 1674: if( MACRxPacket.Payload[1] != currentChannel )
 19112  0039DC  0101               	movlb	1	; () banked
 19113  0039DE  EE20 F001          	lfsr	2,1
 19114  0039E2  519D               	movf	(_MACRxPacket+3)& (0+255),w,b
 19115  0039E4  26D9               	addwf	fsr2l,f,c
 19116  0039E6  519E               	movf	(_MACRxPacket+4)& (0+255),w,b
 19117  0039E8  22DA               	addwfc	fsr2h,f,c
 19118  0039EA  0101               	movlb	1	; () banked
 19119  0039EC  51F6               	movf	_currentChannel& (0+255),w,b
 19120  0039EE  18DE               	xorwf	postinc2,w,c
 19121  0039F0  A4D8               	btfss	status,2,c
 19122  0039F2  D08A               	goto	l641
 19123                           
 19124                           ; BSR set to: 1
 19125                           ;miwi_mesh.c: 1677: }
 19126                           ;miwi_mesh.c: 1681: if(role != 0x00)
 19127                           
 19128                           ; BSR set to: 1
 19129                           
 19130                           ; BSR set to: 1
 19131                           ;miwi_mesh.c: 1675: {
 19132                           ;miwi_mesh.c: 1676: break;
 19133  0039F4  0101               	movlb	1	; () banked
 19134  0039F6  51CA               	movf	_role& (0+255),w,b
 19135  0039F8  B4D8               	btfsc	status,2,c
 19136  0039FA  D086               	goto	l641
 19137                           
 19138                           ; BSR set to: 1
 19139                           ;miwi_mesh.c: 1682: {
 19140                           ;miwi_mesh.c: 1685: if (role == 0x01)
 19141  0039FC  0101               	movlb	1	; () banked
 19142  0039FE  05CA               	decf	_role& (0+255),w,b
 19143  003A00  A4D8               	btfss	status,2,c
 19144  003A02  D05F               	goto	l18662
 19145                           
 19146                           ; BSR set to: 1
 19147                           ;miwi_mesh.c: 1687: {
 19148                           ;miwi_mesh.c: 1691: uint8_t jitter = 20;
 19149  003A04  0E14               	movlw	20
 19150  003A06  0101               	movlb	1	; () banked
 19151  003A08  6F62               	movwf	MiWiTasks@jitter& (0+255),b
 19152                           
 19153                           ;miwi_mesh.c: 1692: MIWI_TICK t1, t2;
 19154                           ;miwi_mesh.c: 1693: while( jitter > 0 )
 19155  003A0A  D04D               	goto	l18658
 19156  003A0C                     l18648:
 19157                           
 19158                           ; BSR set to: 1
 19159                           ;miwi_mesh.c: 1694: {
 19160                           ;miwi_mesh.c: 1695: jitter--;
 19161  003A0C  0101               	movlb	1	; () banked
 19162  003A0E  0762               	decf	MiWiTasks@jitter& (0+255),f,b
 19163                           
 19164                           ; BSR set to: 1
 19165                           ;miwi_mesh.c: 1696: t1 = MiWi_TickGet();
 19166  003A10  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 19167  003A14  C100  F156         	movff	?_MiWi_TickGet,MiWiTasks@t1_2546
 19168  003A18  C101  F157         	movff	?_MiWi_TickGet+1,MiWiTasks@t1_2546+1
 19169  003A1C  C102  F158         	movff	?_MiWi_TickGet+2,MiWiTasks@t1_2546+2
 19170  003A20  C103  F159         	movff	?_MiWi_TickGet+3,MiWiTasks@t1_2546+3
 19171  003A24                     l18652:
 19172                           
 19173                           ;miwi_mesh.c: 1698: {
 19174                           ;miwi_mesh.c: 1699: t2 = MiWi_TickGet();
 19175  003A24  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 19176  003A28  C100  F15A         	movff	?_MiWi_TickGet,MiWiTasks@t2_2557
 19177  003A2C  C101  F15B         	movff	?_MiWi_TickGet+1,MiWiTasks@t2_2557+1
 19178  003A30  C102  F15C         	movff	?_MiWi_TickGet+2,MiWiTasks@t2_2557+2
 19179  003A34  C103  F15D         	movff	?_MiWi_TickGet+3,MiWiTasks@t2_2557+3
 19180                           
 19181                           ;miwi_mesh.c: 1700: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 19182  003A38  C156  F14A         	movff	MiWiTasks@t1_2546,??_MiWiTasks
 19183  003A3C  C157  F14B         	movff	MiWiTasks@t1_2546+1,??_MiWiTasks+1
 19184  003A40  C158  F14C         	movff	MiWiTasks@t1_2546+2,??_MiWiTasks+2
 19185  003A44  C159  F14D         	movff	MiWiTasks@t1_2546+3,??_MiWiTasks+3
 19186  003A48  0101               	movlb	1	; () banked
 19187  003A4A  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19188  003A4C  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19189  003A4E  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19190  003A50  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19191  003A52  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19192  003A54  0E00               	movlw	0
 19193  003A56  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19194  003A58  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19195  003A5A  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19196  003A5C  0101               	movlb	1	; () banked
 19197  003A5E  515A               	movf	MiWiTasks@t2_2557& (0+255),w,b
 19198  003A60  0101               	movlb	1	; () banked
 19199  003A62  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19200  003A64  0101               	movlb	1	; () banked
 19201  003A66  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 19202  003A68  0101               	movlb	1	; () banked
 19203  003A6A  515B               	movf	(MiWiTasks@t2_2557+1)& (0+255),w,b
 19204  003A6C  0101               	movlb	1	; () banked
 19205  003A6E  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19206  003A70  0101               	movlb	1	; () banked
 19207  003A72  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 19208  003A74  0101               	movlb	1	; () banked
 19209  003A76  515C               	movf	(MiWiTasks@t2_2557+2)& (0+255),w,b
 19210  003A78  0101               	movlb	1	; () banked
 19211  003A7A  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19212  003A7C  0101               	movlb	1	; () banked
 19213  003A7E  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 19214  003A80  0101               	movlb	1	; () banked
 19215  003A82  515D               	movf	(MiWiTasks@t2_2557+3)& (0+255),w,b
 19216  003A84  0101               	movlb	1	; () banked
 19217  003A86  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19218  003A88  0101               	movlb	1	; () banked
 19219  003A8A  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 19220  003A8C  0101               	movlb	1	; () banked
 19221  003A8E  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19222  003A90  0101               	movlb	1	; () banked
 19223  003A92  1150               	iorwf	(??_MiWiTasks+6)& (0+255),w,b
 19224  003A94  E108               	bnz	l18658
 19225  003A96  0EF5               	movlw	245
 19226  003A98  0101               	movlb	1	; () banked
 19227  003A9A  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19228  003A9C  0E01               	movlw	1
 19229  003A9E  0101               	movlb	1	; () banked
 19230  003AA0  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19231  003AA2  A0D8               	btfss	status,0,c
 19232  003AA4  D7BF               	goto	l18652
 19233  003AA6                     l18658:
 19234                           
 19235                           ; BSR set to: 1
 19236  003AA6  0101               	movlb	1	; () banked
 19237  003AA8  5162               	movf	MiWiTasks@jitter& (0+255),w,b
 19238  003AAA  0101               	movlb	1	; () banked
 19239  003AAC  A4D8               	btfss	status,2,c
 19240  003AAE  D7AE               	goto	l18648
 19241                           
 19242                           ; BSR set to: 1
 19243                           ;miwi_mesh.c: 1703: }
 19244                           ;miwi_mesh.c: 1704: }
 19245                           ;miwi_mesh.c: 1705: }
 19246                           ;miwi_mesh.c: 1709: BroadcastJitter(20);
 19247                           
 19248                           ; BSR set to: 1
 19249  003AB0  0E14               	movlw	20
 19250  003AB2  ECB5  F051         	call	_BroadcastJitter
 19251                           
 19252                           ;miwi_mesh.c: 1710: BroadcastJitter(20);
 19253  003AB6  0E14               	movlw	20
 19254  003AB8  ECB5  F051         	call	_BroadcastJitter
 19255                           
 19256                           ;miwi_mesh.c: 1711: BroadcastJitter(20);
 19257  003ABC  0E14               	movlw	20
 19258  003ABE  ECB5  F051         	call	_BroadcastJitter
 19259  003AC2                     l18662:
 19260                           
 19261                           ;miwi_mesh.c: 1712: }
 19262                           ;miwi_mesh.c: 1714: SendBeacon();
 19263  003AC2  ECAE  F043         	call	_SendBeacon	;wreg free
 19264                           
 19265                           ;miwi_mesh.c: 1764: }
 19266                           
 19267                           ;miwi_mesh.c: 1763: break;
 19268                           
 19269                           ;miwi_mesh.c: 1762: default:
 19270                           
 19271                           ;miwi_mesh.c: 1715: }
 19272                           ;miwi_mesh.c: 1716: }
 19273                           ;miwi_mesh.c: 1717: }
 19274                           ;miwi_mesh.c: 1718: break;
 19275  003AC6  D020               	goto	l641
 19276  003AC8                     l18666:
 19277  003AC8  C19D  FFD9         	movff	_MACRxPacket+3,fsr2l
 19278  003ACC  C19E  FFDA         	movff	_MACRxPacket+4,fsr2h
 19279  003AD0  50DF               	movf	indf2,w,c
 19280                           
 19281                           ; Switch size 1, requested type "space"
 19282                           ; Number of cases is 4, Range of values is 1 to 7
 19283                           ; switch strategies available:
 19284                           ; Name         Instructions Cycles
 19285                           ; simple_byte           13     7 (average)
 19286                           ;	Chosen strategy is simple_byte
 19287  003AD2  0A01               	xorlw	1	; case 1
 19288  003AD4  B4D8               	btfsc	status,2,c
 19289  003AD6  D4AC               	goto	l18408
 19290  003AD8  0A03               	xorlw	3	; case 2
 19291  003ADA  B4D8               	btfsc	status,2,c
 19292  003ADC  D5C2               	goto	l18514
 19293  003ADE  0A01               	xorlw	1	; case 3
 19294  003AE0  B4D8               	btfsc	status,2,c
 19295  003AE2  D684               	goto	l18562
 19296  003AE4  0A04               	xorlw	4	; case 7
 19297  003AE6  B4D8               	btfsc	status,2,c
 19298  003AE8  D771               	goto	l18634
 19299                           
 19300                           ;miwi_mesh.c: 1770: }
 19301                           
 19302                           ;miwi_mesh.c: 1768: break;
 19303                           
 19304                           ;miwi_mesh.c: 1767: default:
 19305                           
 19306                           ;miwi_mesh.c: 1765: break;
 19307  003AEA  D00E               	goto	l641
 19308  003AEC                     l18670:
 19309  003AEC  0101               	movlb	1	; () banked
 19310  003AEE  519A               	movf	_MACRxPacket& (0+255),w,b
 19311  003AF0  0B03               	andlw	3
 19312                           
 19313                           ; Switch size 1, requested type "space"
 19314                           ; Number of cases is 3, Range of values is 0 to 3
 19315                           ; switch strategies available:
 19316                           ; Name         Instructions Cycles
 19317                           ; simple_byte           10     6 (average)
 19318                           ;	Chosen strategy is simple_byte
 19319  003AF2  0A00               	xorlw	0	; case 0
 19320  003AF4  B4D8               	btfsc	status,2,c
 19321  003AF6  EF38  F012         	goto	l17942
 19322  003AFA  0A01               	xorlw	1	; case 1
 19323  003AFC  B4D8               	btfsc	status,2,c
 19324  003AFE  D7E4               	goto	l18666
 19325  003B00  0A02               	xorlw	2	; case 3
 19326  003B02  B4D8               	btfsc	status,2,c
 19327  003B04  EF63  F017         	goto	l18300
 19328  003B08                     l641:
 19329                           
 19330                           ;miwi_mesh.c: 1772: if( MiWiStateMachine.bits.RxHasUserData == 0 )
 19331  003B08  0101               	movlb	1	; () banked
 19332  003B0A  A5B5               	btfss	_MiWiStateMachine& (0+255),2,b
 19333                           
 19334                           ; BSR set to: 1
 19335                           ;miwi_mesh.c: 1773: {
 19336                           ;miwi_mesh.c: 1774: MiMAC_DiscardPacket();
 19337  003B0C  EC56  F05D         	call	_MiMAC_DiscardPacket	;wreg free
 19338  003B10                     l18674:
 19339                           
 19340                           ;miwi_mesh.c: 1775: }
 19341                           ;miwi_mesh.c: 1776: }
 19342                           ;miwi_mesh.c: 1778: t1 = MiWi_TickGet();
 19343  003B10  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 19344  003B14  C100  F164         	movff	?_MiWi_TickGet,MiWiTasks@t1
 19345  003B18  C101  F165         	movff	?_MiWi_TickGet+1,MiWiTasks@t1+1
 19346  003B1C  C102  F166         	movff	?_MiWi_TickGet+2,MiWiTasks@t1+2
 19347  003B20  C103  F167         	movff	?_MiWi_TickGet+3,MiWiTasks@t1+3
 19348                           
 19349                           ;miwi_mesh.c: 1845: for(i = 0; i < 4; i++)
 19350  003B24  0E00               	movlw	0
 19351  003B26  0101               	movlb	1	; () banked
 19352  003B28  6F7C               	movwf	MiWiTasks@i& (0+255),b
 19353  003B2A                     l18678:
 19354                           
 19355                           ; BSR set to: 1
 19356  003B2A  0E03               	movlw	3
 19357  003B2C  0101               	movlb	1	; () banked
 19358  003B2E  657C               	cpfsgt	MiWiTasks@i& (0+255),b
 19359  003B30  D001               	goto	l18682
 19360  003B32  D067               	goto	l790
 19361  003B34                     l18682:
 19362                           
 19363                           ; BSR set to: 1
 19364                           ;miwi_mesh.c: 1846: {
 19365                           ;miwi_mesh.c: 1847: if( BroadcastRecords[i].RxCounter > 0 )
 19366  003B34  0101               	movlb	1	; () banked
 19367  003B36  517C               	movf	MiWiTasks@i& (0+255),w,b
 19368  003B38  0D08               	mullw	8
 19369  003B3A  0E03               	movlw	3
 19370  003B3C  26F3               	addwf	prodl,f,c
 19371  003B3E  0E00               	movlw	0
 19372  003B40  22F4               	addwfc	prodh,f,c
 19373  003B42  0E28               	movlw	low _BroadcastRecords
 19374  003B44  24F3               	addwf	prodl,w,c
 19375  003B46  6ED9               	movwf	fsr2l,c
 19376  003B48  0E02               	movlw	high _BroadcastRecords
 19377  003B4A  20F4               	addwfc	prodh,w,c
 19378  003B4C  6EDA               	movwf	fsr2h,c
 19379  003B4E  50DF               	movf	indf2,w,c
 19380  003B50  B4D8               	btfsc	status,2,c
 19381  003B52  D054               	goto	l18688
 19382                           
 19383                           ; BSR set to: 1
 19384                           ;miwi_mesh.c: 1848: {
 19385                           ;miwi_mesh.c: 1849: if( (t1.Val - BroadcastRecords[i].StartTick.Val) > (((uint32_t)(1600
      +                          0000)/32)) )
 19386  003B54  0101               	movlb	1	; () banked
 19387  003B56  517C               	movf	MiWiTasks@i& (0+255),w,b
 19388  003B58  0D08               	mullw	8
 19389  003B5A  0E04               	movlw	4
 19390  003B5C  26F3               	addwf	prodl,f,c
 19391  003B5E  0E00               	movlw	0
 19392  003B60  22F4               	addwfc	prodh,f,c
 19393  003B62  0E28               	movlw	low _BroadcastRecords
 19394  003B64  24F3               	addwf	prodl,w,c
 19395  003B66  6ED9               	movwf	fsr2l,c
 19396  003B68  0E02               	movlw	high _BroadcastRecords
 19397  003B6A  20F4               	addwfc	prodh,w,c
 19398  003B6C  6EDA               	movwf	fsr2h,c
 19399  003B6E  CFDE F14A          	movff	postinc2,??_MiWiTasks
 19400  003B72  CFDE F14B          	movff	postinc2,??_MiWiTasks+1
 19401  003B76  CFDE F14C          	movff	postinc2,??_MiWiTasks+2
 19402  003B7A  CFDE F14D          	movff	postinc2,??_MiWiTasks+3
 19403  003B7E  0101               	movlb	1	; () banked
 19404  003B80  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19405  003B82  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19406  003B84  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19407  003B86  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19408  003B88  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19409  003B8A  0E00               	movlw	0
 19410  003B8C  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19411  003B8E  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19412  003B90  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19413  003B92  0101               	movlb	1	; () banked
 19414  003B94  5164               	movf	MiWiTasks@t1& (0+255),w,b
 19415  003B96  0101               	movlb	1	; () banked
 19416  003B98  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19417  003B9A  0101               	movlb	1	; () banked
 19418  003B9C  6F4E               	movwf	(??_MiWiTasks+4)& (0+255),b
 19419  003B9E  0101               	movlb	1	; () banked
 19420  003BA0  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19421  003BA2  0101               	movlb	1	; () banked
 19422  003BA4  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19423  003BA6  0101               	movlb	1	; () banked
 19424  003BA8  6F4F               	movwf	(??_MiWiTasks+5)& (0+255),b
 19425  003BAA  0101               	movlb	1	; () banked
 19426  003BAC  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19427  003BAE  0101               	movlb	1	; () banked
 19428  003BB0  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19429  003BB2  0101               	movlb	1	; () banked
 19430  003BB4  6F50               	movwf	(??_MiWiTasks+6)& (0+255),b
 19431  003BB6  0101               	movlb	1	; () banked
 19432  003BB8  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19433  003BBA  0101               	movlb	1	; () banked
 19434  003BBC  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19435  003BBE  0101               	movlb	1	; () banked
 19436  003BC0  6F51               	movwf	(??_MiWiTasks+7)& (0+255),b
 19437  003BC2  0101               	movlb	1	; () banked
 19438  003BC4  5151               	movf	(??_MiWiTasks+7)& (0+255),w,b
 19439  003BC6  E10B               	bnz	u21140
 19440  003BC8  0E21               	movlw	33
 19441  003BCA  0101               	movlb	1	; () banked
 19442  003BCC  5D4E               	subwf	(??_MiWiTasks+4)& (0+255),w,b
 19443  003BCE  0EA1               	movlw	161
 19444  003BD0  0101               	movlb	1	; () banked
 19445  003BD2  594F               	subwfb	(??_MiWiTasks+5)& (0+255),w,b
 19446  003BD4  0E07               	movlw	7
 19447  003BD6  0101               	movlb	1	; () banked
 19448  003BD8  5950               	subwfb	(??_MiWiTasks+6)& (0+255),w,b
 19449  003BDA  A0D8               	btfss	status,0,c
 19450  003BDC  D00F               	goto	l18688
 19451  003BDE                     u21140:
 19452                           
 19453                           ; BSR set to: 1
 19454                           ;miwi_mesh.c: 1850: {
 19455                           ;miwi_mesh.c: 1851: BroadcastRecords[i].RxCounter = 0;
 19456  003BDE  0101               	movlb	1	; () banked
 19457  003BE0  517C               	movf	MiWiTasks@i& (0+255),w,b
 19458  003BE2  0D08               	mullw	8
 19459  003BE4  0E03               	movlw	3
 19460  003BE6  26F3               	addwf	prodl,f,c
 19461  003BE8  0E00               	movlw	0
 19462  003BEA  22F4               	addwfc	prodh,f,c
 19463  003BEC  0E28               	movlw	low _BroadcastRecords
 19464  003BEE  24F3               	addwf	prodl,w,c
 19465  003BF0  6ED9               	movwf	fsr2l,c
 19466  003BF2  0E02               	movlw	high _BroadcastRecords
 19467  003BF4  20F4               	addwfc	prodh,w,c
 19468  003BF6  6EDA               	movwf	fsr2h,c
 19469  003BF8  0E00               	movlw	0
 19470  003BFA  6EDF               	movwf	indf2,c
 19471  003BFC                     l18688:
 19472                           
 19473                           ; BSR set to: 1
 19474  003BFC  0101               	movlb	1	; () banked
 19475  003BFE  2B7C               	incf	MiWiTasks@i& (0+255),f,b
 19476  003C00  D794               	goto	l18678
 19477  003C02                     l790:
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;miwi_mesh.c: 1852: }
 19481                           ;miwi_mesh.c: 1853: }
 19482                           ;miwi_mesh.c: 1854: }
 19483                           ;miwi_mesh.c: 1858: if(openSocketInfo.status.bits.requestIsOpen)
 19484  003C02  0101               	movlb	1	; () banked
 19485  003C04  A3CC               	btfss	_openSocketInfo& (0+255),1,b
 19486  003C06  0012               	return	
 19487                           
 19488                           ; BSR set to: 1
 19489                           ;miwi_mesh.c: 1859: {
 19490                           ;miwi_mesh.c: 1860: if(openSocketInfo.status.bits.matchFound)
 19491  003C08  0101               	movlb	1	; () banked
 19492  003C0A  A1CC               	btfss	_openSocketInfo& (0+255),0,b
 19493  003C0C  D063               	goto	l18726
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;miwi_mesh.c: 1861: {
 19497                           ;miwi_mesh.c: 1863: uint8_t j;
 19498                           ;miwi_mesh.c: 1865: ;
 19499                           ;miwi_mesh.c: 1867: {TxData = 11;};
 19500  003C0E  0E0B               	movlw	11
 19501  003C10  0101               	movlb	1	; () banked
 19502  003C12  6FC6               	movwf	_TxData& (0+255),b
 19503                           
 19504                           ; BSR set to: 1
 19505                           ;miwi_mesh.c: 1868: TxBuffer[TxData++] = 0x00;
 19506  003C14  0101               	movlb	1	; () banked
 19507  003C16  51C6               	movf	_TxData& (0+255),w,b
 19508  003C18  0D01               	mullw	1
 19509  003C1A  0EA6               	movlw	low _TxBuffer
 19510  003C1C  24F3               	addwf	prodl,w,c
 19511  003C1E  6ED9               	movwf	fsr2l,c
 19512  003C20  0E02               	movlw	high _TxBuffer
 19513  003C22  20F4               	addwfc	prodh,w,c
 19514  003C24  6EDA               	movwf	fsr2h,c
 19515  003C26  0E00               	movlw	0
 19516  003C28  6EDF               	movwf	indf2,c
 19517                           
 19518                           ; BSR set to: 1
 19519  003C2A  0101               	movlb	1	; () banked
 19520  003C2C  2BC6               	incf	_TxData& (0+255),f,b
 19521                           
 19522                           ; BSR set to: 1
 19523                           ;miwi_mesh.c: 1869: TxBuffer[TxData++] = 0x11;
 19524  003C2E  0101               	movlb	1	; () banked
 19525  003C30  51C6               	movf	_TxData& (0+255),w,b
 19526  003C32  0D01               	mullw	1
 19527  003C34  0EA6               	movlw	low _TxBuffer
 19528  003C36  24F3               	addwf	prodl,w,c
 19529  003C38  6ED9               	movwf	fsr2l,c
 19530  003C3A  0E02               	movlw	high _TxBuffer
 19531  003C3C  20F4               	addwfc	prodh,w,c
 19532  003C3E  6EDA               	movwf	fsr2h,c
 19533  003C40  0E11               	movlw	17
 19534  003C42  6EDF               	movwf	indf2,c
 19535                           
 19536                           ; BSR set to: 1
 19537  003C44  0101               	movlb	1	; () banked
 19538  003C46  2BC6               	incf	_TxData& (0+255),f,b
 19539                           
 19540                           ;miwi_mesh.c: 1873: for(j=0;j<4;j++)
 19541  003C48  0E00               	movlw	0
 19542  003C4A  0101               	movlb	1	; () banked
 19543  003C4C  6F6C               	movwf	MiWiTasks@j_2569& (0+255),b
 19544  003C4E                     l18704:
 19545                           
 19546                           ; BSR set to: 1
 19547  003C4E  0E03               	movlw	3
 19548  003C50  0101               	movlb	1	; () banked
 19549  003C52  656C               	cpfsgt	MiWiTasks@j_2569& (0+255),b
 19550  003C54  D001               	goto	l18708
 19551  003C56  D019               	goto	l18716
 19552  003C58                     l18708:
 19553                           
 19554                           ; BSR set to: 1
 19555                           ;miwi_mesh.c: 1874: {
 19556                           ;miwi_mesh.c: 1875: TxBuffer[TxData++] = openSocketInfo.LongAddress1[j];
 19557  003C58  0101               	movlb	1	; () banked
 19558  003C5A  516C               	movf	MiWiTasks@j_2569& (0+255),w,b
 19559  003C5C  0D01               	mullw	1
 19560  003C5E  0ED0               	movlw	low (_openSocketInfo+4)
 19561  003C60  24F3               	addwf	prodl,w,c
 19562  003C62  6ED9               	movwf	fsr2l,c
 19563  003C64  0E01               	movlw	high (_openSocketInfo+4)
 19564  003C66  20F4               	addwfc	prodh,w,c
 19565  003C68  6EDA               	movwf	fsr2h,c
 19566  003C6A  0101               	movlb	1	; () banked
 19567  003C6C  51C6               	movf	_TxData& (0+255),w,b
 19568  003C6E  0D01               	mullw	1
 19569  003C70  0EA6               	movlw	low _TxBuffer
 19570  003C72  24F3               	addwf	prodl,w,c
 19571  003C74  6EE1               	movwf	fsr1l,c
 19572  003C76  0E02               	movlw	high _TxBuffer
 19573  003C78  20F4               	addwfc	prodh,w,c
 19574  003C7A  6EE2               	movwf	fsr1h,c
 19575  003C7C  CFDF FFE7          	movff	indf2,indf1
 19576                           
 19577                           ; BSR set to: 1
 19578  003C80  0101               	movlb	1	; () banked
 19579  003C82  2BC6               	incf	_TxData& (0+255),f,b
 19580                           
 19581                           ; BSR set to: 1
 19582  003C84  0101               	movlb	1	; () banked
 19583  003C86  2B6C               	incf	MiWiTasks@j_2569& (0+255),f,b
 19584  003C88  D7E2               	goto	l18704
 19585  003C8A                     l18716:
 19586                           
 19587                           ; BSR set to: 1
 19588                           ;miwi_mesh.c: 1876: }
 19589                           ;miwi_mesh.c: 1878: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[0];
 19590  003C8A  0101               	movlb	1	; () banked
 19591  003C8C  51C6               	movf	_TxData& (0+255),w,b
 19592  003C8E  0D01               	mullw	1
 19593  003C90  0EA6               	movlw	low _TxBuffer
 19594  003C92  24F3               	addwf	prodl,w,c
 19595  003C94  6ED9               	movwf	fsr2l,c
 19596  003C96  0E02               	movlw	high _TxBuffer
 19597  003C98  20F4               	addwfc	prodh,w,c
 19598  003C9A  6EDA               	movwf	fsr2h,c
 19599  003C9C  C1CE  FFDF         	movff	_openSocketInfo+2,indf2
 19600                           
 19601                           ; BSR set to: 1
 19602  003CA0  0101               	movlb	1	; () banked
 19603  003CA2  2BC6               	incf	_TxData& (0+255),f,b
 19604                           
 19605                           ; BSR set to: 1
 19606                           ;miwi_mesh.c: 1879: TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[1];
 19607  003CA4  0101               	movlb	1	; () banked
 19608  003CA6  51C6               	movf	_TxData& (0+255),w,b
 19609  003CA8  0D01               	mullw	1
 19610  003CAA  0EA6               	movlw	low _TxBuffer
 19611  003CAC  24F3               	addwf	prodl,w,c
 19612  003CAE  6ED9               	movwf	fsr2l,c
 19613  003CB0  0E02               	movlw	high _TxBuffer
 19614  003CB2  20F4               	addwfc	prodh,w,c
 19615  003CB4  6EDA               	movwf	fsr2h,c
 19616  003CB6  C1CF  FFDF         	movff	_openSocketInfo+3,indf2
 19617  003CBA  0101               	movlb	1	; () banked
 19618  003CBC  2BC6               	incf	_TxData& (0+255),f,b
 19619                           
 19620                           ; BSR set to: 1
 19621                           ;miwi_mesh.c: 1889: UnicastShortAddress(openSocketInfo.ShortAddress2.v);
 19622  003CBE  0ED4               	movlw	low (_openSocketInfo+8)
 19623  003CC0  0101               	movlb	1	; () banked
 19624  003CC2  6F48               	movwf	UnicastShortAddress@DestAddress& (0+255),b
 19625  003CC4  0E01               	movlw	high (_openSocketInfo+8)
 19626  003CC6  0101               	movlb	1	; () banked
 19627  003CC8  6F49               	movwf	(UnicastShortAddress@DestAddress+1)& (0+255),b
 19628  003CCA  EC5E  F056         	call	_UnicastShortAddress	;wreg free
 19629                           
 19630                           ;miwi_mesh.c: 1890: openSocketInfo.status.bits.requestIsOpen = 0;
 19631  003CCE  0101               	movlb	1	; () banked
 19632  003CD0  93CC               	bcf	_openSocketInfo& (0+255),1,b
 19633                           
 19634                           ;miwi_mesh.c: 1894: }
 19635  003CD2  0012               	return	
 19636  003CD4                     l18726:
 19637                           
 19638                           ; BSR set to: 1
 19639                           ;miwi_mesh.c: 1895: else
 19640                           ;miwi_mesh.c: 1896: {
 19641                           ;miwi_mesh.c: 1897: t2.Val = (t1.Val - openSocketInfo.socketStart.Val);
 19642  003CD4  C1DA  F14A         	movff	_openSocketInfo+14,??_MiWiTasks
 19643  003CD8  C1DB  F14B         	movff	_openSocketInfo+15,??_MiWiTasks+1
 19644  003CDC  C1DC  F14C         	movff	_openSocketInfo+16,??_MiWiTasks+2
 19645  003CE0  C1DD  F14D         	movff	_openSocketInfo+17,??_MiWiTasks+3
 19646  003CE4  0101               	movlb	1	; () banked
 19647  003CE6  1F4A               	comf	??_MiWiTasks& (0+255),f,b
 19648  003CE8  1F4B               	comf	(??_MiWiTasks+1)& (0+255),f,b
 19649  003CEA  1F4C               	comf	(??_MiWiTasks+2)& (0+255),f,b
 19650  003CEC  1F4D               	comf	(??_MiWiTasks+3)& (0+255),f,b
 19651  003CEE  2B4A               	incf	??_MiWiTasks& (0+255),f,b
 19652  003CF0  0E00               	movlw	0
 19653  003CF2  234B               	addwfc	(??_MiWiTasks+1)& (0+255),f,b
 19654  003CF4  234C               	addwfc	(??_MiWiTasks+2)& (0+255),f,b
 19655  003CF6  234D               	addwfc	(??_MiWiTasks+3)& (0+255),f,b
 19656  003CF8  0101               	movlb	1	; () banked
 19657  003CFA  5164               	movf	MiWiTasks@t1& (0+255),w,b
 19658  003CFC  0101               	movlb	1	; () banked
 19659  003CFE  254A               	addwf	??_MiWiTasks& (0+255),w,b
 19660  003D00  0101               	movlb	1	; () banked
 19661  003D02  6F52               	movwf	MiWiTasks@t2& (0+255),b
 19662  003D04  0101               	movlb	1	; () banked
 19663  003D06  5165               	movf	(MiWiTasks@t1+1)& (0+255),w,b
 19664  003D08  0101               	movlb	1	; () banked
 19665  003D0A  214B               	addwfc	(??_MiWiTasks+1)& (0+255),w,b
 19666  003D0C  0101               	movlb	1	; () banked
 19667  003D0E  6F53               	movwf	(MiWiTasks@t2+1)& (0+255),b
 19668  003D10  0101               	movlb	1	; () banked
 19669  003D12  5166               	movf	(MiWiTasks@t1+2)& (0+255),w,b
 19670  003D14  0101               	movlb	1	; () banked
 19671  003D16  214C               	addwfc	(??_MiWiTasks+2)& (0+255),w,b
 19672  003D18  0101               	movlb	1	; () banked
 19673  003D1A  6F54               	movwf	(MiWiTasks@t2+2)& (0+255),b
 19674  003D1C  0101               	movlb	1	; () banked
 19675  003D1E  5167               	movf	(MiWiTasks@t1+3)& (0+255),w,b
 19676  003D20  0101               	movlb	1	; () banked
 19677  003D22  214D               	addwfc	(??_MiWiTasks+3)& (0+255),w,b
 19678  003D24  0101               	movlb	1	; () banked
 19679  003D26  6F55               	movwf	(MiWiTasks@t2+3)& (0+255),b
 19680                           
 19681                           ;miwi_mesh.c: 1899: if(t2.Val > (((uint32_t)(16000000)/32) * 3))
 19682  003D28  0101               	movlb	1	; () banked
 19683  003D2A  5155               	movf	(MiWiTasks@t2+3)& (0+255),w,b
 19684  003D2C  E10B               	bnz	u21200
 19685  003D2E  0E61               	movlw	97
 19686  003D30  0101               	movlb	1	; () banked
 19687  003D32  5D52               	subwf	MiWiTasks@t2& (0+255),w,b
 19688  003D34  0EE3               	movlw	227
 19689  003D36  0101               	movlb	1	; () banked
 19690  003D38  5953               	subwfb	(MiWiTasks@t2+1)& (0+255),w,b
 19691  003D3A  0E16               	movlw	22
 19692  003D3C  0101               	movlb	1	; () banked
 19693  003D3E  5954               	subwfb	(MiWiTasks@t2+2)& (0+255),w,b
 19694  003D40  A0D8               	btfss	status,0,c
 19695  003D42  0012               	return	
 19696  003D44                     u21200:
 19697                           
 19698                           ; BSR set to: 1
 19699                           ;miwi_mesh.c: 1900: {
 19700                           ;miwi_mesh.c: 1902: openSocketInfo.status.bits.requestIsOpen = 0;
 19701  003D44  0101               	movlb	1	; () banked
 19702  003D46  93CC               	bcf	_openSocketInfo& (0+255),1,b
 19703                           
 19704                           ; BSR set to: 1
 19705                           
 19706                           ; BSR set to: 1
 19707  003D48  0012               	return	
 19708  003D4A                     __end_of_MiWiTasks:
 19709                           	opt stack 0
 19710                           tblptru	equ	0xFF8
 19711                           tblptrh	equ	0xFF7
 19712                           tblptrl	equ	0xFF6
 19713                           tablat	equ	0xFF5
 19714                           prodh	equ	0xFF4
 19715                           prodl	equ	0xFF3
 19716                           intcon	equ	0xFF2
 19717                           intcon2	equ	0xFF1
 19718                           intcon3	equ	0xFF0
 19719                           indf0	equ	0xFEF
 19720                           postinc0	equ	0xFEE
 19721                           plusw0	equ	0xFEB
 19722                           fsr0h	equ	0xFEA
 19723                           fsr0l	equ	0xFE9
 19724                           wreg	equ	0xFE8
 19725                           indf1	equ	0xFE7
 19726                           postinc1	equ	0xFE6
 19727                           postdec1	equ	0xFE5
 19728                           fsr1h	equ	0xFE2
 19729                           fsr1l	equ	0xFE1
 19730                           indf2	equ	0xFDF
 19731                           postinc2	equ	0xFDE
 19732                           postdec2	equ	0xFDD
 19733                           plusw2	equ	0xFDB
 19734                           fsr2h	equ	0xFDA
 19735                           fsr2l	equ	0xFD9
 19736                           status	equ	0xFD8
 19737                           
 19738 ;; *************** function _UnicastShortAddress *****************
 19739 ;; Defined at:
 19740 ;;		line 4508 in file "src/miwi/miwi_mesh.c"
 19741 ;; Parameters:    Size  Location     Type
 19742 ;;  DestAddress     2   72[BANK1 ] PTR unsigned char 
 19743 ;;		 -> openSocketInfo.ShortAddress2(2), openSocketInfo.ShortAddress1(2), openSocketInfo(18), 
 19744 ;; Auto vars:     Size  Location     Type
 19745 ;;		None
 19746 ;; Return value:  Size  Location     Type
 19747 ;;                  1    wreg      unsigned char 
 19748 ;; Registers used:
 19749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19750 ;; Tracked objects:
 19751 ;;		On entry : 0/0
 19752 ;;		On exit  : 0/0
 19753 ;;		Unchanged: 0/0
 19754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19755 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19758 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19759 ;;Total ram usage:        2 bytes
 19760 ;; Hardware stack levels used:    1
 19761 ;; Hardware stack levels required when called:   24
 19762 ;; This function calls:
 19763 ;;		_RouteMessage
 19764 ;; This function is called by:
 19765 ;;		_MiWiTasks
 19766 ;; This function uses a non-reentrant model
 19767 ;;
 19768                           
 19769                           	psect	text42
 19770  00ACBC                     __ptext42:
 19771                           	opt stack 0
 19772  00ACBC                     _UnicastShortAddress:
 19773                           	opt stack 5
 19774                           
 19775                           ;miwi_mesh.c: 4510: TxBuffer[0] = 4;
 19776                           
 19777                           ; BSR set to: 1
 19778                           ;incstack = 0
 19779  00ACBC  0E04               	movlw	4
 19780  00ACBE  0102               	movlb	2	; () banked
 19781  00ACC0  6FA6               	movwf	_TxBuffer& (0+255),b
 19782                           
 19783                           ;miwi_mesh.c: 4511: TxBuffer[1] = 0x02;
 19784  00ACC2  0E02               	movlw	2
 19785  00ACC4  0102               	movlb	2	; () banked
 19786  00ACC6  6FA7               	movwf	(_TxBuffer+1)& (0+255),b
 19787                           
 19788                           ; BSR set to: 2
 19789                           ;miwi_mesh.c: 4512: TxBuffer[2] = myPANID.v[0];
 19790  00ACC8  C1F0  F2A8         	movff	_myPANID,_TxBuffer+2
 19791                           
 19792                           ; BSR set to: 2
 19793                           ;miwi_mesh.c: 4513: TxBuffer[3] = myPANID.v[1];
 19794  00ACCC  C1F1  F2A9         	movff	_myPANID+1,_TxBuffer+3
 19795                           
 19796                           ; BSR set to: 2
 19797                           ;miwi_mesh.c: 4514: TxBuffer[4] = DestAddress[0];
 19798  00ACD0  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 19799  00ACD4  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 19800  00ACD8  50DF               	movf	indf2,w,c
 19801  00ACDA  0102               	movlb	2	; () banked
 19802  00ACDC  6FAA               	movwf	(_TxBuffer+4)& (0+255),b
 19803                           
 19804                           ; BSR set to: 2
 19805                           ;miwi_mesh.c: 4515: TxBuffer[5] = DestAddress[1];
 19806  00ACDE  0101               	movlb	1	; () banked
 19807  00ACE0  EE20 F001          	lfsr	2,1
 19808  00ACE4  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 19809  00ACE6  26D9               	addwf	fsr2l,f,c
 19810  00ACE8  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 19811  00ACEA  22DA               	addwfc	fsr2h,f,c
 19812  00ACEC  50DF               	movf	indf2,w,c
 19813  00ACEE  0102               	movlb	2	; () banked
 19814  00ACF0  6FAB               	movwf	(_TxBuffer+5)& (0+255),b
 19815                           
 19816                           ; BSR set to: 2
 19817                           ;miwi_mesh.c: 4516: TxBuffer[6] = myPANID.v[0];
 19818  00ACF2  C1F0  F2AC         	movff	_myPANID,_TxBuffer+6
 19819                           
 19820                           ; BSR set to: 2
 19821                           ;miwi_mesh.c: 4517: TxBuffer[7] = myPANID.v[1];
 19822  00ACF6  C1F1  F2AD         	movff	_myPANID+1,_TxBuffer+7
 19823                           
 19824                           ; BSR set to: 2
 19825                           ;miwi_mesh.c: 4518: TxBuffer[8] = myShortAddress.v[0];
 19826  00ACFA  C1F2  F2AE         	movff	_myShortAddress,_TxBuffer+8
 19827                           
 19828                           ; BSR set to: 2
 19829                           ;miwi_mesh.c: 4519: TxBuffer[9] = myShortAddress.v[1];
 19830  00ACFE  C1F3  F2AF         	movff	_myShortAddress+1,_TxBuffer+9
 19831                           
 19832                           ; BSR set to: 2
 19833                           ;miwi_mesh.c: 4520: TxBuffer[10] = MiWiSeqNum++;
 19834  00AD02  C1C3  F2B0         	movff	_MiWiSeqNum,_TxBuffer+10
 19835                           
 19836                           ; BSR set to: 2
 19837  00AD06  0101               	movlb	1	; () banked
 19838  00AD08  2BC3               	incf	_MiWiSeqNum& (0+255),f,b
 19839                           
 19840                           ; BSR set to: 1
 19841                           ;miwi_mesh.c: 4523: tempShortAddress.v[0] = DestAddress[0];
 19842  00AD0A  C148  FFD9         	movff	UnicastShortAddress@DestAddress,fsr2l
 19843  00AD0E  C149  FFDA         	movff	UnicastShortAddress@DestAddress+1,fsr2h
 19844  00AD12  50DF               	movf	indf2,w,c
 19845  00AD14  0101               	movlb	1	; () banked
 19846  00AD16  6FF4               	movwf	_tempShortAddress& (0+255),b
 19847                           
 19848                           ; BSR set to: 1
 19849                           ;miwi_mesh.c: 4524: tempShortAddress.v[1] = DestAddress[1];
 19850  00AD18  0101               	movlb	1	; () banked
 19851  00AD1A  EE20 F001          	lfsr	2,1
 19852  00AD1E  5148               	movf	UnicastShortAddress@DestAddress& (0+255),w,b
 19853  00AD20  26D9               	addwf	fsr2l,f,c
 19854  00AD22  5149               	movf	(UnicastShortAddress@DestAddress+1)& (0+255),w,b
 19855  00AD24  22DA               	addwfc	fsr2h,f,c
 19856  00AD26  50DF               	movf	indf2,w,c
 19857  00AD28  0101               	movlb	1	; () banked
 19858  00AD2A  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 19859                           
 19860                           ; BSR set to: 1
 19861                           ;miwi_mesh.c: 4525: if( 0 == RouteMessage(myPANID, tempShortAddress, 0) )
 19862  00AD2C  C1F0  F13D         	movff	_myPANID,RouteMessage@PANID
 19863  00AD30  C1F1  F13E         	movff	_myPANID+1,RouteMessage@PANID+1
 19864  00AD34  C1F4  F13F         	movff	_tempShortAddress,RouteMessage@ShortAddress
 19865  00AD38  C1F5  F140         	movff	_tempShortAddress+1,RouteMessage@ShortAddress+1
 19866  00AD3C  0E00               	movlw	0
 19867  00AD3E  0101               	movlb	1	; () banked
 19868  00AD40  6F41               	movwf	RouteMessage@SecEn& (0+255),b
 19869  00AD42  EC07  F024         	call	_RouteMessage	;wreg free
 19870  00AD46  0900               	iorlw	0
 19871  00AD48  A4D8               	btfss	status,2,c
 19872  00AD4A  0012               	return	
 19873                           
 19874                           ;miwi_mesh.c: 4526: {
 19875                           ;miwi_mesh.c: 4527: MiWiStateMachine.bits.MiWiAckInProgress = 0;
 19876  00AD4C  0101               	movlb	1	; () banked
 19877  00AD4E  97B5               	bcf	_MiWiStateMachine& (0+255),3,b
 19878                           
 19879                           ;miwi_mesh.c: 4528: return 0;
 19880                           ;	Return value of _UnicastShortAddress is never used
 19881  00AD50  0012               	return	
 19882  00AD52                     __end_of_UnicastShortAddress:
 19883                           	opt stack 0
 19884                           tblptru	equ	0xFF8
 19885                           tblptrh	equ	0xFF7
 19886                           tblptrl	equ	0xFF6
 19887                           tablat	equ	0xFF5
 19888                           prodh	equ	0xFF4
 19889                           prodl	equ	0xFF3
 19890                           intcon	equ	0xFF2
 19891                           intcon2	equ	0xFF1
 19892                           intcon3	equ	0xFF0
 19893                           indf0	equ	0xFEF
 19894                           postinc0	equ	0xFEE
 19895                           plusw0	equ	0xFEB
 19896                           fsr0h	equ	0xFEA
 19897                           fsr0l	equ	0xFE9
 19898                           wreg	equ	0xFE8
 19899                           indf1	equ	0xFE7
 19900                           postinc1	equ	0xFE6
 19901                           postdec1	equ	0xFE5
 19902                           fsr1h	equ	0xFE2
 19903                           fsr1l	equ	0xFE1
 19904                           indf2	equ	0xFDF
 19905                           postinc2	equ	0xFDE
 19906                           postdec2	equ	0xFDD
 19907                           plusw2	equ	0xFDB
 19908                           fsr2h	equ	0xFDA
 19909                           fsr2l	equ	0xFD9
 19910                           status	equ	0xFD8
 19911                           
 19912 ;; *************** function _RouteMessage *****************
 19913 ;; Defined at:
 19914 ;;		line 1932 in file "src/miwi/miwi_mesh.c"
 19915 ;; Parameters:    Size  Location     Type
 19916 ;;  PANID           2   61[BANK1 ] struct .
 19917 ;;  ShortAddress    2   63[BANK1 ] struct .
 19918 ;;  SecEn           1   65[BANK1 ] unsigned char 
 19919 ;; Auto vars:     Size  Location     Type
 19920 ;;  j               1   69[BANK1 ] unsigned char 
 19921 ;;  i               1   71[BANK1 ] unsigned char 
 19922 ;;  parentNode      1   70[BANK1 ] unsigned char 
 19923 ;; Return value:  Size  Location     Type
 19924 ;;                  1    wreg      unsigned char 
 19925 ;; Registers used:
 19926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19927 ;; Tracked objects:
 19928 ;;		On entry : 0/0
 19929 ;;		On exit  : 0/0
 19930 ;;		Unchanged: 0/0
 19931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19932 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19933 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19934 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19935 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19936 ;;Total ram usage:       11 bytes
 19937 ;; Hardware stack levels used:    1
 19938 ;; Hardware stack levels required when called:   23
 19939 ;; This function calls:
 19940 ;;		_MiMAC_SendPacket
 19941 ;;		_SearchForShortAddress
 19942 ;;		_SendBeacon
 19943 ;;		_SendMACPacket
 19944 ;; This function is called by:
 19945 ;;		_MiWiTasks
 19946 ;;		_UnicastShortAddress
 19947 ;;		_MiApp_UnicastAddress
 19948 ;;		_MiApp_UnicastConnection
 19949 ;; This function uses a non-reentrant model
 19950 ;;
 19951                           
 19952                           	psect	text43
 19953  00480E                     __ptext43:
 19954                           	opt stack 0
 19955  00480E                     _RouteMessage:
 19956                           	opt stack 5
 19957                           
 19958                           ;miwi_mesh.c: 1934: uint8_t parentNode = (ShortAddress.v[1] & 0x07);
 19959                           
 19960                           ;incstack = 0
 19961  00480E  0101               	movlb	1	; () banked
 19962  004810  5140               	movf	(RouteMessage@ShortAddress+1)& (0+255),w,b
 19963  004812  0B07               	andlw	7
 19964  004814  0101               	movlb	1	; () banked
 19965  004816  6F46               	movwf	RouteMessage@parentNode& (0+255),b
 19966                           
 19967                           ;miwi_mesh.c: 1935: uint8_t i;
 19968                           ;miwi_mesh.c: 1937: if( parentNode == myShortAddress.v[1] )
 19969  004818  0101               	movlb	1	; () banked
 19970  00481A  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 19971  00481C  0101               	movlb	1	; () banked
 19972  00481E  19F3               	xorwf	(_myShortAddress+1)& (0+255),w,b
 19973  004820  A4D8               	btfss	status,2,c
 19974  004822  D042               	goto	l17242
 19975                           
 19976                           ; BSR set to: 1
 19977                           ;miwi_mesh.c: 1938: {
 19978                           ;miwi_mesh.c: 1940: if( ShortAddress.v[0] > 0x80 )
 19979  004824  0E80               	movlw	128
 19980  004826  0101               	movlb	1	; () banked
 19981  004828  653F               	cpfsgt	RouteMessage@ShortAddress& (0+255),b
 19982  00482A  D002               	goto	l17222
 19983                           
 19984                           ; BSR set to: 1
 19985                           ;miwi_mesh.c: 1941: {
 19986                           ;miwi_mesh.c: 1956: return 0;
 19987  00482C  0E00               	movlw	0
 19988                           
 19989                           ; BSR set to: 1
 19990  00482E  0012               	return	
 19991  004830                     l17222:
 19992                           
 19993                           ; BSR set to: 1
 19994                           ;miwi_mesh.c: 1959: else
 19995                           ;miwi_mesh.c: 1960: {
 19996                           ;miwi_mesh.c: 1961: MTP.flags.Val = 0;
 19997  004830  0E00               	movlw	0
 19998  004832  0101               	movlb	1	; () banked
 19999  004834  6FAD               	movwf	_MTP& (0+255),b
 20000                           
 20001                           ; BSR set to: 1
 20002                           ;miwi_mesh.c: 1962: MTP.flags.bits.ackReq = 1;
 20003  004836  0101               	movlb	1	; () banked
 20004  004838  8BAD               	bsf	_MTP& (0+255),5,b
 20005                           
 20006                           ; BSR set to: 1
 20007                           ;miwi_mesh.c: 1963: MTP.flags.bits.secEn = SecEn;
 20008  00483A  0101               	movlb	1	; () banked
 20009  00483C  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20010  00483E  D003               	bra	u18795
 20011  004840  0101               	movlb	1	; () banked
 20012  004842  97AD               	bcf	_MTP& (0+255),3,b
 20013  004844  D002               	bra	u18796
 20014  004846                     u18795:
 20015  004846  0101               	movlb	1	; () banked
 20016  004848  87AD               	bsf	_MTP& (0+255),3,b
 20017  00484A                     u18796:
 20018                           
 20019                           ; BSR set to: 1
 20020                           ;miwi_mesh.c: 1965: tempShortAddress.Val = ShortAddress.Val;
 20021  00484A  C13F  F1F4         	movff	RouteMessage@ShortAddress,_tempShortAddress
 20022  00484E  C140  F1F5         	movff	RouteMessage@ShortAddress+1,_tempShortAddress+1
 20023                           
 20024                           ; BSR set to: 1
 20025                           ;miwi_mesh.c: 1973: if( (i = SearchForShortAddress()) != 0xFF )
 20026  004852  EC82  F057         	call	_SearchForShortAddress	;wreg free
 20027  004856  0101               	movlb	1	; () banked
 20028  004858  6F47               	movwf	RouteMessage@i& (0+255),b
 20029  00485A  0101               	movlb	1	; () banked
 20030  00485C  2947               	incf	RouteMessage@i& (0+255),w,b
 20031  00485E  B4D8               	btfsc	status,2,c
 20032  004860  D010               	goto	l17234
 20033                           
 20034                           ; BSR set to: 1
 20035                           ;miwi_mesh.c: 1974: {
 20036                           ;miwi_mesh.c: 1975: MTP.DestAddress = ConnectionTable[i].Address;
 20037  004862  0101               	movlb	1	; () banked
 20038  004864  5147               	movf	RouteMessage@i& (0+255),w,b
 20039  004866  0D09               	mullw	9
 20040  004868  0E04               	movlw	4
 20041  00486A  26F3               	addwf	prodl,f,c
 20042  00486C  0E00               	movlw	0
 20043  00486E  22F4               	addwfc	prodh,f,c
 20044  004870  0E00               	movlw	low _ConnectionTable
 20045  004872  24F3               	addwf	prodl,w,c
 20046  004874  0101               	movlb	1	; () banked
 20047  004876  6FAE               	movwf	(_MTP+1)& (0+255),b
 20048  004878  0E06               	movlw	high _ConnectionTable
 20049  00487A  20F4               	addwfc	prodh,w,c
 20050  00487C  0101               	movlb	1	; () banked
 20051  00487E  6FAF               	movwf	(_MTP+2)& (0+255),b
 20052                           
 20053                           ;miwi_mesh.c: 1976: }
 20054  004880  D002               	goto	l17238
 20055  004882                     l17234:
 20056                           
 20057                           ; BSR set to: 1
 20058                           ;miwi_mesh.c: 1977: else
 20059                           ;miwi_mesh.c: 1978: {
 20060                           ;miwi_mesh.c: 1981: return 0;
 20061  004882  0E00               	movlw	0
 20062                           
 20063                           ; BSR set to: 1
 20064  004884  0012               	return	
 20065  004886                     l17238:
 20066                           
 20067                           ; BSR set to: 1
 20068                           ;miwi_mesh.c: 1982: }
 20069                           ;miwi_mesh.c: 1984: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 20070  004886  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20071  00488A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20072  00488E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20073  004892  0EA6               	movlw	low _TxBuffer
 20074  004894  0101               	movlb	1	; () banked
 20075  004896  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20076  004898  0E02               	movlw	high _TxBuffer
 20077  00489A  0101               	movlb	1	; () banked
 20078  00489C  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20079  00489E  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20080  0048A2  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 20081  0048A6  0012               	return	
 20082  0048A8                     l17242:
 20083                           
 20084                           ;miwi_mesh.c: 1985: }
 20085                           ;miwi_mesh.c: 1986: }
 20086                           ;miwi_mesh.c: 1988: if( (knownCoordinators & (1 << parentNode) ) > 0 )
 20087  0048A8  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 20088  0048AC  0E01               	movlw	1
 20089  0048AE  0101               	movlb	1	; () banked
 20090  0048B0  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20091  0048B2  0101               	movlb	1	; () banked
 20092  0048B4  2B42               	incf	??_RouteMessage& (0+255),f,b
 20093  0048B6  D003               	goto	u18814
 20094  0048B8                     u18815:
 20095  0048B8  0101               	movlb	1	; () banked
 20096  0048BA  90D8               	bcf	status,0,c
 20097  0048BC  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20098  0048BE                     u18814:
 20099  0048BE  0101               	movlb	1	; () banked
 20100  0048C0  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20101  0048C2  D7FA               	goto	u18815
 20102  0048C4  0101               	movlb	1	; () banked
 20103  0048C6  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20104  0048C8  0101               	movlb	1	; () banked
 20105  0048CA  15C7               	andwf	_knownCoordinators& (0+255),w,b
 20106  0048CC  0900               	iorlw	0
 20107  0048CE  B4D8               	btfsc	status,2,c
 20108  0048D0  D08D               	goto	l17288
 20109                           
 20110                           ; BSR set to: 1
 20111                           ;miwi_mesh.c: 1989: {
 20112                           ;miwi_mesh.c: 1990: if( RouterFailures[parentNode] >= 3 )
 20113  0048D2  0101               	movlb	1	; () banked
 20114  0048D4  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20115  0048D6  0D01               	mullw	1
 20116  0048D8  0E69               	movlw	low _RouterFailures
 20117  0048DA  24F3               	addwf	prodl,w,c
 20118  0048DC  6ED9               	movwf	fsr2l,c
 20119  0048DE  0E00               	movlw	high _RouterFailures
 20120  0048E0  20F4               	addwfc	prodh,w,c
 20121  0048E2  6EDA               	movwf	fsr2h,c
 20122  0048E4  0E02               	movlw	2
 20123  0048E6  64DF               	cpfsgt	indf2,c
 20124  0048E8  D02D               	goto	l17260
 20125                           
 20126                           ; BSR set to: 1
 20127                           ;miwi_mesh.c: 1991: {
 20128                           ;miwi_mesh.c: 1992: RouterFailures[parentNode] = 0;
 20129  0048EA  0101               	movlb	1	; () banked
 20130  0048EC  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20131  0048EE  0D01               	mullw	1
 20132  0048F0  0E69               	movlw	low _RouterFailures
 20133  0048F2  24F3               	addwf	prodl,w,c
 20134  0048F4  6ED9               	movwf	fsr2l,c
 20135  0048F6  0E00               	movlw	high _RouterFailures
 20136  0048F8  20F4               	addwfc	prodh,w,c
 20137  0048FA  6EDA               	movwf	fsr2h,c
 20138  0048FC  0E00               	movlw	0
 20139  0048FE  6EDF               	movwf	indf2,c
 20140                           
 20141                           ; BSR set to: 1
 20142                           ;miwi_mesh.c: 1993: knownCoordinators &= ((1<<parentNode) ^ 0xFF);
 20143  004900  C146  F142         	movff	RouteMessage@parentNode,??_RouteMessage
 20144  004904  0E01               	movlw	1
 20145  004906  0101               	movlb	1	; () banked
 20146  004908  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20147  00490A  0101               	movlb	1	; () banked
 20148  00490C  2B42               	incf	??_RouteMessage& (0+255),f,b
 20149  00490E  D003               	goto	u18844
 20150  004910                     u18845:
 20151  004910  0101               	movlb	1	; () banked
 20152  004912  90D8               	bcf	status,0,c
 20153  004914  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20154  004916                     u18844:
 20155  004916  0101               	movlb	1	; () banked
 20156  004918  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20157  00491A  D7FA               	goto	u18845
 20158  00491C  0101               	movlb	1	; () banked
 20159  00491E  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20160  004920  0AFF               	xorlw	255
 20161  004922  0101               	movlb	1	; () banked
 20162  004924  17C7               	andwf	_knownCoordinators& (0+255),f,b
 20163                           
 20164                           ; BSR set to: 1
 20165                           ;miwi_mesh.c: 1994: RoutingTable[parentNode] = 0;
 20166  004926  0101               	movlb	1	; () banked
 20167  004928  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20168  00492A  0D01               	mullw	1
 20169  00492C  0E71               	movlw	low _RoutingTable
 20170  00492E  24F3               	addwf	prodl,w,c
 20171  004930  6ED9               	movwf	fsr2l,c
 20172  004932  0E00               	movlw	high _RoutingTable
 20173  004934  20F4               	addwfc	prodh,w,c
 20174  004936  6EDA               	movwf	fsr2h,c
 20175  004938  0E00               	movlw	0
 20176  00493A  6EDF               	movwf	indf2,c
 20177                           
 20178                           ; BSR set to: 1
 20179                           ;miwi_mesh.c: 1999: SendBeacon();
 20180  00493C  ECAE  F043         	call	_SendBeacon	;wreg free
 20181  004940                     l17254:
 20182                           
 20183                           ;miwi_mesh.c: 2000: return 0;
 20184  004940  0E00               	movlw	0
 20185  004942  0012               	return	
 20186  004944                     l17260:
 20187                           
 20188                           ;miwi_mesh.c: 2002: else
 20189                           ;miwi_mesh.c: 2003: {
 20190                           ;miwi_mesh.c: 2005: MTP.flags.Val = 0;
 20191  004944  0E00               	movlw	0
 20192  004946  0101               	movlb	1	; () banked
 20193  004948  6FAD               	movwf	_MTP& (0+255),b
 20194                           
 20195                           ; BSR set to: 1
 20196                           ;miwi_mesh.c: 2006: MTP.flags.bits.ackReq = 1;
 20197  00494A  0101               	movlb	1	; () banked
 20198  00494C  8BAD               	bsf	_MTP& (0+255),5,b
 20199                           
 20200                           ; BSR set to: 1
 20201                           ;miwi_mesh.c: 2007: MTP.flags.bits.secEn = SecEn;
 20202  00494E  0101               	movlb	1	; () banked
 20203  004950  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20204  004952  D003               	bra	u18855
 20205  004954  0101               	movlb	1	; () banked
 20206  004956  97AD               	bcf	_MTP& (0+255),3,b
 20207  004958  D002               	bra	u18856
 20208  00495A                     u18855:
 20209  00495A  0101               	movlb	1	; () banked
 20210  00495C  87AD               	bsf	_MTP& (0+255),3,b
 20211  00495E                     u18856:
 20212                           
 20213                           ;miwi_mesh.c: 2008: tempShortAddress.v[0] = 0;
 20214  00495E  0E00               	movlw	0
 20215  004960  0101               	movlb	1	; () banked
 20216  004962  6FF4               	movwf	_tempShortAddress& (0+255),b
 20217                           
 20218                           ; BSR set to: 1
 20219                           ;miwi_mesh.c: 2009: tempShortAddress.v[1] = parentNode;
 20220  004964  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 20221                           
 20222                           ; BSR set to: 1
 20223                           ;miwi_mesh.c: 2017: if( (i = SearchForShortAddress()) != 0xFF )
 20224  004968  EC82  F057         	call	_SearchForShortAddress	;wreg free
 20225  00496C  0101               	movlb	1	; () banked
 20226  00496E  6F47               	movwf	RouteMessage@i& (0+255),b
 20227  004970  0101               	movlb	1	; () banked
 20228  004972  2947               	incf	RouteMessage@i& (0+255),w,b
 20229  004974  B4D8               	btfsc	status,2,c
 20230  004976  D03A               	goto	l17288
 20231                           
 20232                           ; BSR set to: 1
 20233                           ;miwi_mesh.c: 2018: {
 20234                           ;miwi_mesh.c: 2019: MTP.DestAddress = ConnectionTable[i].Address;
 20235  004978  0101               	movlb	1	; () banked
 20236  00497A  5147               	movf	RouteMessage@i& (0+255),w,b
 20237  00497C  0D09               	mullw	9
 20238  00497E  0E04               	movlw	4
 20239  004980  26F3               	addwf	prodl,f,c
 20240  004982  0E00               	movlw	0
 20241  004984  22F4               	addwfc	prodh,f,c
 20242  004986  0E00               	movlw	low _ConnectionTable
 20243  004988  24F3               	addwf	prodl,w,c
 20244  00498A  0101               	movlb	1	; () banked
 20245  00498C  6FAE               	movwf	(_MTP+1)& (0+255),b
 20246  00498E  0E06               	movlw	high _ConnectionTable
 20247  004990  20F4               	addwfc	prodh,w,c
 20248  004992  0101               	movlb	1	; () banked
 20249  004994  6FAF               	movwf	(_MTP+2)& (0+255),b
 20250                           
 20251                           ; BSR set to: 1
 20252                           ;miwi_mesh.c: 2026: }
 20253                           ;miwi_mesh.c: 2028: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 20254                           
 20255                           ; BSR set to: 1
 20256                           
 20257                           ; BSR set to: 1
 20258                           ;miwi_mesh.c: 2021: else
 20259                           ;miwi_mesh.c: 2022: {
 20260                           ;miwi_mesh.c: 2025: goto ROUTE_THROUGH_NEIGHBOR;
 20261                           
 20262                           ;miwi_mesh.c: 2020: }
 20263  004996  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20264  00499A  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20265  00499E  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20266  0049A2  0EA6               	movlw	low _TxBuffer
 20267  0049A4  0101               	movlb	1	; () banked
 20268  0049A6  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20269  0049A8  0E02               	movlw	high _TxBuffer
 20270  0049AA  0101               	movlb	1	; () banked
 20271  0049AC  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20272  0049AE  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20273  0049B2  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 20274  0049B6  0900               	iorlw	0
 20275  0049B8  A4D8               	btfss	status,2,c
 20276  0049BA  D00B               	goto	l17282
 20277                           
 20278                           ;miwi_mesh.c: 2029: {
 20279                           ;miwi_mesh.c: 2030: RouterFailures[parentNode]++;
 20280  0049BC  0101               	movlb	1	; () banked
 20281  0049BE  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20282  0049C0  0D01               	mullw	1
 20283  0049C2  0E69               	movlw	low _RouterFailures
 20284  0049C4  24F3               	addwf	prodl,w,c
 20285  0049C6  6ED9               	movwf	fsr2l,c
 20286  0049C8  0E00               	movlw	high _RouterFailures
 20287  0049CA  20F4               	addwfc	prodh,w,c
 20288  0049CC  6EDA               	movwf	fsr2h,c
 20289  0049CE  2ADF               	incf	indf2,f,c
 20290  0049D0  D7B7               	goto	l17254
 20291  0049D2                     l17282:
 20292                           
 20293                           ;miwi_mesh.c: 2033: else
 20294                           ;miwi_mesh.c: 2034: {
 20295                           ;miwi_mesh.c: 2035: RouterFailures[parentNode] = 0;
 20296  0049D2  0101               	movlb	1	; () banked
 20297  0049D4  5146               	movf	RouteMessage@parentNode& (0+255),w,b
 20298  0049D6  0D01               	mullw	1
 20299  0049D8  0E69               	movlw	low _RouterFailures
 20300  0049DA  24F3               	addwf	prodl,w,c
 20301  0049DC  6ED9               	movwf	fsr2l,c
 20302  0049DE  0E00               	movlw	high _RouterFailures
 20303  0049E0  20F4               	addwfc	prodh,w,c
 20304  0049E2  6EDA               	movwf	fsr2h,c
 20305  0049E4  0E00               	movlw	0
 20306  0049E6  6EDF               	movwf	indf2,c
 20307                           
 20308                           ; BSR set to: 1
 20309                           ;miwi_mesh.c: 2036: return 1;
 20310  0049E8  0E01               	movlw	1
 20311                           
 20312                           ; BSR set to: 1
 20313  0049EA  0012               	return	
 20314  0049EC                     l17288:
 20315                           
 20316                           ;miwi_mesh.c: 2042: for(i = 0; i < 8; i++)
 20317  0049EC  0E00               	movlw	0
 20318  0049EE  0101               	movlb	1	; () banked
 20319  0049F0  6F47               	movwf	RouteMessage@i& (0+255),b
 20320  0049F2                     l17290:
 20321                           
 20322                           ; BSR set to: 1
 20323  0049F2  0E07               	movlw	7
 20324  0049F4  0101               	movlb	1	; () banked
 20325  0049F6  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20326  0049F8  D001               	goto	l17294
 20327  0049FA  D0DF               	goto	l17356
 20328  0049FC                     l17294:
 20329                           
 20330                           ; BSR set to: 1
 20331                           ;miwi_mesh.c: 2043: {
 20332                           ;miwi_mesh.c: 2044: if( (RoutingTable[i] & (1 << parentNode) ) > 0 )
 20333  0049FC  0101               	movlb	1	; () banked
 20334  0049FE  5147               	movf	RouteMessage@i& (0+255),w,b
 20335  004A00  0D01               	mullw	1
 20336  004A02  0E71               	movlw	low _RoutingTable
 20337  004A04  24F3               	addwf	prodl,w,c
 20338  004A06  6ED9               	movwf	fsr2l,c
 20339  004A08  0E00               	movlw	high _RoutingTable
 20340  004A0A  20F4               	addwfc	prodh,w,c
 20341  004A0C  6EDA               	movwf	fsr2h,c
 20342  004A0E  50DF               	movf	indf2,w,c
 20343  004A10  0101               	movlb	1	; () banked
 20344  004A12  6F42               	movwf	??_RouteMessage& (0+255),b
 20345  004A14  C146  F143         	movff	RouteMessage@parentNode,??_RouteMessage+1
 20346  004A18  0E01               	movlw	1
 20347  004A1A  0101               	movlb	1	; () banked
 20348  004A1C  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 20349  004A1E  0101               	movlb	1	; () banked
 20350  004A20  2B43               	incf	(??_RouteMessage+1)& (0+255),f,b
 20351  004A22  D003               	goto	u18894
 20352  004A24                     u18895:
 20353  004A24  0101               	movlb	1	; () banked
 20354  004A26  90D8               	bcf	status,0,c
 20355  004A28  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 20356  004A2A                     u18894:
 20357  004A2A  0101               	movlb	1	; () banked
 20358  004A2C  2F43               	decfsz	(??_RouteMessage+1)& (0+255),f,b
 20359  004A2E  D7FA               	goto	u18895
 20360  004A30  0101               	movlb	1	; () banked
 20361  004A32  5144               	movf	(??_RouteMessage+2)& (0+255),w,b
 20362  004A34  0101               	movlb	1	; () banked
 20363  004A36  1542               	andwf	??_RouteMessage& (0+255),w,b
 20364  004A38  0900               	iorlw	0
 20365  004A3A  B4D8               	btfsc	status,2,c
 20366  004A3C  D0BB               	goto	l17352
 20367                           
 20368                           ; BSR set to: 1
 20369                           ;miwi_mesh.c: 2045: {
 20370                           ;miwi_mesh.c: 2046: if( RouterFailures[i] >= 3 )
 20371  004A3E  0101               	movlb	1	; () banked
 20372  004A40  5147               	movf	RouteMessage@i& (0+255),w,b
 20373  004A42  0D01               	mullw	1
 20374  004A44  0E69               	movlw	low _RouterFailures
 20375  004A46  24F3               	addwf	prodl,w,c
 20376  004A48  6ED9               	movwf	fsr2l,c
 20377  004A4A  0E00               	movlw	high _RouterFailures
 20378  004A4C  20F4               	addwfc	prodh,w,c
 20379  004A4E  6EDA               	movwf	fsr2h,c
 20380  004A50  0E02               	movlw	2
 20381  004A52  64DF               	cpfsgt	indf2,c
 20382  004A54  D05A               	goto	l17326
 20383                           
 20384                           ; BSR set to: 1
 20385                           ;miwi_mesh.c: 2047: {
 20386                           ;miwi_mesh.c: 2048: RouterFailures[i] = 0;
 20387  004A56  0101               	movlb	1	; () banked
 20388  004A58  5147               	movf	RouteMessage@i& (0+255),w,b
 20389  004A5A  0D01               	mullw	1
 20390  004A5C  0E69               	movlw	low _RouterFailures
 20391  004A5E  24F3               	addwf	prodl,w,c
 20392  004A60  6ED9               	movwf	fsr2l,c
 20393  004A62  0E00               	movlw	high _RouterFailures
 20394  004A64  20F4               	addwfc	prodh,w,c
 20395  004A66  6EDA               	movwf	fsr2h,c
 20396  004A68  0E00               	movlw	0
 20397  004A6A  6EDF               	movwf	indf2,c
 20398                           
 20399                           ; BSR set to: 1
 20400                           ;miwi_mesh.c: 2049: knownCoordinators &= ((1<<i) ^ 0xFF);
 20401  004A6C  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 20402  004A70  0E01               	movlw	1
 20403  004A72  0101               	movlb	1	; () banked
 20404  004A74  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20405  004A76  0101               	movlb	1	; () banked
 20406  004A78  2B42               	incf	??_RouteMessage& (0+255),f,b
 20407  004A7A  D003               	goto	u18924
 20408  004A7C                     u18925:
 20409  004A7C  0101               	movlb	1	; () banked
 20410  004A7E  90D8               	bcf	status,0,c
 20411  004A80  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20412  004A82                     u18924:
 20413  004A82  0101               	movlb	1	; () banked
 20414  004A84  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20415  004A86  D7FA               	goto	u18925
 20416  004A88  0101               	movlb	1	; () banked
 20417  004A8A  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20418  004A8C  0AFF               	xorlw	255
 20419  004A8E  0101               	movlb	1	; () banked
 20420  004A90  17C7               	andwf	_knownCoordinators& (0+255),f,b
 20421                           
 20422                           ; BSR set to: 1
 20423                           ;miwi_mesh.c: 2050: RoutingTable[i] = 0;
 20424  004A92  0101               	movlb	1	; () banked
 20425  004A94  5147               	movf	RouteMessage@i& (0+255),w,b
 20426  004A96  0D01               	mullw	1
 20427  004A98  0E71               	movlw	low _RoutingTable
 20428  004A9A  24F3               	addwf	prodl,w,c
 20429  004A9C  6ED9               	movwf	fsr2l,c
 20430  004A9E  0E00               	movlw	high _RoutingTable
 20431  004AA0  20F4               	addwfc	prodh,w,c
 20432  004AA2  6EDA               	movwf	fsr2h,c
 20433  004AA4  0E00               	movlw	0
 20434  004AA6  6EDF               	movwf	indf2,c
 20435                           
 20436                           ; BSR set to: 1
 20437                           ;miwi_mesh.c: 2055: if( role != 0x00 )
 20438  004AA8  0101               	movlb	1	; () banked
 20439  004AAA  51CA               	movf	_role& (0+255),w,b
 20440  004AAC  B4D8               	btfsc	status,2,c
 20441  004AAE  D003               	goto	l17308
 20442                           
 20443                           ; BSR set to: 1
 20444                           ;miwi_mesh.c: 2056: {
 20445                           ;miwi_mesh.c: 2057: SendBeacon();
 20446  004AB0  ECAE  F043         	call	_SendBeacon	;wreg free
 20447                           
 20448                           ;miwi_mesh.c: 2058: }
 20449  004AB4  D028               	goto	l17320
 20450  004AB6                     l17308:
 20451                           
 20452                           ;miwi_mesh.c: 2059: else
 20453                           ;miwi_mesh.c: 2060: {
 20454                           ;miwi_mesh.c: 2062: {TxData = 0;};
 20455  004AB6  0E00               	movlw	0
 20456  004AB8  0101               	movlb	1	; () banked
 20457  004ABA  6FC6               	movwf	_TxData& (0+255),b
 20458                           
 20459                           ; BSR set to: 1
 20460                           ;miwi_mesh.c: 2063: TxBuffer[TxData++] = 0x07;
 20461  004ABC  0101               	movlb	1	; () banked
 20462  004ABE  51C6               	movf	_TxData& (0+255),w,b
 20463  004AC0  0D01               	mullw	1
 20464  004AC2  0EA6               	movlw	low _TxBuffer
 20465  004AC4  24F3               	addwf	prodl,w,c
 20466  004AC6  6ED9               	movwf	fsr2l,c
 20467  004AC8  0E02               	movlw	high _TxBuffer
 20468  004ACA  20F4               	addwfc	prodh,w,c
 20469  004ACC  6EDA               	movwf	fsr2h,c
 20470  004ACE  0E07               	movlw	7
 20471  004AD0  6EDF               	movwf	indf2,c
 20472                           
 20473                           ; BSR set to: 1
 20474  004AD2  0101               	movlb	1	; () banked
 20475  004AD4  2BC6               	incf	_TxData& (0+255),f,b
 20476                           
 20477                           ; BSR set to: 1
 20478                           ;miwi_mesh.c: 2064: TxBuffer[TxData++] = currentChannel;
 20479  004AD6  0101               	movlb	1	; () banked
 20480  004AD8  51C6               	movf	_TxData& (0+255),w,b
 20481  004ADA  0D01               	mullw	1
 20482  004ADC  0EA6               	movlw	low _TxBuffer
 20483  004ADE  24F3               	addwf	prodl,w,c
 20484  004AE0  6ED9               	movwf	fsr2l,c
 20485  004AE2  0E02               	movlw	high _TxBuffer
 20486  004AE4  20F4               	addwfc	prodh,w,c
 20487  004AE6  6EDA               	movwf	fsr2h,c
 20488  004AE8  C1F6  FFDF         	movff	_currentChannel,indf2
 20489                           
 20490                           ; BSR set to: 1
 20491  004AEC  0101               	movlb	1	; () banked
 20492  004AEE  2BC6               	incf	_TxData& (0+255),f,b
 20493                           
 20494                           ; BSR set to: 1
 20495                           ;miwi_mesh.c: 2069: SendMACPacket((0), 0x01);
 20496  004AF0  0E00               	movlw	0
 20497  004AF2  0101               	movlb	1	; () banked
 20498  004AF4  6F39               	movwf	SendMACPacket@Address& (0+255),b
 20499  004AF6  0E00               	movlw	0
 20500  004AF8  0101               	movlb	1	; () banked
 20501  004AFA  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 20502  004AFC  0E01               	movlw	1
 20503  004AFE  0101               	movlb	1	; () banked
 20504  004B00  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 20505  004B02  ECC6  F057         	call	_SendMACPacket	;wreg free
 20506  004B06                     l17320:
 20507                           
 20508                           ;miwi_mesh.c: 2071: }
 20509                           ;miwi_mesh.c: 2072: return 0;
 20510  004B06  0E00               	movlw	0
 20511  004B08  0012               	return	
 20512  004B0A                     l17326:
 20513                           
 20514                           ;miwi_mesh.c: 2074: else
 20515                           ;miwi_mesh.c: 2075: {
 20516                           ;miwi_mesh.c: 2077: MTP.flags.Val = 0;
 20517  004B0A  0E00               	movlw	0
 20518  004B0C  0101               	movlb	1	; () banked
 20519  004B0E  6FAD               	movwf	_MTP& (0+255),b
 20520                           
 20521                           ; BSR set to: 1
 20522                           ;miwi_mesh.c: 2078: MTP.flags.bits.ackReq = 1;
 20523  004B10  0101               	movlb	1	; () banked
 20524  004B12  8BAD               	bsf	_MTP& (0+255),5,b
 20525                           
 20526                           ; BSR set to: 1
 20527                           ;miwi_mesh.c: 2079: MTP.flags.bits.secEn = SecEn;
 20528  004B14  0101               	movlb	1	; () banked
 20529  004B16  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20530  004B18  D003               	bra	u18945
 20531  004B1A  0101               	movlb	1	; () banked
 20532  004B1C  97AD               	bcf	_MTP& (0+255),3,b
 20533  004B1E  D002               	bra	u18946
 20534  004B20                     u18945:
 20535  004B20  0101               	movlb	1	; () banked
 20536  004B22  87AD               	bsf	_MTP& (0+255),3,b
 20537  004B24                     u18946:
 20538                           
 20539                           ;miwi_mesh.c: 2080: tempShortAddress.v[0] = 0;
 20540  004B24  0E00               	movlw	0
 20541  004B26  0101               	movlb	1	; () banked
 20542  004B28  6FF4               	movwf	_tempShortAddress& (0+255),b
 20543                           
 20544                           ; BSR set to: 1
 20545                           ;miwi_mesh.c: 2081: tempShortAddress.v[1] = i;
 20546  004B2A  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 20547                           
 20548                           ; BSR set to: 1
 20549                           ;miwi_mesh.c: 2089: if( (i = SearchForShortAddress()) != 0xFF )
 20550  004B2E  EC82  F057         	call	_SearchForShortAddress	;wreg free
 20551  004B32  0101               	movlb	1	; () banked
 20552  004B34  6F47               	movwf	RouteMessage@i& (0+255),b
 20553  004B36  0101               	movlb	1	; () banked
 20554  004B38  2947               	incf	RouteMessage@i& (0+255),w,b
 20555  004B3A  B4D8               	btfsc	status,2,c
 20556  004B3C  D03E               	goto	l17356
 20557                           
 20558                           ; BSR set to: 1
 20559                           ;miwi_mesh.c: 2090: {
 20560                           ;miwi_mesh.c: 2091: MTP.DestAddress = ConnectionTable[i].Address;
 20561  004B3E  0101               	movlb	1	; () banked
 20562  004B40  5147               	movf	RouteMessage@i& (0+255),w,b
 20563  004B42  0D09               	mullw	9
 20564  004B44  0E04               	movlw	4
 20565  004B46  26F3               	addwf	prodl,f,c
 20566  004B48  0E00               	movlw	0
 20567  004B4A  22F4               	addwfc	prodh,f,c
 20568  004B4C  0E00               	movlw	low _ConnectionTable
 20569  004B4E  24F3               	addwf	prodl,w,c
 20570  004B50  0101               	movlb	1	; () banked
 20571  004B52  6FAE               	movwf	(_MTP+1)& (0+255),b
 20572  004B54  0E06               	movlw	high _ConnectionTable
 20573  004B56  20F4               	addwfc	prodh,w,c
 20574  004B58  0101               	movlb	1	; () banked
 20575  004B5A  6FAF               	movwf	(_MTP+2)& (0+255),b
 20576                           
 20577                           ; BSR set to: 1
 20578                           ;miwi_mesh.c: 2098: }
 20579                           ;miwi_mesh.c: 2100: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 20580                           
 20581                           ; BSR set to: 1
 20582                           
 20583                           ; BSR set to: 1
 20584                           ;miwi_mesh.c: 2093: else
 20585                           ;miwi_mesh.c: 2094: {
 20586                           ;miwi_mesh.c: 2097: goto ROUTE_THROUGH_TREE;
 20587                           
 20588                           ;miwi_mesh.c: 2092: }
 20589  004B5C  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 20590  004B60  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 20591  004B64  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 20592  004B68  0EA6               	movlw	low _TxBuffer
 20593  004B6A  0101               	movlb	1	; () banked
 20594  004B6C  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20595  004B6E  0E02               	movlw	high _TxBuffer
 20596  004B70  0101               	movlb	1	; () banked
 20597  004B72  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20598  004B74  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 20599  004B78  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 20600  004B7C  0900               	iorlw	0
 20601  004B7E  A4D8               	btfss	status,2,c
 20602  004B80  D00C               	goto	l17346
 20603                           
 20604                           ;miwi_mesh.c: 2101: {
 20605                           ;miwi_mesh.c: 2102: RouterFailures[i]++;
 20606  004B82  0101               	movlb	1	; () banked
 20607  004B84  5147               	movf	RouteMessage@i& (0+255),w,b
 20608  004B86  0D01               	mullw	1
 20609  004B88  0E69               	movlw	low _RouterFailures
 20610  004B8A  24F3               	addwf	prodl,w,c
 20611  004B8C  6ED9               	movwf	fsr2l,c
 20612  004B8E  0E00               	movlw	high _RouterFailures
 20613  004B90  20F4               	addwfc	prodh,w,c
 20614  004B92  6EDA               	movwf	fsr2h,c
 20615  004B94  2ADF               	incf	indf2,f,c
 20616                           
 20617                           ; BSR set to: 1
 20618                           ;miwi_mesh.c: 2103: return 0;
 20619  004B96  0E00               	movlw	0
 20620                           
 20621                           ; BSR set to: 1
 20622  004B98  0012               	return	
 20623  004B9A                     l17346:
 20624                           
 20625                           ;miwi_mesh.c: 2104: }
 20626                           ;miwi_mesh.c: 2105: RouterFailures[i] = 0;
 20627  004B9A  0101               	movlb	1	; () banked
 20628  004B9C  5147               	movf	RouteMessage@i& (0+255),w,b
 20629  004B9E  0D01               	mullw	1
 20630  004BA0  0E69               	movlw	low _RouterFailures
 20631  004BA2  24F3               	addwf	prodl,w,c
 20632  004BA4  6ED9               	movwf	fsr2l,c
 20633  004BA6  0E00               	movlw	high _RouterFailures
 20634  004BA8  20F4               	addwfc	prodh,w,c
 20635  004BAA  6EDA               	movwf	fsr2h,c
 20636  004BAC  0E00               	movlw	0
 20637  004BAE  6EDF               	movwf	indf2,c
 20638                           
 20639                           ; BSR set to: 1
 20640                           ;miwi_mesh.c: 2106: return 1;
 20641  004BB0  0E01               	movlw	1
 20642                           
 20643                           ; BSR set to: 1
 20644  004BB2  0012               	return	
 20645  004BB4                     l17352:
 20646  004BB4  0101               	movlb	1	; () banked
 20647  004BB6  2B47               	incf	RouteMessage@i& (0+255),f,b
 20648  004BB8  D71C               	goto	l17290
 20649  004BBA                     l17356:
 20650                           
 20651                           ; BSR set to: 1
 20652                           ;miwi_mesh.c: 2112: if( role != 0x02 )
 20653  004BBA  0E02               	movlw	2
 20654  004BBC  0101               	movlb	1	; () banked
 20655  004BBE  19CA               	xorwf	_role& (0+255),w,b
 20656  004BC0  B4D8               	btfsc	status,2,c
 20657  004BC2  D115               	goto	l17444
 20658                           
 20659                           ; BSR set to: 1
 20660                           ;miwi_mesh.c: 2113: {
 20661                           ;miwi_mesh.c: 2114: MTP.flags.Val = 0;
 20662  004BC4  0E00               	movlw	0
 20663  004BC6  0101               	movlb	1	; () banked
 20664  004BC8  6FAD               	movwf	_MTP& (0+255),b
 20665                           
 20666                           ; BSR set to: 1
 20667                           ;miwi_mesh.c: 2115: MTP.flags.bits.ackReq = 1;
 20668  004BCA  0101               	movlb	1	; () banked
 20669  004BCC  8BAD               	bsf	_MTP& (0+255),5,b
 20670                           
 20671                           ; BSR set to: 1
 20672                           ;miwi_mesh.c: 2116: MTP.flags.bits.secEn = SecEn;
 20673  004BCE  0101               	movlb	1	; () banked
 20674  004BD0  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 20675  004BD2  D003               	bra	u18995
 20676  004BD4  0101               	movlb	1	; () banked
 20677  004BD6  97AD               	bcf	_MTP& (0+255),3,b
 20678  004BD8  D002               	bra	u18996
 20679  004BDA                     u18995:
 20680  004BDA  0101               	movlb	1	; () banked
 20681  004BDC  87AD               	bsf	_MTP& (0+255),3,b
 20682  004BDE                     u18996:
 20683                           
 20684                           ; BSR set to: 1
 20685                           ;miwi_mesh.c: 2118: if( role == 0x01)
 20686  004BDE  0101               	movlb	1	; () banked
 20687  004BE0  05CA               	decf	_role& (0+255),w,b
 20688  004BE2  A4D8               	btfss	status,2,c
 20689  004BE4  D034               	goto	l17378
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;miwi_mesh.c: 2119: {
 20693                           ;miwi_mesh.c: 2123: for(i = 0; i < 4; i++)
 20694  004BE6  0E00               	movlw	0
 20695  004BE8  0101               	movlb	1	; () banked
 20696  004BEA  6F47               	movwf	RouteMessage@i& (0+255),b
 20697  004BEC                     l17368:
 20698                           
 20699                           ; BSR set to: 1
 20700  004BEC  0E03               	movlw	3
 20701  004BEE  0101               	movlb	1	; () banked
 20702  004BF0  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20703  004BF2  D001               	goto	l17372
 20704  004BF4  D0D1               	goto	l17428
 20705  004BF6                     l17372:
 20706                           
 20707                           ; BSR set to: 1
 20708                           ;miwi_mesh.c: 2124: {
 20709                           ;miwi_mesh.c: 2125: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 20710  004BF6  0101               	movlb	1	; () banked
 20711  004BF8  5147               	movf	RouteMessage@i& (0+255),w,b
 20712  004BFA  0D01               	mullw	1
 20713  004BFC  0E04               	movlw	4
 20714  004BFE  26F3               	addwf	prodl,f,c
 20715  004C00  0E00               	movlw	0
 20716  004C02  22F4               	addwfc	prodh,f,c
 20717  004C04  0E00               	movlw	low _ConnectionTable
 20718  004C06  0101               	movlb	1	; () banked
 20719  004C08  6F42               	movwf	??_RouteMessage& (0+255),b
 20720  004C0A  0E06               	movlw	high _ConnectionTable
 20721  004C0C  0101               	movlb	1	; () banked
 20722  004C0E  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20723  004C10  50F3               	movf	prodl,w,c
 20724  004C12  0101               	movlb	1	; () banked
 20725  004C14  2742               	addwf	??_RouteMessage& (0+255),f,b
 20726  004C16  50F4               	movf	prodh,w,c
 20727  004C18  0101               	movlb	1	; () banked
 20728  004C1A  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20729  004C1C  0101               	movlb	1	; () banked
 20730  004C1E  51C9               	movf	_myParent& (0+255),w,b
 20731  004C20  0D09               	mullw	9
 20732  004C22  50F3               	movf	prodl,w,c
 20733  004C24  0101               	movlb	1	; () banked
 20734  004C26  2542               	addwf	??_RouteMessage& (0+255),w,b
 20735  004C28  6ED9               	movwf	fsr2l,c
 20736  004C2A  50F4               	movf	prodh,w,c
 20737  004C2C  0101               	movlb	1	; () banked
 20738  004C2E  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20739  004C30  6EDA               	movwf	fsr2h,c
 20740  004C32  0101               	movlb	1	; () banked
 20741  004C34  5147               	movf	RouteMessage@i& (0+255),w,b
 20742  004C36  0D01               	mullw	1
 20743  004C38  0EA6               	movlw	low _tempLongAddress
 20744  004C3A  24F3               	addwf	prodl,w,c
 20745  004C3C  6EE1               	movwf	fsr1l,c
 20746  004C3E  0E01               	movlw	high _tempLongAddress
 20747  004C40  20F4               	addwfc	prodh,w,c
 20748  004C42  6EE2               	movwf	fsr1h,c
 20749  004C44  CFDF FFE7          	movff	indf2,indf1
 20750                           
 20751                           ; BSR set to: 1
 20752  004C48  0101               	movlb	1	; () banked
 20753  004C4A  2B47               	incf	RouteMessage@i& (0+255),f,b
 20754  004C4C  D7CF               	goto	l17368
 20755  004C4E                     l17378:
 20756                           
 20757                           ; BSR set to: 1
 20758                           ;miwi_mesh.c: 2129: else
 20759                           ;miwi_mesh.c: 2130: {
 20760                           ;miwi_mesh.c: 2131: for(i = 0; i < 8; i++)
 20761  004C4E  0E00               	movlw	0
 20762  004C50  0101               	movlb	1	; () banked
 20763  004C52  6F47               	movwf	RouteMessage@i& (0+255),b
 20764  004C54                     l17380:
 20765                           
 20766                           ; BSR set to: 1
 20767  004C54  0E07               	movlw	7
 20768  004C56  0101               	movlb	1	; () banked
 20769  004C58  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20770  004C5A  D001               	goto	l17384
 20771  004C5C  D01F               	goto	l17394
 20772  004C5E                     l17384:
 20773                           
 20774                           ; BSR set to: 1
 20775                           ;miwi_mesh.c: 2132: {
 20776                           ;miwi_mesh.c: 2133: if( knownCoordinators && (0x01 << i) )
 20777  004C5E  0101               	movlb	1	; () banked
 20778  004C60  51C7               	movf	_knownCoordinators& (0+255),w,b
 20779  004C62  B4D8               	btfsc	status,2,c
 20780  004C64  D018               	goto	l17390
 20781                           
 20782                           ; BSR set to: 1
 20783  004C66  C147  F142         	movff	RouteMessage@i,??_RouteMessage
 20784  004C6A  0E01               	movlw	1
 20785  004C6C  0101               	movlb	1	; () banked
 20786  004C6E  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20787  004C70  0E00               	movlw	0
 20788  004C72  0101               	movlb	1	; () banked
 20789  004C74  6F44               	movwf	(??_RouteMessage+2)& (0+255),b
 20790  004C76  0101               	movlb	1	; () banked
 20791  004C78  2B42               	incf	??_RouteMessage& (0+255),f,b
 20792  004C7A  D004               	goto	u19054
 20793  004C7C                     u19055:
 20794  004C7C  90D8               	bcf	status,0,c
 20795  004C7E  0101               	movlb	1	; () banked
 20796  004C80  3743               	rlcf	(??_RouteMessage+1)& (0+255),f,b
 20797  004C82  3744               	rlcf	(??_RouteMessage+2)& (0+255),f,b
 20798  004C84                     u19054:
 20799  004C84  0101               	movlb	1	; () banked
 20800  004C86  2F42               	decfsz	??_RouteMessage& (0+255),f,b
 20801  004C88  D7F9               	goto	u19055
 20802  004C8A  0101               	movlb	1	; () banked
 20803  004C8C  5143               	movf	(??_RouteMessage+1)& (0+255),w,b
 20804  004C8E  0101               	movlb	1	; () banked
 20805  004C90  1144               	iorwf	(??_RouteMessage+2)& (0+255),w,b
 20806  004C92  A4D8               	btfss	status,2,c
 20807  004C94  D003               	goto	l17394
 20808  004C96                     l17390:
 20809                           
 20810                           ; BSR set to: 1
 20811  004C96  0101               	movlb	1	; () banked
 20812  004C98  2B47               	incf	RouteMessage@i& (0+255),f,b
 20813  004C9A  D7DC               	goto	l17380
 20814  004C9C                     l17394:
 20815                           
 20816                           ; BSR set to: 1
 20817                           ;miwi_mesh.c: 2136: }
 20818                           ;miwi_mesh.c: 2137: }
 20819                           ;miwi_mesh.c: 2138: if( i < 8 )
 20820  004C9C  0E08               	movlw	8
 20821  004C9E  0101               	movlb	1	; () banked
 20822  004CA0  6147               	cpfslt	RouteMessage@i& (0+255),b
 20823  004CA2  D005               	goto	l17400
 20824                           
 20825                           ; BSR set to: 1
 20826                           ;miwi_mesh.c: 2139: {
 20827                           ;miwi_mesh.c: 2140: tempShortAddress.v[1] = i;
 20828  004CA4  C147  F1F5         	movff	RouteMessage@i,_tempShortAddress+1
 20829                           
 20830                           ; BSR set to: 1
 20831                           ;miwi_mesh.c: 2141: tempShortAddress.v[0] = 0;
 20832  004CA8  0E00               	movlw	0
 20833  004CAA  0101               	movlb	1	; () banked
 20834  004CAC  D004               	goto	L7
 20835  004CAE                     l17400:
 20836                           
 20837                           ; BSR set to: 1
 20838                           ;miwi_mesh.c: 2143: else
 20839                           ;miwi_mesh.c: 2144: {
 20840                           ;miwi_mesh.c: 2146: tempShortAddress.Val = 0;
 20841  004CAE  0E00               	movlw	0
 20842  004CB0  0101               	movlb	1	; () banked
 20843  004CB2  6FF5               	movwf	(_tempShortAddress+1)& (0+255),b
 20844  004CB4  0E00               	movlw	0
 20845  004CB6                     L7:
 20846  004CB6  6FF4               	movwf	_tempShortAddress& (0+255),b
 20847                           
 20848                           ; BSR set to: 1
 20849                           ;miwi_mesh.c: 2147: }
 20850                           ;miwi_mesh.c: 2150: {
 20851                           ;miwi_mesh.c: 2151: uint8_t j;
 20852                           ;miwi_mesh.c: 2153: if( (j = SearchForShortAddress()) < 64 )
 20853                           
 20854                           ; BSR set to: 1
 20855  004CB8  EC82  F057         	call	_SearchForShortAddress	;wreg free
 20856  004CBC  0101               	movlb	1	; () banked
 20857  004CBE  6F45               	movwf	RouteMessage@j& (0+255),b
 20858  004CC0  0E40               	movlw	64
 20859  004CC2  0101               	movlb	1	; () banked
 20860  004CC4  6145               	cpfslt	RouteMessage@j& (0+255),b
 20861  004CC6  D034               	goto	l17416
 20862                           
 20863                           ; BSR set to: 1
 20864                           ;miwi_mesh.c: 2154: {
 20865                           ;miwi_mesh.c: 2155: for(i = 0; i < 4; i++)
 20866  004CC8  0E00               	movlw	0
 20867  004CCA  0101               	movlb	1	; () banked
 20868  004CCC  6F47               	movwf	RouteMessage@i& (0+255),b
 20869  004CCE                     l17406:
 20870                           
 20871                           ; BSR set to: 1
 20872  004CCE  0E03               	movlw	3
 20873  004CD0  0101               	movlb	1	; () banked
 20874  004CD2  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20875  004CD4  D001               	goto	l17410
 20876  004CD6  D060               	goto	l17428
 20877  004CD8                     l17410:
 20878                           
 20879                           ; BSR set to: 1
 20880                           ;miwi_mesh.c: 2156: {
 20881                           ;miwi_mesh.c: 2157: tempLongAddress[i] = ConnectionTable[j].Address[i];
 20882  004CD8  0101               	movlb	1	; () banked
 20883  004CDA  5147               	movf	RouteMessage@i& (0+255),w,b
 20884  004CDC  0D01               	mullw	1
 20885  004CDE  0E04               	movlw	4
 20886  004CE0  26F3               	addwf	prodl,f,c
 20887  004CE2  0E00               	movlw	0
 20888  004CE4  22F4               	addwfc	prodh,f,c
 20889  004CE6  0E00               	movlw	low _ConnectionTable
 20890  004CE8  0101               	movlb	1	; () banked
 20891  004CEA  6F42               	movwf	??_RouteMessage& (0+255),b
 20892  004CEC  0E06               	movlw	high _ConnectionTable
 20893  004CEE  0101               	movlb	1	; () banked
 20894  004CF0  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20895  004CF2  50F3               	movf	prodl,w,c
 20896  004CF4  0101               	movlb	1	; () banked
 20897  004CF6  2742               	addwf	??_RouteMessage& (0+255),f,b
 20898  004CF8  50F4               	movf	prodh,w,c
 20899  004CFA  0101               	movlb	1	; () banked
 20900  004CFC  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20901  004CFE  0101               	movlb	1	; () banked
 20902  004D00  5145               	movf	RouteMessage@j& (0+255),w,b
 20903  004D02  0D09               	mullw	9
 20904  004D04  50F3               	movf	prodl,w,c
 20905  004D06  0101               	movlb	1	; () banked
 20906  004D08  2542               	addwf	??_RouteMessage& (0+255),w,b
 20907  004D0A  6ED9               	movwf	fsr2l,c
 20908  004D0C  50F4               	movf	prodh,w,c
 20909  004D0E  0101               	movlb	1	; () banked
 20910  004D10  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20911  004D12  6EDA               	movwf	fsr2h,c
 20912  004D14  0101               	movlb	1	; () banked
 20913  004D16  5147               	movf	RouteMessage@i& (0+255),w,b
 20914  004D18  0D01               	mullw	1
 20915  004D1A  0EA6               	movlw	low _tempLongAddress
 20916  004D1C  24F3               	addwf	prodl,w,c
 20917  004D1E  6EE1               	movwf	fsr1l,c
 20918  004D20  0E01               	movlw	high _tempLongAddress
 20919  004D22  20F4               	addwfc	prodh,w,c
 20920  004D24  6EE2               	movwf	fsr1h,c
 20921  004D26  CFDF FFE7          	movff	indf2,indf1
 20922                           
 20923                           ; BSR set to: 1
 20924  004D2A  0101               	movlb	1	; () banked
 20925  004D2C  2B47               	incf	RouteMessage@i& (0+255),f,b
 20926  004D2E  D7CF               	goto	l17406
 20927  004D30                     l17416:
 20928                           
 20929                           ; BSR set to: 1
 20930                           ;miwi_mesh.c: 2160: else
 20931                           ;miwi_mesh.c: 2161: {
 20932                           ;miwi_mesh.c: 2162: for(i = 0; i < 4; i++)
 20933  004D30  0E00               	movlw	0
 20934  004D32  0101               	movlb	1	; () banked
 20935  004D34  6F47               	movwf	RouteMessage@i& (0+255),b
 20936  004D36                     l17418:
 20937                           
 20938                           ; BSR set to: 1
 20939  004D36  0E03               	movlw	3
 20940  004D38  0101               	movlb	1	; () banked
 20941  004D3A  6547               	cpfsgt	RouteMessage@i& (0+255),b
 20942  004D3C  D001               	goto	l17422
 20943  004D3E  D02C               	goto	l17428
 20944  004D40                     l17422:
 20945                           
 20946                           ; BSR set to: 1
 20947                           ;miwi_mesh.c: 2163: {
 20948                           ;miwi_mesh.c: 2164: tempLongAddress[i] = ConnectionTable[myParent].Address[i];
 20949  004D40  0101               	movlb	1	; () banked
 20950  004D42  5147               	movf	RouteMessage@i& (0+255),w,b
 20951  004D44  0D01               	mullw	1
 20952  004D46  0E04               	movlw	4
 20953  004D48  26F3               	addwf	prodl,f,c
 20954  004D4A  0E00               	movlw	0
 20955  004D4C  22F4               	addwfc	prodh,f,c
 20956  004D4E  0E00               	movlw	low _ConnectionTable
 20957  004D50  0101               	movlb	1	; () banked
 20958  004D52  6F42               	movwf	??_RouteMessage& (0+255),b
 20959  004D54  0E06               	movlw	high _ConnectionTable
 20960  004D56  0101               	movlb	1	; () banked
 20961  004D58  6F43               	movwf	(??_RouteMessage+1)& (0+255),b
 20962  004D5A  50F3               	movf	prodl,w,c
 20963  004D5C  0101               	movlb	1	; () banked
 20964  004D5E  2742               	addwf	??_RouteMessage& (0+255),f,b
 20965  004D60  50F4               	movf	prodh,w,c
 20966  004D62  0101               	movlb	1	; () banked
 20967  004D64  2343               	addwfc	(??_RouteMessage+1)& (0+255),f,b
 20968  004D66  0101               	movlb	1	; () banked
 20969  004D68  51C9               	movf	_myParent& (0+255),w,b
 20970  004D6A  0D09               	mullw	9
 20971  004D6C  50F3               	movf	prodl,w,c
 20972  004D6E  0101               	movlb	1	; () banked
 20973  004D70  2542               	addwf	??_RouteMessage& (0+255),w,b
 20974  004D72  6ED9               	movwf	fsr2l,c
 20975  004D74  50F4               	movf	prodh,w,c
 20976  004D76  0101               	movlb	1	; () banked
 20977  004D78  2143               	addwfc	(??_RouteMessage+1)& (0+255),w,b
 20978  004D7A  6EDA               	movwf	fsr2h,c
 20979  004D7C  0101               	movlb	1	; () banked
 20980  004D7E  5147               	movf	RouteMessage@i& (0+255),w,b
 20981  004D80  0D01               	mullw	1
 20982  004D82  0EA6               	movlw	low _tempLongAddress
 20983  004D84  24F3               	addwf	prodl,w,c
 20984  004D86  6EE1               	movwf	fsr1l,c
 20985  004D88  0E01               	movlw	high _tempLongAddress
 20986  004D8A  20F4               	addwfc	prodh,w,c
 20987  004D8C  6EE2               	movwf	fsr1h,c
 20988  004D8E  CFDF FFE7          	movff	indf2,indf1
 20989                           
 20990                           ; BSR set to: 1
 20991  004D92  0101               	movlb	1	; () banked
 20992  004D94  2B47               	incf	RouteMessage@i& (0+255),f,b
 20993  004D96  D7CF               	goto	l17418
 20994  004D98                     l17428:
 20995                           
 20996                           ; BSR set to: 1
 20997                           ;miwi_mesh.c: 2165: }
 20998                           ;miwi_mesh.c: 2166: }
 20999                           ;miwi_mesh.c: 2167: }
 21000                           ;miwi_mesh.c: 2170: }
 21001                           ;miwi_mesh.c: 2178: MTP.DestAddress = ConnectionTable[myParent].Address;
 21002  004D98  0101               	movlb	1	; () banked
 21003  004D9A  51C9               	movf	_myParent& (0+255),w,b
 21004  004D9C  0D09               	mullw	9
 21005  004D9E  0E04               	movlw	4
 21006  004DA0  26F3               	addwf	prodl,f,c
 21007  004DA2  0E00               	movlw	0
 21008  004DA4  22F4               	addwfc	prodh,f,c
 21009  004DA6  0E00               	movlw	low _ConnectionTable
 21010  004DA8  24F3               	addwf	prodl,w,c
 21011  004DAA  0101               	movlb	1	; () banked
 21012  004DAC  6FAE               	movwf	(_MTP+1)& (0+255),b
 21013  004DAE  0E06               	movlw	high _ConnectionTable
 21014  004DB0  20F4               	addwfc	prodh,w,c
 21015  004DB2  0101               	movlb	1	; () banked
 21016  004DB4  6FAF               	movwf	(_MTP+2)& (0+255),b
 21017                           
 21018                           ; BSR set to: 1
 21019                           ;miwi_mesh.c: 2181: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 21020  004DB6  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21021  004DBA  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21022  004DBE  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21023  004DC2  0EA6               	movlw	low _TxBuffer
 21024  004DC4  0101               	movlb	1	; () banked
 21025  004DC6  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21026  004DC8  0E02               	movlw	high _TxBuffer
 21027  004DCA  0101               	movlb	1	; () banked
 21028  004DCC  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21029  004DCE  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21030  004DD2  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 21031  004DD6  0900               	iorlw	0
 21032  004DD8  A4D8               	btfss	status,2,c
 21033  004DDA  D004               	goto	l17438
 21034                           
 21035                           ;miwi_mesh.c: 2182: {
 21036                           ;miwi_mesh.c: 2183: RouterFailures[0]++;
 21037  004DDC  0100               	movlb	0	; () banked
 21038  004DDE  2B69               	incf	_RouterFailures& (0+255),f,b
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;miwi_mesh.c: 2184: return 0;
 21042  004DE0  0E00               	movlw	0
 21043                           
 21044                           ; BSR set to: 0
 21045  004DE2  0012               	return	
 21046  004DE4                     l17438:
 21047                           
 21048                           ;miwi_mesh.c: 2185: }
 21049                           ;miwi_mesh.c: 2186: RouterFailures[0] = 0;
 21050  004DE4  0E00               	movlw	0
 21051  004DE6  0100               	movlb	0	; () banked
 21052  004DE8  6F69               	movwf	_RouterFailures& (0+255),b
 21053                           
 21054                           ; BSR set to: 0
 21055                           ;miwi_mesh.c: 2187: return 1;
 21056  004DEA  0E01               	movlw	1
 21057                           
 21058                           ; BSR set to: 0
 21059  004DEC  0012               	return	
 21060  004DEE                     l17444:
 21061                           
 21062                           ;miwi_mesh.c: 2188: }
 21063                           ;miwi_mesh.c: 2192: MTP.flags.Val = 0;
 21064  004DEE  0E00               	movlw	0
 21065  004DF0  0101               	movlb	1	; () banked
 21066  004DF2  6FAD               	movwf	_MTP& (0+255),b
 21067                           
 21068                           ; BSR set to: 1
 21069                           ;miwi_mesh.c: 2193: MTP.flags.bits.ackReq = 1;
 21070  004DF4  0101               	movlb	1	; () banked
 21071  004DF6  8BAD               	bsf	_MTP& (0+255),5,b
 21072                           
 21073                           ; BSR set to: 1
 21074                           ;miwi_mesh.c: 2194: MTP.flags.bits.secEn = SecEn;
 21075  004DF8  0101               	movlb	1	; () banked
 21076  004DFA  B141               	btfsc	RouteMessage@SecEn& (0+255),0,b
 21077  004DFC  D003               	bra	u19155
 21078  004DFE  0101               	movlb	1	; () banked
 21079  004E00  97AD               	bcf	_MTP& (0+255),3,b
 21080  004E02  D002               	bra	u19156
 21081  004E04                     u19155:
 21082  004E04  0101               	movlb	1	; () banked
 21083  004E06  87AD               	bsf	_MTP& (0+255),3,b
 21084  004E08                     u19156:
 21085                           
 21086                           ; BSR set to: 1
 21087                           ;miwi_mesh.c: 2196: tempShortAddress.v[1] = parentNode;
 21088  004E08  C146  F1F5         	movff	RouteMessage@parentNode,_tempShortAddress+1
 21089                           
 21090                           ;miwi_mesh.c: 2197: tempShortAddress.v[0] = 0;
 21091  004E0C  0E00               	movlw	0
 21092  004E0E  0101               	movlb	1	; () banked
 21093  004E10  6FF4               	movwf	_tempShortAddress& (0+255),b
 21094                           
 21095                           ; BSR set to: 1
 21096                           ;miwi_mesh.c: 2205: MTP.DestAddress = ConnectionTable[myParent].Address;
 21097  004E12  0101               	movlb	1	; () banked
 21098  004E14  51C9               	movf	_myParent& (0+255),w,b
 21099  004E16  0D09               	mullw	9
 21100  004E18  0E04               	movlw	4
 21101  004E1A  26F3               	addwf	prodl,f,c
 21102  004E1C  0E00               	movlw	0
 21103  004E1E  22F4               	addwfc	prodh,f,c
 21104  004E20  0E00               	movlw	low _ConnectionTable
 21105  004E22  24F3               	addwf	prodl,w,c
 21106  004E24  0101               	movlb	1	; () banked
 21107  004E26  6FAE               	movwf	(_MTP+1)& (0+255),b
 21108  004E28  0E06               	movlw	high _ConnectionTable
 21109  004E2A  20F4               	addwfc	prodh,w,c
 21110  004E2C  0101               	movlb	1	; () banked
 21111  004E2E  6FAF               	movwf	(_MTP+2)& (0+255),b
 21112                           
 21113                           ; BSR set to: 1
 21114                           ;miwi_mesh.c: 2208: if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == 0 )
 21115  004E30  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21116  004E34  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21117  004E38  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21118  004E3C  0EA6               	movlw	low _TxBuffer
 21119  004E3E  0101               	movlb	1	; () banked
 21120  004E40  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21121  004E42  0E02               	movlw	high _TxBuffer
 21122  004E44  0101               	movlb	1	; () banked
 21123  004E46  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21124  004E48  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21125  004E4C  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 21126  004E50  0900               	iorlw	0
 21127  004E52  A4D8               	btfss	status,2,c
 21128  004E54  D004               	goto	l17462
 21129                           
 21130                           ;miwi_mesh.c: 2209: {
 21131                           ;miwi_mesh.c: 2210: RouterFailures[0]++;
 21132  004E56  0100               	movlb	0	; () banked
 21133  004E58  2B69               	incf	_RouterFailures& (0+255),f,b
 21134                           
 21135                           ; BSR set to: 0
 21136                           ;miwi_mesh.c: 2211: return 0;
 21137  004E5A  0E00               	movlw	0
 21138                           
 21139                           ; BSR set to: 0
 21140  004E5C  0012               	return	
 21141  004E5E                     l17462:
 21142                           
 21143                           ;miwi_mesh.c: 2212: }
 21144                           ;miwi_mesh.c: 2213: RouterFailures[0] = 0;
 21145  004E5E  0E00               	movlw	0
 21146  004E60  0100               	movlb	0	; () banked
 21147  004E62  6F69               	movwf	_RouterFailures& (0+255),b
 21148                           
 21149                           ; BSR set to: 0
 21150                           ;miwi_mesh.c: 2214: return 1;
 21151  004E64  0E01               	movlw	1
 21152  004E66  0012               	return	
 21153  004E68                     __end_of_RouteMessage:
 21154                           	opt stack 0
 21155                           tblptru	equ	0xFF8
 21156                           tblptrh	equ	0xFF7
 21157                           tblptrl	equ	0xFF6
 21158                           tablat	equ	0xFF5
 21159                           prodh	equ	0xFF4
 21160                           prodl	equ	0xFF3
 21161                           intcon	equ	0xFF2
 21162                           intcon2	equ	0xFF1
 21163                           intcon3	equ	0xFF0
 21164                           indf0	equ	0xFEF
 21165                           postinc0	equ	0xFEE
 21166                           plusw0	equ	0xFEB
 21167                           fsr0h	equ	0xFEA
 21168                           fsr0l	equ	0xFE9
 21169                           wreg	equ	0xFE8
 21170                           indf1	equ	0xFE7
 21171                           postinc1	equ	0xFE6
 21172                           postdec1	equ	0xFE5
 21173                           fsr1h	equ	0xFE2
 21174                           fsr1l	equ	0xFE1
 21175                           indf2	equ	0xFDF
 21176                           postinc2	equ	0xFDE
 21177                           postdec2	equ	0xFDD
 21178                           plusw2	equ	0xFDB
 21179                           fsr2h	equ	0xFDA
 21180                           fsr2l	equ	0xFD9
 21181                           status	equ	0xFD8
 21182                           
 21183 ;; *************** function _SendBeacon *****************
 21184 ;; Defined at:
 21185 ;;		line 3277 in file "src/miwi/miwi_mesh.c"
 21186 ;; Parameters:    Size  Location     Type
 21187 ;;		None
 21188 ;; Auto vars:     Size  Location     Type
 21189 ;;  i               1    0        unsigned char 
 21190 ;; Return value:  Size  Location     Type
 21191 ;;		None               void
 21192 ;; Registers used:
 21193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21194 ;; Tracked objects:
 21195 ;;		On entry : 0/0
 21196 ;;		On exit  : 0/0
 21197 ;;		Unchanged: 0/0
 21198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21203 ;;Total ram usage:        0 bytes
 21204 ;; Hardware stack levels used:    1
 21205 ;; Hardware stack levels required when called:   22
 21206 ;; This function calls:
 21207 ;;		_SendMACPacket
 21208 ;; This function is called by:
 21209 ;;		_MiWiTasks
 21210 ;;		_RouteMessage
 21211 ;; This function uses a non-reentrant model
 21212 ;;
 21213                           
 21214                           	psect	text44
 21215  00875C                     __ptext44:
 21216                           	opt stack 0
 21217  00875C                     _SendBeacon:
 21218                           	opt stack 5
 21219                           
 21220                           ;miwi_mesh.c: 3279: uint8_t i;
 21221                           ;miwi_mesh.c: 3281: {TxData = 0;};
 21222                           
 21223                           ;incstack = 0
 21224  00875C  0E00               	movlw	0
 21225  00875E  0101               	movlb	1	; () banked
 21226  008760  6FC6               	movwf	_TxData& (0+255),b
 21227                           
 21228                           ; BSR set to: 1
 21229                           ;miwi_mesh.c: 3283: TxBuffer[TxData++] = myPANID.v[0];
 21230  008762  0101               	movlb	1	; () banked
 21231  008764  51C6               	movf	_TxData& (0+255),w,b
 21232  008766  0D01               	mullw	1
 21233  008768  0EA6               	movlw	low _TxBuffer
 21234  00876A  24F3               	addwf	prodl,w,c
 21235  00876C  6ED9               	movwf	fsr2l,c
 21236  00876E  0E02               	movlw	high _TxBuffer
 21237  008770  20F4               	addwfc	prodh,w,c
 21238  008772  6EDA               	movwf	fsr2h,c
 21239  008774  C1F0  FFDF         	movff	_myPANID,indf2
 21240                           
 21241                           ; BSR set to: 1
 21242  008778  0101               	movlb	1	; () banked
 21243  00877A  2BC6               	incf	_TxData& (0+255),f,b
 21244                           
 21245                           ; BSR set to: 1
 21246                           ;miwi_mesh.c: 3284: TxBuffer[TxData++] = myPANID.v[1];
 21247  00877C  0101               	movlb	1	; () banked
 21248  00877E  51C6               	movf	_TxData& (0+255),w,b
 21249  008780  0D01               	mullw	1
 21250  008782  0EA6               	movlw	low _TxBuffer
 21251  008784  24F3               	addwf	prodl,w,c
 21252  008786  6ED9               	movwf	fsr2l,c
 21253  008788  0E02               	movlw	high _TxBuffer
 21254  00878A  20F4               	addwfc	prodh,w,c
 21255  00878C  6EDA               	movwf	fsr2h,c
 21256  00878E  C1F1  FFDF         	movff	_myPANID+1,indf2
 21257                           
 21258                           ; BSR set to: 1
 21259  008792  0101               	movlb	1	; () banked
 21260  008794  2BC6               	incf	_TxData& (0+255),f,b
 21261                           
 21262                           ; BSR set to: 1
 21263                           ;miwi_mesh.c: 3285: TxBuffer[TxData++] = myShortAddress.v[0];
 21264  008796  0101               	movlb	1	; () banked
 21265  008798  51C6               	movf	_TxData& (0+255),w,b
 21266  00879A  0D01               	mullw	1
 21267  00879C  0EA6               	movlw	low _TxBuffer
 21268  00879E  24F3               	addwf	prodl,w,c
 21269  0087A0  6ED9               	movwf	fsr2l,c
 21270  0087A2  0E02               	movlw	high _TxBuffer
 21271  0087A4  20F4               	addwfc	prodh,w,c
 21272  0087A6  6EDA               	movwf	fsr2h,c
 21273  0087A8  C1F2  FFDF         	movff	_myShortAddress,indf2
 21274                           
 21275                           ; BSR set to: 1
 21276  0087AC  0101               	movlb	1	; () banked
 21277  0087AE  2BC6               	incf	_TxData& (0+255),f,b
 21278                           
 21279                           ; BSR set to: 1
 21280                           ;miwi_mesh.c: 3286: TxBuffer[TxData++] = myShortAddress.v[1];
 21281  0087B0  0101               	movlb	1	; () banked
 21282  0087B2  51C6               	movf	_TxData& (0+255),w,b
 21283  0087B4  0D01               	mullw	1
 21284  0087B6  0EA6               	movlw	low _TxBuffer
 21285  0087B8  24F3               	addwf	prodl,w,c
 21286  0087BA  6ED9               	movwf	fsr2l,c
 21287  0087BC  0E02               	movlw	high _TxBuffer
 21288  0087BE  20F4               	addwfc	prodh,w,c
 21289  0087C0  6EDA               	movwf	fsr2h,c
 21290  0087C2  C1F3  FFDF         	movff	_myShortAddress+1,indf2
 21291                           
 21292                           ; BSR set to: 1
 21293  0087C6  0101               	movlb	1	; () banked
 21294  0087C8  2BC6               	incf	_TxData& (0+255),f,b
 21295                           
 21296                           ; BSR set to: 1
 21297                           ;miwi_mesh.c: 3288: TxBuffer[TxData++] = 0xFF;
 21298  0087CA  0101               	movlb	1	; () banked
 21299  0087CC  51C6               	movf	_TxData& (0+255),w,b
 21300  0087CE  0D01               	mullw	1
 21301  0087D0  0EA6               	movlw	low _TxBuffer
 21302  0087D2  24F3               	addwf	prodl,w,c
 21303  0087D4  6ED9               	movwf	fsr2l,c
 21304  0087D6  0E02               	movlw	high _TxBuffer
 21305  0087D8  20F4               	addwfc	prodh,w,c
 21306  0087DA  6EDA               	movwf	fsr2h,c
 21307  0087DC  0EFF               	movlw	255
 21308  0087DE  6EDF               	movwf	indf2,c
 21309                           
 21310                           ; BSR set to: 1
 21311  0087E0  0101               	movlb	1	; () banked
 21312  0087E2  2BC6               	incf	_TxData& (0+255),f,b
 21313                           
 21314                           ; BSR set to: 1
 21315                           ;miwi_mesh.c: 3289: TxBuffer[TxData++] = MiWiCapacityInfo.Val;
 21316  0087E4  0101               	movlb	1	; () banked
 21317  0087E6  51C6               	movf	_TxData& (0+255),w,b
 21318  0087E8  0D01               	mullw	1
 21319  0087EA  0EA6               	movlw	low _TxBuffer
 21320  0087EC  24F3               	addwf	prodl,w,c
 21321  0087EE  6ED9               	movwf	fsr2l,c
 21322  0087F0  0E02               	movlw	high _TxBuffer
 21323  0087F2  20F4               	addwfc	prodh,w,c
 21324  0087F4  6EDA               	movwf	fsr2h,c
 21325  0087F6  C1C2  FFDF         	movff	_MiWiCapacityInfo,indf2
 21326                           
 21327                           ; BSR set to: 1
 21328  0087FA  0101               	movlb	1	; () banked
 21329  0087FC  2BC6               	incf	_TxData& (0+255),f,b
 21330                           
 21331                           ; BSR set to: 1
 21332                           ;miwi_mesh.c: 3290: TxBuffer[TxData++] = 0x00;
 21333  0087FE  0101               	movlb	1	; () banked
 21334  008800  51C6               	movf	_TxData& (0+255),w,b
 21335  008802  0D01               	mullw	1
 21336  008804  0EA6               	movlw	low _TxBuffer
 21337  008806  24F3               	addwf	prodl,w,c
 21338  008808  6ED9               	movwf	fsr2l,c
 21339  00880A  0E02               	movlw	high _TxBuffer
 21340  00880C  20F4               	addwfc	prodh,w,c
 21341  00880E  6EDA               	movwf	fsr2h,c
 21342  008810  0E00               	movlw	0
 21343  008812  6EDF               	movwf	indf2,c
 21344                           
 21345                           ; BSR set to: 1
 21346  008814  0101               	movlb	1	; () banked
 21347  008816  2BC6               	incf	_TxData& (0+255),f,b
 21348                           
 21349                           ; BSR set to: 1
 21350                           ;miwi_mesh.c: 3291: TxBuffer[TxData++] = 0x00;
 21351  008818  0101               	movlb	1	; () banked
 21352  00881A  51C6               	movf	_TxData& (0+255),w,b
 21353  00881C  0D01               	mullw	1
 21354  00881E  0EA6               	movlw	low _TxBuffer
 21355  008820  24F3               	addwf	prodl,w,c
 21356  008822  6ED9               	movwf	fsr2l,c
 21357  008824  0E02               	movlw	high _TxBuffer
 21358  008826  20F4               	addwfc	prodh,w,c
 21359  008828  6EDA               	movwf	fsr2h,c
 21360  00882A  0E00               	movlw	0
 21361  00882C  6EDF               	movwf	indf2,c
 21362                           
 21363                           ; BSR set to: 1
 21364  00882E  0101               	movlb	1	; () banked
 21365  008830  2BC6               	incf	_TxData& (0+255),f,b
 21366                           
 21367                           ; BSR set to: 1
 21368                           ;miwi_mesh.c: 3292: TxBuffer[TxData++] = 0x4D;
 21369  008832  0101               	movlb	1	; () banked
 21370  008834  51C6               	movf	_TxData& (0+255),w,b
 21371  008836  0D01               	mullw	1
 21372  008838  0EA6               	movlw	low _TxBuffer
 21373  00883A  24F3               	addwf	prodl,w,c
 21374  00883C  6ED9               	movwf	fsr2l,c
 21375  00883E  0E02               	movlw	high _TxBuffer
 21376  008840  20F4               	addwfc	prodh,w,c
 21377  008842  6EDA               	movwf	fsr2h,c
 21378  008844  0E4D               	movlw	77
 21379  008846  6EDF               	movwf	indf2,c
 21380                           
 21381                           ; BSR set to: 1
 21382  008848  0101               	movlb	1	; () banked
 21383  00884A  2BC6               	incf	_TxData& (0+255),f,b
 21384                           
 21385                           ; BSR set to: 1
 21386                           ;miwi_mesh.c: 3293: TxBuffer[TxData++] = 0x41;
 21387  00884C  0101               	movlb	1	; () banked
 21388  00884E  51C6               	movf	_TxData& (0+255),w,b
 21389  008850  0D01               	mullw	1
 21390  008852  0EA6               	movlw	low _TxBuffer
 21391  008854  24F3               	addwf	prodl,w,c
 21392  008856  6ED9               	movwf	fsr2l,c
 21393  008858  0E02               	movlw	high _TxBuffer
 21394  00885A  20F4               	addwfc	prodh,w,c
 21395  00885C  6EDA               	movwf	fsr2h,c
 21396  00885E  0E41               	movlw	65
 21397  008860  6EDF               	movwf	indf2,c
 21398                           
 21399                           ; BSR set to: 1
 21400  008862  0101               	movlb	1	; () banked
 21401  008864  2BC6               	incf	_TxData& (0+255),f,b
 21402                           
 21403                           ; BSR set to: 1
 21404                           ;miwi_mesh.c: 3294: TxBuffer[TxData++] = knownCoordinators;
 21405  008866  0101               	movlb	1	; () banked
 21406  008868  51C6               	movf	_TxData& (0+255),w,b
 21407  00886A  0D01               	mullw	1
 21408  00886C  0EA6               	movlw	low _TxBuffer
 21409  00886E  24F3               	addwf	prodl,w,c
 21410  008870  6ED9               	movwf	fsr2l,c
 21411  008872  0E02               	movlw	high _TxBuffer
 21412  008874  20F4               	addwfc	prodh,w,c
 21413  008876  6EDA               	movwf	fsr2h,c
 21414  008878  C1C7  FFDF         	movff	_knownCoordinators,indf2
 21415                           
 21416                           ; BSR set to: 1
 21417  00887C  0101               	movlb	1	; () banked
 21418  00887E  2BC6               	incf	_TxData& (0+255),f,b
 21419                           
 21420                           ; BSR set to: 1
 21421                           ;miwi_mesh.c: 3305: SendMACPacket((0), 0x03);
 21422  008880  0E00               	movlw	0
 21423  008882  0101               	movlb	1	; () banked
 21424  008884  6F39               	movwf	SendMACPacket@Address& (0+255),b
 21425  008886  0E00               	movlw	0
 21426  008888  0101               	movlb	1	; () banked
 21427  00888A  6F3A               	movwf	(SendMACPacket@Address+1)& (0+255),b
 21428  00888C  0E03               	movlw	3
 21429  00888E  0101               	movlb	1	; () banked
 21430  008890  6F3B               	movwf	SendMACPacket@PacketType& (0+255),b
 21431  008892  ECC6  F057         	call	_SendMACPacket	;wreg free
 21432  008896  0012               	return		;funcret
 21433  008898                     __end_of_SendBeacon:
 21434                           	opt stack 0
 21435                           tblptru	equ	0xFF8
 21436                           tblptrh	equ	0xFF7
 21437                           tblptrl	equ	0xFF6
 21438                           tablat	equ	0xFF5
 21439                           prodh	equ	0xFF4
 21440                           prodl	equ	0xFF3
 21441                           intcon	equ	0xFF2
 21442                           intcon2	equ	0xFF1
 21443                           intcon3	equ	0xFF0
 21444                           indf0	equ	0xFEF
 21445                           postinc0	equ	0xFEE
 21446                           plusw0	equ	0xFEB
 21447                           fsr0h	equ	0xFEA
 21448                           fsr0l	equ	0xFE9
 21449                           wreg	equ	0xFE8
 21450                           indf1	equ	0xFE7
 21451                           postinc1	equ	0xFE6
 21452                           postdec1	equ	0xFE5
 21453                           fsr1h	equ	0xFE2
 21454                           fsr1l	equ	0xFE1
 21455                           indf2	equ	0xFDF
 21456                           postinc2	equ	0xFDE
 21457                           postdec2	equ	0xFDD
 21458                           plusw2	equ	0xFDB
 21459                           fsr2h	equ	0xFDA
 21460                           fsr2l	equ	0xFD9
 21461                           status	equ	0xFD8
 21462                           
 21463 ;; *************** function _SendMACPacket *****************
 21464 ;; Defined at:
 21465 ;;		line 2252 in file "src/miwi/miwi_mesh.c"
 21466 ;; Parameters:    Size  Location     Type
 21467 ;;  Address         2   57[BANK1 ] PTR unsigned char 
 21468 ;;		 -> ConnectionTable(576), NULL(0), 
 21469 ;;  PacketType      1   59[BANK1 ] unsigned char 
 21470 ;; Auto vars:     Size  Location     Type
 21471 ;;		None
 21472 ;; Return value:  Size  Location     Type
 21473 ;;                  1    wreg      unsigned char 
 21474 ;; Registers used:
 21475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21476 ;; Tracked objects:
 21477 ;;		On entry : 0/0
 21478 ;;		On exit  : 0/0
 21479 ;;		Unchanged: 0/0
 21480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21481 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21483 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21484 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21485 ;;Total ram usage:        4 bytes
 21486 ;; Hardware stack levels used:    1
 21487 ;; Hardware stack levels required when called:   21
 21488 ;; This function calls:
 21489 ;;		_MiMAC_SendPacket
 21490 ;; This function is called by:
 21491 ;;		_MiWiTasks
 21492 ;;		_RouteMessage
 21493 ;;		_SendBeacon
 21494 ;;		_MiApp_SearchConnection
 21495 ;;		_MiApp_EstablishConnection
 21496 ;; This function uses a non-reentrant model
 21497 ;;
 21498                           
 21499                           	psect	text45
 21500  00AF8C                     __ptext45:
 21501                           	opt stack 0
 21502  00AF8C                     _SendMACPacket:
 21503                           	opt stack 6
 21504                           
 21505                           ;miwi_mesh.c: 2255: MTP.flags.Val = 0;
 21506                           
 21507                           ;incstack = 0
 21508  00AF8C  0E00               	movlw	0
 21509  00AF8E  0101               	movlb	1	; () banked
 21510  00AF90  6FAD               	movwf	_MTP& (0+255),b
 21511                           
 21512                           ; BSR set to: 1
 21513                           ;miwi_mesh.c: 2257: MTP.flags.bits.packetType = PacketType;
 21514  00AF92  0101               	movlb	1	; () banked
 21515  00AF94  51AD               	movf	_MTP& (0+255),w,b
 21516  00AF96  0101               	movlb	1	; () banked
 21517  00AF98  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 21518  00AF9A  0BFC               	andlw	-4
 21519  00AF9C  193B               	xorwf	SendMACPacket@PacketType& (0+255),w,b
 21520  00AF9E  0101               	movlb	1	; () banked
 21521  00AFA0  6FAD               	movwf	_MTP& (0+255),b
 21522                           
 21523                           ; BSR set to: 1
 21524                           ;miwi_mesh.c: 2258: if( Address == (0) )
 21525  00AFA2  0101               	movlb	1	; () banked
 21526  00AFA4  5139               	movf	SendMACPacket@Address& (0+255),w,b
 21527  00AFA6  0101               	movlb	1	; () banked
 21528  00AFA8  113A               	iorwf	(SendMACPacket@Address+1)& (0+255),w,b
 21529  00AFAA  A4D8               	btfss	status,2,c
 21530  00AFAC  D002               	goto	l17072
 21531                           
 21532                           ; BSR set to: 1
 21533                           ;miwi_mesh.c: 2259: {
 21534                           ;miwi_mesh.c: 2260: MTP.flags.bits.broadcast = 1;
 21535  00AFAE  0101               	movlb	1	; () banked
 21536  00AFB0  85AD               	bsf	_MTP& (0+255),2,b
 21537  00AFB2                     l17072:
 21538                           
 21539                           ; BSR set to: 1
 21540                           ;miwi_mesh.c: 2261: }
 21541                           ;miwi_mesh.c: 2262: MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
 21542  00AFB2  0101               	movlb	1	; () banked
 21543  00AFB4  B5AD               	btfsc	_MTP& (0+255),2,b
 21544  00AFB6  D004               	goto	u18610
 21545  00AFB8  0101               	movlb	1	; () banked
 21546  00AFBA  6B3C               	clrf	??_SendMACPacket& (0+255),b
 21547  00AFBC  2B3C               	incf	??_SendMACPacket& (0+255),f,b
 21548  00AFBE  D002               	goto	u18628
 21549  00AFC0                     u18610:
 21550  00AFC0  0101               	movlb	1	; () banked
 21551  00AFC2  6B3C               	clrf	??_SendMACPacket& (0+255),b
 21552  00AFC4                     u18628:
 21553  00AFC4  0101               	movlb	1	; () banked
 21554  00AFC6  3B3C               	swapf	??_SendMACPacket& (0+255),f,b
 21555  00AFC8  473C               	rlncf	??_SendMACPacket& (0+255),f,b
 21556  00AFCA  0101               	movlb	1	; () banked
 21557  00AFCC  51AD               	movf	_MTP& (0+255),w,b
 21558  00AFCE  0101               	movlb	1	; () banked
 21559  00AFD0  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 21560  00AFD2  0BDF               	andlw	-33
 21561  00AFD4  193C               	xorwf	??_SendMACPacket& (0+255),w,b
 21562  00AFD6  0101               	movlb	1	; () banked
 21563  00AFD8  6FAD               	movwf	_MTP& (0+255),b
 21564                           
 21565                           ; BSR set to: 1
 21566                           ;miwi_mesh.c: 2263: MTP.flags.bits.sourcePrsnt = 1;
 21567  00AFDA  0101               	movlb	1	; () banked
 21568  00AFDC  8FAD               	bsf	_MTP& (0+255),7,b
 21569                           
 21570                           ;miwi_mesh.c: 2265: MTP.DestAddress = Address;
 21571  00AFDE  C139  F1AE         	movff	SendMACPacket@Address,_MTP+1
 21572  00AFE2  C13A  F1AF         	movff	SendMACPacket@Address+1,_MTP+2
 21573                           
 21574                           ; BSR set to: 1
 21575                           ;miwi_mesh.c: 2288: return MiMAC_SendPacket(MTP, TxBuffer, TxData);
 21576                           ;	Return value of _SendMACPacket is never used
 21577  00AFE6  C1AD  F12F         	movff	_MTP,MiMAC_SendPacket@transParam
 21578  00AFEA  C1AE  F130         	movff	_MTP+1,MiMAC_SendPacket@transParam+1
 21579  00AFEE  C1AF  F131         	movff	_MTP+2,MiMAC_SendPacket@transParam+2
 21580  00AFF2  0EA6               	movlw	low _TxBuffer
 21581  00AFF4  0101               	movlb	1	; () banked
 21582  00AFF6  6F32               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 21583  00AFF8  0E02               	movlw	high _TxBuffer
 21584  00AFFA  0101               	movlb	1	; () banked
 21585  00AFFC  6F33               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 21586  00AFFE  C1C6  F134         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 21587  00B002  ECA2  F035         	call	_MiMAC_SendPacket	;wreg free
 21588  00B006  0012               	return	
 21589  00B008                     __end_of_SendMACPacket:
 21590                           	opt stack 0
 21591                           tblptru	equ	0xFF8
 21592                           tblptrh	equ	0xFF7
 21593                           tblptrl	equ	0xFF6
 21594                           tablat	equ	0xFF5
 21595                           prodh	equ	0xFF4
 21596                           prodl	equ	0xFF3
 21597                           intcon	equ	0xFF2
 21598                           intcon2	equ	0xFF1
 21599                           intcon3	equ	0xFF0
 21600                           indf0	equ	0xFEF
 21601                           postinc0	equ	0xFEE
 21602                           plusw0	equ	0xFEB
 21603                           fsr0h	equ	0xFEA
 21604                           fsr0l	equ	0xFE9
 21605                           wreg	equ	0xFE8
 21606                           indf1	equ	0xFE7
 21607                           postinc1	equ	0xFE6
 21608                           postdec1	equ	0xFE5
 21609                           fsr1h	equ	0xFE2
 21610                           fsr1l	equ	0xFE1
 21611                           indf2	equ	0xFDF
 21612                           postinc2	equ	0xFDE
 21613                           postdec2	equ	0xFDD
 21614                           plusw2	equ	0xFDB
 21615                           fsr2h	equ	0xFDA
 21616                           fsr2l	equ	0xFD9
 21617                           status	equ	0xFD8
 21618                           
 21619 ;; *************** function _MiMAC_SendPacket *****************
 21620 ;; Defined at:
 21621 ;;		line 727 in file "src/miwi/drv_mrf_miwi_89xa.c"
 21622 ;; Parameters:    Size  Location     Type
 21623 ;;  transParam      3   47[BANK1 ] struct .
 21624 ;;  MACPayload      2   50[BANK1 ] PTR unsigned char 
 21625 ;;		 -> TxBuffer(43), 
 21626 ;;  MACPayloadLe    1   52[BANK1 ] unsigned char 
 21627 ;; Auto vars:     Size  Location     Type
 21628 ;;  headerLen       1   54[BANK1 ] unsigned char 
 21629 ;;  i               1   56[BANK1 ] unsigned char 
 21630 ;;  TxIndex         1   55[BANK1 ] unsigned char 
 21631 ;; Return value:  Size  Location     Type
 21632 ;;                  1    wreg      unsigned char 
 21633 ;; Registers used:
 21634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21635 ;; Tracked objects:
 21636 ;;		On entry : 0/0
 21637 ;;		On exit  : 0/0
 21638 ;;		Unchanged: 0/0
 21639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21640 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21641 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21642 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21643 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21644 ;;Total ram usage:       10 bytes
 21645 ;; Hardware stack levels used:    1
 21646 ;; Hardware stack levels required when called:   20
 21647 ;; This function calls:
 21648 ;;		_CCM_Enc
 21649 ;;		_TxPacket
 21650 ;; This function is called by:
 21651 ;;		_MiWiTasks
 21652 ;;		_RouteMessage
 21653 ;;		_SendMACPacket
 21654 ;;		_MiApp_UnicastAddress
 21655 ;;		_MiApp_BroadcastPacket
 21656 ;;		_MiApp_RemoveConnection
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text46
 21661  006B44                     __ptext46:
 21662                           	opt stack 0
 21663  006B44                     _MiMAC_SendPacket:
 21664                           	opt stack 6
 21665                           
 21666                           ;drv_mrf_miwi_89xa.c: 731: uint8_t i;
 21667                           ;drv_mrf_miwi_89xa.c: 732: uint8_t TxIndex;
 21668                           ;drv_mrf_miwi_89xa.c: 734: if( MACPayloadLen > 32 )
 21669                           
 21670                           ;incstack = 0
 21671  006B44  0E20               	movlw	32
 21672  006B46  0101               	movlb	1	; () banked
 21673  006B48  6534               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 21674  006B4A  D002               	goto	l16984
 21675                           
 21676                           ; BSR set to: 1
 21677                           ;drv_mrf_miwi_89xa.c: 735: {
 21678                           ;drv_mrf_miwi_89xa.c: 736: return 0;
 21679  006B4C  0E00               	movlw	0
 21680                           
 21681                           ; BSR set to: 1
 21682  006B4E  0012               	return	
 21683  006B50                     l16984:
 21684                           
 21685                           ; BSR set to: 1
 21686                           ;drv_mrf_miwi_89xa.c: 737: }
 21687                           ;drv_mrf_miwi_89xa.c: 742: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 21688  006B50  0101               	movlb	1	; () banked
 21689  006B52  B52F               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 21690  006B54  D004               	goto	u18480
 21691  006B56  0101               	movlb	1	; () banked
 21692  006B58  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 21693  006B5A  2B35               	incf	??_MiMAC_SendPacket& (0+255),f,b
 21694  006B5C  D002               	goto	u18498
 21695  006B5E                     u18480:
 21696  006B5E  0101               	movlb	1	; () banked
 21697  006B60  6B35               	clrf	??_MiMAC_SendPacket& (0+255),b
 21698  006B62                     u18498:
 21699  006B62  0101               	movlb	1	; () banked
 21700  006B64  3B35               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 21701  006B66  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 21702  006B68  4735               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 21703  006B6A  0101               	movlb	1	; () banked
 21704  006B6C  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 21705  006B6E  0101               	movlb	1	; () banked
 21706  006B70  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 21707  006B72  0BBF               	andlw	-65
 21708  006B74  1935               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 21709  006B76  0101               	movlb	1	; () banked
 21710  006B78  6F2F               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 21711                           
 21712                           ;drv_mrf_miwi_89xa.c: 749: if( transParam.flags.bits.packetType == 0x01 )
 21713  006B7A  0101               	movlb	1	; () banked
 21714  006B7C  512F               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 21715  006B7E  0B03               	andlw	3
 21716  006B80  06E8               	decf	wreg,f,c
 21717  006B82  A4D8               	btfss	status,2,c
 21718  006B84  D002               	goto	l322
 21719                           
 21720                           ; BSR set to: 1
 21721                           ;drv_mrf_miwi_89xa.c: 750: {
 21722                           ;drv_mrf_miwi_89xa.c: 751: transParam.flags.bits.sourcePrsnt = 1;
 21723  006B86  0101               	movlb	1	; () banked
 21724  006B88  8F2F               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 21725  006B8A                     l322:
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;drv_mrf_miwi_89xa.c: 752: }
 21729                           ;drv_mrf_miwi_89xa.c: 754: MACTxBuffer[0] = transParam.flags.Val;
 21730  006B8A  C12F  F266         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 21731                           
 21732                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[1] = MACSeq++;
 21733  006B8E  C1C0  F267         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 21734                           
 21735                           ; BSR set to: 1
 21736  006B92  0101               	movlb	1	; () banked
 21737  006B94  2BC0               	incf	_MACSeq& (0+255),f,b
 21738                           
 21739                           ; BSR set to: 1
 21740                           ;drv_mrf_miwi_89xa.c: 758: TxIndex = 2;
 21741  006B96  0E02               	movlw	2
 21742  006B98  0101               	movlb	1	; () banked
 21743  006B9A  6F37               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 21744                           
 21745                           ; BSR set to: 1
 21746                           ;drv_mrf_miwi_89xa.c: 760: if( transParam.flags.bits.destPrsnt )
 21747  006B9C  0101               	movlb	1	; () banked
 21748  006B9E  AD2F               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 21749  006BA0  D02B               	goto	l327
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;drv_mrf_miwi_89xa.c: 761: {
 21753                           ;drv_mrf_miwi_89xa.c: 762: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 21754  006BA2  0E00               	movlw	0
 21755  006BA4  0101               	movlb	1	; () banked
 21756  006BA6  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21757  006BA8  D01A               	goto	l17002
 21758  006BAA                     l16996:
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;drv_mrf_miwi_89xa.c: 763: {
 21762                           ;drv_mrf_miwi_89xa.c: 764: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 21763  006BAA  0101               	movlb	1	; () banked
 21764  006BAC  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21765  006BAE  0D01               	mullw	1
 21766  006BB0  50F3               	movf	prodl,w,c
 21767  006BB2  0101               	movlb	1	; () banked
 21768  006BB4  2530               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 21769  006BB6  6ED9               	movwf	fsr2l,c
 21770  006BB8  50F4               	movf	prodh,w,c
 21771  006BBA  0101               	movlb	1	; () banked
 21772  006BBC  2131               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 21773  006BBE  6EDA               	movwf	fsr2h,c
 21774  006BC0  0101               	movlb	1	; () banked
 21775  006BC2  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21776  006BC4  0D01               	mullw	1
 21777  006BC6  0E66               	movlw	low _MACTxBuffer
 21778  006BC8  24F3               	addwf	prodl,w,c
 21779  006BCA  6EE1               	movwf	fsr1l,c
 21780  006BCC  0E02               	movlw	high _MACTxBuffer
 21781  006BCE  20F4               	addwfc	prodh,w,c
 21782  006BD0  6EE2               	movwf	fsr1h,c
 21783  006BD2  CFDF FFE7          	movff	indf2,indf1
 21784                           
 21785                           ; BSR set to: 1
 21786  006BD6  0101               	movlb	1	; () banked
 21787  006BD8  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21788                           
 21789                           ; BSR set to: 1
 21790  006BDA  0101               	movlb	1	; () banked
 21791  006BDC  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21792  006BDE                     l17002:
 21793                           
 21794                           ; BSR set to: 1
 21795  006BDE  0101               	movlb	1	; () banked
 21796  006BE0  31AA               	rrcf	_MACInitParams& (0+255),w,b
 21797  006BE2  32E8               	rrcf	wreg,f,c
 21798  006BE4  32E8               	rrcf	wreg,f,c
 21799  006BE6  0B0F               	andlw	15
 21800  006BE8  0101               	movlb	1	; () banked
 21801  006BEA  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 21802  006BEC  0101               	movlb	1	; () banked
 21803  006BEE  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 21804  006BF0  0101               	movlb	1	; () banked
 21805  006BF2  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21806  006BF4  A0D8               	btfss	status,0,c
 21807  006BF6  D7D9               	goto	l16996
 21808  006BF8                     l327:
 21809                           
 21810                           ; BSR set to: 1
 21811                           ;drv_mrf_miwi_89xa.c: 770: }
 21812                           ;drv_mrf_miwi_89xa.c: 772: if( transParam.flags.bits.sourcePrsnt )
 21813  006BF8  0101               	movlb	1	; () banked
 21814  006BFA  AF2F               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 21815  006BFC  D02B               	goto	l328
 21816                           
 21817                           ; BSR set to: 1
 21818                           ;drv_mrf_miwi_89xa.c: 773: {
 21819                           ;drv_mrf_miwi_89xa.c: 774: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 21820  006BFE  0E00               	movlw	0
 21821  006C00  0101               	movlb	1	; () banked
 21822  006C02  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21823  006C04  D01A               	goto	l17012
 21824  006C06                     l17006:
 21825                           
 21826                           ; BSR set to: 1
 21827                           ;drv_mrf_miwi_89xa.c: 775: {
 21828                           ;drv_mrf_miwi_89xa.c: 776: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 21829  006C06  0101               	movlb	1	; () banked
 21830  006C08  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21831  006C0A  0D01               	mullw	1
 21832  006C0C  50F3               	movf	prodl,w,c
 21833  006C0E  0101               	movlb	1	; () banked
 21834  006C10  25AB               	addwf	(_MACInitParams+1)& (0+255),w,b
 21835  006C12  6ED9               	movwf	fsr2l,c
 21836  006C14  50F4               	movf	prodh,w,c
 21837  006C16  0101               	movlb	1	; () banked
 21838  006C18  21AC               	addwfc	(_MACInitParams+2)& (0+255),w,b
 21839  006C1A  6EDA               	movwf	fsr2h,c
 21840  006C1C  0101               	movlb	1	; () banked
 21841  006C1E  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21842  006C20  0D01               	mullw	1
 21843  006C22  0E66               	movlw	low _MACTxBuffer
 21844  006C24  24F3               	addwf	prodl,w,c
 21845  006C26  6EE1               	movwf	fsr1l,c
 21846  006C28  0E02               	movlw	high _MACTxBuffer
 21847  006C2A  20F4               	addwfc	prodh,w,c
 21848  006C2C  6EE2               	movwf	fsr1h,c
 21849  006C2E  CFDF FFE7          	movff	indf2,indf1
 21850                           
 21851                           ; BSR set to: 1
 21852  006C32  0101               	movlb	1	; () banked
 21853  006C34  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21854                           
 21855                           ; BSR set to: 1
 21856  006C36  0101               	movlb	1	; () banked
 21857  006C38  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21858  006C3A                     l17012:
 21859                           
 21860                           ; BSR set to: 1
 21861  006C3A  0101               	movlb	1	; () banked
 21862  006C3C  31AA               	rrcf	_MACInitParams& (0+255),w,b
 21863  006C3E  32E8               	rrcf	wreg,f,c
 21864  006C40  32E8               	rrcf	wreg,f,c
 21865  006C42  0B0F               	andlw	15
 21866  006C44  0101               	movlb	1	; () banked
 21867  006C46  6F35               	movwf	??_MiMAC_SendPacket& (0+255),b
 21868  006C48  0101               	movlb	1	; () banked
 21869  006C4A  5135               	movf	??_MiMAC_SendPacket& (0+255),w,b
 21870  006C4C  0101               	movlb	1	; () banked
 21871  006C4E  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21872  006C50  A0D8               	btfss	status,0,c
 21873  006C52  D7D9               	goto	l17006
 21874  006C54                     l328:
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;drv_mrf_miwi_89xa.c: 777: }
 21878                           ;drv_mrf_miwi_89xa.c: 779: }
 21879                           ;drv_mrf_miwi_89xa.c: 782: if( transParam.flags.bits.secEn )
 21880  006C54  0101               	movlb	1	; () banked
 21881  006C56  A72F               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 21882  006C58  D071               	goto	l17050
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;drv_mrf_miwi_89xa.c: 783: {
 21886                           ;drv_mrf_miwi_89xa.c: 785: for(i = 0; i < 4; i++)
 21887  006C5A  0E00               	movlw	0
 21888  006C5C  0101               	movlb	1	; () banked
 21889  006C5E  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21890  006C60                     l17016:
 21891                           
 21892                           ; BSR set to: 1
 21893  006C60  0E03               	movlw	3
 21894  006C62  0101               	movlb	1	; () banked
 21895  006C64  6538               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 21896  006C66  D001               	goto	l17020
 21897  006C68  D019               	goto	l17028
 21898  006C6A                     l17020:
 21899                           
 21900                           ; BSR set to: 1
 21901                           ;drv_mrf_miwi_89xa.c: 786: {
 21902                           ;drv_mrf_miwi_89xa.c: 787: MACTxBuffer[TxIndex++] = OutgoingFrameCounter.v[i];
 21903  006C6A  0101               	movlb	1	; () banked
 21904  006C6C  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21905  006C6E  0D01               	mullw	1
 21906  006C70  0EA2               	movlw	low _OutgoingFrameCounter
 21907  006C72  24F3               	addwf	prodl,w,c
 21908  006C74  6ED9               	movwf	fsr2l,c
 21909  006C76  0E01               	movlw	high _OutgoingFrameCounter
 21910  006C78  20F4               	addwfc	prodh,w,c
 21911  006C7A  6EDA               	movwf	fsr2h,c
 21912  006C7C  0101               	movlb	1	; () banked
 21913  006C7E  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21914  006C80  0D01               	mullw	1
 21915  006C82  0E66               	movlw	low _MACTxBuffer
 21916  006C84  24F3               	addwf	prodl,w,c
 21917  006C86  6EE1               	movwf	fsr1l,c
 21918  006C88  0E02               	movlw	high _MACTxBuffer
 21919  006C8A  20F4               	addwfc	prodh,w,c
 21920  006C8C  6EE2               	movwf	fsr1h,c
 21921  006C8E  CFDF FFE7          	movff	indf2,indf1
 21922                           
 21923                           ; BSR set to: 1
 21924  006C92  0101               	movlb	1	; () banked
 21925  006C94  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21926                           
 21927                           ; BSR set to: 1
 21928  006C96  0101               	movlb	1	; () banked
 21929  006C98  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 21930  006C9A  D7E2               	goto	l17016
 21931  006C9C                     l17028:
 21932                           
 21933                           ; BSR set to: 1
 21934                           ;drv_mrf_miwi_89xa.c: 788: }
 21935                           ;drv_mrf_miwi_89xa.c: 789: OutgoingFrameCounter.Val++;
 21936  006C9C  0E01               	movlw	1
 21937  006C9E  0101               	movlb	1	; () banked
 21938  006CA0  27A2               	addwf	_OutgoingFrameCounter& (0+255),f,b
 21939  006CA2  0E00               	movlw	0
 21940  006CA4  23A3               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 21941  006CA6  23A4               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 21942  006CA8  23A5               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 21943                           
 21944                           ; BSR set to: 1
 21945                           ;drv_mrf_miwi_89xa.c: 796: MACTxBuffer[TxIndex++] = 0x00;
 21946  006CAA  0101               	movlb	1	; () banked
 21947  006CAC  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21948  006CAE  0D01               	mullw	1
 21949  006CB0  0E66               	movlw	low _MACTxBuffer
 21950  006CB2  24F3               	addwf	prodl,w,c
 21951  006CB4  6ED9               	movwf	fsr2l,c
 21952  006CB6  0E02               	movlw	high _MACTxBuffer
 21953  006CB8  20F4               	addwfc	prodh,w,c
 21954  006CBA  6EDA               	movwf	fsr2h,c
 21955  006CBC  0E00               	movlw	0
 21956  006CBE  6EDF               	movwf	indf2,c
 21957                           
 21958                           ; BSR set to: 1
 21959  006CC0  0101               	movlb	1	; () banked
 21960  006CC2  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 21961                           
 21962                           ; BSR set to: 1
 21963                           ;drv_mrf_miwi_89xa.c: 798: {
 21964                           ;drv_mrf_miwi_89xa.c: 799: uint8_t headerLen;
 21965                           ;drv_mrf_miwi_89xa.c: 801: headerLen = TxIndex;
 21966  006CC4  C137  F136         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 21967                           
 21968                           ; BSR set to: 1
 21969                           ;drv_mrf_miwi_89xa.c: 803: for(i = 0; i < MACPayloadLen; i++)
 21970  006CC8  0E00               	movlw	0
 21971  006CCA  0101               	movlb	1	; () banked
 21972  006CCC  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 21973  006CCE  D01A               	goto	l17044
 21974  006CD0                     l17038:
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;drv_mrf_miwi_89xa.c: 804: {
 21978                           ;drv_mrf_miwi_89xa.c: 805: MACTxBuffer[TxIndex++] = MACPayload[i];
 21979  006CD0  0101               	movlb	1	; () banked
 21980  006CD2  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 21981  006CD4  0D01               	mullw	1
 21982  006CD6  50F3               	movf	prodl,w,c
 21983  006CD8  0101               	movlb	1	; () banked
 21984  006CDA  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 21985  006CDC  6ED9               	movwf	fsr2l,c
 21986  006CDE  50F4               	movf	prodh,w,c
 21987  006CE0  0101               	movlb	1	; () banked
 21988  006CE2  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 21989  006CE4  6EDA               	movwf	fsr2h,c
 21990  006CE6  0101               	movlb	1	; () banked
 21991  006CE8  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21992  006CEA  0D01               	mullw	1
 21993  006CEC  0E66               	movlw	low _MACTxBuffer
 21994  006CEE  24F3               	addwf	prodl,w,c
 21995  006CF0  6EE1               	movwf	fsr1l,c
 21996  006CF2  0E02               	movlw	high _MACTxBuffer
 21997  006CF4  20F4               	addwfc	prodh,w,c
 21998  006CF6  6EE2               	movwf	fsr1h,c
 21999  006CF8  CFDF FFE7          	movff	indf2,indf1
 22000                           
 22001                           ; BSR set to: 1
 22002  006CFC  0101               	movlb	1	; () banked
 22003  006CFE  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22004                           
 22005                           ; BSR set to: 1
 22006  006D00  0101               	movlb	1	; () banked
 22007  006D02  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22008  006D04                     l17044:
 22009                           
 22010                           ; BSR set to: 1
 22011  006D04  0101               	movlb	1	; () banked
 22012  006D06  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22013  006D08  0101               	movlb	1	; () banked
 22014  006D0A  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22015  006D0C  A0D8               	btfss	status,0,c
 22016  006D0E  D7E0               	goto	l17038
 22017                           
 22018                           ; BSR set to: 1
 22019                           ;drv_mrf_miwi_89xa.c: 806: }
 22020                           ;drv_mrf_miwi_89xa.c: 826: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen, key
      +                          );
 22021                           
 22022                           ; BSR set to: 1
 22023  006D10  0E66               	movlw	low _MACTxBuffer
 22024  006D12  0101               	movlb	1	; () banked
 22025  006D14  6F24               	movwf	CCM_Enc@text& (0+255),b
 22026  006D16  0E02               	movlw	high _MACTxBuffer
 22027  006D18  0101               	movlb	1	; () banked
 22028  006D1A  6F25               	movwf	(CCM_Enc@text+1)& (0+255),b
 22029  006D1C  C136  F126         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 22030  006D20  C134  F127         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 22031  006D24  0EF1               	movlw	low _key
 22032  006D26  0101               	movlb	1	; () banked
 22033  006D28  6F28               	movwf	CCM_Enc@key& (0+255),b
 22034  006D2A  0E02               	movlw	high _key
 22035  006D2C  0101               	movlb	1	; () banked
 22036  006D2E  6F29               	movwf	(CCM_Enc@key+1)& (0+255),b
 22037  006D30  EC4C  F044         	call	_CCM_Enc	;wreg free
 22038                           
 22039                           ;drv_mrf_miwi_89xa.c: 827: TxIndex += 2;
 22040  006D34  0E02               	movlw	2
 22041  006D36  0101               	movlb	1	; () banked
 22042  006D38  2737               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22043                           
 22044                           ;drv_mrf_miwi_89xa.c: 834: }
 22045                           ;drv_mrf_miwi_89xa.c: 835: }
 22046  006D3A  D024               	goto	l17060
 22047  006D3C                     l17050:
 22048                           
 22049                           ; BSR set to: 1
 22050                           ;drv_mrf_miwi_89xa.c: 836: else
 22051                           ;drv_mrf_miwi_89xa.c: 840: for(i = 0; i < MACPayloadLen; i++)
 22052  006D3C  0E00               	movlw	0
 22053  006D3E  0101               	movlb	1	; () banked
 22054  006D40  6F38               	movwf	MiMAC_SendPacket@i& (0+255),b
 22055  006D42  D01A               	goto	l17058
 22056  006D44                     l17052:
 22057                           
 22058                           ; BSR set to: 1
 22059                           ;drv_mrf_miwi_89xa.c: 841: {
 22060                           ;drv_mrf_miwi_89xa.c: 842: MACTxBuffer[TxIndex++] = MACPayload[i];
 22061  006D44  0101               	movlb	1	; () banked
 22062  006D46  5138               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22063  006D48  0D01               	mullw	1
 22064  006D4A  50F3               	movf	prodl,w,c
 22065  006D4C  0101               	movlb	1	; () banked
 22066  006D4E  2532               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 22067  006D50  6ED9               	movwf	fsr2l,c
 22068  006D52  50F4               	movf	prodh,w,c
 22069  006D54  0101               	movlb	1	; () banked
 22070  006D56  2133               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 22071  006D58  6EDA               	movwf	fsr2h,c
 22072  006D5A  0101               	movlb	1	; () banked
 22073  006D5C  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22074  006D5E  0D01               	mullw	1
 22075  006D60  0E66               	movlw	low _MACTxBuffer
 22076  006D62  24F3               	addwf	prodl,w,c
 22077  006D64  6EE1               	movwf	fsr1l,c
 22078  006D66  0E02               	movlw	high _MACTxBuffer
 22079  006D68  20F4               	addwfc	prodh,w,c
 22080  006D6A  6EE2               	movwf	fsr1h,c
 22081  006D6C  CFDF FFE7          	movff	indf2,indf1
 22082                           
 22083                           ; BSR set to: 1
 22084  006D70  0101               	movlb	1	; () banked
 22085  006D72  2B37               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22086                           
 22087                           ; BSR set to: 1
 22088  006D74  0101               	movlb	1	; () banked
 22089  006D76  2B38               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22090  006D78                     l17058:
 22091                           
 22092                           ; BSR set to: 1
 22093  006D78  0101               	movlb	1	; () banked
 22094  006D7A  5134               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22095  006D7C  0101               	movlb	1	; () banked
 22096  006D7E  5D38               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22097  006D80  A0D8               	btfss	status,0,c
 22098  006D82  D7E0               	goto	l17052
 22099  006D84                     l17060:
 22100                           
 22101                           ; BSR set to: 1
 22102                           ;drv_mrf_miwi_89xa.c: 843: }
 22103                           ;drv_mrf_miwi_89xa.c: 845: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 22104  006D84  0E00               	movlw	0
 22105  006D86  B3AA               	btfsc	_MACInitParams& (0+255),1,b
 22106  006D88  0E01               	movlw	1
 22107  006D8A  0101               	movlb	1	; () banked
 22108  006D8C  6F0A               	movwf	TxPacket@CCA& (0+255),b
 22109  006D8E  0101               	movlb	1	; () banked
 22110  006D90  5137               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22111  006D92  EC6B  F03B         	call	_TxPacket
 22112  006D96  0012               	return	
 22113  006D98                     __end_of_MiMAC_SendPacket:
 22114                           	opt stack 0
 22115                           tblptru	equ	0xFF8
 22116                           tblptrh	equ	0xFF7
 22117                           tblptrl	equ	0xFF6
 22118                           tablat	equ	0xFF5
 22119                           prodh	equ	0xFF4
 22120                           prodl	equ	0xFF3
 22121                           intcon	equ	0xFF2
 22122                           intcon2	equ	0xFF1
 22123                           intcon3	equ	0xFF0
 22124                           indf0	equ	0xFEF
 22125                           postinc0	equ	0xFEE
 22126                           plusw0	equ	0xFEB
 22127                           fsr0h	equ	0xFEA
 22128                           fsr0l	equ	0xFE9
 22129                           wreg	equ	0xFE8
 22130                           indf1	equ	0xFE7
 22131                           postinc1	equ	0xFE6
 22132                           postdec1	equ	0xFE5
 22133                           fsr1h	equ	0xFE2
 22134                           fsr1l	equ	0xFE1
 22135                           indf2	equ	0xFDF
 22136                           postinc2	equ	0xFDE
 22137                           postdec2	equ	0xFDD
 22138                           plusw2	equ	0xFDB
 22139                           fsr2h	equ	0xFDA
 22140                           fsr2l	equ	0xFD9
 22141                           status	equ	0xFD8
 22142                           
 22143 ;; *************** function _TxPacket *****************
 22144 ;; Defined at:
 22145 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22146 ;; Parameters:    Size  Location     Type
 22147 ;;  TxPacketLen     1    wreg     unsigned char 
 22148 ;;  CCA             1   10[BANK1 ] unsigned char 
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;  TxPacketLen     1   31[BANK1 ] unsigned char 
 22151 ;;  allowedTxFai    1   29[BANK1 ] unsigned char 
 22152 ;;  t2              4   23[BANK1 ] struct _MIWI_TICK
 22153 ;;  t1              4   19[BANK1 ] struct _MIWI_TICK
 22154 ;;  rssival         1   33[BANK1 ] unsigned char 
 22155 ;;  i               1   32[BANK1 ] unsigned char 
 22156 ;;  status          1   30[BANK1 ] unsigned char 
 22157 ;;  reTry           1   28[BANK1 ] unsigned char 
 22158 ;;  CCARetries      1   27[BANK1 ] unsigned char 
 22159 ;; Return value:  Size  Location     Type
 22160 ;;                  1    wreg      unsigned char 
 22161 ;; Registers used:
 22162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22163 ;; Tracked objects:
 22164 ;;		On entry : 0/0
 22165 ;;		On exit  : 0/0
 22166 ;;		Unchanged: 0/0
 22167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22168 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22169 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22170 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22171 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22172 ;;Total ram usage:       24 bytes
 22173 ;; Hardware stack levels used:    1
 22174 ;; Hardware stack levels required when called:   19
 22175 ;; This function calls:
 22176 ;;		_MiWi_TickGet
 22177 ;;		_RegisterRead
 22178 ;;		_RegisterSet
 22179 ;;		_SetRFMode
 22180 ;;		_WriteFIFO
 22181 ;; This function is called by:
 22182 ;;		_MiMAC_SendPacket
 22183 ;; This function uses a non-reentrant model
 22184 ;;
 22185                           
 22186                           	psect	text47
 22187  0076D6                     __ptext47:
 22188                           	opt stack 0
 22189  0076D6                     _TxPacket:
 22190                           	opt stack 6
 22191                           
 22192                           ;incstack = 0
 22193                           ;TxPacket@TxPacketLen stored from wreg
 22194  0076D6  0101               	movlb	1	; () banked
 22195  0076D8  6F1F               	movwf	TxPacket@TxPacketLen& (0+255),b
 22196                           
 22197                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 22198                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 22199                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 22200                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 22201                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 22202                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 22203  0076DA  0E03               	movlw	3
 22204  0076DC  0101               	movlb	1	; () banked
 22205  0076DE  6F1C               	movwf	TxPacket@reTry& (0+255),b
 22206                           
 22207                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 22208  0076E0  D0C3               	goto	l16940
 22209  0076E2                     l16872:
 22210                           
 22211                           ; BSR set to: 1
 22212                           ;drv_mrf_miwi_89xa.c: 305: {
 22213                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 22214                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 22215  0076E2  0E00               	movlw	0
 22216  0076E4  0101               	movlb	1	; () banked
 22217  0076E6  6F1D               	movwf	TxPacket@allowedTxFailure& (0+255),b
 22218  0076E8                     l262:
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 22222  0076E8  0E00               	movlw	0
 22223  0076EA  0100               	movlb	0	; () banked
 22224  0076EC  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 22225                           
 22226                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 22227  0076EE  0E00               	movlw	0
 22228  0076F0  0101               	movlb	1	; () banked
 22229  0076F2  6F1B               	movwf	TxPacket@CCARetries& (0+255),b
 22230                           
 22231                           ; BSR set to: 1
 22232                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 22233  0076F4  0101               	movlb	1	; () banked
 22234  0076F6  510A               	movf	TxPacket@CCA& (0+255),w,b
 22235  0076F8  0101               	movlb	1	; () banked
 22236  0076FA  B4D8               	btfsc	status,2,c
 22237  0076FC  D019               	goto	l263
 22238  0076FE                     l16876:
 22239                           
 22240                           ; BSR set to: 1
 22241                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 22242  0076FE  0E28               	movlw	40
 22243  007700  EC80  F05A         	call	_RegisterRead
 22244  007704  0101               	movlb	1	; () banked
 22245  007706  6F21               	movwf	TxPacket@rssival& (0+255),b
 22246                           
 22247                           ; BSR set to: 1
 22248                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 22249  007708  0101               	movlb	1	; () banked
 22250  00770A  90D8               	bcf	status,0,c
 22251  00770C  3121               	rrcf	TxPacket@rssival& (0+255),w,b
 22252  00770E  0101               	movlb	1	; () banked
 22253  007710  6F21               	movwf	TxPacket@rssival& (0+255),b
 22254                           
 22255                           ; BSR set to: 1
 22256                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 22257  007712  0E41               	movlw	65
 22258  007714  0101               	movlb	1	; () banked
 22259  007716  6521               	cpfsgt	TxPacket@rssival& (0+255),b
 22260  007718  D00B               	goto	l263
 22261                           
 22262                           ; BSR set to: 1
 22263                           ;drv_mrf_miwi_89xa.c: 326: {
 22264                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 22265  00771A  0101               	movlb	1	; () banked
 22266  00771C  2B1B               	incf	TxPacket@CCARetries& (0+255),f,b
 22267  00771E  051B               	decf	TxPacket@CCARetries& (0+255),w,b
 22268  007720  0101               	movlb	1	; () banked
 22269  007722  6F0B               	movwf	??_TxPacket& (0+255),b
 22270  007724  0E04               	movlw	4
 22271  007726  0101               	movlb	1	; () banked
 22272  007728  650B               	cpfsgt	??_TxPacket& (0+255),b
 22273  00772A  D7E9               	goto	l16876
 22274                           
 22275                           ; BSR set to: 1
 22276                           ;drv_mrf_miwi_89xa.c: 328: {
 22277                           ;drv_mrf_miwi_89xa.c: 329: return 0;
 22278  00772C  0E00               	movlw	0
 22279                           
 22280                           ; BSR set to: 1
 22281  00772E  0012               	return	
 22282  007730                     l263:
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;drv_mrf_miwi_89xa.c: 333: }
 22286                           ;drv_mrf_miwi_89xa.c: 334: }
 22287                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 22288  007730  98F2               	bcf	intcon,4,c	;volatile
 22289                           
 22290                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 22291  007732  96F0               	bcf	intcon3,3,c	;volatile
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 22295  007734  0E20               	movlw	32
 22296  007736  ECC6  F055         	call	_SetRFMode
 22297                           
 22298                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 22299  00773A  0E1A               	movlw	26
 22300  00773C  0101               	movlb	1	; () banked
 22301  00773E  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 22302  007740  0EC9               	movlw	201
 22303  007742  6F02               	movwf	RegisterSet@setting& (0+255),b
 22304  007744  EC01  F05B         	call	_RegisterSet	;wreg free
 22305                           
 22306                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 22307  007748  0101               	movlb	1	; () banked
 22308  00774A  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 22309  00774C  EC8C  F05B         	call	_WriteFIFO
 22310                           
 22311                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 22312  007750  0E00               	movlw	0
 22313  007752  0101               	movlb	1	; () banked
 22314  007754  6F20               	movwf	TxPacket@i& (0+255),b
 22315  007756  D00E               	goto	l16900
 22316  007758                     l16896:
 22317                           
 22318                           ; BSR set to: 1
 22319                           ;drv_mrf_miwi_89xa.c: 346: {
 22320                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 22321  007758  0101               	movlb	1	; () banked
 22322  00775A  5120               	movf	TxPacket@i& (0+255),w,b
 22323  00775C  0D01               	mullw	1
 22324  00775E  0E66               	movlw	low _MACTxBuffer
 22325  007760  24F3               	addwf	prodl,w,c
 22326  007762  6ED9               	movwf	fsr2l,c
 22327  007764  0E02               	movlw	high _MACTxBuffer
 22328  007766  20F4               	addwfc	prodh,w,c
 22329  007768  6EDA               	movwf	fsr2h,c
 22330  00776A  50DF               	movf	indf2,w,c
 22331  00776C  EC8C  F05B         	call	_WriteFIFO
 22332  007770  0101               	movlb	1	; () banked
 22333  007772  2B20               	incf	TxPacket@i& (0+255),f,b
 22334  007774                     l16900:
 22335                           
 22336                           ; BSR set to: 1
 22337  007774  0101               	movlb	1	; () banked
 22338  007776  511F               	movf	TxPacket@TxPacketLen& (0+255),w,b
 22339  007778  0101               	movlb	1	; () banked
 22340  00777A  5D20               	subwf	TxPacket@i& (0+255),w,b
 22341  00777C  A0D8               	btfss	status,0,c
 22342  00777E  D7EC               	goto	l16896
 22343                           
 22344                           ; BSR set to: 1
 22345                           ;drv_mrf_miwi_89xa.c: 348: }
 22346                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 22347                           
 22348                           ; BSR set to: 1
 22349  007780  0E80               	movlw	128
 22350  007782  ECC6  F055         	call	_SetRFMode
 22351                           
 22352                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 22353  007786  88F2               	bsf	intcon,4,c	;volatile
 22354                           
 22355                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 22356  007788  86F0               	bsf	intcon3,3,c	;volatile
 22357  00778A                     l16908:
 22358  00778A  0100               	movlb	0	; () banked
 22359  00778C  5199               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 22360  00778E  B4D8               	btfsc	status,2,c
 22361                           
 22362                           ; BSR set to: 0
 22363  007790  B0F0               	btfsc	intcon3,0,c	;volatile
 22364  007792  D001               	goto	l16912
 22365  007794  D7FA               	goto	l16908
 22366  007796                     l16912:
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;drv_mrf_miwi_89xa.c: 357: };
 22370                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 22371  007796  0E00               	movlw	0
 22372  007798  0100               	movlb	0	; () banked
 22373  00779A  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 22374                           
 22375                           ; BSR set to: 0
 22376                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 22377  00779C  0E20               	movlw	32
 22378  00779E  ECC6  F055         	call	_SetRFMode
 22379                           
 22380                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 22381  0077A2  0E60               	movlw	96
 22382  0077A4  ECC6  F055         	call	_SetRFMode
 22383                           
 22384                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 22385  0077A8  0102               	movlb	2	; () banked
 22386  0077AA  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 22387  0077AC  D05B               	goto	l16938
 22388                           
 22389                           ; BSR set to: 2
 22390                           ;drv_mrf_miwi_89xa.c: 367: {
 22391                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 22392  0077AE  C267  F09D         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 22393                           
 22394                           ; BSR set to: 2
 22395                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 22396  0077B2  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 22397  0077B6  C100  F113         	movff	?_MiWi_TickGet,TxPacket@t1
 22398  0077BA  C101  F114         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 22399  0077BE  C102  F115         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 22400  0077C2  C103  F116         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 22401  0077C6                     l16924:
 22402                           
 22403                           ;drv_mrf_miwi_89xa.c: 371: {
 22404                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 22405  0077C6  0100               	movlb	0	; () banked
 22406  0077C8  519F               	movf	_hasAck& (0+255),w,b	;volatile
 22407  0077CA  A4D8               	btfss	status,2,c
 22408  0077CC  D04B               	goto	l16938
 22409                           
 22410                           ;drv_mrf_miwi_89xa.c: 376: }
 22411                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 22412                           
 22413                           ; BSR set to: 1
 22414                           
 22415                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 22416                           
 22417                           ; BSR set to: 0
 22418                           ;drv_mrf_miwi_89xa.c: 373: {
 22419                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 22420  0077CE  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 22421  0077D2  C100  F117         	movff	?_MiWi_TickGet,TxPacket@t2
 22422  0077D6  C101  F118         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 22423  0077DA  C102  F119         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 22424  0077DE  C103  F11A         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 22425                           
 22426                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 22427  0077E2  C113  F10B         	movff	TxPacket@t1,??_TxPacket
 22428  0077E6  C114  F10C         	movff	TxPacket@t1+1,??_TxPacket+1
 22429  0077EA  C115  F10D         	movff	TxPacket@t1+2,??_TxPacket+2
 22430  0077EE  C116  F10E         	movff	TxPacket@t1+3,??_TxPacket+3
 22431  0077F2  0101               	movlb	1	; () banked
 22432  0077F4  1F0B               	comf	??_TxPacket& (0+255),f,b
 22433  0077F6  1F0C               	comf	(??_TxPacket+1)& (0+255),f,b
 22434  0077F8  1F0D               	comf	(??_TxPacket+2)& (0+255),f,b
 22435  0077FA  1F0E               	comf	(??_TxPacket+3)& (0+255),f,b
 22436  0077FC  2B0B               	incf	??_TxPacket& (0+255),f,b
 22437  0077FE  0E00               	movlw	0
 22438  007800  230C               	addwfc	(??_TxPacket+1)& (0+255),f,b
 22439  007802  230D               	addwfc	(??_TxPacket+2)& (0+255),f,b
 22440  007804  230E               	addwfc	(??_TxPacket+3)& (0+255),f,b
 22441  007806  0101               	movlb	1	; () banked
 22442  007808  5117               	movf	TxPacket@t2& (0+255),w,b
 22443  00780A  0101               	movlb	1	; () banked
 22444  00780C  250B               	addwf	??_TxPacket& (0+255),w,b
 22445  00780E  0101               	movlb	1	; () banked
 22446  007810  6F0F               	movwf	(??_TxPacket+4)& (0+255),b
 22447  007812  0101               	movlb	1	; () banked
 22448  007814  5118               	movf	(TxPacket@t2+1)& (0+255),w,b
 22449  007816  0101               	movlb	1	; () banked
 22450  007818  210C               	addwfc	(??_TxPacket+1)& (0+255),w,b
 22451  00781A  0101               	movlb	1	; () banked
 22452  00781C  6F10               	movwf	(??_TxPacket+5)& (0+255),b
 22453  00781E  0101               	movlb	1	; () banked
 22454  007820  5119               	movf	(TxPacket@t2+2)& (0+255),w,b
 22455  007822  0101               	movlb	1	; () banked
 22456  007824  210D               	addwfc	(??_TxPacket+2)& (0+255),w,b
 22457  007826  0101               	movlb	1	; () banked
 22458  007828  6F11               	movwf	(??_TxPacket+6)& (0+255),b
 22459  00782A  0101               	movlb	1	; () banked
 22460  00782C  511A               	movf	(TxPacket@t2+3)& (0+255),w,b
 22461  00782E  0101               	movlb	1	; () banked
 22462  007830  210E               	addwfc	(??_TxPacket+3)& (0+255),w,b
 22463  007832  0101               	movlb	1	; () banked
 22464  007834  6F12               	movwf	(??_TxPacket+7)& (0+255),b
 22465  007836  0101               	movlb	1	; () banked
 22466  007838  5112               	movf	(??_TxPacket+7)& (0+255),w,b
 22467  00783A  0101               	movlb	1	; () banked
 22468  00783C  1111               	iorwf	(??_TxPacket+6)& (0+255),w,b
 22469  00783E  E108               	bnz	l16934
 22470  007840  0EA9               	movlw	169
 22471  007842  0101               	movlb	1	; () banked
 22472  007844  5D0F               	subwf	(??_TxPacket+4)& (0+255),w,b
 22473  007846  0E61               	movlw	97
 22474  007848  0101               	movlb	1	; () banked
 22475  00784A  5910               	subwfb	(??_TxPacket+5)& (0+255),w,b
 22476  00784C  A0D8               	btfss	status,0,c
 22477  00784E  D7BB               	goto	l16924
 22478  007850                     l16934:
 22479                           
 22480                           ; BSR set to: 1
 22481                           ;drv_mrf_miwi_89xa.c: 381: }
 22482                           ;drv_mrf_miwi_89xa.c: 382: }
 22483                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 22484  007850  0101               	movlb	1	; () banked
 22485  007852  2B1D               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 22486  007854  051D               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 22487  007856  0101               	movlb	1	; () banked
 22488  007858  6F0B               	movwf	??_TxPacket& (0+255),b
 22489  00785A  0E04               	movlw	4
 22490  00785C  0101               	movlb	1	; () banked
 22491  00785E  610B               	cpfslt	??_TxPacket& (0+255),b
 22492  007860  D003               	goto	l16940
 22493  007862  D742               	goto	l262
 22494  007864                     l16938:
 22495                           
 22496                           ;drv_mrf_miwi_89xa.c: 388: else
 22497                           ;drv_mrf_miwi_89xa.c: 390: {
 22498                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 22499  007864  0E01               	movlw	1
 22500  007866  D007               	goto	L8
 22501  007868                     l16940:
 22502                           
 22503                           ; BSR set to: 1
 22504  007868  0101               	movlb	1	; () banked
 22505  00786A  071C               	decf	TxPacket@reTry& (0+255),f,b
 22506  00786C  0101               	movlb	1	; () banked
 22507  00786E  291C               	incf	TxPacket@reTry& (0+255),w,b
 22508  007870  A4D8               	btfss	status,2,c
 22509  007872  D737               	goto	l16872
 22510                           
 22511                           ; BSR set to: 1
 22512                           ;drv_mrf_miwi_89xa.c: 393: }
 22513                           ;drv_mrf_miwi_89xa.c: 394: }
 22514                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 22515                           
 22516                           ; BSR set to: 1
 22517  007874  0E00               	movlw	0
 22518  007876                     L8:
 22519  007876  0101               	movlb	1	; () banked
 22520  007878  6F1E               	movwf	TxPacket@status& (0+255),b
 22521                           
 22522                           ; BSR set to: 1
 22523                           ;drv_mrf_miwi_89xa.c: 398: return status;
 22524                           
 22525                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 22526  00787A  0101               	movlb	1	; () banked
 22527  00787C  511E               	movf	TxPacket@status& (0+255),w,b
 22528  00787E  0012               	return	
 22529  007880                     __end_of_TxPacket:
 22530                           	opt stack 0
 22531                           tblptru	equ	0xFF8
 22532                           tblptrh	equ	0xFF7
 22533                           tblptrl	equ	0xFF6
 22534                           tablat	equ	0xFF5
 22535                           prodh	equ	0xFF4
 22536                           prodl	equ	0xFF3
 22537                           intcon	equ	0xFF2
 22538                           intcon2	equ	0xFF1
 22539                           intcon3	equ	0xFF0
 22540                           indf0	equ	0xFEF
 22541                           postinc0	equ	0xFEE
 22542                           plusw0	equ	0xFEB
 22543                           fsr0h	equ	0xFEA
 22544                           fsr0l	equ	0xFE9
 22545                           wreg	equ	0xFE8
 22546                           indf1	equ	0xFE7
 22547                           postinc1	equ	0xFE6
 22548                           postdec1	equ	0xFE5
 22549                           fsr1h	equ	0xFE2
 22550                           fsr1l	equ	0xFE1
 22551                           indf2	equ	0xFDF
 22552                           postinc2	equ	0xFDE
 22553                           postdec2	equ	0xFDD
 22554                           plusw2	equ	0xFDB
 22555                           fsr2h	equ	0xFDA
 22556                           fsr2l	equ	0xFD9
 22557                           status	equ	0xFD8
 22558                           
 22559 ;; *************** function _WriteFIFO *****************
 22560 ;; Defined at:
 22561 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22562 ;; Parameters:    Size  Location     Type
 22563 ;;  Data            1    wreg     unsigned char 
 22564 ;; Auto vars:     Size  Location     Type
 22565 ;;  Data            1    2[BANK1 ] unsigned char 
 22566 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 22567 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 22568 ;; Return value:  Size  Location     Type
 22569 ;;		None               void
 22570 ;; Registers used:
 22571 ;;		wreg, status,2, cstack
 22572 ;; Tracked objects:
 22573 ;;		On entry : 0/0
 22574 ;;		On exit  : 0/0
 22575 ;;		Unchanged: 0/0
 22576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22578 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22580 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22581 ;;Total ram usage:        3 bytes
 22582 ;; Hardware stack levels used:    1
 22583 ;; Hardware stack levels required when called:   17
 22584 ;; This function calls:
 22585 ;;		_SPIPut
 22586 ;; This function is called by:
 22587 ;;		_TxPacket
 22588 ;; This function uses a non-reentrant model
 22589 ;;
 22590                           
 22591                           	psect	text48
 22592  00B718                     __ptext48:
 22593                           	opt stack 0
 22594  00B718                     _WriteFIFO:
 22595                           	opt stack 7
 22596                           
 22597                           ; BSR set to: 1
 22598                           ;incstack = 0
 22599                           ;WriteFIFO@Data stored from wreg
 22600  00B718  0101               	movlb	1	; () banked
 22601  00B71A  6F02               	movwf	WriteFIFO@Data& (0+255),b
 22602                           
 22603                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 22604  00B71C  0E00               	movlw	0
 22605  00B71E  B6F0               	btfsc	intcon3,3,c	;volatile
 22606  00B720  0E01               	movlw	1
 22607  00B722  0101               	movlb	1	; () banked
 22608  00B724  6F03               	movwf	WriteFIFO@IRQ1select& (0+255),b
 22609                           
 22610                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 22611  00B726  0E00               	movlw	0
 22612  00B728  B8F2               	btfsc	intcon,4,c	;volatile
 22613  00B72A  0E01               	movlw	1
 22614  00B72C  0101               	movlb	1	; () banked
 22615  00B72E  6F04               	movwf	WriteFIFO@IRQ0select& (0+255),b
 22616                           
 22617                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 22618  00B730  98F2               	bcf	intcon,4,c	;volatile
 22619                           
 22620                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 22621  00B732  96F0               	bcf	intcon3,3,c	;volatile
 22622                           
 22623                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 22624  00B734  9C8B               	bcf	3979,6,c	;volatile
 22625                           
 22626                           ; BSR set to: 1
 22627                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 22628  00B736  0101               	movlb	1	; () banked
 22629  00B738  5102               	movf	WriteFIFO@Data& (0+255),w,b
 22630  00B73A  EC7A  F05D         	call	_SPIPut
 22631                           
 22632                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 22633  00B73E  8C8B               	bsf	3979,6,c	;volatile
 22634                           
 22635                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 22636  00B740  0101               	movlb	1	; () banked
 22637  00B742  B103               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 22638  00B744  D002               	bra	u18175
 22639  00B746  96F0               	bcf	intcon3,3,c	;volatile
 22640  00B748  D001               	bra	u18176
 22641  00B74A                     u18175:
 22642  00B74A  86F0               	bsf	intcon3,3,c	;volatile
 22643  00B74C                     u18176:
 22644                           
 22645                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 22646  00B74C  0101               	movlb	1	; () banked
 22647  00B74E  B104               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 22648  00B750  D002               	bra	u18185
 22649  00B752  98F2               	bcf	intcon,4,c	;volatile
 22650  00B754  D001               	bra	u18186
 22651  00B756                     u18185:
 22652  00B756  88F2               	bsf	intcon,4,c	;volatile
 22653  00B758                     u18186:
 22654  00B758  0012               	return		;funcret
 22655  00B75A                     __end_of_WriteFIFO:
 22656                           	opt stack 0
 22657                           tblptru	equ	0xFF8
 22658                           tblptrh	equ	0xFF7
 22659                           tblptrl	equ	0xFF6
 22660                           tablat	equ	0xFF5
 22661                           prodh	equ	0xFF4
 22662                           prodl	equ	0xFF3
 22663                           intcon	equ	0xFF2
 22664                           intcon2	equ	0xFF1
 22665                           intcon3	equ	0xFF0
 22666                           indf0	equ	0xFEF
 22667                           postinc0	equ	0xFEE
 22668                           plusw0	equ	0xFEB
 22669                           fsr0h	equ	0xFEA
 22670                           fsr0l	equ	0xFE9
 22671                           wreg	equ	0xFE8
 22672                           indf1	equ	0xFE7
 22673                           postinc1	equ	0xFE6
 22674                           postdec1	equ	0xFE5
 22675                           fsr1h	equ	0xFE2
 22676                           fsr1l	equ	0xFE1
 22677                           indf2	equ	0xFDF
 22678                           postinc2	equ	0xFDE
 22679                           postdec2	equ	0xFDD
 22680                           plusw2	equ	0xFDB
 22681                           fsr2h	equ	0xFDA
 22682                           fsr2l	equ	0xFD9
 22683                           status	equ	0xFD8
 22684                           
 22685 ;; *************** function _CCM_Enc *****************
 22686 ;; Defined at:
 22687 ;;		line 239 in file "src/miwi/drv_mrf_miwi_security.c"
 22688 ;; Parameters:    Size  Location     Type
 22689 ;;  text            2   36[BANK1 ] PTR unsigned char 
 22690 ;;		 -> MACTxBuffer(64), 
 22691 ;;  headerLen       1   38[BANK1 ] unsigned char 
 22692 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 22693 ;;  key             2   40[BANK1 ] PTR unsigned char 
 22694 ;;		 -> key(8), 
 22695 ;; Auto vars:     Size  Location     Type
 22696 ;;  i               1   46[BANK1 ] unsigned char 
 22697 ;; Return value:  Size  Location     Type
 22698 ;;		None               void
 22699 ;; Registers used:
 22700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22701 ;; Tracked objects:
 22702 ;;		On entry : 0/0
 22703 ;;		On exit  : 0/0
 22704 ;;		Unchanged: 0/0
 22705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22706 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22707 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22708 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22709 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22710 ;;Total ram usage:       11 bytes
 22711 ;; Hardware stack levels used:    1
 22712 ;; Hardware stack levels required when called:   18
 22713 ;; This function calls:
 22714 ;;		_CBC_MAC
 22715 ;;		_CTR
 22716 ;; This function is called by:
 22717 ;;		_MiMAC_SendPacket
 22718 ;; This function uses a non-reentrant model
 22719 ;;
 22720                           
 22721                           	psect	text49
 22722  008898                     __ptext49:
 22723                           	opt stack 0
 22724  008898                     _CCM_Enc:
 22725                           	opt stack 7
 22726                           
 22727                           ;drv_mrf_miwi_security.c: 244: uint8_t i;
 22728                           ;drv_mrf_miwi_security.c: 251: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
 22729                           
 22730                           ;incstack = 0
 22731  008898  C124  F117         	movff	CCM_Enc@text,CBC_MAC@text
 22732  00889C  C125  F118         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 22733  0088A0  0101               	movlb	1	; () banked
 22734  0088A2  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22735  0088A4  0101               	movlb	1	; () banked
 22736  0088A6  2527               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 22737  0088A8  0101               	movlb	1	; () banked
 22738  0088AA  6F19               	movwf	CBC_MAC@len& (0+255),b
 22739  0088AC  C128  F11A         	movff	CCM_Enc@key,CBC_MAC@key
 22740  0088B0  C129  F11B         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 22741  0088B4  0EEC               	movlw	low _tmpBlock
 22742  0088B6  0101               	movlb	1	; () banked
 22743  0088B8  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 22744  0088BA  0E01               	movlw	high _tmpBlock
 22745  0088BC  0101               	movlb	1	; () banked
 22746  0088BE  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 22747  0088C0  ECCB  F048         	call	_CBC_MAC	;wreg free
 22748                           
 22749                           ;drv_mrf_miwi_security.c: 253: for(i = 0; i < 4; i++)
 22750  0088C4  0E00               	movlw	0
 22751  0088C6  0101               	movlb	1	; () banked
 22752  0088C8  6F2E               	movwf	CCM_Enc@i& (0+255),b
 22753  0088CA                     l16950:
 22754                           
 22755                           ; BSR set to: 1
 22756  0088CA  0E03               	movlw	3
 22757  0088CC  0101               	movlb	1	; () banked
 22758  0088CE  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 22759  0088D0  D001               	goto	l16954
 22760  0088D2  D028               	goto	l16960
 22761  0088D4                     l16954:
 22762                           
 22763                           ; BSR set to: 1
 22764                           ;drv_mrf_miwi_security.c: 254: {
 22765                           ;drv_mrf_miwi_security.c: 255: text[headerLen + payloadLen + i] = tmpBlock[i];
 22766  0088D4  0101               	movlb	1	; () banked
 22767  0088D6  512E               	movf	CCM_Enc@i& (0+255),w,b
 22768  0088D8  0D01               	mullw	1
 22769  0088DA  0EEC               	movlw	low _tmpBlock
 22770  0088DC  24F3               	addwf	prodl,w,c
 22771  0088DE  6ED9               	movwf	fsr2l,c
 22772  0088E0  0E01               	movlw	high _tmpBlock
 22773  0088E2  20F4               	addwfc	prodh,w,c
 22774  0088E4  6EDA               	movwf	fsr2h,c
 22775  0088E6  0101               	movlb	1	; () banked
 22776  0088E8  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 22777  0088EA  C126  F12A         	movff	CCM_Enc@headerLen,??_CCM_Enc
 22778  0088EE  0101               	movlb	1	; () banked
 22779  0088F0  6B2B               	clrf	(??_CCM_Enc+1)& (0+255),b
 22780  0088F2  0101               	movlb	1	; () banked
 22781  0088F4  272A               	addwf	??_CCM_Enc& (0+255),f,b
 22782  0088F6  0E00               	movlw	0
 22783  0088F8  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 22784  0088FA  0101               	movlb	1	; () banked
 22785  0088FC  512E               	movf	CCM_Enc@i& (0+255),w,b
 22786  0088FE  0101               	movlb	1	; () banked
 22787  008900  272A               	addwf	??_CCM_Enc& (0+255),f,b
 22788  008902  0E00               	movlw	0
 22789  008904  232B               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 22790  008906  0101               	movlb	1	; () banked
 22791  008908  512A               	movf	??_CCM_Enc& (0+255),w,b
 22792  00890A  0101               	movlb	1	; () banked
 22793  00890C  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22794  00890E  6EE1               	movwf	fsr1l,c
 22795  008910  0101               	movlb	1	; () banked
 22796  008912  512B               	movf	(??_CCM_Enc+1)& (0+255),w,b
 22797  008914  0101               	movlb	1	; () banked
 22798  008916  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22799  008918  6EE2               	movwf	fsr1h,c
 22800  00891A  CFDF FFE7          	movff	indf2,indf1
 22801                           
 22802                           ; BSR set to: 1
 22803  00891E  0101               	movlb	1	; () banked
 22804  008920  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 22805  008922  D7D3               	goto	l16950
 22806  008924                     l16960:
 22807                           
 22808                           ; BSR set to: 1
 22809                           ;drv_mrf_miwi_security.c: 256: }
 22810                           ;drv_mrf_miwi_security.c: 258: for(i = 0; i < 4-1; i++)
 22811  008924  0E00               	movlw	0
 22812  008926  0101               	movlb	1	; () banked
 22813  008928  6F2E               	movwf	CCM_Enc@i& (0+255),b
 22814  00892A                     l16962:
 22815                           
 22816                           ; BSR set to: 1
 22817  00892A  0E02               	movlw	2
 22818  00892C  0101               	movlb	1	; () banked
 22819  00892E  652E               	cpfsgt	CCM_Enc@i& (0+255),b
 22820  008930  D001               	goto	l16966
 22821  008932  D02D               	goto	l16976
 22822  008934                     l16966:
 22823                           
 22824                           ; BSR set to: 1
 22825                           ;drv_mrf_miwi_security.c: 259: {
 22826                           ;drv_mrf_miwi_security.c: 260: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 22827  008934  0101               	movlb	1	; () banked
 22828  008936  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22829  008938  0101               	movlb	1	; () banked
 22830  00893A  5D2E               	subwf	CCM_Enc@i& (0+255),w,b
 22831  00893C  A0D8               	btfss	status,0,c
 22832  00893E  D006               	goto	l16970
 22833                           
 22834                           ; BSR set to: 1
 22835  008940  0E00               	movlw	0
 22836  008942  0101               	movlb	1	; () banked
 22837  008944  6F2D               	movwf	(_CCM_Enc$1978+1)& (0+255),b
 22838  008946  0E00               	movlw	0
 22839  008948  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 22840  00894A  D013               	goto	l486
 22841  00894C                     l16970:
 22842                           
 22843                           ; BSR set to: 1
 22844  00894C  0101               	movlb	1	; () banked
 22845  00894E  512E               	movf	CCM_Enc@i& (0+255),w,b
 22846  008950  0D01               	mullw	1
 22847  008952  50F3               	movf	prodl,w,c
 22848  008954  0101               	movlb	1	; () banked
 22849  008956  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22850  008958  6ED9               	movwf	fsr2l,c
 22851  00895A  50F4               	movf	prodh,w,c
 22852  00895C  0101               	movlb	1	; () banked
 22853  00895E  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22854  008960  6EDA               	movwf	fsr2h,c
 22855  008962  50DF               	movf	indf2,w,c
 22856  008964  0101               	movlb	1	; () banked
 22857  008966  6F2A               	movwf	??_CCM_Enc& (0+255),b
 22858  008968  0101               	movlb	1	; () banked
 22859  00896A  512A               	movf	??_CCM_Enc& (0+255),w,b
 22860  00896C  0101               	movlb	1	; () banked
 22861  00896E  6F2C               	movwf	_CCM_Enc$1978& (0+255),b
 22862  008970  6B2D               	clrf	(_CCM_Enc$1978+1)& (0+255),b
 22863  008972                     l486:
 22864                           
 22865                           ; BSR set to: 1
 22866  008972  0101               	movlb	1	; () banked
 22867  008974  512E               	movf	CCM_Enc@i& (0+255),w,b
 22868  008976  0D01               	mullw	1
 22869  008978  0EEC               	movlw	low _tmpBlock
 22870  00897A  24F3               	addwf	prodl,w,c
 22871  00897C  6ED9               	movwf	fsr2l,c
 22872  00897E  0E01               	movlw	high _tmpBlock
 22873  008980  20F4               	addwfc	prodh,w,c
 22874  008982  6EDA               	movwf	fsr2h,c
 22875  008984  C12C  FFDF         	movff	_CCM_Enc$1978,indf2
 22876                           
 22877                           ; BSR set to: 1
 22878  008988  0101               	movlb	1	; () banked
 22879  00898A  2B2E               	incf	CCM_Enc@i& (0+255),f,b
 22880  00898C  D7CE               	goto	l16962
 22881  00898E                     l16976:
 22882                           
 22883                           ; BSR set to: 1
 22884                           ;drv_mrf_miwi_security.c: 261: }
 22885                           ;drv_mrf_miwi_security.c: 263: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
 22886  00898E  0101               	movlb	1	; () banked
 22887  008990  5126               	movf	CCM_Enc@headerLen& (0+255),w,b
 22888  008992  0D01               	mullw	1
 22889  008994  50F3               	movf	prodl,w,c
 22890  008996  0101               	movlb	1	; () banked
 22891  008998  2524               	addwf	CCM_Enc@text& (0+255),w,b
 22892  00899A  0101               	movlb	1	; () banked
 22893  00899C  6F17               	movwf	CTR@text& (0+255),b
 22894  00899E  50F4               	movf	prodh,w,c
 22895  0089A0  0101               	movlb	1	; () banked
 22896  0089A2  2125               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 22897  0089A4  0101               	movlb	1	; () banked
 22898  0089A6  6F18               	movwf	(CTR@text+1)& (0+255),b
 22899  0089A8  0101               	movlb	1	; () banked
 22900  0089AA  5127               	movf	CCM_Enc@payloadLen& (0+255),w,b
 22901  0089AC  0F04               	addlw	4
 22902  0089AE  0101               	movlb	1	; () banked
 22903  0089B0  6F19               	movwf	CTR@len& (0+255),b
 22904  0089B2  C128  F11A         	movff	CCM_Enc@key,CTR@key
 22905  0089B6  C129  F11B         	movff	CCM_Enc@key+1,CTR@key+1
 22906  0089BA  0EEC               	movlw	low _tmpBlock
 22907  0089BC  0101               	movlb	1	; () banked
 22908  0089BE  6F1C               	movwf	CTR@nounce& (0+255),b
 22909  0089C0  0E01               	movlw	high _tmpBlock
 22910  0089C2  0101               	movlb	1	; () banked
 22911  0089C4  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 22912  0089C6  ECA3  F046         	call	_CTR	;wreg free
 22913  0089CA  0012               	return		;funcret
 22914  0089CC                     __end_of_CCM_Enc:
 22915                           	opt stack 0
 22916                           tblptru	equ	0xFF8
 22917                           tblptrh	equ	0xFF7
 22918                           tblptrl	equ	0xFF6
 22919                           tablat	equ	0xFF5
 22920                           prodh	equ	0xFF4
 22921                           prodl	equ	0xFF3
 22922                           intcon	equ	0xFF2
 22923                           intcon2	equ	0xFF1
 22924                           intcon3	equ	0xFF0
 22925                           indf0	equ	0xFEF
 22926                           postinc0	equ	0xFEE
 22927                           plusw0	equ	0xFEB
 22928                           fsr0h	equ	0xFEA
 22929                           fsr0l	equ	0xFE9
 22930                           wreg	equ	0xFE8
 22931                           indf1	equ	0xFE7
 22932                           postinc1	equ	0xFE6
 22933                           postdec1	equ	0xFE5
 22934                           fsr1h	equ	0xFE2
 22935                           fsr1l	equ	0xFE1
 22936                           indf2	equ	0xFDF
 22937                           postinc2	equ	0xFDE
 22938                           postdec2	equ	0xFDD
 22939                           plusw2	equ	0xFDB
 22940                           fsr2h	equ	0xFDA
 22941                           fsr2l	equ	0xFD9
 22942                           status	equ	0xFD8
 22943                           
 22944 ;; *************** function _MiMAC_ReceivedPacket *****************
 22945 ;; Defined at:
 22946 ;;		line 850 in file "src/miwi/drv_mrf_miwi_89xa.c"
 22947 ;; Parameters:    Size  Location     Type
 22948 ;;		None
 22949 ;; Auto vars:     Size  Location     Type
 22950 ;;  FrameCounter    4   63[BANK1 ] struct .
 22951 ;;  k               1   67[BANK1 ] unsigned char 
 22952 ;;  PayloadIndex    1   69[BANK1 ] unsigned char 
 22953 ;;  j               1   68[BANK1 ] unsigned char 
 22954 ;;  currentTick     4   59[BANK1 ] struct _MIWI_TICK
 22955 ;;  i               1   70[BANK1 ] unsigned char 
 22956 ;; Return value:  Size  Location     Type
 22957 ;;                  1    wreg      unsigned char 
 22958 ;; Registers used:
 22959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22960 ;; Tracked objects:
 22961 ;;		On entry : 0/0
 22962 ;;		On exit  : 0/0
 22963 ;;		Unchanged: 0/0
 22964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22966 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22967 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22968 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22969 ;;Total ram usage:       20 bytes
 22970 ;; Hardware stack levels used:    1
 22971 ;; Hardware stack levels required when called:   19
 22972 ;; This function calls:
 22973 ;;		_CCM_Dec
 22974 ;;		_MiWi_TickGet
 22975 ;;		_isSameAddress
 22976 ;; This function is called by:
 22977 ;;		_MiWiTasks
 22978 ;; This function uses a non-reentrant model
 22979 ;;
 22980                           
 22981                           	psect	text50
 22982  005904                     __ptext50:
 22983                           	opt stack 0
 22984  005904                     _MiMAC_ReceivedPacket:
 22985                           	opt stack 10
 22986                           
 22987                           ;drv_mrf_miwi_89xa.c: 852: uint8_t i;
 22988                           ;drv_mrf_miwi_89xa.c: 853: MIWI_TICK currentTick;
 22989                           ;drv_mrf_miwi_89xa.c: 857: for(i = 0; i < 5; i++)
 22990                           
 22991                           ;incstack = 0
 22992  005904  0E00               	movlw	0
 22993  005906  0101               	movlb	1	; () banked
 22994  005908  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 22995  00590A                     l17570:
 22996                           
 22997                           ; BSR set to: 1
 22998  00590A  0E04               	movlw	4
 22999  00590C  0101               	movlb	1	; () banked
 23000  00590E  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23001  005910  D001               	goto	l17574
 23002  005912  D084               	goto	l17588
 23003  005914                     l17574:
 23004                           
 23005                           ; BSR set to: 1
 23006                           ;drv_mrf_miwi_89xa.c: 858: {
 23007                           ;drv_mrf_miwi_89xa.c: 859: currentTick = MiWi_TickGet();
 23008  005914  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 23009  005918  C100  F13B         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 23010  00591C  C101  F13C         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 23011  005920  C102  F13D         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 23012  005924  C103  F13E         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 23013                           
 23014                           ;drv_mrf_miwi_89xa.c: 860: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 23015                           ;drv_mrf_miwi_89xa.c: 861: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 23016  005928  0101               	movlb	1	; () banked
 23017  00592A  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23018  00592C  0D06               	mullw	6
 23019  00592E  0E48               	movlw	low _AckInfo
 23020  005930  24F3               	addwf	prodl,w,c
 23021  005932  6ED9               	movwf	fsr2l,c
 23022  005934  0E02               	movlw	high _AckInfo
 23023  005936  20F4               	addwfc	prodh,w,c
 23024  005938  6EDA               	movwf	fsr2h,c
 23025  00593A  50DF               	movf	indf2,w,c
 23026  00593C  B4D8               	btfsc	status,2,c
 23027  00593E  D06B               	goto	l17584
 23028                           
 23029                           ; BSR set to: 1
 23030  005940  0101               	movlb	1	; () banked
 23031  005942  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23032  005944  0D06               	mullw	6
 23033  005946  0E02               	movlw	2
 23034  005948  26F3               	addwf	prodl,f,c
 23035  00594A  0E00               	movlw	0
 23036  00594C  22F4               	addwfc	prodh,f,c
 23037  00594E  0E48               	movlw	low _AckInfo
 23038  005950  24F3               	addwf	prodl,w,c
 23039  005952  6ED9               	movwf	fsr2l,c
 23040  005954  0E02               	movlw	high _AckInfo
 23041  005956  20F4               	addwfc	prodh,w,c
 23042  005958  6EDA               	movwf	fsr2h,c
 23043  00595A  0101               	movlb	1	; () banked
 23044  00595C  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23045  00595E  5CDE               	subwf	postinc2,w,c
 23046  005960  0101               	movlb	1	; () banked
 23047  005962  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23048  005964  58DE               	subwfb	postinc2,w,c
 23049  005966  0101               	movlb	1	; () banked
 23050  005968  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23051  00596A  58DE               	subwfb	postinc2,w,c
 23052  00596C  0101               	movlb	1	; () banked
 23053  00596E  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23054  005970  58DE               	subwfb	postinc2,w,c
 23055  005972  B0D8               	btfsc	status,0,c
 23056  005974  D050               	goto	l17584
 23057                           
 23058                           ; BSR set to: 1
 23059  005976  0101               	movlb	1	; () banked
 23060  005978  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23061  00597A  0D06               	mullw	6
 23062  00597C  0E02               	movlw	2
 23063  00597E  26F3               	addwf	prodl,f,c
 23064  005980  0E00               	movlw	0
 23065  005982  22F4               	addwfc	prodh,f,c
 23066  005984  0E48               	movlw	low _AckInfo
 23067  005986  24F3               	addwf	prodl,w,c
 23068  005988  6ED9               	movwf	fsr2l,c
 23069  00598A  0E02               	movlw	high _AckInfo
 23070  00598C  20F4               	addwfc	prodh,w,c
 23071  00598E  6EDA               	movwf	fsr2h,c
 23072  005990  CFDE F133          	movff	postinc2,??_MiMAC_ReceivedPacket
 23073  005994  CFDE F134          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 23074  005998  CFDE F135          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 23075  00599C  CFDE F136          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 23076  0059A0  0101               	movlb	1	; () banked
 23077  0059A2  1F33               	comf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23078  0059A4  1F34               	comf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23079  0059A6  1F35               	comf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23080  0059A8  1F36               	comf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23081  0059AA  2B33               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23082  0059AC  0E00               	movlw	0
 23083  0059AE  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23084  0059B0  2335               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23085  0059B2  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23086  0059B4  0101               	movlb	1	; () banked
 23087  0059B6  513B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23088  0059B8  0101               	movlb	1	; () banked
 23089  0059BA  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23090  0059BC  0101               	movlb	1	; () banked
 23091  0059BE  6F37               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 23092  0059C0  0101               	movlb	1	; () banked
 23093  0059C2  513C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23094  0059C4  0101               	movlb	1	; () banked
 23095  0059C6  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23096  0059C8  0101               	movlb	1	; () banked
 23097  0059CA  6F38               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 23098  0059CC  0101               	movlb	1	; () banked
 23099  0059CE  513D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23100  0059D0  0101               	movlb	1	; () banked
 23101  0059D2  2135               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23102  0059D4  0101               	movlb	1	; () banked
 23103  0059D6  6F39               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 23104  0059D8  0101               	movlb	1	; () banked
 23105  0059DA  513E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23106  0059DC  0101               	movlb	1	; () banked
 23107  0059DE  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23108  0059E0  0101               	movlb	1	; () banked
 23109  0059E2  6F3A               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 23110  0059E4  0101               	movlb	1	; () banked
 23111  0059E6  513A               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 23112  0059E8  E10B               	bnz	u19320
 23113  0059EA  0E21               	movlw	33
 23114  0059EC  0101               	movlb	1	; () banked
 23115  0059EE  5D37               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 23116  0059F0  0EA1               	movlw	161
 23117  0059F2  0101               	movlb	1	; () banked
 23118  0059F4  5938               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 23119  0059F6  0E07               	movlw	7
 23120  0059F8  0101               	movlb	1	; () banked
 23121  0059FA  5939               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 23122  0059FC  A0D8               	btfss	status,0,c
 23123  0059FE  D00B               	goto	l17584
 23124  005A00                     u19320:
 23125                           
 23126                           ; BSR set to: 1
 23127                           ;drv_mrf_miwi_89xa.c: 862: {
 23128                           ;drv_mrf_miwi_89xa.c: 863: AckInfo[i].Valid = 0;
 23129  005A00  0101               	movlb	1	; () banked
 23130  005A02  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23131  005A04  0D06               	mullw	6
 23132  005A06  0E48               	movlw	low _AckInfo
 23133  005A08  24F3               	addwf	prodl,w,c
 23134  005A0A  6ED9               	movwf	fsr2l,c
 23135  005A0C  0E02               	movlw	high _AckInfo
 23136  005A0E  20F4               	addwfc	prodh,w,c
 23137  005A10  6EDA               	movwf	fsr2h,c
 23138  005A12  0E00               	movlw	0
 23139  005A14  6EDF               	movwf	indf2,c
 23140  005A16                     l17584:
 23141                           
 23142                           ; BSR set to: 1
 23143  005A16  0101               	movlb	1	; () banked
 23144  005A18  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23145  005A1A  D777               	goto	l17570
 23146  005A1C                     l17588:
 23147                           
 23148                           ; BSR set to: 1
 23149                           ;drv_mrf_miwi_89xa.c: 864: }
 23150                           ;drv_mrf_miwi_89xa.c: 865: }
 23151                           ;drv_mrf_miwi_89xa.c: 868: if( ReceivedBankIndex != 0xFF )
 23152  005A1C  0101               	movlb	1	; () banked
 23153  005A1E  29C5               	incf	_ReceivedBankIndex& (0+255),w,b
 23154  005A20  B4D8               	btfsc	status,2,c
 23155  005A22  D002               	goto	l17594
 23156                           
 23157                           ; BSR set to: 1
 23158                           ;drv_mrf_miwi_89xa.c: 869: {
 23159                           ;drv_mrf_miwi_89xa.c: 870: return 0;
 23160  005A24  0E00               	movlw	0
 23161                           
 23162                           ; BSR set to: 1
 23163  005A26  0012               	return	
 23164  005A28                     l17594:
 23165                           
 23166                           ; BSR set to: 1
 23167                           ;drv_mrf_miwi_89xa.c: 871: }
 23168                           ;drv_mrf_miwi_89xa.c: 873: for(i = 0; i < 2; i++)
 23169  005A28  0E00               	movlw	0
 23170  005A2A  0101               	movlb	1	; () banked
 23171  005A2C  6F46               	movwf	MiMAC_ReceivedPacket@i& (0+255),b
 23172  005A2E                     l17596:
 23173                           
 23174                           ; BSR set to: 1
 23175  005A2E  0E01               	movlw	1
 23176  005A30  0101               	movlb	1	; () banked
 23177  005A32  6546               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23178  005A34  D001               	goto	l17600
 23179  005A36  D1C0               	goto	l17698
 23180  005A38                     l17600:
 23181                           
 23182                           ; BSR set to: 1
 23183                           ;drv_mrf_miwi_89xa.c: 874: {
 23184                           ;drv_mrf_miwi_89xa.c: 875: if( RxPacket[i].flags.bits.Valid )
 23185  005A38  0101               	movlb	1	; () banked
 23186  005A3A  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23187  005A3C  0D42               	mullw	66
 23188  005A3E  0E00               	movlw	low _RxPacket
 23189  005A40  24F3               	addwf	prodl,w,c
 23190  005A42  6ED9               	movwf	fsr2l,c
 23191  005A44  0E03               	movlw	high _RxPacket
 23192  005A46  20F4               	addwfc	prodh,w,c
 23193  005A48  6EDA               	movwf	fsr2h,c
 23194  005A4A  0103               	movlb	3	; () banked
 23195  005A4C  A0DF               	btfss	indf2,0,c
 23196  005A4E  D1B1               	goto	l17694
 23197                           
 23198                           ; BSR set to: 3
 23199                           ;drv_mrf_miwi_89xa.c: 876: {
 23200                           ;drv_mrf_miwi_89xa.c: 877: uint8_t PayloadIndex;
 23201                           ;drv_mrf_miwi_89xa.c: 878: uint8_t j;
 23202                           ;drv_mrf_miwi_89xa.c: 880: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 23203  005A50  0101               	movlb	1	; () banked
 23204  005A52  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23205  005A54  0D42               	mullw	66
 23206  005A56  0E01               	movlw	1
 23207  005A58  26F3               	addwf	prodl,f,c
 23208  005A5A  0E00               	movlw	0
 23209  005A5C  22F4               	addwfc	prodh,f,c
 23210  005A5E  0E00               	movlw	low _RxPacket
 23211  005A60  24F3               	addwf	prodl,w,c
 23212  005A62  6ED9               	movwf	fsr2l,c
 23213  005A64  0E03               	movlw	high _RxPacket
 23214  005A66  20F4               	addwfc	prodh,w,c
 23215  005A68  6EDA               	movwf	fsr2h,c
 23216  005A6A  50DF               	movf	indf2,w,c
 23217  005A6C  0101               	movlb	1	; () banked
 23218  005A6E  6F9A               	movwf	_MACRxPacket& (0+255),b
 23219                           
 23220                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 23221  005A70  0101               	movlb	1	; () banked
 23222  005A72  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23223  005A74  0D42               	mullw	66
 23224  005A76  0E41               	movlw	65
 23225  005A78  26F3               	addwf	prodl,f,c
 23226  005A7A  0E00               	movlw	0
 23227  005A7C  22F4               	addwfc	prodh,f,c
 23228  005A7E  0E00               	movlw	low _RxPacket
 23229  005A80  24F3               	addwf	prodl,w,c
 23230  005A82  6ED9               	movwf	fsr2l,c
 23231  005A84  0E03               	movlw	high _RxPacket
 23232  005A86  20F4               	addwfc	prodh,w,c
 23233  005A88  6EDA               	movwf	fsr2h,c
 23234  005A8A  50DF               	movf	indf2,w,c
 23235  005A8C  0101               	movlb	1	; () banked
 23236  005A8E  6F9F               	movwf	(_MACRxPacket+5)& (0+255),b
 23237                           
 23238                           ; BSR set to: 1
 23239                           ;drv_mrf_miwi_89xa.c: 882: PayloadIndex = 2;
 23240  005A90  0E02               	movlw	2
 23241  005A92  0101               	movlb	1	; () banked
 23242  005A94  6F45               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 23243                           
 23244                           ; BSR set to: 1
 23245                           ;drv_mrf_miwi_89xa.c: 884: if( MACRxPacket.flags.bits.destPrsnt )
 23246  005A96  0101               	movlb	1	; () banked
 23247  005A98  AD9A               	btfss	_MACRxPacket& (0+255),6,b
 23248  005A9A  D007               	goto	l17610
 23249                           
 23250                           ; BSR set to: 1
 23251                           ;drv_mrf_miwi_89xa.c: 885: {
 23252                           ;drv_mrf_miwi_89xa.c: 886: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 23253  005A9C  0101               	movlb	1	; () banked
 23254  005A9E  31AA               	rrcf	_MACInitParams& (0+255),w,b
 23255  005AA0  32E8               	rrcf	wreg,f,c
 23256  005AA2  32E8               	rrcf	wreg,f,c
 23257  005AA4  0B0F               	andlw	15
 23258  005AA6  0101               	movlb	1	; () banked
 23259  005AA8  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23260  005AAA                     l17610:
 23261                           
 23262                           ; BSR set to: 1
 23263                           ;drv_mrf_miwi_89xa.c: 887: }
 23264                           ;drv_mrf_miwi_89xa.c: 889: if( MACRxPacket.flags.bits.sourcePrsnt )
 23265  005AAA  0101               	movlb	1	; () banked
 23266  005AAC  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 23267  005AAE  D028               	goto	l17616
 23268                           
 23269                           ; BSR set to: 1
 23270                           ;drv_mrf_miwi_89xa.c: 890: {
 23271                           ;drv_mrf_miwi_89xa.c: 891: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 23272  005AB0  0101               	movlb	1	; () banked
 23273  005AB2  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23274  005AB4  0D01               	mullw	1
 23275  005AB6  0E01               	movlw	1
 23276  005AB8  26F3               	addwf	prodl,f,c
 23277  005ABA  0E00               	movlw	0
 23278  005ABC  22F4               	addwfc	prodh,f,c
 23279  005ABE  0E00               	movlw	low _RxPacket
 23280  005AC0  0101               	movlb	1	; () banked
 23281  005AC2  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23282  005AC4  0E03               	movlw	high _RxPacket
 23283  005AC6  0101               	movlb	1	; () banked
 23284  005AC8  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23285  005ACA  50F3               	movf	prodl,w,c
 23286  005ACC  0101               	movlb	1	; () banked
 23287  005ACE  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23288  005AD0  50F4               	movf	prodh,w,c
 23289  005AD2  0101               	movlb	1	; () banked
 23290  005AD4  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23291  005AD6  0101               	movlb	1	; () banked
 23292  005AD8  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23293  005ADA  0D42               	mullw	66
 23294  005ADC  50F3               	movf	prodl,w,c
 23295  005ADE  0101               	movlb	1	; () banked
 23296  005AE0  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23297  005AE2  0101               	movlb	1	; () banked
 23298  005AE4  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 23299  005AE6  50F4               	movf	prodh,w,c
 23300  005AE8  0101               	movlb	1	; () banked
 23301  005AEA  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23302  005AEC  0101               	movlb	1	; () banked
 23303  005AEE  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 23304                           
 23305                           ; BSR set to: 1
 23306                           ;drv_mrf_miwi_89xa.c: 892: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 23307  005AF0  0101               	movlb	1	; () banked
 23308  005AF2  31AA               	rrcf	_MACInitParams& (0+255),w,b
 23309  005AF4  32E8               	rrcf	wreg,f,c
 23310  005AF6  32E8               	rrcf	wreg,f,c
 23311  005AF8  0B0F               	andlw	15
 23312  005AFA  0101               	movlb	1	; () banked
 23313  005AFC  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23314                           
 23315                           ;drv_mrf_miwi_89xa.c: 893: }
 23316  005AFE  D006               	goto	l17618
 23317  005B00                     l17616:
 23318                           
 23319                           ; BSR set to: 1
 23320                           ;drv_mrf_miwi_89xa.c: 894: else
 23321                           ;drv_mrf_miwi_89xa.c: 895: {
 23322                           ;drv_mrf_miwi_89xa.c: 896: MACRxPacket.SourceAddress = (0);
 23323  005B00  0E00               	movlw	0
 23324  005B02  0101               	movlb	1	; () banked
 23325  005B04  6F9B               	movwf	(_MACRxPacket+1)& (0+255),b
 23326  005B06  0E00               	movlw	0
 23327  005B08  0101               	movlb	1	; () banked
 23328  005B0A  6F9C               	movwf	(_MACRxPacket+2)& (0+255),b
 23329  005B0C                     l17618:
 23330                           
 23331                           ; BSR set to: 1
 23332                           ;drv_mrf_miwi_89xa.c: 897: }
 23333                           ;drv_mrf_miwi_89xa.c: 901: if( MACRxPacket.flags.bits.secEn )
 23334  005B0C  0101               	movlb	1	; () banked
 23335  005B0E  A79A               	btfss	_MACRxPacket& (0+255),3,b
 23336  005B10  D126               	goto	l17682
 23337                           
 23338                           ; BSR set to: 1
 23339                           ;drv_mrf_miwi_89xa.c: 902: {
 23340                           ;drv_mrf_miwi_89xa.c: 904: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 23341  005B12  0101               	movlb	1	; () banked
 23342  005B14  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23343  005B16  0D42               	mullw	66
 23344  005B18  0101               	movlb	1	; () banked
 23345  005B1A  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23346  005B1C  0101               	movlb	1	; () banked
 23347  005B1E  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23348  005B20  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23349  005B22  0E05               	movlw	5
 23350  005B24  0101               	movlb	1	; () banked
 23351  005B26  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23352  005B28  0E00               	movlw	0
 23353  005B2A  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23354  005B2C  0E00               	movlw	low _RxPacket
 23355  005B2E  0101               	movlb	1	; () banked
 23356  005B30  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 23357  005B32  0E03               	movlw	high _RxPacket
 23358  005B34  0101               	movlb	1	; () banked
 23359  005B36  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 23360  005B38  0101               	movlb	1	; () banked
 23361  005B3A  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23362  005B3C  0101               	movlb	1	; () banked
 23363  005B3E  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23364  005B40  0101               	movlb	1	; () banked
 23365  005B42  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23366  005B44  0101               	movlb	1	; () banked
 23367  005B46  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23368  005B48  50F3               	movf	prodl,w,c
 23369  005B4A  0101               	movlb	1	; () banked
 23370  005B4C  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23371  005B4E  6ED9               	movwf	fsr2l,c
 23372  005B50  50F4               	movf	prodh,w,c
 23373  005B52  0101               	movlb	1	; () banked
 23374  005B54  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23375  005B56  6EDA               	movwf	fsr2h,c
 23376  005B58  50DF               	movf	indf2,w,c
 23377  005B5A  B4D8               	btfsc	status,2,c
 23378  005B5C  D00D               	goto	l356
 23379                           
 23380                           ; BSR set to: 1
 23381                           ;drv_mrf_miwi_89xa.c: 905: {
 23382                           ;drv_mrf_miwi_89xa.c: 906: RxPacket[i].flags.Val = 0;
 23383  005B5E  0101               	movlb	1	; () banked
 23384  005B60  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23385  005B62  0D42               	mullw	66
 23386  005B64  0E00               	movlw	low _RxPacket
 23387  005B66  24F3               	addwf	prodl,w,c
 23388  005B68  6ED9               	movwf	fsr2l,c
 23389  005B6A  0E03               	movlw	high _RxPacket
 23390  005B6C  20F4               	addwfc	prodh,w,c
 23391  005B6E  6EDA               	movwf	fsr2h,c
 23392  005B70  0E00               	movlw	0
 23393  005B72  6EDF               	movwf	indf2,c
 23394                           
 23395                           ; BSR set to: 1
 23396                           ;drv_mrf_miwi_89xa.c: 907: return 0;
 23397  005B74  0E00               	movlw	0
 23398                           
 23399                           ; BSR set to: 1
 23400  005B76  0012               	return	
 23401  005B78                     l356:
 23402                           
 23403                           ; BSR set to: 1
 23404                           ;drv_mrf_miwi_89xa.c: 908: }
 23405                           ;drv_mrf_miwi_89xa.c: 911: if( MACRxPacket.flags.bits.sourcePrsnt )
 23406  005B78  0101               	movlb	1	; () banked
 23407  005B7A  AF9A               	btfss	_MACRxPacket& (0+255),7,b
 23408  005B7C  D0A9               	goto	l17670
 23409                           
 23410                           ; BSR set to: 1
 23411                           ;drv_mrf_miwi_89xa.c: 912: {
 23412                           ;drv_mrf_miwi_89xa.c: 913: for(j = 0; j < 64; j++)
 23413  005B7E  0E00               	movlw	0
 23414  005B80  0101               	movlb	1	; () banked
 23415  005B82  6F44               	movwf	MiMAC_ReceivedPacket@j& (0+255),b
 23416  005B84                     l17630:
 23417                           
 23418                           ; BSR set to: 1
 23419  005B84  0E3F               	movlw	63
 23420  005B86  0101               	movlb	1	; () banked
 23421  005B88  6544               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 23422  005B8A  D001               	goto	l17634
 23423  005B8C  D02A               	goto	l17644
 23424  005B8E                     l17634:
 23425                           
 23426                           ; BSR set to: 1
 23427                           ;drv_mrf_miwi_89xa.c: 914: {
 23428                           ;drv_mrf_miwi_89xa.c: 915: if( (ConnectionTable[j].status.bits.isValid) &&
 23429                           ;drv_mrf_miwi_89xa.c: 916: isSameAddress(ConnectionTable[j].Address, MACRxPacket.SourceA
      +                          ddress) )
 23430  005B8E  0101               	movlb	1	; () banked
 23431  005B90  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23432  005B92  0D09               	mullw	9
 23433  005B94  0E08               	movlw	8
 23434  005B96  26F3               	addwf	prodl,f,c
 23435  005B98  0E00               	movlw	0
 23436  005B9A  22F4               	addwfc	prodh,f,c
 23437  005B9C  0E00               	movlw	low _ConnectionTable
 23438  005B9E  24F3               	addwf	prodl,w,c
 23439  005BA0  6ED9               	movwf	fsr2l,c
 23440  005BA2  0E06               	movlw	high _ConnectionTable
 23441  005BA4  20F4               	addwfc	prodh,w,c
 23442  005BA6  6EDA               	movwf	fsr2h,c
 23443  005BA8  AEDF               	btfss	indf2,7,c
 23444  005BAA  D018               	goto	l17640
 23445                           
 23446                           ; BSR set to: 1
 23447  005BAC  0101               	movlb	1	; () banked
 23448  005BAE  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23449  005BB0  0D09               	mullw	9
 23450  005BB2  0E04               	movlw	4
 23451  005BB4  26F3               	addwf	prodl,f,c
 23452  005BB6  0E00               	movlw	0
 23453  005BB8  22F4               	addwfc	prodh,f,c
 23454  005BBA  0E00               	movlw	low _ConnectionTable
 23455  005BBC  24F3               	addwf	prodl,w,c
 23456  005BBE  0101               	movlb	1	; () banked
 23457  005BC0  6F00               	movwf	isSameAddress@Address1& (0+255),b
 23458  005BC2  0E06               	movlw	high _ConnectionTable
 23459  005BC4  20F4               	addwfc	prodh,w,c
 23460  005BC6  0101               	movlb	1	; () banked
 23461  005BC8  6F01               	movwf	(isSameAddress@Address1+1)& (0+255),b
 23462  005BCA  C19B  F102         	movff	_MACRxPacket+1,isSameAddress@Address2
 23463  005BCE  C19C  F103         	movff	_MACRxPacket+2,isSameAddress@Address2+1
 23464  005BD2  ECD8  F05A         	call	_isSameAddress	;wreg free
 23465  005BD6  0900               	iorlw	0
 23466  005BD8  A4D8               	btfss	status,2,c
 23467  005BDA  D003               	goto	l17644
 23468  005BDC                     l17640:
 23469  005BDC  0101               	movlb	1	; () banked
 23470  005BDE  2B44               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 23471  005BE0  D7D1               	goto	l17630
 23472  005BE2                     l17644:
 23473                           
 23474                           ;drv_mrf_miwi_89xa.c: 919: }
 23475                           ;drv_mrf_miwi_89xa.c: 920: }
 23476                           ;drv_mrf_miwi_89xa.c: 921: if( j < 64 )
 23477  005BE2  0E40               	movlw	64
 23478  005BE4  0101               	movlb	1	; () banked
 23479  005BE6  6144               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 23480  005BE8  D073               	goto	l17670
 23481                           
 23482                           ; BSR set to: 1
 23483                           ;drv_mrf_miwi_89xa.c: 922: {
 23484                           ;drv_mrf_miwi_89xa.c: 923: API_UINT32_UNION FrameCounter;
 23485                           ;drv_mrf_miwi_89xa.c: 924: uint8_t k;
 23486                           ;drv_mrf_miwi_89xa.c: 926: for(k = 0; k < 4; k++)
 23487  005BEA  0E00               	movlw	0
 23488  005BEC  0101               	movlb	1	; () banked
 23489  005BEE  6F43               	movwf	MiMAC_ReceivedPacket@k& (0+255),b
 23490  005BF0                     l17648:
 23491                           
 23492                           ; BSR set to: 1
 23493  005BF0  0E03               	movlw	3
 23494  005BF2  0101               	movlb	1	; () banked
 23495  005BF4  6543               	cpfsgt	MiMAC_ReceivedPacket@k& (0+255),b
 23496  005BF6  D001               	goto	l17652
 23497  005BF8  D036               	goto	l17658
 23498  005BFA                     l17652:
 23499                           
 23500                           ; BSR set to: 1
 23501                           ;drv_mrf_miwi_89xa.c: 927: {
 23502                           ;drv_mrf_miwi_89xa.c: 928: FrameCounter.v[k] = RxPacket[i].Payload[PayloadIndex+k];
 23503  005BFA  0101               	movlb	1	; () banked
 23504  005BFC  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23505  005BFE  0D42               	mullw	66
 23506  005C00  0101               	movlb	1	; () banked
 23507  005C02  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 23508  005C04  C145  F133         	movff	MiMAC_ReceivedPacket@PayloadIndex,??_MiMAC_ReceivedPacket
 23509  005C08  0101               	movlb	1	; () banked
 23510  005C0A  6B34               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23511  005C0C  0101               	movlb	1	; () banked
 23512  005C0E  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23513  005C10  0E00               	movlw	0
 23514  005C12  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23515  005C14  0E01               	movlw	1
 23516  005C16  0101               	movlb	1	; () banked
 23517  005C18  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23518  005C1A  0E00               	movlw	0
 23519  005C1C  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23520  005C1E  0E00               	movlw	low _RxPacket
 23521  005C20  0101               	movlb	1	; () banked
 23522  005C22  6F35               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 23523  005C24  0E03               	movlw	high _RxPacket
 23524  005C26  0101               	movlb	1	; () banked
 23525  005C28  6F36               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 23526  005C2A  0101               	movlb	1	; () banked
 23527  005C2C  5133               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23528  005C2E  0101               	movlb	1	; () banked
 23529  005C30  2735               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 23530  005C32  0101               	movlb	1	; () banked
 23531  005C34  5134               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23532  005C36  0101               	movlb	1	; () banked
 23533  005C38  2336               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 23534  005C3A  50F3               	movf	prodl,w,c
 23535  005C3C  0101               	movlb	1	; () banked
 23536  005C3E  2535               	addwf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23537  005C40  6ED9               	movwf	fsr2l,c
 23538  005C42  50F4               	movf	prodh,w,c
 23539  005C44  0101               	movlb	1	; () banked
 23540  005C46  2136               	addwfc	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23541  005C48  6EDA               	movwf	fsr2h,c
 23542  005C4A  0101               	movlb	1	; () banked
 23543  005C4C  5143               	movf	MiMAC_ReceivedPacket@k& (0+255),w,b
 23544  005C4E  0D01               	mullw	1
 23545  005C50  0E3F               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 23546  005C52  24F3               	addwf	prodl,w,c
 23547  005C54  6EE1               	movwf	fsr1l,c
 23548  005C56  0E01               	movlw	high MiMAC_ReceivedPacket@FrameCounter
 23549  005C58  20F4               	addwfc	prodh,w,c
 23550  005C5A  6EE2               	movwf	fsr1h,c
 23551  005C5C  CFDF FFE7          	movff	indf2,indf1
 23552                           
 23553                           ; BSR set to: 1
 23554  005C60  0101               	movlb	1	; () banked
 23555  005C62  2B43               	incf	MiMAC_ReceivedPacket@k& (0+255),f,b
 23556  005C64  D7C5               	goto	l17648
 23557  005C66                     l17658:
 23558                           
 23559                           ; BSR set to: 1
 23560                           ;drv_mrf_miwi_89xa.c: 929: }
 23561                           ;drv_mrf_miwi_89xa.c: 931: if( IncomingFrameCounter[j].Val > FrameCounter.Val )
 23562  005C66  0101               	movlb	1	; () banked
 23563  005C68  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23564  005C6A  0D04               	mullw	4
 23565  005C6C  0E00               	movlw	low _IncomingFrameCounter
 23566  005C6E  24F3               	addwf	prodl,w,c
 23567  005C70  6ED9               	movwf	fsr2l,c
 23568  005C72  0E05               	movlw	high _IncomingFrameCounter
 23569  005C74  20F4               	addwfc	prodh,w,c
 23570  005C76  6EDA               	movwf	fsr2h,c
 23571  005C78  50DE               	movf	postinc2,w,c
 23572  005C7A  0101               	movlb	1	; () banked
 23573  005C7C  5D3F               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 23574  005C7E  50DE               	movf	postinc2,w,c
 23575  005C80  0101               	movlb	1	; () banked
 23576  005C82  5940               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 23577  005C84  50DE               	movf	postinc2,w,c
 23578  005C86  0101               	movlb	1	; () banked
 23579  005C88  5941               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 23580  005C8A  50DE               	movf	postinc2,w,c
 23581  005C8C  0101               	movlb	1	; () banked
 23582  005C8E  5942               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 23583  005C90  B0D8               	btfsc	status,0,c
 23584  005C92  D00D               	goto	l17668
 23585                           
 23586                           ; BSR set to: 1
 23587                           ;drv_mrf_miwi_89xa.c: 932: {
 23588                           ;drv_mrf_miwi_89xa.c: 933: RxPacket[i].flags.Val = 0;
 23589  005C94  0101               	movlb	1	; () banked
 23590  005C96  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23591  005C98  0D42               	mullw	66
 23592  005C9A  0E00               	movlw	low _RxPacket
 23593  005C9C  24F3               	addwf	prodl,w,c
 23594  005C9E  6ED9               	movwf	fsr2l,c
 23595  005CA0  0E03               	movlw	high _RxPacket
 23596  005CA2  20F4               	addwfc	prodh,w,c
 23597  005CA4  6EDA               	movwf	fsr2h,c
 23598  005CA6  0E00               	movlw	0
 23599  005CA8  6EDF               	movwf	indf2,c
 23600                           
 23601                           ; BSR set to: 1
 23602                           ;drv_mrf_miwi_89xa.c: 934: return 0;
 23603  005CAA  0E00               	movlw	0
 23604                           
 23605                           ; BSR set to: 1
 23606  005CAC  0012               	return	
 23607  005CAE                     l17668:
 23608                           
 23609                           ; BSR set to: 1
 23610                           ;drv_mrf_miwi_89xa.c: 936: else
 23611                           ;drv_mrf_miwi_89xa.c: 937: {
 23612                           ;drv_mrf_miwi_89xa.c: 938: IncomingFrameCounter[j].Val = FrameCounter.Val;
 23613  005CAE  0101               	movlb	1	; () banked
 23614  005CB0  5144               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23615  005CB2  0D04               	mullw	4
 23616  005CB4  0E00               	movlw	low _IncomingFrameCounter
 23617  005CB6  24F3               	addwf	prodl,w,c
 23618  005CB8  6ED9               	movwf	fsr2l,c
 23619  005CBA  0E05               	movlw	high _IncomingFrameCounter
 23620  005CBC  20F4               	addwfc	prodh,w,c
 23621  005CBE  6EDA               	movwf	fsr2h,c
 23622  005CC0  C13F  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 23623  005CC4  C140  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 23624  005CC8  C141  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 23625  005CCC  C142  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 23626  005CD0                     l17670:
 23627                           
 23628                           ; BSR set to: 1
 23629                           ;drv_mrf_miwi_89xa.c: 939: }
 23630                           ;drv_mrf_miwi_89xa.c: 940: }
 23631                           ;drv_mrf_miwi_89xa.c: 941: }
 23632                           ;drv_mrf_miwi_89xa.c: 944: PayloadIndex += 5;
 23633  005CD0  0E05               	movlw	5
 23634  005CD2  0101               	movlb	1	; () banked
 23635  005CD4  2745               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23636                           
 23637                           ; BSR set to: 1
 23638                           ;drv_mrf_miwi_89xa.c: 966: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex, RxPa
      +                          cket[i].PayloadLen-PayloadIndex, key) == 0)
 23639  005CD6  0101               	movlb	1	; () banked
 23640  005CD8  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23641  005CDA  0D42               	mullw	66
 23642  005CDC  0E01               	movlw	1
 23643  005CDE  26F3               	addwf	prodl,f,c
 23644  005CE0  0E00               	movlw	0
 23645  005CE2  22F4               	addwfc	prodh,f,c
 23646  005CE4  0E00               	movlw	low _RxPacket
 23647  005CE6  24F3               	addwf	prodl,w,c
 23648  005CE8  0101               	movlb	1	; () banked
 23649  005CEA  6F24               	movwf	CCM_Dec@text& (0+255),b
 23650  005CEC  0E03               	movlw	high _RxPacket
 23651  005CEE  20F4               	addwfc	prodh,w,c
 23652  005CF0  0101               	movlb	1	; () banked
 23653  005CF2  6F25               	movwf	(CCM_Dec@text+1)& (0+255),b
 23654  005CF4  C145  F126         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 23655  005CF8  0101               	movlb	1	; () banked
 23656  005CFA  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23657  005CFC  0D42               	mullw	66
 23658  005CFE  0E41               	movlw	65
 23659  005D00  26F3               	addwf	prodl,f,c
 23660  005D02  0E00               	movlw	0
 23661  005D04  22F4               	addwfc	prodh,f,c
 23662  005D06  0E00               	movlw	low _RxPacket
 23663  005D08  24F3               	addwf	prodl,w,c
 23664  005D0A  6ED9               	movwf	fsr2l,c
 23665  005D0C  0E03               	movlw	high _RxPacket
 23666  005D0E  20F4               	addwfc	prodh,w,c
 23667  005D10  6EDA               	movwf	fsr2h,c
 23668  005D12  50DF               	movf	indf2,w,c
 23669  005D14  0101               	movlb	1	; () banked
 23670  005D16  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23671  005D18  0101               	movlb	1	; () banked
 23672  005D1A  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23673  005D1C  0800               	sublw	0
 23674  005D1E  0101               	movlb	1	; () banked
 23675  005D20  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23676  005D22  0101               	movlb	1	; () banked
 23677  005D24  6F27               	movwf	CCM_Dec@payloadLen& (0+255),b
 23678  005D26  0EF1               	movlw	low _key
 23679  005D28  0101               	movlb	1	; () banked
 23680  005D2A  6F28               	movwf	CCM_Dec@key& (0+255),b
 23681  005D2C  0E02               	movlw	high _key
 23682  005D2E  0101               	movlb	1	; () banked
 23683  005D30  6F29               	movwf	(CCM_Dec@key+1)& (0+255),b
 23684  005D32  EC35  F03F         	call	_CCM_Dec	;wreg free
 23685  005D36  0900               	iorlw	0
 23686  005D38  A4D8               	btfss	status,2,c
 23687  005D3A  D00D               	goto	l17680
 23688                           
 23689                           ;drv_mrf_miwi_89xa.c: 967: {
 23690                           ;drv_mrf_miwi_89xa.c: 968: RxPacket[i].flags.Val = 0;
 23691  005D3C  0101               	movlb	1	; () banked
 23692  005D3E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23693  005D40  0D42               	mullw	66
 23694  005D42  0E00               	movlw	low _RxPacket
 23695  005D44  24F3               	addwf	prodl,w,c
 23696  005D46  6ED9               	movwf	fsr2l,c
 23697  005D48  0E03               	movlw	high _RxPacket
 23698  005D4A  20F4               	addwfc	prodh,w,c
 23699  005D4C  6EDA               	movwf	fsr2h,c
 23700  005D4E  0E00               	movlw	0
 23701  005D50  6EDF               	movwf	indf2,c
 23702                           
 23703                           ; BSR set to: 1
 23704                           ;drv_mrf_miwi_89xa.c: 969: return 0;
 23705  005D52  0E00               	movlw	0
 23706                           
 23707                           ; BSR set to: 1
 23708  005D54  0012               	return	
 23709  005D56                     l17680:
 23710                           
 23711                           ;drv_mrf_miwi_89xa.c: 970: }
 23712                           ;drv_mrf_miwi_89xa.c: 987: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 23713  005D56  0101               	movlb	1	; () banked
 23714  005D58  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23715  005D5A  0F02               	addlw	2
 23716  005D5C  D002               	goto	L9
 23717  005D5E                     l17682:
 23718                           
 23719                           ; BSR set to: 1
 23720                           ;drv_mrf_miwi_89xa.c: 989: else
 23721                           ;drv_mrf_miwi_89xa.c: 990: {
 23722                           ;drv_mrf_miwi_89xa.c: 991: MACRxPacket.PayloadLen -= PayloadIndex;
 23723  005D5E  0101               	movlb	1	; () banked
 23724  005D60  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23725  005D62                     L9:
 23726  005D62  0101               	movlb	1	; () banked
 23727  005D64  5F9F               	subwf	(_MACRxPacket+5)& (0+255),f,b
 23728                           
 23729                           ; BSR set to: 1
 23730                           ;drv_mrf_miwi_89xa.c: 992: }
 23731                           ;drv_mrf_miwi_89xa.c: 1000: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 23732                           
 23733                           ; BSR set to: 1
 23734  005D66  0101               	movlb	1	; () banked
 23735  005D68  5145               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23736  005D6A  0D01               	mullw	1
 23737  005D6C  0E01               	movlw	1
 23738  005D6E  26F3               	addwf	prodl,f,c
 23739  005D70  0E00               	movlw	0
 23740  005D72  22F4               	addwfc	prodh,f,c
 23741  005D74  0E00               	movlw	low _RxPacket
 23742  005D76  0101               	movlb	1	; () banked
 23743  005D78  6F33               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23744  005D7A  0E03               	movlw	high _RxPacket
 23745  005D7C  0101               	movlb	1	; () banked
 23746  005D7E  6F34               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23747  005D80  50F3               	movf	prodl,w,c
 23748  005D82  0101               	movlb	1	; () banked
 23749  005D84  2733               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23750  005D86  50F4               	movf	prodh,w,c
 23751  005D88  0101               	movlb	1	; () banked
 23752  005D8A  2334               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23753  005D8C  0101               	movlb	1	; () banked
 23754  005D8E  5146               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23755  005D90  0D42               	mullw	66
 23756  005D92  50F3               	movf	prodl,w,c
 23757  005D94  0101               	movlb	1	; () banked
 23758  005D96  2533               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23759  005D98  0101               	movlb	1	; () banked
 23760  005D9A  6F9D               	movwf	(_MACRxPacket+3)& (0+255),b
 23761  005D9C  50F4               	movf	prodh,w,c
 23762  005D9E  0101               	movlb	1	; () banked
 23763  005DA0  2134               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23764  005DA2  0101               	movlb	1	; () banked
 23765  005DA4  6F9E               	movwf	(_MACRxPacket+4)& (0+255),b
 23766                           
 23767                           ; BSR set to: 1
 23768                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.RSSIValue = RSSILock;
 23769  005DA6  C1C4  F1A0         	movff	_RSSILock,_MACRxPacket+6
 23770                           
 23771                           ; BSR set to: 1
 23772                           ;drv_mrf_miwi_89xa.c: 1005: ReceivedBankIndex = i;
 23773  005DAA  C146  F1C5         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 23774                           
 23775                           ; BSR set to: 1
 23776                           ;drv_mrf_miwi_89xa.c: 1006: return 1;
 23777  005DAE  0E01               	movlw	1
 23778                           
 23779                           ; BSR set to: 1
 23780  005DB0  0012               	return	
 23781  005DB2                     l17694:
 23782  005DB2  0101               	movlb	1	; () banked
 23783  005DB4  2B46               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23784  005DB6  D63B               	goto	l17596
 23785  005DB8                     l17698:
 23786                           
 23787                           ; BSR set to: 1
 23788                           ;drv_mrf_miwi_89xa.c: 1007: }
 23789                           ;drv_mrf_miwi_89xa.c: 1008: }
 23790                           ;drv_mrf_miwi_89xa.c: 1010: return 0;
 23791  005DB8  0E00               	movlw	0
 23792  005DBA  0012               	return	
 23793  005DBC                     __end_of_MiMAC_ReceivedPacket:
 23794                           	opt stack 0
 23795                           tblptru	equ	0xFF8
 23796                           tblptrh	equ	0xFF7
 23797                           tblptrl	equ	0xFF6
 23798                           tablat	equ	0xFF5
 23799                           prodh	equ	0xFF4
 23800                           prodl	equ	0xFF3
 23801                           intcon	equ	0xFF2
 23802                           intcon2	equ	0xFF1
 23803                           intcon3	equ	0xFF0
 23804                           indf0	equ	0xFEF
 23805                           postinc0	equ	0xFEE
 23806                           plusw0	equ	0xFEB
 23807                           fsr0h	equ	0xFEA
 23808                           fsr0l	equ	0xFE9
 23809                           wreg	equ	0xFE8
 23810                           indf1	equ	0xFE7
 23811                           postinc1	equ	0xFE6
 23812                           postdec1	equ	0xFE5
 23813                           fsr1h	equ	0xFE2
 23814                           fsr1l	equ	0xFE1
 23815                           indf2	equ	0xFDF
 23816                           postinc2	equ	0xFDE
 23817                           postdec2	equ	0xFDD
 23818                           plusw2	equ	0xFDB
 23819                           fsr2h	equ	0xFDA
 23820                           fsr2l	equ	0xFD9
 23821                           status	equ	0xFD8
 23822                           
 23823 ;; *************** function _isSameAddress *****************
 23824 ;; Defined at:
 23825 ;;		line 3443 in file "src/miwi/miwi_mesh.c"
 23826 ;; Parameters:    Size  Location     Type
 23827 ;;  Address1        2    0[BANK1 ] PTR unsigned char 
 23828 ;;		 -> ConnectionTable(576), 
 23829 ;;  Address2        2    2[BANK1 ] PTR unsigned char 
 23830 ;;		 -> NULL(0), RxPacket.Payload(64), RxPacket(132), 
 23831 ;; Auto vars:     Size  Location     Type
 23832 ;;  i               1    6[BANK1 ] unsigned char 
 23833 ;; Return value:  Size  Location     Type
 23834 ;;                  1    wreg      unsigned char 
 23835 ;; Registers used:
 23836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23837 ;; Tracked objects:
 23838 ;;		On entry : 0/0
 23839 ;;		On exit  : 0/0
 23840 ;;		Unchanged: 0/0
 23841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23842 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23843 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23844 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23845 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23846 ;;Total ram usage:        7 bytes
 23847 ;; Hardware stack levels used:    1
 23848 ;; Hardware stack levels required when called:   16
 23849 ;; This function calls:
 23850 ;;		Nothing
 23851 ;; This function is called by:
 23852 ;;		_MiMAC_ReceivedPacket
 23853 ;; This function uses a non-reentrant model
 23854 ;;
 23855                           
 23856                           	psect	text51
 23857  00B5B0                     __ptext51:
 23858                           	opt stack 0
 23859  00B5B0                     _isSameAddress:
 23860                           	opt stack 12
 23861                           
 23862                           ;miwi_mesh.c: 3445: uint8_t i;
 23863                           ;miwi_mesh.c: 3447: for(i = 0; i < 4; i++)
 23864                           
 23865                           ; BSR set to: 1
 23866                           ;incstack = 0
 23867  00B5B0  0E00               	movlw	0
 23868  00B5B2  0101               	movlb	1	; () banked
 23869  00B5B4  6F06               	movwf	isSameAddress@i& (0+255),b
 23870  00B5B6                     l17154:
 23871                           
 23872                           ; BSR set to: 1
 23873  00B5B6  0E03               	movlw	3
 23874  00B5B8  0101               	movlb	1	; () banked
 23875  00B5BA  6506               	cpfsgt	isSameAddress@i& (0+255),b
 23876  00B5BC  D001               	goto	l17158
 23877  00B5BE  D01F               	goto	l17168
 23878  00B5C0                     l17158:
 23879                           
 23880                           ; BSR set to: 1
 23881                           ;miwi_mesh.c: 3448: {
 23882                           ;miwi_mesh.c: 3449: if( Address1[i] != Address2[i] )
 23883  00B5C0  0101               	movlb	1	; () banked
 23884  00B5C2  5106               	movf	isSameAddress@i& (0+255),w,b
 23885  00B5C4  0D01               	mullw	1
 23886  00B5C6  50F3               	movf	prodl,w,c
 23887  00B5C8  0101               	movlb	1	; () banked
 23888  00B5CA  2502               	addwf	isSameAddress@Address2& (0+255),w,b
 23889  00B5CC  6ED9               	movwf	fsr2l,c
 23890  00B5CE  50F4               	movf	prodh,w,c
 23891  00B5D0  0101               	movlb	1	; () banked
 23892  00B5D2  2103               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 23893  00B5D4  6EDA               	movwf	fsr2h,c
 23894  00B5D6  0101               	movlb	1	; () banked
 23895  00B5D8  5106               	movf	isSameAddress@i& (0+255),w,b
 23896  00B5DA  0D01               	mullw	1
 23897  00B5DC  50F3               	movf	prodl,w,c
 23898  00B5DE  0101               	movlb	1	; () banked
 23899  00B5E0  2500               	addwf	isSameAddress@Address1& (0+255),w,b
 23900  00B5E2  6EE1               	movwf	fsr1l,c
 23901  00B5E4  50F4               	movf	prodh,w,c
 23902  00B5E6  0101               	movlb	1	; () banked
 23903  00B5E8  2101               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 23904  00B5EA  6EE2               	movwf	fsr1h,c
 23905  00B5EC  50DE               	movf	postinc2,w,c
 23906  00B5EE  18E6               	xorwf	postinc1,w,c
 23907  00B5F0  B4D8               	btfsc	status,2,c
 23908  00B5F2  D002               	goto	l17164
 23909                           
 23910                           ; BSR set to: 1
 23911                           ;miwi_mesh.c: 3450: {
 23912                           ;miwi_mesh.c: 3451: return 0;
 23913  00B5F4  0E00               	movlw	0
 23914                           
 23915                           ; BSR set to: 1
 23916  00B5F6  0012               	return	
 23917  00B5F8                     l17164:
 23918                           
 23919                           ; BSR set to: 1
 23920  00B5F8  0101               	movlb	1	; () banked
 23921  00B5FA  2B06               	incf	isSameAddress@i& (0+255),f,b
 23922  00B5FC  D7DC               	goto	l17154
 23923  00B5FE                     l17168:
 23924                           
 23925                           ; BSR set to: 1
 23926                           ;miwi_mesh.c: 3452: }
 23927                           ;miwi_mesh.c: 3453: }
 23928                           ;miwi_mesh.c: 3454: return 1;
 23929  00B5FE  0E01               	movlw	1
 23930  00B600  0012               	return	
 23931  00B602                     __end_of_isSameAddress:
 23932                           	opt stack 0
 23933                           tblptru	equ	0xFF8
 23934                           tblptrh	equ	0xFF7
 23935                           tblptrl	equ	0xFF6
 23936                           tablat	equ	0xFF5
 23937                           prodh	equ	0xFF4
 23938                           prodl	equ	0xFF3
 23939                           intcon	equ	0xFF2
 23940                           intcon2	equ	0xFF1
 23941                           intcon3	equ	0xFF0
 23942                           indf0	equ	0xFEF
 23943                           postinc0	equ	0xFEE
 23944                           plusw0	equ	0xFEB
 23945                           fsr0h	equ	0xFEA
 23946                           fsr0l	equ	0xFE9
 23947                           wreg	equ	0xFE8
 23948                           indf1	equ	0xFE7
 23949                           postinc1	equ	0xFE6
 23950                           postdec1	equ	0xFE5
 23951                           fsr1h	equ	0xFE2
 23952                           fsr1l	equ	0xFE1
 23953                           indf2	equ	0xFDF
 23954                           postinc2	equ	0xFDE
 23955                           postdec2	equ	0xFDD
 23956                           plusw2	equ	0xFDB
 23957                           fsr2h	equ	0xFDA
 23958                           fsr2l	equ	0xFD9
 23959                           status	equ	0xFD8
 23960                           
 23961 ;; *************** function _CCM_Dec *****************
 23962 ;; Defined at:
 23963 ;;		line 298 in file "src/miwi/drv_mrf_miwi_security.c"
 23964 ;; Parameters:    Size  Location     Type
 23965 ;;  text            2   36[BANK1 ] PTR unsigned char 
 23966 ;;		 -> RxPacket.Payload(64), RxPacket(132), 
 23967 ;;  headerLen       1   38[BANK1 ] unsigned char 
 23968 ;;  payloadLen      1   39[BANK1 ] unsigned char 
 23969 ;;  key             2   40[BANK1 ] PTR unsigned char 
 23970 ;;		 -> key(8), 
 23971 ;; Auto vars:     Size  Location     Type
 23972 ;;  i               1   50[BANK1 ] unsigned char 
 23973 ;; Return value:  Size  Location     Type
 23974 ;;                  1    wreg      unsigned char 
 23975 ;; Registers used:
 23976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23977 ;; Tracked objects:
 23978 ;;		On entry : 0/0
 23979 ;;		On exit  : 0/0
 23980 ;;		Unchanged: 0/0
 23981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23982 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23983 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23984 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23985 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23986 ;;Total ram usage:       15 bytes
 23987 ;; Hardware stack levels used:    1
 23988 ;; Hardware stack levels required when called:   18
 23989 ;; This function calls:
 23990 ;;		_CBC_MAC
 23991 ;;		_CTR
 23992 ;; This function is called by:
 23993 ;;		_MiMAC_ReceivedPacket
 23994 ;; This function uses a non-reentrant model
 23995 ;;
 23996                           
 23997                           	psect	text52
 23998  007E6A                     __ptext52:
 23999                           	opt stack 0
 24000  007E6A                     _CCM_Dec:
 24001                           	opt stack 10
 24002                           
 24003                           ;drv_mrf_miwi_security.c: 300: uint8_t i;
 24004                           ;drv_mrf_miwi_security.c: 307: for(i = 0; i < 4-1; i++)
 24005                           
 24006                           ; BSR set to: 1
 24007                           ;incstack = 0
 24008  007E6A  0E00               	movlw	0
 24009  007E6C  0101               	movlb	1	; () banked
 24010  007E6E  6F32               	movwf	CCM_Dec@i& (0+255),b
 24011  007E70                     l17174:
 24012                           
 24013                           ; BSR set to: 1
 24014  007E70  0E02               	movlw	2
 24015  007E72  0101               	movlb	1	; () banked
 24016  007E74  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 24017  007E76  D001               	goto	l17178
 24018  007E78  D02D               	goto	l17188
 24019  007E7A                     l17178:
 24020                           
 24021                           ; BSR set to: 1
 24022                           ;drv_mrf_miwi_security.c: 308: {
 24023                           ;drv_mrf_miwi_security.c: 309: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 24024  007E7A  0101               	movlb	1	; () banked
 24025  007E7C  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24026  007E7E  0101               	movlb	1	; () banked
 24027  007E80  5D32               	subwf	CCM_Dec@i& (0+255),w,b
 24028  007E82  A0D8               	btfss	status,0,c
 24029  007E84  D006               	goto	l17182
 24030                           
 24031                           ; BSR set to: 1
 24032  007E86  0E00               	movlw	0
 24033  007E88  0101               	movlb	1	; () banked
 24034  007E8A  6F31               	movwf	(_CCM_Dec$1986+1)& (0+255),b
 24035  007E8C  0E00               	movlw	0
 24036  007E8E  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 24037  007E90  D013               	goto	l495
 24038  007E92                     l17182:
 24039                           
 24040                           ; BSR set to: 1
 24041  007E92  0101               	movlb	1	; () banked
 24042  007E94  5132               	movf	CCM_Dec@i& (0+255),w,b
 24043  007E96  0D01               	mullw	1
 24044  007E98  50F3               	movf	prodl,w,c
 24045  007E9A  0101               	movlb	1	; () banked
 24046  007E9C  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24047  007E9E  6ED9               	movwf	fsr2l,c
 24048  007EA0  50F4               	movf	prodh,w,c
 24049  007EA2  0101               	movlb	1	; () banked
 24050  007EA4  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24051  007EA6  6EDA               	movwf	fsr2h,c
 24052  007EA8  50DF               	movf	indf2,w,c
 24053  007EAA  0101               	movlb	1	; () banked
 24054  007EAC  6F2A               	movwf	??_CCM_Dec& (0+255),b
 24055  007EAE  0101               	movlb	1	; () banked
 24056  007EB0  512A               	movf	??_CCM_Dec& (0+255),w,b
 24057  007EB2  0101               	movlb	1	; () banked
 24058  007EB4  6F30               	movwf	_CCM_Dec$1986& (0+255),b
 24059  007EB6  6B31               	clrf	(_CCM_Dec$1986+1)& (0+255),b
 24060  007EB8                     l495:
 24061                           
 24062                           ; BSR set to: 1
 24063  007EB8  0101               	movlb	1	; () banked
 24064  007EBA  5132               	movf	CCM_Dec@i& (0+255),w,b
 24065  007EBC  0D01               	mullw	1
 24066  007EBE  0EEC               	movlw	low _tmpBlock
 24067  007EC0  24F3               	addwf	prodl,w,c
 24068  007EC2  6ED9               	movwf	fsr2l,c
 24069  007EC4  0E01               	movlw	high _tmpBlock
 24070  007EC6  20F4               	addwfc	prodh,w,c
 24071  007EC8  6EDA               	movwf	fsr2h,c
 24072  007ECA  C130  FFDF         	movff	_CCM_Dec$1986,indf2
 24073                           
 24074                           ; BSR set to: 1
 24075  007ECE  0101               	movlb	1	; () banked
 24076  007ED0  2B32               	incf	CCM_Dec@i& (0+255),f,b
 24077  007ED2  D7CE               	goto	l17174
 24078  007ED4                     l17188:
 24079                           
 24080                           ; BSR set to: 1
 24081                           ;drv_mrf_miwi_security.c: 310: }
 24082                           ;drv_mrf_miwi_security.c: 311: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 24083  007ED4  0101               	movlb	1	; () banked
 24084  007ED6  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24085  007ED8  0D01               	mullw	1
 24086  007EDA  50F3               	movf	prodl,w,c
 24087  007EDC  0101               	movlb	1	; () banked
 24088  007EDE  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24089  007EE0  0101               	movlb	1	; () banked
 24090  007EE2  6F17               	movwf	CTR@text& (0+255),b
 24091  007EE4  50F4               	movf	prodh,w,c
 24092  007EE6  0101               	movlb	1	; () banked
 24093  007EE8  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24094  007EEA  0101               	movlb	1	; () banked
 24095  007EEC  6F18               	movwf	(CTR@text+1)& (0+255),b
 24096  007EEE  C127  F119         	movff	CCM_Dec@payloadLen,CTR@len
 24097  007EF2  C128  F11A         	movff	CCM_Dec@key,CTR@key
 24098  007EF6  C129  F11B         	movff	CCM_Dec@key+1,CTR@key+1
 24099  007EFA  0EEC               	movlw	low _tmpBlock
 24100  007EFC  0101               	movlb	1	; () banked
 24101  007EFE  6F1C               	movwf	CTR@nounce& (0+255),b
 24102  007F00  0E01               	movlw	high _tmpBlock
 24103  007F02  0101               	movlb	1	; () banked
 24104  007F04  6F1D               	movwf	(CTR@nounce+1)& (0+255),b
 24105  007F06  ECA3  F046         	call	_CTR	;wreg free
 24106                           
 24107                           ;drv_mrf_miwi_security.c: 313: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock
      +                          );
 24108  007F0A  C124  F117         	movff	CCM_Dec@text,CBC_MAC@text
 24109  007F0E  C125  F118         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 24110  007F12  0101               	movlb	1	; () banked
 24111  007F14  5126               	movf	CCM_Dec@headerLen& (0+255),w,b
 24112  007F16  0101               	movlb	1	; () banked
 24113  007F18  2527               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 24114  007F1A  0FFE               	addlw	254
 24115  007F1C  0101               	movlb	1	; () banked
 24116  007F1E  6F19               	movwf	CBC_MAC@len& (0+255),b
 24117  007F20  C128  F11A         	movff	CCM_Dec@key,CBC_MAC@key
 24118  007F24  C129  F11B         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 24119  007F28  0EEC               	movlw	low _tmpBlock
 24120  007F2A  0101               	movlb	1	; () banked
 24121  007F2C  6F1C               	movwf	CBC_MAC@MIC& (0+255),b
 24122  007F2E  0E01               	movlw	high _tmpBlock
 24123  007F30  0101               	movlb	1	; () banked
 24124  007F32  6F1D               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 24125  007F34  ECCB  F048         	call	_CBC_MAC	;wreg free
 24126                           
 24127                           ;drv_mrf_miwi_security.c: 314: for(i = 0; i < 2; i++)
 24128  007F38  0E00               	movlw	0
 24129  007F3A  0101               	movlb	1	; () banked
 24130  007F3C  6F32               	movwf	CCM_Dec@i& (0+255),b
 24131  007F3E                     l17194:
 24132                           
 24133                           ; BSR set to: 1
 24134  007F3E  0E01               	movlw	1
 24135  007F40  0101               	movlb	1	; () banked
 24136  007F42  6532               	cpfsgt	CCM_Dec@i& (0+255),b
 24137  007F44  D001               	goto	l17198
 24138  007F46  D03A               	goto	l17208
 24139  007F48                     l17198:
 24140                           
 24141                           ; BSR set to: 1
 24142                           ;drv_mrf_miwi_security.c: 315: {
 24143                           ;drv_mrf_miwi_security.c: 316: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
 24144  007F48  0EFE               	movlw	254
 24145  007F4A  0101               	movlb	1	; () banked
 24146  007F4C  6F2A               	movwf	??_CCM_Dec& (0+255),b
 24147  007F4E  0EFF               	movlw	255
 24148  007F50  0101               	movlb	1	; () banked
 24149  007F52  6F2B               	movwf	(??_CCM_Dec+1)& (0+255),b
 24150  007F54  0101               	movlb	1	; () banked
 24151  007F56  5127               	movf	CCM_Dec@payloadLen& (0+255),w,b
 24152  007F58  C126  F12C         	movff	CCM_Dec@headerLen,??_CCM_Dec+2
 24153  007F5C  0101               	movlb	1	; () banked
 24154  007F5E  6B2D               	clrf	(??_CCM_Dec+3)& (0+255),b
 24155  007F60  0101               	movlb	1	; () banked
 24156  007F62  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24157  007F64  0E00               	movlw	0
 24158  007F66  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24159  007F68  0101               	movlb	1	; () banked
 24160  007F6A  5132               	movf	CCM_Dec@i& (0+255),w,b
 24161  007F6C  0101               	movlb	1	; () banked
 24162  007F6E  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24163  007F70  0E00               	movlw	0
 24164  007F72  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24165  007F74  0101               	movlb	1	; () banked
 24166  007F76  512A               	movf	??_CCM_Dec& (0+255),w,b
 24167  007F78  0101               	movlb	1	; () banked
 24168  007F7A  272C               	addwf	(??_CCM_Dec+2)& (0+255),f,b
 24169  007F7C  0101               	movlb	1	; () banked
 24170  007F7E  512B               	movf	(??_CCM_Dec+1)& (0+255),w,b
 24171  007F80  0101               	movlb	1	; () banked
 24172  007F82  232D               	addwfc	(??_CCM_Dec+3)& (0+255),f,b
 24173  007F84  0101               	movlb	1	; () banked
 24174  007F86  512C               	movf	(??_CCM_Dec+2)& (0+255),w,b
 24175  007F88  0101               	movlb	1	; () banked
 24176  007F8A  2524               	addwf	CCM_Dec@text& (0+255),w,b
 24177  007F8C  6ED9               	movwf	fsr2l,c
 24178  007F8E  0101               	movlb	1	; () banked
 24179  007F90  512D               	movf	(??_CCM_Dec+3)& (0+255),w,b
 24180  007F92  0101               	movlb	1	; () banked
 24181  007F94  2125               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24182  007F96  6EDA               	movwf	fsr2h,c
 24183  007F98  0101               	movlb	1	; () banked
 24184  007F9A  5132               	movf	CCM_Dec@i& (0+255),w,b
 24185  007F9C  0D01               	mullw	1
 24186  007F9E  0EEC               	movlw	low _tmpBlock
 24187  007FA0  24F3               	addwf	prodl,w,c
 24188  007FA2  6EE1               	movwf	fsr1l,c
 24189  007FA4  0E01               	movlw	high _tmpBlock
 24190  007FA6  20F4               	addwfc	prodh,w,c
 24191  007FA8  6EE2               	movwf	fsr1h,c
 24192  007FAA  50DE               	movf	postinc2,w,c
 24193  007FAC  18E6               	xorwf	postinc1,w,c
 24194  007FAE  B4D8               	btfsc	status,2,c
 24195  007FB0  D002               	goto	l17204
 24196                           
 24197                           ; BSR set to: 1
 24198                           ;drv_mrf_miwi_security.c: 317: {
 24199                           ;drv_mrf_miwi_security.c: 321: return 0;
 24200  007FB2  0E00               	movlw	0
 24201                           
 24202                           ; BSR set to: 1
 24203  007FB4  0012               	return	
 24204  007FB6                     l17204:
 24205                           
 24206                           ; BSR set to: 1
 24207  007FB6  0101               	movlb	1	; () banked
 24208  007FB8  2B32               	incf	CCM_Dec@i& (0+255),f,b
 24209  007FBA  D7C1               	goto	l17194
 24210  007FBC                     l17208:
 24211                           
 24212                           ; BSR set to: 1
 24213                           ;drv_mrf_miwi_security.c: 322: }
 24214                           ;drv_mrf_miwi_security.c: 323: }
 24215                           ;drv_mrf_miwi_security.c: 327: return 1;
 24216  007FBC  0E01               	movlw	1
 24217  007FBE  0012               	return	
 24218  007FC0                     __end_of_CCM_Dec:
 24219                           	opt stack 0
 24220                           tblptru	equ	0xFF8
 24221                           tblptrh	equ	0xFF7
 24222                           tblptrl	equ	0xFF6
 24223                           tablat	equ	0xFF5
 24224                           prodh	equ	0xFF4
 24225                           prodl	equ	0xFF3
 24226                           intcon	equ	0xFF2
 24227                           intcon2	equ	0xFF1
 24228                           intcon3	equ	0xFF0
 24229                           indf0	equ	0xFEF
 24230                           postinc0	equ	0xFEE
 24231                           plusw0	equ	0xFEB
 24232                           fsr0h	equ	0xFEA
 24233                           fsr0l	equ	0xFE9
 24234                           wreg	equ	0xFE8
 24235                           indf1	equ	0xFE7
 24236                           postinc1	equ	0xFE6
 24237                           postdec1	equ	0xFE5
 24238                           fsr1h	equ	0xFE2
 24239                           fsr1l	equ	0xFE1
 24240                           indf2	equ	0xFDF
 24241                           postinc2	equ	0xFDE
 24242                           postdec2	equ	0xFDD
 24243                           plusw2	equ	0xFDB
 24244                           fsr2h	equ	0xFDA
 24245                           fsr2l	equ	0xFD9
 24246                           status	equ	0xFD8
 24247                           
 24248 ;; *************** function _CTR *****************
 24249 ;; Defined at:
 24250 ;;		line 117 in file "src/miwi/drv_mrf_miwi_security.c"
 24251 ;; Parameters:    Size  Location     Type
 24252 ;;  text            2   23[BANK1 ] PTR unsigned char 
 24253 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 24254 ;;  len             1   25[BANK1 ] unsigned char 
 24255 ;;  key             2   26[BANK1 ] PTR unsigned char 
 24256 ;;		 -> key(8), 
 24257 ;;  nounce          2   28[BANK1 ] PTR unsigned char 
 24258 ;;		 -> tmpBlock(4), 
 24259 ;; Auto vars:     Size  Location     Type
 24260 ;;  j               1   35[BANK1 ] unsigned char 
 24261 ;;  i               1   34[BANK1 ] unsigned char 
 24262 ;;  block           1   33[BANK1 ] unsigned char 
 24263 ;; Return value:  Size  Location     Type
 24264 ;;		None               void
 24265 ;; Registers used:
 24266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24267 ;; Tracked objects:
 24268 ;;		On entry : 0/0
 24269 ;;		On exit  : 0/0
 24270 ;;		Unchanged: 0/0
 24271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24272 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24273 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24274 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24275 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24276 ;;Total ram usage:       13 bytes
 24277 ;; Hardware stack levels used:    1
 24278 ;; Hardware stack levels required when called:   17
 24279 ;; This function calls:
 24280 ;;		___awdiv
 24281 ;;		_encode
 24282 ;; This function is called by:
 24283 ;;		_CCM_Enc
 24284 ;;		_CCM_Dec
 24285 ;; This function uses a non-reentrant model
 24286 ;;
 24287                           
 24288                           	psect	text53
 24289  008D46                     __ptext53:
 24290                           	opt stack 0
 24291  008D46                     _CTR:
 24292                           	opt stack 7
 24293                           
 24294                           ;drv_mrf_miwi_security.c: 119: uint8_t block = len/4+1;
 24295                           
 24296                           ; BSR set to: 1
 24297                           ;incstack = 0
 24298  008D46  C119  F106         	movff	CTR@len,___awdiv@dividend
 24299  008D4A  0101               	movlb	1	; () banked
 24300  008D4C  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24301  008D4E  0E00               	movlw	0
 24302  008D50  0101               	movlb	1	; () banked
 24303  008D52  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24304  008D54  0E04               	movlw	4
 24305  008D56  6F08               	movwf	___awdiv@divisor& (0+255),b
 24306  008D58  EC9C  F050         	call	___awdiv	;wreg free
 24307  008D5C  0101               	movlb	1	; () banked
 24308  008D5E  2906               	incf	?___awdiv& (0+255),w,b
 24309  008D60  0101               	movlb	1	; () banked
 24310  008D62  6F21               	movwf	CTR@block& (0+255),b
 24311                           
 24312                           ; BSR set to: 1
 24313                           ;drv_mrf_miwi_security.c: 120: uint8_t i, j;
 24314                           ;drv_mrf_miwi_security.c: 127: for(i = 0; i < block; i++)
 24315  008D64  0E00               	movlw	0
 24316  008D66  0101               	movlb	1	; () banked
 24317  008D68  6F22               	movwf	CTR@i& (0+255),b
 24318  008D6A  D076               	goto	l16830
 24319  008D6C                     l16798:
 24320                           
 24321                           ; BSR set to: 1
 24322                           ;drv_mrf_miwi_security.c: 128: {
 24323                           ;drv_mrf_miwi_security.c: 129: for(j = 0; j < 4-1; j++)
 24324  008D6C  0E00               	movlw	0
 24325  008D6E  0101               	movlb	1	; () banked
 24326  008D70  6F23               	movwf	CTR@j& (0+255),b
 24327  008D72                     l16800:
 24328                           
 24329                           ; BSR set to: 1
 24330  008D72  0E02               	movlw	2
 24331  008D74  0101               	movlb	1	; () banked
 24332  008D76  6523               	cpfsgt	CTR@j& (0+255),b
 24333  008D78  D001               	goto	l16804
 24334  008D7A  D019               	goto	l460
 24335  008D7C                     l16804:
 24336                           
 24337                           ; BSR set to: 1
 24338                           ;drv_mrf_miwi_security.c: 130: {
 24339                           ;drv_mrf_miwi_security.c: 131: tmpBlock[j] = nounce[j];
 24340  008D7C  0101               	movlb	1	; () banked
 24341  008D7E  5123               	movf	CTR@j& (0+255),w,b
 24342  008D80  0D01               	mullw	1
 24343  008D82  50F3               	movf	prodl,w,c
 24344  008D84  0101               	movlb	1	; () banked
 24345  008D86  251C               	addwf	CTR@nounce& (0+255),w,b
 24346  008D88  6ED9               	movwf	fsr2l,c
 24347  008D8A  50F4               	movf	prodh,w,c
 24348  008D8C  0101               	movlb	1	; () banked
 24349  008D8E  211D               	addwfc	(CTR@nounce+1)& (0+255),w,b
 24350  008D90  6EDA               	movwf	fsr2h,c
 24351  008D92  0101               	movlb	1	; () banked
 24352  008D94  5123               	movf	CTR@j& (0+255),w,b
 24353  008D96  0D01               	mullw	1
 24354  008D98  0EEC               	movlw	low _tmpBlock
 24355  008D9A  24F3               	addwf	prodl,w,c
 24356  008D9C  6EE1               	movwf	fsr1l,c
 24357  008D9E  0E01               	movlw	high _tmpBlock
 24358  008DA0  20F4               	addwfc	prodh,w,c
 24359  008DA2  6EE2               	movwf	fsr1h,c
 24360  008DA4  CFDF FFE7          	movff	indf2,indf1
 24361                           
 24362                           ; BSR set to: 1
 24363  008DA8  0101               	movlb	1	; () banked
 24364  008DAA  2B23               	incf	CTR@j& (0+255),f,b
 24365  008DAC  D7E2               	goto	l16800
 24366  008DAE                     l460:
 24367                           
 24368                           ; BSR set to: 1
 24369                           ;drv_mrf_miwi_security.c: 132: }
 24370                           ;drv_mrf_miwi_security.c: 133: tmpBlock[4-1] = i;
 24371  008DAE  C122  F1EF         	movff	CTR@i,_tmpBlock+3
 24372                           
 24373                           ; BSR set to: 1
 24374                           ;drv_mrf_miwi_security.c: 134: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 24375  008DB2  0EEC               	movlw	low _tmpBlock
 24376  008DB4  0101               	movlb	1	; () banked
 24377  008DB6  6F00               	movwf	encode@text& (0+255),b
 24378  008DB8  0E01               	movlw	high _tmpBlock
 24379  008DBA  0101               	movlb	1	; () banked
 24380  008DBC  6F01               	movwf	(encode@text+1)& (0+255),b
 24381  008DBE  C11A  F102         	movff	CTR@key,encode@key
 24382  008DC2  C11B  F103         	movff	CTR@key+1,encode@key+1
 24383  008DC6  ECCC  F036         	call	_encode	;wreg free
 24384                           
 24385                           ;drv_mrf_miwi_security.c: 135: for(j = 0; j < 4; j++)
 24386  008DCA  0E00               	movlw	0
 24387  008DCC  0101               	movlb	1	; () banked
 24388  008DCE  6F23               	movwf	CTR@j& (0+255),b
 24389  008DD0                     l16814:
 24390                           
 24391                           ; BSR set to: 1
 24392  008DD0  0E03               	movlw	3
 24393  008DD2  0101               	movlb	1	; () banked
 24394  008DD4  6523               	cpfsgt	CTR@j& (0+255),b
 24395  008DD6  D001               	goto	l16818
 24396  008DD8  D03D               	goto	l16828
 24397  008DDA                     l16818:
 24398                           
 24399                           ; BSR set to: 1
 24400                           ;drv_mrf_miwi_security.c: 136: {
 24401                           ;drv_mrf_miwi_security.c: 137: if( (i * 4 + j) >= len )
 24402  008DDA  0101               	movlb	1	; () banked
 24403  008DDC  5119               	movf	CTR@len& (0+255),w,b
 24404  008DDE  0101               	movlb	1	; () banked
 24405  008DE0  6F1E               	movwf	??_CTR& (0+255),b
 24406  008DE2  6B1F               	clrf	(??_CTR+1)& (0+255),b
 24407  008DE4  0101               	movlb	1	; () banked
 24408  008DE6  5122               	movf	CTR@i& (0+255),w,b
 24409  008DE8  0D04               	mullw	4
 24410  008DEA  0101               	movlb	1	; () banked
 24411  008DEC  5123               	movf	CTR@j& (0+255),w,b
 24412  008DEE  26F3               	addwf	prodl,f,c
 24413  008DF0  0E00               	movlw	0
 24414  008DF2  22F4               	addwfc	prodh,f,c
 24415  008DF4  0101               	movlb	1	; () banked
 24416  008DF6  511E               	movf	??_CTR& (0+255),w,b
 24417  008DF8  5CF3               	subwf	prodl,w,c
 24418  008DFA  50F4               	movf	prodh,w,c
 24419  008DFC  0A80               	xorlw	128
 24420  008DFE  0101               	movlb	1	; () banked
 24421  008E00  6F20               	movwf	(??_CTR+2)& (0+255),b
 24422  008E02  0101               	movlb	1	; () banked
 24423  008E04  511F               	movf	(??_CTR+1)& (0+255),w,b
 24424  008E06  0A80               	xorlw	128
 24425  008E08  0101               	movlb	1	; () banked
 24426  008E0A  5920               	subwfb	(??_CTR+2)& (0+255),w,b
 24427  008E0C  B0D8               	btfsc	status,0,c
 24428  008E0E  D022               	goto	l16828
 24429                           
 24430                           ; BSR set to: 1
 24431                           ;drv_mrf_miwi_security.c: 140: }
 24432                           ;drv_mrf_miwi_security.c: 141: text[i * 4 + j] ^= tmpBlock[j];
 24433                           
 24434                           ; BSR set to: 1
 24435                           
 24436                           ; BSR set to: 1
 24437                           ;drv_mrf_miwi_security.c: 138: {
 24438                           ;drv_mrf_miwi_security.c: 139: break;
 24439  008E10  0101               	movlb	1	; () banked
 24440  008E12  5123               	movf	CTR@j& (0+255),w,b
 24441  008E14  0D01               	mullw	1
 24442  008E16  0EEC               	movlw	low _tmpBlock
 24443  008E18  24F3               	addwf	prodl,w,c
 24444  008E1A  6ED9               	movwf	fsr2l,c
 24445  008E1C  0E01               	movlw	high _tmpBlock
 24446  008E1E  20F4               	addwfc	prodh,w,c
 24447  008E20  6EDA               	movwf	fsr2h,c
 24448  008E22  50DF               	movf	indf2,w,c
 24449  008E24  0101               	movlb	1	; () banked
 24450  008E26  6F1E               	movwf	??_CTR& (0+255),b
 24451  008E28  0101               	movlb	1	; () banked
 24452  008E2A  5122               	movf	CTR@i& (0+255),w,b
 24453  008E2C  0D04               	mullw	4
 24454  008E2E  0101               	movlb	1	; () banked
 24455  008E30  5123               	movf	CTR@j& (0+255),w,b
 24456  008E32  26F3               	addwf	prodl,f,c
 24457  008E34  0E00               	movlw	0
 24458  008E36  22F4               	addwfc	prodh,f,c
 24459  008E38  50F3               	movf	prodl,w,c
 24460  008E3A  0101               	movlb	1	; () banked
 24461  008E3C  2517               	addwf	CTR@text& (0+255),w,b
 24462  008E3E  6ED9               	movwf	fsr2l,c
 24463  008E40  50F4               	movf	prodh,w,c
 24464  008E42  0101               	movlb	1	; () banked
 24465  008E44  2118               	addwfc	(CTR@text+1)& (0+255),w,b
 24466  008E46  6EDA               	movwf	fsr2h,c
 24467  008E48  0101               	movlb	1	; () banked
 24468  008E4A  511E               	movf	??_CTR& (0+255),w,b
 24469  008E4C  1ADF               	xorwf	indf2,f,c
 24470                           
 24471                           ; BSR set to: 1
 24472  008E4E  0101               	movlb	1	; () banked
 24473  008E50  2B23               	incf	CTR@j& (0+255),f,b
 24474  008E52  D7BE               	goto	l16814
 24475  008E54                     l16828:
 24476                           
 24477                           ; BSR set to: 1
 24478  008E54  0101               	movlb	1	; () banked
 24479  008E56  2B22               	incf	CTR@i& (0+255),f,b
 24480  008E58                     l16830:
 24481                           
 24482                           ; BSR set to: 1
 24483  008E58  0101               	movlb	1	; () banked
 24484  008E5A  5121               	movf	CTR@block& (0+255),w,b
 24485  008E5C  0101               	movlb	1	; () banked
 24486  008E5E  5D22               	subwf	CTR@i& (0+255),w,b
 24487  008E60  B0D8               	btfsc	status,0,c
 24488  008E62  0012               	return	
 24489  008E64  D783               	goto	l16798
 24490  008E66                     __end_of_CTR:
 24491                           	opt stack 0
 24492                           tblptru	equ	0xFF8
 24493                           tblptrh	equ	0xFF7
 24494                           tblptrl	equ	0xFF6
 24495                           tablat	equ	0xFF5
 24496                           prodh	equ	0xFF4
 24497                           prodl	equ	0xFF3
 24498                           intcon	equ	0xFF2
 24499                           intcon2	equ	0xFF1
 24500                           intcon3	equ	0xFF0
 24501                           indf0	equ	0xFEF
 24502                           postinc0	equ	0xFEE
 24503                           plusw0	equ	0xFEB
 24504                           fsr0h	equ	0xFEA
 24505                           fsr0l	equ	0xFE9
 24506                           wreg	equ	0xFE8
 24507                           indf1	equ	0xFE7
 24508                           postinc1	equ	0xFE6
 24509                           postdec1	equ	0xFE5
 24510                           fsr1h	equ	0xFE2
 24511                           fsr1l	equ	0xFE1
 24512                           indf2	equ	0xFDF
 24513                           postinc2	equ	0xFDE
 24514                           postdec2	equ	0xFDD
 24515                           plusw2	equ	0xFDB
 24516                           fsr2h	equ	0xFDA
 24517                           fsr2l	equ	0xFD9
 24518                           status	equ	0xFD8
 24519                           
 24520 ;; *************** function _CBC_MAC *****************
 24521 ;; Defined at:
 24522 ;;		line 174 in file "src/miwi/drv_mrf_miwi_security.c"
 24523 ;; Parameters:    Size  Location     Type
 24524 ;;  text            2   23[BANK1 ] PTR unsigned char 
 24525 ;;		 -> RxPacket.Payload(64), RxPacket(132), MACTxBuffer(64), 
 24526 ;;  len             1   25[BANK1 ] unsigned char 
 24527 ;;  key             2   26[BANK1 ] PTR unsigned char 
 24528 ;;		 -> key(8), 
 24529 ;;  MIC             2   28[BANK1 ] PTR unsigned char 
 24530 ;;		 -> tmpBlock(4), 
 24531 ;; Auto vars:     Size  Location     Type
 24532 ;;  i               1   35[BANK1 ] unsigned char 
 24533 ;;  j               1   34[BANK1 ] unsigned char 
 24534 ;;  block           1   33[BANK1 ] unsigned char 
 24535 ;; Return value:  Size  Location     Type
 24536 ;;		None               void
 24537 ;; Registers used:
 24538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24539 ;; Tracked objects:
 24540 ;;		On entry : 0/0
 24541 ;;		On exit  : 0/0
 24542 ;;		Unchanged: 0/0
 24543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24544 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24545 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24546 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24547 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24548 ;;Total ram usage:       13 bytes
 24549 ;; Hardware stack levels used:    1
 24550 ;; Hardware stack levels required when called:   17
 24551 ;; This function calls:
 24552 ;;		___awdiv
 24553 ;;		_encode
 24554 ;; This function is called by:
 24555 ;;		_CCM_Enc
 24556 ;;		_CCM_Dec
 24557 ;; This function uses a non-reentrant model
 24558 ;;
 24559                           
 24560                           	psect	text54
 24561  009196                     __ptext54:
 24562                           	opt stack 0
 24563  009196                     _CBC_MAC:
 24564                           	opt stack 7
 24565                           
 24566                           ;drv_mrf_miwi_security.c: 179: uint8_t block = len / 4 + 1;
 24567                           
 24568                           ; BSR set to: 1
 24569                           ;incstack = 0
 24570  009196  C119  F106         	movff	CBC_MAC@len,___awdiv@dividend
 24571  00919A  0101               	movlb	1	; () banked
 24572  00919C  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 24573  00919E  0E00               	movlw	0
 24574  0091A0  0101               	movlb	1	; () banked
 24575  0091A2  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 24576  0091A4  0E04               	movlw	4
 24577  0091A6  6F08               	movwf	___awdiv@divisor& (0+255),b
 24578  0091A8  EC9C  F050         	call	___awdiv	;wreg free
 24579  0091AC  0101               	movlb	1	; () banked
 24580  0091AE  2906               	incf	?___awdiv& (0+255),w,b
 24581  0091B0  0101               	movlb	1	; () banked
 24582  0091B2  6F21               	movwf	CBC_MAC@block& (0+255),b
 24583                           
 24584                           ; BSR set to: 1
 24585                           ;drv_mrf_miwi_security.c: 180: uint8_t i, j;
 24586                           ;drv_mrf_miwi_security.c: 187: for(i = 0; i < 4; i++)
 24587  0091B4  0E00               	movlw	0
 24588  0091B6  0101               	movlb	1	; () banked
 24589  0091B8  6F23               	movwf	CBC_MAC@i& (0+255),b
 24590  0091BA                     l16836:
 24591                           
 24592                           ; BSR set to: 1
 24593  0091BA  0E03               	movlw	3
 24594  0091BC  0101               	movlb	1	; () banked
 24595  0091BE  6523               	cpfsgt	CBC_MAC@i& (0+255),b
 24596  0091C0  D001               	goto	l16840
 24597  0091C2  D010               	goto	l16846
 24598  0091C4                     l16840:
 24599                           
 24600                           ; BSR set to: 1
 24601                           ;drv_mrf_miwi_security.c: 188: {
 24602                           ;drv_mrf_miwi_security.c: 189: MIC[i] = 0;
 24603  0091C4  0101               	movlb	1	; () banked
 24604  0091C6  5123               	movf	CBC_MAC@i& (0+255),w,b
 24605  0091C8  0D01               	mullw	1
 24606  0091CA  50F3               	movf	prodl,w,c
 24607  0091CC  0101               	movlb	1	; () banked
 24608  0091CE  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 24609  0091D0  6ED9               	movwf	fsr2l,c
 24610  0091D2  50F4               	movf	prodh,w,c
 24611  0091D4  0101               	movlb	1	; () banked
 24612  0091D6  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24613  0091D8  6EDA               	movwf	fsr2h,c
 24614  0091DA  0E00               	movlw	0
 24615  0091DC  6EDF               	movwf	indf2,c
 24616                           
 24617                           ; BSR set to: 1
 24618  0091DE  0101               	movlb	1	; () banked
 24619  0091E0  2B23               	incf	CBC_MAC@i& (0+255),f,b
 24620  0091E2  D7EB               	goto	l16836
 24621  0091E4                     l16846:
 24622                           
 24623                           ; BSR set to: 1
 24624                           ;drv_mrf_miwi_security.c: 190: }
 24625                           ;drv_mrf_miwi_security.c: 192: for(i = 0; i < block; i++)
 24626  0091E4  0E00               	movlw	0
 24627  0091E6  0101               	movlb	1	; () banked
 24628  0091E8  6F23               	movwf	CBC_MAC@i& (0+255),b
 24629  0091EA  D053               	goto	l16868
 24630  0091EC                     l16848:
 24631                           
 24632                           ; BSR set to: 1
 24633                           ;drv_mrf_miwi_security.c: 193: {
 24634                           ;drv_mrf_miwi_security.c: 194: for(j = 0; j < 4; j++)
 24635  0091EC  0E00               	movlw	0
 24636  0091EE  0101               	movlb	1	; () banked
 24637  0091F0  6F22               	movwf	CBC_MAC@j& (0+255),b
 24638  0091F2                     l16850:
 24639                           
 24640                           ; BSR set to: 1
 24641  0091F2  0E03               	movlw	3
 24642  0091F4  0101               	movlb	1	; () banked
 24643  0091F6  6522               	cpfsgt	CBC_MAC@j& (0+255),b
 24644  0091F8  D001               	goto	l16854
 24645  0091FA  D03F               	goto	l16864
 24646  0091FC                     l16854:
 24647                           
 24648                           ; BSR set to: 1
 24649                           ;drv_mrf_miwi_security.c: 195: {
 24650                           ;drv_mrf_miwi_security.c: 196: if( (i * 4 + j) >= len )
 24651  0091FC  0101               	movlb	1	; () banked
 24652  0091FE  5119               	movf	CBC_MAC@len& (0+255),w,b
 24653  009200  0101               	movlb	1	; () banked
 24654  009202  6F1E               	movwf	??_CBC_MAC& (0+255),b
 24655  009204  6B1F               	clrf	(??_CBC_MAC+1)& (0+255),b
 24656  009206  0101               	movlb	1	; () banked
 24657  009208  5123               	movf	CBC_MAC@i& (0+255),w,b
 24658  00920A  0D04               	mullw	4
 24659  00920C  0101               	movlb	1	; () banked
 24660  00920E  5122               	movf	CBC_MAC@j& (0+255),w,b
 24661  009210  26F3               	addwf	prodl,f,c
 24662  009212  0E00               	movlw	0
 24663  009214  22F4               	addwfc	prodh,f,c
 24664  009216  0101               	movlb	1	; () banked
 24665  009218  511E               	movf	??_CBC_MAC& (0+255),w,b
 24666  00921A  5CF3               	subwf	prodl,w,c
 24667  00921C  50F4               	movf	prodh,w,c
 24668  00921E  0A80               	xorlw	128
 24669  009220  0101               	movlb	1	; () banked
 24670  009222  6F20               	movwf	(??_CBC_MAC+2)& (0+255),b
 24671  009224  0101               	movlb	1	; () banked
 24672  009226  511F               	movf	(??_CBC_MAC+1)& (0+255),w,b
 24673  009228  0A80               	xorlw	128
 24674  00922A  0101               	movlb	1	; () banked
 24675  00922C  5920               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 24676  00922E  B0D8               	btfsc	status,0,c
 24677  009230  D024               	goto	l16864
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;drv_mrf_miwi_security.c: 199: }
 24681                           ;drv_mrf_miwi_security.c: 200: MIC[j] ^= text[i * 4 + j];
 24682                           
 24683                           ; BSR set to: 1
 24684                           
 24685                           ; BSR set to: 1
 24686                           ;drv_mrf_miwi_security.c: 197: {
 24687                           ;drv_mrf_miwi_security.c: 198: break;
 24688  009232  0101               	movlb	1	; () banked
 24689  009234  5123               	movf	CBC_MAC@i& (0+255),w,b
 24690  009236  0D04               	mullw	4
 24691  009238  0101               	movlb	1	; () banked
 24692  00923A  5122               	movf	CBC_MAC@j& (0+255),w,b
 24693  00923C  26F3               	addwf	prodl,f,c
 24694  00923E  0E00               	movlw	0
 24695  009240  22F4               	addwfc	prodh,f,c
 24696  009242  50F3               	movf	prodl,w,c
 24697  009244  0101               	movlb	1	; () banked
 24698  009246  2517               	addwf	CBC_MAC@text& (0+255),w,b
 24699  009248  6ED9               	movwf	fsr2l,c
 24700  00924A  50F4               	movf	prodh,w,c
 24701  00924C  0101               	movlb	1	; () banked
 24702  00924E  2118               	addwfc	(CBC_MAC@text+1)& (0+255),w,b
 24703  009250  6EDA               	movwf	fsr2h,c
 24704  009252  50DF               	movf	indf2,w,c
 24705  009254  0101               	movlb	1	; () banked
 24706  009256  6F1E               	movwf	??_CBC_MAC& (0+255),b
 24707  009258  0101               	movlb	1	; () banked
 24708  00925A  5122               	movf	CBC_MAC@j& (0+255),w,b
 24709  00925C  0D01               	mullw	1
 24710  00925E  50F3               	movf	prodl,w,c
 24711  009260  0101               	movlb	1	; () banked
 24712  009262  251C               	addwf	CBC_MAC@MIC& (0+255),w,b
 24713  009264  6ED9               	movwf	fsr2l,c
 24714  009266  50F4               	movf	prodh,w,c
 24715  009268  0101               	movlb	1	; () banked
 24716  00926A  211D               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24717  00926C  6EDA               	movwf	fsr2h,c
 24718  00926E  0101               	movlb	1	; () banked
 24719  009270  511E               	movf	??_CBC_MAC& (0+255),w,b
 24720  009272  1ADF               	xorwf	indf2,f,c
 24721                           
 24722                           ; BSR set to: 1
 24723  009274  0101               	movlb	1	; () banked
 24724  009276  2B22               	incf	CBC_MAC@j& (0+255),f,b
 24725  009278  D7BC               	goto	l16850
 24726  00927A                     l16864:
 24727                           
 24728                           ; BSR set to: 1
 24729                           ;drv_mrf_miwi_security.c: 201: }
 24730                           ;drv_mrf_miwi_security.c: 202: encode((uint16_t *)MIC, (uint16_t *)key);
 24731  00927A  C11C  F100         	movff	CBC_MAC@MIC,encode@text
 24732  00927E  C11D  F101         	movff	CBC_MAC@MIC+1,encode@text+1
 24733  009282  C11A  F102         	movff	CBC_MAC@key,encode@key
 24734  009286  C11B  F103         	movff	CBC_MAC@key+1,encode@key+1
 24735  00928A  ECCC  F036         	call	_encode	;wreg free
 24736  00928E  0101               	movlb	1	; () banked
 24737  009290  2B23               	incf	CBC_MAC@i& (0+255),f,b
 24738  009292                     l16868:
 24739                           
 24740                           ; BSR set to: 1
 24741  009292  0101               	movlb	1	; () banked
 24742  009294  5121               	movf	CBC_MAC@block& (0+255),w,b
 24743  009296  0101               	movlb	1	; () banked
 24744  009298  5D23               	subwf	CBC_MAC@i& (0+255),w,b
 24745  00929A  B0D8               	btfsc	status,0,c
 24746  00929C  0012               	return	
 24747  00929E  D7A6               	goto	l16848
 24748  0092A0                     __end_of_CBC_MAC:
 24749                           	opt stack 0
 24750                           tblptru	equ	0xFF8
 24751                           tblptrh	equ	0xFF7
 24752                           tblptrl	equ	0xFF6
 24753                           tablat	equ	0xFF5
 24754                           prodh	equ	0xFF4
 24755                           prodl	equ	0xFF3
 24756                           intcon	equ	0xFF2
 24757                           intcon2	equ	0xFF1
 24758                           intcon3	equ	0xFF0
 24759                           indf0	equ	0xFEF
 24760                           postinc0	equ	0xFEE
 24761                           plusw0	equ	0xFEB
 24762                           fsr0h	equ	0xFEA
 24763                           fsr0l	equ	0xFE9
 24764                           wreg	equ	0xFE8
 24765                           indf1	equ	0xFE7
 24766                           postinc1	equ	0xFE6
 24767                           postdec1	equ	0xFE5
 24768                           fsr1h	equ	0xFE2
 24769                           fsr1l	equ	0xFE1
 24770                           indf2	equ	0xFDF
 24771                           postinc2	equ	0xFDE
 24772                           postdec2	equ	0xFDD
 24773                           plusw2	equ	0xFDB
 24774                           fsr2h	equ	0xFDA
 24775                           fsr2l	equ	0xFD9
 24776                           status	equ	0xFD8
 24777                           
 24778 ;; *************** function _encode *****************
 24779 ;; Defined at:
 24780 ;;		line 76 in file "src/miwi/drv_mrf_miwi_security.c"
 24781 ;; Parameters:    Size  Location     Type
 24782 ;;  text            2    0[BANK1 ] PTR unsigned int 
 24783 ;;		 -> tmpBlock(4), 
 24784 ;;  key             2    2[BANK1 ] PTR unsigned int 
 24785 ;;		 -> key(8), 
 24786 ;; Auto vars:     Size  Location     Type
 24787 ;;  sum             2   21[BANK1 ] unsigned int 
 24788 ;;  part2           2   19[BANK1 ] unsigned int 
 24789 ;;  part1           2   17[BANK1 ] unsigned int 
 24790 ;;  delta           2   14[BANK1 ] unsigned int 
 24791 ;;  i               1   16[BANK1 ] unsigned char 
 24792 ;; Return value:  Size  Location     Type
 24793 ;;		None               void
 24794 ;; Registers used:
 24795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24796 ;; Tracked objects:
 24797 ;;		On entry : 0/0
 24798 ;;		On exit  : 0/0
 24799 ;;		Unchanged: 0/0
 24800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24801 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24802 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24803 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24804 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24805 ;;Total ram usage:       23 bytes
 24806 ;; Hardware stack levels used:    1
 24807 ;; Hardware stack levels required when called:   16
 24808 ;; This function calls:
 24809 ;;		Nothing
 24810 ;; This function is called by:
 24811 ;;		_CTR
 24812 ;;		_CBC_MAC
 24813 ;; This function uses a non-reentrant model
 24814 ;;
 24815                           
 24816                           	psect	text55
 24817  006D98                     __ptext55:
 24818                           	opt stack 0
 24819  006D98                     _encode:
 24820                           	opt stack 7
 24821                           
 24822                           ;drv_mrf_miwi_security.c: 78: uint16_t part1=text[0], part2=text[1];
 24823                           
 24824                           ; BSR set to: 1
 24825                           ;incstack = 0
 24826  006D98  C100  FFD9         	movff	encode@text,fsr2l
 24827  006D9C  C101  FFDA         	movff	encode@text+1,fsr2h
 24828  006DA0  CFDE F111          	movff	postinc2,encode@part1
 24829  006DA4  CFDD F112          	movff	postdec2,encode@part1+1
 24830  006DA8  0101               	movlb	1	; () banked
 24831  006DAA  EE20 F002          	lfsr	2,2
 24832  006DAE  5100               	movf	encode@text& (0+255),w,b
 24833  006DB0  26D9               	addwf	fsr2l,f,c
 24834  006DB2  5101               	movf	(encode@text+1)& (0+255),w,b
 24835  006DB4  22DA               	addwfc	fsr2h,f,c
 24836  006DB6  CFDE F113          	movff	postinc2,encode@part2
 24837  006DBA  CFDD F114          	movff	postdec2,encode@part2+1
 24838                           
 24839                           ; BSR set to: 1
 24840                           ;drv_mrf_miwi_security.c: 79: uint16_t sum=0, delta=0x9E37;
 24841  006DBE  0E00               	movlw	0
 24842  006DC0  0101               	movlb	1	; () banked
 24843  006DC2  6F16               	movwf	(encode@sum+1)& (0+255),b
 24844  006DC4  0E00               	movlw	0
 24845  006DC6  6F15               	movwf	encode@sum& (0+255),b
 24846                           
 24847                           ; BSR set to: 1
 24848  006DC8  0E9E               	movlw	158
 24849  006DCA  0101               	movlb	1	; () banked
 24850  006DCC  6F0F               	movwf	(encode@delta+1)& (0+255),b
 24851  006DCE  0E37               	movlw	55
 24852  006DD0  6F0E               	movwf	encode@delta& (0+255),b
 24853                           
 24854                           ; BSR set to: 1
 24855                           ;drv_mrf_miwi_security.c: 80: uint8_t i;
 24856                           ;drv_mrf_miwi_security.c: 82: for(i=0; i<32; i++)
 24857  006DD2  0E00               	movlw	0
 24858  006DD4  0101               	movlb	1	; () banked
 24859  006DD6  6F10               	movwf	encode@i& (0+255),b
 24860  006DD8                     l16650:
 24861                           
 24862                           ; BSR set to: 1
 24863  006DD8  0E1F               	movlw	31
 24864  006DDA  0101               	movlb	1	; () banked
 24865  006DDC  6510               	cpfsgt	encode@i& (0+255),b
 24866  006DDE  D001               	goto	l16654
 24867  006DE0  D0D4               	goto	l16664
 24868  006DE2                     l16654:
 24869                           
 24870                           ; BSR set to: 1
 24871                           ;drv_mrf_miwi_security.c: 83: {
 24872                           ;drv_mrf_miwi_security.c: 84: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + 
      +                          key[sum & 3]);
 24873  006DE2  0E03               	movlw	3
 24874  006DE4  0101               	movlb	1	; () banked
 24875  006DE6  1515               	andwf	encode@sum& (0+255),w,b
 24876  006DE8  0101               	movlb	1	; () banked
 24877  006DEA  6F04               	movwf	??_encode& (0+255),b
 24878  006DEC  0E00               	movlw	0
 24879  006DEE  0101               	movlb	1	; () banked
 24880  006DF0  1516               	andwf	(encode@sum+1)& (0+255),w,b
 24881  006DF2  0101               	movlb	1	; () banked
 24882  006DF4  6F05               	movwf	(??_encode+1)& (0+255),b
 24883  006DF6  90D8               	bcf	status,0,c
 24884  006DF8  0101               	movlb	1	; () banked
 24885  006DFA  3704               	rlcf	??_encode& (0+255),f,b
 24886  006DFC  3705               	rlcf	(??_encode+1)& (0+255),f,b
 24887  006DFE  0101               	movlb	1	; () banked
 24888  006E00  5104               	movf	??_encode& (0+255),w,b
 24889  006E02  0101               	movlb	1	; () banked
 24890  006E04  2502               	addwf	encode@key& (0+255),w,b
 24891  006E06  6ED9               	movwf	fsr2l,c
 24892  006E08  0101               	movlb	1	; () banked
 24893  006E0A  5105               	movf	(??_encode+1)& (0+255),w,b
 24894  006E0C  0101               	movlb	1	; () banked
 24895  006E0E  2103               	addwfc	(encode@key+1)& (0+255),w,b
 24896  006E10  6EDA               	movwf	fsr2h,c
 24897  006E12  CFDE F106          	movff	postinc2,??_encode+2
 24898  006E16  CFDD F107          	movff	postdec2,??_encode+3
 24899  006E1A  0101               	movlb	1	; () banked
 24900  006E1C  5115               	movf	encode@sum& (0+255),w,b
 24901  006E1E  0101               	movlb	1	; () banked
 24902  006E20  2706               	addwf	(??_encode+2)& (0+255),f,b
 24903  006E22  0101               	movlb	1	; () banked
 24904  006E24  5116               	movf	(encode@sum+1)& (0+255),w,b
 24905  006E26  0101               	movlb	1	; () banked
 24906  006E28  2307               	addwfc	(??_encode+3)& (0+255),f,b
 24907  006E2A  C113  F108         	movff	encode@part2,??_encode+4
 24908  006E2E  C114  F109         	movff	encode@part2+1,??_encode+5
 24909  006E32  0E05               	movlw	5
 24910  006E34  0101               	movlb	1	; () banked
 24911  006E36  6F0A               	movwf	(??_encode+6)& (0+255),b
 24912  006E38                     u18015:
 24913  006E38  0101               	movlb	1	; () banked
 24914  006E3A  90D8               	bcf	status,0,c
 24915  006E3C  3309               	rrcf	(??_encode+5)& (0+255),f,b
 24916  006E3E  3308               	rrcf	(??_encode+4)& (0+255),f,b
 24917  006E40  0101               	movlb	1	; () banked
 24918  006E42  2F0A               	decfsz	(??_encode+6)& (0+255),f,b
 24919  006E44  D7F9               	goto	u18015
 24920  006E46  C113  F10B         	movff	encode@part2,??_encode+7
 24921  006E4A  C114  F10C         	movff	encode@part2+1,??_encode+8
 24922  006E4E  0101               	movlb	1	; () banked
 24923  006E50  3B0B               	swapf	(??_encode+7)& (0+255),f,b
 24924  006E52  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 24925  006E54  0EF0               	movlw	240
 24926  006E56  170C               	andwf	(??_encode+8)& (0+255),f,b
 24927  006E58  510B               	movf	(??_encode+7)& (0+255),w,b
 24928  006E5A  0B0F               	andlw	15
 24929  006E5C  130C               	iorwf	(??_encode+8)& (0+255),f,b
 24930  006E5E  0EF0               	movlw	240
 24931  006E60  170B               	andwf	(??_encode+7)& (0+255),f,b
 24932  006E62  0101               	movlb	1	; () banked
 24933  006E64  5108               	movf	(??_encode+4)& (0+255),w,b
 24934  006E66  0101               	movlb	1	; () banked
 24935  006E68  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 24936  006E6A  0101               	movlb	1	; () banked
 24937  006E6C  5109               	movf	(??_encode+5)& (0+255),w,b
 24938  006E6E  0101               	movlb	1	; () banked
 24939  006E70  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 24940  006E72  0101               	movlb	1	; () banked
 24941  006E74  5113               	movf	encode@part2& (0+255),w,b
 24942  006E76  0101               	movlb	1	; () banked
 24943  006E78  270B               	addwf	(??_encode+7)& (0+255),f,b
 24944  006E7A  0101               	movlb	1	; () banked
 24945  006E7C  5114               	movf	(encode@part2+1)& (0+255),w,b
 24946  006E7E  0101               	movlb	1	; () banked
 24947  006E80  230C               	addwfc	(??_encode+8)& (0+255),f,b
 24948  006E82  0101               	movlb	1	; () banked
 24949  006E84  5106               	movf	(??_encode+2)& (0+255),w,b
 24950  006E86  0101               	movlb	1	; () banked
 24951  006E88  1B0B               	xorwf	(??_encode+7)& (0+255),f,b
 24952  006E8A  0101               	movlb	1	; () banked
 24953  006E8C  5107               	movf	(??_encode+3)& (0+255),w,b
 24954  006E8E  0101               	movlb	1	; () banked
 24955  006E90  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 24956  006E92  0101               	movlb	1	; () banked
 24957  006E94  510B               	movf	(??_encode+7)& (0+255),w,b
 24958  006E96  0101               	movlb	1	; () banked
 24959  006E98  2711               	addwf	encode@part1& (0+255),f,b
 24960  006E9A  0101               	movlb	1	; () banked
 24961  006E9C  510C               	movf	(??_encode+8)& (0+255),w,b
 24962  006E9E  0101               	movlb	1	; () banked
 24963  006EA0  2312               	addwfc	(encode@part1+1)& (0+255),f,b
 24964                           
 24965                           ; BSR set to: 1
 24966                           ;drv_mrf_miwi_security.c: 85: sum += delta;
 24967  006EA2  0101               	movlb	1	; () banked
 24968  006EA4  510E               	movf	encode@delta& (0+255),w,b
 24969  006EA6  0101               	movlb	1	; () banked
 24970  006EA8  2715               	addwf	encode@sum& (0+255),f,b
 24971  006EAA  0101               	movlb	1	; () banked
 24972  006EAC  510F               	movf	(encode@delta+1)& (0+255),w,b
 24973  006EAE  0101               	movlb	1	; () banked
 24974  006EB0  2316               	addwfc	(encode@sum+1)& (0+255),f,b
 24975                           
 24976                           ; BSR set to: 1
 24977                           ;drv_mrf_miwi_security.c: 86: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + 
      +                          key[(sum>>11) & 3]);
 24978  006EB2  C115  F104         	movff	encode@sum,??_encode
 24979  006EB6  C116  F105         	movff	encode@sum+1,??_encode+1
 24980  006EBA  0E0B               	movlw	11
 24981  006EBC  0101               	movlb	1	; () banked
 24982  006EBE  6F06               	movwf	(??_encode+2)& (0+255),b
 24983  006EC0                     u18025:
 24984  006EC0  0101               	movlb	1	; () banked
 24985  006EC2  90D8               	bcf	status,0,c
 24986  006EC4  3305               	rrcf	(??_encode+1)& (0+255),f,b
 24987  006EC6  3304               	rrcf	??_encode& (0+255),f,b
 24988  006EC8  0101               	movlb	1	; () banked
 24989  006ECA  2F06               	decfsz	(??_encode+2)& (0+255),f,b
 24990  006ECC  D7F9               	goto	u18025
 24991  006ECE  0E03               	movlw	3
 24992  006ED0  0101               	movlb	1	; () banked
 24993  006ED2  1704               	andwf	??_encode& (0+255),f,b
 24994  006ED4  0E00               	movlw	0
 24995  006ED6  1705               	andwf	(??_encode+1)& (0+255),f,b
 24996  006ED8  90D8               	bcf	status,0,c
 24997  006EDA  0101               	movlb	1	; () banked
 24998  006EDC  3704               	rlcf	??_encode& (0+255),f,b
 24999  006EDE  3705               	rlcf	(??_encode+1)& (0+255),f,b
 25000  006EE0  0101               	movlb	1	; () banked
 25001  006EE2  5104               	movf	??_encode& (0+255),w,b
 25002  006EE4  0101               	movlb	1	; () banked
 25003  006EE6  2502               	addwf	encode@key& (0+255),w,b
 25004  006EE8  6ED9               	movwf	fsr2l,c
 25005  006EEA  0101               	movlb	1	; () banked
 25006  006EEC  5105               	movf	(??_encode+1)& (0+255),w,b
 25007  006EEE  0101               	movlb	1	; () banked
 25008  006EF0  2103               	addwfc	(encode@key+1)& (0+255),w,b
 25009  006EF2  6EDA               	movwf	fsr2h,c
 25010  006EF4  CFDE F107          	movff	postinc2,??_encode+3
 25011  006EF8  CFDD F108          	movff	postdec2,??_encode+4
 25012  006EFC  0101               	movlb	1	; () banked
 25013  006EFE  5115               	movf	encode@sum& (0+255),w,b
 25014  006F00  0101               	movlb	1	; () banked
 25015  006F02  2707               	addwf	(??_encode+3)& (0+255),f,b
 25016  006F04  0101               	movlb	1	; () banked
 25017  006F06  5116               	movf	(encode@sum+1)& (0+255),w,b
 25018  006F08  0101               	movlb	1	; () banked
 25019  006F0A  2308               	addwfc	(??_encode+4)& (0+255),f,b
 25020  006F0C  C111  F109         	movff	encode@part1,??_encode+5
 25021  006F10  C112  F10A         	movff	encode@part1+1,??_encode+6
 25022  006F14  0E05               	movlw	5
 25023  006F16  0101               	movlb	1	; () banked
 25024  006F18  6F0B               	movwf	(??_encode+7)& (0+255),b
 25025  006F1A                     u18035:
 25026  006F1A  0101               	movlb	1	; () banked
 25027  006F1C  90D8               	bcf	status,0,c
 25028  006F1E  330A               	rrcf	(??_encode+6)& (0+255),f,b
 25029  006F20  3309               	rrcf	(??_encode+5)& (0+255),f,b
 25030  006F22  0101               	movlb	1	; () banked
 25031  006F24  2F0B               	decfsz	(??_encode+7)& (0+255),f,b
 25032  006F26  D7F9               	goto	u18035
 25033  006F28  C111  F10C         	movff	encode@part1,??_encode+8
 25034  006F2C  C112  F10D         	movff	encode@part1+1,??_encode+9
 25035  006F30  0101               	movlb	1	; () banked
 25036  006F32  3B0C               	swapf	(??_encode+8)& (0+255),f,b
 25037  006F34  3B0D               	swapf	(??_encode+9)& (0+255),f,b
 25038  006F36  0EF0               	movlw	240
 25039  006F38  170D               	andwf	(??_encode+9)& (0+255),f,b
 25040  006F3A  510C               	movf	(??_encode+8)& (0+255),w,b
 25041  006F3C  0B0F               	andlw	15
 25042  006F3E  130D               	iorwf	(??_encode+9)& (0+255),f,b
 25043  006F40  0EF0               	movlw	240
 25044  006F42  170C               	andwf	(??_encode+8)& (0+255),f,b
 25045  006F44  0101               	movlb	1	; () banked
 25046  006F46  5109               	movf	(??_encode+5)& (0+255),w,b
 25047  006F48  0101               	movlb	1	; () banked
 25048  006F4A  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25049  006F4C  0101               	movlb	1	; () banked
 25050  006F4E  510A               	movf	(??_encode+6)& (0+255),w,b
 25051  006F50  0101               	movlb	1	; () banked
 25052  006F52  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 25053  006F54  0101               	movlb	1	; () banked
 25054  006F56  5111               	movf	encode@part1& (0+255),w,b
 25055  006F58  0101               	movlb	1	; () banked
 25056  006F5A  270C               	addwf	(??_encode+8)& (0+255),f,b
 25057  006F5C  0101               	movlb	1	; () banked
 25058  006F5E  5112               	movf	(encode@part1+1)& (0+255),w,b
 25059  006F60  0101               	movlb	1	; () banked
 25060  006F62  230D               	addwfc	(??_encode+9)& (0+255),f,b
 25061  006F64  0101               	movlb	1	; () banked
 25062  006F66  5107               	movf	(??_encode+3)& (0+255),w,b
 25063  006F68  0101               	movlb	1	; () banked
 25064  006F6A  1B0C               	xorwf	(??_encode+8)& (0+255),f,b
 25065  006F6C  0101               	movlb	1	; () banked
 25066  006F6E  5108               	movf	(??_encode+4)& (0+255),w,b
 25067  006F70  0101               	movlb	1	; () banked
 25068  006F72  1B0D               	xorwf	(??_encode+9)& (0+255),f,b
 25069  006F74  0101               	movlb	1	; () banked
 25070  006F76  510C               	movf	(??_encode+8)& (0+255),w,b
 25071  006F78  0101               	movlb	1	; () banked
 25072  006F7A  2713               	addwf	encode@part2& (0+255),f,b
 25073  006F7C  0101               	movlb	1	; () banked
 25074  006F7E  510D               	movf	(??_encode+9)& (0+255),w,b
 25075  006F80  0101               	movlb	1	; () banked
 25076  006F82  2314               	addwfc	(encode@part2+1)& (0+255),f,b
 25077                           
 25078                           ; BSR set to: 1
 25079  006F84  0101               	movlb	1	; () banked
 25080  006F86  2B10               	incf	encode@i& (0+255),f,b
 25081  006F88  D727               	goto	l16650
 25082  006F8A                     l16664:
 25083                           
 25084                           ; BSR set to: 1
 25085                           ;drv_mrf_miwi_security.c: 87: }
 25086                           ;drv_mrf_miwi_security.c: 88: text[0]=part1; text[1]=part2;
 25087  006F8A  C100  FFD9         	movff	encode@text,fsr2l
 25088  006F8E  C101  FFDA         	movff	encode@text+1,fsr2h
 25089  006F92  C111  FFDE         	movff	encode@part1,postinc2
 25090  006F96  C112  FFDD         	movff	encode@part1+1,postdec2
 25091                           
 25092                           ; BSR set to: 1
 25093  006F9A  0101               	movlb	1	; () banked
 25094  006F9C  EE20 F002          	lfsr	2,2
 25095  006FA0  5100               	movf	encode@text& (0+255),w,b
 25096  006FA2  26D9               	addwf	fsr2l,f,c
 25097  006FA4  5101               	movf	(encode@text+1)& (0+255),w,b
 25098  006FA6  22DA               	addwfc	fsr2h,f,c
 25099  006FA8  C113  FFDE         	movff	encode@part2,postinc2
 25100  006FAC  C114  FFDD         	movff	encode@part2+1,postdec2
 25101                           
 25102                           ; BSR set to: 1
 25103  006FB0  0012               	return		;funcret
 25104  006FB2                     __end_of_encode:
 25105                           	opt stack 0
 25106                           tblptru	equ	0xFF8
 25107                           tblptrh	equ	0xFF7
 25108                           tblptrl	equ	0xFF6
 25109                           tablat	equ	0xFF5
 25110                           prodh	equ	0xFF4
 25111                           prodl	equ	0xFF3
 25112                           intcon	equ	0xFF2
 25113                           intcon2	equ	0xFF1
 25114                           intcon3	equ	0xFF0
 25115                           indf0	equ	0xFEF
 25116                           postinc0	equ	0xFEE
 25117                           plusw0	equ	0xFEB
 25118                           fsr0h	equ	0xFEA
 25119                           fsr0l	equ	0xFE9
 25120                           wreg	equ	0xFE8
 25121                           indf1	equ	0xFE7
 25122                           postinc1	equ	0xFE6
 25123                           postdec1	equ	0xFE5
 25124                           fsr1h	equ	0xFE2
 25125                           fsr1l	equ	0xFE1
 25126                           indf2	equ	0xFDF
 25127                           postinc2	equ	0xFDE
 25128                           postdec2	equ	0xFDD
 25129                           plusw2	equ	0xFDB
 25130                           fsr2h	equ	0xFDA
 25131                           fsr2l	equ	0xFD9
 25132                           status	equ	0xFD8
 25133                           
 25134 ;; *************** function _BroadcastJitter *****************
 25135 ;; Defined at:
 25136 ;;		line 247 in file "src/miwi/miwi_mesh.c"
 25137 ;; Parameters:    Size  Location     Type
 25138 ;;  range           1    wreg     unsigned char 
 25139 ;; Auto vars:     Size  Location     Type
 25140 ;;  range           1   26[BANK1 ] unsigned char 
 25141 ;;  t2              4   22[BANK1 ] struct _MIWI_TICK
 25142 ;;  t1              4   18[BANK1 ] struct _MIWI_TICK
 25143 ;;  jitter          1   27[BANK1 ] unsigned char 
 25144 ;; Return value:  Size  Location     Type
 25145 ;;		None               void
 25146 ;; Registers used:
 25147 ;;		wreg, status,2, status,0, cstack
 25148 ;; Tracked objects:
 25149 ;;		On entry : 0/0
 25150 ;;		On exit  : 0/0
 25151 ;;		Unchanged: 0/0
 25152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25154 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25155 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25156 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25157 ;;Total ram usage:       18 bytes
 25158 ;; Hardware stack levels used:    1
 25159 ;; Hardware stack levels required when called:   17
 25160 ;; This function calls:
 25161 ;;		_MiWi_TickGet
 25162 ;;		___lbmod
 25163 ;; This function is called by:
 25164 ;;		_MiWiTasks
 25165 ;; This function uses a non-reentrant model
 25166 ;;
 25167                           
 25168                           	psect	text56
 25169  00A36A                     __ptext56:
 25170                           	opt stack 0
 25171  00A36A                     _BroadcastJitter:
 25172                           	opt stack 12
 25173                           
 25174                           ; BSR set to: 1
 25175                           ;incstack = 0
 25176                           ;BroadcastJitter@range stored from wreg
 25177  00A36A  0101               	movlb	1	; () banked
 25178  00A36C  6F1A               	movwf	BroadcastJitter@range& (0+255),b
 25179                           
 25180                           ;miwi_mesh.c: 249: uint8_t jitter = TMR1L % range;
 25181  00A36E  C11A  F100         	movff	BroadcastJitter@range,___lbmod@divisor	;volatile
 25182  00A372  50CE               	movf	4046,w,c	;volatile
 25183  00A374  EC6A  F05B         	call	___lbmod
 25184  00A378  0101               	movlb	1	; () banked
 25185  00A37A  6F1B               	movwf	BroadcastJitter@jitter& (0+255),b
 25186                           
 25187                           ;miwi_mesh.c: 250: MIWI_TICK t1, t2;
 25188                           ;miwi_mesh.c: 252: while( jitter > 0 )
 25189  00A37C  D04D               	goto	l17720
 25190  00A37E                     l17710:
 25191                           
 25192                           ; BSR set to: 1
 25193                           ;miwi_mesh.c: 253: {
 25194                           ;miwi_mesh.c: 254: jitter--;
 25195  00A37E  0101               	movlb	1	; () banked
 25196  00A380  071B               	decf	BroadcastJitter@jitter& (0+255),f,b
 25197                           
 25198                           ; BSR set to: 1
 25199                           ;miwi_mesh.c: 255: t1 = MiWi_TickGet();
 25200  00A382  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 25201  00A386  C100  F112         	movff	?_MiWi_TickGet,BroadcastJitter@t1
 25202  00A38A  C101  F113         	movff	?_MiWi_TickGet+1,BroadcastJitter@t1+1
 25203  00A38E  C102  F114         	movff	?_MiWi_TickGet+2,BroadcastJitter@t1+2
 25204  00A392  C103  F115         	movff	?_MiWi_TickGet+3,BroadcastJitter@t1+3
 25205  00A396                     l17714:
 25206                           
 25207                           ;miwi_mesh.c: 257: {
 25208                           ;miwi_mesh.c: 258: t2 = MiWi_TickGet();
 25209  00A396  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 25210  00A39A  C100  F116         	movff	?_MiWi_TickGet,BroadcastJitter@t2
 25211  00A39E  C101  F117         	movff	?_MiWi_TickGet+1,BroadcastJitter@t2+1
 25212  00A3A2  C102  F118         	movff	?_MiWi_TickGet+2,BroadcastJitter@t2+2
 25213  00A3A6  C103  F119         	movff	?_MiWi_TickGet+3,BroadcastJitter@t2+3
 25214                           
 25215                           ;miwi_mesh.c: 259: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/1000) )
 25216  00A3AA  C112  F10A         	movff	BroadcastJitter@t1,??_BroadcastJitter
 25217  00A3AE  C113  F10B         	movff	BroadcastJitter@t1+1,??_BroadcastJitter+1
 25218  00A3B2  C114  F10C         	movff	BroadcastJitter@t1+2,??_BroadcastJitter+2
 25219  00A3B6  C115  F10D         	movff	BroadcastJitter@t1+3,??_BroadcastJitter+3
 25220  00A3BA  0101               	movlb	1	; () banked
 25221  00A3BC  1F0A               	comf	??_BroadcastJitter& (0+255),f,b
 25222  00A3BE  1F0B               	comf	(??_BroadcastJitter+1)& (0+255),f,b
 25223  00A3C0  1F0C               	comf	(??_BroadcastJitter+2)& (0+255),f,b
 25224  00A3C2  1F0D               	comf	(??_BroadcastJitter+3)& (0+255),f,b
 25225  00A3C4  2B0A               	incf	??_BroadcastJitter& (0+255),f,b
 25226  00A3C6  0E00               	movlw	0
 25227  00A3C8  230B               	addwfc	(??_BroadcastJitter+1)& (0+255),f,b
 25228  00A3CA  230C               	addwfc	(??_BroadcastJitter+2)& (0+255),f,b
 25229  00A3CC  230D               	addwfc	(??_BroadcastJitter+3)& (0+255),f,b
 25230  00A3CE  0101               	movlb	1	; () banked
 25231  00A3D0  5116               	movf	BroadcastJitter@t2& (0+255),w,b
 25232  00A3D2  0101               	movlb	1	; () banked
 25233  00A3D4  250A               	addwf	??_BroadcastJitter& (0+255),w,b
 25234  00A3D6  0101               	movlb	1	; () banked
 25235  00A3D8  6F0E               	movwf	(??_BroadcastJitter+4)& (0+255),b
 25236  00A3DA  0101               	movlb	1	; () banked
 25237  00A3DC  5117               	movf	(BroadcastJitter@t2+1)& (0+255),w,b
 25238  00A3DE  0101               	movlb	1	; () banked
 25239  00A3E0  210B               	addwfc	(??_BroadcastJitter+1)& (0+255),w,b
 25240  00A3E2  0101               	movlb	1	; () banked
 25241  00A3E4  6F0F               	movwf	(??_BroadcastJitter+5)& (0+255),b
 25242  00A3E6  0101               	movlb	1	; () banked
 25243  00A3E8  5118               	movf	(BroadcastJitter@t2+2)& (0+255),w,b
 25244  00A3EA  0101               	movlb	1	; () banked
 25245  00A3EC  210C               	addwfc	(??_BroadcastJitter+2)& (0+255),w,b
 25246  00A3EE  0101               	movlb	1	; () banked
 25247  00A3F0  6F10               	movwf	(??_BroadcastJitter+6)& (0+255),b
 25248  00A3F2  0101               	movlb	1	; () banked
 25249  00A3F4  5119               	movf	(BroadcastJitter@t2+3)& (0+255),w,b
 25250  00A3F6  0101               	movlb	1	; () banked
 25251  00A3F8  210D               	addwfc	(??_BroadcastJitter+3)& (0+255),w,b
 25252  00A3FA  0101               	movlb	1	; () banked
 25253  00A3FC  6F11               	movwf	(??_BroadcastJitter+7)& (0+255),b
 25254  00A3FE  0101               	movlb	1	; () banked
 25255  00A400  5111               	movf	(??_BroadcastJitter+7)& (0+255),w,b
 25256  00A402  0101               	movlb	1	; () banked
 25257  00A404  1110               	iorwf	(??_BroadcastJitter+6)& (0+255),w,b
 25258  00A406  E108               	bnz	l17720
 25259  00A408  0EF5               	movlw	245
 25260  00A40A  0101               	movlb	1	; () banked
 25261  00A40C  5D0E               	subwf	(??_BroadcastJitter+4)& (0+255),w,b
 25262  00A40E  0E01               	movlw	1
 25263  00A410  0101               	movlb	1	; () banked
 25264  00A412  590F               	subwfb	(??_BroadcastJitter+5)& (0+255),w,b
 25265  00A414  A0D8               	btfss	status,0,c
 25266  00A416  D7BF               	goto	l17714
 25267  00A418                     l17720:
 25268                           
 25269                           ; BSR set to: 1
 25270  00A418  0101               	movlb	1	; () banked
 25271  00A41A  511B               	movf	BroadcastJitter@jitter& (0+255),w,b
 25272  00A41C  0101               	movlb	1	; () banked
 25273  00A41E  B4D8               	btfsc	status,2,c
 25274  00A420  0012               	return	
 25275  00A422  D7AD               	goto	l17710
 25276  00A424                     __end_of_BroadcastJitter:
 25277                           	opt stack 0
 25278                           tblptru	equ	0xFF8
 25279                           tblptrh	equ	0xFF7
 25280                           tblptrl	equ	0xFF6
 25281                           tablat	equ	0xFF5
 25282                           prodh	equ	0xFF4
 25283                           prodl	equ	0xFF3
 25284                           intcon	equ	0xFF2
 25285                           intcon2	equ	0xFF1
 25286                           intcon3	equ	0xFF0
 25287                           indf0	equ	0xFEF
 25288                           postinc0	equ	0xFEE
 25289                           plusw0	equ	0xFEB
 25290                           fsr0h	equ	0xFEA
 25291                           fsr0l	equ	0xFE9
 25292                           wreg	equ	0xFE8
 25293                           indf1	equ	0xFE7
 25294                           postinc1	equ	0xFE6
 25295                           postdec1	equ	0xFE5
 25296                           fsr1h	equ	0xFE2
 25297                           fsr1l	equ	0xFE1
 25298                           indf2	equ	0xFDF
 25299                           postinc2	equ	0xFDE
 25300                           postdec2	equ	0xFDD
 25301                           plusw2	equ	0xFDB
 25302                           fsr2h	equ	0xFDA
 25303                           fsr2l	equ	0xFD9
 25304                           status	equ	0xFD8
 25305                           
 25306 ;; *************** function ___lbmod *****************
 25307 ;; Defined at:
 25308 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
 25309 ;; Parameters:    Size  Location     Type
 25310 ;;  dividend        1    wreg     unsigned char 
 25311 ;;  divisor         1    0[BANK1 ] unsigned char 
 25312 ;; Auto vars:     Size  Location     Type
 25313 ;;  dividend        1    1[BANK1 ] unsigned char 
 25314 ;;  rem             1    3[BANK1 ] unsigned char 
 25315 ;;  counter         1    2[BANK1 ] unsigned char 
 25316 ;; Return value:  Size  Location     Type
 25317 ;;                  1    wreg      unsigned char 
 25318 ;; Registers used:
 25319 ;;		wreg, status,2, status,0
 25320 ;; Tracked objects:
 25321 ;;		On entry : 0/0
 25322 ;;		On exit  : 0/0
 25323 ;;		Unchanged: 0/0
 25324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25325 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25326 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25328 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25329 ;;Total ram usage:        4 bytes
 25330 ;; Hardware stack levels used:    1
 25331 ;; Hardware stack levels required when called:   16
 25332 ;; This function calls:
 25333 ;;		Nothing
 25334 ;; This function is called by:
 25335 ;;		_BroadcastJitter
 25336 ;; This function uses a non-reentrant model
 25337 ;;
 25338                           
 25339                           	psect	text57
 25340  00B6D4                     __ptext57:
 25341                           	opt stack 0
 25342  00B6D4                     ___lbmod:
 25343                           	opt stack 12
 25344                           
 25345                           ; BSR set to: 1
 25346                           ;incstack = 0
 25347                           ;___lbmod@dividend stored from wreg
 25348  00B6D4  0101               	movlb	1	; () banked
 25349  00B6D6  6F01               	movwf	___lbmod@dividend& (0+255),b
 25350  00B6D8  0E08               	movlw	8
 25351  00B6DA  0101               	movlb	1	; () banked
 25352  00B6DC  6F02               	movwf	___lbmod@counter& (0+255),b
 25353  00B6DE  0E00               	movlw	0
 25354  00B6E0  0101               	movlb	1	; () banked
 25355  00B6E2  6F03               	movwf	___lbmod@rem& (0+255),b
 25356  00B6E4                     l17526:
 25357                           
 25358                           ; BSR set to: 1
 25359  00B6E4  90D8               	bcf	status,0,c
 25360  00B6E6  0101               	movlb	1	; () banked
 25361  00B6E8  3501               	rlcf	___lbmod@dividend& (0+255),w,b
 25362  00B6EA  0101               	movlb	1	; () banked
 25363  00B6EC  3503               	rlcf	___lbmod@rem& (0+255),w,b
 25364  00B6EE  0101               	movlb	1	; () banked
 25365  00B6F0  6F03               	movwf	___lbmod@rem& (0+255),b
 25366                           
 25367                           ; BSR set to: 1
 25368  00B6F2  0101               	movlb	1	; () banked
 25369  00B6F4  90D8               	bcf	status,0,c
 25370  00B6F6  3701               	rlcf	___lbmod@dividend& (0+255),f,b
 25371                           
 25372                           ; BSR set to: 1
 25373  00B6F8  0101               	movlb	1	; () banked
 25374  00B6FA  5100               	movf	___lbmod@divisor& (0+255),w,b
 25375  00B6FC  0101               	movlb	1	; () banked
 25376  00B6FE  5D03               	subwf	___lbmod@rem& (0+255),w,b
 25377  00B700  A0D8               	btfss	status,0,c
 25378  00B702  D004               	goto	l17534
 25379                           
 25380                           ; BSR set to: 1
 25381  00B704  0101               	movlb	1	; () banked
 25382  00B706  5100               	movf	___lbmod@divisor& (0+255),w,b
 25383  00B708  0101               	movlb	1	; () banked
 25384  00B70A  5F03               	subwf	___lbmod@rem& (0+255),f,b
 25385  00B70C                     l17534:
 25386                           
 25387                           ; BSR set to: 1
 25388  00B70C  0101               	movlb	1	; () banked
 25389  00B70E  2F02               	decfsz	___lbmod@counter& (0+255),f,b
 25390  00B710  D7E9               	goto	l17526
 25391                           
 25392                           ; BSR set to: 1
 25393                           
 25394                           ; BSR set to: 1
 25395  00B712  0101               	movlb	1	; () banked
 25396  00B714  5103               	movf	___lbmod@rem& (0+255),w,b
 25397  00B716  0012               	return	
 25398  00B718                     __end_of___lbmod:
 25399                           	opt stack 0
 25400                           tblptru	equ	0xFF8
 25401                           tblptrh	equ	0xFF7
 25402                           tblptrl	equ	0xFF6
 25403                           tablat	equ	0xFF5
 25404                           prodh	equ	0xFF4
 25405                           prodl	equ	0xFF3
 25406                           intcon	equ	0xFF2
 25407                           intcon2	equ	0xFF1
 25408                           intcon3	equ	0xFF0
 25409                           indf0	equ	0xFEF
 25410                           postinc0	equ	0xFEE
 25411                           plusw0	equ	0xFEB
 25412                           fsr0h	equ	0xFEA
 25413                           fsr0l	equ	0xFE9
 25414                           wreg	equ	0xFE8
 25415                           indf1	equ	0xFE7
 25416                           postinc1	equ	0xFE6
 25417                           postdec1	equ	0xFE5
 25418                           fsr1h	equ	0xFE2
 25419                           fsr1l	equ	0xFE1
 25420                           indf2	equ	0xFDF
 25421                           postinc2	equ	0xFDE
 25422                           postdec2	equ	0xFDD
 25423                           plusw2	equ	0xFDB
 25424                           fsr2h	equ	0xFDA
 25425                           fsr2l	equ	0xFD9
 25426                           status	equ	0xFD8
 25427                           
 25428 ;; *************** function _AddNodeToNetworkTable *****************
 25429 ;; Defined at:
 25430 ;;		line 3373 in file "src/miwi/miwi_mesh.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;		None
 25433 ;; Auto vars:     Size  Location     Type
 25434 ;;  i               1    8[BANK1 ] unsigned char 
 25435 ;;  handle          1    9[BANK1 ] unsigned char 
 25436 ;; Return value:  Size  Location     Type
 25437 ;;                  1    wreg      unsigned char 
 25438 ;; Registers used:
 25439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25440 ;; Tracked objects:
 25441 ;;		On entry : 0/0
 25442 ;;		On exit  : 0/0
 25443 ;;		Unchanged: 0/0
 25444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25446 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25447 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25448 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25449 ;;Total ram usage:        4 bytes
 25450 ;; Hardware stack levels used:    1
 25451 ;; Hardware stack levels required when called:   17
 25452 ;; This function calls:
 25453 ;;		_SearchForLongAddress
 25454 ;;		_SearchForShortAddress
 25455 ;;		_findNextNetworkEntry
 25456 ;; This function is called by:
 25457 ;;		_MiWiTasks
 25458 ;;		_OpenSocket
 25459 ;; This function uses a non-reentrant model
 25460 ;;
 25461                           
 25462                           	psect	text58
 25463  008C22                     __ptext58:
 25464                           	opt stack 0
 25465  008C22                     _AddNodeToNetworkTable:
 25466                           	opt stack 12
 25467                           
 25468                           ;miwi_mesh.c: 3375: uint8_t handle = 0xFF;
 25469                           
 25470                           ; BSR set to: 1
 25471                           ;incstack = 0
 25472  008C22  0101               	movlb	1	; () banked
 25473  008C24  6909               	setf	AddNodeToNetworkTable@handle& (0+255),b
 25474                           
 25475                           ;miwi_mesh.c: 3377: if(tempNodeStatus.bits.longAddressValid)
 25476  008C26  0100               	movlb	0	; () banked
 25477  008C28  A5A0               	btfss	_tempNodeStatus& (0+255),2,b
 25478  008C2A  D003               	goto	l899
 25479                           
 25480                           ; BSR set to: 0
 25481                           ;miwi_mesh.c: 3378: {
 25482                           ;miwi_mesh.c: 3379: handle = SearchForLongAddress();
 25483  008C2C  ECAF  F04E         	call	_SearchForLongAddress	;wreg free
 25484  008C30  D005               	goto	L10
 25485  008C32                     l899:
 25486                           
 25487                           ; BSR set to: 0
 25488                           ;miwi_mesh.c: 3381: else
 25489                           ;miwi_mesh.c: 3382: {
 25490                           ;miwi_mesh.c: 3383: if(tempNodeStatus.bits.shortAddressValid)
 25491  008C32  0100               	movlb	0	; () banked
 25492  008C34  A7A0               	btfss	_tempNodeStatus& (0+255),3,b
 25493  008C36  D004               	goto	l17728
 25494                           
 25495                           ; BSR set to: 0
 25496                           ;miwi_mesh.c: 3384: {
 25497                           ;miwi_mesh.c: 3385: handle = SearchForShortAddress();
 25498  008C38  EC82  F057         	call	_SearchForShortAddress	;wreg free
 25499  008C3C                     L10:
 25500  008C3C  0101               	movlb	1	; () banked
 25501  008C3E  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 25502  008C40                     l17728:
 25503                           
 25504                           ;miwi_mesh.c: 3386: }
 25505                           ;miwi_mesh.c: 3387: }
 25506                           ;miwi_mesh.c: 3389: if(handle==0xFF)
 25507  008C40  0101               	movlb	1	; () banked
 25508  008C42  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 25509  008C44  A4D8               	btfss	status,2,c
 25510  008C46  D004               	goto	l17732
 25511                           
 25512                           ; BSR set to: 1
 25513                           ;miwi_mesh.c: 3390: {
 25514                           ;miwi_mesh.c: 3391: handle = findNextNetworkEntry();
 25515  008C48  ECCE  F05B         	call	_findNextNetworkEntry	;wreg free
 25516  008C4C  0101               	movlb	1	; () banked
 25517  008C4E  6F09               	movwf	AddNodeToNetworkTable@handle& (0+255),b
 25518  008C50                     l17732:
 25519                           
 25520                           ; BSR set to: 1
 25521                           ;miwi_mesh.c: 3392: }
 25522                           ;miwi_mesh.c: 3394: if(handle != 0xFF)
 25523  008C50  0101               	movlb	1	; () banked
 25524  008C52  2909               	incf	AddNodeToNetworkTable@handle& (0+255),w,b
 25525  008C54  B4D8               	btfsc	status,2,c
 25526  008C56  D074               	goto	l17752
 25527                           
 25528                           ; BSR set to: 1
 25529                           ;miwi_mesh.c: 3395: {
 25530                           ;miwi_mesh.c: 3401: ConnectionTable[handle].status.Val = tempNodeStatus.Val;
 25531  008C58  0101               	movlb	1	; () banked
 25532  008C5A  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25533  008C5C  0D09               	mullw	9
 25534  008C5E  0E08               	movlw	8
 25535  008C60  26F3               	addwf	prodl,f,c
 25536  008C62  0E00               	movlw	0
 25537  008C64  22F4               	addwfc	prodh,f,c
 25538  008C66  0E00               	movlw	low _ConnectionTable
 25539  008C68  24F3               	addwf	prodl,w,c
 25540  008C6A  6ED9               	movwf	fsr2l,c
 25541  008C6C  0E06               	movlw	high _ConnectionTable
 25542  008C6E  20F4               	addwfc	prodh,w,c
 25543  008C70  6EDA               	movwf	fsr2h,c
 25544  008C72  C0A0  FFDF         	movff	_tempNodeStatus,indf2
 25545                           
 25546                           ; BSR set to: 1
 25547                           ;miwi_mesh.c: 3402: if(tempNodeStatus.bits.longAddressValid)
 25548  008C76  0100               	movlb	0	; () banked
 25549  008C78  A5A0               	btfss	_tempNodeStatus& (0+255),2,b
 25550  008C7A  D034               	goto	l904
 25551                           
 25552                           ; BSR set to: 0
 25553                           ;miwi_mesh.c: 3403: {
 25554                           ;miwi_mesh.c: 3404: uint8_t i;
 25555                           ;miwi_mesh.c: 3405: for(i = 0; i < 4; i++)
 25556  008C7C  0E00               	movlw	0
 25557  008C7E  0101               	movlb	1	; () banked
 25558  008C80  6F08               	movwf	AddNodeToNetworkTable@i& (0+255),b
 25559  008C82                     l17740:
 25560                           
 25561                           ; BSR set to: 1
 25562  008C82  0E03               	movlw	3
 25563  008C84  0101               	movlb	1	; () banked
 25564  008C86  6508               	cpfsgt	AddNodeToNetworkTable@i& (0+255),b
 25565  008C88  D001               	goto	l17744
 25566  008C8A  D02C               	goto	l904
 25567  008C8C                     l17744:
 25568                           
 25569                           ; BSR set to: 1
 25570                           ;miwi_mesh.c: 3406: {
 25571                           ;miwi_mesh.c: 3407: ConnectionTable[handle].Address[i] = tempLongAddress[i];
 25572  008C8C  0101               	movlb	1	; () banked
 25573  008C8E  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 25574  008C90  0D01               	mullw	1
 25575  008C92  0EA6               	movlw	low _tempLongAddress
 25576  008C94  24F3               	addwf	prodl,w,c
 25577  008C96  6ED9               	movwf	fsr2l,c
 25578  008C98  0E01               	movlw	high _tempLongAddress
 25579  008C9A  20F4               	addwfc	prodh,w,c
 25580  008C9C  6EDA               	movwf	fsr2h,c
 25581  008C9E  0101               	movlb	1	; () banked
 25582  008CA0  5108               	movf	AddNodeToNetworkTable@i& (0+255),w,b
 25583  008CA2  0D01               	mullw	1
 25584  008CA4  0E04               	movlw	4
 25585  008CA6  26F3               	addwf	prodl,f,c
 25586  008CA8  0E00               	movlw	0
 25587  008CAA  22F4               	addwfc	prodh,f,c
 25588  008CAC  0E00               	movlw	low _ConnectionTable
 25589  008CAE  0101               	movlb	1	; () banked
 25590  008CB0  6F06               	movwf	??_AddNodeToNetworkTable& (0+255),b
 25591  008CB2  0E06               	movlw	high _ConnectionTable
 25592  008CB4  0101               	movlb	1	; () banked
 25593  008CB6  6F07               	movwf	(??_AddNodeToNetworkTable+1)& (0+255),b
 25594  008CB8  50F3               	movf	prodl,w,c
 25595  008CBA  0101               	movlb	1	; () banked
 25596  008CBC  2706               	addwf	??_AddNodeToNetworkTable& (0+255),f,b
 25597  008CBE  50F4               	movf	prodh,w,c
 25598  008CC0  0101               	movlb	1	; () banked
 25599  008CC2  2307               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 25600  008CC4  0101               	movlb	1	; () banked
 25601  008CC6  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25602  008CC8  0D09               	mullw	9
 25603  008CCA  50F3               	movf	prodl,w,c
 25604  008CCC  0101               	movlb	1	; () banked
 25605  008CCE  2506               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 25606  008CD0  6EE1               	movwf	fsr1l,c
 25607  008CD2  50F4               	movf	prodh,w,c
 25608  008CD4  0101               	movlb	1	; () banked
 25609  008CD6  2107               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 25610  008CD8  6EE2               	movwf	fsr1h,c
 25611  008CDA  CFDF FFE7          	movff	indf2,indf1
 25612                           
 25613                           ; BSR set to: 1
 25614  008CDE  0101               	movlb	1	; () banked
 25615  008CE0  2B08               	incf	AddNodeToNetworkTable@i& (0+255),f,b
 25616  008CE2  D7CF               	goto	l17740
 25617  008CE4                     l904:
 25618                           
 25619                           ;miwi_mesh.c: 3408: }
 25620                           ;miwi_mesh.c: 3409: }
 25621                           ;miwi_mesh.c: 3411: if(tempNodeStatus.bits.shortAddressValid)
 25622  008CE4  0100               	movlb	0	; () banked
 25623  008CE6  A7A0               	btfss	_tempNodeStatus& (0+255),3,b
 25624  008CE8  D011               	goto	l907
 25625                           
 25626                           ; BSR set to: 0
 25627                           ;miwi_mesh.c: 3412: {
 25628                           ;miwi_mesh.c: 3413: ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
 25629  008CEA  0101               	movlb	1	; () banked
 25630  008CEC  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25631  008CEE  0D09               	mullw	9
 25632  008CF0  0E02               	movlw	2
 25633  008CF2  26F3               	addwf	prodl,f,c
 25634  008CF4  0E00               	movlw	0
 25635  008CF6  22F4               	addwfc	prodh,f,c
 25636  008CF8  0E00               	movlw	low _ConnectionTable
 25637  008CFA  24F3               	addwf	prodl,w,c
 25638  008CFC  6ED9               	movwf	fsr2l,c
 25639  008CFE  0E06               	movlw	high _ConnectionTable
 25640  008D00  20F4               	addwfc	prodh,w,c
 25641  008D02  6EDA               	movwf	fsr2h,c
 25642  008D04  C1F4  FFDE         	movff	_tempShortAddress,postinc2
 25643  008D08  C1F5  FFDD         	movff	_tempShortAddress+1,postdec2
 25644  008D0C                     l907:
 25645                           
 25646                           ;miwi_mesh.c: 3414: }
 25647                           ;miwi_mesh.c: 3416: ConnectionTable[handle].PANID.Val = tempPANID.Val;
 25648  008D0C  0101               	movlb	1	; () banked
 25649  008D0E  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25650  008D10  0D09               	mullw	9
 25651  008D12  0E00               	movlw	low _ConnectionTable
 25652  008D14  24F3               	addwf	prodl,w,c
 25653  008D16  6ED9               	movwf	fsr2l,c
 25654  008D18  0E06               	movlw	high _ConnectionTable
 25655  008D1A  20F4               	addwfc	prodh,w,c
 25656  008D1C  6EDA               	movwf	fsr2h,c
 25657  008D1E  C1BB  FFDE         	movff	_tempPANID,postinc2
 25658  008D22  C1BC  FFDD         	movff	_tempPANID+1,postdec2
 25659                           
 25660                           ;miwi_mesh.c: 3418: IncomingFrameCounter[handle].Val = 0;
 25661  008D26  0101               	movlb	1	; () banked
 25662  008D28  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25663  008D2A  0D04               	mullw	4
 25664  008D2C  0E00               	movlw	low _IncomingFrameCounter
 25665  008D2E  24F3               	addwf	prodl,w,c
 25666  008D30  6ED9               	movwf	fsr2l,c
 25667  008D32  0E05               	movlw	high _IncomingFrameCounter
 25668  008D34  20F4               	addwfc	prodh,w,c
 25669  008D36  6EDA               	movwf	fsr2h,c
 25670  008D38  6ADE               	clrf	postinc2,c
 25671  008D3A  6ADE               	clrf	postinc2,c
 25672  008D3C  6ADE               	clrf	postinc2,c
 25673  008D3E  6ADD               	clrf	postdec2,c
 25674  008D40                     l17752:
 25675                           
 25676                           ; BSR set to: 1
 25677                           ;miwi_mesh.c: 3420: }
 25678                           ;miwi_mesh.c: 3422: return handle;
 25679  008D40  0101               	movlb	1	; () banked
 25680  008D42  5109               	movf	AddNodeToNetworkTable@handle& (0+255),w,b
 25681  008D44  0012               	return	
 25682  008D46                     __end_of_AddNodeToNetworkTable:
 25683                           	opt stack 0
 25684                           tblptru	equ	0xFF8
 25685                           tblptrh	equ	0xFF7
 25686                           tblptrl	equ	0xFF6
 25687                           tablat	equ	0xFF5
 25688                           prodh	equ	0xFF4
 25689                           prodl	equ	0xFF3
 25690                           intcon	equ	0xFF2
 25691                           intcon2	equ	0xFF1
 25692                           intcon3	equ	0xFF0
 25693                           indf0	equ	0xFEF
 25694                           postinc0	equ	0xFEE
 25695                           plusw0	equ	0xFEB
 25696                           fsr0h	equ	0xFEA
 25697                           fsr0l	equ	0xFE9
 25698                           wreg	equ	0xFE8
 25699                           indf1	equ	0xFE7
 25700                           postinc1	equ	0xFE6
 25701                           postdec1	equ	0xFE5
 25702                           fsr1h	equ	0xFE2
 25703                           fsr1l	equ	0xFE1
 25704                           indf2	equ	0xFDF
 25705                           postinc2	equ	0xFDE
 25706                           postdec2	equ	0xFDD
 25707                           plusw2	equ	0xFDB
 25708                           fsr2h	equ	0xFDA
 25709                           fsr2l	equ	0xFD9
 25710                           status	equ	0xFD8
 25711                           
 25712 ;; *************** function _findNextNetworkEntry *****************
 25713 ;; Defined at:
 25714 ;;		line 2584 in file "src/miwi/miwi_mesh.c"
 25715 ;; Parameters:    Size  Location     Type
 25716 ;;		None
 25717 ;; Auto vars:     Size  Location     Type
 25718 ;;  i               1    0[BANK1 ] unsigned char 
 25719 ;; Return value:  Size  Location     Type
 25720 ;;                  1    wreg      unsigned char 
 25721 ;; Registers used:
 25722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25723 ;; Tracked objects:
 25724 ;;		On entry : 0/0
 25725 ;;		On exit  : 0/0
 25726 ;;		Unchanged: 0/0
 25727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25729 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25731 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25732 ;;Total ram usage:        1 bytes
 25733 ;; Hardware stack levels used:    1
 25734 ;; Hardware stack levels required when called:   16
 25735 ;; This function calls:
 25736 ;;		Nothing
 25737 ;; This function is called by:
 25738 ;;		_MiWiTasks
 25739 ;;		_AddNodeToNetworkTable
 25740 ;;		_MiApp_EstablishConnection
 25741 ;; This function uses a non-reentrant model
 25742 ;;
 25743                           
 25744                           	psect	text59
 25745  00B79C                     __ptext59:
 25746                           	opt stack 0
 25747  00B79C                     _findNextNetworkEntry:
 25748                           	opt stack 13
 25749                           
 25750                           ;miwi_mesh.c: 2586: uint8_t i;
 25751                           ;miwi_mesh.c: 2588: for(i=0;i<64;i++)
 25752                           
 25753                           ; BSR set to: 1
 25754                           ;incstack = 0
 25755  00B79C  0E00               	movlw	0
 25756  00B79E  0101               	movlb	1	; () banked
 25757  00B7A0  6F00               	movwf	findNextNetworkEntry@i& (0+255),b
 25758  00B7A2                     l17470:
 25759                           
 25760                           ; BSR set to: 1
 25761  00B7A2  0E3F               	movlw	63
 25762  00B7A4  0101               	movlb	1	; () banked
 25763  00B7A6  6500               	cpfsgt	findNextNetworkEntry@i& (0+255),b
 25764  00B7A8  D001               	goto	l17474
 25765  00B7AA  D015               	goto	l17484
 25766  00B7AC                     l17474:
 25767                           
 25768                           ; BSR set to: 1
 25769                           ;miwi_mesh.c: 2589: {
 25770                           ;miwi_mesh.c: 2590: if(ConnectionTable[i].status.bits.isValid == 0)
 25771  00B7AC  0101               	movlb	1	; () banked
 25772  00B7AE  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 25773  00B7B0  0D09               	mullw	9
 25774  00B7B2  0E08               	movlw	8
 25775  00B7B4  26F3               	addwf	prodl,f,c
 25776  00B7B6  0E00               	movlw	0
 25777  00B7B8  22F4               	addwfc	prodh,f,c
 25778  00B7BA  0E00               	movlw	low _ConnectionTable
 25779  00B7BC  24F3               	addwf	prodl,w,c
 25780  00B7BE  6ED9               	movwf	fsr2l,c
 25781  00B7C0  0E06               	movlw	high _ConnectionTable
 25782  00B7C2  20F4               	addwfc	prodh,w,c
 25783  00B7C4  6EDA               	movwf	fsr2h,c
 25784  00B7C6  BEDF               	btfsc	indf2,7,c
 25785  00B7C8  D003               	goto	l17480
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;miwi_mesh.c: 2591: {
 25789                           ;miwi_mesh.c: 2592: return i;
 25790  00B7CA  0101               	movlb	1	; () banked
 25791  00B7CC  5100               	movf	findNextNetworkEntry@i& (0+255),w,b
 25792                           
 25793                           ; BSR set to: 1
 25794  00B7CE  0012               	return	
 25795  00B7D0                     l17480:
 25796                           
 25797                           ; BSR set to: 1
 25798  00B7D0  0101               	movlb	1	; () banked
 25799  00B7D2  2B00               	incf	findNextNetworkEntry@i& (0+255),f,b
 25800  00B7D4  D7E6               	goto	l17470
 25801  00B7D6                     l17484:
 25802                           
 25803                           ; BSR set to: 1
 25804                           ;miwi_mesh.c: 2593: }
 25805                           ;miwi_mesh.c: 2594: }
 25806                           ;miwi_mesh.c: 2595: return 0xFF;
 25807  00B7D6  0EFF               	movlw	255
 25808  00B7D8  0012               	return	
 25809  00B7DA                     __end_of_findNextNetworkEntry:
 25810                           	opt stack 0
 25811                           tblptru	equ	0xFF8
 25812                           tblptrh	equ	0xFF7
 25813                           tblptrl	equ	0xFF6
 25814                           tablat	equ	0xFF5
 25815                           prodh	equ	0xFF4
 25816                           prodl	equ	0xFF3
 25817                           intcon	equ	0xFF2
 25818                           intcon2	equ	0xFF1
 25819                           intcon3	equ	0xFF0
 25820                           indf0	equ	0xFEF
 25821                           postinc0	equ	0xFEE
 25822                           plusw0	equ	0xFEB
 25823                           fsr0h	equ	0xFEA
 25824                           fsr0l	equ	0xFE9
 25825                           wreg	equ	0xFE8
 25826                           indf1	equ	0xFE7
 25827                           postinc1	equ	0xFE6
 25828                           postdec1	equ	0xFE5
 25829                           fsr1h	equ	0xFE2
 25830                           fsr1l	equ	0xFE1
 25831                           indf2	equ	0xFDF
 25832                           postinc2	equ	0xFDE
 25833                           postdec2	equ	0xFDD
 25834                           plusw2	equ	0xFDB
 25835                           fsr2h	equ	0xFDA
 25836                           fsr2l	equ	0xFD9
 25837                           status	equ	0xFD8
 25838                           
 25839 ;; *************** function _SearchForShortAddress *****************
 25840 ;; Defined at:
 25841 ;;		line 3246 in file "src/miwi/miwi_mesh.c"
 25842 ;; Parameters:    Size  Location     Type
 25843 ;;		None
 25844 ;; Auto vars:     Size  Location     Type
 25845 ;;  i               1    2[BANK1 ] unsigned char 
 25846 ;; Return value:  Size  Location     Type
 25847 ;;                  1    wreg      unsigned char 
 25848 ;; Registers used:
 25849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25850 ;; Tracked objects:
 25851 ;;		On entry : 0/0
 25852 ;;		On exit  : 0/0
 25853 ;;		Unchanged: 0/0
 25854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25856 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25857 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25858 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25859 ;;Total ram usage:        3 bytes
 25860 ;; Hardware stack levels used:    1
 25861 ;; Hardware stack levels required when called:   16
 25862 ;; This function calls:
 25863 ;;		Nothing
 25864 ;; This function is called by:
 25865 ;;		_MiWiTasks
 25866 ;;		_RouteMessage
 25867 ;;		_AddNodeToNetworkTable
 25868 ;;		_OpenSocket
 25869 ;; This function uses a non-reentrant model
 25870 ;;
 25871                           
 25872                           	psect	text60
 25873  00AF04                     __ptext60:
 25874                           	opt stack 0
 25875  00AF04                     _SearchForShortAddress:
 25876                           	opt stack 11
 25877                           
 25878                           ;miwi_mesh.c: 3248: uint8_t i;
 25879                           ;miwi_mesh.c: 3250: for(i=0;i<64;i++)
 25880                           
 25881                           ; BSR set to: 1
 25882                           ;incstack = 0
 25883  00AF04  0E00               	movlw	0
 25884  00AF06  0101               	movlb	1	; () banked
 25885  00AF08  6F02               	movwf	SearchForShortAddress@i& (0+255),b
 25886  00AF0A                     l17082:
 25887                           
 25888                           ; BSR set to: 1
 25889  00AF0A  0E3F               	movlw	63
 25890  00AF0C  0101               	movlb	1	; () banked
 25891  00AF0E  6502               	cpfsgt	SearchForShortAddress@i& (0+255),b
 25892  00AF10  D001               	goto	l17086
 25893  00AF12  D03A               	goto	l17100
 25894  00AF14                     l17086:
 25895                           
 25896                           ; BSR set to: 1
 25897                           ;miwi_mesh.c: 3251: {
 25898                           ;miwi_mesh.c: 3252: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.shortAddressValid)
 25899  00AF14  0101               	movlb	1	; () banked
 25900  00AF16  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25901  00AF18  0D09               	mullw	9
 25902  00AF1A  0E08               	movlw	8
 25903  00AF1C  26F3               	addwf	prodl,f,c
 25904  00AF1E  0E00               	movlw	0
 25905  00AF20  22F4               	addwfc	prodh,f,c
 25906  00AF22  0E00               	movlw	low _ConnectionTable
 25907  00AF24  24F3               	addwf	prodl,w,c
 25908  00AF26  6ED9               	movwf	fsr2l,c
 25909  00AF28  0E06               	movlw	high _ConnectionTable
 25910  00AF2A  20F4               	addwfc	prodh,w,c
 25911  00AF2C  6EDA               	movwf	fsr2h,c
 25912  00AF2E  AEDF               	btfss	indf2,7,c
 25913  00AF30  D028               	goto	l17096
 25914                           
 25915                           ; BSR set to: 1
 25916  00AF32  0101               	movlb	1	; () banked
 25917  00AF34  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25918  00AF36  0D09               	mullw	9
 25919  00AF38  0E08               	movlw	8
 25920  00AF3A  26F3               	addwf	prodl,f,c
 25921  00AF3C  0E00               	movlw	0
 25922  00AF3E  22F4               	addwfc	prodh,f,c
 25923  00AF40  0E00               	movlw	low _ConnectionTable
 25924  00AF42  24F3               	addwf	prodl,w,c
 25925  00AF44  6ED9               	movwf	fsr2l,c
 25926  00AF46  0E06               	movlw	high _ConnectionTable
 25927  00AF48  20F4               	addwfc	prodh,w,c
 25928  00AF4A  6EDA               	movwf	fsr2h,c
 25929  00AF4C  A6DF               	btfss	indf2,3,c
 25930  00AF4E  D019               	goto	l17096
 25931                           
 25932                           ; BSR set to: 1
 25933                           ;miwi_mesh.c: 3253: {
 25934                           ;miwi_mesh.c: 3254: if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
 25935  00AF50  0101               	movlb	1	; () banked
 25936  00AF52  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25937  00AF54  0D09               	mullw	9
 25938  00AF56  0E02               	movlw	2
 25939  00AF58  26F3               	addwf	prodl,f,c
 25940  00AF5A  0E00               	movlw	0
 25941  00AF5C  22F4               	addwfc	prodh,f,c
 25942  00AF5E  0E00               	movlw	low _ConnectionTable
 25943  00AF60  24F3               	addwf	prodl,w,c
 25944  00AF62  6ED9               	movwf	fsr2l,c
 25945  00AF64  0E06               	movlw	high _ConnectionTable
 25946  00AF66  20F4               	addwfc	prodh,w,c
 25947  00AF68  6EDA               	movwf	fsr2h,c
 25948  00AF6A  0101               	movlb	1	; () banked
 25949  00AF6C  51F4               	movf	_tempShortAddress& (0+255),w,b
 25950  00AF6E  18DE               	xorwf	postinc2,w,c
 25951  00AF70  E108               	bnz	l17096
 25952  00AF72  0101               	movlb	1	; () banked
 25953  00AF74  51F5               	movf	(_tempShortAddress+1)& (0+255),w,b
 25954  00AF76  18DE               	xorwf	postinc2,w,c
 25955  00AF78  A4D8               	btfss	status,2,c
 25956  00AF7A  D003               	goto	l17096
 25957                           
 25958                           ; BSR set to: 1
 25959                           ;miwi_mesh.c: 3255: {
 25960                           ;miwi_mesh.c: 3256: return i;
 25961  00AF7C  0101               	movlb	1	; () banked
 25962  00AF7E  5102               	movf	SearchForShortAddress@i& (0+255),w,b
 25963                           
 25964                           ; BSR set to: 1
 25965  00AF80  0012               	return	
 25966  00AF82                     l17096:
 25967                           
 25968                           ; BSR set to: 1
 25969  00AF82  0101               	movlb	1	; () banked
 25970  00AF84  2B02               	incf	SearchForShortAddress@i& (0+255),f,b
 25971  00AF86  D7C1               	goto	l17082
 25972  00AF88                     l17100:
 25973                           
 25974                           ; BSR set to: 1
 25975                           ;miwi_mesh.c: 3257: }
 25976                           ;miwi_mesh.c: 3258: }
 25977                           ;miwi_mesh.c: 3259: }
 25978                           ;miwi_mesh.c: 3260: return 0xFF;
 25979  00AF88  0EFF               	movlw	255
 25980  00AF8A  0012               	return	
 25981  00AF8C                     __end_of_SearchForShortAddress:
 25982                           	opt stack 0
 25983                           tblptru	equ	0xFF8
 25984                           tblptrh	equ	0xFF7
 25985                           tblptrl	equ	0xFF6
 25986                           tablat	equ	0xFF5
 25987                           prodh	equ	0xFF4
 25988                           prodl	equ	0xFF3
 25989                           intcon	equ	0xFF2
 25990                           intcon2	equ	0xFF1
 25991                           intcon3	equ	0xFF0
 25992                           indf0	equ	0xFEF
 25993                           postinc0	equ	0xFEE
 25994                           plusw0	equ	0xFEB
 25995                           fsr0h	equ	0xFEA
 25996                           fsr0l	equ	0xFE9
 25997                           wreg	equ	0xFE8
 25998                           indf1	equ	0xFE7
 25999                           postinc1	equ	0xFE6
 26000                           postdec1	equ	0xFE5
 26001                           fsr1h	equ	0xFE2
 26002                           fsr1l	equ	0xFE1
 26003                           indf2	equ	0xFDF
 26004                           postinc2	equ	0xFDE
 26005                           postdec2	equ	0xFDD
 26006                           plusw2	equ	0xFDB
 26007                           fsr2h	equ	0xFDA
 26008                           fsr2l	equ	0xFD9
 26009                           status	equ	0xFD8
 26010                           
 26011 ;; *************** function _SearchForLongAddress *****************
 26012 ;; Defined at:
 26013 ;;		line 3327 in file "src/miwi/miwi_mesh.c"
 26014 ;; Parameters:    Size  Location     Type
 26015 ;;		None
 26016 ;; Auto vars:     Size  Location     Type
 26017 ;;  i               1    5[BANK1 ] unsigned char 
 26018 ;;  j               1    4[BANK1 ] unsigned char 
 26019 ;; Return value:  Size  Location     Type
 26020 ;;                  1    wreg      unsigned char 
 26021 ;; Registers used:
 26022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26023 ;; Tracked objects:
 26024 ;;		On entry : 0/0
 26025 ;;		On exit  : 0/0
 26026 ;;		Unchanged: 0/0
 26027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26029 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26030 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26031 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26032 ;;Total ram usage:        6 bytes
 26033 ;; Hardware stack levels used:    1
 26034 ;; Hardware stack levels required when called:   16
 26035 ;; This function calls:
 26036 ;;		Nothing
 26037 ;; This function is called by:
 26038 ;;		_MiWiTasks
 26039 ;;		_AddNodeToNetworkTable
 26040 ;;		_MiApp_UnicastAddress
 26041 ;;		_MiApp_EstablishConnection
 26042 ;; This function uses a non-reentrant model
 26043 ;;
 26044                           
 26045                           	psect	text61
 26046  009D5E                     __ptext61:
 26047                           	opt stack 0
 26048  009D5E                     _SearchForLongAddress:
 26049                           	opt stack 13
 26050                           
 26051                           ;miwi_mesh.c: 3329: uint8_t i,j;
 26052                           ;miwi_mesh.c: 3331: for(i=0;i<64;i++)
 26053                           
 26054                           ; BSR set to: 1
 26055                           ;incstack = 0
 26056  009D5E  0E00               	movlw	0
 26057  009D60  0101               	movlb	1	; () banked
 26058  009D62  6F05               	movwf	SearchForLongAddress@i& (0+255),b
 26059  009D64                     l17490:
 26060                           
 26061                           ; BSR set to: 1
 26062  009D64  0E3F               	movlw	63
 26063  009D66  0101               	movlb	1	; () banked
 26064  009D68  6505               	cpfsgt	SearchForLongAddress@i& (0+255),b
 26065  009D6A  D001               	goto	l17494
 26066  009D6C  D05A               	goto	l17520
 26067  009D6E                     l17494:
 26068                           
 26069                           ; BSR set to: 1
 26070                           ;miwi_mesh.c: 3332: {
 26071                           ;miwi_mesh.c: 3333: if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.longAddressValid)
 26072  009D6E  0101               	movlb	1	; () banked
 26073  009D70  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26074  009D72  0D09               	mullw	9
 26075  009D74  0E08               	movlw	8
 26076  009D76  26F3               	addwf	prodl,f,c
 26077  009D78  0E00               	movlw	0
 26078  009D7A  22F4               	addwfc	prodh,f,c
 26079  009D7C  0E00               	movlw	low _ConnectionTable
 26080  009D7E  24F3               	addwf	prodl,w,c
 26081  009D80  6ED9               	movwf	fsr2l,c
 26082  009D82  0E06               	movlw	high _ConnectionTable
 26083  009D84  20F4               	addwfc	prodh,w,c
 26084  009D86  6EDA               	movwf	fsr2h,c
 26085  009D88  AEDF               	btfss	indf2,7,c
 26086  009D8A  D048               	goto	l17516
 26087                           
 26088                           ; BSR set to: 1
 26089  009D8C  0101               	movlb	1	; () banked
 26090  009D8E  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26091  009D90  0D09               	mullw	9
 26092  009D92  0E08               	movlw	8
 26093  009D94  26F3               	addwf	prodl,f,c
 26094  009D96  0E00               	movlw	0
 26095  009D98  22F4               	addwfc	prodh,f,c
 26096  009D9A  0E00               	movlw	low _ConnectionTable
 26097  009D9C  24F3               	addwf	prodl,w,c
 26098  009D9E  6ED9               	movwf	fsr2l,c
 26099  009DA0  0E06               	movlw	high _ConnectionTable
 26100  009DA2  20F4               	addwfc	prodh,w,c
 26101  009DA4  6EDA               	movwf	fsr2h,c
 26102  009DA6  A4DF               	btfss	indf2,2,c
 26103  009DA8  D039               	goto	l17516
 26104                           
 26105                           ; BSR set to: 1
 26106                           ;miwi_mesh.c: 3334: {
 26107                           ;miwi_mesh.c: 3335: for(j=0;j<4;j++)
 26108  009DAA  0E00               	movlw	0
 26109  009DAC  0101               	movlb	1	; () banked
 26110  009DAE  6F04               	movwf	SearchForLongAddress@j& (0+255),b
 26111  009DB0                     l17500:
 26112                           
 26113                           ; BSR set to: 1
 26114  009DB0  0E03               	movlw	3
 26115  009DB2  0101               	movlb	1	; () banked
 26116  009DB4  6504               	cpfsgt	SearchForLongAddress@j& (0+255),b
 26117  009DB6  D001               	goto	l17504
 26118  009DB8  D02E               	goto	l17512
 26119  009DBA                     l17504:
 26120                           
 26121                           ; BSR set to: 1
 26122                           ;miwi_mesh.c: 3336: {
 26123                           ;miwi_mesh.c: 3337: if(ConnectionTable[i].Address[j] != tempLongAddress[j])
 26124  009DBA  0101               	movlb	1	; () banked
 26125  009DBC  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 26126  009DBE  0D01               	mullw	1
 26127  009DC0  0EA6               	movlw	low _tempLongAddress
 26128  009DC2  24F3               	addwf	prodl,w,c
 26129  009DC4  6ED9               	movwf	fsr2l,c
 26130  009DC6  0E01               	movlw	high _tempLongAddress
 26131  009DC8  20F4               	addwfc	prodh,w,c
 26132  009DCA  6EDA               	movwf	fsr2h,c
 26133  009DCC  0101               	movlb	1	; () banked
 26134  009DCE  5104               	movf	SearchForLongAddress@j& (0+255),w,b
 26135  009DD0  0D01               	mullw	1
 26136  009DD2  0E04               	movlw	4
 26137  009DD4  26F3               	addwf	prodl,f,c
 26138  009DD6  0E00               	movlw	0
 26139  009DD8  22F4               	addwfc	prodh,f,c
 26140  009DDA  0E00               	movlw	low _ConnectionTable
 26141  009DDC  0101               	movlb	1	; () banked
 26142  009DDE  6F01               	movwf	(??_SearchForLongAddress+1)& (0+255),b
 26143  009DE0  0E06               	movlw	high _ConnectionTable
 26144  009DE2  0101               	movlb	1	; () banked
 26145  009DE4  6F02               	movwf	(??_SearchForLongAddress+2)& (0+255),b
 26146  009DE6  50F3               	movf	prodl,w,c
 26147  009DE8  0101               	movlb	1	; () banked
 26148  009DEA  2701               	addwf	(??_SearchForLongAddress+1)& (0+255),f,b
 26149  009DEC  50F4               	movf	prodh,w,c
 26150  009DEE  0101               	movlb	1	; () banked
 26151  009DF0  2302               	addwfc	(??_SearchForLongAddress+2)& (0+255),f,b
 26152  009DF2  0101               	movlb	1	; () banked
 26153  009DF4  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26154  009DF6  0D09               	mullw	9
 26155  009DF8  50F3               	movf	prodl,w,c
 26156  009DFA  0101               	movlb	1	; () banked
 26157  009DFC  2501               	addwf	(??_SearchForLongAddress+1)& (0+255),w,b
 26158  009DFE  6EE1               	movwf	fsr1l,c
 26159  009E00  50F4               	movf	prodh,w,c
 26160  009E02  0101               	movlb	1	; () banked
 26161  009E04  2102               	addwfc	(??_SearchForLongAddress+2)& (0+255),w,b
 26162  009E06  6EE2               	movwf	fsr1h,c
 26163  009E08  50DE               	movf	postinc2,w,c
 26164  009E0A  18E6               	xorwf	postinc1,w,c
 26165  009E0C  A4D8               	btfss	status,2,c
 26166  009E0E  D006               	goto	l17516
 26167                           
 26168                           ; BSR set to: 1
 26169                           
 26170                           ; BSR set to: 1
 26171                           
 26172                           ; BSR set to: 1
 26173                           ;miwi_mesh.c: 3338: {
 26174                           ;miwi_mesh.c: 3339: goto EndOfSearchLoop;
 26175  009E10  0101               	movlb	1	; () banked
 26176  009E12  2B04               	incf	SearchForLongAddress@j& (0+255),f,b
 26177  009E14  D7CD               	goto	l17500
 26178  009E16                     l17512:
 26179                           
 26180                           ; BSR set to: 1
 26181                           ;miwi_mesh.c: 3340: }
 26182                           ;miwi_mesh.c: 3341: }
 26183                           ;miwi_mesh.c: 3342: return i;
 26184  009E16  0101               	movlb	1	; () banked
 26185  009E18  5105               	movf	SearchForLongAddress@i& (0+255),w,b
 26186                           
 26187                           ; BSR set to: 1
 26188  009E1A  0012               	return	
 26189  009E1C                     l17516:
 26190                           
 26191                           ; BSR set to: 1
 26192                           ;miwi_mesh.c: 3345: ;
 26193  009E1C  0101               	movlb	1	; () banked
 26194  009E1E  2B05               	incf	SearchForLongAddress@i& (0+255),f,b
 26195  009E20  D7A1               	goto	l17490
 26196  009E22                     l17520:
 26197                           
 26198                           ; BSR set to: 1
 26199                           ;miwi_mesh.c: 3346: }
 26200                           ;miwi_mesh.c: 3347: return 0xFF;
 26201  009E22  0EFF               	movlw	255
 26202  009E24  0012               	return	
 26203  009E26                     __end_of_SearchForLongAddress:
 26204                           	opt stack 0
 26205                           tblptru	equ	0xFF8
 26206                           tblptrh	equ	0xFF7
 26207                           tblptrl	equ	0xFF6
 26208                           tablat	equ	0xFF5
 26209                           prodh	equ	0xFF4
 26210                           prodl	equ	0xFF3
 26211                           intcon	equ	0xFF2
 26212                           intcon2	equ	0xFF1
 26213                           intcon3	equ	0xFF0
 26214                           indf0	equ	0xFEF
 26215                           postinc0	equ	0xFEE
 26216                           plusw0	equ	0xFEB
 26217                           fsr0h	equ	0xFEA
 26218                           fsr0l	equ	0xFE9
 26219                           wreg	equ	0xFE8
 26220                           indf1	equ	0xFE7
 26221                           postinc1	equ	0xFE6
 26222                           postdec1	equ	0xFE5
 26223                           fsr1h	equ	0xFE2
 26224                           fsr1l	equ	0xFE1
 26225                           indf2	equ	0xFDF
 26226                           postinc2	equ	0xFDE
 26227                           postdec2	equ	0xFDD
 26228                           plusw2	equ	0xFDB
 26229                           fsr2h	equ	0xFDA
 26230                           fsr2l	equ	0xFD9
 26231                           status	equ	0xFD8
 26232                           
 26233 ;; *************** function _MiApp_DiscardMessage *****************
 26234 ;; Defined at:
 26235 ;;		line 4243 in file "src/miwi/miwi_mesh.c"
 26236 ;; Parameters:    Size  Location     Type
 26237 ;;		None
 26238 ;; Auto vars:     Size  Location     Type
 26239 ;;		None
 26240 ;; Return value:  Size  Location     Type
 26241 ;;		None               void
 26242 ;; Registers used:
 26243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26244 ;; Tracked objects:
 26245 ;;		On entry : 0/0
 26246 ;;		On exit  : 0/0
 26247 ;;		Unchanged: 0/0
 26248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26253 ;;Total ram usage:        0 bytes
 26254 ;; Hardware stack levels used:    1
 26255 ;; Hardware stack levels required when called:   17
 26256 ;; This function calls:
 26257 ;;		_MiMAC_DiscardPacket
 26258 ;; This function is called by:
 26259 ;;		_MiApp_UnicastAddress
 26260 ;;		_main
 26261 ;;		_MiApp_SearchConnection
 26262 ;;		_MiApp_EstablishConnection
 26263 ;;		_MiApp_UnicastConnection
 26264 ;;		_do_NETWORK_REGISTER
 26265 ;;		_do_POWER_TEST
 26266 ;;		_do_PING
 26267 ;;		_do_UPDATE
 26268 ;; This function uses a non-reentrant model
 26269 ;;
 26270                           
 26271                           	psect	text62
 26272  00BB82                     __ptext62:
 26273                           	opt stack 0
 26274  00BB82                     _MiApp_DiscardMessage:
 26275                           	opt stack 12
 26276                           
 26277                           ;miwi_mesh.c: 4245: MiWiStateMachine.bits.RxHasUserData = 0;
 26278                           
 26279                           ; BSR set to: 1
 26280                           ;incstack = 0
 26281  00BB82  0101               	movlb	1	; () banked
 26282  00BB84  95B5               	bcf	_MiWiStateMachine& (0+255),2,b
 26283                           
 26284                           ; BSR set to: 1
 26285                           ;miwi_mesh.c: 4246: MiMAC_DiscardPacket();
 26286  00BB86  EC56  F05D         	call	_MiMAC_DiscardPacket	;wreg free
 26287  00BB8A  0012               	return		;funcret
 26288  00BB8C                     __end_of_MiApp_DiscardMessage:
 26289                           	opt stack 0
 26290                           tblptru	equ	0xFF8
 26291                           tblptrh	equ	0xFF7
 26292                           tblptrl	equ	0xFF6
 26293                           tablat	equ	0xFF5
 26294                           prodh	equ	0xFF4
 26295                           prodl	equ	0xFF3
 26296                           intcon	equ	0xFF2
 26297                           intcon2	equ	0xFF1
 26298                           intcon3	equ	0xFF0
 26299                           indf0	equ	0xFEF
 26300                           postinc0	equ	0xFEE
 26301                           plusw0	equ	0xFEB
 26302                           fsr0h	equ	0xFEA
 26303                           fsr0l	equ	0xFE9
 26304                           wreg	equ	0xFE8
 26305                           indf1	equ	0xFE7
 26306                           postinc1	equ	0xFE6
 26307                           postdec1	equ	0xFE5
 26308                           fsr1h	equ	0xFE2
 26309                           fsr1l	equ	0xFE1
 26310                           indf2	equ	0xFDF
 26311                           postinc2	equ	0xFDE
 26312                           postdec2	equ	0xFDD
 26313                           plusw2	equ	0xFDB
 26314                           fsr2h	equ	0xFDA
 26315                           fsr2l	equ	0xFD9
 26316                           status	equ	0xFD8
 26317                           
 26318 ;; *************** function _MiMAC_DiscardPacket *****************
 26319 ;; Defined at:
 26320 ;;		line 1048 in file "src/miwi/drv_mrf_miwi_89xa.c"
 26321 ;; Parameters:    Size  Location     Type
 26322 ;;		None
 26323 ;; Auto vars:     Size  Location     Type
 26324 ;;		None
 26325 ;; Return value:  Size  Location     Type
 26326 ;;		None               void
 26327 ;; Registers used:
 26328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26329 ;; Tracked objects:
 26330 ;;		On entry : 0/0
 26331 ;;		On exit  : 0/0
 26332 ;;		Unchanged: 0/0
 26333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26338 ;;Total ram usage:        0 bytes
 26339 ;; Hardware stack levels used:    1
 26340 ;; Hardware stack levels required when called:   16
 26341 ;; This function calls:
 26342 ;;		Nothing
 26343 ;; This function is called by:
 26344 ;;		_MiWiTasks
 26345 ;;		_MiApp_DiscardMessage
 26346 ;; This function uses a non-reentrant model
 26347 ;;
 26348                           
 26349                           	psect	text63
 26350  00BAAC                     __ptext63:
 26351                           	opt stack 0
 26352  00BAAC                     _MiMAC_DiscardPacket:
 26353                           	opt stack 13
 26354                           
 26355                           ;drv_mrf_miwi_89xa.c: 1050: if( ReceivedBankIndex < 2 )
 26356                           
 26357                           ;incstack = 0
 26358  00BAAC  0E02               	movlw	2
 26359  00BAAE  0101               	movlb	1	; () banked
 26360  00BAB0  61C5               	cpfslt	_ReceivedBankIndex& (0+255),b
 26361  00BAB2  0012               	return	
 26362                           
 26363                           ; BSR set to: 1
 26364                           ;drv_mrf_miwi_89xa.c: 1051: {
 26365                           ;drv_mrf_miwi_89xa.c: 1052: RxPacket[ReceivedBankIndex].flags.Val = 0;
 26366  00BAB4  0101               	movlb	1	; () banked
 26367  00BAB6  51C5               	movf	_ReceivedBankIndex& (0+255),w,b
 26368  00BAB8  0D42               	mullw	66
 26369  00BABA  0E00               	movlw	low _RxPacket
 26370  00BABC  24F3               	addwf	prodl,w,c
 26371  00BABE  6ED9               	movwf	fsr2l,c
 26372  00BAC0  0E03               	movlw	high _RxPacket
 26373  00BAC2  20F4               	addwfc	prodh,w,c
 26374  00BAC4  6EDA               	movwf	fsr2h,c
 26375  00BAC6  0E00               	movlw	0
 26376  00BAC8  6EDF               	movwf	indf2,c
 26377                           
 26378                           ; BSR set to: 1
 26379                           ;drv_mrf_miwi_89xa.c: 1053: ReceivedBankIndex = 0xFF;
 26380  00BACA  0101               	movlb	1	; () banked
 26381  00BACC  69C5               	setf	_ReceivedBankIndex& (0+255),b
 26382  00BACE  0012               	return	
 26383  00BAD0                     __end_of_MiMAC_DiscardPacket:
 26384                           	opt stack 0
 26385                           tblptru	equ	0xFF8
 26386                           tblptrh	equ	0xFF7
 26387                           tblptrl	equ	0xFF6
 26388                           tablat	equ	0xFF5
 26389                           prodh	equ	0xFF4
 26390                           prodl	equ	0xFF3
 26391                           intcon	equ	0xFF2
 26392                           intcon2	equ	0xFF1
 26393                           intcon3	equ	0xFF0
 26394                           indf0	equ	0xFEF
 26395                           postinc0	equ	0xFEE
 26396                           plusw0	equ	0xFEB
 26397                           fsr0h	equ	0xFEA
 26398                           fsr0l	equ	0xFE9
 26399                           wreg	equ	0xFE8
 26400                           indf1	equ	0xFE7
 26401                           postinc1	equ	0xFE6
 26402                           postdec1	equ	0xFE5
 26403                           fsr1h	equ	0xFE2
 26404                           fsr1l	equ	0xFE1
 26405                           indf2	equ	0xFDF
 26406                           postinc2	equ	0xFDE
 26407                           postdec2	equ	0xFDD
 26408                           plusw2	equ	0xFDB
 26409                           fsr2h	equ	0xFDA
 26410                           fsr2l	equ	0xFD9
 26411                           status	equ	0xFD8
 26412                           
 26413 ;; *************** function _MiApp_StartConnection *****************
 26414 ;; Defined at:
 26415 ;;		line 4853 in file "src/miwi/miwi_mesh.c"
 26416 ;; Parameters:    Size  Location     Type
 26417 ;;  Mode            1    wreg     unsigned char 
 26418 ;;  ScanDuration    1   65[BANK1 ] unsigned char 
 26419 ;;  ChannelMap      4   66[BANK1 ] unsigned long 
 26420 ;; Auto vars:     Size  Location     Type
 26421 ;;  Mode            1   71[BANK1 ] unsigned char 
 26422 ;;  RSSIValue       1   73[BANK1 ] unsigned char 
 26423 ;;  channel         1   72[BANK1 ] unsigned char 
 26424 ;; Return value:  Size  Location     Type
 26425 ;;                  1    wreg      unsigned char 
 26426 ;; Registers used:
 26427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26428 ;; Tracked objects:
 26429 ;;		On entry : 0/0
 26430 ;;		On exit  : 0/0
 26431 ;;		Unchanged: 0/0
 26432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26433 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26434 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26435 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26436 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26437 ;;Total ram usage:        9 bytes
 26438 ;; Hardware stack levels used:    1
 26439 ;; Hardware stack levels required when called:   22
 26440 ;; This function calls:
 26441 ;;		_MiApp_NoiseDetection
 26442 ;;		_MiApp_SetChannel
 26443 ;;		_MiMAC_SetAltAddress
 26444 ;; This function is called by:
 26445 ;;		_main
 26446 ;; This function uses a non-reentrant model
 26447 ;;
 26448                           
 26449                           	psect	text64
 26450  00908A                     __ptext64:
 26451                           	opt stack 0
 26452  00908A                     _MiApp_StartConnection:
 26453                           	opt stack 8
 26454                           
 26455                           ; BSR set to: 1
 26456                           ;incstack = 0
 26457                           ;MiApp_StartConnection@Mode stored from wreg
 26458  00908A  0101               	movlb	1	; () banked
 26459  00908C  6F47               	movwf	MiApp_StartConnection@Mode& (0+255),b
 26460                           
 26461                           ;miwi_mesh.c: 4855: switch(Mode)
 26462  00908E  D079               	goto	l20468
 26463  009090                     l20428:
 26464                           
 26465                           ;miwi_mesh.c: 4859: myShortAddress.Val = 0;
 26466  009090  0E00               	movlw	0
 26467  009092  0101               	movlb	1	; () banked
 26468  009094  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 26469  009096  0E00               	movlw	0
 26470  009098  6FF2               	movwf	_myShortAddress& (0+255),b
 26471                           
 26472                           ; BSR set to: 1
 26473                           ;miwi_mesh.c: 4860: myParent = 0xFF;
 26474  00909A  0101               	movlb	1	; () banked
 26475  00909C  69C9               	setf	_myParent& (0+255),b
 26476                           
 26477                           ;miwi_mesh.c: 4865: myPANID.Val = 0x1337;
 26478  00909E  0E13               	movlw	19
 26479  0090A0  0101               	movlb	1	; () banked
 26480  0090A2  6FF1               	movwf	(_myPANID+1)& (0+255),b
 26481  0090A4  0E37               	movlw	55
 26482  0090A6  6FF0               	movwf	_myPANID& (0+255),b
 26483                           
 26484                           ; BSR set to: 1
 26485                           ;miwi_mesh.c: 4867: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26486  0090A8  0EF2               	movlw	low _myShortAddress
 26487  0090AA  0101               	movlb	1	; () banked
 26488  0090AC  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26489  0090AE  0E01               	movlw	high _myShortAddress
 26490  0090B0  0101               	movlb	1	; () banked
 26491  0090B2  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26492  0090B4  0EF0               	movlw	low _myPANID
 26493  0090B6  0101               	movlb	1	; () banked
 26494  0090B8  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26495  0090BA  0E01               	movlw	high _myPANID
 26496  0090BC  0101               	movlb	1	; () banked
 26497  0090BE  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26498  0090C0  ECD6  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 26499                           
 26500                           ;miwi_mesh.c: 4868: MiWiStateMachine.bits.memberOfNetwork = 1;
 26501  0090C4  0101               	movlb	1	; () banked
 26502  0090C6  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 26503                           
 26504                           ; BSR set to: 1
 26505                           ;miwi_mesh.c: 4869: role = 0x02;
 26506  0090C8  0E02               	movlw	2
 26507  0090CA  0101               	movlb	1	; () banked
 26508  0090CC  6FCA               	movwf	_role& (0+255),b
 26509                           
 26510                           ; BSR set to: 1
 26511                           ;miwi_mesh.c: 4870: MiWiCapacityInfo.bits.Role = role;
 26512  0090CE  C1CA  F146         	movff	_role,??_MiApp_StartConnection
 26513  0090D2  0101               	movlb	1	; () banked
 26514  0090D4  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 26515  0090D6  0101               	movlb	1	; () banked
 26516  0090D8  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 26517  0090DA  0101               	movlb	1	; () banked
 26518  0090DC  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26519  0090DE  0BF9               	andlw	-7
 26520  0090E0  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26521  0090E2  0101               	movlb	1	; () banked
 26522  0090E4  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 26523                           
 26524                           ; BSR set to: 1
 26525                           ;miwi_mesh.c: 4871: knownCoordinators = 0x01;
 26526  0090E6  0E01               	movlw	1
 26527  0090E8  0101               	movlb	1	; () banked
 26528  0090EA  6FC7               	movwf	_knownCoordinators& (0+255),b
 26529                           
 26530                           ; BSR set to: 1
 26531                           ;miwi_mesh.c: 4881: return 1;
 26532                           ;	Return value of _MiApp_StartConnection is never used
 26533  0090EC  0012               	return	
 26534  0090EE                     l20444:
 26535                           
 26536                           ; BSR set to: 1
 26537                           ;miwi_mesh.c: 4886: {
 26538                           ;miwi_mesh.c: 4887: uint8_t channel;
 26539                           ;miwi_mesh.c: 4888: uint8_t RSSIValue;
 26540                           ;miwi_mesh.c: 4890: channel = MiApp_NoiseDetection(ChannelMap, ScanDuration, 0x00, &RSSI
      +                          Value);
 26541  0090EE  C142  F11D         	movff	MiApp_StartConnection@ChannelMap,MiApp_NoiseDetection@ChannelMap
 26542  0090F2  C143  F11E         	movff	MiApp_StartConnection@ChannelMap+1,MiApp_NoiseDetection@ChannelMap+1
 26543  0090F6  C144  F11F         	movff	MiApp_StartConnection@ChannelMap+2,MiApp_NoiseDetection@ChannelMap+2
 26544  0090FA  C145  F120         	movff	MiApp_StartConnection@ChannelMap+3,MiApp_NoiseDetection@ChannelMap+3
 26545  0090FE  C141  F121         	movff	MiApp_StartConnection@ScanDuration,MiApp_NoiseDetection@ScanDuration
 26546  009102  0E00               	movlw	0
 26547  009104  0101               	movlb	1	; () banked
 26548  009106  6F22               	movwf	MiApp_NoiseDetection@DetectionMode& (0+255),b
 26549  009108  0E49               	movlw	low MiApp_StartConnection@RSSIValue
 26550  00910A  0101               	movlb	1	; () banked
 26551  00910C  6F23               	movwf	MiApp_NoiseDetection@RSSIValue& (0+255),b
 26552  00910E  0E01               	movlw	high MiApp_StartConnection@RSSIValue
 26553  009110  0101               	movlb	1	; () banked
 26554  009112  6F24               	movwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),b
 26555  009114  ECD9  F037         	call	_MiApp_NoiseDetection	;wreg free
 26556  009118  0101               	movlb	1	; () banked
 26557  00911A  6F48               	movwf	MiApp_StartConnection@channel& (0+255),b
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;miwi_mesh.c: 4891: MiApp_SetChannel(channel);
 26561  00911C  0101               	movlb	1	; () banked
 26562  00911E  5148               	movf	MiApp_StartConnection@channel& (0+255),w,b
 26563  009120  EC68  F05D         	call	_MiApp_SetChannel
 26564                           
 26565                           ;miwi_mesh.c: 4892: ;
 26566                           ;miwi_mesh.c: 4893: ;
 26567                           ;miwi_mesh.c: 4894: ;
 26568                           ;miwi_mesh.c: 4895: MiWiStateMachine.bits.memberOfNetwork = 1;
 26569  009124  0101               	movlb	1	; () banked
 26570  009126  83B5               	bsf	_MiWiStateMachine& (0+255),1,b
 26571                           
 26572                           ; BSR set to: 1
 26573                           ;miwi_mesh.c: 4896: myShortAddress.Val = 0;
 26574  009128  0E00               	movlw	0
 26575  00912A  0101               	movlb	1	; () banked
 26576  00912C  6FF3               	movwf	(_myShortAddress+1)& (0+255),b
 26577  00912E  0E00               	movlw	0
 26578  009130  6FF2               	movwf	_myShortAddress& (0+255),b
 26579                           
 26580                           ; BSR set to: 1
 26581                           ;miwi_mesh.c: 4897: myParent = 0xFF;
 26582  009132  0101               	movlb	1	; () banked
 26583  009134  69C9               	setf	_myParent& (0+255),b
 26584                           
 26585                           ; BSR set to: 1
 26586                           ;miwi_mesh.c: 4902: myPANID.Val = 0x1337;
 26587  009136  0E13               	movlw	19
 26588  009138  0101               	movlb	1	; () banked
 26589  00913A  6FF1               	movwf	(_myPANID+1)& (0+255),b
 26590  00913C  0E37               	movlw	55
 26591  00913E  6FF0               	movwf	_myPANID& (0+255),b
 26592                           
 26593                           ; BSR set to: 1
 26594                           ;miwi_mesh.c: 4904: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 26595  009140  0EF2               	movlw	low _myShortAddress
 26596  009142  0101               	movlb	1	; () banked
 26597  009144  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26598  009146  0E01               	movlw	high _myShortAddress
 26599  009148  0101               	movlb	1	; () banked
 26600  00914A  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26601  00914C  0EF0               	movlw	low _myPANID
 26602  00914E  0101               	movlb	1	; () banked
 26603  009150  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26604  009152  0E01               	movlw	high _myPANID
 26605  009154  0101               	movlb	1	; () banked
 26606  009156  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 26607  009158  ECD6  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 26608                           
 26609                           ;miwi_mesh.c: 4905: role = 0x02;
 26610  00915C  0E02               	movlw	2
 26611  00915E  0101               	movlb	1	; () banked
 26612  009160  6FCA               	movwf	_role& (0+255),b
 26613                           
 26614                           ; BSR set to: 1
 26615                           ;miwi_mesh.c: 4906: MiWiCapacityInfo.bits.Role = role;
 26616  009162  C1CA  F146         	movff	_role,??_MiApp_StartConnection
 26617  009166  0101               	movlb	1	; () banked
 26618  009168  4746               	rlncf	??_MiApp_StartConnection& (0+255),f,b
 26619  00916A  0101               	movlb	1	; () banked
 26620  00916C  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 26621  00916E  0101               	movlb	1	; () banked
 26622  009170  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26623  009172  0BF9               	andlw	-7
 26624  009174  1946               	xorwf	??_MiApp_StartConnection& (0+255),w,b
 26625  009176  0101               	movlb	1	; () banked
 26626  009178  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 26627                           
 26628                           ; BSR set to: 1
 26629                           ;miwi_mesh.c: 4907: knownCoordinators = 0x01;
 26630  00917A  0E01               	movlw	1
 26631  00917C  0101               	movlb	1	; () banked
 26632  00917E  6FC7               	movwf	_knownCoordinators& (0+255),b
 26633                           
 26634                           ; BSR set to: 1
 26635                           ;miwi_mesh.c: 4929: }
 26636                           
 26637                           ; BSR set to: 1
 26638                           ;miwi_mesh.c: 4928: break;
 26639                           
 26640                           ;miwi_mesh.c: 4927: default:
 26641                           
 26642                           ; BSR set to: 1
 26643                           ;miwi_mesh.c: 4925: return 0;
 26644                           ;	Return value of _MiApp_StartConnection is never used
 26645                           
 26646                           ;miwi_mesh.c: 4918: }
 26647                           ;miwi_mesh.c: 4923: case 0x02:
 26648                           
 26649                           ; BSR set to: 1
 26650                           ;miwi_mesh.c: 4917: return 1;
 26651                           ;	Return value of _MiApp_StartConnection is never used
 26652  009180  0012               	return	
 26653  009182                     l20468:
 26654  009182  0101               	movlb	1	; () banked
 26655  009184  5147               	movf	MiApp_StartConnection@Mode& (0+255),w,b
 26656                           
 26657                           ; Switch size 1, requested type "space"
 26658                           ; Number of cases is 3, Range of values is 0 to 2
 26659                           ; switch strategies available:
 26660                           ; Name         Instructions Cycles
 26661                           ; simple_byte           10     6 (average)
 26662                           ;	Chosen strategy is simple_byte
 26663  009186  0A00               	xorlw	0	; case 0
 26664  009188  B4D8               	btfsc	status,2,c
 26665  00918A  D782               	goto	l20428
 26666  00918C  0A01               	xorlw	1	; case 1
 26667  00918E  B4D8               	btfsc	status,2,c
 26668  009190  D7AE               	goto	l20444
 26669  009192  0A03               	xorlw	3	; case 2
 26670  009194  0012               	return	
 26671  009196                     __end_of_MiApp_StartConnection:
 26672                           	opt stack 0
 26673                           tblptru	equ	0xFF8
 26674                           tblptrh	equ	0xFF7
 26675                           tblptrl	equ	0xFF6
 26676                           tablat	equ	0xFF5
 26677                           prodh	equ	0xFF4
 26678                           prodl	equ	0xFF3
 26679                           intcon	equ	0xFF2
 26680                           intcon2	equ	0xFF1
 26681                           intcon3	equ	0xFF0
 26682                           indf0	equ	0xFEF
 26683                           postinc0	equ	0xFEE
 26684                           plusw0	equ	0xFEB
 26685                           fsr0h	equ	0xFEA
 26686                           fsr0l	equ	0xFE9
 26687                           wreg	equ	0xFE8
 26688                           indf1	equ	0xFE7
 26689                           postinc1	equ	0xFE6
 26690                           postdec1	equ	0xFE5
 26691                           fsr1h	equ	0xFE2
 26692                           fsr1l	equ	0xFE1
 26693                           indf2	equ	0xFDF
 26694                           postinc2	equ	0xFDE
 26695                           postdec2	equ	0xFDD
 26696                           plusw2	equ	0xFDB
 26697                           fsr2h	equ	0xFDA
 26698                           fsr2l	equ	0xFD9
 26699                           status	equ	0xFD8
 26700                           
 26701 ;; *************** function _MiApp_NoiseDetection *****************
 26702 ;; Defined at:
 26703 ;;		line 4980 in file "src/miwi/miwi_mesh.c"
 26704 ;; Parameters:    Size  Location     Type
 26705 ;;  ChannelMap      4   29[BANK1 ] unsigned long 
 26706 ;;  ScanDuration    1   33[BANK1 ] unsigned char 
 26707 ;;  DetectionMod    1   34[BANK1 ] unsigned char 
 26708 ;;  RSSIValue       2   35[BANK1 ] PTR unsigned char 
 26709 ;;		 -> noise_level(1), MiApp_StartConnection@RSSIValue(1), 
 26710 ;; Auto vars:     Size  Location     Type
 26711 ;;  maxRSSI         1   64[BANK1 ] unsigned char 
 26712 ;;  RSSIcheck       1   61[BANK1 ] unsigned char 
 26713 ;;  k               1   60[BANK1 ] unsigned char 
 26714 ;;  j               1   59[BANK1 ] unsigned char 
 26715 ;;  t2              4   54[BANK1 ] struct _MIWI_TICK
 26716 ;;  t1              4   50[BANK1 ] struct _MIWI_TICK
 26717 ;;  channelMask     4   46[BANK1 ] unsigned long 
 26718 ;;  i               1   63[BANK1 ] unsigned char 
 26719 ;;  minRSSI         1   62[BANK1 ] unsigned char 
 26720 ;;  OptimalChann    1   58[BANK1 ] unsigned char 
 26721 ;; Return value:  Size  Location     Type
 26722 ;;                  1    wreg      unsigned char 
 26723 ;; Registers used:
 26724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26725 ;; Tracked objects:
 26726 ;;		On entry : 0/0
 26727 ;;		On exit  : 0/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26730 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26734 ;;Total ram usage:       36 bytes
 26735 ;; Hardware stack levels used:    1
 26736 ;; Hardware stack levels required when called:   21
 26737 ;; This function calls:
 26738 ;;		_MiApp_SetChannel
 26739 ;;		_MiMAC_ChannelAssessment
 26740 ;;		_MiWi_TickGet
 26741 ;;		___awdiv
 26742 ;; This function is called by:
 26743 ;;		_MiApp_StartConnection
 26744 ;;		_main
 26745 ;; This function uses a non-reentrant model
 26746 ;;
 26747                           
 26748                           	psect	text65
 26749  006FB2                     __ptext65:
 26750                           	opt stack 0
 26751  006FB2                     _MiApp_NoiseDetection:
 26752                           	opt stack 8
 26753                           
 26754                           ;miwi_mesh.c: 4982: uint8_t i;
 26755                           ;miwi_mesh.c: 4983: uint8_t OptimalChannel;
 26756                           ;miwi_mesh.c: 4984: uint8_t minRSSI = 0xFF;
 26757                           
 26758                           ; BSR set to: 1
 26759                           ;incstack = 0
 26760  006FB2  0101               	movlb	1	; () banked
 26761  006FB4  693E               	setf	MiApp_NoiseDetection@minRSSI& (0+255),b
 26762                           
 26763                           ; BSR set to: 1
 26764                           ;miwi_mesh.c: 4985: uint32_t channelMask = 0x00000001;
 26765  006FB6  0E01               	movlw	1
 26766  006FB8  0101               	movlb	1	; () banked
 26767  006FBA  6F2E               	movwf	MiApp_NoiseDetection@channelMask& (0+255),b
 26768  006FBC  0E00               	movlw	0
 26769  006FBE  6F2F               	movwf	(MiApp_NoiseDetection@channelMask+1)& (0+255),b
 26770  006FC0  0E00               	movlw	0
 26771  006FC2  6F30               	movwf	(MiApp_NoiseDetection@channelMask+2)& (0+255),b
 26772  006FC4  0E00               	movlw	0
 26773  006FC6  6F31               	movwf	(MiApp_NoiseDetection@channelMask+3)& (0+255),b
 26774                           
 26775                           ;miwi_mesh.c: 4986: MIWI_TICK t1, t2;
 26776                           ;miwi_mesh.c: 4988: if( DetectionMode != 0x00 )
 26777  006FC8  0101               	movlb	1	; () banked
 26778  006FCA  5122               	movf	MiApp_NoiseDetection@DetectionMode& (0+255),w,b
 26779  006FCC  0101               	movlb	1	; () banked
 26780  006FCE  B4D8               	btfsc	status,2,c
 26781  006FD0  D002               	goto	l19096
 26782                           
 26783                           ; BSR set to: 1
 26784                           ;miwi_mesh.c: 4989: {
 26785                           ;miwi_mesh.c: 4990: return 0xFF;
 26786  006FD2  0EFF               	movlw	255
 26787                           
 26788                           ; BSR set to: 1
 26789  006FD4  0012               	return	
 26790  006FD6                     l19096:
 26791                           
 26792                           ; BSR set to: 1
 26793                           ;miwi_mesh.c: 4991: }
 26794                           ;miwi_mesh.c: 4993: ;
 26795                           ;miwi_mesh.c: 4994: i = 0;
 26796  006FD6  0E00               	movlw	0
 26797  006FD8  0101               	movlb	1	; () banked
 26798  006FDA  6F3F               	movwf	MiApp_NoiseDetection@i& (0+255),b
 26799                           
 26800                           ;miwi_mesh.c: 4995: while( i < 32 )
 26801  006FDC  D0DA               	goto	l19136
 26802  006FDE                     l19098:
 26803                           
 26804                           ; BSR set to: 1
 26805                           ;miwi_mesh.c: 4996: {
 26806                           ;miwi_mesh.c: 4997: if( ChannelMap & 0xFFFFFFFF & (channelMask << i) )
 26807  006FDE  C13F  F125         	movff	MiApp_NoiseDetection@i,??_MiApp_NoiseDetection
 26808  006FE2  C12E  F126         	movff	MiApp_NoiseDetection@channelMask,??_MiApp_NoiseDetection+1
 26809  006FE6  C12F  F127         	movff	MiApp_NoiseDetection@channelMask+1,??_MiApp_NoiseDetection+2
 26810  006FEA  C130  F128         	movff	MiApp_NoiseDetection@channelMask+2,??_MiApp_NoiseDetection+3
 26811  006FEE  C131  F129         	movff	MiApp_NoiseDetection@channelMask+3,??_MiApp_NoiseDetection+4
 26812  006FF2  0101               	movlb	1	; () banked
 26813  006FF4  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 26814  006FF6  D006               	goto	u21780
 26815  006FF8                     u21785:
 26816  006FF8  90D8               	bcf	status,0,c
 26817  006FFA  0101               	movlb	1	; () banked
 26818  006FFC  3726               	rlcf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26819  006FFE  3727               	rlcf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26820  007000  3728               	rlcf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26821  007002  3729               	rlcf	(??_MiApp_NoiseDetection+4)& (0+255),f,b
 26822  007004                     u21780:
 26823  007004  0101               	movlb	1	; () banked
 26824  007006  2F25               	decfsz	??_MiApp_NoiseDetection& (0+255),f,b
 26825  007008  D7F7               	goto	u21785
 26826  00700A  0101               	movlb	1	; () banked
 26827  00700C  511D               	movf	MiApp_NoiseDetection@ChannelMap& (0+255),w,b
 26828  00700E  0101               	movlb	1	; () banked
 26829  007010  1526               	andwf	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 26830  007012  0101               	movlb	1	; () banked
 26831  007014  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 26832  007016  0101               	movlb	1	; () banked
 26833  007018  511E               	movf	(MiApp_NoiseDetection@ChannelMap+1)& (0+255),w,b
 26834  00701A  0101               	movlb	1	; () banked
 26835  00701C  1527               	andwf	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 26836  00701E  0101               	movlb	1	; () banked
 26837  007020  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 26838  007022  0101               	movlb	1	; () banked
 26839  007024  511F               	movf	(MiApp_NoiseDetection@ChannelMap+2)& (0+255),w,b
 26840  007026  0101               	movlb	1	; () banked
 26841  007028  1528               	andwf	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 26842  00702A  0101               	movlb	1	; () banked
 26843  00702C  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 26844  00702E  0101               	movlb	1	; () banked
 26845  007030  5120               	movf	(MiApp_NoiseDetection@ChannelMap+3)& (0+255),w,b
 26846  007032  0101               	movlb	1	; () banked
 26847  007034  1529               	andwf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 26848  007036  0101               	movlb	1	; () banked
 26849  007038  6F2D               	movwf	(??_MiApp_NoiseDetection+8)& (0+255),b
 26850  00703A  0101               	movlb	1	; () banked
 26851  00703C  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 26852  00703E  0101               	movlb	1	; () banked
 26853  007040  112B               	iorwf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 26854  007042  0101               	movlb	1	; () banked
 26855  007044  112C               	iorwf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 26856  007046  0101               	movlb	1	; () banked
 26857  007048  112D               	iorwf	(??_MiApp_NoiseDetection+8)& (0+255),w,b
 26858  00704A  B4D8               	btfsc	status,2,c
 26859  00704C  D0A0               	goto	l19134
 26860                           
 26861                           ; BSR set to: 1
 26862                           ;miwi_mesh.c: 4998: {
 26863                           ;miwi_mesh.c: 4999: uint8_t RSSIcheck;
 26864                           ;miwi_mesh.c: 5000: uint8_t maxRSSI = 0;
 26865  00704E  0E00               	movlw	0
 26866  007050  0101               	movlb	1	; () banked
 26867  007052  6F40               	movwf	MiApp_NoiseDetection@maxRSSI& (0+255),b
 26868                           
 26869                           ; BSR set to: 1
 26870                           ;miwi_mesh.c: 5001: uint8_t j, k;
 26871                           ;miwi_mesh.c: 5004: MiApp_SetChannel(i);
 26872  007054  0101               	movlb	1	; () banked
 26873  007056  513F               	movf	MiApp_NoiseDetection@i& (0+255),w,b
 26874  007058  EC68  F05D         	call	_MiApp_SetChannel
 26875                           
 26876                           ;miwi_mesh.c: 5006: t2 = MiWi_TickGet();
 26877  00705C  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 26878  007060  C100  F136         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t2
 26879  007064  C101  F137         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t2+1
 26880  007068  C102  F138         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t2+2
 26881  00706C  C103  F139         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t2+3
 26882  007070                     l19106:
 26883                           
 26884                           ;miwi_mesh.c: 5009: {
 26885                           ;miwi_mesh.c: 5010: RSSIcheck = MiMAC_ChannelAssessment(0x01);
 26886  007070  0E01               	movlw	1
 26887  007072  ECE6  F044         	call	_MiMAC_ChannelAssessment
 26888  007076  0101               	movlb	1	; () banked
 26889  007078  6F3D               	movwf	MiApp_NoiseDetection@RSSIcheck& (0+255),b
 26890                           
 26891                           ; BSR set to: 1
 26892                           ;miwi_mesh.c: 5011: if( RSSIcheck > maxRSSI )
 26893  00707A  0101               	movlb	1	; () banked
 26894  00707C  513D               	movf	MiApp_NoiseDetection@RSSIcheck& (0+255),w,b
 26895  00707E  0101               	movlb	1	; () banked
 26896  007080  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 26897  007082  A0D8               	btfss	status,0,c
 26898                           
 26899                           ; BSR set to: 1
 26900                           ;miwi_mesh.c: 5012: {
 26901                           ;miwi_mesh.c: 5013: maxRSSI = RSSIcheck;
 26902  007084  C13D  F140         	movff	MiApp_NoiseDetection@RSSIcheck,MiApp_NoiseDetection@maxRSSI
 26903                           
 26904                           ; BSR set to: 1
 26905                           ;miwi_mesh.c: 5014: }
 26906                           ;miwi_mesh.c: 5018: t1 = MiWi_TickGet();
 26907                           
 26908                           ; BSR set to: 1
 26909  007088  EC7B  F058         	call	_MiWi_TickGet	;wreg free
 26910  00708C  C100  F132         	movff	?_MiWi_TickGet,MiApp_NoiseDetection@t1
 26911  007090  C101  F133         	movff	?_MiWi_TickGet+1,MiApp_NoiseDetection@t1+1
 26912  007094  C102  F134         	movff	?_MiWi_TickGet+2,MiApp_NoiseDetection@t1+2
 26913  007098  C103  F135         	movff	?_MiWi_TickGet+3,MiApp_NoiseDetection@t1+3
 26914                           
 26915                           ;miwi_mesh.c: 5019: if( (t1.Val - t2.Val) > ((uint32_t)(ScanTime[ScanDuration])) )
 26916  00709C  C136  F125         	movff	MiApp_NoiseDetection@t2,??_MiApp_NoiseDetection
 26917  0070A0  C137  F126         	movff	MiApp_NoiseDetection@t2+1,??_MiApp_NoiseDetection+1
 26918  0070A4  C138  F127         	movff	MiApp_NoiseDetection@t2+2,??_MiApp_NoiseDetection+2
 26919  0070A8  C139  F128         	movff	MiApp_NoiseDetection@t2+3,??_MiApp_NoiseDetection+3
 26920  0070AC  0101               	movlb	1	; () banked
 26921  0070AE  1F25               	comf	??_MiApp_NoiseDetection& (0+255),f,b
 26922  0070B0  1F26               	comf	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26923  0070B2  1F27               	comf	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26924  0070B4  1F28               	comf	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26925  0070B6  2B25               	incf	??_MiApp_NoiseDetection& (0+255),f,b
 26926  0070B8  0E00               	movlw	0
 26927  0070BA  2326               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),f,b
 26928  0070BC  2327               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),f,b
 26929  0070BE  2328               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),f,b
 26930  0070C0  0101               	movlb	1	; () banked
 26931  0070C2  5132               	movf	MiApp_NoiseDetection@t1& (0+255),w,b
 26932  0070C4  0101               	movlb	1	; () banked
 26933  0070C6  2525               	addwf	??_MiApp_NoiseDetection& (0+255),w,b
 26934  0070C8  0101               	movlb	1	; () banked
 26935  0070CA  6F29               	movwf	(??_MiApp_NoiseDetection+4)& (0+255),b
 26936  0070CC  0101               	movlb	1	; () banked
 26937  0070CE  5133               	movf	(MiApp_NoiseDetection@t1+1)& (0+255),w,b
 26938  0070D0  0101               	movlb	1	; () banked
 26939  0070D2  2126               	addwfc	(??_MiApp_NoiseDetection+1)& (0+255),w,b
 26940  0070D4  0101               	movlb	1	; () banked
 26941  0070D6  6F2A               	movwf	(??_MiApp_NoiseDetection+5)& (0+255),b
 26942  0070D8  0101               	movlb	1	; () banked
 26943  0070DA  5134               	movf	(MiApp_NoiseDetection@t1+2)& (0+255),w,b
 26944  0070DC  0101               	movlb	1	; () banked
 26945  0070DE  2127               	addwfc	(??_MiApp_NoiseDetection+2)& (0+255),w,b
 26946  0070E0  0101               	movlb	1	; () banked
 26947  0070E2  6F2B               	movwf	(??_MiApp_NoiseDetection+6)& (0+255),b
 26948  0070E4  0101               	movlb	1	; () banked
 26949  0070E6  5135               	movf	(MiApp_NoiseDetection@t1+3)& (0+255),w,b
 26950  0070E8  0101               	movlb	1	; () banked
 26951  0070EA  2128               	addwfc	(??_MiApp_NoiseDetection+3)& (0+255),w,b
 26952  0070EC  0101               	movlb	1	; () banked
 26953  0070EE  6F2C               	movwf	(??_MiApp_NoiseDetection+7)& (0+255),b
 26954  0070F0  0101               	movlb	1	; () banked
 26955  0070F2  5121               	movf	MiApp_NoiseDetection@ScanDuration& (0+255),w,b
 26956  0070F4  0D04               	mullw	4
 26957  0070F6  0E35               	movlw	low _ScanTime
 26958  0070F8  24F3               	addwf	prodl,w,c
 26959  0070FA  6EF6               	movwf	tblptrl,c
 26960  0070FC  0E20               	movlw	high _ScanTime
 26961  0070FE  20F4               	addwfc	prodh,w,c
 26962  007100  6EF7               	movwf	tblptrh,c
 26963  007102                     	if	1	;There are 3 active tblptr bytes
 26964  007102  6AF8               	clrf	tblptru,c
 26965  007104  0E00               	movlw	low (__mediumconst shr (0+16))
 26966  007106  22F8               	addwfc	tblptru,f,c
 26967  007108                     	endif
 26968  007108  0101               	movlb	1	; () banked
 26969  00710A  5129               	movf	(??_MiApp_NoiseDetection+4)& (0+255),w,b
 26970  00710C  0009               	tblrd		*+
 26971  00710E  5CF5               	subwf	tablat,w,c
 26972  007110  0101               	movlb	1	; () banked
 26973  007112  512A               	movf	(??_MiApp_NoiseDetection+5)& (0+255),w,b
 26974  007114  0009               	tblrd		*+
 26975  007116  58F5               	subwfb	tablat,w,c
 26976  007118  0101               	movlb	1	; () banked
 26977  00711A  512B               	movf	(??_MiApp_NoiseDetection+6)& (0+255),w,b
 26978  00711C  0009               	tblrd		*+
 26979  00711E  58F5               	subwfb	tablat,w,c
 26980  007120  0101               	movlb	1	; () banked
 26981  007122  512C               	movf	(??_MiApp_NoiseDetection+7)& (0+255),w,b
 26982  007124  0009               	tblrd		*+
 26983  007126  58F5               	subwfb	tablat,w,c
 26984  007128  B0D8               	btfsc	status,0,c
 26985  00712A  D7A2               	goto	l19106
 26986                           
 26987                           ; BSR set to: 1
 26988                           ;miwi_mesh.c: 5023: }
 26989                           ;miwi_mesh.c: 5024: }
 26990                           ;miwi_mesh.c: 5026: ;
 26991                           ;miwi_mesh.c: 5027: ;
 26992                           ;miwi_mesh.c: 5028: ;
 26993                           ;miwi_mesh.c: 5029: j = maxRSSI/5;
 26994                           
 26995                           ; BSR set to: 1
 26996                           
 26997                           ; BSR set to: 1
 26998                           
 26999                           ; BSR set to: 1
 27000                           
 27001                           ; BSR set to: 1
 27002                           ;miwi_mesh.c: 5020: {
 27003                           ;miwi_mesh.c: 5022: break;
 27004  00712C  C140  F106         	movff	MiApp_NoiseDetection@maxRSSI,___awdiv@dividend
 27005  007130  0101               	movlb	1	; () banked
 27006  007132  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27007  007134  0E00               	movlw	0
 27008  007136  0101               	movlb	1	; () banked
 27009  007138  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27010  00713A  0E05               	movlw	5
 27011  00713C  6F08               	movwf	___awdiv@divisor& (0+255),b
 27012  00713E  EC9C  F050         	call	___awdiv	;wreg free
 27013  007142  0101               	movlb	1	; () banked
 27014  007144  5106               	movf	?___awdiv& (0+255),w,b
 27015  007146  0101               	movlb	1	; () banked
 27016  007148  6F3B               	movwf	MiApp_NoiseDetection@j& (0+255),b
 27017                           
 27018                           ; BSR set to: 1
 27019                           ;miwi_mesh.c: 5030: for(k = 0; k < j; k++)
 27020  00714A  0E00               	movlw	0
 27021  00714C  0101               	movlb	1	; () banked
 27022  00714E  6F3C               	movwf	MiApp_NoiseDetection@k& (0+255),b
 27023  007150  D002               	goto	l19124
 27024  007152                     l19122:
 27025                           
 27026                           ; BSR set to: 1
 27027                           ;miwi_mesh.c: 5031: {
 27028                           ;miwi_mesh.c: 5032: ;
 27029  007152  0101               	movlb	1	; () banked
 27030  007154  2B3C               	incf	MiApp_NoiseDetection@k& (0+255),f,b
 27031  007156                     l19124:
 27032                           
 27033                           ; BSR set to: 1
 27034  007156  0101               	movlb	1	; () banked
 27035  007158  513B               	movf	MiApp_NoiseDetection@j& (0+255),w,b
 27036  00715A  0101               	movlb	1	; () banked
 27037  00715C  5D3C               	subwf	MiApp_NoiseDetection@k& (0+255),w,b
 27038  00715E  A0D8               	btfss	status,0,c
 27039  007160  D7F8               	goto	l19122
 27040                           
 27041                           ; BSR set to: 1
 27042                           ;miwi_mesh.c: 5033: }
 27043                           ;miwi_mesh.c: 5034: ;
 27044                           ;miwi_mesh.c: 5035: ;
 27045                           ;miwi_mesh.c: 5037: if( maxRSSI < minRSSI )
 27046                           
 27047                           ; BSR set to: 1
 27048  007162  0101               	movlb	1	; () banked
 27049  007164  513E               	movf	MiApp_NoiseDetection@minRSSI& (0+255),w,b
 27050  007166  0101               	movlb	1	; () banked
 27051  007168  5D40               	subwf	MiApp_NoiseDetection@maxRSSI& (0+255),w,b
 27052  00716A  B0D8               	btfsc	status,0,c
 27053  00716C  D010               	goto	l19134
 27054                           
 27055                           ; BSR set to: 1
 27056                           ;miwi_mesh.c: 5038: {
 27057                           ;miwi_mesh.c: 5039: minRSSI = maxRSSI;
 27058  00716E  C140  F13E         	movff	MiApp_NoiseDetection@maxRSSI,MiApp_NoiseDetection@minRSSI
 27059                           
 27060                           ;miwi_mesh.c: 5040: OptimalChannel = i;
 27061  007172  C13F  F13A         	movff	MiApp_NoiseDetection@i,MiApp_NoiseDetection@OptimalChannel
 27062                           
 27063                           ; BSR set to: 1
 27064                           ;miwi_mesh.c: 5041: if( RSSIValue )
 27065  007176  0101               	movlb	1	; () banked
 27066  007178  5123               	movf	MiApp_NoiseDetection@RSSIValue& (0+255),w,b
 27067  00717A  0101               	movlb	1	; () banked
 27068  00717C  1124               	iorwf	(MiApp_NoiseDetection@RSSIValue+1)& (0+255),w,b
 27069  00717E  B4D8               	btfsc	status,2,c
 27070  007180  D006               	goto	l19134
 27071                           
 27072                           ; BSR set to: 1
 27073                           ;miwi_mesh.c: 5042: {
 27074                           ;miwi_mesh.c: 5043: *RSSIValue = minRSSI;
 27075  007182  C123  FFD9         	movff	MiApp_NoiseDetection@RSSIValue,fsr2l
 27076  007186  C124  FFDA         	movff	MiApp_NoiseDetection@RSSIValue+1,fsr2h
 27077  00718A  C13E  FFDF         	movff	MiApp_NoiseDetection@minRSSI,indf2
 27078  00718E                     l19134:
 27079                           
 27080                           ; BSR set to: 1
 27081                           ;miwi_mesh.c: 5044: }
 27082                           ;miwi_mesh.c: 5045: }
 27083                           ;miwi_mesh.c: 5046: }
 27084                           ;miwi_mesh.c: 5047: i++;
 27085  00718E  0101               	movlb	1	; () banked
 27086  007190  2B3F               	incf	MiApp_NoiseDetection@i& (0+255),f,b
 27087  007192                     l19136:
 27088                           
 27089                           ; BSR set to: 1
 27090  007192  0E1F               	movlw	31
 27091  007194  0101               	movlb	1	; () banked
 27092  007196  653F               	cpfsgt	MiApp_NoiseDetection@i& (0+255),b
 27093  007198  D722               	goto	l19098
 27094                           
 27095                           ; BSR set to: 1
 27096                           ;miwi_mesh.c: 5048: }
 27097                           ;miwi_mesh.c: 5050: return OptimalChannel;
 27098                           
 27099                           ; BSR set to: 1
 27100  00719A  0101               	movlb	1	; () banked
 27101  00719C  513A               	movf	MiApp_NoiseDetection@OptimalChannel& (0+255),w,b
 27102  00719E  0012               	return	
 27103  0071A0                     __end_of_MiApp_NoiseDetection:
 27104                           	opt stack 0
 27105                           tblptru	equ	0xFF8
 27106                           tblptrh	equ	0xFF7
 27107                           tblptrl	equ	0xFF6
 27108                           tablat	equ	0xFF5
 27109                           prodh	equ	0xFF4
 27110                           prodl	equ	0xFF3
 27111                           intcon	equ	0xFF2
 27112                           intcon2	equ	0xFF1
 27113                           intcon3	equ	0xFF0
 27114                           indf0	equ	0xFEF
 27115                           postinc0	equ	0xFEE
 27116                           plusw0	equ	0xFEB
 27117                           fsr0h	equ	0xFEA
 27118                           fsr0l	equ	0xFE9
 27119                           wreg	equ	0xFE8
 27120                           indf1	equ	0xFE7
 27121                           postinc1	equ	0xFE6
 27122                           postdec1	equ	0xFE5
 27123                           fsr1h	equ	0xFE2
 27124                           fsr1l	equ	0xFE1
 27125                           indf2	equ	0xFDF
 27126                           postinc2	equ	0xFDE
 27127                           postdec2	equ	0xFDD
 27128                           plusw2	equ	0xFDB
 27129                           fsr2h	equ	0xFDA
 27130                           fsr2l	equ	0xFD9
 27131                           status	equ	0xFD8
 27132                           
 27133 ;; *************** function _MiWi_TickGet *****************
 27134 ;; Defined at:
 27135 ;;		line 105 in file "src/18F27J53/symbol.c"
 27136 ;; Parameters:    Size  Location     Type
 27137 ;;		None
 27138 ;; Auto vars:     Size  Location     Type
 27139 ;;  currentTime     4    6[BANK1 ] struct _MIWI_TICK
 27140 ;;  failureCount    1    5[BANK1 ] unsigned char 
 27141 ;; Return value:  Size  Location     Type
 27142 ;;                  4    0[BANK1 ] struct _MIWI_TICK
 27143 ;; Registers used:
 27144 ;;		wreg, status,2, status,0
 27145 ;; Tracked objects:
 27146 ;;		On entry : 0/0
 27147 ;;		On exit  : 0/0
 27148 ;;		Unchanged: 0/0
 27149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27150 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27151 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27152 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27153 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27154 ;;Total ram usage:       10 bytes
 27155 ;; Hardware stack levels used:    1
 27156 ;; Hardware stack levels required when called:   16
 27157 ;; This function calls:
 27158 ;;		Nothing
 27159 ;; This function is called by:
 27160 ;;		_TxPacket
 27161 ;;		_MiMAC_ReceivedPacket
 27162 ;;		_BroadcastJitter
 27163 ;;		_MiWiTasks
 27164 ;;		_MiApp_UnicastAddress
 27165 ;;		_MiApp_NoiseDetection
 27166 ;;		_OpenSocket
 27167 ;;		_MiApp_SearchConnection
 27168 ;;		_MiApp_EstablishConnection
 27169 ;;		_MiApp_UnicastConnection
 27170 ;; This function uses a non-reentrant model
 27171 ;;
 27172                           
 27173                           	psect	text66
 27174  00B0F6                     __ptext66:
 27175                           	opt stack 0
 27176  00B0F6                     _MiWi_TickGet:
 27177                           	opt stack 8
 27178                           
 27179                           ;symbol.c: 107: MIWI_TICK currentTime;
 27180                           ;symbol.c: 110: uint8_t failureCounter;
 27181                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 27182                           
 27183                           ; BSR set to: 1
 27184                           ;incstack = 0
 27185  00B0F6  909D               	bcf	3997,0,c	;volatile
 27186                           
 27187                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 27188  00B0F8  0E00               	movlw	0
 27189  00B0FA  0101               	movlb	1	; () banked
 27190  00B0FC  6F08               	movwf	(MiWi_TickGet@currentTime+2)& (0+255),b
 27191                           
 27192                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 27193  00B0FE  0E00               	movlw	0
 27194  00B100  0101               	movlb	1	; () banked
 27195  00B102  6F09               	movwf	(MiWi_TickGet@currentTime+3)& (0+255),b
 27196                           
 27197                           ;symbol.c: 119: failureCounter = 0;
 27198  00B104  0E00               	movlw	0
 27199  00B106  0101               	movlb	1	; () banked
 27200  00B108  6F05               	movwf	MiWi_TickGet@failureCounter& (0+255),b
 27201  00B10A                     l16716:
 27202                           
 27203                           ; BSR set to: 1
 27204                           ;symbol.c: 122: {
 27205                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 27206  00B10A  CFCE F106          	movff	4046,MiWi_TickGet@currentTime	;volatile
 27207                           
 27208                           ; BSR set to: 1
 27209                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 27210  00B10E  CFCF F107          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 27211                           
 27212                           ; BSR set to: 1
 27213                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 27214  00B112  0101               	movlb	1	; () banked
 27215  00B114  2906               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 27216  00B116  E10D               	bnz	l62
 27217  00B118  0101               	movlb	1	; () banked
 27218  00B11A  2907               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 27219  00B11C  A4D8               	btfss	status,2,c
 27220  00B11E  D009               	goto	l62
 27221                           
 27222                           ; BSR set to: 1
 27223  00B120  0101               	movlb	1	; () banked
 27224  00B122  2B05               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 27225  00B124  0505               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 27226  00B126  0101               	movlb	1	; () banked
 27227  00B128  6F04               	movwf	??_MiWi_TickGet& (0+255),b
 27228  00B12A  0E02               	movlw	2
 27229  00B12C  0101               	movlb	1	; () banked
 27230  00B12E  6504               	cpfsgt	??_MiWi_TickGet& (0+255),b
 27231  00B130  D7EC               	goto	l16716
 27232  00B132                     l62:
 27233                           
 27234                           ; BSR set to: 1
 27235                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 27236  00B132  A09E               	btfss	3998,0,c	;volatile
 27237  00B134  D008               	goto	l16730
 27238                           
 27239                           ; BSR set to: 1
 27240                           ;symbol.c: 130: {
 27241                           ;symbol.c: 132: {
 27242                           ;symbol.c: 135: currentTime.byte.b2++;
 27243  00B136  0101               	movlb	1	; () banked
 27244  00B138  2B08               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 27245                           
 27246                           ; BSR set to: 1
 27247                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 27248  00B13A  0100               	movlb	0	; () banked
 27249  00B13C  29A1               	incf	_timerExtension1& (0+255),w,b	;volatile
 27250  00B13E  A4D8               	btfss	status,2,c
 27251  00B140  D002               	goto	l16730
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;symbol.c: 137: {
 27255                           ;symbol.c: 138: currentTime.byte.b3++;
 27256  00B142  0101               	movlb	1	; () banked
 27257  00B144  2B09               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 27258  00B146                     l16730:
 27259                           
 27260                           ;symbol.c: 139: }
 27261                           ;symbol.c: 140: }
 27262                           ;symbol.c: 141: }
 27263                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 27264  00B146  0100               	movlb	0	; () banked
 27265  00B148  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 27266  00B14A  0101               	movlb	1	; () banked
 27267  00B14C  2708               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 27268                           
 27269                           ; BSR set to: 1
 27270                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 27271  00B14E  0100               	movlb	0	; () banked
 27272  00B150  51A2               	movf	_timerExtension2& (0+255),w,b	;volatile
 27273  00B152  0101               	movlb	1	; () banked
 27274  00B154  2709               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 27275                           
 27276                           ; BSR set to: 1
 27277                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 27278  00B156  809D               	bsf	3997,0,c	;volatile
 27279                           
 27280                           ; BSR set to: 1
 27281                           ;symbol.c: 150: return currentTime;
 27282  00B158  C106  F100         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 27283  00B15C  C107  F101         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 27284  00B160  C108  F102         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 27285  00B164  C109  F103         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 27286  00B168  0012               	return	
 27287  00B16A                     __end_of_MiWi_TickGet:
 27288                           	opt stack 0
 27289                           tblptru	equ	0xFF8
 27290                           tblptrh	equ	0xFF7
 27291                           tblptrl	equ	0xFF6
 27292                           tablat	equ	0xFF5
 27293                           prodh	equ	0xFF4
 27294                           prodl	equ	0xFF3
 27295                           intcon	equ	0xFF2
 27296                           intcon2	equ	0xFF1
 27297                           intcon3	equ	0xFF0
 27298                           indf0	equ	0xFEF
 27299                           postinc0	equ	0xFEE
 27300                           plusw0	equ	0xFEB
 27301                           fsr0h	equ	0xFEA
 27302                           fsr0l	equ	0xFE9
 27303                           wreg	equ	0xFE8
 27304                           indf1	equ	0xFE7
 27305                           postinc1	equ	0xFE6
 27306                           postdec1	equ	0xFE5
 27307                           fsr1h	equ	0xFE2
 27308                           fsr1l	equ	0xFE1
 27309                           indf2	equ	0xFDF
 27310                           postinc2	equ	0xFDE
 27311                           postdec2	equ	0xFDD
 27312                           plusw2	equ	0xFDB
 27313                           fsr2h	equ	0xFDA
 27314                           fsr2l	equ	0xFD9
 27315                           status	equ	0xFD8
 27316                           
 27317 ;; *************** function _MiMAC_ChannelAssessment *****************
 27318 ;; Defined at:
 27319 ;;		line 1092 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27320 ;; Parameters:    Size  Location     Type
 27321 ;;  AssessmentMo    1    wreg     unsigned char 
 27322 ;; Auto vars:     Size  Location     Type
 27323 ;;  AssessmentMo    1   24[BANK1 ] unsigned char 
 27324 ;;  result          6   18[BANK1 ] unsigned char [6]
 27325 ;;  count           2   26[BANK1 ] unsigned int 
 27326 ;;  i               1   28[BANK1 ] unsigned char 
 27327 ;;  k               1   25[BANK1 ] unsigned char 
 27328 ;; Return value:  Size  Location     Type
 27329 ;;                  1    wreg      unsigned char 
 27330 ;; Registers used:
 27331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27332 ;; Tracked objects:
 27333 ;;		On entry : 0/0
 27334 ;;		On exit  : 0/0
 27335 ;;		Unchanged: 0/0
 27336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27338 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27339 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27340 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27341 ;;Total ram usage:       15 bytes
 27342 ;; Hardware stack levels used:    1
 27343 ;; Hardware stack levels required when called:   19
 27344 ;; This function calls:
 27345 ;;		_RegisterRead
 27346 ;;		___awdiv
 27347 ;;		___lwdiv
 27348 ;; This function is called by:
 27349 ;;		_MiApp_NoiseDetection
 27350 ;; This function uses a non-reentrant model
 27351 ;;
 27352                           
 27353                           	psect	text67
 27354  0089CC                     __ptext67:
 27355                           	opt stack 0
 27356  0089CC                     _MiMAC_ChannelAssessment:
 27357                           	opt stack 9
 27358                           
 27359                           ; BSR set to: 1
 27360                           ;incstack = 0
 27361                           ;MiMAC_ChannelAssessment@AssessmentMode stored from wreg
 27362  0089CC  0101               	movlb	1	; () banked
 27363  0089CE  6F18               	movwf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),b
 27364                           
 27365                           ;drv_mrf_miwi_89xa.c: 1094: uint8_t i;
 27366                           ;drv_mrf_miwi_89xa.c: 1095: uint8_t k;
 27367                           ;drv_mrf_miwi_89xa.c: 1096: uint16_t count=0;
 27368  0089D0  0E00               	movlw	0
 27369  0089D2  0101               	movlb	1	; () banked
 27370  0089D4  6F1B               	movwf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 27371  0089D6  0E00               	movlw	0
 27372  0089D8  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 27373                           
 27374                           ; BSR set to: 1
 27375                           ;drv_mrf_miwi_89xa.c: 1097: uint8_t result[6] = {42, 78, 114, 150, 186 ,222};
 27376  0089DA  EE22  F0F9         	lfsr	2,MiMAC_ChannelAssessment@F10758
 27377  0089DE  EE11  F012         	lfsr	1,MiMAC_ChannelAssessment@result
 27378  0089E2  0E05               	movlw	5
 27379  0089E4                     u19791:
 27380  0089E4  CFDB FFE3          	movff	plusw2,plusw1
 27381  0089E8  06E8               	decf	wreg,f,c
 27382  0089EA  E2FC               	bc	u19791
 27383                           
 27384                           ; BSR set to: 1
 27385                           ;drv_mrf_miwi_89xa.c: 1099: for(i = 0; i < 0xFF; i++)
 27386  0089EC  0E00               	movlw	0
 27387  0089EE  0101               	movlb	1	; () banked
 27388  0089F0  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27389  0089F2                     l17874:
 27390                           
 27391                           ; BSR set to: 1
 27392  0089F2  0101               	movlb	1	; () banked
 27393  0089F4  291C               	incf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27394  0089F6  B4D8               	btfsc	status,2,c
 27395  0089F8  D041               	goto	l17900
 27396                           
 27397                           ; BSR set to: 1
 27398                           ;drv_mrf_miwi_89xa.c: 1100: {
 27399                           ;drv_mrf_miwi_89xa.c: 1101: if( AssessmentMode == 0x00 )
 27400                           
 27401                           ; BSR set to: 1
 27402                           
 27403                           ; BSR set to: 1
 27404  0089FA  0101               	movlb	1	; () banked
 27405  0089FC  5118               	movf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 27406  0089FE  0101               	movlb	1	; () banked
 27407  008A00  A4D8               	btfss	status,2,c
 27408  008A02  D012               	goto	l17882
 27409                           
 27410                           ; BSR set to: 1
 27411                           ;drv_mrf_miwi_89xa.c: 1102: {
 27412                           ;drv_mrf_miwi_89xa.c: 1103: count += ((RegisterRead(0x2800>>8)/2));
 27413  008A04  0E28               	movlw	40
 27414  008A06  EC80  F05A         	call	_RegisterRead
 27415  008A0A  0101               	movlb	1	; () banked
 27416  008A0C  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27417  008A0E  0101               	movlb	1	; () banked
 27418  008A10  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27419  008A12  0101               	movlb	1	; () banked
 27420  008A14  6F06               	movwf	___awdiv@dividend& (0+255),b
 27421  008A16  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27422  008A18  0E00               	movlw	0
 27423  008A1A  0101               	movlb	1	; () banked
 27424  008A1C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27425  008A1E  0E02               	movlw	2
 27426  008A20  6F08               	movwf	___awdiv@divisor& (0+255),b
 27427  008A22  EC9C  F050         	call	___awdiv	;wreg free
 27428  008A26  D015               	goto	L11
 27429  008A28                     l17882:
 27430                           
 27431                           ; BSR set to: 1
 27432                           ;drv_mrf_miwi_89xa.c: 1105: else if( AssessmentMode == 0x01 )
 27433  008A28  0101               	movlb	1	; () banked
 27434  008A2A  0518               	decf	MiMAC_ChannelAssessment@AssessmentMode& (0+255),w,b
 27435  008A2C  A4D8               	btfss	status,2,c
 27436  008A2E  D019               	goto	l17886
 27437                           
 27438                           ; BSR set to: 1
 27439                           ;drv_mrf_miwi_89xa.c: 1106: {
 27440                           ;drv_mrf_miwi_89xa.c: 1107: count += ((RegisterRead(0x2800>>8)/2));
 27441  008A30  0E28               	movlw	40
 27442  008A32  EC80  F05A         	call	_RegisterRead
 27443  008A36  0101               	movlb	1	; () banked
 27444  008A38  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27445  008A3A  0101               	movlb	1	; () banked
 27446  008A3C  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27447  008A3E  0101               	movlb	1	; () banked
 27448  008A40  6F06               	movwf	___awdiv@dividend& (0+255),b
 27449  008A42  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 27450  008A44  0E00               	movlw	0
 27451  008A46  0101               	movlb	1	; () banked
 27452  008A48  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 27453  008A4A  0E02               	movlw	2
 27454  008A4C  6F08               	movwf	___awdiv@divisor& (0+255),b
 27455  008A4E  EC9C  F050         	call	___awdiv	;wreg free
 27456  008A52                     L11:
 27457  008A52  0101               	movlb	1	; () banked
 27458  008A54  5106               	movf	?___awdiv& (0+255),w,b
 27459  008A56  0101               	movlb	1	; () banked
 27460  008A58  271A               	addwf	MiMAC_ChannelAssessment@count& (0+255),f,b
 27461  008A5A  0101               	movlb	1	; () banked
 27462  008A5C  5107               	movf	(?___awdiv+1)& (0+255),w,b
 27463  008A5E  0101               	movlb	1	; () banked
 27464  008A60  231B               	addwfc	(MiMAC_ChannelAssessment@count+1)& (0+255),f,b
 27465  008A62                     l17886:
 27466                           
 27467                           ; BSR set to: 1
 27468                           ;drv_mrf_miwi_89xa.c: 1109: }
 27469                           ;drv_mrf_miwi_89xa.c: 1110: for(k = 0; k < 0xFF; k++) {}
 27470  008A62  0E00               	movlw	0
 27471  008A64  0101               	movlb	1	; () banked
 27472  008A66  6F19               	movwf	MiMAC_ChannelAssessment@k& (0+255),b
 27473  008A68                     l17888:
 27474                           
 27475                           ; BSR set to: 1
 27476  008A68  0101               	movlb	1	; () banked
 27477  008A6A  2919               	incf	MiMAC_ChannelAssessment@k& (0+255),w,b
 27478  008A6C  B4D8               	btfsc	status,2,c
 27479  008A6E  D003               	goto	l17896
 27480                           
 27481                           ; BSR set to: 1
 27482                           
 27483                           ; BSR set to: 1
 27484                           
 27485                           ; BSR set to: 1
 27486  008A70  0101               	movlb	1	; () banked
 27487  008A72  2B19               	incf	MiMAC_ChannelAssessment@k& (0+255),f,b
 27488  008A74  D7F9               	goto	l17888
 27489  008A76                     l17896:
 27490                           
 27491                           ; BSR set to: 1
 27492  008A76  0101               	movlb	1	; () banked
 27493  008A78  2B1C               	incf	MiMAC_ChannelAssessment@i& (0+255),f,b
 27494  008A7A  D7BB               	goto	l17874
 27495  008A7C                     l17900:
 27496                           
 27497                           ; BSR set to: 1
 27498                           ;drv_mrf_miwi_89xa.c: 1111: }
 27499                           ;drv_mrf_miwi_89xa.c: 1113: count = (count>>8);
 27500  008A7C  0101               	movlb	1	; () banked
 27501  008A7E  511B               	movf	(MiMAC_ChannelAssessment@count+1)& (0+255),w,b
 27502  008A80  0101               	movlb	1	; () banked
 27503  008A82  6F1A               	movwf	MiMAC_ChannelAssessment@count& (0+255),b
 27504  008A84  6B1B               	clrf	(MiMAC_ChannelAssessment@count+1)& (0+255),b
 27505                           
 27506                           ; BSR set to: 1
 27507                           ;drv_mrf_miwi_89xa.c: 1114: i = (count/10);
 27508  008A86  C11A  F100         	movff	MiMAC_ChannelAssessment@count,___lwdiv@dividend
 27509  008A8A  C11B  F101         	movff	MiMAC_ChannelAssessment@count+1,___lwdiv@dividend+1
 27510  008A8E  0E00               	movlw	0
 27511  008A90  0101               	movlb	1	; () banked
 27512  008A92  6F03               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27513  008A94  0E0A               	movlw	10
 27514  008A96  6F02               	movwf	___lwdiv@divisor& (0+255),b
 27515  008A98  EC04  F058         	call	___lwdiv	;wreg free
 27516  008A9C  0101               	movlb	1	; () banked
 27517  008A9E  5100               	movf	?___lwdiv& (0+255),w,b
 27518  008AA0  0101               	movlb	1	; () banked
 27519  008AA2  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27520                           
 27521                           ; BSR set to: 1
 27522                           ;drv_mrf_miwi_89xa.c: 1115: if(i>6) i = 6;
 27523  008AA4  0E06               	movlw	6
 27524  008AA6  0101               	movlb	1	; () banked
 27525  008AA8  651C               	cpfsgt	MiMAC_ChannelAssessment@i& (0+255),b
 27526  008AAA  D003               	goto	l383
 27527                           
 27528                           ; BSR set to: 1
 27529  008AAC  0E06               	movlw	6
 27530  008AAE  0101               	movlb	1	; () banked
 27531  008AB0  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27532  008AB2                     l383:
 27533                           
 27534                           ; BSR set to: 1
 27535                           ;drv_mrf_miwi_89xa.c: 1116: if(i<1) i = 1;
 27536  008AB2  0101               	movlb	1	; () banked
 27537  008AB4  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27538  008AB6  0101               	movlb	1	; () banked
 27539  008AB8  A4D8               	btfss	status,2,c
 27540  008ABA  D003               	goto	l17910
 27541                           
 27542                           ; BSR set to: 1
 27543  008ABC  0E01               	movlw	1
 27544  008ABE  0101               	movlb	1	; () banked
 27545  008AC0  6F1C               	movwf	MiMAC_ChannelAssessment@i& (0+255),b
 27546  008AC2                     l17910:
 27547                           
 27548                           ; BSR set to: 1
 27549                           ;drv_mrf_miwi_89xa.c: 1117: return(result[i-1]);
 27550  008AC2  0EFF               	movlw	255
 27551  008AC4  0101               	movlb	1	; () banked
 27552  008AC6  6F0E               	movwf	??_MiMAC_ChannelAssessment& (0+255),b
 27553  008AC8  0EFF               	movlw	255
 27554  008ACA  0101               	movlb	1	; () banked
 27555  008ACC  6F0F               	movwf	(??_MiMAC_ChannelAssessment+1)& (0+255),b
 27556  008ACE  0101               	movlb	1	; () banked
 27557  008AD0  511C               	movf	MiMAC_ChannelAssessment@i& (0+255),w,b
 27558  008AD2  0101               	movlb	1	; () banked
 27559  008AD4  6F10               	movwf	(??_MiMAC_ChannelAssessment+2)& (0+255),b
 27560  008AD6  6B11               	clrf	(??_MiMAC_ChannelAssessment+3)& (0+255),b
 27561  008AD8  0101               	movlb	1	; () banked
 27562  008ADA  510E               	movf	??_MiMAC_ChannelAssessment& (0+255),w,b
 27563  008ADC  0101               	movlb	1	; () banked
 27564  008ADE  2710               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),f,b
 27565  008AE0  0101               	movlb	1	; () banked
 27566  008AE2  510F               	movf	(??_MiMAC_ChannelAssessment+1)& (0+255),w,b
 27567  008AE4  0101               	movlb	1	; () banked
 27568  008AE6  2311               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),f,b
 27569  008AE8  0E12               	movlw	low MiMAC_ChannelAssessment@result
 27570  008AEA  0101               	movlb	1	; () banked
 27571  008AEC  2510               	addwf	(??_MiMAC_ChannelAssessment+2)& (0+255),w,b
 27572  008AEE  6ED9               	movwf	fsr2l,c
 27573  008AF0  0E01               	movlw	high MiMAC_ChannelAssessment@result
 27574  008AF2  0101               	movlb	1	; () banked
 27575  008AF4  2111               	addwfc	(??_MiMAC_ChannelAssessment+3)& (0+255),w,b
 27576  008AF6  6EDA               	movwf	fsr2h,c
 27577  008AF8  50DF               	movf	indf2,w,c
 27578  008AFA  0012               	return	
 27579  008AFC                     __end_of_MiMAC_ChannelAssessment:
 27580                           	opt stack 0
 27581                           tblptru	equ	0xFF8
 27582                           tblptrh	equ	0xFF7
 27583                           tblptrl	equ	0xFF6
 27584                           tablat	equ	0xFF5
 27585                           prodh	equ	0xFF4
 27586                           prodl	equ	0xFF3
 27587                           intcon	equ	0xFF2
 27588                           intcon2	equ	0xFF1
 27589                           intcon3	equ	0xFF0
 27590                           indf0	equ	0xFEF
 27591                           postinc0	equ	0xFEE
 27592                           plusw0	equ	0xFEB
 27593                           fsr0h	equ	0xFEA
 27594                           fsr0l	equ	0xFE9
 27595                           wreg	equ	0xFE8
 27596                           indf1	equ	0xFE7
 27597                           postinc1	equ	0xFE6
 27598                           postdec1	equ	0xFE5
 27599                           plusw1	equ	0xFE3
 27600                           fsr1h	equ	0xFE2
 27601                           fsr1l	equ	0xFE1
 27602                           indf2	equ	0xFDF
 27603                           postinc2	equ	0xFDE
 27604                           postdec2	equ	0xFDD
 27605                           plusw2	equ	0xFDB
 27606                           fsr2h	equ	0xFDA
 27607                           fsr2l	equ	0xFD9
 27608                           status	equ	0xFD8
 27609                           
 27610 ;; *************** function ___lwdiv *****************
 27611 ;; Defined at:
 27612 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 27613 ;; Parameters:    Size  Location     Type
 27614 ;;  dividend        2    0[BANK1 ] unsigned int 
 27615 ;;  divisor         2    2[BANK1 ] unsigned int 
 27616 ;; Auto vars:     Size  Location     Type
 27617 ;;  quotient        2    5[BANK1 ] unsigned int 
 27618 ;;  counter         1    4[BANK1 ] unsigned char 
 27619 ;; Return value:  Size  Location     Type
 27620 ;;                  2    0[BANK1 ] unsigned int 
 27621 ;; Registers used:
 27622 ;;		wreg, status,2, status,0
 27623 ;; Tracked objects:
 27624 ;;		On entry : 0/0
 27625 ;;		On exit  : 0/0
 27626 ;;		Unchanged: 0/0
 27627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27628 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27629 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27631 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27632 ;;Total ram usage:        7 bytes
 27633 ;; Hardware stack levels used:    1
 27634 ;; Hardware stack levels required when called:   16
 27635 ;; This function calls:
 27636 ;;		Nothing
 27637 ;; This function is called by:
 27638 ;;		_MiMAC_ChannelAssessment
 27639 ;;		_sprintf
 27640 ;; This function uses a non-reentrant model
 27641 ;;
 27642                           
 27643                           	psect	text68
 27644  00B008                     __ptext68:
 27645                           	opt stack 0
 27646  00B008                     ___lwdiv:
 27647                           	opt stack 13
 27648                           
 27649                           ; BSR set to: 1
 27650                           ;incstack = 0
 27651  00B008  0E00               	movlw	0
 27652  00B00A  0101               	movlb	1	; () banked
 27653  00B00C  6F06               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27654  00B00E  0E00               	movlw	0
 27655  00B010  6F05               	movwf	___lwdiv@quotient& (0+255),b
 27656                           
 27657                           ; BSR set to: 1
 27658  00B012  0101               	movlb	1	; () banked
 27659  00B014  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27660  00B016  0101               	movlb	1	; () banked
 27661  00B018  1103               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27662  00B01A  B4D8               	btfsc	status,2,c
 27663  00B01C  D02C               	goto	l2653
 27664                           
 27665                           ; BSR set to: 1
 27666  00B01E  0E01               	movlw	1
 27667  00B020  0101               	movlb	1	; () banked
 27668  00B022  6F04               	movwf	___lwdiv@counter& (0+255),b
 27669  00B024  D006               	goto	l17840
 27670  00B026                     l17838:
 27671                           
 27672                           ; BSR set to: 1
 27673  00B026  0101               	movlb	1	; () banked
 27674  00B028  90D8               	bcf	status,0,c
 27675  00B02A  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
 27676  00B02C  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27677  00B02E  0101               	movlb	1	; () banked
 27678  00B030  2B04               	incf	___lwdiv@counter& (0+255),f,b
 27679  00B032                     l17840:
 27680                           
 27681                           ; BSR set to: 1
 27682  00B032  0101               	movlb	1	; () banked
 27683  00B034  AF03               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27684  00B036  D7F7               	goto	l17838
 27685  00B038                     l17842:
 27686                           
 27687                           ; BSR set to: 1
 27688  00B038  0101               	movlb	1	; () banked
 27689  00B03A  90D8               	bcf	status,0,c
 27690  00B03C  3705               	rlcf	___lwdiv@quotient& (0+255),f,b
 27691  00B03E  3706               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27692                           
 27693                           ; BSR set to: 1
 27694  00B040  0101               	movlb	1	; () banked
 27695  00B042  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27696  00B044  0101               	movlb	1	; () banked
 27697  00B046  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
 27698  00B048  0101               	movlb	1	; () banked
 27699  00B04A  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27700  00B04C  0101               	movlb	1	; () banked
 27701  00B04E  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27702  00B050  A0D8               	btfss	status,0,c
 27703  00B052  D00A               	goto	l17850
 27704                           
 27705                           ; BSR set to: 1
 27706  00B054  0101               	movlb	1	; () banked
 27707  00B056  5102               	movf	___lwdiv@divisor& (0+255),w,b
 27708  00B058  0101               	movlb	1	; () banked
 27709  00B05A  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
 27710  00B05C  0101               	movlb	1	; () banked
 27711  00B05E  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27712  00B060  0101               	movlb	1	; () banked
 27713  00B062  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27714                           
 27715                           ; BSR set to: 1
 27716  00B064  0101               	movlb	1	; () banked
 27717  00B066  8105               	bsf	___lwdiv@quotient& (0+255),0,b
 27718  00B068                     l17850:
 27719                           
 27720                           ; BSR set to: 1
 27721  00B068  0101               	movlb	1	; () banked
 27722  00B06A  90D8               	bcf	status,0,c
 27723  00B06C  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27724  00B06E  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
 27725                           
 27726                           ; BSR set to: 1
 27727  00B070  0101               	movlb	1	; () banked
 27728  00B072  2F04               	decfsz	___lwdiv@counter& (0+255),f,b
 27729  00B074  D7E1               	goto	l17842
 27730  00B076                     l2653:
 27731                           
 27732                           ; BSR set to: 1
 27733  00B076  C105  F100         	movff	___lwdiv@quotient,?___lwdiv
 27734  00B07A  C106  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27735                           
 27736                           ; BSR set to: 1
 27737  00B07E  0012               	return		;funcret
 27738  00B080                     __end_of___lwdiv:
 27739                           	opt stack 0
 27740                           tblptru	equ	0xFF8
 27741                           tblptrh	equ	0xFF7
 27742                           tblptrl	equ	0xFF6
 27743                           tablat	equ	0xFF5
 27744                           prodh	equ	0xFF4
 27745                           prodl	equ	0xFF3
 27746                           intcon	equ	0xFF2
 27747                           intcon2	equ	0xFF1
 27748                           intcon3	equ	0xFF0
 27749                           indf0	equ	0xFEF
 27750                           postinc0	equ	0xFEE
 27751                           plusw0	equ	0xFEB
 27752                           fsr0h	equ	0xFEA
 27753                           fsr0l	equ	0xFE9
 27754                           wreg	equ	0xFE8
 27755                           indf1	equ	0xFE7
 27756                           postinc1	equ	0xFE6
 27757                           postdec1	equ	0xFE5
 27758                           plusw1	equ	0xFE3
 27759                           fsr1h	equ	0xFE2
 27760                           fsr1l	equ	0xFE1
 27761                           indf2	equ	0xFDF
 27762                           postinc2	equ	0xFDE
 27763                           postdec2	equ	0xFDD
 27764                           plusw2	equ	0xFDB
 27765                           fsr2h	equ	0xFDA
 27766                           fsr2l	equ	0xFD9
 27767                           status	equ	0xFD8
 27768                           
 27769 ;; *************** function ___awdiv *****************
 27770 ;; Defined at:
 27771 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 27772 ;; Parameters:    Size  Location     Type
 27773 ;;  dividend        2    6[BANK1 ] int 
 27774 ;;  divisor         2    8[BANK1 ] int 
 27775 ;; Auto vars:     Size  Location     Type
 27776 ;;  quotient        2   12[BANK1 ] int 
 27777 ;;  sign            1   11[BANK1 ] unsigned char 
 27778 ;;  counter         1   10[BANK1 ] unsigned char 
 27779 ;; Return value:  Size  Location     Type
 27780 ;;                  2    6[BANK1 ] int 
 27781 ;; Registers used:
 27782 ;;		wreg, status,2, status,0
 27783 ;; Tracked objects:
 27784 ;;		On entry : 0/0
 27785 ;;		On exit  : 0/0
 27786 ;;		Unchanged: 0/0
 27787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27788 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27789 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27791 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27792 ;;Total ram usage:        8 bytes
 27793 ;; Hardware stack levels used:    1
 27794 ;; Hardware stack levels required when called:   16
 27795 ;; This function calls:
 27796 ;;		Nothing
 27797 ;; This function is called by:
 27798 ;;		_MiMAC_ChannelAssessment
 27799 ;;		_CTR
 27800 ;;		_CBC_MAC
 27801 ;;		_MiApp_NoiseDetection
 27802 ;; This function uses a non-reentrant model
 27803 ;;
 27804                           
 27805                           	psect	text69
 27806  00A138                     __ptext69:
 27807                           	opt stack 0
 27808  00A138                     ___awdiv:
 27809                           	opt stack 7
 27810                           
 27811                           ; BSR set to: 1
 27812                           ;incstack = 0
 27813  00A138  0E00               	movlw	0
 27814  00A13A  0101               	movlb	1	; () banked
 27815  00A13C  6F0B               	movwf	___awdiv@sign& (0+255),b
 27816                           
 27817                           ; BSR set to: 1
 27818  00A13E  0101               	movlb	1	; () banked
 27819  00A140  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27820  00A142  D008               	goto	l16676
 27821                           
 27822                           ; BSR set to: 1
 27823  00A144  0101               	movlb	1	; () banked
 27824  00A146  6D08               	negf	___awdiv@divisor& (0+255),b
 27825  00A148  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 27826  00A14A  B0D8               	btfsc	status,0,c
 27827  00A14C  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 27828                           
 27829                           ; BSR set to: 1
 27830  00A14E  0E01               	movlw	1
 27831  00A150  0101               	movlb	1	; () banked
 27832  00A152  6F0B               	movwf	___awdiv@sign& (0+255),b
 27833  00A154                     l16676:
 27834                           
 27835                           ; BSR set to: 1
 27836  00A154  0101               	movlb	1	; () banked
 27837  00A156  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 27838  00A158  D008               	goto	l16682
 27839                           
 27840                           ; BSR set to: 1
 27841  00A15A  0101               	movlb	1	; () banked
 27842  00A15C  6D06               	negf	___awdiv@dividend& (0+255),b
 27843  00A15E  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 27844  00A160  B0D8               	btfsc	status,0,c
 27845  00A162  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 27846                           
 27847                           ; BSR set to: 1
 27848  00A164  0E01               	movlw	1
 27849  00A166  0101               	movlb	1	; () banked
 27850  00A168  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 27851  00A16A                     l16682:
 27852                           
 27853                           ; BSR set to: 1
 27854  00A16A  0E00               	movlw	0
 27855  00A16C  0101               	movlb	1	; () banked
 27856  00A16E  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 27857  00A170  0E00               	movlw	0
 27858  00A172  6F0C               	movwf	___awdiv@quotient& (0+255),b
 27859                           
 27860                           ; BSR set to: 1
 27861  00A174  0101               	movlb	1	; () banked
 27862  00A176  5108               	movf	___awdiv@divisor& (0+255),w,b
 27863  00A178  0101               	movlb	1	; () banked
 27864  00A17A  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 27865  00A17C  B4D8               	btfsc	status,2,c
 27866  00A17E  D02C               	goto	l16704
 27867                           
 27868                           ; BSR set to: 1
 27869  00A180  0E01               	movlw	1
 27870  00A182  0101               	movlb	1	; () banked
 27871  00A184  6F0A               	movwf	___awdiv@counter& (0+255),b
 27872  00A186  D006               	goto	l16690
 27873  00A188                     l16688:
 27874                           
 27875                           ; BSR set to: 1
 27876  00A188  0101               	movlb	1	; () banked
 27877  00A18A  90D8               	bcf	status,0,c
 27878  00A18C  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 27879  00A18E  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 27880  00A190  0101               	movlb	1	; () banked
 27881  00A192  2B0A               	incf	___awdiv@counter& (0+255),f,b
 27882  00A194                     l16690:
 27883                           
 27884                           ; BSR set to: 1
 27885  00A194  0101               	movlb	1	; () banked
 27886  00A196  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27887  00A198  D7F7               	goto	l16688
 27888  00A19A                     l16692:
 27889                           
 27890                           ; BSR set to: 1
 27891  00A19A  0101               	movlb	1	; () banked
 27892  00A19C  90D8               	bcf	status,0,c
 27893  00A19E  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 27894  00A1A0  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 27895                           
 27896                           ; BSR set to: 1
 27897  00A1A2  0101               	movlb	1	; () banked
 27898  00A1A4  5108               	movf	___awdiv@divisor& (0+255),w,b
 27899  00A1A6  0101               	movlb	1	; () banked
 27900  00A1A8  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 27901  00A1AA  0101               	movlb	1	; () banked
 27902  00A1AC  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27903  00A1AE  0101               	movlb	1	; () banked
 27904  00A1B0  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 27905  00A1B2  A0D8               	btfss	status,0,c
 27906  00A1B4  D00A               	goto	l16700
 27907                           
 27908                           ; BSR set to: 1
 27909  00A1B6  0101               	movlb	1	; () banked
 27910  00A1B8  5108               	movf	___awdiv@divisor& (0+255),w,b
 27911  00A1BA  0101               	movlb	1	; () banked
 27912  00A1BC  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 27913  00A1BE  0101               	movlb	1	; () banked
 27914  00A1C0  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27915  00A1C2  0101               	movlb	1	; () banked
 27916  00A1C4  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 27917                           
 27918                           ; BSR set to: 1
 27919  00A1C6  0101               	movlb	1	; () banked
 27920  00A1C8  810C               	bsf	___awdiv@quotient& (0+255),0,b
 27921  00A1CA                     l16700:
 27922                           
 27923                           ; BSR set to: 1
 27924  00A1CA  0101               	movlb	1	; () banked
 27925  00A1CC  90D8               	bcf	status,0,c
 27926  00A1CE  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 27927  00A1D0  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 27928                           
 27929                           ; BSR set to: 1
 27930  00A1D2  0101               	movlb	1	; () banked
 27931  00A1D4  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 27932  00A1D6  D7E1               	goto	l16692
 27933  00A1D8                     l16704:
 27934                           
 27935                           ; BSR set to: 1
 27936  00A1D8  0101               	movlb	1	; () banked
 27937  00A1DA  510B               	movf	___awdiv@sign& (0+255),w,b
 27938  00A1DC  0101               	movlb	1	; () banked
 27939  00A1DE  B4D8               	btfsc	status,2,c
 27940  00A1E0  D005               	goto	l16708
 27941                           
 27942                           ; BSR set to: 1
 27943  00A1E2  0101               	movlb	1	; () banked
 27944  00A1E4  6D0C               	negf	___awdiv@quotient& (0+255),b
 27945  00A1E6  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 27946  00A1E8  B0D8               	btfsc	status,0,c
 27947  00A1EA  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 27948  00A1EC                     l16708:
 27949                           
 27950                           ; BSR set to: 1
 27951  00A1EC  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 27952  00A1F0  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 27953  00A1F4  0012               	return	
 27954  00A1F6                     __end_of___awdiv:
 27955                           	opt stack 0
 27956                           tblptru	equ	0xFF8
 27957                           tblptrh	equ	0xFF7
 27958                           tblptrl	equ	0xFF6
 27959                           tablat	equ	0xFF5
 27960                           prodh	equ	0xFF4
 27961                           prodl	equ	0xFF3
 27962                           intcon	equ	0xFF2
 27963                           intcon2	equ	0xFF1
 27964                           intcon3	equ	0xFF0
 27965                           indf0	equ	0xFEF
 27966                           postinc0	equ	0xFEE
 27967                           plusw0	equ	0xFEB
 27968                           fsr0h	equ	0xFEA
 27969                           fsr0l	equ	0xFE9
 27970                           wreg	equ	0xFE8
 27971                           indf1	equ	0xFE7
 27972                           postinc1	equ	0xFE6
 27973                           postdec1	equ	0xFE5
 27974                           plusw1	equ	0xFE3
 27975                           fsr1h	equ	0xFE2
 27976                           fsr1l	equ	0xFE1
 27977                           indf2	equ	0xFDF
 27978                           postinc2	equ	0xFDE
 27979                           postdec2	equ	0xFDD
 27980                           plusw2	equ	0xFDB
 27981                           fsr2h	equ	0xFDA
 27982                           fsr2l	equ	0xFD9
 27983                           status	equ	0xFD8
 27984                           
 27985 ;; *************** function _RegisterRead *****************
 27986 ;; Defined at:
 27987 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 27988 ;; Parameters:    Size  Location     Type
 27989 ;;  address         1    wreg     unsigned char 
 27990 ;; Auto vars:     Size  Location     Type
 27991 ;;  address         1    5[BANK1 ] unsigned char 
 27992 ;;  IRQ0select      1    4[BANK1 ] unsigned char 
 27993 ;;  IRQ1select      1    3[BANK1 ] unsigned char 
 27994 ;;  value           1    2[BANK1 ] unsigned char 
 27995 ;; Return value:  Size  Location     Type
 27996 ;;                  1    wreg      unsigned char 
 27997 ;; Registers used:
 27998 ;;		wreg, status,2, status,0, cstack
 27999 ;; Tracked objects:
 28000 ;;		On entry : 0/0
 28001 ;;		On exit  : 0/0
 28002 ;;		Unchanged: 0/0
 28003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28005 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28007 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28008 ;;Total ram usage:        4 bytes
 28009 ;; Hardware stack levels used:    1
 28010 ;; Hardware stack levels required when called:   18
 28011 ;; This function calls:
 28012 ;;		_SPIGet
 28013 ;;		_SPIPut
 28014 ;; This function is called by:
 28015 ;;		_TxPacket
 28016 ;;		_MiMAC_ChannelAssessment
 28017 ;;		_getReceiverBW
 28018 ;; This function uses a non-reentrant model
 28019 ;;
 28020                           
 28021                           	psect	text70
 28022  00B500                     __ptext70:
 28023                           	opt stack 0
 28024  00B500                     _RegisterRead:
 28025                           	opt stack 6
 28026                           
 28027                           ; BSR set to: 1
 28028                           ;incstack = 0
 28029                           ;RegisterRead@address stored from wreg
 28030  00B500  0101               	movlb	1	; () banked
 28031  00B502  6F05               	movwf	RegisterRead@address& (0+255),b
 28032                           
 28033                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 28034                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 28035  00B504  0E00               	movlw	0
 28036  00B506  B6F0               	btfsc	intcon3,3,c	;volatile
 28037  00B508  0E01               	movlw	1
 28038  00B50A  0101               	movlb	1	; () banked
 28039  00B50C  6F03               	movwf	RegisterRead@IRQ1select& (0+255),b
 28040                           
 28041                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 28042  00B50E  0E00               	movlw	0
 28043  00B510  B8F2               	btfsc	intcon,4,c	;volatile
 28044  00B512  0E01               	movlw	1
 28045  00B514  0101               	movlb	1	; () banked
 28046  00B516  6F04               	movwf	RegisterRead@IRQ0select& (0+255),b
 28047                           
 28048                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 28049  00B518  98F2               	bcf	intcon,4,c	;volatile
 28050                           
 28051                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 28052  00B51A  96F0               	bcf	intcon3,3,c	;volatile
 28053                           
 28054                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 28055  00B51C  968A               	bcf	3978,3,c	;volatile
 28056                           
 28057                           ; BSR set to: 1
 28058                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 28059  00B51E  0101               	movlb	1	; () banked
 28060  00B520  5105               	movf	RegisterRead@address& (0+255),w,b
 28061  00B522  0940               	iorlw	64
 28062  00B524  0101               	movlb	1	; () banked
 28063  00B526  6F05               	movwf	RegisterRead@address& (0+255),b
 28064                           
 28065                           ; BSR set to: 1
 28066                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 28067  00B528  0101               	movlb	1	; () banked
 28068  00B52A  5105               	movf	RegisterRead@address& (0+255),w,b
 28069  00B52C  EC7A  F05D         	call	_SPIPut
 28070                           
 28071                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 28072  00B530  ECC6  F05D         	call	_SPIGet	;wreg free
 28073  00B534  0101               	movlb	1	; () banked
 28074  00B536  6F02               	movwf	RegisterRead@value& (0+255),b
 28075                           
 28076                           ; BSR set to: 1
 28077                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 28078  00B538  868A               	bsf	3978,3,c	;volatile
 28079                           
 28080                           ; BSR set to: 1
 28081                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 28082  00B53A  0101               	movlb	1	; () banked
 28083  00B53C  B103               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 28084  00B53E  D002               	bra	u18155
 28085  00B540  96F0               	bcf	intcon3,3,c	;volatile
 28086  00B542  D001               	bra	u18156
 28087  00B544                     u18155:
 28088  00B544  86F0               	bsf	intcon3,3,c	;volatile
 28089  00B546                     u18156:
 28090                           
 28091                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 28092  00B546  0101               	movlb	1	; () banked
 28093  00B548  B104               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 28094  00B54A  D002               	bra	u18165
 28095  00B54C  98F2               	bcf	intcon,4,c	;volatile
 28096  00B54E  D001               	bra	u18166
 28097  00B550                     u18165:
 28098  00B550  88F2               	bsf	intcon,4,c	;volatile
 28099  00B552                     u18166:
 28100                           
 28101                           ;drv_mrf_miwi_89xa.c: 222: return value;
 28102  00B552  0101               	movlb	1	; () banked
 28103  00B554  5102               	movf	RegisterRead@value& (0+255),w,b
 28104  00B556  0012               	return	
 28105  00B558                     __end_of_RegisterRead:
 28106                           	opt stack 0
 28107                           tblptru	equ	0xFF8
 28108                           tblptrh	equ	0xFF7
 28109                           tblptrl	equ	0xFF6
 28110                           tablat	equ	0xFF5
 28111                           prodh	equ	0xFF4
 28112                           prodl	equ	0xFF3
 28113                           intcon	equ	0xFF2
 28114                           intcon2	equ	0xFF1
 28115                           intcon3	equ	0xFF0
 28116                           indf0	equ	0xFEF
 28117                           postinc0	equ	0xFEE
 28118                           plusw0	equ	0xFEB
 28119                           fsr0h	equ	0xFEA
 28120                           fsr0l	equ	0xFE9
 28121                           wreg	equ	0xFE8
 28122                           indf1	equ	0xFE7
 28123                           postinc1	equ	0xFE6
 28124                           postdec1	equ	0xFE5
 28125                           plusw1	equ	0xFE3
 28126                           fsr1h	equ	0xFE2
 28127                           fsr1l	equ	0xFE1
 28128                           indf2	equ	0xFDF
 28129                           postinc2	equ	0xFDE
 28130                           postdec2	equ	0xFDD
 28131                           plusw2	equ	0xFDB
 28132                           fsr2h	equ	0xFDA
 28133                           fsr2l	equ	0xFD9
 28134                           status	equ	0xFD8
 28135                           
 28136 ;; *************** function _SPIGet *****************
 28137 ;; Defined at:
 28138 ;;		line 104 in file "src/18F27J53/spi.c"
 28139 ;; Parameters:    Size  Location     Type
 28140 ;;		None
 28141 ;; Auto vars:     Size  Location     Type
 28142 ;;		None
 28143 ;; Return value:  Size  Location     Type
 28144 ;;                  1    wreg      unsigned char 
 28145 ;; Registers used:
 28146 ;;		wreg, status,2, cstack
 28147 ;; Tracked objects:
 28148 ;;		On entry : 0/0
 28149 ;;		On exit  : 0/0
 28150 ;;		Unchanged: 0/0
 28151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28156 ;;Total ram usage:        0 bytes
 28157 ;; Hardware stack levels used:    1
 28158 ;; Hardware stack levels required when called:   17
 28159 ;; This function calls:
 28160 ;;		_SPIPut
 28161 ;; This function is called by:
 28162 ;;		_RegisterRead
 28163 ;; This function uses a non-reentrant model
 28164 ;;
 28165                           
 28166                           	psect	text71
 28167  00BB8C                     __ptext71:
 28168                           	opt stack 0
 28169  00BB8C                     _SPIGet:
 28170                           	opt stack 6
 28171                           
 28172                           ;spi.c: 128: SPIPut(0x00);
 28173                           
 28174                           ; BSR set to: 1
 28175                           ;incstack = 0
 28176  00BB8C  0E00               	movlw	0
 28177  00BB8E  EC7A  F05D         	call	_SPIPut
 28178                           
 28179                           ;spi.c: 129: return SSP2BUF;
 28180  00BB92  5075               	movf	3957,w,c	;volatile
 28181  00BB94  0012               	return	
 28182  00BB96                     __end_of_SPIGet:
 28183                           	opt stack 0
 28184                           tblptru	equ	0xFF8
 28185                           tblptrh	equ	0xFF7
 28186                           tblptrl	equ	0xFF6
 28187                           tablat	equ	0xFF5
 28188                           prodh	equ	0xFF4
 28189                           prodl	equ	0xFF3
 28190                           intcon	equ	0xFF2
 28191                           intcon2	equ	0xFF1
 28192                           intcon3	equ	0xFF0
 28193                           indf0	equ	0xFEF
 28194                           postinc0	equ	0xFEE
 28195                           plusw0	equ	0xFEB
 28196                           fsr0h	equ	0xFEA
 28197                           fsr0l	equ	0xFE9
 28198                           wreg	equ	0xFE8
 28199                           indf1	equ	0xFE7
 28200                           postinc1	equ	0xFE6
 28201                           postdec1	equ	0xFE5
 28202                           plusw1	equ	0xFE3
 28203                           fsr1h	equ	0xFE2
 28204                           fsr1l	equ	0xFE1
 28205                           indf2	equ	0xFDF
 28206                           postinc2	equ	0xFDE
 28207                           postdec2	equ	0xFDD
 28208                           plusw2	equ	0xFDB
 28209                           fsr2h	equ	0xFDA
 28210                           fsr2l	equ	0xFD9
 28211                           status	equ	0xFD8
 28212                           
 28213 ;; *************** function _MiApp_ProtocolInit *****************
 28214 ;; Defined at:
 28215 ;;		line 3564 in file "src/miwi/miwi_mesh.c"
 28216 ;; Parameters:    Size  Location     Type
 28217 ;;  bNetworkFree    1    wreg     unsigned char 
 28218 ;; Auto vars:     Size  Location     Type
 28219 ;;  bNetworkFree    1   23[BANK1 ] unsigned char 
 28220 ;;  MIP             3   24[BANK1 ] struct .
 28221 ;;  i               1   27[BANK1 ] unsigned char 
 28222 ;; Return value:  Size  Location     Type
 28223 ;;                  1    wreg      unsigned char 
 28224 ;; Registers used:
 28225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28226 ;; Tracked objects:
 28227 ;;		On entry : 0/0
 28228 ;;		On exit  : 0/0
 28229 ;;		Unchanged: 0/0
 28230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28232 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28233 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28234 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28235 ;;Total ram usage:        6 bytes
 28236 ;; Hardware stack levels used:    1
 28237 ;; Hardware stack levels required when called:   21
 28238 ;; This function calls:
 28239 ;;		_InitSymbolTimer
 28240 ;;		_MiApp_SetChannel
 28241 ;;		_MiMAC_Init
 28242 ;;		_MiMAC_SetAltAddress
 28243 ;; This function is called by:
 28244 ;;		_main
 28245 ;; This function uses a non-reentrant model
 28246 ;;
 28247                           
 28248                           	psect	text72
 28249  007A1C                     __ptext72:
 28250                           	opt stack 0
 28251  007A1C                     _MiApp_ProtocolInit:
 28252                           	opt stack 9
 28253                           
 28254                           ;incstack = 0
 28255                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
 28256  007A1C  0101               	movlb	1	; () banked
 28257  007A1E  6F17               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
 28258                           
 28259                           ;miwi_mesh.c: 3566: MACINIT_PARAM MIP;
 28260                           ;miwi_mesh.c: 3567: uint8_t i;
 28261                           ;miwi_mesh.c: 3602: myShortAddress.Val = 0xFFFF;
 28262  007A20  0101               	movlb	1	; () banked
 28263  007A22  69F2               	setf	_myShortAddress& (0+255),b
 28264  007A24  69F3               	setf	(_myShortAddress+1)& (0+255),b
 28265                           
 28266                           ; BSR set to: 1
 28267                           ;miwi_mesh.c: 3603: myPANID.Val = 0x1337;
 28268  007A26  0E13               	movlw	19
 28269  007A28  0101               	movlb	1	; () banked
 28270  007A2A  6FF1               	movwf	(_myPANID+1)& (0+255),b
 28271  007A2C  0E37               	movlw	55
 28272  007A2E  6FF0               	movwf	_myPANID& (0+255),b
 28273                           
 28274                           ;miwi_mesh.c: 3608: for(i = 0; i < 64; i++)
 28275  007A30  0E00               	movlw	0
 28276  007A32  0101               	movlb	1	; () banked
 28277  007A34  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28278  007A36                     l20290:
 28279                           
 28280                           ; BSR set to: 1
 28281  007A36  0E3F               	movlw	63
 28282  007A38  0101               	movlb	1	; () banked
 28283  007A3A  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28284  007A3C  D001               	goto	l20294
 28285  007A3E  D012               	goto	l20300
 28286  007A40                     l20294:
 28287                           
 28288                           ; BSR set to: 1
 28289                           ;miwi_mesh.c: 3609: {
 28290                           ;miwi_mesh.c: 3610: ConnectionTable[i].status.Val = 0;
 28291  007A40  0101               	movlb	1	; () banked
 28292  007A42  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28293  007A44  0D09               	mullw	9
 28294  007A46  0E08               	movlw	8
 28295  007A48  26F3               	addwf	prodl,f,c
 28296  007A4A  0E00               	movlw	0
 28297  007A4C  22F4               	addwfc	prodh,f,c
 28298  007A4E  0E00               	movlw	low _ConnectionTable
 28299  007A50  24F3               	addwf	prodl,w,c
 28300  007A52  6ED9               	movwf	fsr2l,c
 28301  007A54  0E06               	movlw	high _ConnectionTable
 28302  007A56  20F4               	addwfc	prodh,w,c
 28303  007A58  6EDA               	movwf	fsr2h,c
 28304  007A5A  0E00               	movlw	0
 28305  007A5C  6EDF               	movwf	indf2,c
 28306                           
 28307                           ; BSR set to: 1
 28308  007A5E  0101               	movlb	1	; () banked
 28309  007A60  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28310  007A62  D7E9               	goto	l20290
 28311  007A64                     l20300:
 28312                           
 28313                           ; BSR set to: 1
 28314                           ;miwi_mesh.c: 3611: }
 28315                           ;miwi_mesh.c: 3614: for(i=0;i<8;i++)
 28316  007A64  0E00               	movlw	0
 28317  007A66  0101               	movlb	1	; () banked
 28318  007A68  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28319  007A6A                     l20302:
 28320                           
 28321                           ; BSR set to: 1
 28322  007A6A  0E07               	movlw	7
 28323  007A6C  0101               	movlb	1	; () banked
 28324  007A6E  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28325  007A70  D001               	goto	l20306
 28326  007A72  D019               	goto	l20312
 28327  007A74                     l20306:
 28328                           
 28329                           ; BSR set to: 1
 28330                           ;miwi_mesh.c: 3615: {
 28331                           ;miwi_mesh.c: 3616: RoutingTable[i] = 0;
 28332  007A74  0101               	movlb	1	; () banked
 28333  007A76  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28334  007A78  0D01               	mullw	1
 28335  007A7A  0E71               	movlw	low _RoutingTable
 28336  007A7C  24F3               	addwf	prodl,w,c
 28337  007A7E  6ED9               	movwf	fsr2l,c
 28338  007A80  0E00               	movlw	high _RoutingTable
 28339  007A82  20F4               	addwfc	prodh,w,c
 28340  007A84  6EDA               	movwf	fsr2h,c
 28341  007A86  0E00               	movlw	0
 28342  007A88  6EDF               	movwf	indf2,c
 28343                           
 28344                           ;miwi_mesh.c: 3617: RouterFailures[i] = 0;
 28345  007A8A  0101               	movlb	1	; () banked
 28346  007A8C  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28347  007A8E  0D01               	mullw	1
 28348  007A90  0E69               	movlw	low _RouterFailures
 28349  007A92  24F3               	addwf	prodl,w,c
 28350  007A94  6ED9               	movwf	fsr2l,c
 28351  007A96  0E00               	movlw	high _RouterFailures
 28352  007A98  20F4               	addwfc	prodh,w,c
 28353  007A9A  6EDA               	movwf	fsr2h,c
 28354  007A9C  0E00               	movlw	0
 28355  007A9E  6EDF               	movwf	indf2,c
 28356                           
 28357                           ; BSR set to: 1
 28358  007AA0  0101               	movlb	1	; () banked
 28359  007AA2  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28360  007AA4  D7E2               	goto	l20302
 28361  007AA6                     l20312:
 28362                           
 28363                           ; BSR set to: 1
 28364                           ;miwi_mesh.c: 3618: }
 28365                           ;miwi_mesh.c: 3619: knownCoordinators = 0;
 28366  007AA6  0E00               	movlw	0
 28367  007AA8  0101               	movlb	1	; () banked
 28368  007AAA  6FC7               	movwf	_knownCoordinators& (0+255),b
 28369                           
 28370                           ;miwi_mesh.c: 3620: role = 0x00;
 28371  007AAC  0E00               	movlw	0
 28372  007AAE  0101               	movlb	1	; () banked
 28373  007AB0  6FCA               	movwf	_role& (0+255),b
 28374                           
 28375                           ;miwi_mesh.c: 3622: MiWiStateMachine.Val = 0;
 28376  007AB2  0E00               	movlw	0
 28377  007AB4  0101               	movlb	1	; () banked
 28378  007AB6  6FB6               	movwf	(_MiWiStateMachine+1)& (0+255),b
 28379  007AB8  0E00               	movlw	0
 28380  007ABA  6FB5               	movwf	_MiWiStateMachine& (0+255),b
 28381                           
 28382                           ;miwi_mesh.c: 3624: openSocketInfo.status.Val = 0;
 28383  007ABC  0E00               	movlw	0
 28384  007ABE  0101               	movlb	1	; () banked
 28385  007AC0  6FCC               	movwf	_openSocketInfo& (0+255),b
 28386                           
 28387                           ;miwi_mesh.c: 3625: MiWiCapacityInfo.Val = 0;
 28388  007AC2  0E00               	movlw	0
 28389  007AC4  0101               	movlb	1	; () banked
 28390  007AC6  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28391                           
 28392                           ; BSR set to: 1
 28393                           ;miwi_mesh.c: 3627: InitSymbolTimer();
 28394  007AC8  ECA3  F05D         	call	_InitSymbolTimer	;wreg free
 28395                           
 28396                           ;miwi_mesh.c: 3629: TxData = 0;
 28397  007ACC  0E00               	movlw	0
 28398  007ACE  0101               	movlb	1	; () banked
 28399  007AD0  6FC6               	movwf	_TxData& (0+255),b
 28400                           
 28401                           ; BSR set to: 1
 28402                           ;miwi_mesh.c: 3645: for(i = 0; i < 64; i++)
 28403  007AD2  0E00               	movlw	0
 28404  007AD4  0101               	movlb	1	; () banked
 28405  007AD6  6F1B               	movwf	MiApp_ProtocolInit@i& (0+255),b
 28406  007AD8                     l20320:
 28407                           
 28408                           ; BSR set to: 1
 28409  007AD8  0E3F               	movlw	63
 28410  007ADA  0101               	movlb	1	; () banked
 28411  007ADC  651B               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
 28412  007ADE  D001               	goto	l20324
 28413  007AE0  D010               	goto	l20330
 28414  007AE2                     l20324:
 28415                           
 28416                           ; BSR set to: 1
 28417                           ;miwi_mesh.c: 3646: {
 28418                           ;miwi_mesh.c: 3647: IncomingFrameCounter[i].Val = 0;
 28419  007AE2  0101               	movlb	1	; () banked
 28420  007AE4  511B               	movf	MiApp_ProtocolInit@i& (0+255),w,b
 28421  007AE6  0D04               	mullw	4
 28422  007AE8  0E00               	movlw	low _IncomingFrameCounter
 28423  007AEA  24F3               	addwf	prodl,w,c
 28424  007AEC  6ED9               	movwf	fsr2l,c
 28425  007AEE  0E05               	movlw	high _IncomingFrameCounter
 28426  007AF0  20F4               	addwfc	prodh,w,c
 28427  007AF2  6EDA               	movwf	fsr2h,c
 28428  007AF4  6ADE               	clrf	postinc2,c
 28429  007AF6  6ADE               	clrf	postinc2,c
 28430  007AF8  6ADE               	clrf	postinc2,c
 28431  007AFA  6ADD               	clrf	postdec2,c
 28432                           
 28433                           ; BSR set to: 1
 28434  007AFC  0101               	movlb	1	; () banked
 28435  007AFE  2B1B               	incf	MiApp_ProtocolInit@i& (0+255),f,b
 28436  007B00  D7EB               	goto	l20320
 28437  007B02                     l20330:
 28438                           
 28439                           ; BSR set to: 1
 28440                           ;miwi_mesh.c: 3648: }
 28441                           ;miwi_mesh.c: 3709: MIP.actionFlags.Val = 0;
 28442  007B02  0E00               	movlw	0
 28443  007B04  0101               	movlb	1	; () banked
 28444  007B06  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 28445                           
 28446                           ;miwi_mesh.c: 3710: MIP.actionFlags.bits.PAddrLength = 4;
 28447  007B08  0101               	movlb	1	; () banked
 28448  007B0A  5118               	movf	MiApp_ProtocolInit@MIP& (0+255),w,b
 28449  007B0C  0B87               	andlw	-121
 28450  007B0E  0920               	iorlw	32
 28451  007B10  6F18               	movwf	MiApp_ProtocolInit@MIP& (0+255),b
 28452                           
 28453                           ; BSR set to: 1
 28454                           ;miwi_mesh.c: 3711: MIP.actionFlags.bits.CCAEnable = 1;
 28455  007B12  0101               	movlb	1	; () banked
 28456  007B14  8318               	bsf	MiApp_ProtocolInit@MIP& (0+255),1,b
 28457                           
 28458                           ; BSR set to: 1
 28459                           ;miwi_mesh.c: 3712: MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
 28460  007B16  0101               	movlb	1	; () banked
 28461  007B18  B117               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
 28462  007B1A  D003               	bra	u23255
 28463  007B1C  0101               	movlb	1	; () banked
 28464  007B1E  9518               	bcf	MiApp_ProtocolInit@MIP& (0+255),2,b
 28465  007B20  D002               	bra	u23256
 28466  007B22                     u23255:
 28467  007B22  0101               	movlb	1	; () banked
 28468  007B24  8518               	bsf	MiApp_ProtocolInit@MIP& (0+255),2,b
 28469  007B26                     u23256:
 28470                           
 28471                           ; BSR set to: 1
 28472                           ;miwi_mesh.c: 3713: MIP.PAddress = myLongAddress;
 28473  007B26  0EE8               	movlw	low _myLongAddress
 28474  007B28  0101               	movlb	1	; () banked
 28475  007B2A  6F19               	movwf	(MiApp_ProtocolInit@MIP+1)& (0+255),b
 28476  007B2C  0E01               	movlw	high _myLongAddress
 28477  007B2E  0101               	movlb	1	; () banked
 28478  007B30  6F1A               	movwf	(MiApp_ProtocolInit@MIP+2)& (0+255),b
 28479                           
 28480                           ; BSR set to: 1
 28481                           ;miwi_mesh.c: 3715: MiMAC_Init(MIP);
 28482  007B32  C118  F112         	movff	MiApp_ProtocolInit@MIP,MiMAC_Init@initValue
 28483  007B36  C119  F113         	movff	MiApp_ProtocolInit@MIP+1,MiMAC_Init@initValue+1
 28484  007B3A  C11A  F114         	movff	MiApp_ProtocolInit@MIP+2,MiMAC_Init@initValue+2
 28485  007B3E  ECCC  F041         	call	_MiMAC_Init	;wreg free
 28486                           
 28487                           ;miwi_mesh.c: 3717: MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
 28488  007B42  0EF2               	movlw	low _myShortAddress
 28489  007B44  0101               	movlb	1	; () banked
 28490  007B46  6F00               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 28491  007B48  0E01               	movlw	high _myShortAddress
 28492  007B4A  0101               	movlb	1	; () banked
 28493  007B4C  6F01               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 28494  007B4E  0EF0               	movlw	low _myPANID
 28495  007B50  0101               	movlb	1	; () banked
 28496  007B52  6F02               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 28497  007B54  0E01               	movlw	high _myPANID
 28498  007B56  0101               	movlb	1	; () banked
 28499  007B58  6F03               	movwf	(MiMAC_SetAltAddress@PANID+1)& (0+255),b
 28500  007B5A  ECD6  F05D         	call	_MiMAC_SetAltAddress	;wreg free
 28501                           
 28502                           ;miwi_mesh.c: 3718: MiApp_SetChannel(currentChannel);
 28503  007B5E  0101               	movlb	1	; () banked
 28504  007B60  51F6               	movf	_currentChannel& (0+255),w,b
 28505  007B62  EC68  F05D         	call	_MiApp_SetChannel
 28506                           
 28507                           ;miwi_mesh.c: 3723: MiWiCapacityInfo.bits.Sleep = 1;
 28508  007B66  0101               	movlb	1	; () banked
 28509  007B68  81C2               	bsf	_MiWiCapacityInfo& (0+255),0,b
 28510                           
 28511                           ; BSR set to: 1
 28512                           ;miwi_mesh.c: 3726: MiWiCapacityInfo.bits.Security = 1;
 28513  007B6A  0101               	movlb	1	; () banked
 28514  007B6C  87C2               	bsf	_MiWiCapacityInfo& (0+255),3,b
 28515                           
 28516                           ; BSR set to: 1
 28517                           ;miwi_mesh.c: 3728: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 28518  007B6E  C1BF  F116         	movff	_ConnMode,??_MiApp_ProtocolInit
 28519  007B72  0101               	movlb	1	; () banked
 28520  007B74  3B16               	swapf	??_MiApp_ProtocolInit& (0+255),f,b
 28521  007B76  0101               	movlb	1	; () banked
 28522  007B78  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 28523  007B7A  0101               	movlb	1	; () banked
 28524  007B7C  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28525  007B7E  0BCF               	andlw	-49
 28526  007B80  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28527  007B82  0101               	movlb	1	; () banked
 28528  007B84  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28529                           
 28530                           ; BSR set to: 1
 28531                           ;miwi_mesh.c: 3730: MiWiCapacityInfo.bits.CoordCap = 1;
 28532  007B86  0101               	movlb	1	; () banked
 28533  007B88  8DC2               	bsf	_MiWiCapacityInfo& (0+255),6,b
 28534                           
 28535                           ; BSR set to: 1
 28536                           ;miwi_mesh.c: 3731: MiWiCapacityInfo.bits.Role = role;
 28537  007B8A  C1CA  F116         	movff	_role,??_MiApp_ProtocolInit
 28538  007B8E  0101               	movlb	1	; () banked
 28539  007B90  4716               	rlncf	??_MiApp_ProtocolInit& (0+255),f,b
 28540  007B92  0101               	movlb	1	; () banked
 28541  007B94  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 28542  007B96  0101               	movlb	1	; () banked
 28543  007B98  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28544  007B9A  0BF9               	andlw	-7
 28545  007B9C  1916               	xorwf	??_MiApp_ProtocolInit& (0+255),w,b
 28546  007B9E  0101               	movlb	1	; () banked
 28547  007BA0  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 28548                           
 28549                           ; BSR set to: 1
 28550                           ;miwi_mesh.c: 3743: MiWiSeqNum = TMR1L;
 28551  007BA2  CFCE F1C3          	movff	4046,_MiWiSeqNum	;volatile
 28552                           
 28553                           ; BSR set to: 1
 28554                           ;miwi_mesh.c: 3745: INTCON3bits.INT1IF = 0;
 28555  007BA6  90F0               	bcf	intcon3,0,c	;volatile
 28556                           
 28557                           ; BSR set to: 1
 28558                           ;miwi_mesh.c: 3746: INTCON3bits.INT1IE = 1;
 28559  007BA8  86F0               	bsf	intcon3,3,c	;volatile
 28560  007BAA  0012               	return	
 28561  007BAC                     __end_of_MiApp_ProtocolInit:
 28562                           	opt stack 0
 28563                           tblptru	equ	0xFF8
 28564                           tblptrh	equ	0xFF7
 28565                           tblptrl	equ	0xFF6
 28566                           tablat	equ	0xFF5
 28567                           prodh	equ	0xFF4
 28568                           prodl	equ	0xFF3
 28569                           intcon	equ	0xFF2
 28570                           intcon2	equ	0xFF1
 28571                           intcon3	equ	0xFF0
 28572                           indf0	equ	0xFEF
 28573                           postinc0	equ	0xFEE
 28574                           plusw0	equ	0xFEB
 28575                           fsr0h	equ	0xFEA
 28576                           fsr0l	equ	0xFE9
 28577                           wreg	equ	0xFE8
 28578                           indf1	equ	0xFE7
 28579                           postinc1	equ	0xFE6
 28580                           postdec1	equ	0xFE5
 28581                           plusw1	equ	0xFE3
 28582                           fsr1h	equ	0xFE2
 28583                           fsr1l	equ	0xFE1
 28584                           indf2	equ	0xFDF
 28585                           postinc2	equ	0xFDE
 28586                           postdec2	equ	0xFDD
 28587                           plusw2	equ	0xFDB
 28588                           fsr2h	equ	0xFDA
 28589                           fsr2l	equ	0xFD9
 28590                           status	equ	0xFD8
 28591                           
 28592 ;; *************** function _MiMAC_SetAltAddress *****************
 28593 ;; Defined at:
 28594 ;;		line 438 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28595 ;; Parameters:    Size  Location     Type
 28596 ;;  Address         2    0[BANK1 ] PTR unsigned char 
 28597 ;;		 -> tempShortAddress(2), myShortAddress(2), 
 28598 ;;  PANID           2    2[BANK1 ] PTR unsigned char 
 28599 ;;		 -> myPANID(2), 
 28600 ;; Auto vars:     Size  Location     Type
 28601 ;;		None
 28602 ;; Return value:  Size  Location     Type
 28603 ;;                  1    wreg      unsigned char 
 28604 ;; Registers used:
 28605 ;;		None
 28606 ;; Tracked objects:
 28607 ;;		On entry : 0/0
 28608 ;;		On exit  : 0/0
 28609 ;;		Unchanged: 0/0
 28610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28611 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28614 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28615 ;;Total ram usage:        4 bytes
 28616 ;; Hardware stack levels used:    1
 28617 ;; Hardware stack levels required when called:   16
 28618 ;; This function calls:
 28619 ;;		Nothing
 28620 ;; This function is called by:
 28621 ;;		_MiWiTasks
 28622 ;;		_MiApp_ProtocolInit
 28623 ;;		_MiApp_StartConnection
 28624 ;;		_MiApp_EstablishConnection
 28625 ;;		_MiApp_RemoveConnection
 28626 ;; This function uses a non-reentrant model
 28627 ;;
 28628                           
 28629                           	psect	text73
 28630  00BBAC                     __ptext73:
 28631                           	opt stack 0
 28632  00BBAC                     _MiMAC_SetAltAddress:
 28633                           	opt stack 13
 28634                           
 28635                           ;drv_mrf_miwi_89xa.c: 440: return 0;
 28636                           ;	Return value of _MiMAC_SetAltAddress is never used
 28637                           
 28638                           ; BSR set to: 1
 28639                           ;incstack = 0
 28640  00BBAC  0012               	return		;funcret
 28641  00BBAE                     __end_of_MiMAC_SetAltAddress:
 28642                           	opt stack 0
 28643                           tblptru	equ	0xFF8
 28644                           tblptrh	equ	0xFF7
 28645                           tblptrl	equ	0xFF6
 28646                           tablat	equ	0xFF5
 28647                           prodh	equ	0xFF4
 28648                           prodl	equ	0xFF3
 28649                           intcon	equ	0xFF2
 28650                           intcon2	equ	0xFF1
 28651                           intcon3	equ	0xFF0
 28652                           indf0	equ	0xFEF
 28653                           postinc0	equ	0xFEE
 28654                           plusw0	equ	0xFEB
 28655                           fsr0h	equ	0xFEA
 28656                           fsr0l	equ	0xFE9
 28657                           wreg	equ	0xFE8
 28658                           indf1	equ	0xFE7
 28659                           postinc1	equ	0xFE6
 28660                           postdec1	equ	0xFE5
 28661                           plusw1	equ	0xFE3
 28662                           fsr1h	equ	0xFE2
 28663                           fsr1l	equ	0xFE1
 28664                           indf2	equ	0xFDF
 28665                           postinc2	equ	0xFDE
 28666                           postdec2	equ	0xFDD
 28667                           plusw2	equ	0xFDB
 28668                           fsr2h	equ	0xFDA
 28669                           fsr2l	equ	0xFD9
 28670                           status	equ	0xFD8
 28671                           
 28672 ;; *************** function _MiMAC_Init *****************
 28673 ;; Defined at:
 28674 ;;		line 578 in file "src/miwi/drv_mrf_miwi_89xa.c"
 28675 ;; Parameters:    Size  Location     Type
 28676 ;;  initValue       3   18[BANK1 ] struct .
 28677 ;; Auto vars:     Size  Location     Type
 28678 ;;  i               1   21[BANK1 ] unsigned char 
 28679 ;; Return value:  Size  Location     Type
 28680 ;;                  1    wreg      unsigned char 
 28681 ;; Registers used:
 28682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28683 ;; Tracked objects:
 28684 ;;		On entry : 0/0
 28685 ;;		On exit  : 0/0
 28686 ;;		Unchanged: 0/0
 28687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28688 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28689 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28691 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28692 ;;Total ram usage:        4 bytes
 28693 ;; Hardware stack levels used:    1
 28694 ;; Hardware stack levels required when called:   19
 28695 ;; This function calls:
 28696 ;;		_DELAY_ms
 28697 ;;		_RegisterSet
 28698 ;;		_SetRFMode
 28699 ;; This function is called by:
 28700 ;;		_MiApp_ProtocolInit
 28701 ;; This function uses a non-reentrant model
 28702 ;;
 28703                           
 28704                           	psect	text74
 28705  008398                     __ptext74:
 28706                           	opt stack 0
 28707  008398                     _MiMAC_Init:
 28708                           	opt stack 10
 28709                           
 28710                           ;drv_mrf_miwi_89xa.c: 580: uint8_t i;
 28711                           ;drv_mrf_miwi_89xa.c: 582: MACInitParams = initValue;
 28712                           
 28713                           ;incstack = 0
 28714  008398  C112  F1AA         	movff	MiMAC_Init@initValue,_MACInitParams
 28715  00839C  C113  F1AB         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 28716  0083A0  C114  F1AC         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 28717                           
 28718                           ;drv_mrf_miwi_89xa.c: 584: DELAY_ms(20);
 28719  0083A4  0E00               	movlw	0
 28720  0083A6  0101               	movlb	1	; () banked
 28721  0083A8  6F0D               	movwf	(DELAY_ms@ms+1)& (0+255),b
 28722  0083AA  0E14               	movlw	20
 28723  0083AC  6F0C               	movwf	DELAY_ms@ms& (0+255),b
 28724  0083AE  EC34  F054         	call	_DELAY_ms	;wreg free
 28725                           
 28726                           ;drv_mrf_miwi_89xa.c: 585: LATBbits.LATB3 = 1;
 28727  0083B2  868A               	bsf	3978,3,c	;volatile
 28728                           
 28729                           ;drv_mrf_miwi_89xa.c: 586: LATCbits.LATC6 = 1;
 28730  0083B4  8C8B               	bsf	3979,6,c	;volatile
 28731                           
 28732                           ;drv_mrf_miwi_89xa.c: 589: MACSeq = TMR1L;
 28733  0083B6  CFCE F1C0          	movff	4046,_MACSeq	;volatile
 28734                           
 28735                           ;drv_mrf_miwi_89xa.c: 590: ReceivedBankIndex = 0xFF;
 28736  0083BA  0101               	movlb	1	; () banked
 28737  0083BC  69C5               	setf	_ReceivedBankIndex& (0+255),b
 28738                           
 28739                           ; BSR set to: 1
 28740                           ;drv_mrf_miwi_89xa.c: 592: for(i = 0; i < 2; i++)
 28741  0083BE  0E00               	movlw	0
 28742  0083C0  0101               	movlb	1	; () banked
 28743  0083C2  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28744  0083C4                     l19014:
 28745                           
 28746                           ; BSR set to: 1
 28747  0083C4  0E01               	movlw	1
 28748  0083C6  0101               	movlb	1	; () banked
 28749  0083C8  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28750  0083CA  D001               	goto	l19018
 28751  0083CC  D00E               	goto	l19024
 28752  0083CE                     l19018:
 28753                           
 28754                           ; BSR set to: 1
 28755                           ;drv_mrf_miwi_89xa.c: 593: {
 28756                           ;drv_mrf_miwi_89xa.c: 594: RxPacket[i].flags.Val = 0;
 28757  0083CE  0101               	movlb	1	; () banked
 28758  0083D0  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28759  0083D2  0D42               	mullw	66
 28760  0083D4  0E00               	movlw	low _RxPacket
 28761  0083D6  24F3               	addwf	prodl,w,c
 28762  0083D8  6ED9               	movwf	fsr2l,c
 28763  0083DA  0E03               	movlw	high _RxPacket
 28764  0083DC  20F4               	addwfc	prodh,w,c
 28765  0083DE  6EDA               	movwf	fsr2h,c
 28766  0083E0  0E00               	movlw	0
 28767  0083E2  6EDF               	movwf	indf2,c
 28768                           
 28769                           ; BSR set to: 1
 28770  0083E4  0101               	movlb	1	; () banked
 28771  0083E6  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28772  0083E8  D7ED               	goto	l19014
 28773  0083EA                     l19024:
 28774                           
 28775                           ; BSR set to: 1
 28776                           ;drv_mrf_miwi_89xa.c: 595: }
 28777                           ;drv_mrf_miwi_89xa.c: 598: for(i = 0; i < 5; i++)
 28778  0083EA  0E00               	movlw	0
 28779  0083EC  0101               	movlb	1	; () banked
 28780  0083EE  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28781  0083F0                     l19026:
 28782                           
 28783                           ; BSR set to: 1
 28784  0083F0  0E04               	movlw	4
 28785  0083F2  0101               	movlb	1	; () banked
 28786  0083F4  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28787  0083F6  D001               	goto	l19030
 28788  0083F8  D00E               	goto	l19036
 28789  0083FA                     l19030:
 28790                           
 28791                           ; BSR set to: 1
 28792                           ;drv_mrf_miwi_89xa.c: 599: {
 28793                           ;drv_mrf_miwi_89xa.c: 600: AckInfo[i].Valid = FALSE;
 28794  0083FA  0101               	movlb	1	; () banked
 28795  0083FC  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28796  0083FE  0D06               	mullw	6
 28797  008400  0E48               	movlw	low _AckInfo
 28798  008402  24F3               	addwf	prodl,w,c
 28799  008404  6ED9               	movwf	fsr2l,c
 28800  008406  0E02               	movlw	high _AckInfo
 28801  008408  20F4               	addwfc	prodh,w,c
 28802  00840A  6EDA               	movwf	fsr2h,c
 28803  00840C  0E00               	movlw	0
 28804  00840E  6EDF               	movwf	indf2,c
 28805                           
 28806                           ; BSR set to: 1
 28807  008410  0101               	movlb	1	; () banked
 28808  008412  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28809  008414  D7ED               	goto	l19026
 28810  008416                     l19036:
 28811                           
 28812                           ; BSR set to: 1
 28813                           ;drv_mrf_miwi_89xa.c: 601: }
 28814                           ;drv_mrf_miwi_89xa.c: 619: OutgoingFrameCounter.Val = 1;
 28815  008416  0E01               	movlw	1
 28816  008418  0101               	movlb	1	; () banked
 28817  00841A  6FA2               	movwf	_OutgoingFrameCounter& (0+255),b
 28818  00841C  0E00               	movlw	0
 28819  00841E  6FA3               	movwf	(_OutgoingFrameCounter+1)& (0+255),b
 28820  008420  0E00               	movlw	0
 28821  008422  6FA4               	movwf	(_OutgoingFrameCounter+2)& (0+255),b
 28822  008424  0E00               	movlw	0
 28823  008426  6FA5               	movwf	(_OutgoingFrameCounter+3)& (0+255),b
 28824                           
 28825                           ;drv_mrf_miwi_89xa.c: 621: for(i = 0; i < 8; i++)
 28826  008428  0E00               	movlw	0
 28827  00842A  0101               	movlb	1	; () banked
 28828  00842C  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28829  00842E                     l19038:
 28830                           
 28831                           ; BSR set to: 1
 28832  00842E  0E07               	movlw	7
 28833  008430  0101               	movlb	1	; () banked
 28834  008432  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28835  008434  D001               	goto	l19042
 28836  008436  D017               	goto	l19048
 28837  008438                     l19042:
 28838                           
 28839                           ; BSR set to: 1
 28840                           ;drv_mrf_miwi_89xa.c: 622: {
 28841                           ;drv_mrf_miwi_89xa.c: 623: key[i] = mySecurityKey[i];
 28842  008438  0101               	movlb	1	; () banked
 28843  00843A  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28844  00843C  0D01               	mullw	1
 28845  00843E  0E79               	movlw	low _mySecurityKey
 28846  008440  24F3               	addwf	prodl,w,c
 28847  008442  6ED9               	movwf	fsr2l,c
 28848  008444  0E00               	movlw	high _mySecurityKey
 28849  008446  20F4               	addwfc	prodh,w,c
 28850  008448  6EDA               	movwf	fsr2h,c
 28851  00844A  0101               	movlb	1	; () banked
 28852  00844C  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28853  00844E  0D01               	mullw	1
 28854  008450  0EF1               	movlw	low _key
 28855  008452  24F3               	addwf	prodl,w,c
 28856  008454  6EE1               	movwf	fsr1l,c
 28857  008456  0E02               	movlw	high _key
 28858  008458  20F4               	addwfc	prodh,w,c
 28859  00845A  6EE2               	movwf	fsr1h,c
 28860  00845C  CFDF FFE7          	movff	indf2,indf1
 28861                           
 28862                           ; BSR set to: 1
 28863  008460  0101               	movlb	1	; () banked
 28864  008462  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28865  008464  D7E4               	goto	l19038
 28866  008466                     l19048:
 28867                           
 28868                           ; BSR set to: 1
 28869                           ;drv_mrf_miwi_89xa.c: 624: }
 28870                           ;drv_mrf_miwi_89xa.c: 628: for (i = 0 ; i <= 31; i++)
 28871  008466  0E00               	movlw	0
 28872  008468  0101               	movlb	1	; () banked
 28873  00846A  6F15               	movwf	MiMAC_Init@i& (0+255),b
 28874  00846C                     l19050:
 28875                           
 28876                           ; BSR set to: 1
 28877  00846C  0E1F               	movlw	31
 28878  00846E  0101               	movlb	1	; () banked
 28879  008470  6515               	cpfsgt	MiMAC_Init@i& (0+255),b
 28880  008472  D001               	goto	l19054
 28881  008474  D017               	goto	l19060
 28882  008476                     l19054:
 28883                           
 28884                           ; BSR set to: 1
 28885                           ;drv_mrf_miwi_89xa.c: 629: {
 28886                           ;drv_mrf_miwi_89xa.c: 630: RegisterSet(InitConfigRegs[i]);
 28887  008476  0101               	movlb	1	; () banked
 28888  008478  5115               	movf	MiMAC_Init@i& (0+255),w,b
 28889  00847A  0D02               	mullw	2
 28890  00847C  0EF5               	movlw	low _InitConfigRegs
 28891  00847E  24F3               	addwf	prodl,w,c
 28892  008480  6EF6               	movwf	tblptrl,c
 28893  008482  0E1F               	movlw	high _InitConfigRegs
 28894  008484  20F4               	addwfc	prodh,w,c
 28895  008486  6EF7               	movwf	tblptrh,c
 28896  008488                     	if	1	;There are 3 active tblptr bytes
 28897  008488  6AF8               	clrf	tblptru,c
 28898  00848A  0E00               	movlw	low (__mediumconst shr (0+16))
 28899  00848C  22F8               	addwfc	tblptru,f,c
 28900  00848E                     	endif
 28901  00848E  0009               	tblrd		*+
 28902  008490  CFF5 F102          	movff	tablat,RegisterSet@setting
 28903  008494  000A               	tblrd		*-
 28904  008496  CFF5 F103          	movff	tablat,RegisterSet@setting+1
 28905  00849A  EC01  F05B         	call	_RegisterSet	;wreg free
 28906  00849E  0101               	movlb	1	; () banked
 28907  0084A0  2B15               	incf	MiMAC_Init@i& (0+255),f,b
 28908  0084A2  D7E4               	goto	l19050
 28909  0084A4                     l19060:
 28910                           
 28911                           ; BSR set to: 1
 28912                           ;drv_mrf_miwi_89xa.c: 631: }
 28913                           ;drv_mrf_miwi_89xa.c: 632: SetRFMode(0x20);
 28914  0084A4  0E20               	movlw	32
 28915  0084A6  ECC6  F055         	call	_SetRFMode
 28916                           
 28917                           ;drv_mrf_miwi_89xa.c: 634: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 28918  0084AA  0E00               	movlw	0
 28919  0084AC  0101               	movlb	1	; () banked
 28920  0084AE  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 28921  0084B0  0E56               	movlw	86
 28922  0084B2  6F02               	movwf	RegisterSet@setting& (0+255),b
 28923  0084B4  EC01  F05B         	call	_RegisterSet	;wreg free
 28924                           
 28925                           ;drv_mrf_miwi_89xa.c: 635: SetRFMode(0x40);
 28926  0084B8  0E40               	movlw	64
 28927  0084BA  ECC6  F055         	call	_SetRFMode
 28928                           
 28929                           ;drv_mrf_miwi_89xa.c: 638: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 28930  0084BE  0E1C               	movlw	28
 28931  0084C0  0101               	movlb	1	; () banked
 28932  0084C2  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 28933  0084C4  0E0F               	movlw	15
 28934  0084C6  6F02               	movwf	RegisterSet@setting& (0+255),b
 28935  0084C8  EC01  F05B         	call	_RegisterSet	;wreg free
 28936                           
 28937                           ;drv_mrf_miwi_89xa.c: 640: SetRFMode(0x60);
 28938  0084CC  0E60               	movlw	96
 28939  0084CE  ECC6  F055         	call	_SetRFMode
 28940                           
 28941                           ;drv_mrf_miwi_89xa.c: 643: INTCONbits.INT0IF = 0;
 28942  0084D2  92F2               	bcf	intcon,1,c	;volatile
 28943                           
 28944                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IE = 1;
 28945  0084D4  88F2               	bsf	intcon,4,c	;volatile
 28946                           
 28947                           ;drv_mrf_miwi_89xa.c: 646: INTCON3bits.INT1IF = 0;
 28948  0084D6  90F0               	bcf	intcon3,0,c	;volatile
 28949                           
 28950                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IE = 1;
 28951  0084D8  86F0               	bsf	intcon3,3,c	;volatile
 28952  0084DA  0012               	return	
 28953  0084DC                     __end_of_MiMAC_Init:
 28954                           	opt stack 0
 28955                           tblptru	equ	0xFF8
 28956                           tblptrh	equ	0xFF7
 28957                           tblptrl	equ	0xFF6
 28958                           tablat	equ	0xFF5
 28959                           prodh	equ	0xFF4
 28960                           prodl	equ	0xFF3
 28961                           intcon	equ	0xFF2
 28962                           intcon2	equ	0xFF1
 28963                           intcon3	equ	0xFF0
 28964                           indf0	equ	0xFEF
 28965                           postinc0	equ	0xFEE
 28966                           plusw0	equ	0xFEB
 28967                           fsr0h	equ	0xFEA
 28968                           fsr0l	equ	0xFE9
 28969                           wreg	equ	0xFE8
 28970                           indf1	equ	0xFE7
 28971                           postinc1	equ	0xFE6
 28972                           postdec1	equ	0xFE5
 28973                           plusw1	equ	0xFE3
 28974                           fsr1h	equ	0xFE2
 28975                           fsr1l	equ	0xFE1
 28976                           indf2	equ	0xFDF
 28977                           postinc2	equ	0xFDE
 28978                           postdec2	equ	0xFDD
 28979                           plusw2	equ	0xFDB
 28980                           fsr2h	equ	0xFDA
 28981                           fsr2l	equ	0xFD9
 28982                           status	equ	0xFD8
 28983                           
 28984 ;; *************** function _DELAY_ms *****************
 28985 ;; Defined at:
 28986 ;;		line 108 in file "src/18F27J53/delay.c"
 28987 ;; Parameters:    Size  Location     Type
 28988 ;;  ms              2   12[BANK1 ] unsigned int 
 28989 ;; Auto vars:     Size  Location     Type
 28990 ;;  cyclesRequir    4   14[BANK1 ] long 
 28991 ;; Return value:  Size  Location     Type
 28992 ;;		None               void
 28993 ;; Registers used:
 28994 ;;		wreg, status,2, status,0, cstack
 28995 ;; Tracked objects:
 28996 ;;		On entry : 0/0
 28997 ;;		On exit  : 0/0
 28998 ;;		Unchanged: 0/0
 28999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29000 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29001 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29003 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29004 ;;Total ram usage:        6 bytes
 29005 ;; Hardware stack levels used:    1
 29006 ;; Hardware stack levels required when called:   17
 29007 ;; This function calls:
 29008 ;;		___lmul
 29009 ;; This function is called by:
 29010 ;;		_MiMAC_Init
 29011 ;;		_MiMAC_PowerState
 29012 ;; This function uses a non-reentrant model
 29013 ;;
 29014                           
 29015                           	psect	text75
 29016  00A868                     __ptext75:
 29017                           	opt stack 0
 29018  00A868                     _DELAY_ms:
 29019                           	opt stack 11
 29020                           
 29021                           ;delay.c: 110: int32_t cyclesRequiredForEntireDelay = 0;
 29022                           
 29023                           ;incstack = 0
 29024  00A868  0E00               	movlw	0
 29025  00A86A  0101               	movlb	1	; () banked
 29026  00A86C  6F0E               	movwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),b
 29027  00A86E  0E00               	movlw	0
 29028  00A870  6F0F               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),b
 29029  00A872  0E00               	movlw	0
 29030  00A874  6F10               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),b
 29031  00A876  0E00               	movlw	0
 29032  00A878  6F11               	movwf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),b
 29033                           
 29034                           ; BSR set to: 1
 29035                           ;delay.c: 113: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 29036  00A87A  C10C  F100         	movff	DELAY_ms@ms,___lmul@multiplier
 29037  00A87E  C10D  F101         	movff	DELAY_ms@ms+1,___lmul@multiplier+1
 29038  00A882  0101               	movlb	1	; () banked
 29039  00A884  6B02               	clrf	(___lmul@multiplier+2)& (0+255),b
 29040  00A886  6B03               	clrf	(___lmul@multiplier+3)& (0+255),b
 29041  00A888  0EA0               	movlw	160
 29042  00A88A  0101               	movlb	1	; () banked
 29043  00A88C  6F04               	movwf	___lmul@multiplicand& (0+255),b
 29044  00A88E  0E0F               	movlw	15
 29045  00A890  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29046  00A892  0E00               	movlw	0
 29047  00A894  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29048  00A896  0E00               	movlw	0
 29049  00A898  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29050  00A89A  EC40  F058         	call	___lmul	;wreg free
 29051  00A89E  C100  F10E         	movff	?___lmul,DELAY_ms@cyclesRequiredForEntireDelay
 29052  00A8A2  C101  F10F         	movff	?___lmul+1,DELAY_ms@cyclesRequiredForEntireDelay+1
 29053  00A8A6  C102  F110         	movff	?___lmul+2,DELAY_ms@cyclesRequiredForEntireDelay+2
 29054  00A8AA  C103  F111         	movff	?___lmul+3,DELAY_ms@cyclesRequiredForEntireDelay+3
 29055                           
 29056                           ;delay.c: 117: cyclesRequiredForEntireDelay -= (148 + 22);
 29057  00A8AE  0E56               	movlw	86
 29058  00A8B0  0101               	movlb	1	; () banked
 29059  00A8B2  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 29060  00A8B4  0EFF               	movlw	255
 29061  00A8B6  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 29062  00A8B8  0EFF               	movlw	255
 29063  00A8BA  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 29064  00A8BC  0EFF               	movlw	255
 29065  00A8BE  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 29066                           
 29067                           ; BSR set to: 1
 29068                           ;delay.c: 119: if (cyclesRequiredForEntireDelay <= (170+25))
 29069  00A8C0  0101               	movlb	1	; () banked
 29070  00A8C2  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 29071  00A8C4  0012               	return	
 29072  00A8C6  0101               	movlb	1	; () banked
 29073  00A8C8  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 29074  00A8CA  0101               	movlb	1	; () banked
 29075  00A8CC  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 29076  00A8CE  0101               	movlb	1	; () banked
 29077  00A8D0  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 29078  00A8D2  E110               	bnz	l18
 29079  00A8D4  0EC4               	movlw	196
 29080  00A8D6  0101               	movlb	1	; () banked
 29081  00A8D8  5D0E               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 29082  00A8DA  A0D8               	btfss	status,0,c
 29083  00A8DC  0012               	return	
 29084  00A8DE  D00A               	goto	l18
 29085  00A8E0                     l19:
 29086                           
 29087                           ; BSR set to: 1
 29088                           ;delay.c: 126: {
 29089                           ;delay.c: 127: __nop();
 29090  00A8E0  F000               	nop	
 29091                           
 29092                           ;delay.c: 128: cyclesRequiredForEntireDelay -= 39;
 29093  00A8E2  0ED9               	movlw	217
 29094  00A8E4  0101               	movlb	1	; () banked
 29095  00A8E6  270E               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 29096  00A8E8  0EFF               	movlw	255
 29097  00A8EA  230F               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 29098  00A8EC  0EFF               	movlw	255
 29099  00A8EE  2310               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 29100  00A8F0  0EFF               	movlw	255
 29101  00A8F2  2311               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 29102  00A8F4                     l18:
 29103                           
 29104                           ; BSR set to: 1
 29105  00A8F4  0101               	movlb	1	; () banked
 29106  00A8F6  BF11               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 29107  00A8F8  0012               	return	
 29108  00A8FA  0101               	movlb	1	; () banked
 29109  00A8FC  5111               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 29110  00A8FE  0101               	movlb	1	; () banked
 29111  00A900  1110               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 29112  00A902  0101               	movlb	1	; () banked
 29113  00A904  110F               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 29114  00A906  E1EC               	bnz	l19
 29115  00A908  0101               	movlb	1	; () banked
 29116  00A90A  050E               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 29117  00A90C  A0D8               	btfss	status,0,c
 29118  00A90E  0012               	return	
 29119  00A910  D7E7               	goto	l19
 29120  00A912                     __end_of_DELAY_ms:
 29121                           	opt stack 0
 29122                           tblptru	equ	0xFF8
 29123                           tblptrh	equ	0xFF7
 29124                           tblptrl	equ	0xFF6
 29125                           tablat	equ	0xFF5
 29126                           prodh	equ	0xFF4
 29127                           prodl	equ	0xFF3
 29128                           intcon	equ	0xFF2
 29129                           intcon2	equ	0xFF1
 29130                           intcon3	equ	0xFF0
 29131                           indf0	equ	0xFEF
 29132                           postinc0	equ	0xFEE
 29133                           plusw0	equ	0xFEB
 29134                           fsr0h	equ	0xFEA
 29135                           fsr0l	equ	0xFE9
 29136                           wreg	equ	0xFE8
 29137                           indf1	equ	0xFE7
 29138                           postinc1	equ	0xFE6
 29139                           postdec1	equ	0xFE5
 29140                           plusw1	equ	0xFE3
 29141                           fsr1h	equ	0xFE2
 29142                           fsr1l	equ	0xFE1
 29143                           indf2	equ	0xFDF
 29144                           postinc2	equ	0xFDE
 29145                           postdec2	equ	0xFDD
 29146                           plusw2	equ	0xFDB
 29147                           fsr2h	equ	0xFDA
 29148                           fsr2l	equ	0xFD9
 29149                           status	equ	0xFD8
 29150                           
 29151 ;; *************** function ___lmul *****************
 29152 ;; Defined at:
 29153 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 29154 ;; Parameters:    Size  Location     Type
 29155 ;;  multiplier      4    0[BANK1 ] unsigned long 
 29156 ;;  multiplicand    4    4[BANK1 ] unsigned long 
 29157 ;; Auto vars:     Size  Location     Type
 29158 ;;  product         4    8[BANK1 ] unsigned long 
 29159 ;; Return value:  Size  Location     Type
 29160 ;;                  4    0[BANK1 ] unsigned long 
 29161 ;; Registers used:
 29162 ;;		wreg, status,2, status,0
 29163 ;; Tracked objects:
 29164 ;;		On entry : 0/0
 29165 ;;		On exit  : 0/0
 29166 ;;		Unchanged: 0/0
 29167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29168 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29169 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29171 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29172 ;;Total ram usage:       12 bytes
 29173 ;; Hardware stack levels used:    1
 29174 ;; Hardware stack levels required when called:   16
 29175 ;; This function calls:
 29176 ;;		Nothing
 29177 ;; This function is called by:
 29178 ;;		_DELAY_ms
 29179 ;;		_DELAY_10us
 29180 ;; This function uses a non-reentrant model
 29181 ;;
 29182                           
 29183                           	psect	text76
 29184  00B080                     __ptext76:
 29185                           	opt stack 0
 29186  00B080                     ___lmul:
 29187                           	opt stack 11
 29188                           
 29189                           ; BSR set to: 1
 29190                           ;incstack = 0
 29191  00B080  0E00               	movlw	0
 29192  00B082  0101               	movlb	1	; () banked
 29193  00B084  6F08               	movwf	___lmul@product& (0+255),b
 29194  00B086  0E00               	movlw	0
 29195  00B088  6F09               	movwf	(___lmul@product+1)& (0+255),b
 29196  00B08A  0E00               	movlw	0
 29197  00B08C  6F0A               	movwf	(___lmul@product+2)& (0+255),b
 29198  00B08E  0E00               	movlw	0
 29199  00B090  6F0B               	movwf	(___lmul@product+3)& (0+255),b
 29200  00B092                     l17788:
 29201                           
 29202                           ; BSR set to: 1
 29203  00B092  0101               	movlb	1	; () banked
 29204  00B094  A100               	btfss	___lmul@multiplier& (0+255),0,b
 29205  00B096  D010               	goto	l17792
 29206                           
 29207                           ; BSR set to: 1
 29208  00B098  0101               	movlb	1	; () banked
 29209  00B09A  5104               	movf	___lmul@multiplicand& (0+255),w,b
 29210  00B09C  0101               	movlb	1	; () banked
 29211  00B09E  2708               	addwf	___lmul@product& (0+255),f,b
 29212  00B0A0  0101               	movlb	1	; () banked
 29213  00B0A2  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29214  00B0A4  0101               	movlb	1	; () banked
 29215  00B0A6  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
 29216  00B0A8  0101               	movlb	1	; () banked
 29217  00B0AA  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29218  00B0AC  0101               	movlb	1	; () banked
 29219  00B0AE  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
 29220  00B0B0  0101               	movlb	1	; () banked
 29221  00B0B2  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29222  00B0B4  0101               	movlb	1	; () banked
 29223  00B0B6  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
 29224  00B0B8                     l17792:
 29225                           
 29226                           ; BSR set to: 1
 29227  00B0B8  0101               	movlb	1	; () banked
 29228  00B0BA  90D8               	bcf	status,0,c
 29229  00B0BC  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
 29230  00B0BE  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29231  00B0C0  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29232  00B0C2  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29233                           
 29234                           ; BSR set to: 1
 29235  00B0C4  0101               	movlb	1	; () banked
 29236  00B0C6  90D8               	bcf	status,0,c
 29237  00B0C8  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29238  00B0CA  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29239  00B0CC  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29240  00B0CE  3300               	rrcf	___lmul@multiplier& (0+255),f,b
 29241  00B0D0  0101               	movlb	1	; () banked
 29242  00B0D2  5100               	movf	___lmul@multiplier& (0+255),w,b
 29243  00B0D4  0101               	movlb	1	; () banked
 29244  00B0D6  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29245  00B0D8  0101               	movlb	1	; () banked
 29246  00B0DA  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29247  00B0DC  0101               	movlb	1	; () banked
 29248  00B0DE  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29249  00B0E0  A4D8               	btfss	status,2,c
 29250  00B0E2  D7D7               	goto	l17788
 29251                           
 29252                           ; BSR set to: 1
 29253  00B0E4  C108  F100         	movff	___lmul@product,?___lmul
 29254  00B0E8  C109  F101         	movff	___lmul@product+1,?___lmul+1
 29255  00B0EC  C10A  F102         	movff	___lmul@product+2,?___lmul+2
 29256  00B0F0  C10B  F103         	movff	___lmul@product+3,?___lmul+3
 29257                           
 29258                           ; BSR set to: 1
 29259  00B0F4  0012               	return		;funcret
 29260  00B0F6                     __end_of___lmul:
 29261                           	opt stack 0
 29262                           tblptru	equ	0xFF8
 29263                           tblptrh	equ	0xFF7
 29264                           tblptrl	equ	0xFF6
 29265                           tablat	equ	0xFF5
 29266                           prodh	equ	0xFF4
 29267                           prodl	equ	0xFF3
 29268                           intcon	equ	0xFF2
 29269                           intcon2	equ	0xFF1
 29270                           intcon3	equ	0xFF0
 29271                           indf0	equ	0xFEF
 29272                           postinc0	equ	0xFEE
 29273                           plusw0	equ	0xFEB
 29274                           fsr0h	equ	0xFEA
 29275                           fsr0l	equ	0xFE9
 29276                           wreg	equ	0xFE8
 29277                           indf1	equ	0xFE7
 29278                           postinc1	equ	0xFE6
 29279                           postdec1	equ	0xFE5
 29280                           plusw1	equ	0xFE3
 29281                           fsr1h	equ	0xFE2
 29282                           fsr1l	equ	0xFE1
 29283                           indf2	equ	0xFDF
 29284                           postinc2	equ	0xFDE
 29285                           postdec2	equ	0xFDD
 29286                           plusw2	equ	0xFDB
 29287                           fsr2h	equ	0xFDA
 29288                           fsr2l	equ	0xFD9
 29289                           status	equ	0xFD8
 29290                           
 29291 ;; *************** function _MiApp_SetChannel *****************
 29292 ;; Defined at:
 29293 ;;		line 3868 in file "src/miwi/miwi_mesh.c"
 29294 ;; Parameters:    Size  Location     Type
 29295 ;;  channel         1    wreg     unsigned char 
 29296 ;; Auto vars:     Size  Location     Type
 29297 ;;  channel         1   10[BANK1 ] unsigned char 
 29298 ;; Return value:  Size  Location     Type
 29299 ;;                  1    wreg      unsigned char 
 29300 ;; Registers used:
 29301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29302 ;; Tracked objects:
 29303 ;;		On entry : 0/0
 29304 ;;		On exit  : 0/0
 29305 ;;		Unchanged: 0/0
 29306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29308 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29310 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29311 ;;Total ram usage:        1 bytes
 29312 ;; Hardware stack levels used:    1
 29313 ;; Hardware stack levels required when called:   20
 29314 ;; This function calls:
 29315 ;;		_MiMAC_SetChannel
 29316 ;; This function is called by:
 29317 ;;		_MiApp_ProtocolInit
 29318 ;;		_MiApp_StartConnection
 29319 ;;		_MiApp_NoiseDetection
 29320 ;;		_main
 29321 ;;		_MiApp_SearchConnection
 29322 ;;		_MiApp_EstablishConnection
 29323 ;; This function uses a non-reentrant model
 29324 ;;
 29325                           
 29326                           	psect	text77
 29327  00BAD0                     __ptext77:
 29328                           	opt stack 0
 29329  00BAD0                     _MiApp_SetChannel:
 29330                           	opt stack 9
 29331                           
 29332                           ; BSR set to: 1
 29333                           ;incstack = 0
 29334                           ;MiApp_SetChannel@channel stored from wreg
 29335  00BAD0  0101               	movlb	1	; () banked
 29336  00BAD2  6F0A               	movwf	MiApp_SetChannel@channel& (0+255),b
 29337                           
 29338                           ;miwi_mesh.c: 3870: if( MiMAC_SetChannel(channel, 0) )
 29339  00BAD4  0E00               	movlw	0
 29340  00BAD6  0101               	movlb	1	; () banked
 29341  00BAD8  6F07               	movwf	MiMAC_SetChannel@offsetFreq& (0+255),b
 29342  00BADA  0101               	movlb	1	; () banked
 29343  00BADC  510A               	movf	MiApp_SetChannel@channel& (0+255),w,b
 29344  00BADE  EC12  F052         	call	_MiMAC_SetChannel
 29345  00BAE2  0900               	iorlw	0
 29346  00BAE4  B4D8               	btfsc	status,2,c
 29347  00BAE6  D004               	goto	l18738
 29348                           
 29349                           ;miwi_mesh.c: 3871: {
 29350                           ;miwi_mesh.c: 3872: currentChannel = channel;
 29351  00BAE8  C10A  F1F6         	movff	MiApp_SetChannel@channel,_currentChannel
 29352                           
 29353                           ;miwi_mesh.c: 3876: return 1;
 29354  00BAEC  0E01               	movlw	1
 29355  00BAEE  0012               	return	
 29356  00BAF0                     l18738:
 29357                           
 29358                           ;miwi_mesh.c: 3877: }
 29359                           ;miwi_mesh.c: 3878: return 0;
 29360  00BAF0  0E00               	movlw	0
 29361  00BAF2  0012               	return	
 29362  00BAF4                     __end_of_MiApp_SetChannel:
 29363                           	opt stack 0
 29364                           tblptru	equ	0xFF8
 29365                           tblptrh	equ	0xFF7
 29366                           tblptrl	equ	0xFF6
 29367                           tablat	equ	0xFF5
 29368                           prodh	equ	0xFF4
 29369                           prodl	equ	0xFF3
 29370                           intcon	equ	0xFF2
 29371                           intcon2	equ	0xFF1
 29372                           intcon3	equ	0xFF0
 29373                           indf0	equ	0xFEF
 29374                           postinc0	equ	0xFEE
 29375                           plusw0	equ	0xFEB
 29376                           fsr0h	equ	0xFEA
 29377                           fsr0l	equ	0xFE9
 29378                           wreg	equ	0xFE8
 29379                           indf1	equ	0xFE7
 29380                           postinc1	equ	0xFE6
 29381                           postdec1	equ	0xFE5
 29382                           plusw1	equ	0xFE3
 29383                           fsr1h	equ	0xFE2
 29384                           fsr1l	equ	0xFE1
 29385                           indf2	equ	0xFDF
 29386                           postinc2	equ	0xFDE
 29387                           postdec2	equ	0xFDD
 29388                           plusw2	equ	0xFDB
 29389                           fsr2h	equ	0xFDA
 29390                           fsr2l	equ	0xFD9
 29391                           status	equ	0xFD8
 29392                           
 29393 ;; *************** function _MiMAC_SetChannel *****************
 29394 ;; Defined at:
 29395 ;;		line 483 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29396 ;; Parameters:    Size  Location     Type
 29397 ;;  channel         1    wreg     unsigned char 
 29398 ;;  offsetFreq      1    7[BANK1 ] unsigned char 
 29399 ;; Auto vars:     Size  Location     Type
 29400 ;;  channel         1    9[BANK1 ] unsigned char 
 29401 ;; Return value:  Size  Location     Type
 29402 ;;                  1    wreg      unsigned char 
 29403 ;; Registers used:
 29404 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29405 ;; Tracked objects:
 29406 ;;		On entry : 0/0
 29407 ;;		On exit  : 0/0
 29408 ;;		Unchanged: 0/0
 29409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29410 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29411 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29412 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29413 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29414 ;;Total ram usage:        3 bytes
 29415 ;; Hardware stack levels used:    1
 29416 ;; Hardware stack levels required when called:   19
 29417 ;; This function calls:
 29418 ;;		_RegisterSet
 29419 ;;		_SetRFMode
 29420 ;; This function is called by:
 29421 ;;		_MiApp_SetChannel
 29422 ;; This function uses a non-reentrant model
 29423 ;;
 29424                           
 29425                           	psect	text78
 29426  00A424                     __ptext78:
 29427                           	opt stack 0
 29428  00A424                     _MiMAC_SetChannel:
 29429                           	opt stack 9
 29430                           
 29431                           ;incstack = 0
 29432                           ;MiMAC_SetChannel@channel stored from wreg
 29433  00A424  0101               	movlb	1	; () banked
 29434  00A426  6F09               	movwf	MiMAC_SetChannel@channel& (0+255),b
 29435                           
 29436                           ;drv_mrf_miwi_89xa.c: 485: if( channel >= 32 )
 29437  00A428  0E1F               	movlw	31
 29438  00A42A  0101               	movlb	1	; () banked
 29439  00A42C  6509               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 29440  00A42E  D002               	goto	l17548
 29441                           
 29442                           ; BSR set to: 1
 29443                           ;drv_mrf_miwi_89xa.c: 486: {
 29444                           ;drv_mrf_miwi_89xa.c: 487: return 0;
 29445  00A430  0E00               	movlw	0
 29446                           
 29447                           ; BSR set to: 1
 29448  00A432  0012               	return	
 29449  00A434                     l17548:
 29450                           
 29451                           ; BSR set to: 1
 29452                           ;drv_mrf_miwi_89xa.c: 488: }
 29453                           ;drv_mrf_miwi_89xa.c: 491: RegisterSet(0x0C00 | 100);
 29454  00A434  0E0C               	movlw	12
 29455  00A436  0101               	movlb	1	; () banked
 29456  00A438  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29457  00A43A  0E64               	movlw	100
 29458  00A43C  6F02               	movwf	RegisterSet@setting& (0+255),b
 29459  00A43E  EC01  F05B         	call	_RegisterSet	;wreg free
 29460                           
 29461                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0E00 | PVALUE[channel]);
 29462  00A442  0101               	movlb	1	; () banked
 29463  00A444  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 29464  00A446  0D01               	mullw	1
 29465  00A448  0E71               	movlw	low _PVALUE
 29466  00A44A  24F3               	addwf	prodl,w,c
 29467  00A44C  6EF6               	movwf	tblptrl,c
 29468  00A44E  0E20               	movlw	high _PVALUE
 29469  00A450  20F4               	addwfc	prodh,w,c
 29470  00A452  6EF7               	movwf	tblptrh,c
 29471  00A454                     	if	1	;There are 3 active tblptr bytes
 29472  00A454  6AF8               	clrf	tblptru,c
 29473  00A456  0E00               	movlw	low (__mediumconst shr (0+16))
 29474  00A458  22F8               	addwfc	tblptru,f,c
 29475  00A45A                     	endif
 29476  00A45A  0008               	tblrd		*
 29477  00A45C  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 29478  00A460  0E00               	movlw	0
 29479  00A462  0101               	movlb	1	; () banked
 29480  00A464  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29481  00A466  0101               	movlb	1	; () banked
 29482  00A468  6F02               	movwf	RegisterSet@setting& (0+255),b
 29483  00A46A  0E0E               	movlw	14
 29484  00A46C  0101               	movlb	1	; () banked
 29485  00A46E  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29486  00A470  EC01  F05B         	call	_RegisterSet	;wreg free
 29487                           
 29488                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x1000 | SVALUE[channel]);
 29489  00A474  0101               	movlb	1	; () banked
 29490  00A476  5109               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 29491  00A478  0D01               	mullw	1
 29492  00A47A  0E91               	movlw	low _SVALUE
 29493  00A47C  24F3               	addwf	prodl,w,c
 29494  00A47E  6EF6               	movwf	tblptrl,c
 29495  00A480  0E20               	movlw	high _SVALUE
 29496  00A482  20F4               	addwfc	prodh,w,c
 29497  00A484  6EF7               	movwf	tblptrh,c
 29498  00A486                     	if	1	;There are 3 active tblptr bytes
 29499  00A486  6AF8               	clrf	tblptru,c
 29500  00A488  0E00               	movlw	low (__mediumconst shr (0+16))
 29501  00A48A  22F8               	addwfc	tblptru,f,c
 29502  00A48C                     	endif
 29503  00A48C  0008               	tblrd		*
 29504  00A48E  CFF5 F108          	movff	tablat,??_MiMAC_SetChannel
 29505  00A492  0E00               	movlw	0
 29506  00A494  0101               	movlb	1	; () banked
 29507  00A496  1108               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29508  00A498  0101               	movlb	1	; () banked
 29509  00A49A  6F02               	movwf	RegisterSet@setting& (0+255),b
 29510  00A49C  0E10               	movlw	16
 29511  00A49E  0101               	movlb	1	; () banked
 29512  00A4A0  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29513  00A4A2  EC01  F05B         	call	_RegisterSet	;wreg free
 29514                           
 29515                           ;drv_mrf_miwi_89xa.c: 494: SetRFMode(0x20);
 29516  00A4A6  0E20               	movlw	32
 29517  00A4A8  ECC6  F055         	call	_SetRFMode
 29518                           
 29519                           ;drv_mrf_miwi_89xa.c: 495: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29520  00A4AC  0E00               	movlw	0
 29521  00A4AE  0101               	movlb	1	; () banked
 29522  00A4B0  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29523  00A4B2  0E56               	movlw	86
 29524  00A4B4  6F02               	movwf	RegisterSet@setting& (0+255),b
 29525  00A4B6  EC01  F05B         	call	_RegisterSet	;wreg free
 29526                           
 29527                           ;drv_mrf_miwi_89xa.c: 496: SetRFMode(0x40);
 29528  00A4BA  0E40               	movlw	64
 29529  00A4BC  ECC6  F055         	call	_SetRFMode
 29530                           
 29531                           ;drv_mrf_miwi_89xa.c: 497: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 29532  00A4C0  0E1C               	movlw	28
 29533  00A4C2  0101               	movlb	1	; () banked
 29534  00A4C4  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29535  00A4C6  0E0F               	movlw	15
 29536  00A4C8  6F02               	movwf	RegisterSet@setting& (0+255),b
 29537  00A4CA  EC01  F05B         	call	_RegisterSet	;wreg free
 29538                           
 29539                           ;drv_mrf_miwi_89xa.c: 498: SetRFMode(0x20);
 29540  00A4CE  0E20               	movlw	32
 29541  00A4D0  ECC6  F055         	call	_SetRFMode
 29542                           
 29543                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x60);
 29544  00A4D4  0E60               	movlw	96
 29545  00A4D6  ECC6  F055         	call	_SetRFMode
 29546                           
 29547                           ;drv_mrf_miwi_89xa.c: 501: return 1;
 29548  00A4DA  0E01               	movlw	1
 29549  00A4DC  0012               	return	
 29550  00A4DE                     __end_of_MiMAC_SetChannel:
 29551                           	opt stack 0
 29552                           tblptru	equ	0xFF8
 29553                           tblptrh	equ	0xFF7
 29554                           tblptrl	equ	0xFF6
 29555                           tablat	equ	0xFF5
 29556                           prodh	equ	0xFF4
 29557                           prodl	equ	0xFF3
 29558                           intcon	equ	0xFF2
 29559                           intcon2	equ	0xFF1
 29560                           intcon3	equ	0xFF0
 29561                           indf0	equ	0xFEF
 29562                           postinc0	equ	0xFEE
 29563                           plusw0	equ	0xFEB
 29564                           fsr0h	equ	0xFEA
 29565                           fsr0l	equ	0xFE9
 29566                           wreg	equ	0xFE8
 29567                           indf1	equ	0xFE7
 29568                           postinc1	equ	0xFE6
 29569                           postdec1	equ	0xFE5
 29570                           plusw1	equ	0xFE3
 29571                           fsr1h	equ	0xFE2
 29572                           fsr1l	equ	0xFE1
 29573                           indf2	equ	0xFDF
 29574                           postinc2	equ	0xFDE
 29575                           postdec2	equ	0xFDD
 29576                           plusw2	equ	0xFDB
 29577                           fsr2h	equ	0xFDA
 29578                           fsr2l	equ	0xFD9
 29579                           status	equ	0xFD8
 29580                           
 29581 ;; *************** function _SetRFMode *****************
 29582 ;; Defined at:
 29583 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29584 ;; Parameters:    Size  Location     Type
 29585 ;;  mode            1    wreg     unsigned char 
 29586 ;; Auto vars:     Size  Location     Type
 29587 ;;  mode            1    6[BANK1 ] unsigned char 
 29588 ;; Return value:  Size  Location     Type
 29589 ;;		None               void
 29590 ;; Registers used:
 29591 ;;		wreg, status,2, status,0, cstack
 29592 ;; Tracked objects:
 29593 ;;		On entry : 0/0
 29594 ;;		On exit  : 0/0
 29595 ;;		Unchanged: 0/0
 29596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29598 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29600 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29601 ;;Total ram usage:        1 bytes
 29602 ;; Hardware stack levels used:    1
 29603 ;; Hardware stack levels required when called:   18
 29604 ;; This function calls:
 29605 ;;		_RegisterSet
 29606 ;; This function is called by:
 29607 ;;		_TxPacket
 29608 ;;		_MiMAC_SetChannel
 29609 ;;		_MiMAC_Init
 29610 ;;		_MiMAC_PowerState
 29611 ;; This function uses a non-reentrant model
 29612 ;;
 29613                           
 29614                           	psect	text79
 29615  00AB8C                     __ptext79:
 29616                           	opt stack 0
 29617  00AB8C                     _SetRFMode:
 29618                           	opt stack 6
 29619                           
 29620                           ;incstack = 0
 29621                           ;SetRFMode@mode stored from wreg
 29622  00AB8C  0101               	movlb	1	; () banked
 29623  00AB8E  6F06               	movwf	SetRFMode@mode& (0+255),b
 29624                           
 29625                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 29626  00AB90  D037               	goto	l16792
 29627  00AB92                     l16770:
 29628                           
 29629                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 29630  00AB92  0E00               	movlw	0
 29631  00AB94  0101               	movlb	1	; () banked
 29632  00AB96  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29633  00AB98  0E96               	movlw	150
 29634  00AB9A  6F02               	movwf	RegisterSet@setting& (0+255),b
 29635  00AB9C  EC01  F05B         	call	_RegisterSet	;wreg free
 29636                           
 29637                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 29638  00ABA0  0E80               	movlw	128
 29639  00ABA2  0100               	movlb	0	; () banked
 29640  00ABA4  6F9B               	movwf	_RF_Mode& (0+255),b
 29641                           
 29642                           ;drv_mrf_miwi_89xa.c: 672: break;
 29643  00ABA6  0012               	return	
 29644  00ABA8                     l16774:
 29645                           
 29646                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 29647  00ABA8  0E00               	movlw	0
 29648  00ABAA  0101               	movlb	1	; () banked
 29649  00ABAC  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29650  00ABAE  0E76               	movlw	118
 29651  00ABB0  6F02               	movwf	RegisterSet@setting& (0+255),b
 29652  00ABB2  EC01  F05B         	call	_RegisterSet	;wreg free
 29653                           
 29654                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 29655  00ABB6  0E60               	movlw	96
 29656  00ABB8  0100               	movlb	0	; () banked
 29657  00ABBA  6F9B               	movwf	_RF_Mode& (0+255),b
 29658                           
 29659                           ;drv_mrf_miwi_89xa.c: 676: break;
 29660  00ABBC  0012               	return	
 29661  00ABBE                     l16778:
 29662                           
 29663                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 29664  00ABBE  0E00               	movlw	0
 29665  00ABC0  0101               	movlb	1	; () banked
 29666  00ABC2  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29667  00ABC4  0E56               	movlw	86
 29668  00ABC6  6F02               	movwf	RegisterSet@setting& (0+255),b
 29669  00ABC8  EC01  F05B         	call	_RegisterSet	;wreg free
 29670                           
 29671                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 29672  00ABCC  0E40               	movlw	64
 29673  00ABCE  0100               	movlb	0	; () banked
 29674  00ABD0  6F9B               	movwf	_RF_Mode& (0+255),b
 29675                           
 29676                           ;drv_mrf_miwi_89xa.c: 680: break;
 29677  00ABD2  0012               	return	
 29678  00ABD4                     l16782:
 29679                           
 29680                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 29681  00ABD4  0E00               	movlw	0
 29682  00ABD6  0101               	movlb	1	; () banked
 29683  00ABD8  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29684  00ABDA  0E36               	movlw	54
 29685  00ABDC  6F02               	movwf	RegisterSet@setting& (0+255),b
 29686  00ABDE  EC01  F05B         	call	_RegisterSet	;wreg free
 29687                           
 29688                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 29689  00ABE2  0E20               	movlw	32
 29690  00ABE4  0100               	movlb	0	; () banked
 29691  00ABE6  6F9B               	movwf	_RF_Mode& (0+255),b
 29692                           
 29693                           ;drv_mrf_miwi_89xa.c: 684: break;
 29694  00ABE8  0012               	return	
 29695  00ABEA                     l16786:
 29696                           
 29697                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 29698  00ABEA  0E00               	movlw	0
 29699  00ABEC  0101               	movlb	1	; () banked
 29700  00ABEE  6F03               	movwf	(RegisterSet@setting+1)& (0+255),b
 29701  00ABF0  0E16               	movlw	22
 29702  00ABF2  6F02               	movwf	RegisterSet@setting& (0+255),b
 29703  00ABF4  EC01  F05B         	call	_RegisterSet	;wreg free
 29704                           
 29705                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 29706  00ABF8  0E00               	movlw	0
 29707  00ABFA  0100               	movlb	0	; () banked
 29708  00ABFC  6F9B               	movwf	_RF_Mode& (0+255),b
 29709                           
 29710                           ; BSR set to: 0
 29711                           ;drv_mrf_miwi_89xa.c: 689: }
 29712                           
 29713                           ;drv_mrf_miwi_89xa.c: 688: break;
 29714  00ABFE  0012               	return	
 29715  00AC00                     l16792:
 29716  00AC00  0101               	movlb	1	; () banked
 29717  00AC02  5106               	movf	SetRFMode@mode& (0+255),w,b
 29718                           
 29719                           ; Switch size 1, requested type "space"
 29720                           ; Number of cases is 5, Range of values is 0 to 128
 29721                           ; switch strategies available:
 29722                           ; Name         Instructions Cycles
 29723                           ; simple_byte           16     9 (average)
 29724                           ;	Chosen strategy is simple_byte
 29725  00AC04  0A00               	xorlw	0	; case 0
 29726  00AC06  B4D8               	btfsc	status,2,c
 29727  00AC08  D7F0               	goto	l16786
 29728  00AC0A  0A20               	xorlw	32	; case 32
 29729  00AC0C  B4D8               	btfsc	status,2,c
 29730  00AC0E  D7E2               	goto	l16782
 29731  00AC10  0A60               	xorlw	96	; case 64
 29732  00AC12  B4D8               	btfsc	status,2,c
 29733  00AC14  D7D4               	goto	l16778
 29734  00AC16  0A20               	xorlw	32	; case 96
 29735  00AC18  B4D8               	btfsc	status,2,c
 29736  00AC1A  D7C6               	goto	l16774
 29737  00AC1C  0AE0               	xorlw	224	; case 128
 29738  00AC1E  A4D8               	btfss	status,2,c
 29739  00AC20  0012               	return	
 29740  00AC22  D7B7               	goto	l16770
 29741  00AC24                     __end_of_SetRFMode:
 29742                           	opt stack 0
 29743                           tblptru	equ	0xFF8
 29744                           tblptrh	equ	0xFF7
 29745                           tblptrl	equ	0xFF6
 29746                           tablat	equ	0xFF5
 29747                           prodh	equ	0xFF4
 29748                           prodl	equ	0xFF3
 29749                           intcon	equ	0xFF2
 29750                           intcon2	equ	0xFF1
 29751                           intcon3	equ	0xFF0
 29752                           indf0	equ	0xFEF
 29753                           postinc0	equ	0xFEE
 29754                           plusw0	equ	0xFEB
 29755                           fsr0h	equ	0xFEA
 29756                           fsr0l	equ	0xFE9
 29757                           wreg	equ	0xFE8
 29758                           indf1	equ	0xFE7
 29759                           postinc1	equ	0xFE6
 29760                           postdec1	equ	0xFE5
 29761                           plusw1	equ	0xFE3
 29762                           fsr1h	equ	0xFE2
 29763                           fsr1l	equ	0xFE1
 29764                           indf2	equ	0xFDF
 29765                           postinc2	equ	0xFDE
 29766                           postdec2	equ	0xFDD
 29767                           plusw2	equ	0xFDB
 29768                           fsr2h	equ	0xFDA
 29769                           fsr2l	equ	0xFD9
 29770                           status	equ	0xFD8
 29771                           
 29772 ;; *************** function _RegisterSet *****************
 29773 ;; Defined at:
 29774 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 29775 ;; Parameters:    Size  Location     Type
 29776 ;;  setting         2    2[BANK1 ] unsigned int 
 29777 ;; Auto vars:     Size  Location     Type
 29778 ;;  IRQ0select      1    5[BANK1 ] unsigned char 
 29779 ;;  IRQ1select      1    4[BANK1 ] unsigned char 
 29780 ;; Return value:  Size  Location     Type
 29781 ;;		None               void
 29782 ;; Registers used:
 29783 ;;		wreg, status,2, cstack
 29784 ;; Tracked objects:
 29785 ;;		On entry : 0/0
 29786 ;;		On exit  : 0/0
 29787 ;;		Unchanged: 0/0
 29788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29789 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29790 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29792 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29793 ;;Total ram usage:        4 bytes
 29794 ;; Hardware stack levels used:    1
 29795 ;; Hardware stack levels required when called:   17
 29796 ;; This function calls:
 29797 ;;		_SPIPut
 29798 ;; This function is called by:
 29799 ;;		_TxPacket
 29800 ;;		_MiMAC_SetChannel
 29801 ;;		_MiMAC_SetPower
 29802 ;;		_MiMAC_Init
 29803 ;;		_SetRFMode
 29804 ;; This function uses a non-reentrant model
 29805 ;;
 29806                           
 29807                           	psect	text80
 29808  00B602                     __ptext80:
 29809                           	opt stack 0
 29810  00B602                     _RegisterSet:
 29811                           	opt stack 11
 29812                           
 29813                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 29814                           
 29815                           ;incstack = 0
 29816  00B602  0E00               	movlw	0
 29817  00B604  B6F0               	btfsc	intcon3,3,c	;volatile
 29818  00B606  0E01               	movlw	1
 29819  00B608  0101               	movlb	1	; () banked
 29820  00B60A  6F04               	movwf	RegisterSet@IRQ1select& (0+255),b
 29821                           
 29822                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 29823  00B60C  0E00               	movlw	0
 29824  00B60E  B8F2               	btfsc	intcon,4,c	;volatile
 29825  00B610  0E01               	movlw	1
 29826  00B612  0101               	movlb	1	; () banked
 29827  00B614  6F05               	movwf	RegisterSet@IRQ0select& (0+255),b
 29828                           
 29829                           ; BSR set to: 1
 29830                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 29831  00B616  98F2               	bcf	intcon,4,c	;volatile
 29832                           
 29833                           ; BSR set to: 1
 29834                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 29835  00B618  96F0               	bcf	intcon3,3,c	;volatile
 29836                           
 29837                           ; BSR set to: 1
 29838                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 29839  00B61A  968A               	bcf	3978,3,c	;volatile
 29840                           
 29841                           ; BSR set to: 1
 29842                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 29843  00B61C  0101               	movlb	1	; () banked
 29844  00B61E  5103               	movf	(RegisterSet@setting+1)& (0+255),w,b
 29845  00B620  EC7A  F05D         	call	_SPIPut
 29846                           
 29847                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 29848  00B624  0101               	movlb	1	; () banked
 29849  00B626  5102               	movf	RegisterSet@setting& (0+255),w,b
 29850  00B628  EC7A  F05D         	call	_SPIPut
 29851                           
 29852                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 29853  00B62C  868A               	bsf	3978,3,c	;volatile
 29854                           
 29855                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 29856  00B62E  0101               	movlb	1	; () banked
 29857  00B630  B104               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 29858  00B632  D002               	bra	u17985
 29859  00B634  96F0               	bcf	intcon3,3,c	;volatile
 29860  00B636  D001               	bra	u17986
 29861  00B638                     u17985:
 29862  00B638  86F0               	bsf	intcon3,3,c	;volatile
 29863  00B63A                     u17986:
 29864                           
 29865                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 29866  00B63A  0101               	movlb	1	; () banked
 29867  00B63C  B105               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 29868  00B63E  D002               	bra	u17995
 29869  00B640  98F2               	bcf	intcon,4,c	;volatile
 29870  00B642  D001               	bra	u17996
 29871  00B644                     u17995:
 29872  00B644  88F2               	bsf	intcon,4,c	;volatile
 29873  00B646                     u17996:
 29874  00B646  0012               	return		;funcret
 29875  00B648                     __end_of_RegisterSet:
 29876                           	opt stack 0
 29877                           tblptru	equ	0xFF8
 29878                           tblptrh	equ	0xFF7
 29879                           tblptrl	equ	0xFF6
 29880                           tablat	equ	0xFF5
 29881                           prodh	equ	0xFF4
 29882                           prodl	equ	0xFF3
 29883                           intcon	equ	0xFF2
 29884                           intcon2	equ	0xFF1
 29885                           intcon3	equ	0xFF0
 29886                           indf0	equ	0xFEF
 29887                           postinc0	equ	0xFEE
 29888                           plusw0	equ	0xFEB
 29889                           fsr0h	equ	0xFEA
 29890                           fsr0l	equ	0xFE9
 29891                           wreg	equ	0xFE8
 29892                           indf1	equ	0xFE7
 29893                           postinc1	equ	0xFE6
 29894                           postdec1	equ	0xFE5
 29895                           plusw1	equ	0xFE3
 29896                           fsr1h	equ	0xFE2
 29897                           fsr1l	equ	0xFE1
 29898                           indf2	equ	0xFDF
 29899                           postinc2	equ	0xFDE
 29900                           postdec2	equ	0xFDD
 29901                           plusw2	equ	0xFDB
 29902                           fsr2h	equ	0xFDA
 29903                           fsr2l	equ	0xFD9
 29904                           status	equ	0xFD8
 29905                           
 29906 ;; *************** function _SPIPut *****************
 29907 ;; Defined at:
 29908 ;;		line 45 in file "src/18F27J53/spi.c"
 29909 ;; Parameters:    Size  Location     Type
 29910 ;;  v               1    wreg     unsigned char 
 29911 ;; Auto vars:     Size  Location     Type
 29912 ;;  v               1    1[BANK1 ] unsigned char 
 29913 ;;  i               1    0[BANK1 ] unsigned char 
 29914 ;; Return value:  Size  Location     Type
 29915 ;;		None               void
 29916 ;; Registers used:
 29917 ;;		wreg
 29918 ;; Tracked objects:
 29919 ;;		On entry : 0/0
 29920 ;;		On exit  : 0/0
 29921 ;;		Unchanged: 0/0
 29922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29924 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29926 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29927 ;;Total ram usage:        2 bytes
 29928 ;; Hardware stack levels used:    1
 29929 ;; Hardware stack levels required when called:   16
 29930 ;; This function calls:
 29931 ;;		Nothing
 29932 ;; This function is called by:
 29933 ;;		_SPIGet
 29934 ;;		_RegisterSet
 29935 ;;		_RegisterRead
 29936 ;;		_WriteFIFO
 29937 ;; This function uses a non-reentrant model
 29938 ;;
 29939                           
 29940                           	psect	text81
 29941  00BAF4                     __ptext81:
 29942                           	opt stack 0
 29943  00BAF4                     _SPIPut:
 29944                           	opt stack 11
 29945                           
 29946                           ;incstack = 0
 29947                           ;SPIPut@v stored from wreg
 29948  00BAF4  0101               	movlb	1	; () banked
 29949  00BAF6  6F01               	movwf	SPIPut@v& (0+255),b
 29950                           
 29951                           ;spi.c: 66: {
 29952                           ;spi.c: 68: uint8_t i;
 29953                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 29954  00BAF8  9EA4               	bcf	4004,7,c	;volatile
 29955                           
 29956                           ;spi.c: 72: i = SSP2BUF;
 29957  00BAFA  CF75 F100          	movff	3957,SPIPut@i	;volatile
 29958  00BAFE                     l29:
 29959                           
 29960                           ;spi.c: 75: {
 29961                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 29962  00BAFE  9E72               	bcf	3954,7,c	;volatile
 29963                           
 29964                           ;spi.c: 77: SSP2BUF = v;
 29965  00BB00  C101  FF75         	movff	SPIPut@v,3957	;volatile
 29966                           
 29967                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 29968  00BB04  BE72               	btfsc	3954,7,c	;volatile
 29969  00BB06  D7FB               	goto	l29
 29970  00BB08                     l31:
 29971  00BB08  AEA4               	btfss	4004,7,c	;volatile
 29972  00BB0A  D7FE               	goto	l31
 29973                           
 29974                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 29975  00BB0C  9EA4               	bcf	4004,7,c	;volatile
 29976  00BB0E  0012               	return		;funcret
 29977  00BB10                     __end_of_SPIPut:
 29978                           	opt stack 0
 29979                           tblptru	equ	0xFF8
 29980                           tblptrh	equ	0xFF7
 29981                           tblptrl	equ	0xFF6
 29982                           tablat	equ	0xFF5
 29983                           prodh	equ	0xFF4
 29984                           prodl	equ	0xFF3
 29985                           intcon	equ	0xFF2
 29986                           intcon2	equ	0xFF1
 29987                           intcon3	equ	0xFF0
 29988                           indf0	equ	0xFEF
 29989                           postinc0	equ	0xFEE
 29990                           plusw0	equ	0xFEB
 29991                           fsr0h	equ	0xFEA
 29992                           fsr0l	equ	0xFE9
 29993                           wreg	equ	0xFE8
 29994                           indf1	equ	0xFE7
 29995                           postinc1	equ	0xFE6
 29996                           postdec1	equ	0xFE5
 29997                           plusw1	equ	0xFE3
 29998                           fsr1h	equ	0xFE2
 29999                           fsr1l	equ	0xFE1
 30000                           indf2	equ	0xFDF
 30001                           postinc2	equ	0xFDE
 30002                           postdec2	equ	0xFDD
 30003                           plusw2	equ	0xFDB
 30004                           fsr2h	equ	0xFDA
 30005                           fsr2l	equ	0xFD9
 30006                           status	equ	0xFD8
 30007                           
 30008 ;; *************** function _InitSymbolTimer *****************
 30009 ;; Defined at:
 30010 ;;		line 59 in file "src/18F27J53/symbol.c"
 30011 ;; Parameters:    Size  Location     Type
 30012 ;;		None
 30013 ;; Auto vars:     Size  Location     Type
 30014 ;;		None
 30015 ;; Return value:  Size  Location     Type
 30016 ;;		None               void
 30017 ;; Registers used:
 30018 ;;		wreg, status,2
 30019 ;; Tracked objects:
 30020 ;;		On entry : 0/0
 30021 ;;		On exit  : 0/0
 30022 ;;		Unchanged: 0/0
 30023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30028 ;;Total ram usage:        0 bytes
 30029 ;; Hardware stack levels used:    1
 30030 ;; Hardware stack levels required when called:   16
 30031 ;; This function calls:
 30032 ;;		Nothing
 30033 ;; This function is called by:
 30034 ;;		_MiApp_ProtocolInit
 30035 ;; This function uses a non-reentrant model
 30036 ;;
 30037                           
 30038                           	psect	text82
 30039  00BB46                     __ptext82:
 30040                           	opt stack 0
 30041  00BB46                     _InitSymbolTimer:
 30042                           	opt stack 13
 30043                           
 30044                           ;symbol.c: 62: T1CON = 0b00110000;
 30045                           
 30046                           ;incstack = 0
 30047  00BB46  0E30               	movlw	48
 30048  00BB48  6ECD               	movwf	4045,c	;volatile
 30049                           
 30050                           ;symbol.c: 63: PIR1bits.TMR1IF = 0;
 30051  00BB4A  909E               	bcf	3998,0,c	;volatile
 30052                           
 30053                           ;symbol.c: 64: PIE1bits.TMR1IE = 1;
 30054  00BB4C  809D               	bsf	3997,0,c	;volatile
 30055                           
 30056                           ;symbol.c: 65: T1CONbits.TMR1ON = 1;
 30057  00BB4E  80CD               	bsf	4045,0,c	;volatile
 30058                           
 30059                           ;symbol.c: 75: timerExtension1 = 0;
 30060  00BB50  0E00               	movlw	0
 30061  00BB52  0100               	movlb	0	; () banked
 30062  00BB54  6FA1               	movwf	_timerExtension1& (0+255),b	;volatile
 30063                           
 30064                           ;symbol.c: 76: timerExtension2 = 0;
 30065  00BB56  0E00               	movlw	0
 30066  00BB58  0100               	movlb	0	; () banked
 30067  00BB5A  6FA2               	movwf	_timerExtension2& (0+255),b	;volatile
 30068                           
 30069                           ; BSR set to: 0
 30070  00BB5C  0012               	return		;funcret
 30071  00BB5E                     __end_of_InitSymbolTimer:
 30072                           	opt stack 0
 30073                           tblptru	equ	0xFF8
 30074                           tblptrh	equ	0xFF7
 30075                           tblptrl	equ	0xFF6
 30076                           tablat	equ	0xFF5
 30077                           prodh	equ	0xFF4
 30078                           prodl	equ	0xFF3
 30079                           intcon	equ	0xFF2
 30080                           intcon2	equ	0xFF1
 30081                           intcon3	equ	0xFF0
 30082                           indf0	equ	0xFEF
 30083                           postinc0	equ	0xFEE
 30084                           plusw0	equ	0xFEB
 30085                           fsr0h	equ	0xFEA
 30086                           fsr0l	equ	0xFE9
 30087                           wreg	equ	0xFE8
 30088                           indf1	equ	0xFE7
 30089                           postinc1	equ	0xFE6
 30090                           postdec1	equ	0xFE5
 30091                           plusw1	equ	0xFE3
 30092                           fsr1h	equ	0xFE2
 30093                           fsr1l	equ	0xFE1
 30094                           indf2	equ	0xFDF
 30095                           postinc2	equ	0xFDE
 30096                           postdec2	equ	0xFDD
 30097                           plusw2	equ	0xFDB
 30098                           fsr2h	equ	0xFDA
 30099                           fsr2l	equ	0xFD9
 30100                           status	equ	0xFD8
 30101                           
 30102 ;; *************** function _MiApp_ConnectionMode *****************
 30103 ;; Defined at:
 30104 ;;		line 3922 in file "src/miwi/miwi_mesh.c"
 30105 ;; Parameters:    Size  Location     Type
 30106 ;;  Mode            1    wreg     unsigned char 
 30107 ;; Auto vars:     Size  Location     Type
 30108 ;;  Mode            1    1[BANK1 ] unsigned char 
 30109 ;; Return value:  Size  Location     Type
 30110 ;;		None               void
 30111 ;; Registers used:
 30112 ;;		wreg, status,2, status,0
 30113 ;; Tracked objects:
 30114 ;;		On entry : 0/0
 30115 ;;		On exit  : 0/0
 30116 ;;		Unchanged: 0/0
 30117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30119 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30120 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30121 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30122 ;;Total ram usage:        2 bytes
 30123 ;; Hardware stack levels used:    1
 30124 ;; Hardware stack levels required when called:   16
 30125 ;; This function calls:
 30126 ;;		Nothing
 30127 ;; This function is called by:
 30128 ;;		_main
 30129 ;; This function uses a non-reentrant model
 30130 ;;
 30131                           
 30132                           	psect	text83
 30133  00BA00                     __ptext83:
 30134                           	opt stack 0
 30135  00BA00                     _MiApp_ConnectionMode:
 30136                           	opt stack 14
 30137                           
 30138                           ; BSR set to: 0
 30139                           ;incstack = 0
 30140                           ;MiApp_ConnectionMode@Mode stored from wreg
 30141  00BA00  0101               	movlb	1	; () banked
 30142  00BA02  6F01               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 30143                           
 30144                           ;miwi_mesh.c: 3924: if( Mode > 3 )
 30145  00BA04  0E03               	movlw	3
 30146  00BA06  0101               	movlb	1	; () banked
 30147  00BA08  6501               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 30148  00BA0A  D001               	goto	l940
 30149  00BA0C  0012               	return	
 30150  00BA0E                     l940:
 30151                           
 30152                           ; BSR set to: 1
 30153                           ;miwi_mesh.c: 3927: }
 30154                           ;miwi_mesh.c: 3928: ConnMode = Mode;
 30155  00BA0E  C101  F1BF         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 30156                           
 30157                           ; BSR set to: 1
 30158                           ;miwi_mesh.c: 3929: MiWiCapacityInfo.bits.ConnMode = ConnMode;
 30159  00BA12  C1BF  F100         	movff	_ConnMode,??_MiApp_ConnectionMode
 30160  00BA16  0101               	movlb	1	; () banked
 30161  00BA18  3B00               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 30162  00BA1A  0101               	movlb	1	; () banked
 30163  00BA1C  51C2               	movf	_MiWiCapacityInfo& (0+255),w,b
 30164  00BA1E  0101               	movlb	1	; () banked
 30165  00BA20  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 30166  00BA22  0BCF               	andlw	-49
 30167  00BA24  1900               	xorwf	??_MiApp_ConnectionMode& (0+255),w,b
 30168  00BA26  0101               	movlb	1	; () banked
 30169  00BA28  6FC2               	movwf	_MiWiCapacityInfo& (0+255),b
 30170                           
 30171                           ; BSR set to: 1
 30172  00BA2A  0012               	return		;funcret
 30173  00BA2C                     __end_of_MiApp_ConnectionMode:
 30174                           	opt stack 0
 30175                           tblptru	equ	0xFF8
 30176                           tblptrh	equ	0xFF7
 30177                           tblptrl	equ	0xFF6
 30178                           tablat	equ	0xFF5
 30179                           prodh	equ	0xFF4
 30180                           prodl	equ	0xFF3
 30181                           intcon	equ	0xFF2
 30182                           intcon2	equ	0xFF1
 30183                           intcon3	equ	0xFF0
 30184                           indf0	equ	0xFEF
 30185                           postinc0	equ	0xFEE
 30186                           plusw0	equ	0xFEB
 30187                           fsr0h	equ	0xFEA
 30188                           fsr0l	equ	0xFE9
 30189                           wreg	equ	0xFE8
 30190                           indf1	equ	0xFE7
 30191                           postinc1	equ	0xFE6
 30192                           postdec1	equ	0xFE5
 30193                           plusw1	equ	0xFE3
 30194                           fsr1h	equ	0xFE2
 30195                           fsr1l	equ	0xFE1
 30196                           indf2	equ	0xFDF
 30197                           postinc2	equ	0xFDE
 30198                           postdec2	equ	0xFDD
 30199                           plusw2	equ	0xFDB
 30200                           fsr2h	equ	0xFDA
 30201                           fsr2l	equ	0xFD9
 30202                           status	equ	0xFD8
 30203                           
 30204 ;; *************** function _SYS_InterruptLow *****************
 30205 ;; Defined at:
 30206 ;;		line 787 in file "src/main.c"
 30207 ;; Parameters:    Size  Location     Type
 30208 ;;		None
 30209 ;; Auto vars:     Size  Location     Type
 30210 ;;		None
 30211 ;; Return value:  Size  Location     Type
 30212 ;;		None               void
 30213 ;; Registers used:
 30214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30215 ;; Tracked objects:
 30216 ;;		On entry : 0/0
 30217 ;;		On exit  : 0/0
 30218 ;;		Unchanged: 0/0
 30219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30222 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30223 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30224 ;;Total ram usage:       19 bytes
 30225 ;; Hardware stack levels used:    1
 30226 ;; Hardware stack levels required when called:   15
 30227 ;; This function calls:
 30228 ;;		_USBDeviceTasks
 30229 ;;		i1___ftadd
 30230 ;;		i1_update_LED
 30231 ;; This function is called by:
 30232 ;;		Interrupt level 1
 30233 ;; This function uses a non-reentrant model
 30234 ;;
 30235                           
 30236                           	psect	intcodelo
 30237  000018                     __pintcodelo:
 30238                           	opt stack 0
 30239  000018                     _SYS_InterruptLow:
 30240                           	opt stack 3
 30241                           
 30242                           ; BSR set to: 1
 30243                           ;incstack = 0
 30244  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30245  00001A  CFD8 F021          	movff	status,??_SYS_InterruptLow+2
 30246  00001E  CFE8 F022          	movff	wreg,??_SYS_InterruptLow+3
 30247  000022  CFE0 F023          	movff	bsr,??_SYS_InterruptLow+4
 30248  000026  CFFA F024          	movff	pclath,??_SYS_InterruptLow+5
 30249  00002A  CFFB F025          	movff	pclatu,??_SYS_InterruptLow+6
 30250  00002E  CFE9 F026          	movff	fsr0l,??_SYS_InterruptLow+7
 30251  000032  CFEA F027          	movff	fsr0h,??_SYS_InterruptLow+8
 30252  000036  CFE1 F028          	movff	fsr1l,??_SYS_InterruptLow+9
 30253  00003A  CFE2 F029          	movff	fsr1h,??_SYS_InterruptLow+10
 30254  00003E  CFD9 F02A          	movff	fsr2l,??_SYS_InterruptLow+11
 30255  000042  CFDA F02B          	movff	fsr2h,??_SYS_InterruptLow+12
 30256  000046  CFF3 F02C          	movff	prodl,??_SYS_InterruptLow+13
 30257  00004A  CFF4 F02D          	movff	prodh,??_SYS_InterruptLow+14
 30258  00004E  CFF6 F02E          	movff	tblptrl,??_SYS_InterruptLow+15
 30259  000052  CFF7 F02F          	movff	tblptrh,??_SYS_InterruptLow+16
 30260  000056  CFF8 F030          	movff	tblptru,??_SYS_InterruptLow+17
 30261  00005A  CFF5 F031          	movff	tablat,??_SYS_InterruptLow+18
 30262                           
 30263                           ;main.c: 789: USBDeviceTasks();
 30264  00005E  EC87  F040         	call	_USBDeviceTasks	;wreg free
 30265                           
 30266                           ;main.c: 790: if (PIR3bits.TMR4IF)
 30267  000062  A6A4               	btfss	4004,3,c	;volatile
 30268  000064  D073               	goto	i1l1869
 30269                           
 30270                           ;main.c: 791: {
 30271                           ;main.c: 792: PIR3bits.TMR4IF = 0;
 30272  000066  96A4               	bcf	4004,3,c	;volatile
 30273                           
 30274                           ;main.c: 793: if ((status_led == LED_SLOW_PULSE)||(status_led == LED_FAST_PULSE))
 30275  000068  0E02               	movlw	2
 30276  00006A  1855               	xorwf	_status_led,w,c	;volatile
 30277  00006C  B4D8               	btfsc	status,2,c
 30278  00006E  D003               	goto	i1l16280
 30279  000070  0455               	decf	_status_led,w,c	;volatile
 30280  000072  A4D8               	btfss	status,2,c
 30281  000074  D04B               	goto	i1l16296
 30282  000076                     i1l16280:
 30283                           
 30284                           ;main.c: 794: {
 30285                           ;main.c: 795: if (LED_increasing == 1)
 30286  000076  0445               	decf	_LED_increasing,w,c	;volatile
 30287  000078  A4D8               	btfss	status,2,c
 30288  00007A  D012               	goto	i1l16286
 30289                           
 30290                           ;main.c: 796: {
 30291                           ;main.c: 797: LED_brightness = LED_brightness + 2;
 30292  00007C  0E02               	movlw	2
 30293  00007E  245B               	addwf	_LED_brightness,w,c	;volatile
 30294  000080  6E5B               	movwf	_LED_brightness,c	;volatile
 30295  000082  0E00               	movlw	0
 30296  000084  205C               	addwfc	_LED_brightness+1,w,c	;volatile
 30297  000086  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30298                           
 30299                           ;main.c: 798: if (LED_brightness >= 235)
 30300  000088  505C               	movf	_LED_brightness+1,w,c	;volatile
 30301  00008A  E104               	bnz	i1u1757_20
 30302  00008C  0EEB               	movlw	235
 30303  00008E  5C5B               	subwf	_LED_brightness,w,c	;volatile
 30304  000090  A0D8               	btfss	status,0,c
 30305  000092  D018               	goto	i1l16290
 30306  000094                     i1u1757_20:
 30307                           
 30308                           ;main.c: 799: {
 30309                           ;main.c: 800: LED_brightness = 235;
 30310  000094  0E00               	movlw	0
 30311  000096  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30312  000098  0EEB               	movlw	235
 30313  00009A  6E5B               	movwf	_LED_brightness,c	;volatile
 30314                           
 30315                           ;main.c: 801: LED_increasing = 0;
 30316  00009C  0E00               	movlw	0
 30317  00009E  D011               	goto	L12
 30318  0000A0                     i1l16286:
 30319                           
 30320                           ;main.c: 804: else
 30321                           ;main.c: 805: {
 30322                           ;main.c: 806: LED_brightness = LED_brightness - 2;
 30323  0000A0  0EFE               	movlw	254
 30324  0000A2  245B               	addwf	_LED_brightness,w,c	;volatile
 30325  0000A4  6E5B               	movwf	_LED_brightness,c	;volatile
 30326  0000A6  0EFF               	movlw	255
 30327  0000A8  205C               	addwfc	_LED_brightness+1,w,c	;volatile
 30328  0000AA  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30329                           
 30330                           ;main.c: 807: if (LED_brightness <= 10)
 30331  0000AC  505C               	movf	_LED_brightness+1,w,c	;volatile
 30332  0000AE  E10A               	bnz	i1l16290
 30333  0000B0  0E0B               	movlw	11
 30334  0000B2  5C5B               	subwf	_LED_brightness,w,c	;volatile
 30335  0000B4  B0D8               	btfsc	status,0,c
 30336  0000B6  D006               	goto	i1l16290
 30337                           
 30338                           ;main.c: 808: {
 30339                           ;main.c: 809: LED_brightness = 10;
 30340  0000B8  0E00               	movlw	0
 30341  0000BA  6E5C               	movwf	_LED_brightness+1,c	;volatile
 30342  0000BC  0E0A               	movlw	10
 30343  0000BE  6E5B               	movwf	_LED_brightness,c	;volatile
 30344                           
 30345                           ;main.c: 810: LED_increasing = 1;
 30346  0000C0  0E01               	movlw	1
 30347  0000C2                     L12:
 30348  0000C2  6E45               	movwf	_LED_increasing,c	;volatile
 30349  0000C4                     i1l16290:
 30350                           
 30351                           ;main.c: 811: }
 30352                           ;main.c: 812: }
 30353                           ;main.c: 814: CCP1CONbits.DC1B0 = LED_brightness & 1;
 30354  0000C4  C05B  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 30355  0000C8  0E01               	movlw	1
 30356  0000CA  161F               	andwf	??_SYS_InterruptLow,f,c
 30357  0000CC  3A1F               	swapf	??_SYS_InterruptLow,f,c
 30358  0000CE  50BA               	movf	4026,w,c	;volatile
 30359  0000D0  181F               	xorwf	??_SYS_InterruptLow,w,c
 30360  0000D2  0BEF               	andlw	-17
 30361  0000D4  181F               	xorwf	??_SYS_InterruptLow,w,c
 30362  0000D6  6EBA               	movwf	4026,c	;volatile
 30363                           
 30364                           ;main.c: 815: CCP1CONbits.DC1B1 = (LED_brightness >> 1) & 1;
 30365  0000D8  90D8               	bcf	status,0,c
 30366  0000DA  305C               	rrcf	_LED_brightness+1,w,c	;volatile
 30367  0000DC  6E20               	movwf	(??_SYS_InterruptLow+1)& (0+255),c
 30368  0000DE  305B               	rrcf	_LED_brightness,w,c	;volatile
 30369  0000E0  6E1F               	movwf	??_SYS_InterruptLow& (0+255),c
 30370  0000E2  0E01               	movlw	1
 30371  0000E4  161F               	andwf	??_SYS_InterruptLow,f,c
 30372  0000E6  3A1F               	swapf	??_SYS_InterruptLow,f,c
 30373  0000E8  461F               	rlncf	??_SYS_InterruptLow,f,c
 30374  0000EA  50BA               	movf	4026,w,c	;volatile
 30375  0000EC  181F               	xorwf	??_SYS_InterruptLow,w,c
 30376  0000EE  0BDF               	andlw	-33
 30377  0000F0  181F               	xorwf	??_SYS_InterruptLow,w,c
 30378  0000F2  6EBA               	movwf	4026,c	;volatile
 30379                           
 30380                           ;main.c: 816: CCPR1L = (LED_brightness >> 2);
 30381  0000F4  C05B  F01F         	movff	_LED_brightness,??_SYS_InterruptLow	;volatile
 30382  0000F8  C05C  F020         	movff	_LED_brightness+1,??_SYS_InterruptLow+1	;volatile
 30383  0000FC  90D8               	bcf	status,0,c
 30384  0000FE  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 30385  000100  321F               	rrcf	??_SYS_InterruptLow,f,c
 30386  000102  90D8               	bcf	status,0,c
 30387  000104  3220               	rrcf	??_SYS_InterruptLow+1,f,c
 30388  000106  321F               	rrcf	??_SYS_InterruptLow,f,c
 30389  000108  501F               	movf	??_SYS_InterruptLow,w,c
 30390  00010A  6EBB               	movwf	4027,c	;volatile
 30391  00010C                     i1l16296:
 30392                           
 30393                           ;main.c: 817: }
 30394                           ;main.c: 818: if (status_led == LED_FULL)
 30395  00010C  0E03               	movlw	3
 30396  00010E  1855               	xorwf	_status_led,w,c	;volatile
 30397  000110  A4D8               	btfss	status,2,c
 30398  000112  D044               	goto	i1l1891
 30399                           
 30400                           ;main.c: 819: {
 30401                           ;main.c: 820: repeat_full = repeat_full - 1;
 30402  000114  0453               	decf	_repeat_full,w,c	;volatile
 30403  000116  6E53               	movwf	_repeat_full,c	;volatile
 30404                           
 30405                           ;main.c: 821: if (repeat_full == 0)
 30406  000118  5053               	movf	_repeat_full,w,c	;volatile
 30407  00011A  A4D8               	btfss	status,2,c
 30408  00011C  D03F               	goto	i1l1891
 30409                           
 30410                           ;main.c: 822: {
 30411                           ;main.c: 823: if (myAppState == STATE_INIT)
 30412  00011E  5052               	movf	_myAppState,w,c
 30413  000120  B4D8               	btfsc	status,2,c
 30414  000122  D003               	goto	i1l16308
 30415                           
 30416                           ;main.c: 825: else if (myAppState == STATE_USB_READY)
 30417                           
 30418                           ;main.c: 824: status_led = LED_FAST_PULSE;
 30419  000124  0452               	decf	_myAppState,w,c
 30420  000126  A4D8               	btfss	status,2,c
 30421  000128  D002               	goto	i1l16310
 30422  00012A                     i1l16308:
 30423                           
 30424                           ;main.c: 826: status_led = LED_FAST_PULSE;
 30425  00012A  0E01               	movlw	1
 30426  00012C  D00B               	goto	L14
 30427  00012E                     i1l16310:
 30428                           
 30429                           ;main.c: 827: else if (myAppState == STATE_READY)
 30430  00012E  0E02               	movlw	2
 30431  000130  1852               	xorwf	_myAppState,w,c
 30432  000132  A4D8               	btfss	status,2,c
 30433  000134  D002               	goto	i1l16314
 30434                           
 30435                           ;main.c: 828: status_led = LED_SLOW_PULSE;
 30436  000136  0E02               	movlw	2
 30437  000138  D005               	goto	L14
 30438  00013A                     i1l16314:
 30439                           
 30440                           ;main.c: 829: else if (myAppState == STATE_PROBLEM)
 30441  00013A  0E03               	movlw	3
 30442  00013C  1852               	xorwf	_myAppState,w,c
 30443  00013E  A4D8               	btfss	status,2,c
 30444  000140  D002               	goto	i1l16318
 30445                           
 30446                           ;main.c: 830: status_led = LED_OFF;
 30447  000142  0E00               	movlw	0
 30448  000144                     L14:
 30449  000144  6E55               	movwf	_status_led,c	;volatile
 30450  000146                     i1l16318:
 30451                           
 30452                           ;main.c: 831: update_LED();
 30453  000146  ECF2  F059         	call	i1_update_LED	;wreg free
 30454                           
 30455                           ;main.c: 832: }
 30456                           ;main.c: 833: }
 30457                           ;main.c: 834: }
 30458  00014A  D028               	goto	i1l1891
 30459  00014C                     i1l1869:
 30460                           
 30461                           ;main.c: 835: else if(PIR3bits.RTCCIF)
 30462  00014C  A0A4               	btfss	4004,0,c	;volatile
 30463  00014E  D026               	goto	i1l1891
 30464                           
 30465                           ;main.c: 836: {
 30466                           ;main.c: 837: m_uptime_days = m_uptime_days + 0.000740741F;
 30467  000150  C1B0  F009         	movff	_m_uptime_days,i1___ftadd@f1	;volatile
 30468  000154  C1B1  F00A         	movff	_m_uptime_days+1,i1___ftadd@f1+1	;volatile
 30469  000158  C1B2  F00B         	movff	_m_uptime_days+2,i1___ftadd@f1+2	;volatile
 30470  00015C  0E2E               	movlw	46
 30471  00015E  6E0C               	movwf	i1___ftadd@f2,c
 30472  000160  0E42               	movlw	66
 30473  000162  6E0D               	movwf	i1___ftadd@f2+1,c
 30474  000164  0E3A               	movlw	58
 30475  000166  6E0E               	movwf	i1___ftadd@f2+2,c
 30476  000168  EC95  F03A         	call	i1___ftadd	;wreg free
 30477  00016C  C009  F1B0         	movff	?i1___ftadd,_m_uptime_days	;volatile
 30478  000170  C00A  F1B1         	movff	?i1___ftadd+1,_m_uptime_days+1	;volatile
 30479  000174  C00B  F1B2         	movff	?i1___ftadd+2,_m_uptime_days+2	;volatile
 30480                           
 30481                           ;main.c: 838: timer_count = timer_count - 1;
 30482  000178  045D               	decf	_timer_count,w,c	;volatile
 30483  00017A  6E5D               	movwf	_timer_count,c	;volatile
 30484                           
 30485                           ;main.c: 839: if (timer_count == 0)
 30486  00017C  505D               	movf	_timer_count,w,c	;volatile
 30487  00017E  A4D8               	btfss	status,2,c
 30488  000180  D00C               	goto	i1l1888
 30489                           
 30490                           ;main.c: 840: {
 30491                           ;main.c: 841: timer_flag = 1;
 30492  000182  0E01               	movlw	1
 30493  000184  0101               	movlb	1	; () banked
 30494  000186  6FCB               	movwf	_timer_flag& (0+255),b	;volatile
 30495                           
 30496                           ;main.c: 842: if (m_update_frequency == 0)
 30497  000188  0101               	movlb	1	; () banked
 30498  00018A  51FA               	movf	_m_update_frequency& (0+255),w,b	;volatile
 30499  00018C  A4D8               	btfss	status,2,c
 30500  00018E  D003               	goto	i1l1889
 30501                           
 30502                           ; BSR set to: 1
 30503                           ;main.c: 843: timer_count = 1;
 30504  000190  0E01               	movlw	1
 30505  000192  6E5D               	movwf	_timer_count,c	;volatile
 30506  000194  D002               	goto	i1l1888
 30507  000196                     i1l1889:
 30508                           
 30509                           ; BSR set to: 1
 30510                           ;main.c: 844: else
 30511                           ;main.c: 845: timer_count = m_update_frequency;
 30512  000196  C1FA  F05D         	movff	_m_update_frequency,_timer_count	;volatile
 30513  00019A                     i1l1888:
 30514                           
 30515                           ;main.c: 846: }
 30516                           ;main.c: 847: PIR3bits.RTCCIF = 0;
 30517  00019A  90A4               	bcf	4004,0,c	;volatile
 30518  00019C                     i1l1891:
 30519  00019C  C031  FFF5         	movff	??_SYS_InterruptLow+18,tablat
 30520  0001A0  C030  FFF8         	movff	??_SYS_InterruptLow+17,tblptru
 30521  0001A4  C02F  FFF7         	movff	??_SYS_InterruptLow+16,tblptrh
 30522  0001A8  C02E  FFF6         	movff	??_SYS_InterruptLow+15,tblptrl
 30523  0001AC  C02D  FFF4         	movff	??_SYS_InterruptLow+14,prodh
 30524  0001B0  C02C  FFF3         	movff	??_SYS_InterruptLow+13,prodl
 30525  0001B4  C02B  FFDA         	movff	??_SYS_InterruptLow+12,fsr2h
 30526  0001B8  C02A  FFD9         	movff	??_SYS_InterruptLow+11,fsr2l
 30527  0001BC  C029  FFE2         	movff	??_SYS_InterruptLow+10,fsr1h
 30528  0001C0  C028  FFE1         	movff	??_SYS_InterruptLow+9,fsr1l
 30529  0001C4  C027  FFEA         	movff	??_SYS_InterruptLow+8,fsr0h
 30530  0001C8  C026  FFE9         	movff	??_SYS_InterruptLow+7,fsr0l
 30531  0001CC  C025  FFFB         	movff	??_SYS_InterruptLow+6,pclatu
 30532  0001D0  C024  FFFA         	movff	??_SYS_InterruptLow+5,pclath
 30533  0001D4  C023  FFE0         	movff	??_SYS_InterruptLow+4,bsr
 30534  0001D8  C022  FFE8         	movff	??_SYS_InterruptLow+3,wreg
 30535  0001DC  C021  FFD8         	movff	??_SYS_InterruptLow+2,status
 30536  0001E0  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30537  0001E2  0010               	retfie	
 30538  0001E4                     __end_of_SYS_InterruptLow:
 30539                           	opt stack 0
 30540                           pclatu	equ	0xFFB
 30541                           pclath	equ	0xFFA
 30542                           tblptru	equ	0xFF8
 30543                           tblptrh	equ	0xFF7
 30544                           tblptrl	equ	0xFF6
 30545                           tablat	equ	0xFF5
 30546                           prodh	equ	0xFF4
 30547                           prodl	equ	0xFF3
 30548                           intcon	equ	0xFF2
 30549                           intcon2	equ	0xFF1
 30550                           intcon3	equ	0xFF0
 30551                           indf0	equ	0xFEF
 30552                           postinc0	equ	0xFEE
 30553                           plusw0	equ	0xFEB
 30554                           fsr0h	equ	0xFEA
 30555                           fsr0l	equ	0xFE9
 30556                           wreg	equ	0xFE8
 30557                           indf1	equ	0xFE7
 30558                           postinc1	equ	0xFE6
 30559                           postdec1	equ	0xFE5
 30560                           plusw1	equ	0xFE3
 30561                           fsr1h	equ	0xFE2
 30562                           fsr1l	equ	0xFE1
 30563                           bsr	equ	0xFE0
 30564                           indf2	equ	0xFDF
 30565                           postinc2	equ	0xFDE
 30566                           postdec2	equ	0xFDD
 30567                           plusw2	equ	0xFDB
 30568                           fsr2h	equ	0xFDA
 30569                           fsr2l	equ	0xFD9
 30570                           status	equ	0xFD8
 30571                           
 30572 ;; *************** function i1___ftadd *****************
 30573 ;; Defined at:
 30574 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
 30575 ;; Parameters:    Size  Location     Type
 30576 ;;  f1              3    8[COMRAM] float 
 30577 ;;  f2              3   11[COMRAM] float 
 30578 ;; Auto vars:     Size  Location     Type
 30579 ;;  __ftadd         1   19[COMRAM] unsigned char 
 30580 ;;  __ftadd         1   18[COMRAM] unsigned char 
 30581 ;;  __ftadd         1   17[COMRAM] unsigned char 
 30582 ;; Return value:  Size  Location     Type
 30583 ;;                  3    8[COMRAM] float 
 30584 ;; Registers used:
 30585 ;;		wreg, status,2, status,0, cstack
 30586 ;; Tracked objects:
 30587 ;;		On entry : 0/0
 30588 ;;		On exit  : 0/0
 30589 ;;		Unchanged: 0/0
 30590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30592 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30593 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30594 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30595 ;;Total ram usage:       12 bytes
 30596 ;; Hardware stack levels used:    1
 30597 ;; Hardware stack levels required when called:    7
 30598 ;; This function calls:
 30599 ;;		i1___ftpack
 30600 ;; This function is called by:
 30601 ;;		_SYS_InterruptLow
 30602 ;; This function uses a non-reentrant model
 30603 ;;
 30604                           
 30605                           	psect	text85
 30606  00752A                     __ptext85:
 30607                           	opt stack 0
 30608  00752A                     i1___ftadd:
 30609                           	opt stack 10
 30610                           
 30611                           ;incstack = 0
 30612  00752A  C00B  F00F         	movff	i1___ftadd@f1+2,??i1___ftadd
 30613  00752E  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 30614  007530  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 30615  007532  340A               	rlcf	i1___ftadd@f1+1,w,c
 30616  007534  360F               	rlcf	??i1___ftadd& (0+255),f,c
 30617  007536  E301               	bnc	u1650_21
 30618  007538  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 30619  00753A                     u1650_21:
 30620  00753A  500F               	movf	??i1___ftadd,w,c
 30621  00753C  6E14               	movwf	i1___ftadd@exp1,c
 30622  00753E  C00E  F00F         	movff	i1___ftadd@f2+2,??i1___ftadd
 30623  007542  6A10               	clrf	(??i1___ftadd+1)& (0+255),c
 30624  007544  6A11               	clrf	(??i1___ftadd+2)& (0+255),c
 30625  007546  340D               	rlcf	i1___ftadd@f2+1,w,c
 30626  007548  360F               	rlcf	??i1___ftadd& (0+255),f,c
 30627  00754A  E301               	bnc	u1651_21
 30628  00754C  8010               	bsf	(??i1___ftadd+1)& (0+255),0,c
 30629  00754E                     u1651_21:
 30630  00754E  500F               	movf	??i1___ftadd,w,c
 30631  007550  6E13               	movwf	i1___ftadd@exp2,c
 30632  007552  5014               	movf	i1___ftadd@exp1,w,c
 30633  007554  B4D8               	btfsc	status,2,c
 30634  007556  D00B               	goto	i1l2493
 30635  007558  5013               	movf	i1___ftadd@exp2,w,c
 30636  00755A  5C14               	subwf	i1___ftadd@exp1,w,c
 30637  00755C  B0D8               	btfsc	status,0,c
 30638  00755E  D00E               	goto	i1l15492
 30639  007560  5014               	movf	i1___ftadd@exp1,w,c
 30640  007562  0800               	sublw	0
 30641  007564  2413               	addwf	i1___ftadd@exp2,w,c
 30642  007566  6E0F               	movwf	??i1___ftadd& (0+255),c
 30643  007568  0E18               	movlw	24
 30644  00756A  640F               	cpfsgt	??i1___ftadd,c
 30645  00756C  D007               	goto	i1l15492
 30646  00756E                     i1l2493:
 30647  00756E  C00C  F009         	movff	i1___ftadd@f2,?i1___ftadd
 30648  007572  C00D  F00A         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 30649  007576  C00E  F00B         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 30650  00757A  0012               	return	
 30651  00757C                     i1l15492:
 30652  00757C  5013               	movf	i1___ftadd@exp2,w,c
 30653  00757E  B4D8               	btfsc	status,2,c
 30654  007580  D00B               	goto	i1l2497
 30655  007582  5014               	movf	i1___ftadd@exp1,w,c
 30656  007584  5C13               	subwf	i1___ftadd@exp2,w,c
 30657  007586  B0D8               	btfsc	status,0,c
 30658  007588  D00E               	goto	i1l15498
 30659  00758A  5013               	movf	i1___ftadd@exp2,w,c
 30660  00758C  0800               	sublw	0
 30661  00758E  2414               	addwf	i1___ftadd@exp1,w,c
 30662  007590  6E0F               	movwf	??i1___ftadd& (0+255),c
 30663  007592  0E18               	movlw	24
 30664  007594  640F               	cpfsgt	??i1___ftadd,c
 30665  007596  D007               	goto	i1l15498
 30666  007598                     i1l2497:
 30667  007598  C009  F009         	movff	i1___ftadd@f1,?i1___ftadd
 30668  00759C  C00A  F00A         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 30669  0075A0  C00B  F00B         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 30670  0075A4  0012               	return	
 30671  0075A6                     i1l15498:
 30672  0075A6  0E06               	movlw	6
 30673  0075A8  6E12               	movwf	i1___ftadd@sign,c
 30674  0075AA  BE0B               	btfsc	i1___ftadd@f1+2,7,c
 30675  0075AC  8E12               	bsf	i1___ftadd@sign,7,c
 30676  0075AE  BE0E               	btfsc	i1___ftadd@f2+2,7,c
 30677  0075B0  8C12               	bsf	i1___ftadd@sign,6,c
 30678  0075B2  8E0A               	bsf	i1___ftadd@f1+1,7,c
 30679  0075B4  0EFF               	movlw	255
 30680  0075B6  1609               	andwf	i1___ftadd@f1,f,c
 30681  0075B8  0EFF               	movlw	255
 30682  0075BA  160A               	andwf	i1___ftadd@f1+1,f,c
 30683  0075BC  0E00               	movlw	0
 30684  0075BE  160B               	andwf	i1___ftadd@f1+2,f,c
 30685  0075C0  8E0D               	bsf	i1___ftadd@f2+1,7,c
 30686  0075C2  0EFF               	movlw	255
 30687  0075C4  160C               	andwf	i1___ftadd@f2,f,c
 30688  0075C6  0EFF               	movlw	255
 30689  0075C8  160D               	andwf	i1___ftadd@f2+1,f,c
 30690  0075CA  0E00               	movlw	0
 30691  0075CC  160E               	andwf	i1___ftadd@f2+2,f,c
 30692  0075CE  5013               	movf	i1___ftadd@exp2,w,c
 30693  0075D0  5C14               	subwf	i1___ftadd@exp1,w,c
 30694  0075D2  B0D8               	btfsc	status,0,c
 30695  0075D4  D01B               	goto	i1l15524
 30696  0075D6                     i1l15514:
 30697  0075D6  90D8               	bcf	status,0,c
 30698  0075D8  360C               	rlcf	i1___ftadd@f2,f,c
 30699  0075DA  360D               	rlcf	i1___ftadd@f2+1,f,c
 30700  0075DC  360E               	rlcf	i1___ftadd@f2+2,f,c
 30701  0075DE  0613               	decf	i1___ftadd@exp2,f,c
 30702  0075E0  5014               	movf	i1___ftadd@exp1,w,c
 30703  0075E2  1813               	xorwf	i1___ftadd@exp2,w,c
 30704  0075E4  B4D8               	btfsc	status,2,c
 30705  0075E6  D00D               	goto	i1l15522
 30706  0075E8  0612               	decf	i1___ftadd@sign,f,c
 30707  0075EA  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 30708  0075EE  0E07               	movlw	7
 30709  0075F0  160F               	andwf	??i1___ftadd,f,c
 30710  0075F2  B4D8               	btfsc	status,2,c
 30711  0075F4  D006               	goto	i1l15522
 30712  0075F6  D7EF               	goto	i1l15514
 30713  0075F8                     i1l15520:
 30714  0075F8  90D8               	bcf	status,0,c
 30715  0075FA  320B               	rrcf	i1___ftadd@f1+2,f,c
 30716  0075FC  320A               	rrcf	i1___ftadd@f1+1,f,c
 30717  0075FE  3209               	rrcf	i1___ftadd@f1,f,c
 30718  007600  2A14               	incf	i1___ftadd@exp1,f,c
 30719  007602                     i1l15522:
 30720  007602  5013               	movf	i1___ftadd@exp2,w,c
 30721  007604  1814               	xorwf	i1___ftadd@exp1,w,c
 30722  007606  B4D8               	btfsc	status,2,c
 30723  007608  D01F               	goto	i1l2508
 30724  00760A  D7F6               	goto	i1l15520
 30725  00760C                     i1l15524:
 30726  00760C  5014               	movf	i1___ftadd@exp1,w,c
 30727  00760E  5C13               	subwf	i1___ftadd@exp2,w,c
 30728  007610  B0D8               	btfsc	status,0,c
 30729  007612  D01A               	goto	i1l2508
 30730  007614                     i1l15526:
 30731  007614  90D8               	bcf	status,0,c
 30732  007616  3609               	rlcf	i1___ftadd@f1,f,c
 30733  007618  360A               	rlcf	i1___ftadd@f1+1,f,c
 30734  00761A  360B               	rlcf	i1___ftadd@f1+2,f,c
 30735  00761C  0614               	decf	i1___ftadd@exp1,f,c
 30736  00761E  5014               	movf	i1___ftadd@exp1,w,c
 30737  007620  1813               	xorwf	i1___ftadd@exp2,w,c
 30738  007622  B4D8               	btfsc	status,2,c
 30739  007624  D00D               	goto	i1l15534
 30740  007626  0612               	decf	i1___ftadd@sign,f,c
 30741  007628  C012  F00F         	movff	i1___ftadd@sign,??i1___ftadd
 30742  00762C  0E07               	movlw	7
 30743  00762E  160F               	andwf	??i1___ftadd,f,c
 30744  007630  B4D8               	btfsc	status,2,c
 30745  007632  D006               	goto	i1l15534
 30746  007634  D7EF               	goto	i1l15526
 30747  007636                     i1l15532:
 30748  007636  90D8               	bcf	status,0,c
 30749  007638  320E               	rrcf	i1___ftadd@f2+2,f,c
 30750  00763A  320D               	rrcf	i1___ftadd@f2+1,f,c
 30751  00763C  320C               	rrcf	i1___ftadd@f2,f,c
 30752  00763E  2A13               	incf	i1___ftadd@exp2,f,c
 30753  007640                     i1l15534:
 30754  007640  5013               	movf	i1___ftadd@exp2,w,c
 30755  007642  1814               	xorwf	i1___ftadd@exp1,w,c
 30756  007644  A4D8               	btfss	status,2,c
 30757  007646  D7F7               	goto	i1l15532
 30758  007648                     i1l2508:
 30759  007648  AE12               	btfss	i1___ftadd@sign,7,c
 30760  00764A  D00C               	goto	i1l2517
 30761  00764C  0EFF               	movlw	255
 30762  00764E  1A09               	xorwf	i1___ftadd@f1,f,c
 30763  007650  0EFF               	movlw	255
 30764  007652  1A0A               	xorwf	i1___ftadd@f1+1,f,c
 30765  007654  0EFF               	movlw	255
 30766  007656  1A0B               	xorwf	i1___ftadd@f1+2,f,c
 30767  007658  0E01               	movlw	1
 30768  00765A  2609               	addwf	i1___ftadd@f1,f,c
 30769  00765C  0E00               	movlw	0
 30770  00765E  220A               	addwfc	i1___ftadd@f1+1,f,c
 30771  007660  0E00               	movlw	0
 30772  007662  220B               	addwfc	i1___ftadd@f1+2,f,c
 30773  007664                     i1l2517:
 30774  007664  AC12               	btfss	i1___ftadd@sign,6,c
 30775  007666  D00C               	goto	i1l15540
 30776  007668  0EFF               	movlw	255
 30777  00766A  1A0C               	xorwf	i1___ftadd@f2,f,c
 30778  00766C  0EFF               	movlw	255
 30779  00766E  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 30780  007670  0EFF               	movlw	255
 30781  007672  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 30782  007674  0E01               	movlw	1
 30783  007676  260C               	addwf	i1___ftadd@f2,f,c
 30784  007678  0E00               	movlw	0
 30785  00767A  220D               	addwfc	i1___ftadd@f2+1,f,c
 30786  00767C  0E00               	movlw	0
 30787  00767E  220E               	addwfc	i1___ftadd@f2+2,f,c
 30788  007680                     i1l15540:
 30789  007680  0E00               	movlw	0
 30790  007682  6E12               	movwf	i1___ftadd@sign,c
 30791  007684  5009               	movf	i1___ftadd@f1,w,c
 30792  007686  260C               	addwf	i1___ftadd@f2,f,c
 30793  007688  500A               	movf	i1___ftadd@f1+1,w,c
 30794  00768A  220D               	addwfc	i1___ftadd@f2+1,f,c
 30795  00768C  500B               	movf	i1___ftadd@f1+2,w,c
 30796  00768E  220E               	addwfc	i1___ftadd@f2+2,f,c
 30797  007690  AE0E               	btfss	i1___ftadd@f2+2,7,c
 30798  007692  D00E               	goto	i1l15550
 30799  007694  0EFF               	movlw	255
 30800  007696  1A0C               	xorwf	i1___ftadd@f2,f,c
 30801  007698  0EFF               	movlw	255
 30802  00769A  1A0D               	xorwf	i1___ftadd@f2+1,f,c
 30803  00769C  0EFF               	movlw	255
 30804  00769E  1A0E               	xorwf	i1___ftadd@f2+2,f,c
 30805  0076A0  0E01               	movlw	1
 30806  0076A2  260C               	addwf	i1___ftadd@f2,f,c
 30807  0076A4  0E00               	movlw	0
 30808  0076A6  220D               	addwfc	i1___ftadd@f2+1,f,c
 30809  0076A8  0E00               	movlw	0
 30810  0076AA  220E               	addwfc	i1___ftadd@f2+2,f,c
 30811  0076AC  0E01               	movlw	1
 30812  0076AE  6E12               	movwf	i1___ftadd@sign,c
 30813  0076B0                     i1l15550:
 30814  0076B0  C00C  F001         	movff	i1___ftadd@f2,i1___ftpack@arg
 30815  0076B4  C00D  F002         	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 30816  0076B8  C00E  F003         	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 30817  0076BC  C014  F004         	movff	i1___ftadd@exp1,i1___ftpack@exp
 30818  0076C0  C012  F005         	movff	i1___ftadd@sign,i1___ftpack@sign
 30819  0076C4  ECDD  F053         	call	i1___ftpack	;wreg free
 30820  0076C8  C001  F009         	movff	?i1___ftpack,?i1___ftadd
 30821  0076CC  C002  F00A         	movff	?i1___ftpack+1,?i1___ftadd+1
 30822  0076D0  C003  F00B         	movff	?i1___ftpack+2,?i1___ftadd+2
 30823  0076D4  0012               	return	
 30824  0076D6                     __end_ofi1___ftadd:
 30825                           	opt stack 0
 30826                           pclatu	equ	0xFFB
 30827                           pclath	equ	0xFFA
 30828                           tblptru	equ	0xFF8
 30829                           tblptrh	equ	0xFF7
 30830                           tblptrl	equ	0xFF6
 30831                           tablat	equ	0xFF5
 30832                           prodh	equ	0xFF4
 30833                           prodl	equ	0xFF3
 30834                           intcon	equ	0xFF2
 30835                           intcon2	equ	0xFF1
 30836                           intcon3	equ	0xFF0
 30837                           indf0	equ	0xFEF
 30838                           postinc0	equ	0xFEE
 30839                           plusw0	equ	0xFEB
 30840                           fsr0h	equ	0xFEA
 30841                           fsr0l	equ	0xFE9
 30842                           wreg	equ	0xFE8
 30843                           indf1	equ	0xFE7
 30844                           postinc1	equ	0xFE6
 30845                           postdec1	equ	0xFE5
 30846                           plusw1	equ	0xFE3
 30847                           fsr1h	equ	0xFE2
 30848                           fsr1l	equ	0xFE1
 30849                           bsr	equ	0xFE0
 30850                           indf2	equ	0xFDF
 30851                           postinc2	equ	0xFDE
 30852                           postdec2	equ	0xFDD
 30853                           plusw2	equ	0xFDB
 30854                           fsr2h	equ	0xFDA
 30855                           fsr2l	equ	0xFD9
 30856                           status	equ	0xFD8
 30857                           
 30858 ;; *************** function i1___ftpack *****************
 30859 ;; Defined at:
 30860 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 30861 ;; Parameters:    Size  Location     Type
 30862 ;;  arg             3    0[COMRAM] unsigned um
 30863 ;;  exp             1    3[COMRAM] unsigned char 
 30864 ;;  sign            1    4[COMRAM] unsigned char 
 30865 ;; Auto vars:     Size  Location     Type
 30866 ;;		None
 30867 ;; Return value:  Size  Location     Type
 30868 ;;                  3    0[COMRAM] float 
 30869 ;; Registers used:
 30870 ;;		wreg, status,2, status,0
 30871 ;; Tracked objects:
 30872 ;;		On entry : 0/0
 30873 ;;		On exit  : 0/0
 30874 ;;		Unchanged: 0/0
 30875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30876 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30878 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30879 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30880 ;;Total ram usage:        8 bytes
 30881 ;; Hardware stack levels used:    1
 30882 ;; Hardware stack levels required when called:    6
 30883 ;; This function calls:
 30884 ;;		Nothing
 30885 ;; This function is called by:
 30886 ;;		i1___ftadd
 30887 ;; This function uses a non-reentrant model
 30888 ;;
 30889                           
 30890                           	psect	text86
 30891  00A7BA                     __ptext86:
 30892                           	opt stack 0
 30893  00A7BA                     i1___ftpack:
 30894                           	opt stack 10
 30895                           
 30896                           ;incstack = 0
 30897  00A7BA  5004               	movf	i1___ftpack@exp,w,c
 30898  00A7BC  B4D8               	btfsc	status,2,c
 30899  00A7BE  D005               	goto	i1l13674
 30900  00A7C0  5001               	movf	i1___ftpack@arg,w,c
 30901  00A7C2  1002               	iorwf	i1___ftpack@arg+1,w,c
 30902  00A7C4  1003               	iorwf	i1___ftpack@arg+2,w,c
 30903  00A7C6  A4D8               	btfss	status,2,c
 30904  00A7C8  D00C               	goto	i1l13680
 30905  00A7CA                     i1l13674:
 30906  00A7CA  0E00               	movlw	0
 30907  00A7CC  6E01               	movwf	?i1___ftpack,c
 30908  00A7CE  0E00               	movlw	0
 30909  00A7D0  6E02               	movwf	?i1___ftpack+1,c
 30910  00A7D2  0E00               	movlw	0
 30911  00A7D4  6E03               	movwf	?i1___ftpack+2,c
 30912  00A7D6  0012               	return	
 30913  00A7D8                     i1l13678:
 30914  00A7D8  2A04               	incf	i1___ftpack@exp,f,c
 30915  00A7DA  90D8               	bcf	status,0,c
 30916  00A7DC  3203               	rrcf	i1___ftpack@arg+2,f,c
 30917  00A7DE  3202               	rrcf	i1___ftpack@arg+1,f,c
 30918  00A7E0  3201               	rrcf	i1___ftpack@arg,f,c
 30919  00A7E2                     i1l13680:
 30920  00A7E2  0E00               	movlw	0
 30921  00A7E4  1401               	andwf	i1___ftpack@arg,w,c
 30922  00A7E6  6E06               	movwf	??i1___ftpack& (0+255),c
 30923  00A7E8  0E00               	movlw	0
 30924  00A7EA  1402               	andwf	i1___ftpack@arg+1,w,c
 30925  00A7EC  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 30926  00A7EE  0EFE               	movlw	254
 30927  00A7F0  1403               	andwf	i1___ftpack@arg+2,w,c
 30928  00A7F2  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 30929  00A7F4  5006               	movf	??i1___ftpack,w,c
 30930  00A7F6  1007               	iorwf	??i1___ftpack+1,w,c
 30931  00A7F8  1008               	iorwf	??i1___ftpack+2,w,c
 30932  00A7FA  B4D8               	btfsc	status,2,c
 30933  00A7FC  D00C               	goto	i1l13686
 30934  00A7FE  D7EC               	goto	i1l13678
 30935  00A800                     i1l13682:
 30936  00A800  2A04               	incf	i1___ftpack@exp,f,c
 30937  00A802  0E01               	movlw	1
 30938  00A804  2601               	addwf	i1___ftpack@arg,f,c
 30939  00A806  0E00               	movlw	0
 30940  00A808  2202               	addwfc	i1___ftpack@arg+1,f,c
 30941  00A80A  0E00               	movlw	0
 30942  00A80C  2203               	addwfc	i1___ftpack@arg+2,f,c
 30943  00A80E  90D8               	bcf	status,0,c
 30944  00A810  3203               	rrcf	i1___ftpack@arg+2,f,c
 30945  00A812  3202               	rrcf	i1___ftpack@arg+1,f,c
 30946  00A814  3201               	rrcf	i1___ftpack@arg,f,c
 30947  00A816                     i1l13686:
 30948  00A816  0E00               	movlw	0
 30949  00A818  1401               	andwf	i1___ftpack@arg,w,c
 30950  00A81A  6E06               	movwf	??i1___ftpack& (0+255),c
 30951  00A81C  0E00               	movlw	0
 30952  00A81E  1402               	andwf	i1___ftpack@arg+1,w,c
 30953  00A820  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 30954  00A822  0EFF               	movlw	255
 30955  00A824  1403               	andwf	i1___ftpack@arg+2,w,c
 30956  00A826  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 30957  00A828  5006               	movf	??i1___ftpack,w,c
 30958  00A82A  1007               	iorwf	??i1___ftpack+1,w,c
 30959  00A82C  1008               	iorwf	??i1___ftpack+2,w,c
 30960  00A82E  B4D8               	btfsc	status,2,c
 30961  00A830  D006               	goto	i1l13690
 30962  00A832  D7E6               	goto	i1l13682
 30963  00A834                     i1l13688:
 30964  00A834  0604               	decf	i1___ftpack@exp,f,c
 30965  00A836  90D8               	bcf	status,0,c
 30966  00A838  3601               	rlcf	i1___ftpack@arg,f,c
 30967  00A83A  3602               	rlcf	i1___ftpack@arg+1,f,c
 30968  00A83C  3603               	rlcf	i1___ftpack@arg+2,f,c
 30969  00A83E                     i1l13690:
 30970  00A83E  BE02               	btfsc	i1___ftpack@arg+1,7,c
 30971  00A840  D003               	goto	i1l2445
 30972  00A842  0E02               	movlw	2
 30973  00A844  6004               	cpfslt	i1___ftpack@exp,c
 30974  00A846  D7F6               	goto	i1l13688
 30975  00A848                     i1l2445:
 30976  00A848  A004               	btfss	i1___ftpack@exp,0,c
 30977  00A84A  9E02               	bcf	i1___ftpack@arg+1,7,c
 30978  00A84C  90D8               	bcf	status,0,c
 30979  00A84E  3204               	rrcf	i1___ftpack@exp,f,c
 30980  00A850  5004               	movf	i1___ftpack@exp,w,c
 30981  00A852  1203               	iorwf	i1___ftpack@arg+2,f,c
 30982  00A854  5005               	movf	i1___ftpack@sign,w,c
 30983  00A856  A4D8               	btfss	status,2,c
 30984  00A858  8E03               	bsf	i1___ftpack@arg+2,7,c
 30985  00A85A  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 30986  00A85E  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 30987  00A862  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 30988  00A866  0012               	return	
 30989  00A868                     __end_ofi1___ftpack:
 30990                           	opt stack 0
 30991                           pclatu	equ	0xFFB
 30992                           pclath	equ	0xFFA
 30993                           tblptru	equ	0xFF8
 30994                           tblptrh	equ	0xFF7
 30995                           tblptrl	equ	0xFF6
 30996                           tablat	equ	0xFF5
 30997                           prodh	equ	0xFF4
 30998                           prodl	equ	0xFF3
 30999                           intcon	equ	0xFF2
 31000                           intcon2	equ	0xFF1
 31001                           intcon3	equ	0xFF0
 31002                           indf0	equ	0xFEF
 31003                           postinc0	equ	0xFEE
 31004                           plusw0	equ	0xFEB
 31005                           fsr0h	equ	0xFEA
 31006                           fsr0l	equ	0xFE9
 31007                           wreg	equ	0xFE8
 31008                           indf1	equ	0xFE7
 31009                           postinc1	equ	0xFE6
 31010                           postdec1	equ	0xFE5
 31011                           plusw1	equ	0xFE3
 31012                           fsr1h	equ	0xFE2
 31013                           fsr1l	equ	0xFE1
 31014                           bsr	equ	0xFE0
 31015                           indf2	equ	0xFDF
 31016                           postinc2	equ	0xFDE
 31017                           postdec2	equ	0xFDD
 31018                           plusw2	equ	0xFDB
 31019                           fsr2h	equ	0xFDA
 31020                           fsr2l	equ	0xFD9
 31021                           status	equ	0xFD8
 31022                           
 31023 ;; *************** function _USBDeviceTasks *****************
 31024 ;; Defined at:
 31025 ;;		line 489 in file "src/usb/usb_device.c"
 31026 ;; Parameters:    Size  Location     Type
 31027 ;;		None
 31028 ;; Auto vars:     Size  Location     Type
 31029 ;;  i               1   29[COMRAM] unsigned char 
 31030 ;; Return value:  Size  Location     Type
 31031 ;;		None               void
 31032 ;; Registers used:
 31033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31034 ;; Tracked objects:
 31035 ;;		On entry : 0/0
 31036 ;;		On exit  : 0/0
 31037 ;;		Unchanged: 0/0
 31038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31043 ;;Total ram usage:        1 bytes
 31044 ;; Hardware stack levels used:    1
 31045 ;; Hardware stack levels required when called:   14
 31046 ;; This function calls:
 31047 ;;		_USBCtrlEPAllowStatusStage
 31048 ;;		_USBCtrlEPService
 31049 ;;		_USBStallHandler
 31050 ;;		_USBSuspend
 31051 ;;		_USBWakeFromSuspend
 31052 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31053 ;;		i1_USBDeviceInit
 31054 ;; This function is called by:
 31055 ;;		_SYS_InterruptLow
 31056 ;; This function uses a non-reentrant model
 31057 ;;
 31058                           
 31059                           	psect	text87
 31060  00810E                     __ptext87:
 31061                           	opt stack 0
 31062  00810E                     _USBDeviceTasks:
 31063                           	opt stack 3
 31064                           
 31065                           ;usb_device.c: 491: uint8_t i;
 31066                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 31067                           
 31068                           ;incstack = 0
 31069  00810E  044B               	decf	_USBDeviceState,w,c	;volatile
 31070  008110  B4D8               	btfsc	status,2,c
 31071                           
 31072                           ;usb_device.c: 603: {
 31073                           ;usb_device.c: 613: if(!UCONbits.SE0)
 31074  008112  BA65               	btfsc	3941,5,c	;volatile
 31075  008114  D008               	goto	i1l14710
 31076                           
 31077                           ;usb_device.c: 614: {
 31078                           ;usb_device.c: 615: {UIR = 0;};
 31079  008116  0E00               	movlw	0
 31080  008118  6E62               	movwf	3938,c	;volatile
 31081                           
 31082                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 31083  00811A  010F               	movlb	15	; () banked
 31084  00811C  8136               	bsf	54,0,b	;volatile
 31085                           
 31086                           ; BSR set to: 15
 31087                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 31088  00811E  010F               	movlb	15	; () banked
 31089  008120  8936               	bsf	54,4,b	;volatile
 31090                           
 31091                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 31092  008122  0E02               	movlw	2
 31093  008124  6E4B               	movwf	_USBDeviceState,c	;volatile
 31094  008126                     i1l14710:
 31095                           
 31096                           ;usb_device.c: 622: }
 31097                           ;usb_device.c: 623: }
 31098                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 31099  008126  A462               	btfss	3938,2,c	;volatile
 31100  008128  D006               	goto	i1l14718
 31101  00812A  010F               	movlb	15	; () banked
 31102  00812C  A536               	btfss	54,2,b	;volatile
 31103  00812E  D003               	goto	i1l14718
 31104                           
 31105                           ; BSR set to: 15
 31106                           ;usb_device.c: 640: {
 31107                           ;usb_device.c: 641: (UIR &= 0xFB);
 31108  008130  9462               	bcf	3938,2,c	;volatile
 31109                           
 31110                           ; BSR set to: 15
 31111                           ;usb_device.c: 645: USBWakeFromSuspend();
 31112  008132  ECE8  F05C         	call	_USBWakeFromSuspend	;wreg free
 31113  008136                     i1l14718:
 31114                           
 31115                           ;usb_device.c: 647: }
 31116                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 31117  008136  A265               	btfss	3941,1,c	;volatile
 31118  008138  D002               	goto	i1l1234
 31119                           
 31120                           ;usb_device.c: 653: {
 31121                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 31122  00813A  98A1               	bcf	4001,4,c	;volatile
 31123                           
 31124                           ;usb_device.c: 655: return;
 31125  00813C  0012               	return	
 31126  00813E                     i1l1234:
 31127                           
 31128                           ;usb_device.c: 656: }
 31129                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 31130  00813E  A062               	btfss	3938,0,c	;volatile
 31131  008140  D009               	goto	i1l14732
 31132  008142  010F               	movlb	15	; () banked
 31133  008144  A136               	btfss	54,0,b	;volatile
 31134  008146  D006               	goto	i1l14732
 31135                           
 31136                           ; BSR set to: 15
 31137                           ;usb_device.c: 669: {
 31138                           ;usb_device.c: 670: USBDeviceInit();
 31139  008148  EC6E  F042         	call	i1_USBDeviceInit	;wreg free
 31140                           
 31141                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 31142  00814C  88A0               	bsf	4000,4,c	;volatile
 31143                           
 31144                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 31145  00814E  0E04               	movlw	4
 31146  008150  6E4B               	movwf	_USBDeviceState,c	;volatile
 31147                           
 31148                           ;usb_device.c: 686: (UIR &= 0xFE);
 31149  008152  9062               	bcf	3938,0,c	;volatile
 31150  008154                     i1l14732:
 31151                           
 31152                           ;usb_device.c: 687: }
 31153                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 31154  008154  A862               	btfss	3938,4,c	;volatile
 31155  008156  D006               	goto	i1l14740
 31156  008158  010F               	movlb	15	; () banked
 31157  00815A  A936               	btfss	54,4,b	;volatile
 31158  00815C  D003               	goto	i1l14740
 31159                           
 31160                           ; BSR set to: 15
 31161                           ;usb_device.c: 693: {
 31162                           ;usb_device.c: 698: USBSuspend();
 31163  00815E  EC41  F05D         	call	_USBSuspend	;wreg free
 31164                           
 31165                           ;usb_device.c: 701: (UIR &= 0xEF);
 31166  008162  9862               	bcf	3938,4,c	;volatile
 31167  008164                     i1l14740:
 31168                           
 31169                           ;usb_device.c: 702: }
 31170                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 31171  008164  AC62               	btfss	3938,6,c	;volatile
 31172  008166  D019               	goto	i1l14756
 31173                           
 31174                           ;usb_device.c: 705: {
 31175                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 31176  008168  010F               	movlb	15	; () banked
 31177  00816A  AD36               	btfss	54,6,b	;volatile
 31178  00816C  D00E               	goto	i1l14746
 31179                           
 31180                           ; BSR set to: 15
 31181                           ;usb_device.c: 707: {
 31182                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 31183  00816E  0E00               	movlw	0
 31184  008170  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31185  008172  0E73               	movlw	115
 31186  008174  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31187  008176  0E00               	movlw	0
 31188  008178  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31189  00817A  0E00               	movlw	0
 31190  00817C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31191  00817E  0E00               	movlw	0
 31192  008180  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31193  008182  0E01               	movlw	1
 31194  008184  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31195  008186  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31196  00818A                     i1l14746:
 31197                           
 31198                           ;usb_device.c: 709: }
 31199                           ;usb_device.c: 710: (UIR &= 0xBF);
 31200  00818A  9C62               	bcf	3938,6,c	;volatile
 31201                           
 31202                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 31203  00818C  504E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 31204  00818E  A4D8               	btfss	status,2,c
 31205                           
 31206                           ;usb_device.c: 736: {
 31207                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 31208  008190  064E               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 31209                           
 31210                           ;usb_device.c: 738: }
 31211                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 31212  008192  504E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 31213  008194  B4D8               	btfsc	status,2,c
 31214                           
 31215                           ;usb_device.c: 745: {
 31216                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 31217  008196  ECD8  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 31218  00819A                     i1l14756:
 31219                           
 31220                           ;usb_device.c: 747: }
 31221                           ;usb_device.c: 749: }
 31222                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 31223  00819A  AA62               	btfss	3938,5,c	;volatile
 31224  00819C  D004               	goto	i1l14762
 31225  00819E  010F               	movlb	15	; () banked
 31226  0081A0  BB36               	btfsc	54,5,b	;volatile
 31227                           
 31228                           ; BSR set to: 15
 31229                           ;usb_device.c: 752: {
 31230                           ;usb_device.c: 753: USBStallHandler();
 31231  0081A2  EC24  F05B         	call	_USBStallHandler	;wreg free
 31232  0081A6                     i1l14762:
 31233                           
 31234                           ;usb_device.c: 754: }
 31235                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 31236  0081A6  A262               	btfss	3938,1,c	;volatile
 31237  0081A8  D012               	goto	i1l14770
 31238  0081AA  010F               	movlb	15	; () banked
 31239  0081AC  A336               	btfss	54,1,b	;volatile
 31240  0081AE  D00F               	goto	i1l14770
 31241                           
 31242                           ; BSR set to: 15
 31243                           ;usb_device.c: 757: {
 31244                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 31245  0081B0  0E7F               	movlw	127
 31246  0081B2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31247  0081B4  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31248  0081B6  0E00               	movlw	0
 31249  0081B8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31250  0081BA  0E00               	movlw	0
 31251  0081BC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31252  0081BE  0E00               	movlw	0
 31253  0081C0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31254  0081C2  0E01               	movlw	1
 31255  0081C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31256  0081C6  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31257                           
 31258                           ;usb_device.c: 759: {UEIR = 0;};
 31259  0081CA  0E00               	movlw	0
 31260  0081CC  6E63               	movwf	3939,c	;volatile
 31261  0081CE                     i1l14770:
 31262                           
 31263                           ;usb_device.c: 767: }
 31264                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 31265  0081CE  0E04               	movlw	4
 31266  0081D0  604B               	cpfslt	_USBDeviceState,c	;volatile
 31267  0081D2  D002               	goto	i1l1244
 31268                           
 31269                           ;usb_device.c: 775: {
 31270                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 31271  0081D4  98A1               	bcf	4001,4,c	;volatile
 31272                           
 31273                           ;usb_device.c: 777: return;
 31274  0081D6  0012               	return	
 31275  0081D8                     i1l1244:
 31276                           
 31277                           ;usb_device.c: 778: }
 31278                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 31279  0081D8  010F               	movlb	15	; () banked
 31280  0081DA  A736               	btfss	54,3,b	;volatile
 31281  0081DC  D039               	goto	i1l1245
 31282                           
 31283                           ; BSR set to: 15
 31284                           ;usb_device.c: 784: {
 31285                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 31286  0081DE  0E00               	movlw	0
 31287  0081E0  6E1E               	movwf	USBDeviceTasks@i,c
 31288  0081E2                     i1l14776:
 31289                           
 31290                           ; BSR set to: 15
 31291  0081E2  0E03               	movlw	3
 31292  0081E4  641E               	cpfsgt	USBDeviceTasks@i,c
 31293  0081E6  D001               	goto	i1l1246
 31294  0081E8  D033               	goto	i1l1245
 31295  0081EA                     i1l1246:
 31296                           
 31297                           ;usb_device.c: 786: {
 31298                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 31299  0081EA  A662               	btfss	3938,3,c	;volatile
 31300  0081EC  D031               	goto	i1l1245
 31301                           
 31302                           ;usb_device.c: 788: {
 31303                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 31304  0081EE  CF64 F058          	movff	3940,_USTATcopy	;volatile
 31305                           
 31306                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 31307  0081F2  3058               	rrcf	_USTATcopy,w,c	;volatile
 31308  0081F4  32E8               	rrcf	wreg,f,c
 31309  0081F6  32E8               	rrcf	wreg,f,c
 31310  0081F8  0B0F               	andlw	15
 31311  0081FA  6E50               	movwf	_endpoint_number,c	;volatile
 31312                           
 31313                           ;usb_device.c: 793: (UIR &= 0xF7);
 31314  0081FC  9662               	bcf	3938,3,c	;volatile
 31315                           
 31316                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 31317  0081FE  B458               	btfsc	_USTATcopy,2,c	;volatile
 31318  008200  D007               	goto	i1l14790
 31319                           
 31320                           ;usb_device.c: 799: {
 31321                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 31322  008202  5050               	movf	_endpoint_number,w,c	;volatile
 31323  008204  0D01               	mullw	1
 31324  008206  0E97               	movlw	low _ep_data_out
 31325  008208  24F3               	addwf	prodl,w,c
 31326  00820A  6ED9               	movwf	fsr2l,c
 31327  00820C  0E00               	movlw	high _ep_data_out
 31328  00820E  D006               	goto	L15
 31329  008210                     i1l14790:
 31330                           
 31331                           ;usb_device.c: 802: else
 31332                           ;usb_device.c: 803: {
 31333                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 31334  008210  5050               	movf	_endpoint_number,w,c	;volatile
 31335  008212  0D01               	mullw	1
 31336  008214  0E95               	movlw	low _ep_data_in
 31337  008216  24F3               	addwf	prodl,w,c
 31338  008218  6ED9               	movwf	fsr2l,c
 31339  00821A  0E00               	movlw	high _ep_data_in
 31340  00821C                     L15:
 31341  00821C  20F4               	addwfc	prodh,w,c
 31342  00821E  6EDA               	movwf	fsr2h,c
 31343  008220  0100               	movlb	0	; () banked
 31344  008222  70DF               	btg	indf2,0,c
 31345                           
 31346                           ; BSR set to: 0
 31347                           ;usb_device.c: 805: }
 31348                           ;usb_device.c: 810: if(endpoint_number == 0)
 31349                           
 31350                           ; BSR set to: 0
 31351  008224  5050               	movf	_endpoint_number,w,c	;volatile
 31352  008226  A4D8               	btfss	status,2,c
 31353  008228  D003               	goto	i1l14796
 31354                           
 31355                           ; BSR set to: 0
 31356                           ;usb_device.c: 811: {
 31357                           ;usb_device.c: 812: USBCtrlEPService();
 31358  00822A  ECE4  F04D         	call	_USBCtrlEPService	;wreg free
 31359                           
 31360                           ;usb_device.c: 813: }
 31361  00822E  D00E               	goto	i1l14798
 31362  008230                     i1l14796:
 31363                           
 31364                           ;usb_device.c: 814: else
 31365                           ;usb_device.c: 815: {
 31366                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 31367  008230  0E00               	movlw	0
 31368  008232  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31369  008234  0E72               	movlw	114
 31370  008236  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31371  008238  0E58               	movlw	low _USTATcopy
 31372  00823A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31373  00823C  0E00               	movlw	high _USTATcopy
 31374  00823E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31375  008240  0E00               	movlw	0
 31376  008242  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31377  008244  0E00               	movlw	0
 31378  008246  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31379  008248  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31380  00824C                     i1l14798:
 31381  00824C  2A1E               	incf	USBDeviceTasks@i,f,c
 31382  00824E  D7C9               	goto	i1l14776
 31383  008250                     i1l1245:
 31384                           
 31385                           ;usb_device.c: 822: }
 31386                           ;usb_device.c: 823: }
 31387                           ;usb_device.c: 824: }
 31388                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 31389  008250  98A1               	bcf	4001,4,c	;volatile
 31390  008252  0012               	return		;funcret
 31391  008254                     __end_of_USBDeviceTasks:
 31392                           	opt stack 0
 31393                           pclatu	equ	0xFFB
 31394                           pclath	equ	0xFFA
 31395                           tblptru	equ	0xFF8
 31396                           tblptrh	equ	0xFF7
 31397                           tblptrl	equ	0xFF6
 31398                           tablat	equ	0xFF5
 31399                           prodh	equ	0xFF4
 31400                           prodl	equ	0xFF3
 31401                           intcon	equ	0xFF2
 31402                           intcon2	equ	0xFF1
 31403                           intcon3	equ	0xFF0
 31404                           indf0	equ	0xFEF
 31405                           postinc0	equ	0xFEE
 31406                           plusw0	equ	0xFEB
 31407                           fsr0h	equ	0xFEA
 31408                           fsr0l	equ	0xFE9
 31409                           wreg	equ	0xFE8
 31410                           indf1	equ	0xFE7
 31411                           postinc1	equ	0xFE6
 31412                           postdec1	equ	0xFE5
 31413                           plusw1	equ	0xFE3
 31414                           fsr1h	equ	0xFE2
 31415                           fsr1l	equ	0xFE1
 31416                           bsr	equ	0xFE0
 31417                           indf2	equ	0xFDF
 31418                           postinc2	equ	0xFDE
 31419                           postdec2	equ	0xFDD
 31420                           plusw2	equ	0xFDB
 31421                           fsr2h	equ	0xFDA
 31422                           fsr2l	equ	0xFD9
 31423                           status	equ	0xFD8
 31424                           
 31425 ;; *************** function i1_USBDeviceInit *****************
 31426 ;; Defined at:
 31427 ;;		line 298 in file "src/usb/usb_device.c"
 31428 ;; Parameters:    Size  Location     Type
 31429 ;;		None
 31430 ;; Auto vars:     Size  Location     Type
 31431 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 31432 ;; Return value:  Size  Location     Type
 31433 ;;		None               void
 31434 ;; Registers used:
 31435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31436 ;; Tracked objects:
 31437 ;;		On entry : 0/0
 31438 ;;		On exit  : 0/0
 31439 ;;		Unchanged: 0/0
 31440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31445 ;;Total ram usage:        1 bytes
 31446 ;; Hardware stack levels used:    1
 31447 ;; Hardware stack levels required when called:    7
 31448 ;; This function calls:
 31449 ;;		i1_memset
 31450 ;; This function is called by:
 31451 ;;		_USBDeviceTasks
 31452 ;; This function uses a non-reentrant model
 31453 ;;
 31454                           
 31455                           	psect	text88
 31456  0084DC                     __ptext88:
 31457                           	opt stack 0
 31458  0084DC                     i1_USBDeviceInit:
 31459                           	opt stack 9
 31460                           
 31461                           ;usb_device.c: 300: uint8_t i;
 31462                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 31463                           
 31464                           ;incstack = 0
 31465  0084DC  98A0               	bcf	4000,4,c	;volatile
 31466                           
 31467                           ;usb_device.c: 305: {UEIR = 0;};
 31468  0084DE  0E00               	movlw	0
 31469  0084E0  6E63               	movwf	3939,c	;volatile
 31470                           
 31471                           ;usb_device.c: 308: {UIR = 0;};
 31472  0084E2  0E00               	movlw	0
 31473  0084E4  6E62               	movwf	3938,c	;volatile
 31474                           
 31475                           ;usb_device.c: 311: UEP0 = 0;
 31476  0084E6  0E00               	movlw	0
 31477  0084E8  010F               	movlb	15	; () banked
 31478  0084EA  6F26               	movwf	38,b	;volatile
 31479                           
 31480                           ; BSR set to: 15
 31481                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
 31482  0084EC  0E27               	movlw	39
 31483  0084EE  6E01               	movwf	i1memset@p1,c
 31484  0084F0  0E0F               	movlw	15
 31485  0084F2  6E02               	movwf	i1memset@p1+1,c
 31486  0084F4  0E00               	movlw	0
 31487  0084F6  6E04               	movwf	i1memset@c+1,c
 31488  0084F8  0E00               	movlw	0
 31489  0084FA  6E03               	movwf	i1memset@c,c
 31490  0084FC  0E00               	movlw	0
 31491  0084FE  6E06               	movwf	i1memset@n+1,c
 31492  008500  0E01               	movlw	1
 31493  008502  6E05               	movwf	i1memset@n,c
 31494  008504  EC16  F05D         	call	i1_memset	;wreg free
 31495                           
 31496                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 31497  008508  0E16               	movlw	22
 31498  00850A  010F               	movlb	15	; () banked
 31499  00850C  6F39               	movwf	57,b	;volatile
 31500                           
 31501                           ; BSR set to: 15
 31502  00850E  0E9F               	movlw	159
 31503  008510  010F               	movlb	15	; () banked
 31504  008512  6F37               	movwf	55,b	;volatile
 31505                           
 31506                           ; BSR set to: 15
 31507  008514  0E7B               	movlw	123
 31508  008516  010F               	movlb	15	; () banked
 31509  008518  6F36               	movwf	54,b	;volatile
 31510                           
 31511                           ; BSR set to: 15
 31512                           ;usb_device.c: 318: ;
 31513                           ;usb_device.c: 321: ;
 31514                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 31515  00851A  0E00               	movlw	0
 31516  00851C  6E09               	movwf	i1USBDeviceInit@i,c
 31517  00851E                     i1l13594:
 31518                           
 31519                           ; BSR set to: 15
 31520  00851E  0E07               	movlw	7
 31521  008520  6409               	cpfsgt	i1USBDeviceInit@i,c
 31522  008522  D001               	goto	i1l13598
 31523  008524  D00E               	goto	i1l1222
 31524  008526                     i1l13598:
 31525                           
 31526                           ;usb_device.c: 325: {
 31527                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 31528  008526  5009               	movf	i1USBDeviceInit@i,w,c
 31529  008528  0D04               	mullw	4
 31530  00852A  0E00               	movlw	0
 31531  00852C  24F3               	addwf	prodl,w,c
 31532  00852E  6ED9               	movwf	fsr2l,c
 31533  008530  0E0D               	movlw	13
 31534  008532  20F4               	addwfc	prodh,w,c
 31535  008534  6EDA               	movwf	fsr2h,c
 31536  008536  6ADE               	clrf	postinc2,c
 31537  008538  6ADE               	clrf	postinc2,c
 31538  00853A  6ADE               	clrf	postinc2,c
 31539  00853C  6ADD               	clrf	postdec2,c
 31540  00853E  2A09               	incf	i1USBDeviceInit@i,f,c
 31541  008540  D7EE               	goto	i1l13594
 31542  008542                     i1l1222:
 31543                           
 31544                           ;usb_device.c: 327: }
 31545                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 31546  008542  8C65               	bsf	3941,6,c	;volatile
 31547                           
 31548                           ;usb_device.c: 333: UADDR = 0x00;
 31549  008544  0E00               	movlw	0
 31550  008546  010F               	movlb	15	; () banked
 31551  008548  6F38               	movwf	56,b	;volatile
 31552                           
 31553                           ; BSR set to: 15
 31554                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 31555  00854A  9865               	bcf	3941,4,c	;volatile
 31556                           
 31557                           ; BSR set to: 15
 31558                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 31559  00854C  9C65               	bcf	3941,6,c	;volatile
 31560                           
 31561                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 31562  00854E  D00C               	goto	i1l13618
 31563  008550                     i1l13610:
 31564                           
 31565                           ;usb_device.c: 343: {
 31566                           ;usb_device.c: 344: (UIR &= 0xF7);
 31567  008550  9662               	bcf	3938,3,c	;volatile
 31568                           
 31569                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 31570  008552  0E00               	movlw	0
 31571  008554  0100               	movlb	0	; () banked
 31572  008556  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 31573                           
 31574                           ; BSR set to: 0
 31575                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 31576  008558  0E00               	movlw	0
 31577  00855A  0100               	movlb	0	; () banked
 31578  00855C  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31579                           
 31580                           ; BSR set to: 0
 31581                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 31582  00855E  0E00               	movlw	0
 31583  008560  0100               	movlb	0	; () banked
 31584  008562  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31585  008564  0E00               	movlw	0
 31586  008566  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31587  008568                     i1l13618:
 31588  008568  B662               	btfsc	3938,3,c	;volatile
 31589  00856A  D7F2               	goto	i1l13610
 31590                           
 31591                           ;usb_device.c: 349: }
 31592                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 31593  00856C  0E01               	movlw	1
 31594  00856E  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 31595                           
 31596                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 31597  008570  0E01               	movlw	1
 31598  008572  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 31599                           
 31600                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 31601  008574  0E00               	movlw	0
 31602  008576  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 31603                           
 31604                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 31605  008578  0E00               	movlw	0
 31606  00857A  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 31607                           
 31608                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 31609  00857C  0E00               	movlw	0
 31610  00857E  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31611                           
 31612                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
 31613  008580  0E00               	movlw	0
 31614  008582  6E09               	movwf	i1USBDeviceInit@i,c
 31615  008584                     i1l13622:
 31616  008584  0E01               	movlw	1
 31617  008586  6409               	cpfsgt	i1USBDeviceInit@i,c
 31618  008588  D001               	goto	i1l13626
 31619  00858A  D02E               	goto	i1l13632
 31620  00858C                     i1l13626:
 31621                           
 31622                           ;usb_device.c: 363: {
 31623                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 31624  00858C  5009               	movf	i1USBDeviceInit@i,w,c
 31625  00858E  0D02               	mullw	2
 31626  008590  0E8B               	movlw	low _pBDTEntryIn
 31627  008592  24F3               	addwf	prodl,w,c
 31628  008594  6ED9               	movwf	fsr2l,c
 31629  008596  0E00               	movlw	high _pBDTEntryIn
 31630  008598  20F4               	addwfc	prodh,w,c
 31631  00859A  6EDA               	movwf	fsr2h,c
 31632  00859C  0E00               	movlw	0
 31633  00859E  6EDE               	movwf	postinc2,c
 31634  0085A0  0E00               	movlw	0
 31635  0085A2  6EDD               	movwf	postdec2,c
 31636                           
 31637                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 31638  0085A4  5009               	movf	i1USBDeviceInit@i,w,c
 31639  0085A6  0D02               	mullw	2
 31640  0085A8  0E8F               	movlw	low _pBDTEntryOut
 31641  0085AA  24F3               	addwf	prodl,w,c
 31642  0085AC  6ED9               	movwf	fsr2l,c
 31643  0085AE  0E00               	movlw	high _pBDTEntryOut
 31644  0085B0  20F4               	addwfc	prodh,w,c
 31645  0085B2  6EDA               	movwf	fsr2h,c
 31646  0085B4  0E00               	movlw	0
 31647  0085B6  6EDE               	movwf	postinc2,c
 31648  0085B8  0E00               	movlw	0
 31649  0085BA  6EDD               	movwf	postdec2,c
 31650                           
 31651                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 31652  0085BC  5009               	movf	i1USBDeviceInit@i,w,c
 31653  0085BE  0D01               	mullw	1
 31654  0085C0  0E95               	movlw	low _ep_data_in
 31655  0085C2  24F3               	addwf	prodl,w,c
 31656  0085C4  6ED9               	movwf	fsr2l,c
 31657  0085C6  0E00               	movlw	high _ep_data_in
 31658  0085C8  20F4               	addwfc	prodh,w,c
 31659  0085CA  6EDA               	movwf	fsr2h,c
 31660  0085CC  0E00               	movlw	0
 31661  0085CE  6EDF               	movwf	indf2,c
 31662                           
 31663                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 31664  0085D0  5009               	movf	i1USBDeviceInit@i,w,c
 31665  0085D2  0D01               	mullw	1
 31666  0085D4  0E97               	movlw	low _ep_data_out
 31667  0085D6  24F3               	addwf	prodl,w,c
 31668  0085D8  6ED9               	movwf	fsr2l,c
 31669  0085DA  0E00               	movlw	high _ep_data_out
 31670  0085DC  20F4               	addwfc	prodh,w,c
 31671  0085DE  6EDA               	movwf	fsr2h,c
 31672  0085E0  0E00               	movlw	0
 31673  0085E2  6EDF               	movwf	indf2,c
 31674  0085E4  2A09               	incf	i1USBDeviceInit@i,f,c
 31675  0085E6  D7CE               	goto	i1l13622
 31676  0085E8                     i1l13632:
 31677                           
 31678                           ;usb_device.c: 368: }
 31679                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31680  0085E8  0E08               	movlw	8
 31681  0085EA  0100               	movlb	0	; () banked
 31682  0085EC  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 31683  0085EE  0E0D               	movlw	13
 31684  0085F0  0100               	movlb	0	; () banked
 31685  0085F2  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31686                           
 31687                           ; BSR set to: 0
 31688                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 31689  0085F4  0E16               	movlw	22
 31690  0085F6  010F               	movlb	15	; () banked
 31691  0085F8  6F26               	movwf	38,b	;volatile
 31692                           
 31693                           ; BSR set to: 15
 31694                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31695  0085FA  0E0D               	movlw	13
 31696  0085FC  010D               	movlb	13	; () banked
 31697  0085FE  6F03               	movwf	3,b	;volatile
 31698  008600  0E20               	movlw	32
 31699  008602  6F02               	movwf	2,b	;volatile
 31700                           
 31701                           ; BSR set to: 13
 31702                           ;usb_device.c: 376: BDT[0].CNT = 8;
 31703  008604  0E08               	movlw	8
 31704  008606  010D               	movlb	13	; () banked
 31705  008608  6F01               	movwf	1,b	;volatile
 31706                           
 31707                           ; BSR set to: 13
 31708                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 31709  00860A  0E04               	movlw	4
 31710  00860C  010D               	movlb	13	; () banked
 31711  00860E  6F00               	movwf	0,b	;volatile
 31712                           
 31713                           ; BSR set to: 13
 31714                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 31715  008610  010D               	movlb	13	; () banked
 31716  008612  8F00               	bsf	0,7,b	;volatile
 31717                           
 31718                           ; BSR set to: 13
 31719                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 31720  008614  0E00               	movlw	0
 31721  008616  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 31722                           
 31723                           ; BSR set to: 13
 31724                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 31725  008618  0E00               	movlw	0
 31726  00861A  6E4B               	movwf	_USBDeviceState,c	;volatile
 31727                           
 31728                           ; BSR set to: 13
 31729  00861C  0012               	return		;funcret
 31730  00861E                     __end_ofi1_USBDeviceInit:
 31731                           	opt stack 0
 31732                           pclatu	equ	0xFFB
 31733                           pclath	equ	0xFFA
 31734                           tblptru	equ	0xFF8
 31735                           tblptrh	equ	0xFF7
 31736                           tblptrl	equ	0xFF6
 31737                           tablat	equ	0xFF5
 31738                           prodh	equ	0xFF4
 31739                           prodl	equ	0xFF3
 31740                           intcon	equ	0xFF2
 31741                           intcon2	equ	0xFF1
 31742                           intcon3	equ	0xFF0
 31743                           indf0	equ	0xFEF
 31744                           postinc0	equ	0xFEE
 31745                           plusw0	equ	0xFEB
 31746                           fsr0h	equ	0xFEA
 31747                           fsr0l	equ	0xFE9
 31748                           wreg	equ	0xFE8
 31749                           indf1	equ	0xFE7
 31750                           postinc1	equ	0xFE6
 31751                           postdec1	equ	0xFE5
 31752                           plusw1	equ	0xFE3
 31753                           fsr1h	equ	0xFE2
 31754                           fsr1l	equ	0xFE1
 31755                           bsr	equ	0xFE0
 31756                           indf2	equ	0xFDF
 31757                           postinc2	equ	0xFDE
 31758                           postdec2	equ	0xFDD
 31759                           plusw2	equ	0xFDB
 31760                           fsr2h	equ	0xFDA
 31761                           fsr2l	equ	0xFD9
 31762                           status	equ	0xFD8
 31763                           
 31764 ;; *************** function _USBWakeFromSuspend *****************
 31765 ;; Defined at:
 31766 ;;		line 2302 in file "src/usb/usb_device.c"
 31767 ;; Parameters:    Size  Location     Type
 31768 ;;		None
 31769 ;; Auto vars:     Size  Location     Type
 31770 ;;		None
 31771 ;; Return value:  Size  Location     Type
 31772 ;;		None               void
 31773 ;; Registers used:
 31774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31775 ;; Tracked objects:
 31776 ;;		On entry : 0/0
 31777 ;;		On exit  : 0/0
 31778 ;;		Unchanged: 0/0
 31779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31784 ;;Total ram usage:        0 bytes
 31785 ;; Hardware stack levels used:    1
 31786 ;; Hardware stack levels required when called:   10
 31787 ;; This function calls:
 31788 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31789 ;; This function is called by:
 31790 ;;		_USBDeviceTasks
 31791 ;; This function uses a non-reentrant model
 31792 ;;
 31793                           
 31794                           	psect	text89
 31795  00B9D0                     __ptext89:
 31796                           	opt stack 0
 31797  00B9D0                     _USBWakeFromSuspend:
 31798                           	opt stack 6
 31799                           
 31800                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 31801                           
 31802                           ; BSR set to: 13
 31803                           ;incstack = 0
 31804  00B9D0  0E00               	movlw	0
 31805  00B9D2  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31806                           
 31807                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 31808  00B9D4  0E00               	movlw	0
 31809  00B9D6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31810  00B9D8  0E74               	movlw	116
 31811  00B9DA  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31812  00B9DC  0E00               	movlw	0
 31813  00B9DE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31814  00B9E0  0E00               	movlw	0
 31815  00B9E2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31816  00B9E4  0E00               	movlw	0
 31817  00B9E6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31818  00B9E8  0E00               	movlw	0
 31819  00B9EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31820  00B9EC  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31821                           
 31822                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 31823  00B9F0  9265               	bcf	3941,1,c	;volatile
 31824                           
 31825                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 31826  00B9F2  010F               	movlb	15	; () banked
 31827  00B9F4  9536               	bcf	54,2,b	;volatile
 31828                           
 31829                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 31830  00B9F6  D001               	goto	i1l13126
 31831  00B9F8                     i1l13124:
 31832                           
 31833                           ;usb_device.c: 2342: {
 31834                           ;usb_device.c: 2343: (UIR &= 0xFB);
 31835  00B9F8  9462               	bcf	3938,2,c	;volatile
 31836  00B9FA                     i1l13126:
 31837  00B9FA  A462               	btfss	3938,2,c	;volatile
 31838  00B9FC  0012               	return	
 31839  00B9FE  D7FC               	goto	i1l13124
 31840  00BA00                     __end_of_USBWakeFromSuspend:
 31841                           	opt stack 0
 31842                           pclatu	equ	0xFFB
 31843                           pclath	equ	0xFFA
 31844                           tblptru	equ	0xFF8
 31845                           tblptrh	equ	0xFF7
 31846                           tblptrl	equ	0xFF6
 31847                           tablat	equ	0xFF5
 31848                           prodh	equ	0xFF4
 31849                           prodl	equ	0xFF3
 31850                           intcon	equ	0xFF2
 31851                           intcon2	equ	0xFF1
 31852                           intcon3	equ	0xFF0
 31853                           indf0	equ	0xFEF
 31854                           postinc0	equ	0xFEE
 31855                           plusw0	equ	0xFEB
 31856                           fsr0h	equ	0xFEA
 31857                           fsr0l	equ	0xFE9
 31858                           wreg	equ	0xFE8
 31859                           indf1	equ	0xFE7
 31860                           postinc1	equ	0xFE6
 31861                           postdec1	equ	0xFE5
 31862                           plusw1	equ	0xFE3
 31863                           fsr1h	equ	0xFE2
 31864                           fsr1l	equ	0xFE1
 31865                           bsr	equ	0xFE0
 31866                           indf2	equ	0xFDF
 31867                           postinc2	equ	0xFDE
 31868                           postdec2	equ	0xFDD
 31869                           plusw2	equ	0xFDB
 31870                           fsr2h	equ	0xFDA
 31871                           fsr2l	equ	0xFD9
 31872                           status	equ	0xFD8
 31873                           
 31874 ;; *************** function _USBSuspend *****************
 31875 ;; Defined at:
 31876 ;;		line 2245 in file "src/usb/usb_device.c"
 31877 ;; Parameters:    Size  Location     Type
 31878 ;;		None
 31879 ;; Auto vars:     Size  Location     Type
 31880 ;;		None
 31881 ;; Return value:  Size  Location     Type
 31882 ;;		None               void
 31883 ;; Registers used:
 31884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31885 ;; Tracked objects:
 31886 ;;		On entry : 0/0
 31887 ;;		On exit  : 0/0
 31888 ;;		Unchanged: 0/0
 31889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31894 ;;Total ram usage:        0 bytes
 31895 ;; Hardware stack levels used:    1
 31896 ;; Hardware stack levels required when called:   10
 31897 ;; This function calls:
 31898 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31899 ;; This function is called by:
 31900 ;;		_USBDeviceTasks
 31901 ;; This function uses a non-reentrant model
 31902 ;;
 31903                           
 31904                           	psect	text90
 31905  00BA82                     __ptext90:
 31906                           	opt stack 0
 31907  00BA82                     _USBSuspend:
 31908                           	opt stack 6
 31909                           
 31910                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 31911                           
 31912                           ;incstack = 0
 31913  00BA82  010F               	movlb	15	; () banked
 31914  00BA84  8536               	bsf	54,2,b	;volatile
 31915                           
 31916                           ; BSR set to: 15
 31917                           ;usb_device.c: 2271: (UIR &= 0xEF);
 31918  00BA86  9862               	bcf	3938,4,c	;volatile
 31919                           
 31920                           ; BSR set to: 15
 31921                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 31922  00BA88  8265               	bsf	3941,1,c	;volatile
 31923                           
 31924                           ; BSR set to: 15
 31925                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 31926  00BA8A  0E01               	movlw	1
 31927  00BA8C  6E47               	movwf	_USBBusIsSuspended,c	;volatile
 31928                           
 31929                           ; BSR set to: 15
 31930                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 31931  00BA8E  0E00               	movlw	0
 31932  00BA90  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31933  00BA92  0E75               	movlw	117
 31934  00BA94  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31935  00BA96  0E00               	movlw	0
 31936  00BA98  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 31937  00BA9A  0E00               	movlw	0
 31938  00BA9C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 31939  00BA9E  0E00               	movlw	0
 31940  00BAA0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31941  00BAA2  0E00               	movlw	0
 31942  00BAA4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31943  00BAA6  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31944  00BAAA  0012               	return		;funcret
 31945  00BAAC                     __end_of_USBSuspend:
 31946                           	opt stack 0
 31947                           pclatu	equ	0xFFB
 31948                           pclath	equ	0xFFA
 31949                           tblptru	equ	0xFF8
 31950                           tblptrh	equ	0xFF7
 31951                           tblptrl	equ	0xFF6
 31952                           tablat	equ	0xFF5
 31953                           prodh	equ	0xFF4
 31954                           prodl	equ	0xFF3
 31955                           intcon	equ	0xFF2
 31956                           intcon2	equ	0xFF1
 31957                           intcon3	equ	0xFF0
 31958                           indf0	equ	0xFEF
 31959                           postinc0	equ	0xFEE
 31960                           plusw0	equ	0xFEB
 31961                           fsr0h	equ	0xFEA
 31962                           fsr0l	equ	0xFE9
 31963                           wreg	equ	0xFE8
 31964                           indf1	equ	0xFE7
 31965                           postinc1	equ	0xFE6
 31966                           postdec1	equ	0xFE5
 31967                           plusw1	equ	0xFE3
 31968                           fsr1h	equ	0xFE2
 31969                           fsr1l	equ	0xFE1
 31970                           bsr	equ	0xFE0
 31971                           indf2	equ	0xFDF
 31972                           postinc2	equ	0xFDE
 31973                           postdec2	equ	0xFDD
 31974                           plusw2	equ	0xFDB
 31975                           fsr2h	equ	0xFDA
 31976                           fsr2l	equ	0xFD9
 31977                           status	equ	0xFD8
 31978                           
 31979 ;; *************** function _USBStallHandler *****************
 31980 ;; Defined at:
 31981 ;;		line 2202 in file "src/usb/usb_device.c"
 31982 ;; Parameters:    Size  Location     Type
 31983 ;;		None
 31984 ;; Auto vars:     Size  Location     Type
 31985 ;;		None
 31986 ;; Return value:  Size  Location     Type
 31987 ;;		None               void
 31988 ;; Registers used:
 31989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31990 ;; Tracked objects:
 31991 ;;		On entry : 0/0
 31992 ;;		On exit  : 0/0
 31993 ;;		Unchanged: 0/0
 31994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31999 ;;Total ram usage:        1 bytes
 32000 ;; Hardware stack levels used:    1
 32001 ;; Hardware stack levels required when called:    6
 32002 ;; This function calls:
 32003 ;;		Nothing
 32004 ;; This function is called by:
 32005 ;;		_USBDeviceTasks
 32006 ;; This function uses a non-reentrant model
 32007 ;;
 32008                           
 32009                           	psect	text91
 32010  00B648                     __ptext91:
 32011                           	opt stack 0
 32012  00B648                     _USBStallHandler:
 32013                           	opt stack 10
 32014                           
 32015                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 32016                           
 32017                           ;incstack = 0
 32018  00B648  010F               	movlb	15	; () banked
 32019  00B64A  A126               	btfss	38,0,b	;volatile
 32020  00B64C  D01E               	goto	i1l1384
 32021                           
 32022                           ; BSR set to: 15
 32023                           ;usb_device.c: 2215: {
 32024                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 32025  00B64E  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32026  00B652  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32027  00B656  0E80               	movlw	128
 32028  00B658  18DE               	xorwf	postinc2,w,c
 32029  00B65A  A4D8               	btfss	status,2,c
 32030  00B65C  D014               	goto	i1l13148
 32031                           
 32032                           ; BSR set to: 15
 32033  00B65E  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32034  00B662  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32035  00B666  0E84               	movlw	132
 32036  00B668  18DE               	xorwf	postinc2,w,c
 32037  00B66A  A4D8               	btfss	status,2,c
 32038  00B66C  D00C               	goto	i1l13148
 32039                           
 32040                           ; BSR set to: 15
 32041                           ;usb_device.c: 2218: {
 32042                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32043  00B66E  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32044  00B672  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32045  00B676  0E0C               	movlw	12
 32046  00B678  6EDF               	movwf	indf2,c
 32047                           
 32048                           ; BSR set to: 15
 32049                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 32050  00B67A  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32051  00B67E  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32052  00B682  0E00               	movlw	0
 32053  00B684  8EDB               	bsf	plusw2,7,c
 32054  00B686                     i1l13148:
 32055                           
 32056                           ; BSR set to: 15
 32057                           ;usb_device.c: 2222: }
 32058                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 32059  00B686  010F               	movlb	15	; () banked
 32060  00B688  9126               	bcf	38,0,b	;volatile
 32061  00B68A                     i1l1384:
 32062                           
 32063                           ; BSR set to: 15
 32064                           ;usb_device.c: 2224: }
 32065                           ;usb_device.c: 2226: (UIR &= 0xDF);
 32066  00B68A  9A62               	bcf	3938,5,c	;volatile
 32067                           
 32068                           ; BSR set to: 15
 32069  00B68C  0012               	return		;funcret
 32070  00B68E                     __end_of_USBStallHandler:
 32071                           	opt stack 0
 32072                           pclatu	equ	0xFFB
 32073                           pclath	equ	0xFFA
 32074                           tblptru	equ	0xFF8
 32075                           tblptrh	equ	0xFF7
 32076                           tblptrl	equ	0xFF6
 32077                           tablat	equ	0xFF5
 32078                           prodh	equ	0xFF4
 32079                           prodl	equ	0xFF3
 32080                           intcon	equ	0xFF2
 32081                           intcon2	equ	0xFF1
 32082                           intcon3	equ	0xFF0
 32083                           indf0	equ	0xFEF
 32084                           postinc0	equ	0xFEE
 32085                           plusw0	equ	0xFEB
 32086                           fsr0h	equ	0xFEA
 32087                           fsr0l	equ	0xFE9
 32088                           wreg	equ	0xFE8
 32089                           indf1	equ	0xFE7
 32090                           postinc1	equ	0xFE6
 32091                           postdec1	equ	0xFE5
 32092                           plusw1	equ	0xFE3
 32093                           fsr1h	equ	0xFE2
 32094                           fsr1l	equ	0xFE1
 32095                           bsr	equ	0xFE0
 32096                           indf2	equ	0xFDF
 32097                           postinc2	equ	0xFDE
 32098                           postdec2	equ	0xFDD
 32099                           plusw2	equ	0xFDB
 32100                           fsr2h	equ	0xFDA
 32101                           fsr2l	equ	0xFD9
 32102                           status	equ	0xFD8
 32103                           
 32104 ;; *************** function _USBCtrlEPService *****************
 32105 ;; Defined at:
 32106 ;;		line 2369 in file "src/usb/usb_device.c"
 32107 ;; Parameters:    Size  Location     Type
 32108 ;;		None
 32109 ;; Auto vars:     Size  Location     Type
 32110 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 32111 ;; Return value:  Size  Location     Type
 32112 ;;		None               void
 32113 ;; Registers used:
 32114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32115 ;; Tracked objects:
 32116 ;;		On entry : 0/0
 32117 ;;		On exit  : 0/0
 32118 ;;		Unchanged: 0/0
 32119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32124 ;;Total ram usage:        3 bytes
 32125 ;; Hardware stack levels used:    1
 32126 ;; Hardware stack levels required when called:   13
 32127 ;; This function calls:
 32128 ;;		_USBCtrlTrfInHandler
 32129 ;;		_USBCtrlTrfOutHandler
 32130 ;;		_USBCtrlTrfSetupHandler
 32131 ;; This function is called by:
 32132 ;;		_USBDeviceTasks
 32133 ;; This function uses a non-reentrant model
 32134 ;;
 32135                           
 32136                           	psect	text92
 32137  009BC8                     __ptext92:
 32138                           	opt stack 0
 32139  009BC8                     _USBCtrlEPService:
 32140                           	opt stack 3
 32141                           
 32142                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 32143                           
 32144                           ; BSR set to: 15
 32145                           ;incstack = 0
 32146  009BC8  0E2D               	movlw	45
 32147  009BCA  6E4E               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 32148                           
 32149                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 32150  009BCC  C058  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 32151  009BD0  0EFD               	movlw	253
 32152  009BD2  161B               	andwf	??_USBCtrlEPService,f,c
 32153  009BD4  A4D8               	btfss	status,2,c
 32154  009BD6  D057               	goto	i1l13182
 32155                           
 32156                           ;usb_device.c: 2380: {
 32157                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 32158  009BD8  C058  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 32159  009BDC  90D8               	bcf	status,0,c
 32160  009BDE  321B               	rrcf	??_USBCtrlEPService,f,c
 32161  009BE0  0E3F               	movlw	63
 32162  009BE2  161B               	andwf	??_USBCtrlEPService,f,c
 32163  009BE4  501B               	movf	??_USBCtrlEPService,w,c
 32164  009BE6  0D04               	mullw	4
 32165  009BE8  0E00               	movlw	0
 32166  009BEA  24F3               	addwf	prodl,w,c
 32167  009BEC  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 32168  009BEE  0E0D               	movlw	13
 32169  009BF0  20F4               	addwfc	prodh,w,c
 32170  009BF2  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 32171                           
 32172                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 32173  009BF4  C038  F03A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 32174  009BF8  C039  F03B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 32175                           
 32176                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 32177  009BFC  0E04               	movlw	4
 32178  009BFE  1A3A               	xorwf	_pBDTEntryEP0OutNext,f,c
 32179                           
 32180                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 32181  009C00  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32182  009C04  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32183  009C08  30DF               	rrcf	indf2,w,c
 32184  009C0A  32E8               	rrcf	wreg,f,c
 32185  009C0C  0B0F               	andlw	15
 32186  009C0E  0A0D               	xorlw	13
 32187  009C10  A4D8               	btfss	status,2,c
 32188  009C12  D036               	goto	i1l13180
 32189                           
 32190                           ;usb_device.c: 2397: {
 32191                           ;usb_device.c: 2398: unsigned char setup_cnt;
 32192                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 32193  009C14  0E00               	movlw	0
 32194  009C16  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 32195  009C18                     i1l13164:
 32196  009C18  0E07               	movlw	7
 32197  009C1A  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 32198  009C1C  D001               	goto	i1l13168
 32199  009C1E  D023               	goto	i1l13176
 32200  009C20                     i1l13168:
 32201                           
 32202                           ;usb_device.c: 2405: {
 32203                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 32204  009C20  EE20 F002          	lfsr	2,2
 32205  009C24  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32206  009C26  26D9               	addwf	fsr2l,f,c
 32207  009C28  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32208  009C2A  22DA               	addwfc	fsr2h,f,c
 32209  009C2C  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 32210  009C30  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 32211  009C34  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 32212  009C38  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 32213  009C3C  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 32214  009C3E  0D01               	mullw	1
 32215  009C40  0E20               	movlw	32
 32216  009C42  24F3               	addwf	prodl,w,c
 32217  009C44  6EE1               	movwf	fsr1l,c
 32218  009C46  0E0D               	movlw	13
 32219  009C48  20F4               	addwfc	prodh,w,c
 32220  009C4A  6EE2               	movwf	fsr1h,c
 32221  009C4C  CFDF FFE7          	movff	indf2,indf1
 32222                           
 32223                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 32224  009C50  EE20 F002          	lfsr	2,2
 32225  009C54  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32226  009C56  26D9               	addwf	fsr2l,f,c
 32227  009C58  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32228  009C5A  22DA               	addwfc	fsr2h,f,c
 32229  009C5C  2ADE               	incf	postinc2,f,c
 32230  009C5E  0E00               	movlw	0
 32231  009C60  22DD               	addwfc	postdec2,f,c
 32232  009C62  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 32233  009C64  D7D9               	goto	i1l13164
 32234  009C66                     i1l13176:
 32235                           
 32236                           ;usb_device.c: 2408: }
 32237                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 32238  009C66  EE20 F002          	lfsr	2,2
 32239  009C6A  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 32240  009C6C  26D9               	addwf	fsr2l,f,c
 32241  009C6E  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32242  009C70  22DA               	addwfc	fsr2h,f,c
 32243  009C72  0E20               	movlw	32
 32244  009C74  6EDE               	movwf	postinc2,c
 32245  009C76  0E0D               	movlw	13
 32246  009C78  6EDD               	movwf	postdec2,c
 32247                           
 32248                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 32249  009C7A  EC3B  F057         	call	_USBCtrlTrfSetupHandler	;wreg free
 32250                           
 32251                           ;usb_device.c: 2413: }
 32252  009C7E  0012               	return	
 32253  009C80                     i1l13180:
 32254                           
 32255                           ;usb_device.c: 2414: else
 32256                           ;usb_device.c: 2415: {
 32257                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 32258  009C80  EC52  F05A         	call	_USBCtrlTrfOutHandler	;wreg free
 32259                           
 32260                           ;usb_device.c: 2418: }
 32261                           ;usb_device.c: 2419: }
 32262  009C84  0012               	return	
 32263  009C86                     i1l13182:
 32264                           
 32265                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 32266  009C86  5058               	movf	_USTATcopy,w,c	;volatile
 32267  009C88  0BFD               	andlw	253
 32268  009C8A  0A04               	xorlw	4
 32269  009C8C  A4D8               	btfss	status,2,c
 32270  009C8E  0012               	return	
 32271                           
 32272                           ;usb_device.c: 2421: {
 32273                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 32274  009C90  EC3A  F050         	call	_USBCtrlTrfInHandler	;wreg free
 32275  009C94  0012               	return	
 32276  009C96                     __end_of_USBCtrlEPService:
 32277                           	opt stack 0
 32278                           pclatu	equ	0xFFB
 32279                           pclath	equ	0xFFA
 32280                           tblptru	equ	0xFF8
 32281                           tblptrh	equ	0xFF7
 32282                           tblptrl	equ	0xFF6
 32283                           tablat	equ	0xFF5
 32284                           prodh	equ	0xFF4
 32285                           prodl	equ	0xFF3
 32286                           intcon	equ	0xFF2
 32287                           intcon2	equ	0xFF1
 32288                           intcon3	equ	0xFF0
 32289                           indf0	equ	0xFEF
 32290                           postinc0	equ	0xFEE
 32291                           plusw0	equ	0xFEB
 32292                           fsr0h	equ	0xFEA
 32293                           fsr0l	equ	0xFE9
 32294                           wreg	equ	0xFE8
 32295                           indf1	equ	0xFE7
 32296                           postinc1	equ	0xFE6
 32297                           postdec1	equ	0xFE5
 32298                           plusw1	equ	0xFE3
 32299                           fsr1h	equ	0xFE2
 32300                           fsr1l	equ	0xFE1
 32301                           bsr	equ	0xFE0
 32302                           indf2	equ	0xFDF
 32303                           postinc2	equ	0xFDE
 32304                           postdec2	equ	0xFDD
 32305                           plusw2	equ	0xFDB
 32306                           fsr2h	equ	0xFDA
 32307                           fsr2l	equ	0xFD9
 32308                           status	equ	0xFD8
 32309                           
 32310 ;; *************** function _USBCtrlTrfSetupHandler *****************
 32311 ;; Defined at:
 32312 ;;		line 2469 in file "src/usb/usb_device.c"
 32313 ;; Parameters:    Size  Location     Type
 32314 ;;		None
 32315 ;; Auto vars:     Size  Location     Type
 32316 ;;		None
 32317 ;; Return value:  Size  Location     Type
 32318 ;;		None               void
 32319 ;; Registers used:
 32320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32321 ;; Tracked objects:
 32322 ;;		On entry : 0/0
 32323 ;;		On exit  : 0/0
 32324 ;;		Unchanged: 0/0
 32325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32330 ;;Total ram usage:        0 bytes
 32331 ;; Hardware stack levels used:    1
 32332 ;; Hardware stack levels required when called:   12
 32333 ;; This function calls:
 32334 ;;		_USBCheckStdRequest
 32335 ;;		_USBCtrlEPServiceComplete
 32336 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32337 ;; This function is called by:
 32338 ;;		_USBCtrlEPService
 32339 ;; This function uses a non-reentrant model
 32340 ;;
 32341                           
 32342                           	psect	text93
 32343  00AE76                     __ptext93:
 32344                           	opt stack 0
 32345  00AE76                     _USBCtrlTrfSetupHandler:
 32346                           	opt stack 3
 32347                           
 32348                           ;usb_device.c: 2474: shortPacketStatus = 0;
 32349                           
 32350                           ;incstack = 0
 32351  00AE76  0E00               	movlw	0
 32352  00AE78  6E54               	movwf	_shortPacketStatus,c	;volatile
 32353                           
 32354                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 32355  00AE7A  0E00               	movlw	0
 32356  00AE7C  6E4A               	movwf	_USBDeferStatusStagePacket,c	;volatile
 32357                           
 32358                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 32359  00AE7E  0E00               	movlw	0
 32360  00AE80  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 32361                           
 32362                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 32363  00AE82  0E00               	movlw	0
 32364  00AE84  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 32365                           
 32366                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 32367  00AE86  0E00               	movlw	0
 32368  00AE88  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 32369                           
 32370                           ;usb_device.c: 2479: controlTransferState = 0;
 32371  00AE8A  0E00               	movlw	0
 32372  00AE8C  6E4F               	movwf	_controlTransferState,c	;volatile
 32373                           
 32374                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 32375  00AE8E  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32376  00AE92  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32377  00AE96  0E7F               	movlw	127
 32378  00AE98  16DF               	andwf	indf2,f,c
 32379                           
 32380                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32381  00AE9A  0E04               	movlw	4
 32382  00AE9C  0100               	movlb	0	; () banked
 32383  00AE9E  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 32384                           
 32385                           ; BSR set to: 0
 32386                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 32387  00AEA0  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32388  00AEA4  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32389  00AEA8  0E7F               	movlw	127
 32390  00AEAA  16DF               	andwf	indf2,f,c
 32391                           
 32392                           ; BSR set to: 0
 32393                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 32394  00AEAC  0E04               	movlw	4
 32395  00AEAE  0100               	movlb	0	; () banked
 32396  00AEB0  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 32397                           
 32398                           ; BSR set to: 0
 32399                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 32400  00AEB2  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32401  00AEB6  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32402  00AEBA  0E7F               	movlw	127
 32403  00AEBC  16DF               	andwf	indf2,f,c
 32404                           
 32405                           ; BSR set to: 0
 32406                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 32407  00AEBE  0E00               	movlw	0
 32408  00AEC0  0100               	movlb	0	; () banked
 32409  00AEC2  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32410                           
 32411                           ; BSR set to: 0
 32412                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 32413  00AEC4  0E00               	movlw	0
 32414  00AEC6  0100               	movlb	0	; () banked
 32415  00AEC8  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 32416  00AECA  0E00               	movlw	0
 32417  00AECC  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 32418                           
 32419                           ; BSR set to: 0
 32420                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 32421  00AECE  0E00               	movlw	0
 32422  00AED0  0100               	movlb	0	; () banked
 32423  00AED2  6F63               	movwf	(_outPipes+3)& (0+255),b	;volatile
 32424                           
 32425                           ; BSR set to: 0
 32426                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 32427  00AED4  0E00               	movlw	0
 32428  00AED6  0100               	movlb	0	; () banked
 32429  00AED8  6F65               	movwf	(_outPipes+5)& (0+255),b	;volatile
 32430  00AEDA  0E00               	movlw	0
 32431  00AEDC  6F64               	movwf	(_outPipes+4)& (0+255),b	;volatile
 32432                           
 32433                           ; BSR set to: 0
 32434                           ;usb_device.c: 2503: USBCheckStdRequest();
 32435  00AEDE  EC41  F04B         	call	_USBCheckStdRequest	;wreg free
 32436                           
 32437                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 32438  00AEE2  0E00               	movlw	0
 32439  00AEE4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 32440  00AEE6  0E03               	movlw	3
 32441  00AEE8  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 32442  00AEEA  0E00               	movlw	0
 32443  00AEEC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 32444  00AEEE  0E00               	movlw	0
 32445  00AEF0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 32446  00AEF2  0E00               	movlw	0
 32447  00AEF4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 32448  00AEF6  0E00               	movlw	0
 32449  00AEF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 32450  00AEFA  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 32451                           
 32452                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 32453  00AEFE  ECC7  F04A         	call	_USBCtrlEPServiceComplete	;wreg free
 32454  00AF02  0012               	return		;funcret
 32455  00AF04                     __end_of_USBCtrlTrfSetupHandler:
 32456                           	opt stack 0
 32457                           pclatu	equ	0xFFB
 32458                           pclath	equ	0xFFA
 32459                           tblptru	equ	0xFF8
 32460                           tblptrh	equ	0xFF7
 32461                           tblptrl	equ	0xFF6
 32462                           tablat	equ	0xFF5
 32463                           prodh	equ	0xFF4
 32464                           prodl	equ	0xFF3
 32465                           intcon	equ	0xFF2
 32466                           intcon2	equ	0xFF1
 32467                           intcon3	equ	0xFF0
 32468                           indf0	equ	0xFEF
 32469                           postinc0	equ	0xFEE
 32470                           plusw0	equ	0xFEB
 32471                           fsr0h	equ	0xFEA
 32472                           fsr0l	equ	0xFE9
 32473                           wreg	equ	0xFE8
 32474                           indf1	equ	0xFE7
 32475                           postinc1	equ	0xFE6
 32476                           postdec1	equ	0xFE5
 32477                           plusw1	equ	0xFE3
 32478                           fsr1h	equ	0xFE2
 32479                           fsr1l	equ	0xFE1
 32480                           bsr	equ	0xFE0
 32481                           indf2	equ	0xFDF
 32482                           postinc2	equ	0xFDE
 32483                           postdec2	equ	0xFDD
 32484                           plusw2	equ	0xFDB
 32485                           fsr2h	equ	0xFDA
 32486                           fsr2l	equ	0xFD9
 32487                           status	equ	0xFD8
 32488                           
 32489 ;; *************** function _USBCtrlEPServiceComplete *****************
 32490 ;; Defined at:
 32491 ;;		line 1616 in file "src/usb/usb_device.c"
 32492 ;; Parameters:    Size  Location     Type
 32493 ;;		None
 32494 ;; Auto vars:     Size  Location     Type
 32495 ;;		None
 32496 ;; Return value:  Size  Location     Type
 32497 ;;		None               void
 32498 ;; Registers used:
 32499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32500 ;; Tracked objects:
 32501 ;;		On entry : 0/0
 32502 ;;		On exit  : 0/0
 32503 ;;		Unchanged: 0/0
 32504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32509 ;;Total ram usage:        0 bytes
 32510 ;; Hardware stack levels used:    1
 32511 ;; Hardware stack levels required when called:    8
 32512 ;; This function calls:
 32513 ;;		_USBCtrlEPAllowDataStage
 32514 ;;		_USBCtrlEPAllowStatusStage
 32515 ;; This function is called by:
 32516 ;;		_USBCtrlTrfSetupHandler
 32517 ;; This function uses a non-reentrant model
 32518 ;;
 32519                           
 32520                           	psect	text94
 32521  00958E                     __ptext94:
 32522                           	opt stack 0
 32523  00958E                     _USBCtrlEPServiceComplete:
 32524                           	opt stack 6
 32525                           
 32526                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 32527                           
 32528                           ;incstack = 0
 32529  00958E  9865               	bcf	3941,4,c	;volatile
 32530                           
 32531                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 32532  009590  0100               	movlb	0	; () banked
 32533  009592  BF84               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 32534  009594  D039               	goto	i1l1308
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;usb_device.c: 1629: {
 32538                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 32539  009596  0100               	movlb	0	; () banked
 32540  009598  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 32541  00959A  D00B               	goto	i1l11474
 32542                           
 32543                           ; BSR set to: 0
 32544                           ;usb_device.c: 1631: {
 32545                           ;usb_device.c: 1632: controlTransferState = 2;
 32546  00959C  0E02               	movlw	2
 32547  00959E  6E4F               	movwf	_controlTransferState,c	;volatile
 32548                           
 32549                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 32550  0095A0  5049               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 32551  0095A2  B4D8               	btfsc	status,2,c
 32552                           
 32553                           ; BSR set to: 0
 32554                           ;usb_device.c: 1644: {
 32555                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 32556  0095A4  EC2B  F055         	call	_USBCtrlEPAllowDataStage	;wreg free
 32557                           
 32558                           ;usb_device.c: 1646: }
 32559                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 32560  0095A8  0E00               	movlw	0
 32561  0095AA  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32562                           
 32563                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 32564  0095AC  0E00               	movlw	0
 32565  0095AE  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32566                           
 32567                           ;usb_device.c: 1652: }
 32568  0095B0  0012               	return	
 32569  0095B2                     i1l11474:
 32570                           
 32571                           ;usb_device.c: 1653: else
 32572                           ;usb_device.c: 1654: {
 32573                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 32574  0095B2  EE20 F001          	lfsr	2,1
 32575  0095B6  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32576  0095B8  26D9               	addwf	fsr2l,f,c
 32577  0095BA  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32578  0095BC  22DA               	addwfc	fsr2h,f,c
 32579  0095BE  0E08               	movlw	8
 32580  0095C0  6EDF               	movwf	indf2,c
 32581                           
 32582                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32583  0095C2  EE20 F002          	lfsr	2,2
 32584  0095C6  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32585  0095C8  26D9               	addwf	fsr2l,f,c
 32586  0095CA  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32587  0095CC  22DA               	addwfc	fsr2h,f,c
 32588  0095CE  0E20               	movlw	32
 32589  0095D0  6EDE               	movwf	postinc2,c
 32590  0095D2  0E0D               	movlw	13
 32591  0095D4  6EDD               	movwf	postdec2,c
 32592                           
 32593                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32594  0095D6  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32595  0095DA  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32596  0095DE  0E0C               	movlw	12
 32597  0095E0  6EDF               	movwf	indf2,c
 32598                           
 32599                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32600  0095E2  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32601  0095E6  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32602  0095EA  0E00               	movlw	0
 32603  0095EC  8EDB               	bsf	plusw2,7,c
 32604                           
 32605                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 32606  0095EE  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32607  0095F2  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32608  0095F6  0E04               	movlw	4
 32609  0095F8  6EDF               	movwf	indf2,c
 32610                           
 32611                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32612  0095FA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32613  0095FE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32614  009602  0E00               	movlw	0
 32615  009604  8EDB               	bsf	plusw2,7,c
 32616                           
 32617                           ;usb_device.c: 1665: }
 32618                           ;usb_device.c: 1666: }
 32619  009606  0012               	return	
 32620  009608                     i1l1308:
 32621                           
 32622                           ; BSR set to: 0
 32623                           ;usb_device.c: 1667: else
 32624                           ;usb_device.c: 1668: {
 32625                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 32626  009608  010D               	movlb	13	; () banked
 32627  00960A  AF20               	btfss	32,7,b	;volatile
 32628  00960C  D010               	goto	i1l11494
 32629                           
 32630                           ; BSR set to: 13
 32631                           ;usb_device.c: 1670: {
 32632                           ;usb_device.c: 1671: controlTransferState = 1;
 32633  00960E  0E01               	movlw	1
 32634  009610  6E4F               	movwf	_controlTransferState,c	;volatile
 32635                           
 32636                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 32637  009612  5048               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 32638  009614  B4D8               	btfsc	status,2,c
 32639                           
 32640                           ; BSR set to: 13
 32641                           ;usb_device.c: 1686: {
 32642                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 32643  009616  EC2B  F055         	call	_USBCtrlEPAllowDataStage	;wreg free
 32644                           
 32645                           ;usb_device.c: 1688: }
 32646                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 32647  00961A  0E00               	movlw	0
 32648  00961C  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32649                           
 32650                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 32651  00961E  0E00               	movlw	0
 32652  009620  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32653                           
 32654                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 32655  009622  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 32656  009624  A4D8               	btfss	status,2,c
 32657  009626  0012               	return	
 32658                           
 32659                           ;usb_device.c: 1713: {
 32660                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 32661  009628  ECD8  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32662                           
 32663                           ;usb_device.c: 1715: }
 32664                           ;usb_device.c: 1716: }
 32665  00962C  0012               	return	
 32666  00962E                     i1l11494:
 32667                           
 32668                           ;usb_device.c: 1717: else
 32669                           ;usb_device.c: 1718: {
 32670                           ;usb_device.c: 1729: controlTransferState = 2;
 32671  00962E  0E02               	movlw	2
 32672  009630  6E4F               	movwf	_controlTransferState,c	;volatile
 32673                           
 32674                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 32675  009632  EE20 F001          	lfsr	2,1
 32676  009636  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32677  009638  26D9               	addwf	fsr2l,f,c
 32678  00963A  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32679  00963C  22DA               	addwfc	fsr2h,f,c
 32680  00963E  0E08               	movlw	8
 32681  009640  6EDF               	movwf	indf2,c
 32682                           
 32683                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32684  009642  EE20 F002          	lfsr	2,2
 32685  009646  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32686  009648  26D9               	addwf	fsr2l,f,c
 32687  00964A  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32688  00964C  22DA               	addwfc	fsr2h,f,c
 32689  00964E  0E20               	movlw	32
 32690  009650  6EDE               	movwf	postinc2,c
 32691  009652  0E0D               	movlw	13
 32692  009654  6EDD               	movwf	postdec2,c
 32693                           
 32694                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 32695  009656  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32696  00965A  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32697  00965E  0E04               	movlw	4
 32698  009660  6EDF               	movwf	indf2,c
 32699                           
 32700                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32701  009662  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32702  009666  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32703  00966A  0E00               	movlw	0
 32704  00966C  8EDB               	bsf	plusw2,7,c
 32705                           
 32706                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 32707  00966E  0E00               	movlw	0
 32708  009670  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 32709                           
 32710                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 32711  009672  0E00               	movlw	0
 32712  009674  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 32713                           
 32714                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 32715  009676  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 32716  009678  A4D8               	btfss	status,2,c
 32717  00967A  0012               	return	
 32718                           
 32719                           ;usb_device.c: 1741: {
 32720                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 32721  00967C  ECD8  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 32722  009680  0012               	return	
 32723  009682                     __end_of_USBCtrlEPServiceComplete:
 32724                           	opt stack 0
 32725                           pclatu	equ	0xFFB
 32726                           pclath	equ	0xFFA
 32727                           tblptru	equ	0xFF8
 32728                           tblptrh	equ	0xFF7
 32729                           tblptrl	equ	0xFF6
 32730                           tablat	equ	0xFF5
 32731                           prodh	equ	0xFF4
 32732                           prodl	equ	0xFF3
 32733                           intcon	equ	0xFF2
 32734                           intcon2	equ	0xFF1
 32735                           intcon3	equ	0xFF0
 32736                           indf0	equ	0xFEF
 32737                           postinc0	equ	0xFEE
 32738                           plusw0	equ	0xFEB
 32739                           fsr0h	equ	0xFEA
 32740                           fsr0l	equ	0xFE9
 32741                           wreg	equ	0xFE8
 32742                           indf1	equ	0xFE7
 32743                           postinc1	equ	0xFE6
 32744                           postdec1	equ	0xFE5
 32745                           plusw1	equ	0xFE3
 32746                           fsr1h	equ	0xFE2
 32747                           fsr1l	equ	0xFE1
 32748                           bsr	equ	0xFE0
 32749                           indf2	equ	0xFDF
 32750                           postinc2	equ	0xFDE
 32751                           postdec2	equ	0xFDD
 32752                           plusw2	equ	0xFDB
 32753                           fsr2h	equ	0xFDA
 32754                           fsr2l	equ	0xFD9
 32755                           status	equ	0xFD8
 32756                           
 32757 ;; *************** function _USBCtrlEPAllowDataStage *****************
 32758 ;; Defined at:
 32759 ;;		line 1488 in file "src/usb/usb_device.c"
 32760 ;; Parameters:    Size  Location     Type
 32761 ;;		None
 32762 ;; Auto vars:     Size  Location     Type
 32763 ;;		None
 32764 ;; Return value:  Size  Location     Type
 32765 ;;		None               void
 32766 ;; Registers used:
 32767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32768 ;; Tracked objects:
 32769 ;;		On entry : 0/0
 32770 ;;		On exit  : 0/0
 32771 ;;		Unchanged: 0/0
 32772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32777 ;;Total ram usage:        0 bytes
 32778 ;; Hardware stack levels used:    1
 32779 ;; Hardware stack levels required when called:    7
 32780 ;; This function calls:
 32781 ;;		_USBCtrlTrfTxService
 32782 ;; This function is called by:
 32783 ;;		_USBCtrlEPServiceComplete
 32784 ;; This function uses a non-reentrant model
 32785 ;;
 32786                           
 32787                           	psect	text95
 32788  00AA56                     __ptext95:
 32789                           	opt stack 0
 32790  00AA56                     _USBCtrlEPAllowDataStage:
 32791                           	opt stack 6
 32792                           
 32793                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 32794                           
 32795                           ;incstack = 0
 32796  00AA56  0E00               	movlw	0
 32797  00AA58  6E48               	movwf	_USBDeferINDataStagePackets,c	;volatile
 32798                           
 32799                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 32800  00AA5A  0E00               	movlw	0
 32801  00AA5C  6E49               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 32802                           
 32803                           ;usb_device.c: 1493: if(controlTransferState == 2)
 32804  00AA5E  0E02               	movlw	2
 32805  00AA60  184F               	xorwf	_controlTransferState,w,c	;volatile
 32806  00AA62  A4D8               	btfss	status,2,c
 32807  00AA64  D01F               	goto	i1l11000
 32808                           
 32809                           ;usb_device.c: 1494: {
 32810                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 32811  00AA66  EE20 F001          	lfsr	2,1
 32812  00AA6A  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32813  00AA6C  26D9               	addwf	fsr2l,f,c
 32814  00AA6E  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32815  00AA70  22DA               	addwfc	fsr2h,f,c
 32816  00AA72  0E08               	movlw	8
 32817  00AA74  6EDF               	movwf	indf2,c
 32818                           
 32819                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 32820  00AA76  EE20 F002          	lfsr	2,2
 32821  00AA7A  503A               	movf	_pBDTEntryEP0OutNext,w,c
 32822  00AA7C  26D9               	addwf	fsr2l,f,c
 32823  00AA7E  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 32824  00AA80  22DA               	addwfc	fsr2h,f,c
 32825  00AA82  0E28               	movlw	40
 32826  00AA84  6EDE               	movwf	postinc2,c
 32827  00AA86  0E0D               	movlw	13
 32828  00AA88  6EDD               	movwf	postdec2,c
 32829                           
 32830                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 32831  00AA8A  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32832  00AA8E  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32833  00AA92  0E48               	movlw	72
 32834  00AA94  6EDF               	movwf	indf2,c
 32835                           
 32836                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32837  00AA96  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32838  00AA9A  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32839  00AA9E  0E00               	movlw	0
 32840  00AAA0  8EDB               	bsf	plusw2,7,c
 32841                           
 32842                           ;usb_device.c: 1500: }
 32843  00AAA2  0012               	return	
 32844  00AAA4                     i1l11000:
 32845                           
 32846                           ;usb_device.c: 1501: else
 32847                           ;usb_device.c: 1502: {
 32848                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 32849  00AAA4  0100               	movlb	0	; () banked
 32850  00AAA6  5185               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 32851  00AAA8  010D               	movlb	13	; () banked
 32852  00AAAA  5D26               	subwf	38,w,b	;volatile
 32853  00AAAC  0100               	movlb	0	; () banked
 32854  00AAAE  5186               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 32855  00AAB0  010D               	movlb	13	; () banked
 32856  00AAB2  5927               	subwfb	39,w,b	;volatile
 32857  00AAB4  B0D8               	btfsc	status,0,c
 32858  00AAB6  D004               	goto	i1l11004
 32859                           
 32860                           ; BSR set to: 13
 32861                           ;usb_device.c: 1506: {
 32862                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 32863  00AAB8  CD26 F085          	movff	3366,_inPipes+4	;volatile
 32864  00AABC  CD27 F086          	movff	3367,_inPipes+5	;volatile
 32865  00AAC0                     i1l11004:
 32866                           
 32867                           ; BSR set to: 13
 32868                           ;usb_device.c: 1508: }
 32869                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 32870  00AAC0  EC0D  F04D         	call	_USBCtrlTrfTxService	;wreg free
 32871                           
 32872                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 32873  00AAC4  0100               	movlb	0	; () banked
 32874  00AAC6  EE20 F002          	lfsr	2,2
 32875  00AACA  518B               	movf	_pBDTEntryIn& (0+255),w,b
 32876  00AACC  26D9               	addwf	fsr2l,f,c
 32877  00AACE  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32878  00AAD0  22DA               	addwfc	fsr2h,f,c
 32879  00AAD2  0E28               	movlw	40
 32880  00AAD4  6EDE               	movwf	postinc2,c
 32881  00AAD6  0E0D               	movlw	13
 32882  00AAD8  6EDD               	movwf	postdec2,c
 32883                           
 32884                           ; BSR set to: 0
 32885                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 32886  00AADA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32887  00AADE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32888  00AAE2  0E48               	movlw	72
 32889  00AAE4  6EDF               	movwf	indf2,c
 32890                           
 32891                           ; BSR set to: 0
 32892                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 32893  00AAE6  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 32894  00AAEA  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 32895  00AAEE  0E00               	movlw	0
 32896  00AAF0  8EDB               	bsf	plusw2,7,c
 32897  00AAF2  0012               	return	
 32898  00AAF4                     __end_of_USBCtrlEPAllowDataStage:
 32899                           	opt stack 0
 32900                           pclatu	equ	0xFFB
 32901                           pclath	equ	0xFFA
 32902                           tblptru	equ	0xFF8
 32903                           tblptrh	equ	0xFF7
 32904                           tblptrl	equ	0xFF6
 32905                           tablat	equ	0xFF5
 32906                           prodh	equ	0xFF4
 32907                           prodl	equ	0xFF3
 32908                           intcon	equ	0xFF2
 32909                           intcon2	equ	0xFF1
 32910                           intcon3	equ	0xFF0
 32911                           indf0	equ	0xFEF
 32912                           postinc0	equ	0xFEE
 32913                           plusw0	equ	0xFEB
 32914                           fsr0h	equ	0xFEA
 32915                           fsr0l	equ	0xFE9
 32916                           wreg	equ	0xFE8
 32917                           indf1	equ	0xFE7
 32918                           postinc1	equ	0xFE6
 32919                           postdec1	equ	0xFE5
 32920                           plusw1	equ	0xFE3
 32921                           fsr1h	equ	0xFE2
 32922                           fsr1l	equ	0xFE1
 32923                           bsr	equ	0xFE0
 32924                           indf2	equ	0xFDF
 32925                           postinc2	equ	0xFDE
 32926                           postdec2	equ	0xFDD
 32927                           plusw2	equ	0xFDB
 32928                           fsr2h	equ	0xFDA
 32929                           fsr2l	equ	0xFD9
 32930                           status	equ	0xFD8
 32931                           
 32932 ;; *************** function _USBCheckStdRequest *****************
 32933 ;; Defined at:
 32934 ;;		line 2689 in file "src/usb/usb_device.c"
 32935 ;; Parameters:    Size  Location     Type
 32936 ;;		None
 32937 ;; Auto vars:     Size  Location     Type
 32938 ;;		None
 32939 ;; Return value:  Size  Location     Type
 32940 ;;		None               void
 32941 ;; Registers used:
 32942 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32943 ;; Tracked objects:
 32944 ;;		On entry : 0/0
 32945 ;;		On exit  : 0/0
 32946 ;;		Unchanged: 0/0
 32947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32952 ;;Total ram usage:        0 bytes
 32953 ;; Hardware stack levels used:    1
 32954 ;; Hardware stack levels required when called:   11
 32955 ;; This function calls:
 32956 ;;		_USBStdFeatureReqHandler
 32957 ;;		_USBStdGetDscHandler
 32958 ;;		_USBStdGetStatusHandler
 32959 ;;		_USBStdSetCfgHandler
 32960 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32961 ;; This function is called by:
 32962 ;;		_USBCtrlTrfSetupHandler
 32963 ;; This function uses a non-reentrant model
 32964 ;;
 32965                           
 32966                           	psect	text96
 32967  009682                     __ptext96:
 32968                           	opt stack 0
 32969  009682                     _USBCheckStdRequest:
 32970                           	opt stack 3
 32971                           
 32972                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 32973                           
 32974                           ;incstack = 0
 32975  009682  010D               	movlb	13	; () banked
 32976  009684  3920               	swapf	32,w,b	;volatile
 32977  009686  32E8               	rrcf	wreg,f,c
 32978  009688  0B03               	andlw	3
 32979  00968A  0900               	iorlw	0
 32980  00968C  A4D8               	btfss	status,2,c
 32981  00968E  0012               	return	
 32982  009690  D04F               	goto	i1l11592
 32983  009692                     i1l1435:
 32984                           
 32985                           ; BSR set to: 13
 32986                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 32987  009692  0100               	movlb	0	; () banked
 32988  009694  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 32989                           
 32990                           ; BSR set to: 0
 32991                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 32992  009696  0E08               	movlw	8
 32993  009698  6E4B               	movwf	_USBDeviceState,c	;volatile
 32994                           
 32995                           ;usb_device.c: 2699: break;
 32996  00969A  0012               	return	
 32997  00969C                     i1l11562:
 32998                           
 32999                           ;usb_device.c: 2701: USBStdGetDscHandler();
 33000  00969C  ECE0  F03F         	call	_USBStdGetDscHandler	;wreg free
 33001                           
 33002                           ;usb_device.c: 2702: break;
 33003  0096A0  0012               	return	
 33004  0096A2                     i1l11564:
 33005                           
 33006                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 33007  0096A2  EC30  F04C         	call	_USBStdSetCfgHandler	;wreg free
 33008                           
 33009                           ;usb_device.c: 2705: break;
 33010  0096A6  0012               	return	
 33011  0096A8                     i1l11566:
 33012                           
 33013                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 33014  0096A8  0E56               	movlw	low _USBActiveConfiguration
 33015  0096AA  0100               	movlb	0	; () banked
 33016  0096AC  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33017  0096AE  0E00               	movlw	high _USBActiveConfiguration
 33018  0096B0  0100               	movlb	0	; () banked
 33019  0096B2  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33020                           
 33021                           ; BSR set to: 0
 33022                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33023  0096B4  0100               	movlb	0	; () banked
 33024  0096B6  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33025                           
 33026                           ; BSR set to: 0
 33027                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 33028  0096B8  0E01               	movlw	1
 33029  0096BA  0100               	movlb	0	; () banked
 33030  0096BC  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 33034  0096BE  0100               	movlb	0	; () banked
 33035  0096C0  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33036                           
 33037                           ;usb_device.c: 2711: break;
 33038  0096C2  0012               	return	
 33039  0096C4                     i1l11574:
 33040                           
 33041                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 33042  0096C4  EC6F  F052         	call	_USBStdGetStatusHandler	;wreg free
 33043                           
 33044                           ;usb_device.c: 2714: break;
 33045  0096C8  0012               	return	
 33046  0096CA                     i1l11576:
 33047                           
 33048                           ;usb_device.c: 2716: case 3:
 33049                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 33050  0096CA  EC2C  F033         	call	_USBStdFeatureReqHandler	;wreg free
 33051                           
 33052                           ;usb_device.c: 2718: break;
 33053  0096CE  0012               	return	
 33054  0096D0                     i1l11578:
 33055                           
 33056                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 33057  0096D0  010D               	movlb	13	; () banked
 33058  0096D2  5124               	movf	36,w,b	;volatile
 33059  0096D4  0D01               	mullw	1
 33060  0096D6  0E57               	movlw	low _USBAlternateInterface
 33061  0096D8  24F3               	addwf	prodl,w,c
 33062  0096DA  0100               	movlb	0	; () banked
 33063  0096DC  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33064  0096DE  0E00               	movlw	high _USBAlternateInterface
 33065  0096E0  20F4               	addwfc	prodh,w,c
 33066  0096E2  0100               	movlb	0	; () banked
 33067  0096E4  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33068                           
 33069                           ; BSR set to: 0
 33070                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33071  0096E6  0100               	movlb	0	; () banked
 33072  0096E8  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33073                           
 33074                           ; BSR set to: 0
 33075                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 33076  0096EA  0E01               	movlw	1
 33077  0096EC  0100               	movlb	0	; () banked
 33078  0096EE  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33079                           
 33080                           ; BSR set to: 0
 33081                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 33082  0096F0  0100               	movlb	0	; () banked
 33083  0096F2  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33084                           
 33085                           ;usb_device.c: 2724: break;
 33086  0096F4  0012               	return	
 33087  0096F6                     i1l1444:
 33088                           
 33089                           ; BSR set to: 13
 33090                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 33091  0096F6  0100               	movlb	0	; () banked
 33092  0096F8  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33093                           
 33094                           ; BSR set to: 0
 33095                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 33096  0096FA  010D               	movlb	13	; () banked
 33097  0096FC  5124               	movf	36,w,b	;volatile
 33098  0096FE  0D01               	mullw	1
 33099  009700  0E57               	movlw	low _USBAlternateInterface
 33100  009702  24F3               	addwf	prodl,w,c
 33101  009704  6ED9               	movwf	fsr2l,c
 33102  009706  0E00               	movlw	high _USBAlternateInterface
 33103  009708  20F4               	addwfc	prodh,w,c
 33104  00970A  6EDA               	movwf	fsr2h,c
 33105  00970C  CD22 FFDF          	movff	3362,indf2	;volatile
 33106                           
 33107                           ;usb_device.c: 2728: break;
 33108  009710  0012               	return	
 33109  009712                     i1l11588:
 33110                           
 33111                           ; BSR set to: 13
 33112                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 33113  009712  0E00               	movlw	0
 33114  009714  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33115  009716  0E02               	movlw	2
 33116  009718  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33117  00971A  0E00               	movlw	0
 33118  00971C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33119  00971E  0E00               	movlw	0
 33120  009720  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33121  009722  0E00               	movlw	0
 33122  009724  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33123  009726  0E00               	movlw	0
 33124  009728  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33125  00972A  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33126                           
 33127                           ;usb_device.c: 2735: }
 33128                           
 33129                           ;usb_device.c: 2734: break;
 33130                           
 33131                           ;usb_device.c: 2733: default:
 33132                           
 33133                           ;usb_device.c: 2732: case 12:
 33134                           
 33135                           ;usb_device.c: 2731: break;
 33136  00972E  0012               	return	
 33137  009730                     i1l11592:
 33138  009730  010D               	movlb	13	; () banked
 33139  009732  5121               	movf	33,w,b	;volatile
 33140                           
 33141                           ; Switch size 1, requested type "space"
 33142                           ; Number of cases is 11, Range of values is 0 to 12
 33143                           ; switch strategies available:
 33144                           ; Name         Instructions Cycles
 33145                           ; simple_byte           34    18 (average)
 33146                           ;	Chosen strategy is simple_byte
 33147  009734  0A00               	xorlw	0	; case 0
 33148  009736  B4D8               	btfsc	status,2,c
 33149  009738  D7C5               	goto	i1l11574
 33150  00973A  0A01               	xorlw	1	; case 1
 33151  00973C  B4D8               	btfsc	status,2,c
 33152  00973E  D7C5               	goto	i1l11576
 33153  009740  0A02               	xorlw	2	; case 3
 33154  009742  B4D8               	btfsc	status,2,c
 33155  009744  D7C2               	goto	i1l11576
 33156  009746  0A06               	xorlw	6	; case 5
 33157  009748  B4D8               	btfsc	status,2,c
 33158  00974A  D7A3               	goto	i1l1435
 33159  00974C  0A03               	xorlw	3	; case 6
 33160  00974E  B4D8               	btfsc	status,2,c
 33161  009750  D7A5               	goto	i1l11562
 33162  009752  0A01               	xorlw	1	; case 7
 33163  009754  B4D8               	btfsc	status,2,c
 33164  009756  D7DD               	goto	i1l11588
 33165  009758  0A0F               	xorlw	15	; case 8
 33166  00975A  B4D8               	btfsc	status,2,c
 33167  00975C  D7A5               	goto	i1l11566
 33168  00975E  0A01               	xorlw	1	; case 9
 33169  009760  B4D8               	btfsc	status,2,c
 33170  009762  D79F               	goto	i1l11564
 33171  009764  0A03               	xorlw	3	; case 10
 33172  009766  B4D8               	btfsc	status,2,c
 33173  009768  D7B3               	goto	i1l11578
 33174  00976A  0A01               	xorlw	1	; case 11
 33175  00976C  B4D8               	btfsc	status,2,c
 33176  00976E  D7C3               	goto	i1l1444
 33177  009770  0A07               	xorlw	7	; case 12
 33178  009772  0012               	return	
 33179  009774                     __end_of_USBCheckStdRequest:
 33180                           	opt stack 0
 33181                           pclatu	equ	0xFFB
 33182                           pclath	equ	0xFFA
 33183                           tblptru	equ	0xFF8
 33184                           tblptrh	equ	0xFF7
 33185                           tblptrl	equ	0xFF6
 33186                           tablat	equ	0xFF5
 33187                           prodh	equ	0xFF4
 33188                           prodl	equ	0xFF3
 33189                           intcon	equ	0xFF2
 33190                           intcon2	equ	0xFF1
 33191                           intcon3	equ	0xFF0
 33192                           indf0	equ	0xFEF
 33193                           postinc0	equ	0xFEE
 33194                           plusw0	equ	0xFEB
 33195                           fsr0h	equ	0xFEA
 33196                           fsr0l	equ	0xFE9
 33197                           wreg	equ	0xFE8
 33198                           indf1	equ	0xFE7
 33199                           postinc1	equ	0xFE6
 33200                           postdec1	equ	0xFE5
 33201                           plusw1	equ	0xFE3
 33202                           fsr1h	equ	0xFE2
 33203                           fsr1l	equ	0xFE1
 33204                           bsr	equ	0xFE0
 33205                           indf2	equ	0xFDF
 33206                           postinc2	equ	0xFDE
 33207                           postdec2	equ	0xFDD
 33208                           plusw2	equ	0xFDB
 33209                           fsr2h	equ	0xFDA
 33210                           fsr2l	equ	0xFD9
 33211                           status	equ	0xFD8
 33212                           
 33213 ;; *************** function _USBStdSetCfgHandler *****************
 33214 ;; Defined at:
 33215 ;;		line 1968 in file "src/usb/usb_device.c"
 33216 ;; Parameters:    Size  Location     Type
 33217 ;;		None
 33218 ;; Auto vars:     Size  Location     Type
 33219 ;;  i               1   20[COMRAM] unsigned char 
 33220 ;; Return value:  Size  Location     Type
 33221 ;;		None               void
 33222 ;; Registers used:
 33223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33224 ;; Tracked objects:
 33225 ;;		On entry : 0/0
 33226 ;;		On exit  : 0/0
 33227 ;;		Unchanged: 0/0
 33228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33233 ;;Total ram usage:        1 bytes
 33234 ;; Hardware stack levels used:    1
 33235 ;; Hardware stack levels required when called:   10
 33236 ;; This function calls:
 33237 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33238 ;;		i1_memset
 33239 ;; This function is called by:
 33240 ;;		_USBCheckStdRequest
 33241 ;; This function uses a non-reentrant model
 33242 ;;
 33243                           
 33244                           	psect	text97
 33245  009860                     __ptext97:
 33246                           	opt stack 0
 33247  009860                     _USBStdSetCfgHandler:
 33248                           	opt stack 3
 33249                           
 33250                           ;usb_device.c: 1970: uint8_t i;
 33251                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 33252                           
 33253                           ;incstack = 0
 33254  009860  0100               	movlb	0	; () banked
 33255  009862  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33256                           
 33257                           ; BSR set to: 0
 33258                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(1));;
 33259  009864  0E27               	movlw	39
 33260  009866  6E01               	movwf	i1memset@p1,c
 33261  009868  0E0F               	movlw	15
 33262  00986A  6E02               	movwf	i1memset@p1+1,c
 33263  00986C  0E00               	movlw	0
 33264  00986E  6E04               	movwf	i1memset@c+1,c
 33265  009870  0E00               	movlw	0
 33266  009872  6E03               	movwf	i1memset@c,c
 33267  009874  0E00               	movlw	0
 33268  009876  6E06               	movwf	i1memset@n+1,c
 33269  009878  0E01               	movlw	1
 33270  00987A  6E05               	movwf	i1memset@n,c
 33271  00987C  EC16  F05D         	call	i1_memset	;wreg free
 33272                           
 33273                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 33274  009880  0E00               	movlw	0
 33275  009882  6E01               	movwf	i1memset@p1,c
 33276  009884  0E0D               	movlw	13
 33277  009886  6E02               	movwf	i1memset@p1+1,c
 33278  009888  0E00               	movlw	0
 33279  00988A  6E04               	movwf	i1memset@c+1,c
 33280  00988C  0E00               	movlw	0
 33281  00988E  6E03               	movwf	i1memset@c,c
 33282  009890  0E00               	movlw	0
 33283  009892  6E06               	movwf	i1memset@n+1,c
 33284  009894  0E20               	movlw	32
 33285  009896  6E05               	movwf	i1memset@n,c
 33286  009898  EC16  F05D         	call	i1_memset	;wreg free
 33287                           
 33288                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 33289  00989C  8C65               	bsf	3941,6,c	;volatile
 33290                           
 33291                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
 33292  00989E  0E00               	movlw	0
 33293  0098A0  6E15               	movwf	USBStdSetCfgHandler@i,c
 33294  0098A2                     i1l11020:
 33295  0098A2  0E01               	movlw	1
 33296  0098A4  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 33297  0098A6  D001               	goto	i1l11024
 33298  0098A8  D016               	goto	i1l11030
 33299  0098AA                     i1l11024:
 33300                           
 33301                           ;usb_device.c: 1988: {
 33302                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 33303  0098AA  5015               	movf	USBStdSetCfgHandler@i,w,c
 33304  0098AC  0D01               	mullw	1
 33305  0098AE  0E95               	movlw	low _ep_data_in
 33306  0098B0  24F3               	addwf	prodl,w,c
 33307  0098B2  6ED9               	movwf	fsr2l,c
 33308  0098B4  0E00               	movlw	high _ep_data_in
 33309  0098B6  20F4               	addwfc	prodh,w,c
 33310  0098B8  6EDA               	movwf	fsr2h,c
 33311  0098BA  0E00               	movlw	0
 33312  0098BC  6EDF               	movwf	indf2,c
 33313                           
 33314                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 33315  0098BE  5015               	movf	USBStdSetCfgHandler@i,w,c
 33316  0098C0  0D01               	mullw	1
 33317  0098C2  0E97               	movlw	low _ep_data_out
 33318  0098C4  24F3               	addwf	prodl,w,c
 33319  0098C6  6ED9               	movwf	fsr2l,c
 33320  0098C8  0E00               	movlw	high _ep_data_out
 33321  0098CA  20F4               	addwfc	prodh,w,c
 33322  0098CC  6EDA               	movwf	fsr2h,c
 33323  0098CE  0E00               	movlw	0
 33324  0098D0  6EDF               	movwf	indf2,c
 33325  0098D2  2A15               	incf	USBStdSetCfgHandler@i,f,c
 33326  0098D4  D7E6               	goto	i1l11020
 33327  0098D6                     i1l11030:
 33328                           
 33329                           ;usb_device.c: 1991: }
 33330                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
 33331  0098D6  0E57               	movlw	low _USBAlternateInterface
 33332  0098D8  6E01               	movwf	i1memset@p1,c
 33333  0098DA  0E00               	movlw	high _USBAlternateInterface
 33334  0098DC  6E02               	movwf	i1memset@p1+1,c
 33335  0098DE  0E00               	movlw	0
 33336  0098E0  6E04               	movwf	i1memset@c+1,c
 33337  0098E2  0E00               	movlw	0
 33338  0098E4  6E03               	movwf	i1memset@c,c
 33339  0098E6  0E00               	movlw	0
 33340  0098E8  6E06               	movwf	i1memset@n+1,c
 33341  0098EA  0E01               	movlw	1
 33342  0098EC  6E05               	movwf	i1memset@n,c
 33343  0098EE  EC16  F05D         	call	i1_memset	;wreg free
 33344                           
 33345                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 33346  0098F2  9C65               	bcf	3941,6,c	;volatile
 33347                           
 33348                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33349  0098F4  0E08               	movlw	8
 33350  0098F6  0100               	movlb	0	; () banked
 33351  0098F8  6F8B               	movwf	_pBDTEntryIn& (0+255),b
 33352  0098FA  0E0D               	movlw	13
 33353  0098FC  0100               	movlb	0	; () banked
 33354  0098FE  6F8C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33355                           
 33356                           ; BSR set to: 0
 33357                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 33358  009900  0E00               	movlw	0
 33359  009902  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 33360  009904  0E0D               	movlw	13
 33361  009906  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 33365  009908  C038  F03A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 33366  00990C  C039  F03B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 33367                           
 33368                           ; BSR set to: 0
 33369                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 33370  009910  CD22 F056          	movff	3362,_USBActiveConfiguration	;volatile
 33371                           
 33372                           ; BSR set to: 0
 33373                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 33374  009914  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 33375  009916  A4D8               	btfss	status,2,c
 33376  009918  D003               	goto	i1l11046
 33377                           
 33378                           ; BSR set to: 0
 33379                           ;usb_device.c: 2010: {
 33380                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 33381  00991A  0E10               	movlw	16
 33382  00991C  6E4B               	movwf	_USBDeviceState,c	;volatile
 33383                           
 33384                           ;usb_device.c: 2013: }
 33385  00991E  0012               	return	
 33386  009920                     i1l11046:
 33387                           
 33388                           ; BSR set to: 0
 33389                           ;usb_device.c: 2014: else
 33390                           ;usb_device.c: 2015: {
 33391                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 33392  009920  0E00               	movlw	0
 33393  009922  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33394  009924  0E01               	movlw	1
 33395  009926  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33396  009928  0E56               	movlw	low _USBActiveConfiguration
 33397  00992A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33398  00992C  0E00               	movlw	high _USBActiveConfiguration
 33399  00992E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33400  009930  0E00               	movlw	0
 33401  009932  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33402  009934  0E01               	movlw	1
 33403  009936  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33404  009938  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33405                           
 33406                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 33407  00993C  0E20               	movlw	32
 33408  00993E  6E4B               	movwf	_USBDeviceState,c	;volatile
 33409  009940  0012               	return	
 33410  009942                     __end_of_USBStdSetCfgHandler:
 33411                           	opt stack 0
 33412                           pclatu	equ	0xFFB
 33413                           pclath	equ	0xFFA
 33414                           tblptru	equ	0xFF8
 33415                           tblptrh	equ	0xFF7
 33416                           tblptrl	equ	0xFF6
 33417                           tablat	equ	0xFF5
 33418                           prodh	equ	0xFF4
 33419                           prodl	equ	0xFF3
 33420                           intcon	equ	0xFF2
 33421                           intcon2	equ	0xFF1
 33422                           intcon3	equ	0xFF0
 33423                           indf0	equ	0xFEF
 33424                           postinc0	equ	0xFEE
 33425                           plusw0	equ	0xFEB
 33426                           fsr0h	equ	0xFEA
 33427                           fsr0l	equ	0xFE9
 33428                           wreg	equ	0xFE8
 33429                           indf1	equ	0xFE7
 33430                           postinc1	equ	0xFE6
 33431                           postdec1	equ	0xFE5
 33432                           plusw1	equ	0xFE3
 33433                           fsr1h	equ	0xFE2
 33434                           fsr1l	equ	0xFE1
 33435                           bsr	equ	0xFE0
 33436                           indf2	equ	0xFDF
 33437                           postinc2	equ	0xFDE
 33438                           postdec2	equ	0xFDD
 33439                           plusw2	equ	0xFDB
 33440                           fsr2h	equ	0xFDA
 33441                           fsr2l	equ	0xFD9
 33442                           status	equ	0xFD8
 33443                           
 33444 ;; *************** function i1_memset *****************
 33445 ;; Defined at:
 33446 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 33447 ;; Parameters:    Size  Location     Type
 33448 ;;  p1              2    0[COMRAM] PTR void 
 33449 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 33450 ;;  c               2    2[COMRAM] int 
 33451 ;;  n               2    4[COMRAM] unsigned int 
 33452 ;; Auto vars:     Size  Location     Type
 33453 ;;  memset          2    6[COMRAM] PTR unsigned char 
 33454 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
 33455 ;; Return value:  Size  Location     Type
 33456 ;;                  2    0[COMRAM] PTR void 
 33457 ;; Registers used:
 33458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33459 ;; Tracked objects:
 33460 ;;		On entry : 0/0
 33461 ;;		On exit  : 0/0
 33462 ;;		Unchanged: 0/0
 33463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33464 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33467 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33468 ;;Total ram usage:        8 bytes
 33469 ;; Hardware stack levels used:    1
 33470 ;; Hardware stack levels required when called:    6
 33471 ;; This function calls:
 33472 ;;		Nothing
 33473 ;; This function is called by:
 33474 ;;		_USBStdSetCfgHandler
 33475 ;;		i1_USBDeviceInit
 33476 ;; This function uses a non-reentrant model
 33477 ;;
 33478                           
 33479                           	psect	text98
 33480  00BA2C                     __ptext98:
 33481                           	opt stack 0
 33482  00BA2C                     i1_memset:
 33483                           	opt stack 9
 33484                           
 33485                           ;incstack = 0
 33486  00BA2C  C001  F007         	movff	i1memset@p1,i1memset@p
 33487  00BA30  C002  F008         	movff	i1memset@p1+1,i1memset@p+1
 33488  00BA34  D008               	goto	i1l10582
 33489  00BA36                     i1l10578:
 33490  00BA36  C007  FFD9         	movff	i1memset@p,fsr2l
 33491  00BA3A  C008  FFDA         	movff	i1memset@p+1,fsr2h
 33492  00BA3E  C003  FFDF         	movff	i1memset@c,indf2
 33493  00BA42  4A07               	infsnz	i1memset@p,f,c
 33494  00BA44  2A08               	incf	i1memset@p+1,f,c
 33495  00BA46                     i1l10582:
 33496  00BA46  0605               	decf	i1memset@n,f,c
 33497  00BA48  A0D8               	btfss	status,0,c
 33498  00BA4A  0606               	decf	i1memset@n+1,f,c
 33499  00BA4C  2805               	incf	i1memset@n,w,c
 33500  00BA4E  E1F3               	bnz	i1l10578
 33501  00BA50  2806               	incf	i1memset@n+1,w,c
 33502  00BA52  B4D8               	btfsc	status,2,c
 33503  00BA54  0012               	return	
 33504  00BA56  D7EF               	goto	i1l10578
 33505  00BA58                     __end_ofi1_memset:
 33506                           	opt stack 0
 33507                           pclatu	equ	0xFFB
 33508                           pclath	equ	0xFFA
 33509                           tblptru	equ	0xFF8
 33510                           tblptrh	equ	0xFF7
 33511                           tblptrl	equ	0xFF6
 33512                           tablat	equ	0xFF5
 33513                           prodh	equ	0xFF4
 33514                           prodl	equ	0xFF3
 33515                           intcon	equ	0xFF2
 33516                           intcon2	equ	0xFF1
 33517                           intcon3	equ	0xFF0
 33518                           indf0	equ	0xFEF
 33519                           postinc0	equ	0xFEE
 33520                           plusw0	equ	0xFEB
 33521                           fsr0h	equ	0xFEA
 33522                           fsr0l	equ	0xFE9
 33523                           wreg	equ	0xFE8
 33524                           indf1	equ	0xFE7
 33525                           postinc1	equ	0xFE6
 33526                           postdec1	equ	0xFE5
 33527                           plusw1	equ	0xFE3
 33528                           fsr1h	equ	0xFE2
 33529                           fsr1l	equ	0xFE1
 33530                           bsr	equ	0xFE0
 33531                           indf2	equ	0xFDF
 33532                           postinc2	equ	0xFDE
 33533                           postdec2	equ	0xFDD
 33534                           plusw2	equ	0xFDB
 33535                           fsr2h	equ	0xFDA
 33536                           fsr2l	equ	0xFD9
 33537                           status	equ	0xFD8
 33538                           
 33539 ;; *************** function _USBStdGetStatusHandler *****************
 33540 ;; Defined at:
 33541 ;;		line 2129 in file "src/usb/usb_device.c"
 33542 ;; Parameters:    Size  Location     Type
 33543 ;;		None
 33544 ;; Auto vars:     Size  Location     Type
 33545 ;;  p               2    1[COMRAM] PTR struct __BDT
 33546 ;;		 -> BDT(32), NULL(0), 
 33547 ;; Return value:  Size  Location     Type
 33548 ;;		None               void
 33549 ;; Registers used:
 33550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33551 ;; Tracked objects:
 33552 ;;		On entry : 0/0
 33553 ;;		On exit  : 0/0
 33554 ;;		Unchanged: 0/0
 33555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33560 ;;Total ram usage:        3 bytes
 33561 ;; Hardware stack levels used:    1
 33562 ;; Hardware stack levels required when called:    6
 33563 ;; This function calls:
 33564 ;;		Nothing
 33565 ;; This function is called by:
 33566 ;;		_USBCheckStdRequest
 33567 ;; This function uses a non-reentrant model
 33568 ;;
 33569                           
 33570                           	psect	text99
 33571  00A4DE                     __ptext99:
 33572                           	opt stack 0
 33573  00A4DE                     _USBStdGetStatusHandler:
 33574                           	opt stack 7
 33575                           
 33576                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 33577                           
 33578                           ;incstack = 0
 33579  00A4DE  0E00               	movlw	0
 33580  00A4E0  010D               	movlb	13	; () banked
 33581  00A4E2  6F28               	movwf	40,b	;volatile
 33582                           
 33583                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 33584  00A4E4  0E00               	movlw	0
 33585  00A4E6  010D               	movlb	13	; () banked
 33586  00A4E8  6F29               	movwf	41,b	;volatile
 33587                           
 33588                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 33589  00A4EA  D03B               	goto	i1l11102
 33590  00A4EC                     i1l1371:
 33591                           
 33592                           ; BSR set to: 13
 33593                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 33594  00A4EC  0100               	movlb	0	; () banked
 33595  00A4EE  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33596                           
 33597                           ;usb_device.c: 2145: }
 33598                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 33599                           
 33600                           ; BSR set to: 13
 33601                           
 33602                           ; BSR set to: 0
 33603                           ;usb_device.c: 2143: {
 33604                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 33605                           
 33606                           ;usb_device.c: 2142: if(0 == 1)
 33607  00A4F0  0446               	decf	_RemoteWakeup,w,c	;volatile
 33608  00A4F2  A4D8               	btfss	status,2,c
 33609  00A4F4  D042               	goto	i1l1374
 33610                           
 33611                           ;usb_device.c: 2148: {
 33612                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 33613  00A4F6  010D               	movlb	13	; () banked
 33614  00A4F8  8328               	bsf	40,1,b	;volatile
 33615                           
 33616                           ; BSR set to: 13
 33617                           ;usb_device.c: 2150: }
 33618                           ;usb_device.c: 2151: break;
 33619  00A4FA  D03F               	goto	i1l1374
 33620  00A4FC                     i1l1375:
 33621                           
 33622                           ; BSR set to: 13
 33623                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 33624  00A4FC  0100               	movlb	0	; () banked
 33625  00A4FE  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33626                           
 33627                           ;usb_device.c: 2154: break;
 33628  00A500  D03C               	goto	i1l1374
 33629  00A502                     i1l1376:
 33630                           
 33631                           ; BSR set to: 13
 33632                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 33633  00A502  0100               	movlb	0	; () banked
 33634  00A504  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 33635                           
 33636                           ;usb_device.c: 2160: {
 33637                           ;usb_device.c: 2161: BDT_ENTRY *p;
 33638                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 33639  00A506  010D               	movlb	13	; () banked
 33640  00A508  BF24               	btfsc	36,7,b	;volatile
 33641  00A50A  D00B               	goto	i1l11092
 33642                           
 33643                           ; BSR set to: 13
 33644                           ;usb_device.c: 2164: {
 33645                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 33646  00A50C  010D               	movlb	13	; () banked
 33647  00A50E  5124               	movf	36,w,b	;volatile
 33648  00A510  0B0F               	andlw	15
 33649  00A512  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 33650  00A514  5001               	movf	??_USBStdGetStatusHandler,w,c
 33651  00A516  0D02               	mullw	2
 33652  00A518  0E8F               	movlw	low _pBDTEntryOut
 33653  00A51A  24F3               	addwf	prodl,w,c
 33654  00A51C  6ED9               	movwf	fsr2l,c
 33655  00A51E  0E00               	movlw	high _pBDTEntryOut
 33656  00A520  D00A               	goto	L16
 33657  00A522                     i1l11092:
 33658                           
 33659                           ; BSR set to: 13
 33660                           ;usb_device.c: 2167: else
 33661                           ;usb_device.c: 2168: {
 33662                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 33663  00A522  010D               	movlb	13	; () banked
 33664  00A524  5124               	movf	36,w,b	;volatile
 33665  00A526  0B0F               	andlw	15
 33666  00A528  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 33667  00A52A  5001               	movf	??_USBStdGetStatusHandler,w,c
 33668  00A52C  0D02               	mullw	2
 33669  00A52E  0E8B               	movlw	low _pBDTEntryIn
 33670  00A530  24F3               	addwf	prodl,w,c
 33671  00A532  6ED9               	movwf	fsr2l,c
 33672  00A534  0E00               	movlw	high _pBDTEntryIn
 33673  00A536                     L16:
 33674  00A536  20F4               	addwfc	prodh,w,c
 33675  00A538  6EDA               	movwf	fsr2h,c
 33676  00A53A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 33677  00A53E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 33678                           
 33679                           ; BSR set to: 13
 33680                           ;usb_device.c: 2170: }
 33681                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 33682                           
 33683                           ; BSR set to: 13
 33684  00A542  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 33685  00A546  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 33686  00A54A  AEDF               	btfss	indf2,7,c
 33687  00A54C  D016               	goto	i1l1374
 33688                           
 33689                           ; BSR set to: 13
 33690  00A54E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 33691  00A552  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 33692  00A556  A4DF               	btfss	indf2,2,c
 33693  00A558  D010               	goto	i1l1374
 33694                           
 33695                           ; BSR set to: 13
 33696                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 33697  00A55A  0E01               	movlw	1
 33698  00A55C  010D               	movlb	13	; () banked
 33699  00A55E  6F28               	movwf	40,b	;volatile
 33700                           
 33701                           ; BSR set to: 13
 33702                           ;usb_device.c: 2175: }
 33703                           ;usb_device.c: 2176: }
 33704                           
 33705                           ; BSR set to: 13
 33706                           ;usb_device.c: 2174: break;
 33707  00A560  D00C               	goto	i1l1374
 33708  00A562                     i1l11102:
 33709                           
 33710                           ; BSR set to: 13
 33711  00A562  010D               	movlb	13	; () banked
 33712  00A564  5120               	movf	32,w,b	;volatile
 33713  00A566  0B1F               	andlw	31
 33714                           
 33715                           ; Switch size 1, requested type "space"
 33716                           ; Number of cases is 3, Range of values is 0 to 2
 33717                           ; switch strategies available:
 33718                           ; Name         Instructions Cycles
 33719                           ; simple_byte           10     6 (average)
 33720                           ;	Chosen strategy is simple_byte
 33721  00A568  0A00               	xorlw	0	; case 0
 33722  00A56A  B4D8               	btfsc	status,2,c
 33723  00A56C  D7BF               	goto	i1l1371
 33724  00A56E  0A01               	xorlw	1	; case 1
 33725  00A570  B4D8               	btfsc	status,2,c
 33726  00A572  D7C4               	goto	i1l1375
 33727  00A574  0A03               	xorlw	3	; case 2
 33728  00A576  B4D8               	btfsc	status,2,c
 33729  00A578  D7C4               	goto	i1l1376
 33730  00A57A                     i1l1374:
 33731                           
 33732                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 33733  00A57A  0100               	movlb	0	; () banked
 33734  00A57C  AF84               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 33735  00A57E  0012               	return	
 33736                           
 33737                           ; BSR set to: 0
 33738                           ;usb_device.c: 2179: {
 33739                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 33740  00A580  0E28               	movlw	40
 33741  00A582  0100               	movlb	0	; () banked
 33742  00A584  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33743  00A586  0E0D               	movlw	13
 33744  00A588  0100               	movlb	0	; () banked
 33745  00A58A  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33746                           
 33747                           ; BSR set to: 0
 33748                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 33749  00A58C  0100               	movlb	0	; () banked
 33750  00A58E  8184               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 33751                           
 33752                           ; BSR set to: 0
 33753                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 33754  00A590  0E02               	movlw	2
 33755  00A592  0100               	movlb	0	; () banked
 33756  00A594  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33757  00A596  0012               	return	
 33758  00A598                     __end_of_USBStdGetStatusHandler:
 33759                           	opt stack 0
 33760                           pclatu	equ	0xFFB
 33761                           pclath	equ	0xFFA
 33762                           tblptru	equ	0xFF8
 33763                           tblptrh	equ	0xFF7
 33764                           tblptrl	equ	0xFF6
 33765                           tablat	equ	0xFF5
 33766                           prodh	equ	0xFF4
 33767                           prodl	equ	0xFF3
 33768                           intcon	equ	0xFF2
 33769                           intcon2	equ	0xFF1
 33770                           intcon3	equ	0xFF0
 33771                           indf0	equ	0xFEF
 33772                           postinc0	equ	0xFEE
 33773                           plusw0	equ	0xFEB
 33774                           fsr0h	equ	0xFEA
 33775                           fsr0l	equ	0xFE9
 33776                           wreg	equ	0xFE8
 33777                           indf1	equ	0xFE7
 33778                           postinc1	equ	0xFE6
 33779                           postdec1	equ	0xFE5
 33780                           plusw1	equ	0xFE3
 33781                           fsr1h	equ	0xFE2
 33782                           fsr1l	equ	0xFE1
 33783                           bsr	equ	0xFE0
 33784                           indf2	equ	0xFDF
 33785                           postinc2	equ	0xFDE
 33786                           postdec2	equ	0xFDD
 33787                           plusw2	equ	0xFDB
 33788                           fsr2h	equ	0xFDA
 33789                           fsr2l	equ	0xFD9
 33790                           status	equ	0xFD8
 33791                           
 33792 ;; *************** function _USBStdGetDscHandler *****************
 33793 ;; Defined at:
 33794 ;;		line 2043 in file "src/usb/usb_device.c"
 33795 ;; Parameters:    Size  Location     Type
 33796 ;;		None
 33797 ;; Auto vars:     Size  Location     Type
 33798 ;;		None
 33799 ;; Return value:  Size  Location     Type
 33800 ;;		None               void
 33801 ;; Registers used:
 33802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33803 ;; Tracked objects:
 33804 ;;		On entry : 0/0
 33805 ;;		On exit  : 0/0
 33806 ;;		Unchanged: 0/0
 33807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33812 ;;Total ram usage:        2 bytes
 33813 ;; Hardware stack levels used:    1
 33814 ;; Hardware stack levels required when called:    6
 33815 ;; This function calls:
 33816 ;;		Nothing
 33817 ;; This function is called by:
 33818 ;;		_USBCheckStdRequest
 33819 ;; This function uses a non-reentrant model
 33820 ;;
 33821                           
 33822                           	psect	text100
 33823  007FC0                     __ptext100:
 33824                           	opt stack 0
 33825  007FC0                     _USBStdGetDscHandler:
 33826                           	opt stack 7
 33827                           
 33828                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 33829                           
 33830                           ; BSR set to: 0
 33831                           ;incstack = 0
 33832  007FC0  0E80               	movlw	128
 33833  007FC2  010D               	movlb	13	; () banked
 33834  007FC4  1920               	xorwf	32,w,b	;volatile
 33835  007FC6  A4D8               	btfss	status,2,c
 33836  007FC8  0012               	return	
 33837                           
 33838                           ; BSR set to: 13
 33839                           ;usb_device.c: 2046: {
 33840                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 33841  007FCA  0EC0               	movlw	192
 33842  007FCC  0100               	movlb	0	; () banked
 33843  007FCE  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 33844                           
 33845                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 33846  007FD0  D092               	goto	i1l11080
 33847  007FD2                     i1l11054:
 33848                           
 33849                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 33850  007FD2  0E77               	movlw	low _device_dsc
 33851  007FD4  0100               	movlb	0	; () banked
 33852  007FD6  6F81               	movwf	_inPipes& (0+255),b	;volatile
 33853  007FD8  0E21               	movlw	high _device_dsc
 33854  007FDA  0100               	movlb	0	; () banked
 33855  007FDC  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 33856                           
 33857                           ; BSR set to: 0
 33858                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 33859  007FDE  0E00               	movlw	0
 33860  007FE0  0100               	movlb	0	; () banked
 33861  007FE2  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 33862  007FE4  0E12               	movlw	18
 33863  007FE6  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33864                           
 33865                           ;usb_device.c: 2058: break;
 33866  007FE8  0012               	return	
 33867  007FEA                     i1l11058:
 33868                           
 33869                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 33870  007FEA  010D               	movlb	13	; () banked
 33871  007FEC  5122               	movf	34,w,b	;volatile
 33872  007FEE  A4D8               	btfss	status,2,c
 33873  007FF0  D049               	goto	i1l11066
 33874                           
 33875                           ; BSR set to: 13
 33876                           ;usb_device.c: 2064: {
 33877                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 33878  007FF2  010D               	movlb	13	; () banked
 33879  007FF4  5122               	movf	34,w,b	;volatile
 33880  007FF6  0D02               	mullw	2
 33881  007FF8  0ECD               	movlw	low _USB_CD_Ptr
 33882  007FFA  24F3               	addwf	prodl,w,c
 33883  007FFC  6EF6               	movwf	tblptrl,c
 33884  007FFE  0E20               	movlw	high _USB_CD_Ptr
 33885  008000  20F4               	addwfc	prodh,w,c
 33886  008002  6EF7               	movwf	tblptrh,c
 33887  008004                     	if	1	;There are 3 active tblptr bytes
 33888  008004  6AF8               	clrf	tblptru,c
 33889  008006  0E00               	movlw	low (__mediumconst shr (0+16))
 33890  008008  22F8               	addwfc	tblptru,f,c
 33891  00800A                     	endif
 33892  00800A  0009               	tblrd		*+
 33893  00800C  CFF5 F081          	movff	tablat,_inPipes	;volatile
 33894  008010  000A               	tblrd		*-
 33895  008012  CFF5 F082          	movff	tablat,_inPipes+1	;volatile
 33896                           
 33897                           ; BSR set to: 13
 33898                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 33899  008016  0E02               	movlw	2
 33900  008018  0100               	movlb	0	; () banked
 33901  00801A  2581               	addwf	_inPipes& (0+255),w,b	;volatile
 33902  00801C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 33903  00801E  0E00               	movlw	0
 33904  008020  0100               	movlb	0	; () banked
 33905  008022  2182               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 33906  008024  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 33907  008026  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 33908  00802A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 33909  00802E  0E00               	movlw	low (__mediumconst shr (0+16))
 33910  008030  6EF8               	movwf	tblptru,c
 33911  008032  0E0E               	movlw	(high __ramtop+-1)
 33912  008034  64F7               	cpfsgt	tblptrh,c
 33913  008036  D003               	bra	i1u1068_27
 33914  008038  0008               	tblrd		*
 33915  00803A  50F5               	movf	tablat,w,c
 33916  00803C  D005               	bra	i1u1068_20
 33917  00803E                     i1u1068_27:
 33918  00803E  CFF6 FFE9          	movff	tblptrl,fsr0l
 33919  008042  CFF7 FFEA          	movff	tblptrh,fsr0h
 33920  008046  50EF               	movf	indf0,w,c
 33921  008048                     i1u1068_20:
 33922  008048  0100               	movlb	0	; () banked
 33923  00804A  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 33924                           
 33925                           ; BSR set to: 0
 33926                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 33927  00804C  0E03               	movlw	3
 33928  00804E  0100               	movlb	0	; () banked
 33929  008050  2581               	addwf	_inPipes& (0+255),w,b	;volatile
 33930  008052  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 33931  008054  0E00               	movlw	0
 33932  008056  0100               	movlb	0	; () banked
 33933  008058  2182               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 33934  00805A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 33935  00805C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 33936  008060  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 33937  008064  0E00               	movlw	low (__mediumconst shr (0+16))
 33938  008066  6EF8               	movwf	tblptru,c
 33939  008068  0E0E               	movlw	(high __ramtop+-1)
 33940  00806A  64F7               	cpfsgt	tblptrh,c
 33941  00806C  D003               	bra	i1u1069_27
 33942  00806E  0008               	tblrd		*
 33943  008070  50F5               	movf	tablat,w,c
 33944  008072  D005               	bra	i1u1069_20
 33945  008074                     i1u1069_27:
 33946  008074  CFF6 FFE9          	movff	tblptrl,fsr0l
 33947  008078  CFF7 FFEA          	movff	tblptrh,fsr0h
 33948  00807C  50EF               	movf	indf0,w,c
 33949  00807E                     i1u1069_20:
 33950  00807E  0100               	movlb	0	; () banked
 33951  008080  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 33952                           
 33953                           ;usb_device.c: 2076: }
 33954  008082  0012               	return	
 33955  008084                     i1l11066:
 33956                           
 33957                           ;usb_device.c: 2077: else
 33958                           ;usb_device.c: 2078: {
 33959                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 33960  008084  0E00               	movlw	0
 33961  008086  0100               	movlb	0	; () banked
 33962  008088  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 33963                           
 33964                           ; BSR set to: 0
 33965                           ;usb_device.c: 2080: }
 33966                           ;usb_device.c: 2081: break;
 33967  00808A  0012               	return	
 33968  00808C                     i1l11068:
 33969                           
 33970                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 33971  00808C  0E03               	movlw	3
 33972  00808E  010D               	movlb	13	; () banked
 33973  008090  6122               	cpfslt	34,b	;volatile
 33974  008092  D029               	goto	i1l11074
 33975                           
 33976                           ; BSR set to: 13
 33977                           ;usb_device.c: 2087: {
 33978                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 33979  008094  010D               	movlb	13	; () banked
 33980  008096  5122               	movf	34,w,b	;volatile
 33981  008098  0D02               	mullw	2
 33982  00809A  0EC3               	movlw	low _USB_SD_Ptr
 33983  00809C  24F3               	addwf	prodl,w,c
 33984  00809E  6EF6               	movwf	tblptrl,c
 33985  0080A0  0E20               	movlw	high _USB_SD_Ptr
 33986  0080A2  20F4               	addwfc	prodh,w,c
 33987  0080A4  6EF7               	movwf	tblptrh,c
 33988  0080A6                     	if	1	;There are 3 active tblptr bytes
 33989  0080A6  6AF8               	clrf	tblptru,c
 33990  0080A8  0E00               	movlw	low (__mediumconst shr (0+16))
 33991  0080AA  22F8               	addwfc	tblptru,f,c
 33992  0080AC                     	endif
 33993  0080AC  0009               	tblrd		*+
 33994  0080AE  CFF5 F081          	movff	tablat,_inPipes	;volatile
 33995  0080B2  000A               	tblrd		*-
 33996  0080B4  CFF5 F082          	movff	tablat,_inPipes+1	;volatile
 33997                           
 33998                           ; BSR set to: 13
 33999                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 34000  0080B8  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 34001  0080BC  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 34002  0080C0  0E00               	movlw	low (__mediumconst shr (0+16))
 34003  0080C2  6EF8               	movwf	tblptru,c
 34004  0080C4  0E0E               	movlw	(high __ramtop+-1)
 34005  0080C6  64F7               	cpfsgt	tblptrh,c
 34006  0080C8  D003               	bra	i1u1071_27
 34007  0080CA  0008               	tblrd		*
 34008  0080CC  50F5               	movf	tablat,w,c
 34009  0080CE  D005               	bra	i1u1071_20
 34010  0080D0                     i1u1071_27:
 34011  0080D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 34012  0080D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 34013  0080D8  50EF               	movf	indf0,w,c
 34014  0080DA                     i1u1071_20:
 34015  0080DA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 34016  0080DC  5001               	movf	??_USBStdGetDscHandler,w,c
 34017  0080DE  0100               	movlb	0	; () banked
 34018  0080E0  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 34019  0080E2  6B86               	clrf	(_inPipes+5)& (0+255),b	;volatile
 34020                           
 34021                           ;usb_device.c: 2092: }
 34022  0080E4  0012               	return	
 34023  0080E6                     i1l11074:
 34024                           
 34025                           ;usb_device.c: 2102: else
 34026                           ;usb_device.c: 2103: {
 34027                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 34028  0080E6  0E00               	movlw	0
 34029  0080E8  0100               	movlb	0	; () banked
 34030  0080EA  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34031                           
 34032                           ; BSR set to: 0
 34033                           ;usb_device.c: 2105: }
 34034                           ;usb_device.c: 2106: break;
 34035  0080EC  0012               	return	
 34036  0080EE                     i1l11076:
 34037                           
 34038                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 34039  0080EE  0E00               	movlw	0
 34040  0080F0  0100               	movlb	0	; () banked
 34041  0080F2  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34042                           
 34043                           ; BSR set to: 0
 34044                           ;usb_device.c: 2110: }
 34045                           
 34046                           ;usb_device.c: 2109: break;
 34047  0080F4  0012               	return	
 34048  0080F6                     i1l11080:
 34049                           
 34050                           ; BSR set to: 0
 34051  0080F6  010D               	movlb	13	; () banked
 34052  0080F8  5123               	movf	35,w,b	;volatile
 34053                           
 34054                           ; Switch size 1, requested type "space"
 34055                           ; Number of cases is 3, Range of values is 1 to 3
 34056                           ; switch strategies available:
 34057                           ; Name         Instructions Cycles
 34058                           ; simple_byte           10     6 (average)
 34059                           ;	Chosen strategy is simple_byte
 34060  0080FA  0A01               	xorlw	1	; case 1
 34061  0080FC  B4D8               	btfsc	status,2,c
 34062  0080FE  D769               	goto	i1l11054
 34063  008100  0A03               	xorlw	3	; case 2
 34064  008102  B4D8               	btfsc	status,2,c
 34065  008104  D772               	goto	i1l11058
 34066  008106  0A01               	xorlw	1	; case 3
 34067  008108  B4D8               	btfsc	status,2,c
 34068  00810A  D7C0               	goto	i1l11068
 34069  00810C  D7F0               	goto	i1l11076
 34070  00810E                     __end_of_USBStdGetDscHandler:
 34071                           	opt stack 0
 34072                           pclatu	equ	0xFFB
 34073                           pclath	equ	0xFFA
 34074                           tblptru	equ	0xFF8
 34075                           tblptrh	equ	0xFF7
 34076                           tblptrl	equ	0xFF6
 34077                           tablat	equ	0xFF5
 34078                           prodh	equ	0xFF4
 34079                           prodl	equ	0xFF3
 34080                           intcon	equ	0xFF2
 34081                           intcon2	equ	0xFF1
 34082                           intcon3	equ	0xFF0
 34083                           indf0	equ	0xFEF
 34084                           postinc0	equ	0xFEE
 34085                           plusw0	equ	0xFEB
 34086                           fsr0h	equ	0xFEA
 34087                           fsr0l	equ	0xFE9
 34088                           wreg	equ	0xFE8
 34089                           indf1	equ	0xFE7
 34090                           postinc1	equ	0xFE6
 34091                           postdec1	equ	0xFE5
 34092                           plusw1	equ	0xFE3
 34093                           fsr1h	equ	0xFE2
 34094                           fsr1l	equ	0xFE1
 34095                           bsr	equ	0xFE0
 34096                           indf2	equ	0xFDF
 34097                           postinc2	equ	0xFDE
 34098                           postdec2	equ	0xFDD
 34099                           plusw2	equ	0xFDB
 34100                           fsr2h	equ	0xFDA
 34101                           fsr2l	equ	0xFD9
 34102                           status	equ	0xFD8
 34103                           
 34104 ;; *************** function _USBStdFeatureReqHandler *****************
 34105 ;; Defined at:
 34106 ;;		line 2757 in file "src/usb/usb_device.c"
 34107 ;; Parameters:    Size  Location     Type
 34108 ;;		None
 34109 ;; Auto vars:     Size  Location     Type
 34110 ;;  p               2   24[COMRAM] PTR struct __BDT
 34111 ;;		 -> BDT(32), NULL(0), 
 34112 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 34113 ;;		 -> UEP0(1), 
 34114 ;;  current_ep_d    1   23[COMRAM] struct .
 34115 ;; Return value:  Size  Location     Type
 34116 ;;		None               void
 34117 ;; Registers used:
 34118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34119 ;; Tracked objects:
 34120 ;;		On entry : 0/0
 34121 ;;		On exit  : 0/0
 34122 ;;		Unchanged: 0/0
 34123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34125 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34128 ;;Total ram usage:        6 bytes
 34129 ;; Hardware stack levels used:    1
 34130 ;; Hardware stack levels required when called:   10
 34131 ;; This function calls:
 34132 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34133 ;; This function is called by:
 34134 ;;		_USBCheckStdRequest
 34135 ;; This function uses a non-reentrant model
 34136 ;;
 34137                           
 34138                           	psect	text101
 34139  006658                     __ptext101:
 34140                           	opt stack 0
 34141  006658                     _USBStdFeatureReqHandler:
 34142                           	opt stack 3
 34143                           
 34144                           ;usb_device.c: 2759: BDT_ENTRY *p;
 34145                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 34146                           ;usb_device.c: 2764: unsigned char* pUEP;
 34147                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 34148                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 34149                           
 34150                           ;incstack = 0
 34151  006658  010D               	movlb	13	; () banked
 34152  00665A  0522               	decf	34,w,b	;volatile
 34153  00665C  A4D8               	btfss	status,2,c
 34154  00665E  D011               	goto	i1l1450
 34155                           
 34156                           ; BSR set to: 13
 34157  006660  010D               	movlb	13	; () banked
 34158  006662  5120               	movf	32,w,b	;volatile
 34159  006664  0B1F               	andlw	31
 34160  006666  0900               	iorlw	0
 34161  006668  A4D8               	btfss	status,2,c
 34162  00666A  D00B               	goto	i1l1450
 34163                           
 34164                           ; BSR set to: 13
 34165                           ;usb_device.c: 2804: {
 34166                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 34167  00666C  0100               	movlb	0	; () banked
 34168  00666E  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 34169                           
 34170                           ; BSR set to: 0
 34171                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 34172  006670  0E03               	movlw	3
 34173  006672  010D               	movlb	13	; () banked
 34174  006674  1921               	xorwf	33,w,b	;volatile
 34175  006676  A4D8               	btfss	status,2,c
 34176  006678  D002               	goto	i1l11120
 34177                           
 34178                           ; BSR set to: 13
 34179                           ;usb_device.c: 2807: RemoteWakeup = 1;
 34180  00667A  0E01               	movlw	1
 34181  00667C  D001               	goto	L17
 34182  00667E                     i1l11120:
 34183                           
 34184                           ; BSR set to: 13
 34185                           ;usb_device.c: 2808: else
 34186                           ;usb_device.c: 2809: RemoteWakeup = 0;
 34187  00667E  0E00               	movlw	0
 34188  006680                     L17:
 34189  006680  6E46               	movwf	_RemoteWakeup,c	;volatile
 34190  006682                     i1l1450:
 34191                           
 34192                           ; BSR set to: 13
 34193                           ;usb_device.c: 2810: }
 34194                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 34195                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 34196                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 34197                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 34198  006682  010D               	movlb	13	; () banked
 34199  006684  5122               	movf	34,w,b	;volatile
 34200  006686  A4D8               	btfss	status,2,c
 34201  006688  0012               	return	
 34202                           
 34203                           ; BSR set to: 13
 34204  00668A  010D               	movlb	13	; () banked
 34205  00668C  5120               	movf	32,w,b	;volatile
 34206  00668E  0B1F               	andlw	31
 34207  006690  0A02               	xorlw	2
 34208  006692  A4D8               	btfss	status,2,c
 34209  006694  0012               	return	
 34210                           
 34211                           ; BSR set to: 13
 34212  006696  010D               	movlb	13	; () banked
 34213  006698  5124               	movf	36,w,b	;volatile
 34214  00669A  0B0F               	andlw	15
 34215  00669C  0900               	iorlw	0
 34216  00669E  B4D8               	btfsc	status,2,c
 34217  0066A0  0012               	return	
 34218                           
 34219                           ; BSR set to: 13
 34220  0066A2  010D               	movlb	13	; () banked
 34221  0066A4  5124               	movf	36,w,b	;volatile
 34222  0066A6  0B0F               	andlw	15
 34223  0066A8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34224  0066AA  0E02               	movlw	2
 34225  0066AC  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 34226  0066AE  0012               	return	
 34227                           
 34228                           ; BSR set to: 13
 34229  0066B0  0E20               	movlw	32
 34230  0066B2  184B               	xorwf	_USBDeviceState,w,c	;volatile
 34231  0066B4  A4D8               	btfss	status,2,c
 34232  0066B6  0012               	return	
 34233                           
 34234                           ; BSR set to: 13
 34235                           ;usb_device.c: 2817: {
 34236                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 34237  0066B8  0100               	movlb	0	; () banked
 34238  0066BA  8F84               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 34239                           
 34240                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 34241  0066BC  010D               	movlb	13	; () banked
 34242  0066BE  BF24               	btfsc	36,7,b	;volatile
 34243  0066C0  D01B               	goto	i1l11134
 34244                           
 34245                           ; BSR set to: 13
 34246                           ;usb_device.c: 2824: {
 34247                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 34248  0066C2  010D               	movlb	13	; () banked
 34249  0066C4  5124               	movf	36,w,b	;volatile
 34250  0066C6  0B0F               	andlw	15
 34251  0066C8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34252  0066CA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34253  0066CC  0D02               	mullw	2
 34254  0066CE  0E8F               	movlw	low _pBDTEntryOut
 34255  0066D0  24F3               	addwf	prodl,w,c
 34256  0066D2  6ED9               	movwf	fsr2l,c
 34257  0066D4  0E00               	movlw	high _pBDTEntryOut
 34258  0066D6  20F4               	addwfc	prodh,w,c
 34259  0066D8  6EDA               	movwf	fsr2h,c
 34260  0066DA  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 34261  0066DE  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 34262                           
 34263                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 34264  0066E2  010D               	movlb	13	; () banked
 34265  0066E4  5124               	movf	36,w,b	;volatile
 34266  0066E6  0B0F               	andlw	15
 34267  0066E8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34268  0066EA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34269  0066EC  0D01               	mullw	1
 34270  0066EE  0E97               	movlw	low _ep_data_out
 34271  0066F0  24F3               	addwf	prodl,w,c
 34272  0066F2  6ED9               	movwf	fsr2l,c
 34273  0066F4  0E00               	movlw	high _ep_data_out
 34274  0066F6  D01A               	goto	L18
 34275  0066F8                     i1l11134:
 34276                           
 34277                           ; BSR set to: 13
 34278                           ;usb_device.c: 2828: else
 34279                           ;usb_device.c: 2829: {
 34280                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 34281  0066F8  010D               	movlb	13	; () banked
 34282  0066FA  5124               	movf	36,w,b	;volatile
 34283  0066FC  0B0F               	andlw	15
 34284  0066FE  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34285  006700  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34286  006702  0D02               	mullw	2
 34287  006704  0E8B               	movlw	low _pBDTEntryIn
 34288  006706  24F3               	addwf	prodl,w,c
 34289  006708  6ED9               	movwf	fsr2l,c
 34290  00670A  0E00               	movlw	high _pBDTEntryIn
 34291  00670C  20F4               	addwfc	prodh,w,c
 34292  00670E  6EDA               	movwf	fsr2h,c
 34293  006710  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 34294  006714  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 34295                           
 34296                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 34297  006718  010D               	movlb	13	; () banked
 34298  00671A  5124               	movf	36,w,b	;volatile
 34299  00671C  0B0F               	andlw	15
 34300  00671E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34301  006720  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34302  006722  0D01               	mullw	1
 34303  006724  0E95               	movlw	low _ep_data_in
 34304  006726  24F3               	addwf	prodl,w,c
 34305  006728  6ED9               	movwf	fsr2l,c
 34306  00672A  0E00               	movlw	high _ep_data_in
 34307  00672C                     L18:
 34308  00672C  20F4               	addwfc	prodh,w,c
 34309  00672E  6EDA               	movwf	fsr2h,c
 34310  006730  50DF               	movf	indf2,w,c
 34311  006732  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 34312                           
 34313                           ; BSR set to: 13
 34314                           ;usb_device.c: 2832: }
 34315                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 34316                           
 34317                           ; BSR set to: 13
 34318  006734  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 34319  006736  D002               	goto	i1l11140
 34320                           
 34321                           ; BSR set to: 13
 34322                           ;usb_device.c: 2839: {
 34323                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 34324  006738  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 34325                           
 34326                           ;usb_device.c: 2841: }
 34327  00673A  D001               	goto	i1l11142
 34328  00673C                     i1l11140:
 34329                           
 34330                           ; BSR set to: 13
 34331                           ;usb_device.c: 2842: else
 34332                           ;usb_device.c: 2843: {
 34333                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 34334  00673C  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 34335  00673E                     i1l11142:
 34336                           
 34337                           ; BSR set to: 13
 34338                           ;usb_device.c: 2845: }
 34339                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 34340  00673E  010D               	movlb	13	; () banked
 34341  006740  BF24               	btfsc	36,7,b	;volatile
 34342  006742  D00B               	goto	i1l11146
 34343                           
 34344                           ; BSR set to: 13
 34345                           ;usb_device.c: 2851: {
 34346                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 34347  006744  010D               	movlb	13	; () banked
 34348  006746  5124               	movf	36,w,b	;volatile
 34349  006748  0B0F               	andlw	15
 34350  00674A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34351  00674C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34352  00674E  0D02               	mullw	2
 34353  006750  0E8F               	movlw	low _pBDTEntryOut
 34354  006752  24F3               	addwf	prodl,w,c
 34355  006754  6ED9               	movwf	fsr2l,c
 34356  006756  0E00               	movlw	high _pBDTEntryOut
 34357  006758  D00A               	goto	L19
 34358  00675A                     i1l11146:
 34359                           
 34360                           ; BSR set to: 13
 34361                           ;usb_device.c: 2854: else
 34362                           ;usb_device.c: 2855: {
 34363                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 34364  00675A  010D               	movlb	13	; () banked
 34365  00675C  5124               	movf	36,w,b	;volatile
 34366  00675E  0B0F               	andlw	15
 34367  006760  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34368  006762  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34369  006764  0D02               	mullw	2
 34370  006766  0E8B               	movlw	low _pBDTEntryIn
 34371  006768  24F3               	addwf	prodl,w,c
 34372  00676A  6ED9               	movwf	fsr2l,c
 34373  00676C  0E00               	movlw	high _pBDTEntryIn
 34374  00676E                     L19:
 34375  00676E  20F4               	addwfc	prodh,w,c
 34376  006770  6EDA               	movwf	fsr2h,c
 34377  006772  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 34378  006776  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 34379                           
 34380                           ; BSR set to: 13
 34381                           ;usb_device.c: 2857: }
 34382                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 34383                           
 34384                           ; BSR set to: 13
 34385  00677A  0E03               	movlw	3
 34386  00677C  010D               	movlb	13	; () banked
 34387  00677E  1921               	xorwf	33,w,b	;volatile
 34388  006780  A4D8               	btfss	status,2,c
 34389  006782  D02F               	goto	i1l11162
 34390                           
 34391                           ; BSR set to: 13
 34392                           ;usb_device.c: 2861: {
 34393                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 34394  006784  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34395  006788  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34396  00678C  AEDF               	btfss	indf2,7,c
 34397  00678E  D01C               	goto	i1l11158
 34398                           
 34399                           ; BSR set to: 13
 34400                           ;usb_device.c: 2863: {
 34401                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 34402  006790  010D               	movlb	13	; () banked
 34403  006792  BF24               	btfsc	36,7,b	;volatile
 34404  006794  D00B               	goto	i1l11156
 34405                           
 34406                           ; BSR set to: 13
 34407                           ;usb_device.c: 2867: {
 34408                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 34409  006796  010D               	movlb	13	; () banked
 34410  006798  5124               	movf	36,w,b	;volatile
 34411  00679A  0B0F               	andlw	15
 34412  00679C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34413  00679E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34414  0067A0  0D01               	mullw	1
 34415  0067A2  0E97               	movlw	low _ep_data_out
 34416  0067A4  24F3               	addwf	prodl,w,c
 34417  0067A6  6ED9               	movwf	fsr2l,c
 34418  0067A8  0E00               	movlw	high _ep_data_out
 34419  0067AA  D00A               	goto	L20
 34420  0067AC                     i1l11156:
 34421                           
 34422                           ;usb_device.c: 2870: else
 34423                           ;usb_device.c: 2871: {
 34424                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 34425  0067AC  010D               	movlb	13	; () banked
 34426  0067AE  5124               	movf	36,w,b	;volatile
 34427  0067B0  0B0F               	andlw	15
 34428  0067B2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34429  0067B4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34430  0067B6  0D01               	mullw	1
 34431  0067B8  0E95               	movlw	low _ep_data_in
 34432  0067BA  24F3               	addwf	prodl,w,c
 34433  0067BC  6ED9               	movwf	fsr2l,c
 34434  0067BE  0E00               	movlw	high _ep_data_in
 34435  0067C0                     L20:
 34436  0067C0  20F4               	addwfc	prodh,w,c
 34437  0067C2  6EDA               	movwf	fsr2h,c
 34438  0067C4  0100               	movlb	0	; () banked
 34439  0067C6  82DF               	bsf	indf2,1,c
 34440  0067C8                     i1l11158:
 34441                           
 34442                           ;usb_device.c: 2873: }
 34443                           ;usb_device.c: 2874: }
 34444                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 34445  0067C8  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34446  0067CC  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34447  0067D0  0E00               	movlw	0
 34448  0067D2  84DB               	bsf	plusw2,2,c
 34449                           
 34450                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 34451  0067D4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34452  0067D8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34453  0067DC  0E00               	movlw	0
 34454  0067DE  8EDB               	bsf	plusw2,7,c
 34455                           
 34456                           ;usb_device.c: 2879: }
 34457  0067E0  0012               	return	
 34458  0067E2                     i1l11162:
 34459                           
 34460                           ;usb_device.c: 2880: else
 34461                           ;usb_device.c: 2881: {
 34462                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 34463  0067E2  0E04               	movlw	4
 34464  0067E4  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 34465                           
 34466                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 34467  0067E6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34468  0067EA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34469  0067EE  AEDF               	btfss	indf2,7,c
 34470  0067F0  D01B               	goto	i1l11172
 34471                           
 34472                           ;usb_device.c: 2888: {
 34473                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 34474  0067F2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34475  0067F6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34476  0067FA  0E7F               	movlw	127
 34477  0067FC  16DF               	andwf	indf2,f,c
 34478                           
 34479                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 34480  0067FE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34481  006802  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34482  006806  0E00               	movlw	0
 34483  006808  8CDB               	bsf	plusw2,6,c
 34484                           
 34485                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 34486  00680A  0E00               	movlw	0
 34487  00680C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34488  00680E  0E05               	movlw	5
 34489  006810  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34490  006812  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 34491  006816  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 34492  00681A  0E00               	movlw	0
 34493  00681C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34494  00681E  0E02               	movlw	2
 34495  006820  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34496  006822  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34497                           
 34498                           ;usb_device.c: 2894: }
 34499  006826  D006               	goto	i1l11174
 34500  006828                     i1l11172:
 34501                           
 34502                           ;usb_device.c: 2895: else
 34503                           ;usb_device.c: 2896: {
 34504                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 34505  006828  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34506  00682C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34507  006830  0E00               	movlw	0
 34508  006832  8CDB               	bsf	plusw2,6,c
 34509  006834                     i1l11174:
 34510                           
 34511                           ;usb_device.c: 2899: }
 34512                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 34513  006834  0E04               	movlw	4
 34514  006836  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 34515                           
 34516                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 34517  006838  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 34518  00683A  D006               	goto	i1l1469
 34519  00683C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34520  006840  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34521  006844  AEDF               	btfss	indf2,7,c
 34522  006846  D031               	goto	i1l11188
 34523  006848                     i1l1469:
 34524                           
 34525                           ;usb_device.c: 2910: {
 34526                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 34527  006848  010D               	movlb	13	; () banked
 34528  00684A  BF24               	btfsc	36,7,b	;volatile
 34529  00684C  D00B               	goto	i1l11182
 34530                           
 34531                           ; BSR set to: 13
 34532                           ;usb_device.c: 2912: {
 34533                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 34534  00684E  010D               	movlb	13	; () banked
 34535  006850  5124               	movf	36,w,b	;volatile
 34536  006852  0B0F               	andlw	15
 34537  006854  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34538  006856  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34539  006858  0D01               	mullw	1
 34540  00685A  0E97               	movlw	low _ep_data_out
 34541  00685C  24F3               	addwf	prodl,w,c
 34542  00685E  6ED9               	movwf	fsr2l,c
 34543  006860  0E00               	movlw	high _ep_data_out
 34544  006862  D00A               	goto	L21
 34545  006864                     i1l11182:
 34546                           
 34547                           ;usb_device.c: 2915: else
 34548                           ;usb_device.c: 2916: {
 34549                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 34550  006864  010D               	movlb	13	; () banked
 34551  006866  5124               	movf	36,w,b	;volatile
 34552  006868  0B0F               	andlw	15
 34553  00686A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34554  00686C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34555  00686E  0D01               	mullw	1
 34556  006870  0E95               	movlw	low _ep_data_in
 34557  006872  24F3               	addwf	prodl,w,c
 34558  006874  6ED9               	movwf	fsr2l,c
 34559  006876  0E00               	movlw	high _ep_data_in
 34560  006878                     L21:
 34561  006878  20F4               	addwfc	prodh,w,c
 34562  00687A  6EDA               	movwf	fsr2h,c
 34563  00687C  0100               	movlb	0	; () banked
 34564  00687E  92DF               	bcf	indf2,1,c
 34565                           
 34566                           ; BSR set to: 0
 34567                           ;usb_device.c: 2918: }
 34568                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 34569                           
 34570                           ; BSR set to: 0
 34571  006880  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34572  006884  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34573  006888  0E3B               	movlw	59
 34574  00688A  16DF               	andwf	indf2,f,c
 34575                           
 34576                           ; BSR set to: 0
 34577                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 34578  00688C  0E00               	movlw	0
 34579  00688E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34580  006890  0E05               	movlw	5
 34581  006892  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34582  006894  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 34583  006898  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 34584  00689C  0E00               	movlw	0
 34585  00689E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34586  0068A0  0E02               	movlw	2
 34587  0068A2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34588  0068A4  ECEF  F058         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34589                           
 34590                           ;usb_device.c: 2924: }
 34591  0068A8  D006               	goto	i1l11190
 34592  0068AA                     i1l11188:
 34593                           
 34594                           ;usb_device.c: 2925: else
 34595                           ;usb_device.c: 2926: {
 34596                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 34597  0068AA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 34598  0068AE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 34599  0068B2  0E3B               	movlw	59
 34600  0068B4  16DF               	andwf	indf2,f,c
 34601  0068B6                     i1l11190:
 34602                           
 34603                           ;usb_device.c: 2929: }
 34604                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 34605  0068B6  010D               	movlb	13	; () banked
 34606  0068B8  5124               	movf	36,w,b	;volatile
 34607  0068BA  0B0F               	andlw	15
 34608  0068BC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 34609  0068BE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 34610  0068C0  0D01               	mullw	1
 34611  0068C2  0E26               	movlw	38
 34612  0068C4  24F3               	addwf	prodl,w,c
 34613  0068C6  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 34614  0068C8  0E0F               	movlw	15
 34615  0068CA  20F4               	addwfc	prodh,w,c
 34616  0068CC  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 34617                           
 34618                           ; BSR set to: 13
 34619                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 34620  0068CE  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 34621  0068D2  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 34622  0068D6  0EFE               	movlw	254
 34623  0068D8  16DF               	andwf	indf2,f,c
 34624                           
 34625                           ; BSR set to: 13
 34626  0068DA  0012               	return	
 34627  0068DC                     __end_of_USBStdFeatureReqHandler:
 34628                           	opt stack 0
 34629                           pclatu	equ	0xFFB
 34630                           pclath	equ	0xFFA
 34631                           tblptru	equ	0xFF8
 34632                           tblptrh	equ	0xFF7
 34633                           tblptrl	equ	0xFF6
 34634                           tablat	equ	0xFF5
 34635                           prodh	equ	0xFF4
 34636                           prodl	equ	0xFF3
 34637                           intcon	equ	0xFF2
 34638                           intcon2	equ	0xFF1
 34639                           intcon3	equ	0xFF0
 34640                           indf0	equ	0xFEF
 34641                           postinc0	equ	0xFEE
 34642                           plusw0	equ	0xFEB
 34643                           fsr0h	equ	0xFEA
 34644                           fsr0l	equ	0xFE9
 34645                           wreg	equ	0xFE8
 34646                           indf1	equ	0xFE7
 34647                           postinc1	equ	0xFE6
 34648                           postdec1	equ	0xFE5
 34649                           plusw1	equ	0xFE3
 34650                           fsr1h	equ	0xFE2
 34651                           fsr1l	equ	0xFE1
 34652                           bsr	equ	0xFE0
 34653                           indf2	equ	0xFDF
 34654                           postinc2	equ	0xFDE
 34655                           postdec2	equ	0xFDD
 34656                           plusw2	equ	0xFDB
 34657                           fsr2h	equ	0xFDA
 34658                           fsr2l	equ	0xFD9
 34659                           status	equ	0xFD8
 34660                           
 34661 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 34662 ;; Defined at:
 34663 ;;		line 853 in file "src/main.c"
 34664 ;; Parameters:    Size  Location     Type
 34665 ;;  event           2   12[COMRAM] enum E10007
 34666 ;;  pdata           2   14[COMRAM] PTR void 
 34667 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
 34668 ;;  size            2   16[COMRAM] unsigned int 
 34669 ;; Auto vars:     Size  Location     Type
 34670 ;;		None
 34671 ;; Return value:  Size  Location     Type
 34672 ;;                  1    wreg      unsigned char 
 34673 ;; Registers used:
 34674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34675 ;; Tracked objects:
 34676 ;;		On entry : 0/0
 34677 ;;		On exit  : 0/0
 34678 ;;		Unchanged: 0/0
 34679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34680 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34683 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34684 ;;Total ram usage:        8 bytes
 34685 ;; Hardware stack levels used:    1
 34686 ;; Hardware stack levels required when called:    9
 34687 ;; This function calls:
 34688 ;;		_APP_DeviceCustomHIDInitialize
 34689 ;;		_APP_LEDUpdateUSBStatus
 34690 ;;		_USBCheckHIDRequest
 34691 ;; This function is called by:
 34692 ;;		_USBDeviceTasks
 34693 ;;		_USBStdSetCfgHandler
 34694 ;;		_USBSuspend
 34695 ;;		_USBWakeFromSuspend
 34696 ;;		_USBCtrlTrfSetupHandler
 34697 ;;		_USBCheckStdRequest
 34698 ;;		_USBStdFeatureReqHandler
 34699 ;; This function uses a non-reentrant model
 34700 ;;
 34701                           
 34702                           	psect	text102
 34703  00B1DE                     __ptext102:
 34704                           	opt stack 0
 34705  00B1DE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 34706                           	opt stack 7
 34707                           
 34708                           ;main.c: 855: switch((int)event)
 34709                           
 34710                           ;incstack = 0
 34711  00B1DE  D00F               	goto	i1l10522
 34712  00B1E0                     i1l10510:
 34713                           
 34714                           ;main.c: 863: APP_LEDUpdateUSBStatus();
 34715  00B1E0  ECED  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34716                           
 34717                           ;main.c: 864: break;
 34718  00B1E4  0012               	return	
 34719  00B1E6                     i1l10512:
 34720                           
 34721                           ;main.c: 868: APP_LEDUpdateUSBStatus();
 34722  00B1E6  ECED  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34723                           
 34724                           ;main.c: 869: break;
 34725  00B1EA  0012               	return	
 34726  00B1EC                     i1l10514:
 34727                           
 34728                           ;main.c: 873: APP_LEDUpdateUSBStatus();
 34729  00B1EC  ECED  F05B         	call	_APP_LEDUpdateUSBStatus	;wreg free
 34730                           
 34731                           ;main.c: 874: break;
 34732  00B1F0  0012               	return	
 34733  00B1F2                     i1l10516:
 34734                           
 34735                           ;main.c: 879: APP_DeviceCustomHIDInitialize();
 34736  00B1F2  EC9B  F05C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 34737                           
 34738                           ;main.c: 883: break;
 34739                           
 34740                           ;main.c: 882: case EVENT_SET_DESCRIPTOR:
 34741                           
 34742                           ;main.c: 880: break;
 34743  00B1F6  0012               	return	
 34744  00B1F8                     i1l10518:
 34745                           
 34746                           ;main.c: 888: USBCheckHIDRequest();
 34747  00B1F8  ECCF  F049         	call	_USBCheckHIDRequest	;wreg free
 34748                           
 34749                           ;main.c: 899: }
 34750                           
 34751                           ;main.c: 898: break;
 34752                           
 34753                           ;main.c: 897: default:
 34754                           
 34755                           ;main.c: 895: break;
 34756                           
 34757                           ;main.c: 894: case EVENT_TRANSFER_TERMINATED:
 34758                           
 34759                           ;main.c: 892: break;
 34760                           
 34761                           ;main.c: 891: case EVENT_BUS_ERROR:
 34762                           
 34763                           ;main.c: 889: break;
 34764  00B1FC  0012               	return	
 34765  00B1FE                     i1l10522:
 34766  00B1FE  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 34767  00B202  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 34768                           
 34769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 34770                           ; Switch size 1, requested type "space"
 34771                           ; Number of cases is 2, Range of values is 0 to 127
 34772                           ; switch strategies available:
 34773                           ; Name         Instructions Cycles
 34774                           ; simple_byte            7     4 (average)
 34775                           ;	Chosen strategy is simple_byte
 34776  00B206  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 34777  00B208  0A00               	xorlw	0	; case 0
 34778  00B20A  B4D8               	btfsc	status,2,c
 34779  00B20C  D004               	goto	i1l22186
 34780  00B20E  0A7F               	xorlw	127	; case 127
 34781  00B210  A4D8               	btfss	status,2,c
 34782  00B212  0012               	return	
 34783  00B214  D01A               	goto	i1l22188
 34784  00B216                     i1l22186:
 34785                           
 34786                           ; Switch size 1, requested type "space"
 34787                           ; Number of cases is 8, Range of values is 1 to 117
 34788                           ; switch strategies available:
 34789                           ; Name         Instructions Cycles
 34790                           ; simple_byte           25    13 (average)
 34791                           ;	Chosen strategy is simple_byte
 34792  00B216  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 34793  00B218  0A01               	xorlw	1	; case 1
 34794  00B21A  B4D8               	btfsc	status,2,c
 34795  00B21C  D7EA               	goto	i1l10516
 34796  00B21E  0A03               	xorlw	3	; case 2
 34797  00B220  B4D8               	btfsc	status,2,c
 34798  00B222  0012               	return	
 34799  00B224  0A01               	xorlw	1	; case 3
 34800  00B226  B4D8               	btfsc	status,2,c
 34801  00B228  D7E7               	goto	i1l10518
 34802  00B22A  0A06               	xorlw	6	; case 5
 34803  00B22C  B4D8               	btfsc	status,2,c
 34804  00B22E  0012               	return	
 34805  00B230  0A77               	xorlw	119	; case 114
 34806  00B232  B4D8               	btfsc	status,2,c
 34807  00B234  0012               	return	
 34808  00B236  0A01               	xorlw	1	; case 115
 34809  00B238  B4D8               	btfsc	status,2,c
 34810  00B23A  D7D2               	goto	i1l10510
 34811  00B23C  0A07               	xorlw	7	; case 116
 34812  00B23E  B4D8               	btfsc	status,2,c
 34813  00B240  D7D5               	goto	i1l10514
 34814  00B242  0A01               	xorlw	1	; case 117
 34815  00B244  A4D8               	btfss	status,2,c
 34816  00B246  0012               	return	
 34817  00B248  D7CE               	goto	i1l10512
 34818  00B24A                     i1l22188:
 34819                           
 34820                           ; Switch size 1, requested type "space"
 34821                           ; Number of cases is 1, Range of values is 255 to 255
 34822                           ; switch strategies available:
 34823                           ; Name         Instructions Cycles
 34824                           ; simple_byte            4     3 (average)
 34825                           ;	Chosen strategy is simple_byte
 34826  00B24A  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 34827  00B24C  0AFF               	xorlw	255	; case 255
 34828  00B24E  0012               	return	
 34829  00B250                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 34830                           	opt stack 0
 34831                           pclatu	equ	0xFFB
 34832                           pclath	equ	0xFFA
 34833                           tblptru	equ	0xFF8
 34834                           tblptrh	equ	0xFF7
 34835                           tblptrl	equ	0xFF6
 34836                           tablat	equ	0xFF5
 34837                           prodh	equ	0xFF4
 34838                           prodl	equ	0xFF3
 34839                           intcon	equ	0xFF2
 34840                           intcon2	equ	0xFF1
 34841                           intcon3	equ	0xFF0
 34842                           indf0	equ	0xFEF
 34843                           postinc0	equ	0xFEE
 34844                           plusw0	equ	0xFEB
 34845                           fsr0h	equ	0xFEA
 34846                           fsr0l	equ	0xFE9
 34847                           wreg	equ	0xFE8
 34848                           indf1	equ	0xFE7
 34849                           postinc1	equ	0xFE6
 34850                           postdec1	equ	0xFE5
 34851                           plusw1	equ	0xFE3
 34852                           fsr1h	equ	0xFE2
 34853                           fsr1l	equ	0xFE1
 34854                           bsr	equ	0xFE0
 34855                           indf2	equ	0xFDF
 34856                           postinc2	equ	0xFDE
 34857                           postdec2	equ	0xFDD
 34858                           plusw2	equ	0xFDB
 34859                           fsr2h	equ	0xFDA
 34860                           fsr2l	equ	0xFD9
 34861                           status	equ	0xFD8
 34862                           
 34863 ;; *************** function _USBCheckHIDRequest *****************
 34864 ;; Defined at:
 34865 ;;		line 157 in file "src/usb/usb_device_hid.c"
 34866 ;; Parameters:    Size  Location     Type
 34867 ;;		None
 34868 ;; Auto vars:     Size  Location     Type
 34869 ;;		None
 34870 ;; Return value:  Size  Location     Type
 34871 ;;		None               void
 34872 ;; Registers used:
 34873 ;;		wreg, status,2, status,0
 34874 ;; Tracked objects:
 34875 ;;		On entry : 0/0
 34876 ;;		On exit  : 0/0
 34877 ;;		Unchanged: 0/0
 34878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34883 ;;Total ram usage:        0 bytes
 34884 ;; Hardware stack levels used:    1
 34885 ;; Hardware stack levels required when called:    6
 34886 ;; This function calls:
 34887 ;;		Nothing
 34888 ;; This function is called by:
 34889 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34890 ;; This function uses a non-reentrant model
 34891 ;;
 34892                           
 34893                           	psect	text103
 34894  00939E                     __ptext103:
 34895                           	opt stack 0
 34896  00939E                     _USBCheckHIDRequest:
 34897                           	opt stack 9
 34898                           
 34899                           ;usb_device_hid.c: 159: if(SetupPkt.Recipient != (0x01)) return;
 34900                           
 34901                           ;incstack = 0
 34902  00939E  010D               	movlb	13	; () banked
 34903  0093A0  5120               	movf	32,w,b	;volatile
 34904  0093A2  0B1F               	andlw	31
 34905  0093A4  06E8               	decf	wreg,f,c
 34906  0093A6  A4D8               	btfss	status,2,c
 34907  0093A8  0012               	return	
 34908                           
 34909                           ; BSR set to: 13
 34910                           ;usb_device_hid.c: 160: if(SetupPkt.bIntfID != 0x00) return;
 34911                           
 34912                           ; BSR set to: 13
 34913                           
 34914                           ; BSR set to: 13
 34915  0093AA  010D               	movlb	13	; () banked
 34916  0093AC  5124               	movf	36,w,b	;volatile
 34917  0093AE  A4D8               	btfss	status,2,c
 34918  0093B0  0012               	return	
 34919                           
 34920                           ; BSR set to: 13
 34921                           ;usb_device_hid.c: 167: if(SetupPkt.bRequest == 6)
 34922                           
 34923                           ; BSR set to: 13
 34924                           
 34925                           ; BSR set to: 13
 34926  0093B2  0E06               	movlw	6
 34927  0093B4  010D               	movlb	13	; () banked
 34928  0093B6  1921               	xorwf	33,w,b	;volatile
 34929  0093B8  B4D8               	btfsc	status,2,c
 34930  0093BA  D01F               	goto	i1l10374
 34931  0093BC  D027               	goto	i1l10376
 34932  0093BE                     i1l10358:
 34933                           
 34934                           ; BSR set to: 13
 34935                           ;usb_device_hid.c: 172: if(USBActiveConfiguration == 1)
 34936  0093BE  0456               	decf	_USBActiveConfiguration,w,c	;volatile
 34937  0093C0  A4D8               	btfss	status,2,c
 34938  0093C2  D024               	goto	i1l10376
 34939                           
 34940                           ; BSR set to: 13
 34941                           ;usb_device_hid.c: 173: {
 34942                           ;usb_device_hid.c: 174: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 34943  0093C4  0E43               	movlw	low (_configDescriptor1+18)
 34944  0093C6  0100               	movlb	0	; () banked
 34945  0093C8  6F81               	movwf	_inPipes& (0+255),b	;volatile
 34946  0093CA  0E21               	movlw	high (_configDescriptor1+18)
 34947  0093CC  0100               	movlb	0	; () banked
 34948  0093CE  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 34949                           
 34950                           ; BSR set to: 0
 34951  0093D0  0E00               	movlw	0
 34952  0093D2  0100               	movlb	0	; () banked
 34953  0093D4  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 34954  0093D6  0E09               	movlw	9
 34955  0093D8  D00E               	goto	L22
 34956  0093DA                     i1l10364:
 34957                           
 34958                           ; BSR set to: 0
 34959  0093DA  0EC0               	movlw	192
 34960  0093DC  0100               	movlb	0	; () banked
 34961  0093DE  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34962                           
 34963                           ; BSR set to: 0
 34964                           ;usb_device_hid.c: 178: }
 34965                           ;usb_device_hid.c: 179: break;
 34966  0093E0  D015               	goto	i1l10376
 34967  0093E2                     i1l10366:
 34968                           
 34969                           ;usb_device_hid.c: 182: {
 34970                           ;usb_device_hid.c: 183: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 34971  0093E2  0E5A               	movlw	low _hid_rpt01
 34972  0093E4  0100               	movlb	0	; () banked
 34973  0093E6  6F81               	movwf	_inPipes& (0+255),b	;volatile
 34974  0093E8  0E21               	movlw	high _hid_rpt01
 34975  0093EA  0100               	movlb	0	; () banked
 34976  0093EC  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 34977                           
 34978                           ; BSR set to: 0
 34979  0093EE  0E00               	movlw	0
 34980  0093F0  0100               	movlb	0	; () banked
 34981  0093F2  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 34982  0093F4  0E1D               	movlw	29
 34983  0093F6                     L22:
 34984  0093F6  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 34985  0093F8  D7F0               	goto	i1l10364
 34986  0093FA                     i1l10374:
 34987  0093FA  010D               	movlb	13	; () banked
 34988  0093FC  5123               	movf	35,w,b	;volatile
 34989                           
 34990                           ; Switch size 1, requested type "space"
 34991                           ; Number of cases is 3, Range of values is 33 to 35
 34992                           ; switch strategies available:
 34993                           ; Name         Instructions Cycles
 34994                           ; simple_byte           10     6 (average)
 34995                           ;	Chosen strategy is simple_byte
 34996  0093FE  0A21               	xorlw	33	; case 33
 34997  009400  B4D8               	btfsc	status,2,c
 34998  009402  D7DD               	goto	i1l10358
 34999  009404  0A03               	xorlw	3	; case 34
 35000  009406  B4D8               	btfsc	status,2,c
 35001  009408  D7EC               	goto	i1l10366
 35002  00940A  0A01               	xorlw	1	; case 35
 35003  00940C                     i1l10376:
 35004                           
 35005                           ;usb_device_hid.c: 203: }
 35006                           ;usb_device_hid.c: 205: if(SetupPkt.RequestType != (0x20>>5))
 35007  00940C  010D               	movlb	13	; () banked
 35008  00940E  3920               	swapf	32,w,b	;volatile
 35009  009410  32E8               	rrcf	wreg,f,c
 35010  009412  0B03               	andlw	3
 35011  009414  06E8               	decf	wreg,f,c
 35012  009416  A4D8               	btfss	status,2,c
 35013  009418  0012               	return	
 35014  00941A  D02A               	goto	i1l10402
 35015  00941C                     i1l10380:
 35016                           
 35017                           ; BSR set to: 13
 35018                           ;usb_device_hid.c: 223: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 35019  00941C  0E5A               	movlw	low _idle_rate
 35020  00941E  0100               	movlb	0	; () banked
 35021  009420  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35022  009422  0E00               	movlw	high _idle_rate
 35023  009424  0100               	movlb	0	; () banked
 35024  009426  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35025                           
 35026                           ; BSR set to: 0
 35027  009428  0E00               	movlw	0
 35028  00942A  0100               	movlb	0	; () banked
 35029  00942C  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35030  00942E  0E01               	movlw	1
 35031  009430  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35032                           
 35033                           ; BSR set to: 0
 35034  009432  0EC1               	movlw	193
 35035  009434  0100               	movlb	0	; () banked
 35036  009436  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35037                           
 35038                           ;usb_device_hid.c: 227: break;
 35039  009438  0012               	return	
 35040  00943A                     i1l10386:
 35041                           
 35042                           ;usb_device_hid.c: 229: inPipes[0].info.Val = 0x00 | 0x80;
 35043  00943A  0E80               	movlw	128
 35044  00943C  0100               	movlb	0	; () banked
 35045  00943E  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35046                           
 35047                           ; BSR set to: 0
 35048                           ;usb_device_hid.c: 230: idle_rate = ((USB_SETUP_SET_IDLE_RATE*)&SetupPkt)->duration;
 35049  009440  CD23 F05A          	movff	3363,_idle_rate
 35050                           
 35051                           ;usb_device_hid.c: 231: ;
 35052                           ;usb_device_hid.c: 232: break;
 35053  009444  0012               	return	
 35054  009446                     i1l10390:
 35055                           
 35056                           ;usb_device_hid.c: 234: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 35057  009446  0E59               	movlw	low _active_protocol
 35058  009448  0100               	movlb	0	; () banked
 35059  00944A  6F81               	movwf	_inPipes& (0+255),b	;volatile
 35060  00944C  0E00               	movlw	high _active_protocol
 35061  00944E  0100               	movlb	0	; () banked
 35062  009450  6F82               	movwf	(_inPipes+1)& (0+255),b	;volatile
 35063                           
 35064                           ; BSR set to: 0
 35065  009452  0E00               	movlw	0
 35066  009454  0100               	movlb	0	; () banked
 35067  009456  6F86               	movwf	(_inPipes+5)& (0+255),b	;volatile
 35068  009458  0E01               	movlw	1
 35069  00945A  6F85               	movwf	(_inPipes+4)& (0+255),b	;volatile
 35070                           
 35071                           ; BSR set to: 0
 35072  00945C  0E81               	movlw	129
 35073  00945E  0100               	movlb	0	; () banked
 35074  009460  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35075                           
 35076                           ;usb_device_hid.c: 238: break;
 35077  009462  0012               	return	
 35078  009464                     i1l10396:
 35079                           
 35080                           ;usb_device_hid.c: 240: inPipes[0].info.Val = 0x00 | 0x80;
 35081  009464  0E80               	movlw	128
 35082  009466  0100               	movlb	0	; () banked
 35083  009468  6F84               	movwf	(_inPipes+3)& (0+255),b	;volatile
 35084                           
 35085                           ; BSR set to: 0
 35086                           ;usb_device_hid.c: 241: active_protocol = ((USB_SETUP_SET_PROTOCOL*)&SetupPkt)->protocol
      +                          ;
 35087  00946A  CD22 F059          	movff	3362,_active_protocol
 35088                           
 35089                           ; BSR set to: 0
 35090                           ;usb_device_hid.c: 243: }
 35091                           
 35092                           ;usb_device_hid.c: 242: break;
 35093  00946E  0012               	return	
 35094  009470                     i1l10402:
 35095  009470  010D               	movlb	13	; () banked
 35096  009472  5121               	movf	33,w,b	;volatile
 35097                           
 35098                           ; Switch size 1, requested type "space"
 35099                           ; Number of cases is 6, Range of values is 1 to 11
 35100                           ; switch strategies available:
 35101                           ; Name         Instructions Cycles
 35102                           ; simple_byte           19    10 (average)
 35103                           ;	Chosen strategy is simple_byte
 35104  009474  0A01               	xorlw	1	; case 1
 35105  009476  B4D8               	btfsc	status,2,c
 35106  009478  0012               	return	
 35107  00947A  0A03               	xorlw	3	; case 2
 35108  00947C  B4D8               	btfsc	status,2,c
 35109  00947E  D7CE               	goto	i1l10380
 35110  009480  0A01               	xorlw	1	; case 3
 35111  009482  B4D8               	btfsc	status,2,c
 35112  009484  D7E0               	goto	i1l10390
 35113  009486  0A0A               	xorlw	10	; case 9
 35114  009488  B4D8               	btfsc	status,2,c
 35115  00948A  0012               	return	
 35116  00948C  0A03               	xorlw	3	; case 10
 35117  00948E  B4D8               	btfsc	status,2,c
 35118  009490  D7D4               	goto	i1l10386
 35119  009492  0A01               	xorlw	1	; case 11
 35120  009494  A4D8               	btfss	status,2,c
 35121  009496  0012               	return	
 35122  009498  D7E5               	goto	i1l10396
 35123  00949A                     __end_of_USBCheckHIDRequest:
 35124                           	opt stack 0
 35125                           pclatu	equ	0xFFB
 35126                           pclath	equ	0xFFA
 35127                           tblptru	equ	0xFF8
 35128                           tblptrh	equ	0xFF7
 35129                           tblptrl	equ	0xFF6
 35130                           tablat	equ	0xFF5
 35131                           prodh	equ	0xFF4
 35132                           prodl	equ	0xFF3
 35133                           intcon	equ	0xFF2
 35134                           intcon2	equ	0xFF1
 35135                           intcon3	equ	0xFF0
 35136                           indf0	equ	0xFEF
 35137                           postinc0	equ	0xFEE
 35138                           plusw0	equ	0xFEB
 35139                           fsr0h	equ	0xFEA
 35140                           fsr0l	equ	0xFE9
 35141                           wreg	equ	0xFE8
 35142                           indf1	equ	0xFE7
 35143                           postinc1	equ	0xFE6
 35144                           postdec1	equ	0xFE5
 35145                           plusw1	equ	0xFE3
 35146                           fsr1h	equ	0xFE2
 35147                           fsr1l	equ	0xFE1
 35148                           bsr	equ	0xFE0
 35149                           indf2	equ	0xFDF
 35150                           postinc2	equ	0xFDE
 35151                           postdec2	equ	0xFDD
 35152                           plusw2	equ	0xFDB
 35153                           fsr2h	equ	0xFDA
 35154                           fsr2l	equ	0xFD9
 35155                           status	equ	0xFD8
 35156                           
 35157 ;; *************** function _APP_LEDUpdateUSBStatus *****************
 35158 ;; Defined at:
 35159 ;;		line 86 in file "src/app_led_usb_status.c"
 35160 ;; Parameters:    Size  Location     Type
 35161 ;;		None
 35162 ;; Auto vars:     Size  Location     Type
 35163 ;;		None
 35164 ;; Return value:  Size  Location     Type
 35165 ;;		None               void
 35166 ;; Registers used:
 35167 ;;		wreg, status,2, status,0, cstack
 35168 ;; Tracked objects:
 35169 ;;		On entry : 0/0
 35170 ;;		On exit  : 0/0
 35171 ;;		Unchanged: 0/0
 35172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35177 ;;Total ram usage:        0 bytes
 35178 ;; Hardware stack levels used:    1
 35179 ;; Hardware stack levels required when called:    7
 35180 ;; This function calls:
 35181 ;;		i1_update_LED
 35182 ;; This function is called by:
 35183 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35184 ;; This function uses a non-reentrant model
 35185 ;;
 35186                           
 35187                           	psect	text104
 35188  00B7DA                     __ptext104:
 35189                           	opt stack 0
 35190  00B7DA                     _APP_LEDUpdateUSBStatus:
 35191                           	opt stack 8
 35192                           
 35193                           ;app_led_usb_status.c: 90: if(UCONbits.SUSPND == 1)
 35194                           
 35195                           ;incstack = 0
 35196  00B7DA  A265               	btfss	3941,1,c	;volatile
 35197  00B7DC  D018               	goto	i1l10428
 35198                           
 35199                           ;app_led_usb_status.c: 91: {
 35200                           ;app_led_usb_status.c: 93: if (status_led != LED_OFF)
 35201  00B7DE  5055               	movf	_status_led,w,c	;volatile
 35202  00B7E0  B4D8               	btfsc	status,2,c
 35203  00B7E2  0012               	return	
 35204                           
 35205                           ;app_led_usb_status.c: 94: {
 35206                           ;app_led_usb_status.c: 95: status_led = LED_OFF;
 35207  00B7E4  0E00               	movlw	0
 35208  00B7E6  6E55               	movwf	_status_led,c	;volatile
 35209                           
 35210                           ;app_led_usb_status.c: 96: update_LED();
 35211  00B7E8  ECF2  F059         	call	i1_update_LED	;wreg free
 35212                           
 35213                           ;app_led_usb_status.c: 97: }
 35214                           ;app_led_usb_status.c: 98: return;
 35215  00B7EC  0012               	return	
 35216  00B7EE                     i1l10414:
 35217                           
 35218                           ;app_led_usb_status.c: 105: if (status_led == LED_OFF)
 35219  00B7EE  5055               	movf	_status_led,w,c	;volatile
 35220  00B7F0  A4D8               	btfss	status,2,c
 35221  00B7F2  0012               	return	
 35222                           
 35223                           ;app_led_usb_status.c: 106: {
 35224                           ;app_led_usb_status.c: 107: status_led = LED_FAST_PULSE;
 35225  00B7F4  0E01               	movlw	1
 35226  00B7F6  6E55               	movwf	_status_led,c	;volatile
 35227                           
 35228                           ;app_led_usb_status.c: 108: update_LED();
 35229  00B7F8  ECF2  F059         	call	i1_update_LED	;wreg free
 35230                           
 35231                           ;app_led_usb_status.c: 109: }
 35232                           ;app_led_usb_status.c: 110: break;
 35233  00B7FC  0012               	return	
 35234  00B7FE                     i1l10420:
 35235                           
 35236                           ;app_led_usb_status.c: 114: if (status_led != LED_OFF)
 35237  00B7FE  5055               	movf	_status_led,w,c	;volatile
 35238  00B800  B4D8               	btfsc	status,2,c
 35239  00B802  0012               	return	
 35240                           
 35241                           ;app_led_usb_status.c: 115: {
 35242                           ;app_led_usb_status.c: 116: status_led = LED_OFF;
 35243  00B804  0E00               	movlw	0
 35244  00B806  6E55               	movwf	_status_led,c	;volatile
 35245                           
 35246                           ;app_led_usb_status.c: 117: update_LED();
 35247  00B808  ECF2  F059         	call	i1_update_LED	;wreg free
 35248                           
 35249                           ;app_led_usb_status.c: 120: }
 35250                           
 35251                           ;app_led_usb_status.c: 118: }
 35252                           ;app_led_usb_status.c: 119: break;
 35253  00B80C  0012               	return	
 35254  00B80E                     i1l10428:
 35255  00B80E  504B               	movf	_USBDeviceState,w,c	;volatile
 35256                           
 35257                           ; Switch size 1, requested type "space"
 35258                           ; Number of cases is 1, Range of values is 32 to 32
 35259                           ; switch strategies available:
 35260                           ; Name         Instructions Cycles
 35261                           ; simple_byte            4     3 (average)
 35262                           ;	Chosen strategy is simple_byte
 35263  00B810  0A20               	xorlw	32	; case 32
 35264  00B812  B4D8               	btfsc	status,2,c
 35265  00B814  D7EC               	goto	i1l10414
 35266  00B816  D7F3               	goto	i1l10420
 35267  00B818                     __end_of_APP_LEDUpdateUSBStatus:
 35268                           	opt stack 0
 35269                           pclatu	equ	0xFFB
 35270                           pclath	equ	0xFFA
 35271                           tblptru	equ	0xFF8
 35272                           tblptrh	equ	0xFF7
 35273                           tblptrl	equ	0xFF6
 35274                           tablat	equ	0xFF5
 35275                           prodh	equ	0xFF4
 35276                           prodl	equ	0xFF3
 35277                           intcon	equ	0xFF2
 35278                           intcon2	equ	0xFF1
 35279                           intcon3	equ	0xFF0
 35280                           indf0	equ	0xFEF
 35281                           postinc0	equ	0xFEE
 35282                           plusw0	equ	0xFEB
 35283                           fsr0h	equ	0xFEA
 35284                           fsr0l	equ	0xFE9
 35285                           wreg	equ	0xFE8
 35286                           indf1	equ	0xFE7
 35287                           postinc1	equ	0xFE6
 35288                           postdec1	equ	0xFE5
 35289                           plusw1	equ	0xFE3
 35290                           fsr1h	equ	0xFE2
 35291                           fsr1l	equ	0xFE1
 35292                           bsr	equ	0xFE0
 35293                           indf2	equ	0xFDF
 35294                           postinc2	equ	0xFDE
 35295                           postdec2	equ	0xFDD
 35296                           plusw2	equ	0xFDB
 35297                           fsr2h	equ	0xFDA
 35298                           fsr2l	equ	0xFD9
 35299                           status	equ	0xFD8
 35300                           
 35301 ;; *************** function i1_update_LED *****************
 35302 ;; Defined at:
 35303 ;;		line 732 in file "src/main.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;		None
 35306 ;; Auto vars:     Size  Location     Type
 35307 ;;		None
 35308 ;; Return value:  Size  Location     Type
 35309 ;;                  2    0[None  ] int 
 35310 ;; Registers used:
 35311 ;;		wreg, status,2, status,0
 35312 ;; Tracked objects:
 35313 ;;		On entry : 0/0
 35314 ;;		On exit  : 0/0
 35315 ;;		Unchanged: 0/0
 35316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35321 ;;Total ram usage:        0 bytes
 35322 ;; Hardware stack levels used:    1
 35323 ;; Hardware stack levels required when called:    6
 35324 ;; This function calls:
 35325 ;;		Nothing
 35326 ;; This function is called by:
 35327 ;;		_APP_LEDUpdateUSBStatus
 35328 ;;		_SYS_InterruptLow
 35329 ;; This function uses a non-reentrant model
 35330 ;;
 35331                           
 35332                           	psect	text105
 35333  00B3E4                     __ptext105:
 35334                           	opt stack 0
 35335  00B3E4                     i1_update_LED:
 35336                           	opt stack 11
 35337                           
 35338                           ;main.c: 734: switch(status_led)
 35339                           
 35340                           ;incstack = 0
 35341  00B3E4  D021               	goto	i1l10328
 35342  00B3E6                     i1l1858:
 35343                           
 35344                           ;main.c: 738: CCP1CONbits.DC1B0 = 0;
 35345  00B3E6  98BA               	bcf	4026,4,c	;volatile
 35346                           
 35347                           ;main.c: 739: CCP1CONbits.DC1B1 = 0;
 35348  00B3E8  9ABA               	bcf	4026,5,c	;volatile
 35349                           
 35350                           ;main.c: 740: CCPR1L = 0;
 35351  00B3EA  0E00               	movlw	0
 35352  00B3EC  6EBB               	movwf	4027,c	;volatile
 35353                           
 35354                           ;main.c: 741: LED_increasing = 1;
 35355  00B3EE  0E01               	movlw	1
 35356  00B3F0  6E45               	movwf	_LED_increasing,c	;volatile
 35357                           
 35358                           ;main.c: 742: break;
 35359  00B3F2  0012               	return	
 35360  00B3F4                     i1l1860:
 35361                           
 35362                           ;main.c: 746: CCP1CONbits.DC1B0 = 1023 & 1;
 35363  00B3F4  88BA               	bsf	4026,4,c	;volatile
 35364                           
 35365                           ;main.c: 747: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 35366  00B3F6  8ABA               	bsf	4026,5,c	;volatile
 35367                           
 35368                           ;main.c: 748: CCPR1L = (1023 >> 2);
 35369  00B3F8  68BB               	setf	4027,c	;volatile
 35370                           
 35371                           ;main.c: 749: repeat_full = 4;
 35372  00B3FA  0E04               	movlw	4
 35373  00B3FC  6E53               	movwf	_repeat_full,c	;volatile
 35374                           
 35375                           ;main.c: 750: break;
 35376  00B3FE  0012               	return	
 35377  00B400                     i1l10314:
 35378                           
 35379                           ;main.c: 753: T4CONbits.T4CKPS = 0b01;
 35380  00B400  5076               	movf	3958,w,c	;volatile
 35381  00B402  0BFC               	andlw	-4
 35382  00B404  0901               	iorlw	1
 35383  00B406  6E76               	movwf	3958,c	;volatile
 35384                           
 35385                           ;main.c: 755: CCP1CONbits.DC1B0 = 235 & 1;
 35386  00B408  88BA               	bsf	4026,4,c	;volatile
 35387                           
 35388                           ;main.c: 756: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35389  00B40A  8ABA               	bsf	4026,5,c	;volatile
 35390                           
 35391                           ;main.c: 757: CCPR1L = (235 >> 2);
 35392  00B40C  0E3A               	movlw	58
 35393  00B40E  6EBB               	movwf	4027,c	;volatile
 35394                           
 35395                           ;main.c: 758: LED_increasing = 0;
 35396  00B410  0E00               	movlw	0
 35397  00B412  6E45               	movwf	_LED_increasing,c	;volatile
 35398                           
 35399                           ;main.c: 759: break;
 35400  00B414  0012               	return	
 35401  00B416                     i1l10320:
 35402                           
 35403                           ;main.c: 762: T4CONbits.T4CKPS = 0b11;
 35404  00B416  0E03               	movlw	3
 35405  00B418  1276               	iorwf	3958,f,c	;volatile
 35406                           
 35407                           ;main.c: 764: CCP1CONbits.DC1B0 = 235 & 1;
 35408  00B41A  88BA               	bsf	4026,4,c	;volatile
 35409                           
 35410                           ;main.c: 765: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 35411  00B41C  8ABA               	bsf	4026,5,c	;volatile
 35412                           
 35413                           ;main.c: 766: CCPR1L = (235 >> 2);
 35414  00B41E  0E3A               	movlw	58
 35415  00B420  6EBB               	movwf	4027,c	;volatile
 35416                           
 35417                           ;main.c: 767: LED_increasing = 0;
 35418  00B422  0E00               	movlw	0
 35419  00B424  6E45               	movwf	_LED_increasing,c	;volatile
 35420                           
 35421                           ;main.c: 769: }
 35422                           
 35423                           ;main.c: 768: break;
 35424  00B426  0012               	return	
 35425  00B428                     i1l10328:
 35426  00B428  5055               	movf	_status_led,w,c	;volatile
 35427                           
 35428                           ; Switch size 1, requested type "space"
 35429                           ; Number of cases is 4, Range of values is 0 to 3
 35430                           ; switch strategies available:
 35431                           ; Name         Instructions Cycles
 35432                           ; simple_byte           13     7 (average)
 35433                           ;	Chosen strategy is simple_byte
 35434  00B42A  0A00               	xorlw	0	; case 0
 35435  00B42C  B4D8               	btfsc	status,2,c
 35436  00B42E  D7DB               	goto	i1l1858
 35437  00B430  0A01               	xorlw	1	; case 1
 35438  00B432  B4D8               	btfsc	status,2,c
 35439  00B434  D7E5               	goto	i1l10314
 35440  00B436  0A03               	xorlw	3	; case 2
 35441  00B438  B4D8               	btfsc	status,2,c
 35442  00B43A  D7ED               	goto	i1l10320
 35443  00B43C  0A01               	xorlw	1	; case 3
 35444  00B43E  A4D8               	btfss	status,2,c
 35445  00B440  0012               	return	
 35446  00B442  D7D8               	goto	i1l1860
 35447  00B444                     __end_ofi1_update_LED:
 35448                           	opt stack 0
 35449                           pclatu	equ	0xFFB
 35450                           pclath	equ	0xFFA
 35451                           tblptru	equ	0xFF8
 35452                           tblptrh	equ	0xFF7
 35453                           tblptrl	equ	0xFF6
 35454                           tablat	equ	0xFF5
 35455                           prodh	equ	0xFF4
 35456                           prodl	equ	0xFF3
 35457                           intcon	equ	0xFF2
 35458                           intcon2	equ	0xFF1
 35459                           intcon3	equ	0xFF0
 35460                           indf0	equ	0xFEF
 35461                           postinc0	equ	0xFEE
 35462                           plusw0	equ	0xFEB
 35463                           fsr0h	equ	0xFEA
 35464                           fsr0l	equ	0xFE9
 35465                           wreg	equ	0xFE8
 35466                           indf1	equ	0xFE7
 35467                           postinc1	equ	0xFE6
 35468                           postdec1	equ	0xFE5
 35469                           plusw1	equ	0xFE3
 35470                           fsr1h	equ	0xFE2
 35471                           fsr1l	equ	0xFE1
 35472                           bsr	equ	0xFE0
 35473                           indf2	equ	0xFDF
 35474                           postinc2	equ	0xFDE
 35475                           postdec2	equ	0xFDD
 35476                           plusw2	equ	0xFDB
 35477                           fsr2h	equ	0xFDA
 35478                           fsr2l	equ	0xFD9
 35479                           status	equ	0xFD8
 35480                           
 35481 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 35482 ;; Defined at:
 35483 ;;		line 671 in file "src/main.c"
 35484 ;; Parameters:    Size  Location     Type
 35485 ;;		None
 35486 ;; Auto vars:     Size  Location     Type
 35487 ;;		None
 35488 ;; Return value:  Size  Location     Type
 35489 ;;		None               void
 35490 ;; Registers used:
 35491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35492 ;; Tracked objects:
 35493 ;;		On entry : 0/0
 35494 ;;		On exit  : 0/0
 35495 ;;		Unchanged: 0/0
 35496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35501 ;;Total ram usage:        0 bytes
 35502 ;; Hardware stack levels used:    1
 35503 ;; Hardware stack levels required when called:    8
 35504 ;; This function calls:
 35505 ;;		_USBEnableEndpoint
 35506 ;;		i1_USBTransferOnePacket
 35507 ;; This function is called by:
 35508 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35509 ;; This function uses a non-reentrant model
 35510 ;;
 35511                           
 35512                           	psect	text106
 35513  00B936                     __ptext106:
 35514                           	opt stack 0
 35515  00B936                     _APP_DeviceCustomHIDInitialize:
 35516                           	opt stack 7
 35517                           
 35518                           ;main.c: 675: USBInHandle = 0;
 35519                           
 35520                           ;incstack = 0
 35521  00B936  0E00               	movlw	0
 35522  00B938  0100               	movlb	0	; () banked
 35523  00B93A  6F93               	movwf	_USBInHandle& (0+255),b
 35524  00B93C  0E00               	movlw	0
 35525  00B93E  0100               	movlb	0	; () banked
 35526  00B940  6F94               	movwf	(_USBInHandle+1)& (0+255),b
 35527                           
 35528                           ; BSR set to: 0
 35529                           ;main.c: 677: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 35530  00B942  0E1E               	movlw	30
 35531  00B944  6E09               	movwf	USBEnableEndpoint@options,c
 35532  00B946  0E01               	movlw	1
 35533  00B948  EC0C  F05C         	call	_USBEnableEndpoint
 35534                           
 35535                           ;main.c: 679: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
 35536  00B94C  0E00               	movlw	0
 35537  00B94E  6E01               	movwf	i1USBTransferOnePacket@dir,c
 35538  00B950  0E00               	movlw	low _ReceivedDataBuffer
 35539  00B952  6E02               	movwf	i1USBTransferOnePacket@data,c
 35540  00B954  0E04               	movlw	high _ReceivedDataBuffer
 35541  00B956  6E03               	movwf	i1USBTransferOnePacket@data+1,c
 35542  00B958  0E40               	movlw	64
 35543  00B95A  6E04               	movwf	i1USBTransferOnePacket@len,c
 35544  00B95C  0E01               	movlw	1
 35545  00B95E  ECCC  F052         	call	i1_USBTransferOnePacket
 35546  00B962  C001  F1B7         	movff	?i1_USBTransferOnePacket,_USBOutHandle
 35547  00B966  C002  F1B8         	movff	?i1_USBTransferOnePacket+1,_USBOutHandle+1
 35548  00B96A  0012               	return		;funcret
 35549  00B96C                     __end_of_APP_DeviceCustomHIDInitialize:
 35550                           	opt stack 0
 35551                           pclatu	equ	0xFFB
 35552                           pclath	equ	0xFFA
 35553                           tblptru	equ	0xFF8
 35554                           tblptrh	equ	0xFF7
 35555                           tblptrl	equ	0xFF6
 35556                           tablat	equ	0xFF5
 35557                           prodh	equ	0xFF4
 35558                           prodl	equ	0xFF3
 35559                           intcon	equ	0xFF2
 35560                           intcon2	equ	0xFF1
 35561                           intcon3	equ	0xFF0
 35562                           indf0	equ	0xFEF
 35563                           postinc0	equ	0xFEE
 35564                           plusw0	equ	0xFEB
 35565                           fsr0h	equ	0xFEA
 35566                           fsr0l	equ	0xFE9
 35567                           wreg	equ	0xFE8
 35568                           indf1	equ	0xFE7
 35569                           postinc1	equ	0xFE6
 35570                           postdec1	equ	0xFE5
 35571                           plusw1	equ	0xFE3
 35572                           fsr1h	equ	0xFE2
 35573                           fsr1l	equ	0xFE1
 35574                           bsr	equ	0xFE0
 35575                           indf2	equ	0xFDF
 35576                           postinc2	equ	0xFDE
 35577                           postdec2	equ	0xFDD
 35578                           plusw2	equ	0xFDB
 35579                           fsr2h	equ	0xFDA
 35580                           fsr2l	equ	0xFD9
 35581                           status	equ	0xFD8
 35582                           
 35583 ;; *************** function i1_USBTransferOnePacket *****************
 35584 ;; Defined at:
 35585 ;;		line 995 in file "src/usb/usb_device.c"
 35586 ;; Parameters:    Size  Location     Type
 35587 ;;  ep              1    wreg     unsigned char 
 35588 ;;  dir             1    0[COMRAM] unsigned char 
 35589 ;;  data            2    1[COMRAM] PTR unsigned char 
 35590 ;;		 -> ReceivedDataBuffer(64), ToSendDataBuffer(64), 
 35591 ;;  len             1    3[COMRAM] unsigned char 
 35592 ;; Auto vars:     Size  Location     Type
 35593 ;;  ep              1    4[COMRAM] unsigned char 
 35594 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 35595 ;;		 -> BDT(32), NULL(0), 
 35596 ;; Return value:  Size  Location     Type
 35597 ;;                  2    0[COMRAM] PTR void 
 35598 ;; Registers used:
 35599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35600 ;; Tracked objects:
 35601 ;;		On entry : 0/0
 35602 ;;		On exit  : 0/0
 35603 ;;		Unchanged: 0/0
 35604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35606 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35609 ;;Total ram usage:        7 bytes
 35610 ;; Hardware stack levels used:    1
 35611 ;; Hardware stack levels required when called:    6
 35612 ;; This function calls:
 35613 ;;		Nothing
 35614 ;; This function is called by:
 35615 ;;		_APP_DeviceCustomHIDInitialize
 35616 ;; This function uses a non-reentrant model
 35617 ;;
 35618                           
 35619                           	psect	text107
 35620  00A598                     __ptext107:
 35621                           	opt stack 0
 35622  00A598                     i1_USBTransferOnePacket:
 35623                           	opt stack 8
 35624                           
 35625                           ;incstack = 0
 35626                           ;i1USBTransferOnePacket@ep stored from wreg
 35627  00A598  6E05               	movwf	i1USBTransferOnePacket@ep,c
 35628                           
 35629                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 35630                           ;usb_device.c: 1000: if(dir != 0)
 35631  00A59A  5001               	movf	i1USBTransferOnePacket@dir,w,c
 35632  00A59C  B4D8               	btfsc	status,2,c
 35633  00A59E  D007               	goto	i1l10282
 35634                           
 35635                           ;usb_device.c: 1001: {
 35636                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 35637  00A5A0  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35638  00A5A2  0D02               	mullw	2
 35639  00A5A4  0E8B               	movlw	low _pBDTEntryIn
 35640  00A5A6  24F3               	addwf	prodl,w,c
 35641  00A5A8  6ED9               	movwf	fsr2l,c
 35642  00A5AA  0E00               	movlw	high _pBDTEntryIn
 35643  00A5AC  D006               	goto	L23
 35644  00A5AE                     i1l10282:
 35645                           
 35646                           ;usb_device.c: 1005: else
 35647                           ;usb_device.c: 1006: {
 35648                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 35649  00A5AE  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35650  00A5B0  0D02               	mullw	2
 35651  00A5B2  0E8F               	movlw	low _pBDTEntryOut
 35652  00A5B4  24F3               	addwf	prodl,w,c
 35653  00A5B6  6ED9               	movwf	fsr2l,c
 35654  00A5B8  0E00               	movlw	high _pBDTEntryOut
 35655  00A5BA                     L23:
 35656  00A5BA  20F4               	addwfc	prodh,w,c
 35657  00A5BC  6EDA               	movwf	fsr2h,c
 35658  00A5BE  CFDE F006          	movff	postinc2,i1USBTransferOnePacket@handle
 35659  00A5C2  CFDD F007          	movff	postdec2,i1USBTransferOnePacket@handle+1
 35660                           
 35661                           ;usb_device.c: 1009: }
 35662                           ;usb_device.c: 1013: if(handle == 0)
 35663  00A5C6  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35664  00A5C8  1007               	iorwf	i1USBTransferOnePacket@handle+1,w,c
 35665  00A5CA  A4D8               	btfss	status,2,c
 35666  00A5CC  D005               	goto	i1l10290
 35667                           
 35668                           ;usb_device.c: 1014: {
 35669                           ;usb_device.c: 1015: return 0;
 35670  00A5CE  0E00               	movlw	0
 35671  00A5D0  6E01               	movwf	?i1_USBTransferOnePacket,c
 35672  00A5D2  0E00               	movlw	0
 35673  00A5D4  6E02               	movwf	?i1_USBTransferOnePacket+1,c
 35674  00A5D6  0012               	return	
 35675  00A5D8                     i1l10290:
 35676                           
 35677                           ;usb_device.c: 1016: }
 35678                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 35679  00A5D8  EE20 F002          	lfsr	2,2
 35680  00A5DC  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35681  00A5DE  26D9               	addwf	fsr2l,f,c
 35682  00A5E0  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 35683  00A5E2  22DA               	addwfc	fsr2h,f,c
 35684  00A5E4  C002  FFDE         	movff	i1USBTransferOnePacket@data,postinc2
 35685  00A5E8  C003  FFDD         	movff	i1USBTransferOnePacket@data+1,postdec2
 35686                           
 35687                           ;usb_device.c: 1030: handle->CNT = len;
 35688  00A5EC  EE20 F001          	lfsr	2,1
 35689  00A5F0  5006               	movf	i1USBTransferOnePacket@handle,w,c
 35690  00A5F2  26D9               	addwf	fsr2l,f,c
 35691  00A5F4  5007               	movf	i1USBTransferOnePacket@handle+1,w,c
 35692  00A5F6  22DA               	addwfc	fsr2h,f,c
 35693  00A5F8  C004  FFDF         	movff	i1USBTransferOnePacket@len,indf2
 35694                           
 35695                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 35696  00A5FC  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35697  00A600  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35698  00A604  0E40               	movlw	64
 35699  00A606  16DF               	andwf	indf2,f,c
 35700                           
 35701                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 35702  00A608  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35703  00A60C  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35704  00A610  0E00               	movlw	0
 35705  00A612  86DB               	bsf	plusw2,3,c
 35706                           
 35707                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 35708  00A614  C006  FFD9         	movff	i1USBTransferOnePacket@handle,fsr2l
 35709  00A618  C007  FFDA         	movff	i1USBTransferOnePacket@handle+1,fsr2h
 35710  00A61C  0E00               	movlw	0
 35711  00A61E  8EDB               	bsf	plusw2,7,c
 35712                           
 35713                           ;usb_device.c: 1036: if(dir != 0)
 35714  00A620  5001               	movf	i1USBTransferOnePacket@dir,w,c
 35715  00A622  B4D8               	btfsc	status,2,c
 35716  00A624  D007               	goto	i1l10302
 35717                           
 35718                           ;usb_device.c: 1037: {
 35719                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 35720  00A626  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35721  00A628  0D02               	mullw	2
 35722  00A62A  0E8B               	movlw	low _pBDTEntryIn
 35723  00A62C  24F3               	addwf	prodl,w,c
 35724  00A62E  6ED9               	movwf	fsr2l,c
 35725  00A630  0E00               	movlw	high _pBDTEntryIn
 35726  00A632  D006               	goto	L24
 35727  00A634                     i1l10302:
 35728                           
 35729                           ;usb_device.c: 1041: else
 35730                           ;usb_device.c: 1042: {
 35731                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 35732  00A634  5005               	movf	i1USBTransferOnePacket@ep,w,c
 35733  00A636  0D02               	mullw	2
 35734  00A638  0E8F               	movlw	low _pBDTEntryOut
 35735  00A63A  24F3               	addwf	prodl,w,c
 35736  00A63C  6ED9               	movwf	fsr2l,c
 35737  00A63E  0E00               	movlw	high _pBDTEntryOut
 35738  00A640                     L24:
 35739  00A640  20F4               	addwfc	prodh,w,c
 35740  00A642  6EDA               	movwf	fsr2h,c
 35741  00A644  0E04               	movlw	4
 35742  00A646  1ADF               	xorwf	indf2,f,c
 35743                           
 35744                           ;usb_device.c: 1045: }
 35745                           ;usb_device.c: 1046: return (void*)handle;
 35746  00A648  C006  F001         	movff	i1USBTransferOnePacket@handle,?i1_USBTransferOnePacket
 35747  00A64C  C007  F002         	movff	i1USBTransferOnePacket@handle+1,?i1_USBTransferOnePacket+1
 35748  00A650  0012               	return	
 35749  00A652                     __end_ofi1_USBTransferOnePacket:
 35750                           	opt stack 0
 35751                           pclatu	equ	0xFFB
 35752                           pclath	equ	0xFFA
 35753                           tblptru	equ	0xFF8
 35754                           tblptrh	equ	0xFF7
 35755                           tblptrl	equ	0xFF6
 35756                           tablat	equ	0xFF5
 35757                           prodh	equ	0xFF4
 35758                           prodl	equ	0xFF3
 35759                           intcon	equ	0xFF2
 35760                           intcon2	equ	0xFF1
 35761                           intcon3	equ	0xFF0
 35762                           indf0	equ	0xFEF
 35763                           postinc0	equ	0xFEE
 35764                           plusw0	equ	0xFEB
 35765                           fsr0h	equ	0xFEA
 35766                           fsr0l	equ	0xFE9
 35767                           wreg	equ	0xFE8
 35768                           indf1	equ	0xFE7
 35769                           postinc1	equ	0xFE6
 35770                           postdec1	equ	0xFE5
 35771                           plusw1	equ	0xFE3
 35772                           fsr1h	equ	0xFE2
 35773                           fsr1l	equ	0xFE1
 35774                           bsr	equ	0xFE0
 35775                           indf2	equ	0xFDF
 35776                           postinc2	equ	0xFDE
 35777                           postdec2	equ	0xFDD
 35778                           plusw2	equ	0xFDB
 35779                           fsr2h	equ	0xFDA
 35780                           fsr2l	equ	0xFD9
 35781                           status	equ	0xFD8
 35782                           
 35783 ;; *************** function _USBEnableEndpoint *****************
 35784 ;; Defined at:
 35785 ;;		line 878 in file "src/usb/usb_device.c"
 35786 ;; Parameters:    Size  Location     Type
 35787 ;;  ep              1    wreg     unsigned char 
 35788 ;;  options         1    8[COMRAM] unsigned char 
 35789 ;; Auto vars:     Size  Location     Type
 35790 ;;  ep              1   11[COMRAM] unsigned char 
 35791 ;;  p               2    9[COMRAM] PTR unsigned char 
 35792 ;;		 -> UEP0(1), 
 35793 ;; Return value:  Size  Location     Type
 35794 ;;		None               void
 35795 ;; Registers used:
 35796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35797 ;; Tracked objects:
 35798 ;;		On entry : 0/0
 35799 ;;		On exit  : 0/0
 35800 ;;		Unchanged: 0/0
 35801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35802 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35803 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35806 ;;Total ram usage:        4 bytes
 35807 ;; Hardware stack levels used:    1
 35808 ;; Hardware stack levels required when called:    7
 35809 ;; This function calls:
 35810 ;;		_USBConfigureEndpoint
 35811 ;; This function is called by:
 35812 ;;		_APP_DeviceCustomHIDInitialize
 35813 ;; This function uses a non-reentrant model
 35814 ;;
 35815                           
 35816                           	psect	text108
 35817  00B818                     __ptext108:
 35818                           	opt stack 0
 35819  00B818                     _USBEnableEndpoint:
 35820                           	opt stack 7
 35821                           
 35822                           ;incstack = 0
 35823                           ;USBEnableEndpoint@ep stored from wreg
 35824  00B818  6E0C               	movwf	USBEnableEndpoint@ep,c
 35825                           
 35826                           ;usb_device.c: 880: unsigned char* p;
 35827                           ;usb_device.c: 884: if(options & 0x04)
 35828  00B81A  A409               	btfss	USBEnableEndpoint@options,2,c
 35829  00B81C  D005               	goto	i1l10270
 35830                           
 35831                           ;usb_device.c: 885: {
 35832                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 35833  00B81E  0E00               	movlw	0
 35834  00B820  6E01               	movwf	USBConfigureEndpoint@direction,c
 35835  00B822  500C               	movf	USBEnableEndpoint@ep,w,c
 35836  00B824  ECA9  F056         	call	_USBConfigureEndpoint
 35837  00B828                     i1l10270:
 35838                           
 35839                           ;usb_device.c: 887: }
 35840                           ;usb_device.c: 888: if(options & 0x02)
 35841  00B828  A209               	btfss	USBEnableEndpoint@options,1,c
 35842  00B82A  D005               	goto	i1l10274
 35843                           
 35844                           ;usb_device.c: 889: {
 35845                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 35846  00B82C  0E01               	movlw	1
 35847  00B82E  6E01               	movwf	USBConfigureEndpoint@direction,c
 35848  00B830  500C               	movf	USBEnableEndpoint@ep,w,c
 35849  00B832  ECA9  F056         	call	_USBConfigureEndpoint
 35850  00B836                     i1l10274:
 35851                           
 35852                           ;usb_device.c: 891: }
 35853                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 35854  00B836  500C               	movf	USBEnableEndpoint@ep,w,c
 35855  00B838  0D01               	mullw	1
 35856  00B83A  0E26               	movlw	38
 35857  00B83C  24F3               	addwf	prodl,w,c
 35858  00B83E  6E0A               	movwf	USBEnableEndpoint@p,c
 35859  00B840  0E0F               	movlw	15
 35860  00B842  20F4               	addwfc	prodh,w,c
 35861  00B844  6E0B               	movwf	USBEnableEndpoint@p+1,c
 35862                           
 35863                           ;usb_device.c: 901: *p = options;
 35864  00B846  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 35865  00B84A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 35866  00B84E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 35867  00B852  0012               	return		;funcret
 35868  00B854                     __end_of_USBEnableEndpoint:
 35869                           	opt stack 0
 35870                           pclatu	equ	0xFFB
 35871                           pclath	equ	0xFFA
 35872                           tblptru	equ	0xFF8
 35873                           tblptrh	equ	0xFF7
 35874                           tblptrl	equ	0xFF6
 35875                           tablat	equ	0xFF5
 35876                           prodh	equ	0xFF4
 35877                           prodl	equ	0xFF3
 35878                           intcon	equ	0xFF2
 35879                           intcon2	equ	0xFF1
 35880                           intcon3	equ	0xFF0
 35881                           indf0	equ	0xFEF
 35882                           postinc0	equ	0xFEE
 35883                           plusw0	equ	0xFEB
 35884                           fsr0h	equ	0xFEA
 35885                           fsr0l	equ	0xFE9
 35886                           wreg	equ	0xFE8
 35887                           indf1	equ	0xFE7
 35888                           postinc1	equ	0xFE6
 35889                           postdec1	equ	0xFE5
 35890                           plusw1	equ	0xFE3
 35891                           fsr1h	equ	0xFE2
 35892                           fsr1l	equ	0xFE1
 35893                           bsr	equ	0xFE0
 35894                           indf2	equ	0xFDF
 35895                           postinc2	equ	0xFDE
 35896                           postdec2	equ	0xFDD
 35897                           plusw2	equ	0xFDB
 35898                           fsr2h	equ	0xFDA
 35899                           fsr2l	equ	0xFD9
 35900                           status	equ	0xFD8
 35901                           
 35902 ;; *************** function _USBConfigureEndpoint *****************
 35903 ;; Defined at:
 35904 ;;		line 1543 in file "src/usb/usb_device.c"
 35905 ;; Parameters:    Size  Location     Type
 35906 ;;  EPNum           1    wreg     unsigned char 
 35907 ;;  direction       1    0[COMRAM] unsigned char 
 35908 ;; Auto vars:     Size  Location     Type
 35909 ;;  EPNum           1    5[COMRAM] unsigned char 
 35910 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 35911 ;;		 -> BDT(32), 
 35912 ;; Return value:  Size  Location     Type
 35913 ;;		None               void
 35914 ;; Registers used:
 35915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35916 ;; Tracked objects:
 35917 ;;		On entry : 0/0
 35918 ;;		On exit  : 0/0
 35919 ;;		Unchanged: 0/0
 35920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35921 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35922 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35923 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35925 ;;Total ram usage:        8 bytes
 35926 ;; Hardware stack levels used:    1
 35927 ;; Hardware stack levels required when called:    6
 35928 ;; This function calls:
 35929 ;;		Nothing
 35930 ;; This function is called by:
 35931 ;;		_USBEnableEndpoint
 35932 ;; This function uses a non-reentrant model
 35933 ;;
 35934                           
 35935                           	psect	text109
 35936  00AD52                     __ptext109:
 35937                           	opt stack 0
 35938  00AD52                     _USBConfigureEndpoint:
 35939                           	opt stack 7
 35940                           
 35941                           ;incstack = 0
 35942                           ;USBConfigureEndpoint@EPNum stored from wreg
 35943  00AD52  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 35944                           
 35945                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 35946                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 35947  00AD54  0E00               	movlw	0
 35948  00AD56  6E07               	movwf	USBConfigureEndpoint@handle,c
 35949  00AD58  0E0D               	movlw	13
 35950  00AD5A  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 35951                           
 35952                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 35953  00AD5C  5001               	movf	USBConfigureEndpoint@direction,w,c
 35954  00AD5E  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 35955  00AD60  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 35956  00AD62  90D8               	bcf	status,0,c
 35957  00AD64  3602               	rlcf	??_USBConfigureEndpoint,f,c
 35958  00AD66  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 35959  00AD68  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 35960  00AD6A  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 35961  00AD6C  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 35962  00AD6E  90D8               	bcf	status,0,c
 35963  00AD70  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35964  00AD72  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35965  00AD74  90D8               	bcf	status,0,c
 35966  00AD76  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35967  00AD78  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35968  00AD7A  5002               	movf	??_USBConfigureEndpoint,w,c
 35969  00AD7C  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 35970  00AD7E  5003               	movf	??_USBConfigureEndpoint+1,w,c
 35971  00AD80  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 35972  00AD82  90D8               	bcf	status,0,c
 35973  00AD84  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35974  00AD86  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35975  00AD88  90D8               	bcf	status,0,c
 35976  00AD8A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 35977  00AD8C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 35978  00AD8E  5004               	movf	??_USBConfigureEndpoint+2,w,c
 35979  00AD90  2607               	addwf	USBConfigureEndpoint@handle,f,c
 35980  00AD92  5005               	movf	??_USBConfigureEndpoint+3,w,c
 35981  00AD94  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 35982                           
 35983                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 35984  00AD96  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 35985  00AD9A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 35986  00AD9E  9EDF               	bcf	indf2,7,c
 35987                           
 35988                           ;usb_device.c: 1557: if(direction == 0)
 35989  00ADA0  5001               	movf	USBConfigureEndpoint@direction,w,c
 35990  00ADA2  A4D8               	btfss	status,2,c
 35991  00ADA4  D007               	goto	i1l10174
 35992                           
 35993                           ;usb_device.c: 1558: {
 35994                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 35995  00ADA6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 35996  00ADA8  0D02               	mullw	2
 35997  00ADAA  0E8F               	movlw	low _pBDTEntryOut
 35998  00ADAC  24F3               	addwf	prodl,w,c
 35999  00ADAE  6ED9               	movwf	fsr2l,c
 36000  00ADB0  0E00               	movlw	high _pBDTEntryOut
 36001  00ADB2  D006               	goto	L25
 36002  00ADB4                     i1l10174:
 36003                           
 36004                           ;usb_device.c: 1561: else
 36005                           ;usb_device.c: 1562: {
 36006                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 36007  00ADB4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 36008  00ADB6  0D02               	mullw	2
 36009  00ADB8  0E8B               	movlw	low _pBDTEntryIn
 36010  00ADBA  24F3               	addwf	prodl,w,c
 36011  00ADBC  6ED9               	movwf	fsr2l,c
 36012  00ADBE  0E00               	movlw	high _pBDTEntryIn
 36013  00ADC0                     L25:
 36014  00ADC0  20F4               	addwfc	prodh,w,c
 36015  00ADC2  6EDA               	movwf	fsr2h,c
 36016  00ADC4  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 36017  00ADC8  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 36018                           
 36019                           ;usb_device.c: 1564: }
 36020                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 36021  00ADCC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 36022  00ADD0  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 36023  00ADD4  9CDF               	bcf	indf2,6,c
 36024                           
 36025                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 36026  00ADD6  EE20 F004          	lfsr	2,4
 36027  00ADDA  5007               	movf	USBConfigureEndpoint@handle,w,c
 36028  00ADDC  26D9               	addwf	fsr2l,f,c
 36029  00ADDE  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 36030  00ADE0  22DA               	addwfc	fsr2h,f,c
 36031  00ADE2  8CDF               	bsf	indf2,6,c
 36032  00ADE4  0012               	return		;funcret
 36033  00ADE6                     __end_of_USBConfigureEndpoint:
 36034                           	opt stack 0
 36035                           pclatu	equ	0xFFB
 36036                           pclath	equ	0xFFA
 36037                           tblptru	equ	0xFF8
 36038                           tblptrh	equ	0xFF7
 36039                           tblptrl	equ	0xFF6
 36040                           tablat	equ	0xFF5
 36041                           prodh	equ	0xFF4
 36042                           prodl	equ	0xFF3
 36043                           intcon	equ	0xFF2
 36044                           intcon2	equ	0xFF1
 36045                           intcon3	equ	0xFF0
 36046                           indf0	equ	0xFEF
 36047                           postinc0	equ	0xFEE
 36048                           plusw0	equ	0xFEB
 36049                           fsr0h	equ	0xFEA
 36050                           fsr0l	equ	0xFE9
 36051                           wreg	equ	0xFE8
 36052                           indf1	equ	0xFE7
 36053                           postinc1	equ	0xFE6
 36054                           postdec1	equ	0xFE5
 36055                           plusw1	equ	0xFE3
 36056                           fsr1h	equ	0xFE2
 36057                           fsr1l	equ	0xFE1
 36058                           bsr	equ	0xFE0
 36059                           indf2	equ	0xFDF
 36060                           postinc2	equ	0xFDE
 36061                           postdec2	equ	0xFDD
 36062                           plusw2	equ	0xFDB
 36063                           fsr2h	equ	0xFDA
 36064                           fsr2l	equ	0xFD9
 36065                           status	equ	0xFD8
 36066                           
 36067 ;; *************** function _USBCtrlTrfOutHandler *****************
 36068 ;; Defined at:
 36069 ;;		line 2541 in file "src/usb/usb_device.c"
 36070 ;; Parameters:    Size  Location     Type
 36071 ;;		None
 36072 ;; Auto vars:     Size  Location     Type
 36073 ;;		None
 36074 ;; Return value:  Size  Location     Type
 36075 ;;		None               void
 36076 ;; Registers used:
 36077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36078 ;; Tracked objects:
 36079 ;;		On entry : 0/0
 36080 ;;		On exit  : 0/0
 36081 ;;		Unchanged: 0/0
 36082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36087 ;;Total ram usage:        0 bytes
 36088 ;; Hardware stack levels used:    1
 36089 ;; Hardware stack levels required when called:    8
 36090 ;; This function calls:
 36091 ;;		_USBCtrlTrfRxService
 36092 ;; This function is called by:
 36093 ;;		_USBCtrlEPService
 36094 ;; This function uses a non-reentrant model
 36095 ;;
 36096                           
 36097                           	psect	text110
 36098  00B4A4                     __ptext110:
 36099                           	opt stack 0
 36100  00B4A4                     _USBCtrlTrfOutHandler:
 36101                           	opt stack 7
 36102                           
 36103                           ;usb_device.c: 2543: if(controlTransferState == 2)
 36104                           
 36105                           ;incstack = 0
 36106  00B4A4  0E02               	movlw	2
 36107  00B4A6  184F               	xorwf	_controlTransferState,w,c	;volatile
 36108  00B4A8  A4D8               	btfss	status,2,c
 36109  00B4AA  D003               	goto	i1l12634
 36110                           
 36111                           ;usb_device.c: 2544: {
 36112                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 36113  00B4AC  EC33  F047         	call	_USBCtrlTrfRxService	;wreg free
 36114                           
 36115                           ;usb_device.c: 2546: }
 36116  00B4B0  0012               	return	
 36117  00B4B2                     i1l12634:
 36118                           
 36119                           ;usb_device.c: 2547: else
 36120                           ;usb_device.c: 2548: {
 36121                           ;usb_device.c: 2551: controlTransferState = 0;
 36122  00B4B2  0E00               	movlw	0
 36123  00B4B4  6E4F               	movwf	_controlTransferState,c	;volatile
 36124                           
 36125                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 36126  00B4B6  5044               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 36127  00B4B8  A4D8               	btfss	status,2,c
 36128  00B4BA  D01F               	goto	i1l12642
 36129                           
 36130                           ;usb_device.c: 2559: {
 36131                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 36132  00B4BC  EE20 F001          	lfsr	2,1
 36133  00B4C0  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36134  00B4C2  26D9               	addwf	fsr2l,f,c
 36135  00B4C4  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36136  00B4C6  22DA               	addwfc	fsr2h,f,c
 36137  00B4C8  0E08               	movlw	8
 36138  00B4CA  6EDF               	movwf	indf2,c
 36139                           
 36140                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36141  00B4CC  EE20 F002          	lfsr	2,2
 36142  00B4D0  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36143  00B4D2  26D9               	addwf	fsr2l,f,c
 36144  00B4D4  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36145  00B4D6  22DA               	addwfc	fsr2h,f,c
 36146  00B4D8  0E20               	movlw	32
 36147  00B4DA  6EDE               	movwf	postinc2,c
 36148  00B4DC  0E0D               	movlw	13
 36149  00B4DE  6EDD               	movwf	postdec2,c
 36150                           
 36151                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36152  00B4E0  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36153  00B4E4  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36154  00B4E8  0E0C               	movlw	12
 36155  00B4EA  6EDF               	movwf	indf2,c
 36156                           
 36157                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36158  00B4EC  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36159  00B4F0  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36160  00B4F4  0E00               	movlw	0
 36161  00B4F6  8EDB               	bsf	plusw2,7,c
 36162                           
 36163                           ;usb_device.c: 2564: }
 36164  00B4F8  0012               	return	
 36165  00B4FA                     i1l12642:
 36166                           
 36167                           ;usb_device.c: 2565: else
 36168                           ;usb_device.c: 2566: {
 36169                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 36170  00B4FA  0E00               	movlw	0
 36171  00B4FC  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36172  00B4FE  0012               	return	
 36173  00B500                     __end_of_USBCtrlTrfOutHandler:
 36174                           	opt stack 0
 36175                           pclatu	equ	0xFFB
 36176                           pclath	equ	0xFFA
 36177                           tblptru	equ	0xFF8
 36178                           tblptrh	equ	0xFF7
 36179                           tblptrl	equ	0xFF6
 36180                           tablat	equ	0xFF5
 36181                           prodh	equ	0xFF4
 36182                           prodl	equ	0xFF3
 36183                           intcon	equ	0xFF2
 36184                           intcon2	equ	0xFF1
 36185                           intcon3	equ	0xFF0
 36186                           indf0	equ	0xFEF
 36187                           postinc0	equ	0xFEE
 36188                           plusw0	equ	0xFEB
 36189                           fsr0h	equ	0xFEA
 36190                           fsr0l	equ	0xFE9
 36191                           wreg	equ	0xFE8
 36192                           indf1	equ	0xFE7
 36193                           postinc1	equ	0xFE6
 36194                           postdec1	equ	0xFE5
 36195                           plusw1	equ	0xFE3
 36196                           fsr1h	equ	0xFE2
 36197                           fsr1l	equ	0xFE1
 36198                           bsr	equ	0xFE0
 36199                           indf2	equ	0xFDF
 36200                           postinc2	equ	0xFDE
 36201                           postdec2	equ	0xFDD
 36202                           plusw2	equ	0xFDB
 36203                           fsr2h	equ	0xFDA
 36204                           fsr2l	equ	0xFD9
 36205                           status	equ	0xFD8
 36206                           
 36207 ;; *************** function _USBCtrlTrfRxService *****************
 36208 ;; Defined at:
 36209 ;;		line 1852 in file "src/usb/usb_device.c"
 36210 ;; Parameters:    Size  Location     Type
 36211 ;;		None
 36212 ;; Auto vars:     Size  Location     Type
 36213 ;;  byteToRead      1    1[COMRAM] unsigned char 
 36214 ;;  i               1    0[COMRAM] unsigned char 
 36215 ;; Return value:  Size  Location     Type
 36216 ;;		None               void
 36217 ;; Registers used:
 36218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36219 ;; Tracked objects:
 36220 ;;		On entry : 0/0
 36221 ;;		On exit  : 0/0
 36222 ;;		Unchanged: 0/0
 36223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36228 ;;Total ram usage:        2 bytes
 36229 ;; Hardware stack levels used:    1
 36230 ;; Hardware stack levels required when called:    7
 36231 ;; This function calls:
 36232 ;;		_USBCtrlEPAllowStatusStage
 36233 ;; This function is called by:
 36234 ;;		_USBCtrlTrfOutHandler
 36235 ;; This function uses a non-reentrant model
 36236 ;;
 36237                           
 36238                           	psect	text111
 36239  008E66                     __ptext111:
 36240                           	opt stack 0
 36241  008E66                     _USBCtrlTrfRxService:
 36242                           	opt stack 7
 36243                           
 36244                           ;usb_device.c: 1854: uint8_t byteToRead;
 36245                           ;usb_device.c: 1855: uint8_t i;
 36246                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 36247                           
 36248                           ;incstack = 0
 36249  008E66  EE20 F001          	lfsr	2,1
 36250  008E6A  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36251  008E6C  26D9               	addwf	fsr2l,f,c
 36252  008E6E  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36253  008E70  22DA               	addwfc	fsr2h,f,c
 36254  008E72  50DF               	movf	indf2,w,c
 36255  008E74  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 36256                           
 36257                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 36258  008E76  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36259  008E78  0100               	movlb	0	; () banked
 36260  008E7A  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 36261  008E7C  0E00               	movlw	0
 36262  008E7E  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 36263  008E80  A0D8               	btfss	status,0,c
 36264                           
 36265                           ; BSR set to: 0
 36266                           ;usb_device.c: 1866: {
 36267                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 36268  008E82  C064  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 36269                           
 36270                           ; BSR set to: 0
 36271                           ;usb_device.c: 1868: }
 36272                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 36273                           
 36274                           ; BSR set to: 0
 36275  008E86  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36276  008E88  0100               	movlb	0	; () banked
 36277  008E8A  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 36278  008E8C  0E00               	movlw	0
 36279  008E8E  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 36280                           
 36281                           ; BSR set to: 0
 36282                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 36283  008E90  0E00               	movlw	0
 36284  008E92  6E01               	movwf	USBCtrlTrfRxService@i,c
 36285  008E94  D012               	goto	i1l11528
 36286  008E96                     i1l11522:
 36287                           
 36288                           ; BSR set to: 0
 36289                           ;usb_device.c: 1875: {
 36290                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 36291  008E96  5001               	movf	USBCtrlTrfRxService@i,w,c
 36292  008E98  0D01               	mullw	1
 36293  008E9A  0E28               	movlw	40
 36294  008E9C  24F3               	addwf	prodl,w,c
 36295  008E9E  6ED9               	movwf	fsr2l,c
 36296  008EA0  0E0D               	movlw	13
 36297  008EA2  20F4               	addwfc	prodh,w,c
 36298  008EA4  6EDA               	movwf	fsr2h,c
 36299  008EA6  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
 36300  008EAA  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 36301  008EAE  CFDF FFE7          	movff	indf2,indf1
 36302                           
 36303                           ; BSR set to: 0
 36304  008EB2  0100               	movlb	0	; () banked
 36305  008EB4  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
 36306  008EB6  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 36307                           
 36308                           ; BSR set to: 0
 36309  008EB8  2A01               	incf	USBCtrlTrfRxService@i,f,c
 36310  008EBA                     i1l11528:
 36311                           
 36312                           ; BSR set to: 0
 36313  008EBA  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 36314  008EBC  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 36315  008EBE  A0D8               	btfss	status,0,c
 36316  008EC0  D7EA               	goto	i1l11522
 36317                           
 36318                           ; BSR set to: 0
 36319                           ;usb_device.c: 1877: }
 36320                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 36321                           
 36322                           ; BSR set to: 0
 36323  008EC2  0100               	movlb	0	; () banked
 36324  008EC4  5164               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 36325  008EC6  0100               	movlb	0	; () banked
 36326  008EC8  1165               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 36327  008ECA  B4D8               	btfsc	status,2,c
 36328  008ECC  D032               	goto	i1l11544
 36329                           
 36330                           ; BSR set to: 0
 36331                           ;usb_device.c: 1882: {
 36332                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 36333  008ECE  EE20 F001          	lfsr	2,1
 36334  008ED2  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36335  008ED4  26D9               	addwf	fsr2l,f,c
 36336  008ED6  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36337  008ED8  22DA               	addwfc	fsr2h,f,c
 36338  008EDA  0E08               	movlw	8
 36339  008EDC  6EDF               	movwf	indf2,c
 36340                           
 36341                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 36342  008EDE  EE20 F002          	lfsr	2,2
 36343  008EE2  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36344  008EE4  26D9               	addwf	fsr2l,f,c
 36345  008EE6  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36346  008EE8  22DA               	addwfc	fsr2h,f,c
 36347  008EEA  0E28               	movlw	40
 36348  008EEC  6EDE               	movwf	postinc2,c
 36349  008EEE  0E0D               	movlw	13
 36350  008EF0  6EDD               	movwf	postdec2,c
 36351                           
 36352                           ; BSR set to: 0
 36353                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 36354  008EF2  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36355  008EF6  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36356  008EFA  BCDF               	btfsc	indf2,6,c
 36357  008EFC  D00D               	goto	i1l11540
 36358                           
 36359                           ; BSR set to: 0
 36360                           ;usb_device.c: 1886: {
 36361                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 36362  008EFE  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36363  008F02  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36364  008F06  0E48               	movlw	72
 36365  008F08  6EDF               	movwf	indf2,c
 36366                           
 36367                           ; BSR set to: 0
 36368                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36369  008F0A  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36370  008F0E  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36371  008F12  0E00               	movlw	0
 36372  008F14  8EDB               	bsf	plusw2,7,c
 36373                           
 36374                           ;usb_device.c: 1889: }
 36375  008F16  0012               	return	
 36376  008F18                     i1l11540:
 36377                           
 36378                           ; BSR set to: 0
 36379                           ;usb_device.c: 1890: else
 36380                           ;usb_device.c: 1891: {
 36381                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 36382  008F18  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36383  008F1C  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36384  008F20  0E08               	movlw	8
 36385  008F22  6EDF               	movwf	indf2,c
 36386                           
 36387                           ; BSR set to: 0
 36388                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36389  008F24  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36390  008F28  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36391  008F2C  0E00               	movlw	0
 36392  008F2E  8EDB               	bsf	plusw2,7,c
 36393                           
 36394                           ; BSR set to: 0
 36395                           ;usb_device.c: 1894: }
 36396                           ;usb_device.c: 1895: }
 36397  008F30  0012               	return	
 36398  008F32                     i1l11544:
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;usb_device.c: 1896: else
 36402                           ;usb_device.c: 1897: {
 36403                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 36404  008F32  EE20 F001          	lfsr	2,1
 36405  008F36  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36406  008F38  26D9               	addwf	fsr2l,f,c
 36407  008F3A  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36408  008F3C  22DA               	addwfc	fsr2h,f,c
 36409  008F3E  0E08               	movlw	8
 36410  008F40  6EDF               	movwf	indf2,c
 36411                           
 36412                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36413  008F42  EE20 F002          	lfsr	2,2
 36414  008F46  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36415  008F48  26D9               	addwf	fsr2l,f,c
 36416  008F4A  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36417  008F4C  22DA               	addwfc	fsr2h,f,c
 36418  008F4E  0E20               	movlw	32
 36419  008F50  6EDE               	movwf	postinc2,c
 36420  008F52  0E0D               	movlw	13
 36421  008F54  6EDD               	movwf	postdec2,c
 36422                           
 36423                           ; BSR set to: 0
 36424                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 36425  008F56  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36426  008F5A  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36427  008F5E  0E04               	movlw	4
 36428  008F60  6EDF               	movwf	indf2,c
 36429                           
 36430                           ; BSR set to: 0
 36431                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36432  008F62  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36433  008F66  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36434  008F6A  0E00               	movlw	0
 36435  008F6C  8EDB               	bsf	plusw2,7,c
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;usb_device.c: 1926: }
 36439                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 36440                           
 36441                           ; BSR set to: 0
 36442                           ;usb_device.c: 1915: {
 36443                           ;usb_device.c: 1921: outPipes[0].pFunc();
 36444  008F6E  0100               	movlb	0	; () banked
 36445  008F70  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 36446                           
 36447                           ; BSR set to: 0
 36448                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 36449  008F72  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 36450  008F74  A4D8               	btfss	status,2,c
 36451  008F76  0012               	return	
 36452                           
 36453                           ; BSR set to: 0
 36454                           ;usb_device.c: 1942: {
 36455                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 36456  008F78  ECD8  F04F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 36457  008F7C  0012               	return	
 36458  008F7E                     __end_of_USBCtrlTrfRxService:
 36459                           	opt stack 0
 36460                           pclatu	equ	0xFFB
 36461                           pclath	equ	0xFFA
 36462                           tblptru	equ	0xFF8
 36463                           tblptrh	equ	0xFF7
 36464                           tblptrl	equ	0xFF6
 36465                           tablat	equ	0xFF5
 36466                           prodh	equ	0xFF4
 36467                           prodl	equ	0xFF3
 36468                           intcon	equ	0xFF2
 36469                           intcon2	equ	0xFF1
 36470                           intcon3	equ	0xFF0
 36471                           indf0	equ	0xFEF
 36472                           postinc0	equ	0xFEE
 36473                           plusw0	equ	0xFEB
 36474                           fsr0h	equ	0xFEA
 36475                           fsr0l	equ	0xFE9
 36476                           wreg	equ	0xFE8
 36477                           indf1	equ	0xFE7
 36478                           postinc1	equ	0xFE6
 36479                           postdec1	equ	0xFE5
 36480                           plusw1	equ	0xFE3
 36481                           fsr1h	equ	0xFE2
 36482                           fsr1l	equ	0xFE1
 36483                           bsr	equ	0xFE0
 36484                           indf2	equ	0xFDF
 36485                           postinc2	equ	0xFDE
 36486                           postdec2	equ	0xFDD
 36487                           plusw2	equ	0xFDB
 36488                           fsr2h	equ	0xFDA
 36489                           fsr2l	equ	0xFD9
 36490                           status	equ	0xFD8
 36491                           
 36492 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 36493 ;; Defined at:
 36494 ;;		line 1416 in file "src/usb/usb_device.c"
 36495 ;; Parameters:    Size  Location     Type
 36496 ;;		None
 36497 ;; Auto vars:     Size  Location     Type
 36498 ;;		None
 36499 ;; Return value:  Size  Location     Type
 36500 ;;		None               void
 36501 ;; Registers used:
 36502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36503 ;; Tracked objects:
 36504 ;;		On entry : 0/0
 36505 ;;		On exit  : 0/0
 36506 ;;		Unchanged: 0/0
 36507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36512 ;;Total ram usage:        0 bytes
 36513 ;; Hardware stack levels used:    1
 36514 ;; Hardware stack levels required when called:    6
 36515 ;; This function calls:
 36516 ;;		Nothing
 36517 ;; This function is called by:
 36518 ;;		_USBDeviceTasks
 36519 ;;		_USBCtrlEPServiceComplete
 36520 ;;		_USBCtrlTrfRxService
 36521 ;; This function uses a non-reentrant model
 36522 ;;
 36523                           
 36524                           	psect	text112
 36525  009FB0                     __ptext112:
 36526                           	opt stack 0
 36527  009FB0                     _USBCtrlEPAllowStatusStage:
 36528                           	opt stack 7
 36529                           
 36530                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 36531                           
 36532                           ;incstack = 0
 36533  009FB0  504C               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 36534  009FB2  A4D8               	btfss	status,2,c
 36535  009FB4  0012               	return	
 36536                           
 36537                           ;usb_device.c: 1424: {
 36538                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 36539  009FB6  0E01               	movlw	1
 36540  009FB8  6E4C               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 36541                           
 36542                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 36543  009FBA  504D               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 36544  009FBC  A4D8               	btfss	status,2,c
 36545  009FBE  0012               	return	
 36546                           
 36547                           ;usb_device.c: 1427: {
 36548                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 36549  009FC0  0E01               	movlw	1
 36550  009FC2  6E4D               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 36551                           
 36552                           ;usb_device.c: 1432: if(controlTransferState == 2)
 36553  009FC4  0E02               	movlw	2
 36554  009FC6  184F               	xorwf	_controlTransferState,w,c	;volatile
 36555  009FC8  A4D8               	btfss	status,2,c
 36556  009FCA  D016               	goto	i1l10970
 36557                           
 36558                           ;usb_device.c: 1433: {
 36559                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 36560  009FCC  0100               	movlb	0	; () banked
 36561  009FCE  EE20 F001          	lfsr	2,1
 36562  009FD2  518B               	movf	_pBDTEntryIn& (0+255),w,b
 36563  009FD4  26D9               	addwf	fsr2l,f,c
 36564  009FD6  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 36565  009FD8  22DA               	addwfc	fsr2h,f,c
 36566  009FDA  0E00               	movlw	0
 36567  009FDC  6EDF               	movwf	indf2,c
 36568                           
 36569                           ; BSR set to: 0
 36570                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36571  009FDE  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36572  009FE2  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36573  009FE6  0E48               	movlw	72
 36574  009FE8  6EDF               	movwf	indf2,c
 36575                           
 36576                           ; BSR set to: 0
 36577                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36578  009FEA  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36579  009FEE  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36580  009FF2  0E00               	movlw	0
 36581  009FF4  8EDB               	bsf	plusw2,7,c
 36582                           
 36583                           ;usb_device.c: 1437: }
 36584  009FF6  0012               	return	
 36585  009FF8                     i1l10970:
 36586                           
 36587                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 36588  009FF8  044F               	decf	_controlTransferState,w,c	;volatile
 36589  009FFA  A4D8               	btfss	status,2,c
 36590  009FFC  0012               	return	
 36591                           
 36592                           ;usb_device.c: 1439: {
 36593                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 36594  009FFE  0E00               	movlw	0
 36595  00A000  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36596                           
 36597                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 36598  00A002  EE20 F001          	lfsr	2,1
 36599  00A006  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36600  00A008  26D9               	addwf	fsr2l,f,c
 36601  00A00A  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36602  00A00C  22DA               	addwfc	fsr2h,f,c
 36603  00A00E  0E08               	movlw	8
 36604  00A010  6EDF               	movwf	indf2,c
 36605                           
 36606                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 36607  00A012  EE20 F002          	lfsr	2,2
 36608  00A016  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 36609  00A018  26D9               	addwf	fsr2l,f,c
 36610  00A01A  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36611  00A01C  22DA               	addwfc	fsr2h,f,c
 36612  00A01E  0E20               	movlw	32
 36613  00A020  6EDE               	movwf	postinc2,c
 36614  00A022  0E0D               	movlw	13
 36615  00A024  6EDD               	movwf	postdec2,c
 36616                           
 36617                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 36618  00A026  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36619  00A02A  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36620  00A02E  0E04               	movlw	4
 36621  00A030  6EDF               	movwf	indf2,c
 36622                           
 36623                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 36624  00A032  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36625  00A036  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36626  00A03A  0E00               	movlw	0
 36627  00A03C  8EDB               	bsf	plusw2,7,c
 36628                           
 36629                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 36630  00A03E  0E01               	movlw	1
 36631  00A040  6E44               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36632                           
 36633                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 36634  00A042  EE20 F001          	lfsr	2,1
 36635  00A046  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36636  00A048  26D9               	addwf	fsr2l,f,c
 36637  00A04A  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36638  00A04C  22DA               	addwfc	fsr2h,f,c
 36639  00A04E  0E08               	movlw	8
 36640  00A050  6EDF               	movwf	indf2,c
 36641                           
 36642                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36643  00A052  EE20 F002          	lfsr	2,2
 36644  00A056  503A               	movf	_pBDTEntryEP0OutNext,w,c
 36645  00A058  26D9               	addwf	fsr2l,f,c
 36646  00A05A  503B               	movf	_pBDTEntryEP0OutNext+1,w,c
 36647  00A05C  22DA               	addwfc	fsr2h,f,c
 36648  00A05E  0E20               	movlw	32
 36649  00A060  6EDE               	movwf	postinc2,c
 36650  00A062  0E0D               	movlw	13
 36651  00A064  6EDD               	movwf	postdec2,c
 36652                           
 36653                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 36654  00A066  C03A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36655  00A06A  C03B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36656  00A06E  0E80               	movlw	128
 36657  00A070  6EDF               	movwf	indf2,c
 36658  00A072  0012               	return	
 36659  00A074                     __end_of_USBCtrlEPAllowStatusStage:
 36660                           	opt stack 0
 36661                           pclatu	equ	0xFFB
 36662                           pclath	equ	0xFFA
 36663                           tblptru	equ	0xFF8
 36664                           tblptrh	equ	0xFF7
 36665                           tblptrl	equ	0xFF6
 36666                           tablat	equ	0xFF5
 36667                           prodh	equ	0xFF4
 36668                           prodl	equ	0xFF3
 36669                           intcon	equ	0xFF2
 36670                           intcon2	equ	0xFF1
 36671                           intcon3	equ	0xFF0
 36672                           indf0	equ	0xFEF
 36673                           postinc0	equ	0xFEE
 36674                           plusw0	equ	0xFEB
 36675                           fsr0h	equ	0xFEA
 36676                           fsr0l	equ	0xFE9
 36677                           wreg	equ	0xFE8
 36678                           indf1	equ	0xFE7
 36679                           postinc1	equ	0xFE6
 36680                           postdec1	equ	0xFE5
 36681                           plusw1	equ	0xFE3
 36682                           fsr1h	equ	0xFE2
 36683                           fsr1l	equ	0xFE1
 36684                           bsr	equ	0xFE0
 36685                           indf2	equ	0xFDF
 36686                           postinc2	equ	0xFDE
 36687                           postdec2	equ	0xFDD
 36688                           plusw2	equ	0xFDB
 36689                           fsr2h	equ	0xFDA
 36690                           fsr2l	equ	0xFD9
 36691                           status	equ	0xFD8
 36692                           
 36693 ;; *************** function _USBCtrlTrfInHandler *****************
 36694 ;; Defined at:
 36695 ;;		line 2595 in file "src/usb/usb_device.c"
 36696 ;; Parameters:    Size  Location     Type
 36697 ;;		None
 36698 ;; Auto vars:     Size  Location     Type
 36699 ;;  lastDTS         1    1[COMRAM] unsigned char 
 36700 ;; Return value:  Size  Location     Type
 36701 ;;		None               void
 36702 ;; Registers used:
 36703 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36704 ;; Tracked objects:
 36705 ;;		On entry : 0/0
 36706 ;;		On exit  : 0/0
 36707 ;;		Unchanged: 0/0
 36708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36713 ;;Total ram usage:        1 bytes
 36714 ;; Hardware stack levels used:    1
 36715 ;; Hardware stack levels required when called:    7
 36716 ;; This function calls:
 36717 ;;		_USBCtrlTrfTxService
 36718 ;; This function is called by:
 36719 ;;		_USBCtrlEPService
 36720 ;; This function uses a non-reentrant model
 36721 ;;
 36722                           
 36723                           	psect	text113
 36724  00A074                     __ptext113:
 36725                           	opt stack 0
 36726  00A074                     _USBCtrlTrfInHandler:
 36727                           	opt stack 8
 36728                           
 36729                           ;usb_device.c: 2597: uint8_t lastDTS;
 36730                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 36731                           
 36732                           ;incstack = 0
 36733  00A074  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36734  00A078  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36735  00A07C  0E00               	movlw	0
 36736  00A07E  BCDF               	btfsc	indf2,6,c
 36737  00A080  0E01               	movlw	1
 36738  00A082  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 36739                           
 36740                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 36741  00A084  0E04               	movlw	4
 36742  00A086  0100               	movlb	0	; () banked
 36743  00A088  1B8B               	xorwf	_pBDTEntryIn& (0+255),f,b
 36744                           
 36745                           ; BSR set to: 0
 36746                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 36747  00A08A  0E08               	movlw	8
 36748  00A08C  184B               	xorwf	_USBDeviceState,w,c	;volatile
 36749  00A08E  A4D8               	btfss	status,2,c
 36750  00A090  D00D               	goto	i1l12658
 36751                           
 36752                           ; BSR set to: 0
 36753                           ;usb_device.c: 2608: {
 36754                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 36755  00A092  010D               	movlb	13	; () banked
 36756  00A094  5122               	movf	34,w,b	;volatile
 36757  00A096  0B7F               	andlw	127
 36758  00A098  010F               	movlb	15	; () banked
 36759  00A09A  6F38               	movwf	56,b	;volatile
 36760                           
 36761                           ; BSR set to: 15
 36762                           ;usb_device.c: 2610: if(UADDR != 0u)
 36763  00A09C  010F               	movlb	15	; () banked
 36764  00A09E  5138               	movf	56,w,b	;volatile
 36765  00A0A0  B4D8               	btfsc	status,2,c
 36766  00A0A2  D002               	goto	i1l12656
 36767                           
 36768                           ; BSR set to: 15
 36769                           ;usb_device.c: 2611: {
 36770                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 36771  00A0A4  0E10               	movlw	16
 36772  00A0A6  D001               	goto	L26
 36773  00A0A8                     i1l12656:
 36774                           
 36775                           ; BSR set to: 15
 36776                           ;usb_device.c: 2614: else
 36777                           ;usb_device.c: 2615: {
 36778                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 36779  00A0A8  0E04               	movlw	4
 36780  00A0AA                     L26:
 36781  00A0AA  6E4B               	movwf	_USBDeviceState,c	;volatile
 36782  00A0AC                     i1l12658:
 36783                           
 36784                           ;usb_device.c: 2617: }
 36785                           ;usb_device.c: 2618: }
 36786                           ;usb_device.c: 2621: if(controlTransferState == 1)
 36787  00A0AC  044F               	decf	_controlTransferState,w,c	;volatile
 36788  00A0AE  A4D8               	btfss	status,2,c
 36789  00A0B0  D03B               	goto	i1l1421
 36790                           
 36791                           ;usb_device.c: 2622: {
 36792                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 36793  00A0B2  0100               	movlb	0	; () banked
 36794  00A0B4  EE20 F002          	lfsr	2,2
 36795  00A0B8  518B               	movf	_pBDTEntryIn& (0+255),w,b
 36796  00A0BA  26D9               	addwf	fsr2l,f,c
 36797  00A0BC  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 36798  00A0BE  22DA               	addwfc	fsr2h,f,c
 36799  00A0C0  0E28               	movlw	40
 36800  00A0C2  6EDE               	movwf	postinc2,c
 36801  00A0C4  0E0D               	movlw	13
 36802  00A0C6  6EDD               	movwf	postdec2,c
 36803                           
 36804                           ; BSR set to: 0
 36805                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 36806  00A0C8  EC0D  F04D         	call	_USBCtrlTrfTxService	;wreg free
 36807                           
 36808                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 36809  00A0CC  0E02               	movlw	2
 36810  00A0CE  1854               	xorwf	_shortPacketStatus,w,c	;volatile
 36811  00A0D0  A4D8               	btfss	status,2,c
 36812  00A0D2  D00D               	goto	i1l12670
 36813                           
 36814                           ;usb_device.c: 2631: {
 36815                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 36816  00A0D4  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36817  00A0D8  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36818  00A0DC  0E04               	movlw	4
 36819  00A0DE  6EDF               	movwf	indf2,c
 36820                           
 36821                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36822  00A0E0  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36823  00A0E4  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36824  00A0E8  0E00               	movlw	0
 36825  00A0EA  8EDB               	bsf	plusw2,7,c
 36826                           
 36827                           ;usb_device.c: 2636: }
 36828  00A0EC  0012               	return	
 36829  00A0EE                     i1l12670:
 36830                           
 36831                           ;usb_device.c: 2637: else
 36832                           ;usb_device.c: 2638: {
 36833                           ;usb_device.c: 2639: if(lastDTS == 0)
 36834  00A0EE  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 36835  00A0F0  A4D8               	btfss	status,2,c
 36836  00A0F2  D00D               	goto	i1l12676
 36837                           
 36838                           ;usb_device.c: 2640: {
 36839                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36840  00A0F4  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36841  00A0F8  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36842  00A0FC  0E48               	movlw	72
 36843  00A0FE  6EDF               	movwf	indf2,c
 36844                           
 36845                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36846  00A100  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36847  00A104  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36848  00A108  0E00               	movlw	0
 36849  00A10A  8EDB               	bsf	plusw2,7,c
 36850                           
 36851                           ;usb_device.c: 2643: }
 36852  00A10C  0012               	return	
 36853  00A10E                     i1l12676:
 36854                           
 36855                           ;usb_device.c: 2644: else
 36856                           ;usb_device.c: 2645: {
 36857                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 36858  00A10E  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36859  00A112  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36860  00A116  0E08               	movlw	8
 36861  00A118  6EDF               	movwf	indf2,c
 36862                           
 36863                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36864  00A11A  C08B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36865  00A11E  C08C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36866  00A122  0E00               	movlw	0
 36867  00A124  8EDB               	bsf	plusw2,7,c
 36868                           
 36869                           ;usb_device.c: 2648: }
 36870                           ;usb_device.c: 2649: }
 36871                           ;usb_device.c: 2650: }
 36872  00A126  0012               	return	
 36873  00A128                     i1l1421:
 36874                           
 36875                           ;usb_device.c: 2651: else
 36876                           ;usb_device.c: 2652: {
 36877                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 36878  00A128  0100               	movlb	0	; () banked
 36879  00A12A  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 36880  00A12C  D002               	goto	i1l12682
 36881                           
 36882                           ; BSR set to: 0
 36883                           ;usb_device.c: 2661: }
 36884                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 36885                           
 36886                           ; BSR set to: 0
 36887                           ;usb_device.c: 2659: {
 36888                           ;usb_device.c: 2660: outPipes[0].pFunc();
 36889  00A12E  0100               	movlb	0	; () banked
 36890  00A130  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 36891  00A132                     i1l12682:
 36892                           
 36893                           ; BSR set to: 0
 36894                           ;usb_device.c: 2663: }
 36895                           ;usb_device.c: 2665: controlTransferState = 0;
 36896  00A132  0E00               	movlw	0
 36897  00A134  6E4F               	movwf	_controlTransferState,c	;volatile
 36898  00A136  0012               	return	
 36899  00A138                     __end_of_USBCtrlTrfInHandler:
 36900                           	opt stack 0
 36901                           pclatu	equ	0xFFB
 36902                           pclath	equ	0xFFA
 36903                           tblptru	equ	0xFF8
 36904                           tblptrh	equ	0xFF7
 36905                           tblptrl	equ	0xFF6
 36906                           tablat	equ	0xFF5
 36907                           prodh	equ	0xFF4
 36908                           prodl	equ	0xFF3
 36909                           intcon	equ	0xFF2
 36910                           intcon2	equ	0xFF1
 36911                           intcon3	equ	0xFF0
 36912                           indf0	equ	0xFEF
 36913                           postinc0	equ	0xFEE
 36914                           plusw0	equ	0xFEB
 36915                           fsr0h	equ	0xFEA
 36916                           fsr0l	equ	0xFE9
 36917                           wreg	equ	0xFE8
 36918                           indf1	equ	0xFE7
 36919                           postinc1	equ	0xFE6
 36920                           postdec1	equ	0xFE5
 36921                           plusw1	equ	0xFE3
 36922                           fsr1h	equ	0xFE2
 36923                           fsr1l	equ	0xFE1
 36924                           bsr	equ	0xFE0
 36925                           indf2	equ	0xFDF
 36926                           postinc2	equ	0xFDE
 36927                           postdec2	equ	0xFDD
 36928                           plusw2	equ	0xFDB
 36929                           fsr2h	equ	0xFDA
 36930                           fsr2l	equ	0xFD9
 36931                           status	equ	0xFD8
 36932                           
 36933 ;; *************** function _USBCtrlTrfTxService *****************
 36934 ;; Defined at:
 36935 ;;		line 1771 in file "src/usb/usb_device.c"
 36936 ;; Parameters:    Size  Location     Type
 36937 ;;		None
 36938 ;; Auto vars:     Size  Location     Type
 36939 ;;  byteToSend      1    0[COMRAM] unsigned char 
 36940 ;; Return value:  Size  Location     Type
 36941 ;;		None               void
 36942 ;; Registers used:
 36943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36944 ;; Tracked objects:
 36945 ;;		On entry : 0/0
 36946 ;;		On exit  : 0/0
 36947 ;;		Unchanged: 0/0
 36948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36953 ;;Total ram usage:        1 bytes
 36954 ;; Hardware stack levels used:    1
 36955 ;; Hardware stack levels required when called:    6
 36956 ;; This function calls:
 36957 ;;		Nothing
 36958 ;; This function is called by:
 36959 ;;		_USBCtrlEPAllowDataStage
 36960 ;;		_USBCtrlTrfInHandler
 36961 ;; This function uses a non-reentrant model
 36962 ;;
 36963                           
 36964                           	psect	text114
 36965  009A1A                     __ptext114:
 36966                           	opt stack 0
 36967  009A1A                     _USBCtrlTrfTxService:
 36968                           	opt stack 6
 36969                           
 36970                           ;usb_device.c: 1773: uint8_t byteToSend;
 36971                           ;usb_device.c: 1777: byteToSend = 8;
 36972                           
 36973                           ;incstack = 0
 36974  009A1A  0E08               	movlw	8
 36975  009A1C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 36976                           
 36977                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 36978  009A1E  0100               	movlb	0	; () banked
 36979  009A20  5186               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 36980  009A22  E111               	bnz	i1l10546
 36981  009A24  0E08               	movlw	8
 36982  009A26  0100               	movlb	0	; () banked
 36983  009A28  5D85               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 36984  009A2A  B0D8               	btfsc	status,0,c
 36985  009A2C  D00C               	goto	i1l10546
 36986                           
 36987                           ; BSR set to: 0
 36988                           ;usb_device.c: 1779: {
 36989                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 36990  009A2E  C085  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 36991                           
 36992                           ; BSR set to: 0
 36993                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 36994  009A32  5054               	movf	_shortPacketStatus,w,c	;volatile
 36995  009A34  A4D8               	btfss	status,2,c
 36996  009A36  D002               	goto	i1l10542
 36997                           
 36998                           ; BSR set to: 0
 36999                           ;usb_device.c: 1788: {
 37000                           ;usb_device.c: 1789: shortPacketStatus = 1;
 37001  009A38  0E01               	movlw	1
 37002  009A3A  D004               	goto	L27
 37003  009A3C                     i1l10542:
 37004                           
 37005                           ; BSR set to: 0
 37006                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 37007  009A3C  0454               	decf	_shortPacketStatus,w,c	;volatile
 37008  009A3E  A4D8               	btfss	status,2,c
 37009  009A40  D002               	goto	i1l10546
 37010                           
 37011                           ; BSR set to: 0
 37012                           ;usb_device.c: 1792: {
 37013                           ;usb_device.c: 1793: shortPacketStatus = 2;
 37014  009A42  0E02               	movlw	2
 37015  009A44                     L27:
 37016  009A44  6E54               	movwf	_shortPacketStatus,c	;volatile
 37017  009A46                     i1l10546:
 37018                           
 37019                           ; BSR set to: 0
 37020                           ;usb_device.c: 1794: }
 37021                           ;usb_device.c: 1795: }
 37022                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 37023  009A46  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37024  009A48  0100               	movlb	0	; () banked
 37025  009A4A  5F85               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 37026  009A4C  0E00               	movlw	0
 37027  009A4E  5B86               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 37028                           
 37029                           ; BSR set to: 0
 37030                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 37031  009A50  0100               	movlb	0	; () banked
 37032  009A52  EE20 F001          	lfsr	2,1
 37033  009A56  518B               	movf	_pBDTEntryIn& (0+255),w,b
 37034  009A58  26D9               	addwf	fsr2l,f,c
 37035  009A5A  518C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 37036  009A5C  22DA               	addwfc	fsr2h,f,c
 37037  009A5E  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 37038                           
 37039                           ; BSR set to: 0
 37040                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 37041  009A62  0E28               	movlw	40
 37042  009A64  6E3C               	movwf	_pDst,c
 37043  009A66  0E0D               	movlw	13
 37044  009A68  6E3D               	movwf	_pDst+1,c
 37045                           
 37046                           ; BSR set to: 0
 37047                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 37048  009A6A  0100               	movlb	0	; () banked
 37049  009A6C  A184               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 37050  009A6E  D01D               	goto	i1l10564
 37051  009A70  D03C               	goto	i1l10574
 37052  009A72                     i1l10556:
 37053                           
 37054                           ; BSR set to: 0
 37055                           ;usb_device.c: 1812: {
 37056                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 37057  009A72  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 37058  009A76  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37059  009A7A  0E00               	movlw	low (__mediumconst shr (0+16))
 37060  009A7C  6EF8               	movwf	tblptru,c
 37061  009A7E  C03C  FFD9         	movff	_pDst,fsr2l
 37062  009A82  C03D  FFDA         	movff	_pDst+1,fsr2h
 37063  009A86  0E0E               	movlw	(high __ramtop+-1)
 37064  009A88  64F7               	cpfsgt	tblptrh,c
 37065  009A8A  D003               	bra	i1u993_27
 37066  009A8C  0008               	tblrd		*
 37067  009A8E  50F5               	movf	tablat,w,c
 37068  009A90  D005               	bra	i1u993_20
 37069  009A92                     i1u993_27:
 37070  009A92  CFF6 FFE9          	movff	tblptrl,fsr0l
 37071  009A96  CFF7 FFEA          	movff	tblptrh,fsr0h
 37072  009A9A  50EF               	movf	indf0,w,c
 37073  009A9C                     i1u993_20:
 37074  009A9C  6EDF               	movwf	indf2,c
 37075  009A9E  0100               	movlb	0	; () banked
 37076  009AA0  4B81               	infsnz	_inPipes& (0+255),f,b	;volatile
 37077  009AA2  2B82               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 37078                           
 37079                           ; BSR set to: 0
 37080  009AA4  4A3C               	infsnz	_pDst,f,c
 37081  009AA6  2A3D               	incf	_pDst+1,f,c
 37082                           
 37083                           ; BSR set to: 0
 37084                           ;usb_device.c: 1814: byteToSend--;
 37085  009AA8  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 37086  009AAA                     i1l10564:
 37087                           
 37088                           ; BSR set to: 0
 37089  009AAA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37090  009AAC  B4D8               	btfsc	status,2,c
 37091  009AAE  0012               	return	
 37092  009AB0  D7E0               	goto	i1l10556
 37093  009AB2                     i1l10566:
 37094                           
 37095                           ; BSR set to: 0
 37096                           ;usb_device.c: 1820: {
 37097                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 37098  009AB2  C081  FFF6         	movff	_inPipes,tblptrl	;volatile
 37099  009AB6  C082  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37100  009ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 37101  009ABC  6EF8               	movwf	tblptru,c
 37102  009ABE  C03C  FFD9         	movff	_pDst,fsr2l
 37103  009AC2  C03D  FFDA         	movff	_pDst+1,fsr2h
 37104  009AC6  0E0E               	movlw	(high __ramtop+-1)
 37105  009AC8  64F7               	cpfsgt	tblptrh,c
 37106  009ACA  D003               	bra	i1u995_27
 37107  009ACC  0008               	tblrd		*
 37108  009ACE  50F5               	movf	tablat,w,c
 37109  009AD0  D005               	bra	i1u995_20
 37110  009AD2                     i1u995_27:
 37111  009AD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 37112  009AD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 37113  009ADA  50EF               	movf	indf0,w,c
 37114  009ADC                     i1u995_20:
 37115  009ADC  6EDF               	movwf	indf2,c
 37116  009ADE  0100               	movlb	0	; () banked
 37117  009AE0  4B81               	infsnz	_inPipes& (0+255),f,b	;volatile
 37118  009AE2  2B82               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 37119                           
 37120                           ; BSR set to: 0
 37121  009AE4  4A3C               	infsnz	_pDst,f,c
 37122  009AE6  2A3D               	incf	_pDst+1,f,c
 37123                           
 37124                           ; BSR set to: 0
 37125                           ;usb_device.c: 1822: byteToSend--;
 37126  009AE8  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 37127  009AEA                     i1l10574:
 37128                           
 37129                           ; BSR set to: 0
 37130  009AEA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 37131  009AEC  B4D8               	btfsc	status,2,c
 37132  009AEE  0012               	return	
 37133  009AF0  D7E0               	goto	i1l10566
 37134  009AF2                     __end_of_USBCtrlTrfTxService:
 37135                           	opt stack 0
 37136                           pclatu	equ	0xFFB
 37137                           pclath	equ	0xFFA
 37138                           tblptru	equ	0xFF8
 37139                           tblptrh	equ	0xFF7
 37140                           tblptrl	equ	0xFF6
 37141                           tablat	equ	0xFF5
 37142                           prodh	equ	0xFF4
 37143                           prodl	equ	0xFF3
 37144                           intcon	equ	0xFF2
 37145                           intcon2	equ	0xFF1
 37146                           intcon3	equ	0xFF0
 37147                           indf0	equ	0xFEF
 37148                           postinc0	equ	0xFEE
 37149                           plusw0	equ	0xFEB
 37150                           fsr0h	equ	0xFEA
 37151                           fsr0l	equ	0xFE9
 37152                           wreg	equ	0xFE8
 37153                           indf1	equ	0xFE7
 37154                           postinc1	equ	0xFE6
 37155                           postdec1	equ	0xFE5
 37156                           plusw1	equ	0xFE3
 37157                           fsr1h	equ	0xFE2
 37158                           fsr1l	equ	0xFE1
 37159                           bsr	equ	0xFE0
 37160                           indf2	equ	0xFDF
 37161                           postinc2	equ	0xFDE
 37162                           postdec2	equ	0xFDD
 37163                           plusw2	equ	0xFDB
 37164                           fsr2h	equ	0xFDA
 37165                           fsr2l	equ	0xFD9
 37166                           status	equ	0xFD8
 37167                           
 37168 ;; *************** function _SYS_InterruptHigh *****************
 37169 ;; Defined at:
 37170 ;;		line 779 in file "src/main.c"
 37171 ;; Parameters:    Size  Location     Type
 37172 ;;		None
 37173 ;; Auto vars:     Size  Location     Type
 37174 ;;		None
 37175 ;; Return value:  Size  Location     Type
 37176 ;;		None               void
 37177 ;; Registers used:
 37178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37179 ;; Tracked objects:
 37180 ;;		On entry : 0/0
 37181 ;;		On exit  : 0/0
 37182 ;;		Unchanged: 0/0
 37183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37186 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37187 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37188 ;;Total ram usage:       14 bytes
 37189 ;; Hardware stack levels used:    1
 37190 ;; Hardware stack levels required when called:    5
 37191 ;; This function calls:
 37192 ;;		_MIWIInterruptHandler
 37193 ;; This function is called by:
 37194 ;;		Interrupt level 2
 37195 ;; This function uses a non-reentrant model
 37196 ;;
 37197                           
 37198                           	psect	intcode
 37199  000008                     __pintcode:
 37200                           	opt stack 0
 37201  000008                     _SYS_InterruptHigh:
 37202                           	opt stack 3
 37203                           
 37204                           ; BSR set to: 0
 37205                           ;incstack = 0
 37206  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37207  00000A  CFFA F0D8          	movff	pclath,??_SYS_InterruptHigh
 37208  00000E  CFFB F0D9          	movff	pclatu,??_SYS_InterruptHigh+1
 37209  000012  EF28  F059         	goto	int_func
 37210                           pclatu	equ	0xFFB
 37211                           pclath	equ	0xFFA
 37212                           tblptru	equ	0xFF8
 37213                           tblptrh	equ	0xFF7
 37214                           tblptrl	equ	0xFF6
 37215                           tablat	equ	0xFF5
 37216                           prodh	equ	0xFF4
 37217                           prodl	equ	0xFF3
 37218                           intcon	equ	0xFF2
 37219                           intcon2	equ	0xFF1
 37220                           intcon3	equ	0xFF0
 37221                           indf0	equ	0xFEF
 37222                           postinc0	equ	0xFEE
 37223                           plusw0	equ	0xFEB
 37224                           fsr0h	equ	0xFEA
 37225                           fsr0l	equ	0xFE9
 37226                           wreg	equ	0xFE8
 37227                           indf1	equ	0xFE7
 37228                           postinc1	equ	0xFE6
 37229                           postdec1	equ	0xFE5
 37230                           plusw1	equ	0xFE3
 37231                           fsr1h	equ	0xFE2
 37232                           fsr1l	equ	0xFE1
 37233                           bsr	equ	0xFE0
 37234                           indf2	equ	0xFDF
 37235                           postinc2	equ	0xFDE
 37236                           postdec2	equ	0xFDD
 37237                           plusw2	equ	0xFDB
 37238                           fsr2h	equ	0xFDA
 37239                           fsr2l	equ	0xFD9
 37240                           status	equ	0xFD8
 37241                           
 37242                           	psect	intcode_body
 37243  00B250                     __pintcode_body:
 37244                           	opt stack 3
 37245  00B250                     int_func:
 37246                           	opt stack 3
 37247  00B250  CFE9 F0DA          	movff	fsr0l,??_SYS_InterruptHigh+2
 37248  00B254  CFEA F0DB          	movff	fsr0h,??_SYS_InterruptHigh+3
 37249  00B258  CFE1 F0DC          	movff	fsr1l,??_SYS_InterruptHigh+4
 37250  00B25C  CFE2 F0DD          	movff	fsr1h,??_SYS_InterruptHigh+5
 37251  00B260  CFD9 F0DE          	movff	fsr2l,??_SYS_InterruptHigh+6
 37252  00B264  CFDA F0DF          	movff	fsr2h,??_SYS_InterruptHigh+7
 37253  00B268  CFF3 F0E0          	movff	prodl,??_SYS_InterruptHigh+8
 37254  00B26C  CFF4 F0E1          	movff	prodh,??_SYS_InterruptHigh+9
 37255  00B270  CFF6 F0E2          	movff	tblptrl,??_SYS_InterruptHigh+10
 37256  00B274  CFF7 F0E3          	movff	tblptrh,??_SYS_InterruptHigh+11
 37257  00B278  CFF8 F0E4          	movff	tblptru,??_SYS_InterruptHigh+12
 37258  00B27C  CFF5 F0E5          	movff	tablat,??_SYS_InterruptHigh+13
 37259                           
 37260                           ;main.c: 781: MIWIInterruptHandler();
 37261  00B280  EC34  F027         	call	_MIWIInterruptHandler	;wreg free
 37262  00B284  C0E5  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 37263  00B288  C0E4  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 37264  00B28C  C0E3  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 37265  00B290  C0E2  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 37266  00B294  C0E1  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 37267  00B298  C0E0  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 37268  00B29C  C0DF  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 37269  00B2A0  C0DE  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 37270  00B2A4  C0DD  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 37271  00B2A8  C0DC  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 37272  00B2AC  C0DB  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 37273  00B2B0  C0DA  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 37274  00B2B4  C0D9  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 37275  00B2B8  C0D8  FFFA         	movff	??_SYS_InterruptHigh,pclath
 37276  00B2BC  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 37277  00B2BE  0011               	retfie		f
 37278  00B2C0                     __end_of_SYS_InterruptHigh:
 37279                           	opt stack 0
 37280                           pclatu	equ	0xFFB
 37281                           pclath	equ	0xFFA
 37282                           tblptru	equ	0xFF8
 37283                           tblptrh	equ	0xFF7
 37284                           tblptrl	equ	0xFF6
 37285                           tablat	equ	0xFF5
 37286                           prodh	equ	0xFF4
 37287                           prodl	equ	0xFF3
 37288                           intcon	equ	0xFF2
 37289                           intcon2	equ	0xFF1
 37290                           intcon3	equ	0xFF0
 37291                           indf0	equ	0xFEF
 37292                           postinc0	equ	0xFEE
 37293                           plusw0	equ	0xFEB
 37294                           fsr0h	equ	0xFEA
 37295                           fsr0l	equ	0xFE9
 37296                           wreg	equ	0xFE8
 37297                           indf1	equ	0xFE7
 37298                           postinc1	equ	0xFE6
 37299                           postdec1	equ	0xFE5
 37300                           plusw1	equ	0xFE3
 37301                           fsr1h	equ	0xFE2
 37302                           fsr1l	equ	0xFE1
 37303                           bsr	equ	0xFE0
 37304                           indf2	equ	0xFDF
 37305                           postinc2	equ	0xFDE
 37306                           postdec2	equ	0xFDD
 37307                           plusw2	equ	0xFDB
 37308                           fsr2h	equ	0xFDA
 37309                           fsr2l	equ	0xFD9
 37310                           status	equ	0xFD8
 37311                           
 37312 ;; *************** function _MIWIInterruptHandler *****************
 37313 ;; Defined at:
 37314 ;;		line 1248 in file "src/miwi/drv_mrf_miwi_89xa.c"
 37315 ;; Parameters:    Size  Location     Type
 37316 ;;		None
 37317 ;; Auto vars:     Size  Location     Type
 37318 ;;  ackInfoIndex    1   49[BANK0 ] unsigned char 
 37319 ;;  i               1   52[BANK0 ] unsigned char 
 37320 ;;  fifo_stat       1   42[BANK0 ] unsigned char 
 37321 ;;  ackPacket       4   43[BANK0 ] unsigned char [4]
 37322 ;;  counter         2   40[BANK0 ] unsigned int 
 37323 ;;  BankIndex       1   51[BANK0 ] unsigned char 
 37324 ;;  PacketLen       1   50[BANK0 ] unsigned char 
 37325 ;;  RxPacketPtr     1   48[BANK0 ] unsigned char 
 37326 ;;  bAck            1   47[BANK0 ] unsigned char 
 37327 ;; Return value:  Size  Location     Type
 37328 ;;		None               void
 37329 ;; Registers used:
 37330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37331 ;; Tracked objects:
 37332 ;;		On entry : 0/0
 37333 ;;		On exit  : 0/0
 37334 ;;		Unchanged: 0/0
 37335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37337 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37338 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37339 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37340 ;;Total ram usage:       19 bytes
 37341 ;; Hardware stack levels used:    1
 37342 ;; Hardware stack levels required when called:    4
 37343 ;; This function calls:
 37344 ;;		i2_MiWi_TickGet
 37345 ;;		i2_RegisterRead
 37346 ;;		i2_SPIGet
 37347 ;;		i2_TxPacket
 37348 ;;		i2_update_LED
 37349 ;; This function is called by:
 37350 ;;		_SYS_InterruptHigh
 37351 ;; This function uses a non-reentrant model
 37352 ;;
 37353                           
 37354                           	psect	text116
 37355  004E68                     __ptext116:
 37356                           	opt stack 0
 37357  004E68                     _MIWIInterruptHandler:
 37358                           	opt stack 3
 37359                           
 37360                           ;drv_mrf_miwi_89xa.c: 1250: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE)
 37361                           
 37362                           ;incstack = 0
 37363  004E68  B0F0               	btfsc	intcon3,0,c	;volatile
 37364  004E6A  A6F0               	btfss	intcon3,3,c	;volatile
 37365  004E6C  D280               	goto	i2l19914
 37366                           
 37367                           ;drv_mrf_miwi_89xa.c: 1251: {
 37368                           ;drv_mrf_miwi_89xa.c: 1252: INTCON3bits.INT1IF = 0;
 37369  004E6E  90F0               	bcf	intcon3,0,c	;volatile
 37370                           
 37371                           ;drv_mrf_miwi_89xa.c: 1258: if(RF_Mode == 0x60)
 37372  004E70  0E60               	movlw	96
 37373  004E72  0100               	movlb	0	; () banked
 37374  004E74  199B               	xorwf	_RF_Mode& (0+255),w,b
 37375  004E76  A4D8               	btfss	status,2,c
 37376  004E78  D275               	goto	i2l19908
 37377                           
 37378                           ; BSR set to: 0
 37379                           ;drv_mrf_miwi_89xa.c: 1259: {
 37380                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t RxPacketPtr;
 37381                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t PacketLen;
 37382                           ;drv_mrf_miwi_89xa.c: 1262: uint8_t BankIndex;
 37383                           ;drv_mrf_miwi_89xa.c: 1263: uint16_t counter;
 37384                           ;drv_mrf_miwi_89xa.c: 1264: bool bAck;
 37385                           ;drv_mrf_miwi_89xa.c: 1265: uint8_t ackPacket[4];
 37386                           ;drv_mrf_miwi_89xa.c: 1271: RSSILock = RSSIVal;
 37387  004E7A  C09C  F1C4         	movff	_RSSIVal,_RSSILock
 37388                           
 37389                           ;drv_mrf_miwi_89xa.c: 1273: LATCbits.LATC6 = 0;
 37390  004E7E  9C8B               	bcf	3979,6,c	;volatile
 37391                           
 37392                           ; BSR set to: 0
 37393                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPIGet();
 37394  004E80  ECCB  F05D         	call	i2_SPIGet	;wreg free
 37395  004E84  0100               	movlb	0	; () banked
 37396  004E86  6FD5               	movwf	MIWIInterruptHandler@PacketLen& (0+255),b
 37397                           
 37398                           ; BSR set to: 0
 37399                           ;drv_mrf_miwi_89xa.c: 1275: LATCbits.LATC6 = 1;
 37400  004E88  8C8B               	bsf	3979,6,c	;volatile
 37401                           
 37402                           ; BSR set to: 0
 37403                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 37404  004E8A  0E00               	movlw	0
 37405  004E8C  0100               	movlb	0	; () banked
 37406  004E8E  6FD6               	movwf	MIWIInterruptHandler@BankIndex& (0+255),b
 37407  004E90                     i2l19748:
 37408                           
 37409                           ; BSR set to: 0
 37410  004E90  0E01               	movlw	1
 37411  004E92  0100               	movlb	0	; () banked
 37412  004E94  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37413  004E96  D001               	goto	i2l19752
 37414  004E98  D00F               	goto	i2l19760
 37415  004E9A                     i2l19752:
 37416                           
 37417                           ; BSR set to: 0
 37418                           ;drv_mrf_miwi_89xa.c: 1279: {
 37419                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 37420  004E9A  0100               	movlb	0	; () banked
 37421  004E9C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37422  004E9E  0D42               	mullw	66
 37423  004EA0  0E00               	movlw	low _RxPacket
 37424  004EA2  24F3               	addwf	prodl,w,c
 37425  004EA4  6ED9               	movwf	fsr2l,c
 37426  004EA6  0E03               	movlw	high _RxPacket
 37427  004EA8  20F4               	addwfc	prodh,w,c
 37428  004EAA  6EDA               	movwf	fsr2h,c
 37429  004EAC  0103               	movlb	3	; () banked
 37430  004EAE  A0DF               	btfss	indf2,0,c
 37431  004EB0  D003               	goto	i2l19760
 37432                           
 37433                           ; BSR set to: 3
 37434                           
 37435                           ; BSR set to: 3
 37436                           
 37437                           ; BSR set to: 3
 37438                           ;drv_mrf_miwi_89xa.c: 1281: {
 37439                           ;drv_mrf_miwi_89xa.c: 1282: break;
 37440  004EB2  0100               	movlb	0	; () banked
 37441  004EB4  2BD6               	incf	MIWIInterruptHandler@BankIndex& (0+255),f,b
 37442  004EB6  D7EC               	goto	i2l19748
 37443  004EB8                     i2l19760:
 37444                           
 37445                           ;drv_mrf_miwi_89xa.c: 1283: }
 37446                           ;drv_mrf_miwi_89xa.c: 1284: }
 37447                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 37448  004EB8  0E02               	movlw	2
 37449  004EBA  0100               	movlb	0	; () banked
 37450  004EBC  19D5               	xorwf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37451  004EBE  A4D8               	btfss	status,2,c
 37452  004EC0  D002               	goto	i2l19764
 37453                           
 37454                           ; BSR set to: 0
 37455                           ;drv_mrf_miwi_89xa.c: 1288: {
 37456                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 37457  004EC2  0E01               	movlw	1
 37458  004EC4  D001               	goto	L28
 37459  004EC6                     i2l19764:
 37460                           
 37461                           ; BSR set to: 0
 37462                           ;drv_mrf_miwi_89xa.c: 1291: else
 37463                           ;drv_mrf_miwi_89xa.c: 1292: {
 37464                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 37465  004EC6  0E00               	movlw	0
 37466  004EC8                     L28:
 37467  004EC8  0100               	movlb	0	; () banked
 37468  004ECA  6FD2               	movwf	MIWIInterruptHandler@bAck& (0+255),b
 37469                           
 37470                           ; BSR set to: 0
 37471                           ;drv_mrf_miwi_89xa.c: 1294: }
 37472                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (32+11+4+4+4+9) || PacketLen == 0 || (BankI
      +                          ndex >= 2 && (bAck==0)) )
 37473                           
 37474                           ; BSR set to: 0
 37475  004ECC  0E40               	movlw	64
 37476  004ECE  0100               	movlb	0	; () banked
 37477  004ED0  61D5               	cpfslt	MIWIInterruptHandler@PacketLen& (0+255),b
 37478  004ED2  D00E               	goto	i2l19774
 37479                           
 37480                           ; BSR set to: 0
 37481  004ED4  0100               	movlb	0	; () banked
 37482  004ED6  51D5               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37483  004ED8  0100               	movlb	0	; () banked
 37484  004EDA  B4D8               	btfsc	status,2,c
 37485  004EDC  D009               	goto	i2l19774
 37486                           
 37487                           ; BSR set to: 0
 37488  004EDE  0E01               	movlw	1
 37489  004EE0  0100               	movlb	0	; () banked
 37490  004EE2  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37491  004EE4  D016               	goto	i2l19784
 37492                           
 37493                           ; BSR set to: 0
 37494  004EE6  0100               	movlb	0	; () banked
 37495  004EE8  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37496  004EEA  0100               	movlb	0	; () banked
 37497  004EEC  A4D8               	btfss	status,2,c
 37498  004EEE  D011               	goto	i2l19784
 37499  004EF0                     i2l19774:
 37500                           
 37501                           ; BSR set to: 0
 37502                           ;drv_mrf_miwi_89xa.c: 1300: {
 37503                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 37504  004EF0  0E1A               	movlw	26
 37505  004EF2  ECAC  F05A         	call	i2_RegisterRead
 37506  004EF6  D007               	goto	L29
 37507  004EF8                     i2l410:
 37508                           
 37509                           ; BSR set to: 0
 37510                           ;drv_mrf_miwi_89xa.c: 1303: {
 37511                           ;drv_mrf_miwi_89xa.c: 1304: LATCbits.LATC6 = 0;
 37512  004EF8  9C8B               	bcf	3979,6,c	;volatile
 37513                           
 37514                           ; BSR set to: 0
 37515                           ;drv_mrf_miwi_89xa.c: 1305: SPIGet();
 37516  004EFA  ECCB  F05D         	call	i2_SPIGet	;wreg free
 37517                           
 37518                           ;drv_mrf_miwi_89xa.c: 1306: LATCbits.LATC6 = 1;
 37519  004EFE  8C8B               	bsf	3979,6,c	;volatile
 37520                           
 37521                           ;drv_mrf_miwi_89xa.c: 1307: fifo_stat = RegisterRead(0x1A00>>8);
 37522  004F00  0E1A               	movlw	26
 37523  004F02  ECAC  F05A         	call	i2_RegisterRead
 37524  004F06                     L29:
 37525  004F06  0100               	movlb	0	; () banked
 37526  004F08  6FCD               	movwf	MIWIInterruptHandler@fifo_stat& (0+255),b
 37527                           
 37528                           ; BSR set to: 0
 37529                           
 37530                           ; BSR set to: 0
 37531  004F0A  0100               	movlb	0	; () banked
 37532  004F0C  A3CD               	btfss	MIWIInterruptHandler@fifo_stat& (0+255),1,b
 37533  004F0E  D22D               	goto	i2l19910
 37534  004F10  D7F3               	goto	i2l410
 37535  004F12                     i2l19784:
 37536                           
 37537                           ; BSR set to: 0
 37538                           ;drv_mrf_miwi_89xa.c: 1311: }
 37539                           ;drv_mrf_miwi_89xa.c: 1313: RxPacketPtr = 0;
 37540  004F12  0E00               	movlw	0
 37541  004F14  0100               	movlb	0	; () banked
 37542  004F16  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37543                           
 37544                           ; BSR set to: 0
 37545                           ;drv_mrf_miwi_89xa.c: 1314: counter = PacketLen;
 37546  004F18  C0D5  F0CB         	movff	MIWIInterruptHandler@PacketLen,MIWIInterruptHandler@counter
 37547  004F1C  0100               	movlb	0	; () banked
 37548  004F1E  6BCC               	clrf	(MIWIInterruptHandler@counter+1)& (0+255),b
 37549                           
 37550                           ;drv_mrf_miwi_89xa.c: 1316: while(counter >= 1)
 37551  004F20  D21A               	goto	i2l19906
 37552  004F22                     i2l19788:
 37553                           
 37554                           ; BSR set to: 0
 37555                           ;drv_mrf_miwi_89xa.c: 1319: if(1)
 37556  004F22  0100               	movlb	0	; () banked
 37557  004F24  07CB               	decf	MIWIInterruptHandler@counter& (0+255),f,b
 37558  004F26  A0D8               	btfss	status,0,c
 37559  004F28  07CC               	decf	(MIWIInterruptHandler@counter+1)& (0+255),f,b
 37560                           
 37561                           ; BSR set to: 0
 37562                           ;drv_mrf_miwi_89xa.c: 1320: {
 37563                           ;drv_mrf_miwi_89xa.c: 1322: if( bAck )
 37564  004F2A  0100               	movlb	0	; () banked
 37565  004F2C  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37566  004F2E  0100               	movlb	0	; () banked
 37567  004F30  B4D8               	btfsc	status,2,c
 37568  004F32  D010               	goto	i2l416
 37569                           
 37570                           ; BSR set to: 0
 37571                           ;drv_mrf_miwi_89xa.c: 1323: {
 37572                           ;drv_mrf_miwi_89xa.c: 1324: LATCbits.LATC6 = 0;
 37573  004F34  9C8B               	bcf	3979,6,c	;volatile
 37574                           
 37575                           ; BSR set to: 0
 37576                           ;drv_mrf_miwi_89xa.c: 1325: ackPacket[RxPacketPtr++] = SPIGet();
 37577  004F36  0100               	movlb	0	; () banked
 37578  004F38  51D3               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37579  004F3A  0D01               	mullw	1
 37580  004F3C  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 37581  004F3E  24F3               	addwf	prodl,w,c
 37582  004F40  6ED9               	movwf	fsr2l,c
 37583  004F42  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 37584  004F44  20F4               	addwfc	prodh,w,c
 37585  004F46  6EDA               	movwf	fsr2h,c
 37586  004F48  ECCB  F05D         	call	i2_SPIGet	;wreg free
 37587  004F4C  D024               	goto	L30
 37588  004F4E                     i2l19796:
 37589  004F4E  0100               	movlb	0	; () banked
 37590  004F50  2BD3               	incf	MIWIInterruptHandler@RxPacketPtr& (0+255),f,b
 37591  004F52  D023               	goto	i2l19804
 37592  004F54                     i2l416:
 37593                           
 37594                           ; BSR set to: 0
 37595                           ;drv_mrf_miwi_89xa.c: 1329: else
 37596                           ;drv_mrf_miwi_89xa.c: 1330: {
 37597                           ;drv_mrf_miwi_89xa.c: 1331: LATCbits.LATC6 = 0;
 37598  004F54  9C8B               	bcf	3979,6,c	;volatile
 37599                           
 37600                           ; BSR set to: 0
 37601                           ;drv_mrf_miwi_89xa.c: 1332: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 37602  004F56  0100               	movlb	0	; () banked
 37603  004F58  51D3               	movf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37604  004F5A  0D01               	mullw	1
 37605  004F5C  0E01               	movlw	1
 37606  004F5E  26F3               	addwf	prodl,f,c
 37607  004F60  0E00               	movlw	0
 37608  004F62  22F4               	addwfc	prodh,f,c
 37609  004F64  0E00               	movlw	low _RxPacket
 37610  004F66  0100               	movlb	0	; () banked
 37611  004F68  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 37612  004F6A  0E03               	movlw	high _RxPacket
 37613  004F6C  0100               	movlb	0	; () banked
 37614  004F6E  6FC6               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 37615  004F70  50F3               	movf	prodl,w,c
 37616  004F72  0100               	movlb	0	; () banked
 37617  004F74  27C5               	addwf	??_MIWIInterruptHandler& (0+255),f,b
 37618  004F76  50F4               	movf	prodh,w,c
 37619  004F78  0100               	movlb	0	; () banked
 37620  004F7A  23C6               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),f,b
 37621  004F7C  0100               	movlb	0	; () banked
 37622  004F7E  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37623  004F80  0D42               	mullw	66
 37624  004F82  50F3               	movf	prodl,w,c
 37625  004F84  0100               	movlb	0	; () banked
 37626  004F86  25C5               	addwf	??_MIWIInterruptHandler& (0+255),w,b
 37627  004F88  6ED9               	movwf	fsr2l,c
 37628  004F8A  50F4               	movf	prodh,w,c
 37629  004F8C  0100               	movlb	0	; () banked
 37630  004F8E  21C6               	addwfc	(??_MIWIInterruptHandler+1)& (0+255),w,b
 37631  004F90  6EDA               	movwf	fsr2h,c
 37632  004F92  ECCB  F05D         	call	i2_SPIGet	;wreg free
 37633  004F96                     L30:
 37634  004F96  6EDF               	movwf	indf2,c
 37635  004F98  D7DA               	goto	i2l19796
 37636  004F9A                     i2l19804:
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;drv_mrf_miwi_89xa.c: 1333: LATCbits.LATC6 = 1;
 37640  004F9A  8C8B               	bsf	3979,6,c	;volatile
 37641                           
 37642                           ; BSR set to: 0
 37643                           ;drv_mrf_miwi_89xa.c: 1334: }
 37644                           ;drv_mrf_miwi_89xa.c: 1337: if( RxPacketPtr >= PacketLen )
 37645                           
 37646                           ; BSR set to: 0
 37647  004F9C  0100               	movlb	0	; () banked
 37648  004F9E  51D5               	movf	MIWIInterruptHandler@PacketLen& (0+255),w,b
 37649  004FA0  0100               	movlb	0	; () banked
 37650  004FA2  5DD3               	subwf	MIWIInterruptHandler@RxPacketPtr& (0+255),w,b
 37651  004FA4  A0D8               	btfss	status,0,c
 37652  004FA6  D1D7               	goto	i2l19906
 37653                           
 37654                           ; BSR set to: 0
 37655                           ;drv_mrf_miwi_89xa.c: 1338: {
 37656                           ;drv_mrf_miwi_89xa.c: 1339: uint8_t i;
 37657                           ;drv_mrf_miwi_89xa.c: 1341: if( bAck )
 37658  004FA8  0100               	movlb	0	; () banked
 37659  004FAA  51D2               	movf	MIWIInterruptHandler@bAck& (0+255),w,b
 37660  004FAC  0100               	movlb	0	; () banked
 37661  004FAE  B4D8               	btfsc	status,2,c
 37662  004FB0  D039               	goto	i2l419
 37663                           
 37664                           ; BSR set to: 0
 37665                           ;drv_mrf_miwi_89xa.c: 1342: {
 37666                           ;drv_mrf_miwi_89xa.c: 1344: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 37667  004FB2  0100               	movlb	0	; () banked
 37668  004FB4  51CE               	movf	MIWIInterruptHandler@ackPacket& (0+255),w,b
 37669  004FB6  0B03               	andlw	3
 37670  004FB8  0A02               	xorlw	2
 37671  004FBA  A4D8               	btfss	status,2,c
 37672  004FBC  D00D               	goto	i2l19818
 37673                           
 37674                           ; BSR set to: 0
 37675                           ;drv_mrf_miwi_89xa.c: 1345: {
 37676                           ;drv_mrf_miwi_89xa.c: 1346: if( ackPacket[1] == TxMACSeq )
 37677  004FBE  0100               	movlb	0	; () banked
 37678  004FC0  519D               	movf	_TxMACSeq& (0+255),w,b
 37679  004FC2  0100               	movlb	0	; () banked
 37680  004FC4  19CF               	xorwf	(MIWIInterruptHandler@ackPacket+1)& (0+255),w,b
 37681  004FC6  A4D8               	btfss	status,2,c
 37682  004FC8  D003               	goto	i2l421
 37683                           
 37684                           ; BSR set to: 0
 37685                           ;drv_mrf_miwi_89xa.c: 1347: {
 37686                           ;drv_mrf_miwi_89xa.c: 1348: hasAck = 1;
 37687  004FCA  0E01               	movlw	1
 37688  004FCC  0100               	movlb	0	; () banked
 37689  004FCE  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 37690  004FD0                     i2l421:
 37691                           
 37692                           ; BSR set to: 0
 37693                           ;drv_mrf_miwi_89xa.c: 1349: }
 37694                           ;drv_mrf_miwi_89xa.c: 1350: RxPacketPtr = 0;
 37695  004FD0  0E00               	movlw	0
 37696  004FD2  0100               	movlb	0	; () banked
 37697  004FD4  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37698                           
 37699                           ;drv_mrf_miwi_89xa.c: 1351: goto RETURN_HERE;
 37700  004FD6  D1C9               	goto	i2l19910
 37701  004FD8                     i2l19818:
 37702                           
 37703                           ; BSR set to: 0
 37704                           ;drv_mrf_miwi_89xa.c: 1353: else
 37705                           ;drv_mrf_miwi_89xa.c: 1355: if( BankIndex >= 2 )
 37706  004FD8  0E01               	movlw	1
 37707  004FDA  0100               	movlb	0	; () banked
 37708  004FDC  65D6               	cpfsgt	MIWIInterruptHandler@BankIndex& (0+255),b
 37709  004FDE  D004               	goto	i2l19822
 37710                           
 37711                           ; BSR set to: 0
 37712                           ;drv_mrf_miwi_89xa.c: 1356: {
 37713                           ;drv_mrf_miwi_89xa.c: 1357: RxPacketPtr = 0;
 37714  004FE0  0E00               	movlw	0
 37715  004FE2  0100               	movlb	0	; () banked
 37716  004FE4  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37717                           
 37718                           ;drv_mrf_miwi_89xa.c: 1358: goto IGNORE_HERE;
 37719  004FE6  D784               	goto	i2l19774
 37720  004FE8                     i2l19822:
 37721                           
 37722                           ; BSR set to: 0
 37723                           ;drv_mrf_miwi_89xa.c: 1359: }
 37724                           ;drv_mrf_miwi_89xa.c: 1360: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 37725  004FE8  0100               	movlb	0	; () banked
 37726  004FEA  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37727  004FEC  0D42               	mullw	66
 37728  004FEE  0E01               	movlw	1
 37729  004FF0  26F3               	addwf	prodl,f,c
 37730  004FF2  0E00               	movlw	0
 37731  004FF4  22F4               	addwfc	prodh,f,c
 37732  004FF6  0E00               	movlw	low _RxPacket
 37733  004FF8  24F3               	addwf	prodl,w,c
 37734  004FFA  6ED9               	movwf	fsr2l,c
 37735  004FFC  0E03               	movlw	high _RxPacket
 37736  004FFE  20F4               	addwfc	prodh,w,c
 37737  005000  6EDA               	movwf	fsr2h,c
 37738  005002  C0CE  FFDF         	movff	MIWIInterruptHandler@ackPacket,indf2
 37739                           
 37740                           ;drv_mrf_miwi_89xa.c: 1361: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 37741  005006  0100               	movlb	0	; () banked
 37742  005008  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37743  00500A  0D42               	mullw	66
 37744  00500C  0E02               	movlw	2
 37745  00500E  26F3               	addwf	prodl,f,c
 37746  005010  0E00               	movlw	0
 37747  005012  22F4               	addwfc	prodh,f,c
 37748  005014  0E00               	movlw	low _RxPacket
 37749  005016  24F3               	addwf	prodl,w,c
 37750  005018  6ED9               	movwf	fsr2l,c
 37751  00501A  0E03               	movlw	high _RxPacket
 37752  00501C  20F4               	addwfc	prodh,w,c
 37753  00501E  6EDA               	movwf	fsr2h,c
 37754  005020  C0CF  FFDF         	movff	MIWIInterruptHandler@ackPacket+1,indf2
 37755  005024                     i2l419:
 37756                           
 37757                           ; BSR set to: 0
 37758                           ;drv_mrf_miwi_89xa.c: 1363: }
 37759                           ;drv_mrf_miwi_89xa.c: 1365: RxPacket[BankIndex].PayloadLen = PacketLen;
 37760  005024  0100               	movlb	0	; () banked
 37761  005026  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37762  005028  0D42               	mullw	66
 37763  00502A  0E41               	movlw	65
 37764  00502C  26F3               	addwf	prodl,f,c
 37765  00502E  0E00               	movlw	0
 37766  005030  22F4               	addwfc	prodh,f,c
 37767  005032  0E00               	movlw	low _RxPacket
 37768  005034  24F3               	addwf	prodl,w,c
 37769  005036  6ED9               	movwf	fsr2l,c
 37770  005038  0E03               	movlw	high _RxPacket
 37771  00503A  20F4               	addwfc	prodh,w,c
 37772  00503C  6EDA               	movwf	fsr2h,c
 37773  00503E  C0D5  FFDF         	movff	MIWIInterruptHandler@PacketLen,indf2
 37774                           
 37775                           ; BSR set to: 0
 37776                           ;drv_mrf_miwi_89xa.c: 1382: {
 37777                           ;drv_mrf_miwi_89xa.c: 1383: uint8_t ackInfoIndex = 0xFF;
 37778  005042  0100               	movlb	0	; () banked
 37779  005044  69D4               	setf	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 37780                           
 37781                           ;drv_mrf_miwi_89xa.c: 1385: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 37782  005046  0100               	movlb	0	; () banked
 37783  005048  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37784  00504A  0D42               	mullw	66
 37785  00504C  0E01               	movlw	1
 37786  00504E  26F3               	addwf	prodl,f,c
 37787  005050  0E00               	movlw	0
 37788  005052  22F4               	addwfc	prodh,f,c
 37789  005054  0E00               	movlw	low _RxPacket
 37790  005056  24F3               	addwf	prodl,w,c
 37791  005058  6ED9               	movwf	fsr2l,c
 37792  00505A  0E03               	movlw	high _RxPacket
 37793  00505C  20F4               	addwfc	prodh,w,c
 37794  00505E  6EDA               	movwf	fsr2h,c
 37795  005060  0103               	movlb	3	; () banked
 37796  005062  ACDF               	btfss	indf2,6,c
 37797  005064  D058               	goto	i2l19838
 37798                           
 37799                           ; BSR set to: 3
 37800                           ;drv_mrf_miwi_89xa.c: 1386: {
 37801                           ;drv_mrf_miwi_89xa.c: 1387: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 37802  005066  0E00               	movlw	0
 37803  005068  0100               	movlb	0	; () banked
 37804  00506A  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 37805  00506C  D047               	goto	i2l19836
 37806  00506E                     i2l19828:
 37807                           
 37808                           ; BSR set to: 0
 37809                           ;drv_mrf_miwi_89xa.c: 1388: {
 37810                           ;drv_mrf_miwi_89xa.c: 1389: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 37811  00506E  0100               	movlb	0	; () banked
 37812  005070  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37813  005072  0D01               	mullw	1
 37814  005074  50F3               	movf	prodl,w,c
 37815  005076  0101               	movlb	1	; () banked
 37816  005078  25AB               	addwf	(_MACInitParams+1)& (0+255),w,b
 37817  00507A  6ED9               	movwf	fsr2l,c
 37818  00507C  50F4               	movf	prodh,w,c
 37819  00507E  0101               	movlb	1	; () banked
 37820  005080  21AC               	addwfc	(_MACInitParams+2)& (0+255),w,b
 37821  005082  6EDA               	movwf	fsr2h,c
 37822  005084  0100               	movlb	0	; () banked
 37823  005086  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37824  005088  0D42               	mullw	66
 37825  00508A  0100               	movlb	0	; () banked
 37826  00508C  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37827  00508E  0100               	movlb	0	; () banked
 37828  005090  6FC6               	movwf	(??_MIWIInterruptHandler+1)& (0+255),b
 37829  005092  6BC7               	clrf	(??_MIWIInterruptHandler+2)& (0+255),b
 37830  005094  0E03               	movlw	3
 37831  005096  0100               	movlb	0	; () banked
 37832  005098  27C6               	addwf	(??_MIWIInterruptHandler+1)& (0+255),f,b
 37833  00509A  0E00               	movlw	0
 37834  00509C  23C7               	addwfc	(??_MIWIInterruptHandler+2)& (0+255),f,b
 37835  00509E  0E00               	movlw	low _RxPacket
 37836  0050A0  0100               	movlb	0	; () banked
 37837  0050A2  6FC8               	movwf	(??_MIWIInterruptHandler+3)& (0+255),b
 37838  0050A4  0E03               	movlw	high _RxPacket
 37839  0050A6  0100               	movlb	0	; () banked
 37840  0050A8  6FC9               	movwf	(??_MIWIInterruptHandler+4)& (0+255),b
 37841  0050AA  0100               	movlb	0	; () banked
 37842  0050AC  51C6               	movf	(??_MIWIInterruptHandler+1)& (0+255),w,b
 37843  0050AE  0100               	movlb	0	; () banked
 37844  0050B0  27C8               	addwf	(??_MIWIInterruptHandler+3)& (0+255),f,b
 37845  0050B2  0100               	movlb	0	; () banked
 37846  0050B4  51C7               	movf	(??_MIWIInterruptHandler+2)& (0+255),w,b
 37847  0050B6  0100               	movlb	0	; () banked
 37848  0050B8  23C9               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),f,b
 37849  0050BA  50F3               	movf	prodl,w,c
 37850  0050BC  0100               	movlb	0	; () banked
 37851  0050BE  25C8               	addwf	(??_MIWIInterruptHandler+3)& (0+255),w,b
 37852  0050C0  6EE1               	movwf	fsr1l,c
 37853  0050C2  50F4               	movf	prodh,w,c
 37854  0050C4  0100               	movlb	0	; () banked
 37855  0050C6  21C9               	addwfc	(??_MIWIInterruptHandler+4)& (0+255),w,b
 37856  0050C8  6EE2               	movwf	fsr1h,c
 37857  0050CA  50DE               	movf	postinc2,w,c
 37858  0050CC  18E6               	xorwf	postinc1,w,c
 37859  0050CE  B4D8               	btfsc	status,2,c
 37860  0050D0  D013               	goto	i2l19834
 37861                           
 37862                           ; BSR set to: 0
 37863                           ;drv_mrf_miwi_89xa.c: 1390: {
 37864                           ;drv_mrf_miwi_89xa.c: 1391: RxPacketPtr = 0;
 37865  0050D2  0E00               	movlw	0
 37866  0050D4  0100               	movlb	0	; () banked
 37867  0050D6  6FD3               	movwf	MIWIInterruptHandler@RxPacketPtr& (0+255),b
 37868                           
 37869                           ; BSR set to: 0
 37870                           ;drv_mrf_miwi_89xa.c: 1392: RxPacket[BankIndex].PayloadLen = 0;
 37871  0050D8  0100               	movlb	0	; () banked
 37872  0050DA  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37873  0050DC  0D42               	mullw	66
 37874  0050DE  0E41               	movlw	65
 37875  0050E0  26F3               	addwf	prodl,f,c
 37876  0050E2  0E00               	movlw	0
 37877  0050E4  22F4               	addwfc	prodh,f,c
 37878  0050E6  0E00               	movlw	low _RxPacket
 37879  0050E8  24F3               	addwf	prodl,w,c
 37880  0050EA  6ED9               	movwf	fsr2l,c
 37881  0050EC  0E03               	movlw	high _RxPacket
 37882  0050EE  20F4               	addwfc	prodh,w,c
 37883  0050F0  6EDA               	movwf	fsr2h,c
 37884  0050F2  0E00               	movlw	0
 37885  0050F4  6EDF               	movwf	indf2,c
 37886                           
 37887                           ;drv_mrf_miwi_89xa.c: 1393: goto IGNORE_HERE;
 37888  0050F6  D6FC               	goto	i2l19774
 37889  0050F8                     i2l19834:
 37890                           
 37891                           ; BSR set to: 0
 37892  0050F8  0100               	movlb	0	; () banked
 37893  0050FA  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 37894  0050FC                     i2l19836:
 37895                           
 37896                           ; BSR set to: 0
 37897  0050FC  0101               	movlb	1	; () banked
 37898  0050FE  31AA               	rrcf	_MACInitParams& (0+255),w,b
 37899  005100  32E8               	rrcf	wreg,f,c
 37900  005102  32E8               	rrcf	wreg,f,c
 37901  005104  0B0F               	andlw	15
 37902  005106  0100               	movlb	0	; () banked
 37903  005108  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 37904  00510A  0100               	movlb	0	; () banked
 37905  00510C  51C5               	movf	??_MIWIInterruptHandler& (0+255),w,b
 37906  00510E  0100               	movlb	0	; () banked
 37907  005110  5DD7               	subwf	MIWIInterruptHandler@i& (0+255),w,b
 37908  005112  A0D8               	btfss	status,0,c
 37909  005114  D7AC               	goto	i2l19828
 37910  005116                     i2l19838:
 37911                           
 37912                           ;drv_mrf_miwi_89xa.c: 1394: }
 37913                           ;drv_mrf_miwi_89xa.c: 1395: }
 37914                           ;drv_mrf_miwi_89xa.c: 1396: }
 37915                           ;drv_mrf_miwi_89xa.c: 1399: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 37916  005116  0100               	movlb	0	; () banked
 37917  005118  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37918  00511A  0D42               	mullw	66
 37919  00511C  0E01               	movlw	1
 37920  00511E  26F3               	addwf	prodl,f,c
 37921  005120  0E00               	movlw	0
 37922  005122  22F4               	addwfc	prodh,f,c
 37923  005124  0E00               	movlw	low _RxPacket
 37924  005126  24F3               	addwf	prodl,w,c
 37925  005128  6ED9               	movwf	fsr2l,c
 37926  00512A  0E03               	movlw	high _RxPacket
 37927  00512C  20F4               	addwfc	prodh,w,c
 37928  00512E  6EDA               	movwf	fsr2h,c
 37929  005130  0103               	movlb	3	; () banked
 37930  005132  AADF               	btfss	indf2,5,c
 37931  005134  D058               	goto	i2l19872
 37932                           
 37933                           ; BSR set to: 3
 37934                           ;drv_mrf_miwi_89xa.c: 1400: {
 37935                           ;drv_mrf_miwi_89xa.c: 1402: for(i = 0; i < 2; i++)
 37936  005136  0E00               	movlw	0
 37937  005138  0100               	movlb	0	; () banked
 37938  00513A  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 37939  00513C                     i2l19842:
 37940                           
 37941                           ; BSR set to: 0
 37942  00513C  0E01               	movlw	1
 37943  00513E  0100               	movlb	0	; () banked
 37944  005140  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 37945  005142  D001               	goto	i2l19846
 37946  005144  D017               	goto	i2l19852
 37947  005146                     i2l19846:
 37948                           
 37949                           ; BSR set to: 0
 37950                           ;drv_mrf_miwi_89xa.c: 1403: {
 37951                           ;drv_mrf_miwi_89xa.c: 1404: ackPacket[i] = MACTxBuffer[i];
 37952  005146  0100               	movlb	0	; () banked
 37953  005148  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37954  00514A  0D01               	mullw	1
 37955  00514C  0E66               	movlw	low _MACTxBuffer
 37956  00514E  24F3               	addwf	prodl,w,c
 37957  005150  6ED9               	movwf	fsr2l,c
 37958  005152  0E02               	movlw	high _MACTxBuffer
 37959  005154  20F4               	addwfc	prodh,w,c
 37960  005156  6EDA               	movwf	fsr2h,c
 37961  005158  0100               	movlb	0	; () banked
 37962  00515A  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 37963  00515C  0D01               	mullw	1
 37964  00515E  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 37965  005160  24F3               	addwf	prodl,w,c
 37966  005162  6EE1               	movwf	fsr1l,c
 37967  005164  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 37968  005166  20F4               	addwfc	prodh,w,c
 37969  005168  6EE2               	movwf	fsr1h,c
 37970  00516A  CFDF FFE7          	movff	indf2,indf1
 37971                           
 37972                           ; BSR set to: 0
 37973  00516E  0100               	movlb	0	; () banked
 37974  005170  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 37975  005172  D7E4               	goto	i2l19842
 37976  005174                     i2l19852:
 37977                           
 37978                           ; BSR set to: 0
 37979                           ;drv_mrf_miwi_89xa.c: 1405: }
 37980                           ;drv_mrf_miwi_89xa.c: 1406: MACTxBuffer[0] = 0x02 | 0x04;
 37981  005174  0E06               	movlw	6
 37982  005176  0102               	movlb	2	; () banked
 37983  005178  6F66               	movwf	_MACTxBuffer& (0+255),b	;volatile
 37984                           
 37985                           ; BSR set to: 2
 37986                           ;drv_mrf_miwi_89xa.c: 1407: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 37987  00517A  0100               	movlb	0	; () banked
 37988  00517C  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 37989  00517E  0D42               	mullw	66
 37990  005180  0E02               	movlw	2
 37991  005182  26F3               	addwf	prodl,f,c
 37992  005184  0E00               	movlw	0
 37993  005186  22F4               	addwfc	prodh,f,c
 37994  005188  0E00               	movlw	low _RxPacket
 37995  00518A  24F3               	addwf	prodl,w,c
 37996  00518C  6ED9               	movwf	fsr2l,c
 37997  00518E  0E03               	movlw	high _RxPacket
 37998  005190  20F4               	addwfc	prodh,w,c
 37999  005192  6EDA               	movwf	fsr2h,c
 38000  005194  50DF               	movf	indf2,w,c
 38001  005196  0102               	movlb	2	; () banked
 38002  005198  6F67               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 38003                           
 38004                           ; BSR set to: 2
 38005                           ;drv_mrf_miwi_89xa.c: 1408: INTCON3bits.INT1IF = 0;
 38006  00519A  90F0               	bcf	intcon3,0,c	;volatile
 38007                           
 38008                           ; BSR set to: 2
 38009                           ;drv_mrf_miwi_89xa.c: 1409: TxPacket(2, 0);
 38010  00519C  0E00               	movlw	0
 38011  00519E  0100               	movlb	0	; () banked
 38012  0051A0  6FAD               	movwf	i2TxPacket@CCA& (0+255),b
 38013  0051A2  0E02               	movlw	2
 38014  0051A4  ECBD  F039         	call	i2_TxPacket
 38015                           
 38016                           ;drv_mrf_miwi_89xa.c: 1412: for(i = 0; i < 2; i++)
 38017  0051A8  0E00               	movlw	0
 38018  0051AA  0100               	movlb	0	; () banked
 38019  0051AC  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38020  0051AE                     i2l19862:
 38021                           
 38022                           ; BSR set to: 0
 38023  0051AE  0E01               	movlw	1
 38024  0051B0  0100               	movlb	0	; () banked
 38025  0051B2  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38026  0051B4  D001               	goto	i2l19866
 38027  0051B6  D017               	goto	i2l19872
 38028  0051B8                     i2l19866:
 38029                           
 38030                           ; BSR set to: 0
 38031                           ;drv_mrf_miwi_89xa.c: 1413: {
 38032                           ;drv_mrf_miwi_89xa.c: 1414: MACTxBuffer[i] = ackPacket[i];
 38033  0051B8  0100               	movlb	0	; () banked
 38034  0051BA  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38035  0051BC  0D01               	mullw	1
 38036  0051BE  0ECE               	movlw	low MIWIInterruptHandler@ackPacket
 38037  0051C0  24F3               	addwf	prodl,w,c
 38038  0051C2  6ED9               	movwf	fsr2l,c
 38039  0051C4  0E00               	movlw	high MIWIInterruptHandler@ackPacket
 38040  0051C6  20F4               	addwfc	prodh,w,c
 38041  0051C8  6EDA               	movwf	fsr2h,c
 38042  0051CA  0100               	movlb	0	; () banked
 38043  0051CC  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38044  0051CE  0D01               	mullw	1
 38045  0051D0  0E66               	movlw	low _MACTxBuffer
 38046  0051D2  24F3               	addwf	prodl,w,c
 38047  0051D4  6EE1               	movwf	fsr1l,c
 38048  0051D6  0E02               	movlw	high _MACTxBuffer
 38049  0051D8  20F4               	addwfc	prodh,w,c
 38050  0051DA  6EE2               	movwf	fsr1h,c
 38051  0051DC  CFDF FFE7          	movff	indf2,indf1
 38052                           
 38053                           ; BSR set to: 0
 38054  0051E0  0100               	movlb	0	; () banked
 38055  0051E2  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38056  0051E4  D7E4               	goto	i2l19862
 38057  0051E6                     i2l19872:
 38058                           
 38059                           ;drv_mrf_miwi_89xa.c: 1415: }
 38060                           ;drv_mrf_miwi_89xa.c: 1416: }
 38061                           ;drv_mrf_miwi_89xa.c: 1420: for(i = 0; i < 5; i++)
 38062  0051E6  0E00               	movlw	0
 38063  0051E8  0100               	movlb	0	; () banked
 38064  0051EA  6FD7               	movwf	MIWIInterruptHandler@i& (0+255),b
 38065  0051EC                     i2l19874:
 38066                           
 38067                           ; BSR set to: 0
 38068  0051EC  0E04               	movlw	4
 38069  0051EE  0100               	movlb	0	; () banked
 38070  0051F0  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38071  0051F2  D001               	goto	i2l19878
 38072  0051F4  D05A               	goto	i2l19894
 38073  0051F6                     i2l19878:
 38074                           
 38075                           ; BSR set to: 0
 38076                           ;drv_mrf_miwi_89xa.c: 1421: {
 38077                           ;drv_mrf_miwi_89xa.c: 1422: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 38078  0051F6  0100               	movlb	0	; () banked
 38079  0051F8  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38080  0051FA  0D06               	mullw	6
 38081  0051FC  0E48               	movlw	low _AckInfo
 38082  0051FE  24F3               	addwf	prodl,w,c
 38083  005200  6ED9               	movwf	fsr2l,c
 38084  005202  0E02               	movlw	high _AckInfo
 38085  005204  20F4               	addwfc	prodh,w,c
 38086  005206  6EDA               	movwf	fsr2h,c
 38087  005208  50DF               	movf	indf2,w,c
 38088  00520A  B4D8               	btfsc	status,2,c
 38089  00520C  D03A               	goto	i2l19884
 38090                           
 38091                           ; BSR set to: 0
 38092  00520E  0100               	movlb	0	; () banked
 38093  005210  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38094  005212  0D42               	mullw	66
 38095  005214  0E02               	movlw	2
 38096  005216  26F3               	addwf	prodl,f,c
 38097  005218  0E00               	movlw	0
 38098  00521A  22F4               	addwfc	prodh,f,c
 38099  00521C  0E00               	movlw	low _RxPacket
 38100  00521E  24F3               	addwf	prodl,w,c
 38101  005220  6ED9               	movwf	fsr2l,c
 38102  005222  0E03               	movlw	high _RxPacket
 38103  005224  20F4               	addwfc	prodh,w,c
 38104  005226  6EDA               	movwf	fsr2h,c
 38105  005228  0100               	movlb	0	; () banked
 38106  00522A  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38107  00522C  0D06               	mullw	6
 38108  00522E  0E01               	movlw	1
 38109  005230  26F3               	addwf	prodl,f,c
 38110  005232  0E00               	movlw	0
 38111  005234  22F4               	addwfc	prodh,f,c
 38112  005236  0E48               	movlw	low _AckInfo
 38113  005238  24F3               	addwf	prodl,w,c
 38114  00523A  6EE1               	movwf	fsr1l,c
 38115  00523C  0E02               	movlw	high _AckInfo
 38116  00523E  20F4               	addwfc	prodh,w,c
 38117  005240  6EE2               	movwf	fsr1h,c
 38118  005242  50DE               	movf	postinc2,w,c
 38119  005244  18E6               	xorwf	postinc1,w,c
 38120  005246  A4D8               	btfss	status,2,c
 38121  005248  D01C               	goto	i2l19884
 38122                           
 38123                           ; BSR set to: 0
 38124                           ;drv_mrf_miwi_89xa.c: 1423: {
 38125                           ;drv_mrf_miwi_89xa.c: 1424: AckInfo[i].startTick = MiWi_TickGet();
 38126  00524A  ECB5  F058         	call	i2_MiWi_TickGet	;wreg free
 38127  00524E  0100               	movlb	0	; () banked
 38128  005250  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38129  005252  0D06               	mullw	6
 38130  005254  0E02               	movlw	2
 38131  005256  26F3               	addwf	prodl,f,c
 38132  005258  0E00               	movlw	0
 38133  00525A  22F4               	addwfc	prodh,f,c
 38134  00525C  0E48               	movlw	low _AckInfo
 38135  00525E  24F3               	addwf	prodl,w,c
 38136  005260  6ED9               	movwf	fsr2l,c
 38137  005262  0E02               	movlw	high _AckInfo
 38138  005264  20F4               	addwfc	prodh,w,c
 38139  005266  6EDA               	movwf	fsr2h,c
 38140  005268  0100               	movlb	0	; () banked
 38141  00526A  C0A3  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 38142  00526E  0100               	movlb	0	; () banked
 38143  005270  C0A4  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 38144  005274  0100               	movlb	0	; () banked
 38145  005276  C0A5  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 38146  00527A  0100               	movlb	0	; () banked
 38147  00527C  C0A6  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 38148                           
 38149                           ;drv_mrf_miwi_89xa.c: 1425: break;
 38150  005280  D014               	goto	i2l19894
 38151  005282                     i2l19884:
 38152                           
 38153                           ; BSR set to: 0
 38154                           ;drv_mrf_miwi_89xa.c: 1426: }
 38155                           ;drv_mrf_miwi_89xa.c: 1427: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 38156  005282  0100               	movlb	0	; () banked
 38157  005284  29D4               	incf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38158  005286  A4D8               	btfss	status,2,c
 38159  005288  D00D               	goto	i2l19890
 38160                           
 38161                           ; BSR set to: 0
 38162  00528A  0100               	movlb	0	; () banked
 38163  00528C  51D7               	movf	MIWIInterruptHandler@i& (0+255),w,b
 38164  00528E  0D06               	mullw	6
 38165  005290  0E48               	movlw	low _AckInfo
 38166  005292  24F3               	addwf	prodl,w,c
 38167  005294  6ED9               	movwf	fsr2l,c
 38168  005296  0E02               	movlw	high _AckInfo
 38169  005298  20F4               	addwfc	prodh,w,c
 38170  00529A  6EDA               	movwf	fsr2h,c
 38171  00529C  50DF               	movf	indf2,w,c
 38172  00529E  B4D8               	btfsc	status,2,c
 38173                           
 38174                           ; BSR set to: 0
 38175                           ;drv_mrf_miwi_89xa.c: 1428: {
 38176                           ;drv_mrf_miwi_89xa.c: 1429: ackInfoIndex = i;
 38177  0052A0  C0D7  F0D4         	movff	MIWIInterruptHandler@i,MIWIInterruptHandler@ackInfoIndex
 38178  0052A4                     i2l19890:
 38179                           
 38180                           ; BSR set to: 0
 38181  0052A4  0100               	movlb	0	; () banked
 38182  0052A6  2BD7               	incf	MIWIInterruptHandler@i& (0+255),f,b
 38183  0052A8  D7A1               	goto	i2l19874
 38184  0052AA                     i2l19894:
 38185                           
 38186                           ; BSR set to: 0
 38187                           ;drv_mrf_miwi_89xa.c: 1430: }
 38188                           ;drv_mrf_miwi_89xa.c: 1431: }
 38189                           ;drv_mrf_miwi_89xa.c: 1433: if( i >= 5 )
 38190  0052AA  0E04               	movlw	4
 38191  0052AC  0100               	movlb	0	; () banked
 38192  0052AE  65D7               	cpfsgt	MIWIInterruptHandler@i& (0+255),b
 38193  0052B0  D05C               	goto	i2l19910
 38194                           
 38195                           ; BSR set to: 0
 38196                           ;drv_mrf_miwi_89xa.c: 1434: {
 38197                           ;drv_mrf_miwi_89xa.c: 1435: if( ackInfoIndex < 5 )
 38198  0052B2  0E05               	movlw	5
 38199  0052B4  0100               	movlb	0	; () banked
 38200  0052B6  61D4               	cpfslt	MIWIInterruptHandler@ackInfoIndex& (0+255),b
 38201  0052B8  D042               	goto	i2l19904
 38202                           
 38203                           ; BSR set to: 0
 38204                           ;drv_mrf_miwi_89xa.c: 1436: {
 38205                           ;drv_mrf_miwi_89xa.c: 1437: AckInfo[ackInfoIndex].Valid = 1;
 38206  0052BA  0100               	movlb	0	; () banked
 38207  0052BC  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38208  0052BE  0D06               	mullw	6
 38209  0052C0  0E48               	movlw	low _AckInfo
 38210  0052C2  24F3               	addwf	prodl,w,c
 38211  0052C4  6ED9               	movwf	fsr2l,c
 38212  0052C6  0E02               	movlw	high _AckInfo
 38213  0052C8  20F4               	addwfc	prodh,w,c
 38214  0052CA  6EDA               	movwf	fsr2h,c
 38215  0052CC  0E01               	movlw	1
 38216  0052CE  6EDF               	movwf	indf2,c
 38217                           
 38218                           ; BSR set to: 0
 38219                           ;drv_mrf_miwi_89xa.c: 1438: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 38220  0052D0  0100               	movlb	0	; () banked
 38221  0052D2  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38222  0052D4  0D42               	mullw	66
 38223  0052D6  0E02               	movlw	2
 38224  0052D8  26F3               	addwf	prodl,f,c
 38225  0052DA  0E00               	movlw	0
 38226  0052DC  22F4               	addwfc	prodh,f,c
 38227  0052DE  0E00               	movlw	low _RxPacket
 38228  0052E0  24F3               	addwf	prodl,w,c
 38229  0052E2  6ED9               	movwf	fsr2l,c
 38230  0052E4  0E03               	movlw	high _RxPacket
 38231  0052E6  20F4               	addwfc	prodh,w,c
 38232  0052E8  6EDA               	movwf	fsr2h,c
 38233  0052EA  0100               	movlb	0	; () banked
 38234  0052EC  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38235  0052EE  0D06               	mullw	6
 38236  0052F0  0E01               	movlw	1
 38237  0052F2  26F3               	addwf	prodl,f,c
 38238  0052F4  0E00               	movlw	0
 38239  0052F6  22F4               	addwfc	prodh,f,c
 38240  0052F8  0E48               	movlw	low _AckInfo
 38241  0052FA  24F3               	addwf	prodl,w,c
 38242  0052FC  6EE1               	movwf	fsr1l,c
 38243  0052FE  0E02               	movlw	high _AckInfo
 38244  005300  20F4               	addwfc	prodh,w,c
 38245  005302  6EE2               	movwf	fsr1h,c
 38246  005304  CFDF FFE7          	movff	indf2,indf1
 38247                           
 38248                           ; BSR set to: 0
 38249                           ;drv_mrf_miwi_89xa.c: 1439: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 38250  005308  ECB5  F058         	call	i2_MiWi_TickGet	;wreg free
 38251  00530C  0100               	movlb	0	; () banked
 38252  00530E  51D4               	movf	MIWIInterruptHandler@ackInfoIndex& (0+255),w,b
 38253  005310  0D06               	mullw	6
 38254  005312  0E02               	movlw	2
 38255  005314  26F3               	addwf	prodl,f,c
 38256  005316  0E00               	movlw	0
 38257  005318  22F4               	addwfc	prodh,f,c
 38258  00531A  0E48               	movlw	low _AckInfo
 38259  00531C  24F3               	addwf	prodl,w,c
 38260  00531E  6ED9               	movwf	fsr2l,c
 38261  005320  0E02               	movlw	high _AckInfo
 38262  005322  20F4               	addwfc	prodh,w,c
 38263  005324  6EDA               	movwf	fsr2h,c
 38264  005326  0100               	movlb	0	; () banked
 38265  005328  C0A3  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 38266  00532C  0100               	movlb	0	; () banked
 38267  00532E  C0A4  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 38268  005332  0100               	movlb	0	; () banked
 38269  005334  C0A5  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 38270  005338  0100               	movlb	0	; () banked
 38271  00533A  C0A6  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 38272  00533E                     i2l19904:
 38273                           
 38274                           ; BSR set to: 0
 38275                           ;drv_mrf_miwi_89xa.c: 1440: }
 38276                           ;drv_mrf_miwi_89xa.c: 1443: RxPacket[BankIndex].flags.bits.Valid = 1;
 38277  00533E  0100               	movlb	0	; () banked
 38278  005340  51D6               	movf	MIWIInterruptHandler@BankIndex& (0+255),w,b
 38279  005342  0D42               	mullw	66
 38280  005344  0E00               	movlw	low _RxPacket
 38281  005346  24F3               	addwf	prodl,w,c
 38282  005348  6ED9               	movwf	fsr2l,c
 38283  00534A  0E03               	movlw	high _RxPacket
 38284  00534C  20F4               	addwfc	prodh,w,c
 38285  00534E  6EDA               	movwf	fsr2h,c
 38286  005350  0103               	movlb	3	; () banked
 38287  005352  80DF               	bsf	indf2,0,c
 38288                           
 38289                           ; BSR set to: 3
 38290                           ;drv_mrf_miwi_89xa.c: 1444: }
 38291                           ;drv_mrf_miwi_89xa.c: 1451: }
 38292                           ;drv_mrf_miwi_89xa.c: 1452: goto RETURN_HERE;
 38293  005354  D00A               	goto	i2l19910
 38294  005356                     i2l19906:
 38295  005356  0100               	movlb	0	; () banked
 38296  005358  51CB               	movf	MIWIInterruptHandler@counter& (0+255),w,b
 38297  00535A  0100               	movlb	0	; () banked
 38298  00535C  11CC               	iorwf	(MIWIInterruptHandler@counter+1)& (0+255),w,b
 38299  00535E  B4D8               	btfsc	status,2,c
 38300  005360  D004               	goto	i2l19910
 38301  005362  D5DF               	goto	i2l19788
 38302  005364                     i2l19908:
 38303                           
 38304                           ; BSR set to: 0
 38305                           ;drv_mrf_miwi_89xa.c: 1458: else
 38306                           ;drv_mrf_miwi_89xa.c: 1459: {
 38307                           ;drv_mrf_miwi_89xa.c: 1461: IRQ1_Received = 1;
 38308  005364  0E01               	movlw	1
 38309  005366  0100               	movlb	0	; () banked
 38310  005368  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 38311  00536A                     i2l19910:
 38312                           
 38313                           ;drv_mrf_miwi_89xa.c: 1465: INTCON3bits.INT1IF = 0;
 38314  00536A  90F0               	bcf	intcon3,0,c	;volatile
 38315                           
 38316                           ;drv_mrf_miwi_89xa.c: 1467: __nop();
 38317  00536C  F000               	nop	
 38318  00536E                     i2l19914:
 38319                           
 38320                           ;drv_mrf_miwi_89xa.c: 1468: }
 38321                           ;drv_mrf_miwi_89xa.c: 1472: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 38322  00536E  B2F2               	btfsc	intcon,1,c	;volatile
 38323  005370  A8F2               	btfss	intcon,4,c	;volatile
 38324  005372  D014               	goto	i2l19928
 38325                           
 38326                           ;drv_mrf_miwi_89xa.c: 1473: {
 38327                           ;drv_mrf_miwi_89xa.c: 1475: status_led = LED_FULL;
 38328  005374  0E03               	movlw	3
 38329  005376  6E55               	movwf	_status_led,c	;volatile
 38330                           
 38331                           ;drv_mrf_miwi_89xa.c: 1476: update_LED();
 38332  005378  EC22  F05A         	call	i2_update_LED	;wreg free
 38333                           
 38334                           ;drv_mrf_miwi_89xa.c: 1482: INTCONbits.INT0IF = 0;
 38335  00537C  92F2               	bcf	intcon,1,c	;volatile
 38336                           
 38337                           ;drv_mrf_miwi_89xa.c: 1485: if(RF_Mode == 0x60)
 38338  00537E  0E60               	movlw	96
 38339  005380  0100               	movlb	0	; () banked
 38340  005382  199B               	xorwf	_RF_Mode& (0+255),w,b
 38341  005384  A4D8               	btfss	status,2,c
 38342  005386  D00A               	goto	i2l19928
 38343                           
 38344                           ; BSR set to: 0
 38345                           ;drv_mrf_miwi_89xa.c: 1486: {
 38346                           ;drv_mrf_miwi_89xa.c: 1487: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 38347  005388  0E28               	movlw	40
 38348  00538A  ECAC  F05A         	call	i2_RegisterRead
 38349  00538E  0100               	movlb	0	; () banked
 38350  005390  6FC5               	movwf	??_MIWIInterruptHandler& (0+255),b
 38351  005392  0100               	movlb	0	; () banked
 38352  005394  90D8               	bcf	status,0,c
 38353  005396  31C5               	rrcf	??_MIWIInterruptHandler& (0+255),w,b
 38354  005398  0100               	movlb	0	; () banked
 38355  00539A  6F9C               	movwf	_RSSIVal& (0+255),b
 38356  00539C                     i2l19928:
 38357                           
 38358                           ;drv_mrf_miwi_89xa.c: 1488: }
 38359                           ;drv_mrf_miwi_89xa.c: 1492: }
 38360                           ;drv_mrf_miwi_89xa.c: 1496: if(PIR1bits.TMR1IF)
 38361  00539C  A09E               	btfss	3998,0,c	;volatile
 38362  00539E  0012               	return	
 38363                           
 38364                           ;drv_mrf_miwi_89xa.c: 1497: {
 38365                           ;drv_mrf_miwi_89xa.c: 1498: if(PIE1bits.TMR1IE)
 38366  0053A0  A09D               	btfss	3997,0,c	;volatile
 38367  0053A2  0012               	return	
 38368                           
 38369                           ;drv_mrf_miwi_89xa.c: 1499: {
 38370                           ;drv_mrf_miwi_89xa.c: 1501: PIR1bits.TMR1IF = 0;
 38371  0053A4  909E               	bcf	3998,0,c	;volatile
 38372                           
 38373                           ;drv_mrf_miwi_89xa.c: 1502: timerExtension1++;
 38374  0053A6  0100               	movlb	0	; () banked
 38375  0053A8  2BA1               	incf	_timerExtension1& (0+255),f,b	;volatile
 38376                           
 38377                           ; BSR set to: 0
 38378                           ;drv_mrf_miwi_89xa.c: 1503: if(timerExtension1 == 0)
 38379  0053AA  0100               	movlb	0	; () banked
 38380  0053AC  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 38381  0053AE  A4D8               	btfss	status,2,c
 38382  0053B0  0012               	return	
 38383                           
 38384                           ; BSR set to: 0
 38385                           ;drv_mrf_miwi_89xa.c: 1504: {
 38386                           ;drv_mrf_miwi_89xa.c: 1505: timerExtension2++;
 38387  0053B2  0100               	movlb	0	; () banked
 38388  0053B4  2BA2               	incf	_timerExtension2& (0+255),f,b	;volatile
 38389                           
 38390                           ; BSR set to: 0
 38391                           
 38392                           ; BSR set to: 0
 38393                           
 38394                           ; BSR set to: 0
 38395  0053B6  0012               	return	
 38396  0053B8                     __end_of_MIWIInterruptHandler:
 38397                           	opt stack 0
 38398                           pclatu	equ	0xFFB
 38399                           pclath	equ	0xFFA
 38400                           tblptru	equ	0xFF8
 38401                           tblptrh	equ	0xFF7
 38402                           tblptrl	equ	0xFF6
 38403                           tablat	equ	0xFF5
 38404                           prodh	equ	0xFF4
 38405                           prodl	equ	0xFF3
 38406                           intcon	equ	0xFF2
 38407                           intcon2	equ	0xFF1
 38408                           intcon3	equ	0xFF0
 38409                           indf0	equ	0xFEF
 38410                           postinc0	equ	0xFEE
 38411                           plusw0	equ	0xFEB
 38412                           fsr0h	equ	0xFEA
 38413                           fsr0l	equ	0xFE9
 38414                           wreg	equ	0xFE8
 38415                           indf1	equ	0xFE7
 38416                           postinc1	equ	0xFE6
 38417                           postdec1	equ	0xFE5
 38418                           plusw1	equ	0xFE3
 38419                           fsr1h	equ	0xFE2
 38420                           fsr1l	equ	0xFE1
 38421                           bsr	equ	0xFE0
 38422                           indf2	equ	0xFDF
 38423                           postinc2	equ	0xFDE
 38424                           postdec2	equ	0xFDD
 38425                           plusw2	equ	0xFDB
 38426                           fsr2h	equ	0xFDA
 38427                           fsr2l	equ	0xFD9
 38428                           status	equ	0xFD8
 38429                           
 38430 ;; *************** function i2_update_LED *****************
 38431 ;; Defined at:
 38432 ;;		line 732 in file "src/main.c"
 38433 ;; Parameters:    Size  Location     Type
 38434 ;;		None
 38435 ;; Auto vars:     Size  Location     Type
 38436 ;;		None
 38437 ;; Return value:  Size  Location     Type
 38438 ;;                  2    0[None  ] int 
 38439 ;; Registers used:
 38440 ;;		wreg, status,2, status,0
 38441 ;; Tracked objects:
 38442 ;;		On entry : 0/0
 38443 ;;		On exit  : 0/0
 38444 ;;		Unchanged: 0/0
 38445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38450 ;;Total ram usage:        0 bytes
 38451 ;; Hardware stack levels used:    1
 38452 ;; This function calls:
 38453 ;;		Nothing
 38454 ;; This function is called by:
 38455 ;;		_MIWIInterruptHandler
 38456 ;; This function uses a non-reentrant model
 38457 ;;
 38458                           
 38459                           	psect	text117
 38460  00B444                     __ptext117:
 38461                           	opt stack 0
 38462  00B444                     i2_update_LED:
 38463                           	opt stack 6
 38464                           
 38465                           ;main.c: 734: switch(status_led)
 38466                           
 38467                           ;incstack = 0
 38468  00B444  D021               	goto	i2l13668
 38469  00B446                     i2l1858:
 38470                           
 38471                           ;main.c: 738: CCP1CONbits.DC1B0 = 0;
 38472  00B446  98BA               	bcf	4026,4,c	;volatile
 38473                           
 38474                           ;main.c: 739: CCP1CONbits.DC1B1 = 0;
 38475  00B448  9ABA               	bcf	4026,5,c	;volatile
 38476                           
 38477                           ;main.c: 740: CCPR1L = 0;
 38478  00B44A  0E00               	movlw	0
 38479  00B44C  6EBB               	movwf	4027,c	;volatile
 38480                           
 38481                           ;main.c: 741: LED_increasing = 1;
 38482  00B44E  0E01               	movlw	1
 38483  00B450  6E45               	movwf	_LED_increasing,c	;volatile
 38484                           
 38485                           ;main.c: 742: break;
 38486  00B452  0012               	return	
 38487  00B454                     i2l1860:
 38488                           
 38489                           ;main.c: 746: CCP1CONbits.DC1B0 = 1023 & 1;
 38490  00B454  88BA               	bsf	4026,4,c	;volatile
 38491                           
 38492                           ;main.c: 747: CCP1CONbits.DC1B1 = (1023 >> 1) & 1;
 38493  00B456  8ABA               	bsf	4026,5,c	;volatile
 38494                           
 38495                           ;main.c: 748: CCPR1L = (1023 >> 2);
 38496  00B458  68BB               	setf	4027,c	;volatile
 38497                           
 38498                           ;main.c: 749: repeat_full = 4;
 38499  00B45A  0E04               	movlw	4
 38500  00B45C  6E53               	movwf	_repeat_full,c	;volatile
 38501                           
 38502                           ;main.c: 750: break;
 38503  00B45E  0012               	return	
 38504  00B460                     i2l13654:
 38505                           
 38506                           ;main.c: 753: T4CONbits.T4CKPS = 0b01;
 38507  00B460  5076               	movf	3958,w,c	;volatile
 38508  00B462  0BFC               	andlw	-4
 38509  00B464  0901               	iorlw	1
 38510  00B466  6E76               	movwf	3958,c	;volatile
 38511                           
 38512                           ;main.c: 755: CCP1CONbits.DC1B0 = 235 & 1;
 38513  00B468  88BA               	bsf	4026,4,c	;volatile
 38514                           
 38515                           ;main.c: 756: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 38516  00B46A  8ABA               	bsf	4026,5,c	;volatile
 38517                           
 38518                           ;main.c: 757: CCPR1L = (235 >> 2);
 38519  00B46C  0E3A               	movlw	58
 38520  00B46E  6EBB               	movwf	4027,c	;volatile
 38521                           
 38522                           ;main.c: 758: LED_increasing = 0;
 38523  00B470  0E00               	movlw	0
 38524  00B472  6E45               	movwf	_LED_increasing,c	;volatile
 38525                           
 38526                           ;main.c: 759: break;
 38527  00B474  0012               	return	
 38528  00B476                     i2l13660:
 38529                           
 38530                           ;main.c: 762: T4CONbits.T4CKPS = 0b11;
 38531  00B476  0E03               	movlw	3
 38532  00B478  1276               	iorwf	3958,f,c	;volatile
 38533                           
 38534                           ;main.c: 764: CCP1CONbits.DC1B0 = 235 & 1;
 38535  00B47A  88BA               	bsf	4026,4,c	;volatile
 38536                           
 38537                           ;main.c: 765: CCP1CONbits.DC1B1 = (235 >> 1) & 1;
 38538  00B47C  8ABA               	bsf	4026,5,c	;volatile
 38539                           
 38540                           ;main.c: 766: CCPR1L = (235 >> 2);
 38541  00B47E  0E3A               	movlw	58
 38542  00B480  6EBB               	movwf	4027,c	;volatile
 38543                           
 38544                           ;main.c: 767: LED_increasing = 0;
 38545  00B482  0E00               	movlw	0
 38546  00B484  6E45               	movwf	_LED_increasing,c	;volatile
 38547                           
 38548                           ;main.c: 769: }
 38549                           
 38550                           ;main.c: 768: break;
 38551  00B486  0012               	return	
 38552  00B488                     i2l13668:
 38553  00B488  5055               	movf	_status_led,w,c	;volatile
 38554                           
 38555                           ; Switch size 1, requested type "space"
 38556                           ; Number of cases is 4, Range of values is 0 to 3
 38557                           ; switch strategies available:
 38558                           ; Name         Instructions Cycles
 38559                           ; simple_byte           13     7 (average)
 38560                           ;	Chosen strategy is simple_byte
 38561  00B48A  0A00               	xorlw	0	; case 0
 38562  00B48C  B4D8               	btfsc	status,2,c
 38563  00B48E  D7DB               	goto	i2l1858
 38564  00B490  0A01               	xorlw	1	; case 1
 38565  00B492  B4D8               	btfsc	status,2,c
 38566  00B494  D7E5               	goto	i2l13654
 38567  00B496  0A03               	xorlw	3	; case 2
 38568  00B498  B4D8               	btfsc	status,2,c
 38569  00B49A  D7ED               	goto	i2l13660
 38570  00B49C  0A01               	xorlw	1	; case 3
 38571  00B49E  A4D8               	btfss	status,2,c
 38572  00B4A0  0012               	return	
 38573  00B4A2  D7D8               	goto	i2l1860
 38574  00B4A4                     __end_ofi2_update_LED:
 38575                           	opt stack 0
 38576                           pclatu	equ	0xFFB
 38577                           pclath	equ	0xFFA
 38578                           tblptru	equ	0xFF8
 38579                           tblptrh	equ	0xFF7
 38580                           tblptrl	equ	0xFF6
 38581                           tablat	equ	0xFF5
 38582                           prodh	equ	0xFF4
 38583                           prodl	equ	0xFF3
 38584                           intcon	equ	0xFF2
 38585                           intcon2	equ	0xFF1
 38586                           intcon3	equ	0xFF0
 38587                           indf0	equ	0xFEF
 38588                           postinc0	equ	0xFEE
 38589                           plusw0	equ	0xFEB
 38590                           fsr0h	equ	0xFEA
 38591                           fsr0l	equ	0xFE9
 38592                           wreg	equ	0xFE8
 38593                           indf1	equ	0xFE7
 38594                           postinc1	equ	0xFE6
 38595                           postdec1	equ	0xFE5
 38596                           plusw1	equ	0xFE3
 38597                           fsr1h	equ	0xFE2
 38598                           fsr1l	equ	0xFE1
 38599                           bsr	equ	0xFE0
 38600                           indf2	equ	0xFDF
 38601                           postinc2	equ	0xFDE
 38602                           postdec2	equ	0xFDD
 38603                           plusw2	equ	0xFDB
 38604                           fsr2h	equ	0xFDA
 38605                           fsr2l	equ	0xFD9
 38606                           status	equ	0xFD8
 38607                           
 38608 ;; *************** function i2_TxPacket *****************
 38609 ;; Defined at:
 38610 ;;		line 288 in file "src/miwi/drv_mrf_miwi_89xa.c"
 38611 ;; Parameters:    Size  Location     Type
 38612 ;;  TxPacketLen     1    wreg     unsigned char 
 38613 ;;  CCA             1   10[BANK0 ] unsigned char 
 38614 ;; Auto vars:     Size  Location     Type
 38615 ;;  TxPacketLen     1   31[BANK0 ] unsigned char 
 38616 ;;  TxPacket        4   23[BANK0 ] struct _MIWI_TICK
 38617 ;;  TxPacket        4   19[BANK0 ] struct _MIWI_TICK
 38618 ;;  TxPacket        1   33[BANK0 ] unsigned char 
 38619 ;;  TxPacket        1   32[BANK0 ] unsigned char 
 38620 ;;  TxPacket        1   30[BANK0 ] unsigned char 
 38621 ;;  TxPacket        1   29[BANK0 ] unsigned char 
 38622 ;;  TxPacket        1   28[BANK0 ] unsigned char 
 38623 ;;  TxPacket        1   27[BANK0 ] unsigned char 
 38624 ;; Return value:  Size  Location     Type
 38625 ;;                  1    wreg      unsigned char 
 38626 ;; Registers used:
 38627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38628 ;; Tracked objects:
 38629 ;;		On entry : 0/0
 38630 ;;		On exit  : 0/0
 38631 ;;		Unchanged: 0/0
 38632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38633 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38634 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38635 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38636 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38637 ;;Total ram usage:       24 bytes
 38638 ;; Hardware stack levels used:    1
 38639 ;; Hardware stack levels required when called:    3
 38640 ;; This function calls:
 38641 ;;		i2_MiWi_TickGet
 38642 ;;		i2_RegisterRead
 38643 ;;		i2_RegisterSet
 38644 ;;		i2_SetRFMode
 38645 ;;		i2_WriteFIFO
 38646 ;; This function is called by:
 38647 ;;		_MIWIInterruptHandler
 38648 ;; This function uses a non-reentrant model
 38649 ;;
 38650                           
 38651                           	psect	text118
 38652  00737A                     __ptext118:
 38653                           	opt stack 0
 38654  00737A                     i2_TxPacket:
 38655                           	opt stack 3
 38656                           
 38657                           ;incstack = 0
 38658                           ;i2TxPacket@TxPacketLen stored from wreg
 38659  00737A  0100               	movlb	0	; () banked
 38660  00737C  6FC2               	movwf	i2TxPacket@TxPacketLen& (0+255),b
 38661                           
 38662                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 38663                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 38664                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 38665                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 38666                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 38667                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 38668  00737E  0E03               	movlw	3
 38669  007380  0100               	movlb	0	; () banked
 38670  007382  6FC0               	movwf	i2TxPacket@reTry& (0+255),b
 38671                           
 38672                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 38673  007384  D0C8               	goto	i2l19538
 38674  007386                     i2l19472:
 38675                           
 38676                           ; BSR set to: 0
 38677                           ;drv_mrf_miwi_89xa.c: 305: {
 38678                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 38679                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 38680  007386  0E00               	movlw	0
 38681  007388  0100               	movlb	0	; () banked
 38682  00738A  6FC1               	movwf	i2TxPacket@allowedTxFailure& (0+255),b
 38683  00738C                     i2l262:
 38684                           
 38685                           ; BSR set to: 0
 38686                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 38687  00738C  0E00               	movlw	0
 38688  00738E  0100               	movlb	0	; () banked
 38689  007390  6F9F               	movwf	_hasAck& (0+255),b	;volatile
 38690                           
 38691                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 38692  007392  0E00               	movlw	0
 38693  007394  0100               	movlb	0	; () banked
 38694  007396  6FBF               	movwf	i2TxPacket@CCARetries& (0+255),b
 38695                           
 38696                           ; BSR set to: 0
 38697                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 38698  007398  0100               	movlb	0	; () banked
 38699  00739A  51AD               	movf	i2TxPacket@CCA& (0+255),w,b
 38700  00739C  0100               	movlb	0	; () banked
 38701  00739E  B4D8               	btfsc	status,2,c
 38702  0073A0  D018               	goto	i2l263
 38703  0073A2                     i2l19476:
 38704                           
 38705                           ; BSR set to: 0
 38706                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 38707  0073A2  0E28               	movlw	40
 38708  0073A4  ECAC  F05A         	call	i2_RegisterRead
 38709  0073A8  0100               	movlb	0	; () banked
 38710  0073AA  6FC4               	movwf	i2TxPacket@rssival& (0+255),b
 38711                           
 38712                           ; BSR set to: 0
 38713                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 38714  0073AC  0100               	movlb	0	; () banked
 38715  0073AE  90D8               	bcf	status,0,c
 38716  0073B0  31C4               	rrcf	i2TxPacket@rssival& (0+255),w,b
 38717  0073B2  0100               	movlb	0	; () banked
 38718  0073B4  6FC4               	movwf	i2TxPacket@rssival& (0+255),b
 38719                           
 38720                           ; BSR set to: 0
 38721                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 38722  0073B6  0E41               	movlw	65
 38723  0073B8  0100               	movlb	0	; () banked
 38724  0073BA  65C4               	cpfsgt	i2TxPacket@rssival& (0+255),b
 38725  0073BC  D00A               	goto	i2l263
 38726                           
 38727                           ; BSR set to: 0
 38728                           ;drv_mrf_miwi_89xa.c: 326: {
 38729                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 38730  0073BE  0100               	movlb	0	; () banked
 38731  0073C0  2BBF               	incf	i2TxPacket@CCARetries& (0+255),f,b
 38732  0073C2  05BF               	decf	i2TxPacket@CCARetries& (0+255),w,b
 38733  0073C4  0100               	movlb	0	; () banked
 38734  0073C6  6FAE               	movwf	??i2_TxPacket& (0+255),b
 38735  0073C8  0E04               	movlw	4
 38736  0073CA  0100               	movlb	0	; () banked
 38737  0073CC  65AE               	cpfsgt	??i2_TxPacket& (0+255),b
 38738  0073CE  D7E9               	goto	i2l19476
 38739  0073D0  0012               	return	
 38740  0073D2                     i2l263:
 38741                           
 38742                           ; BSR set to: 0
 38743                           ;drv_mrf_miwi_89xa.c: 333: }
 38744                           ;drv_mrf_miwi_89xa.c: 334: }
 38745                           ;drv_mrf_miwi_89xa.c: 339: INTCONbits.INT0IE = 0;
 38746  0073D2  98F2               	bcf	intcon,4,c	;volatile
 38747                           
 38748                           ;drv_mrf_miwi_89xa.c: 341: INTCON3bits.INT1IE = 0;
 38749  0073D4  96F0               	bcf	intcon3,3,c	;volatile
 38750                           
 38751                           ; BSR set to: 0
 38752                           ;drv_mrf_miwi_89xa.c: 342: SetRFMode(0x20);
 38753  0073D6  0E20               	movlw	32
 38754  0073D8  EC12  F056         	call	i2_SetRFMode
 38755                           
 38756                           ;drv_mrf_miwi_89xa.c: 343: RegisterSet(0x1A00 | (0xC8) | 0x01);
 38757  0073DC  0E1A               	movlw	26
 38758  0073DE  0100               	movlb	0	; () banked
 38759  0073E0  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 38760  0073E2  0EC9               	movlw	201
 38761  0073E4  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 38762  0073E6  EC47  F05B         	call	i2_RegisterSet	;wreg free
 38763                           
 38764                           ;drv_mrf_miwi_89xa.c: 344: WriteFIFO(TxPacketLen);
 38765  0073EA  0100               	movlb	0	; () banked
 38766  0073EC  51C2               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 38767  0073EE  ECAD  F05B         	call	i2_WriteFIFO
 38768                           
 38769                           ;drv_mrf_miwi_89xa.c: 345: for(i=0; i< TxPacketLen; i++)
 38770  0073F2  0E00               	movlw	0
 38771  0073F4  0100               	movlb	0	; () banked
 38772  0073F6  6FC3               	movwf	i2TxPacket@i& (0+255),b
 38773  0073F8  D00E               	goto	i2l19498
 38774  0073FA                     i2l19494:
 38775                           
 38776                           ; BSR set to: 0
 38777                           ;drv_mrf_miwi_89xa.c: 346: {
 38778                           ;drv_mrf_miwi_89xa.c: 347: WriteFIFO(MACTxBuffer[i]);
 38779  0073FA  0100               	movlb	0	; () banked
 38780  0073FC  51C3               	movf	i2TxPacket@i& (0+255),w,b
 38781  0073FE  0D01               	mullw	1
 38782  007400  0E66               	movlw	low _MACTxBuffer
 38783  007402  24F3               	addwf	prodl,w,c
 38784  007404  6ED9               	movwf	fsr2l,c
 38785  007406  0E02               	movlw	high _MACTxBuffer
 38786  007408  20F4               	addwfc	prodh,w,c
 38787  00740A  6EDA               	movwf	fsr2h,c
 38788  00740C  50DF               	movf	indf2,w,c
 38789  00740E  ECAD  F05B         	call	i2_WriteFIFO
 38790  007412  0100               	movlb	0	; () banked
 38791  007414  2BC3               	incf	i2TxPacket@i& (0+255),f,b
 38792  007416                     i2l19498:
 38793                           
 38794                           ; BSR set to: 0
 38795  007416  0100               	movlb	0	; () banked
 38796  007418  51C2               	movf	i2TxPacket@TxPacketLen& (0+255),w,b
 38797  00741A  0100               	movlb	0	; () banked
 38798  00741C  5DC3               	subwf	i2TxPacket@i& (0+255),w,b
 38799  00741E  A0D8               	btfss	status,0,c
 38800  007420  D7EC               	goto	i2l19494
 38801                           
 38802                           ; BSR set to: 0
 38803                           ;drv_mrf_miwi_89xa.c: 348: }
 38804                           ;drv_mrf_miwi_89xa.c: 349: SetRFMode(0x80);
 38805                           
 38806                           ; BSR set to: 0
 38807  007422  0E80               	movlw	128
 38808  007424  EC12  F056         	call	i2_SetRFMode
 38809                           
 38810                           ;drv_mrf_miwi_89xa.c: 351: INTCONbits.INT0IE = 1;
 38811  007428  88F2               	bsf	intcon,4,c	;volatile
 38812                           
 38813                           ;drv_mrf_miwi_89xa.c: 353: INTCON3bits.INT1IE = 1;
 38814  00742A  86F0               	bsf	intcon3,3,c	;volatile
 38815  00742C                     i2l19506:
 38816  00742C  0100               	movlb	0	; () banked
 38817  00742E  5199               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 38818  007430  B4D8               	btfsc	status,2,c
 38819                           
 38820                           ; BSR set to: 0
 38821  007432  B0F0               	btfsc	intcon3,0,c	;volatile
 38822  007434  D001               	goto	i2l19510
 38823  007436  D7FA               	goto	i2l19506
 38824  007438                     i2l19510:
 38825                           
 38826                           ; BSR set to: 0
 38827                           ;drv_mrf_miwi_89xa.c: 357: };
 38828                           ;drv_mrf_miwi_89xa.c: 361: IRQ1_Received = 0;
 38829  007438  0E00               	movlw	0
 38830  00743A  0100               	movlb	0	; () banked
 38831  00743C  6F99               	movwf	_IRQ1_Received& (0+255),b	;volatile
 38832                           
 38833                           ; BSR set to: 0
 38834                           ;drv_mrf_miwi_89xa.c: 362: SetRFMode(0x20);
 38835  00743E  0E20               	movlw	32
 38836  007440  EC12  F056         	call	i2_SetRFMode
 38837                           
 38838                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x60);
 38839  007444  0E60               	movlw	96
 38840  007446  EC12  F056         	call	i2_SetRFMode
 38841                           
 38842                           ;drv_mrf_miwi_89xa.c: 366: if( (MACTxBuffer[0] & 0x20) > 0 )
 38843  00744A  0102               	movlb	2	; () banked
 38844  00744C  AB66               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 38845  00744E  D05F               	goto	i2l19536
 38846                           
 38847                           ; BSR set to: 2
 38848                           ;drv_mrf_miwi_89xa.c: 367: {
 38849                           ;drv_mrf_miwi_89xa.c: 368: TxMACSeq = MACTxBuffer[1];
 38850  007450  C267  F09D         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 38851                           
 38852                           ; BSR set to: 2
 38853                           ;drv_mrf_miwi_89xa.c: 369: t1 = MiWi_TickGet();
 38854  007454  ECB5  F058         	call	i2_MiWi_TickGet	;wreg free
 38855  007458  C0A3  F0B6         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 38856  00745C  C0A4  F0B7         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 38857  007460  C0A5  F0B8         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 38858  007464  C0A6  F0B9         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 38859  007468                     i2l19522:
 38860                           
 38861                           ;drv_mrf_miwi_89xa.c: 371: {
 38862                           ;drv_mrf_miwi_89xa.c: 372: if( hasAck )
 38863  007468  0100               	movlb	0	; () banked
 38864  00746A  519F               	movf	_hasAck& (0+255),w,b	;volatile
 38865  00746C  B4D8               	btfsc	status,2,c
 38866  00746E  D004               	goto	i2l19526
 38867                           
 38868                           ; BSR set to: 0
 38869                           ;drv_mrf_miwi_89xa.c: 373: {
 38870                           ;drv_mrf_miwi_89xa.c: 374: status = 1;
 38871  007470  0E01               	movlw	1
 38872  007472  0100               	movlb	0	; () banked
 38873  007474  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38874                           
 38875                           ;drv_mrf_miwi_89xa.c: 375: goto TX_END_HERE;
 38876  007476  0012               	return	
 38877  007478                     i2l19526:
 38878                           
 38879                           ; BSR set to: 0
 38880                           ;drv_mrf_miwi_89xa.c: 376: }
 38881                           ;drv_mrf_miwi_89xa.c: 377: t2 = MiWi_TickGet();
 38882  007478  ECB5  F058         	call	i2_MiWi_TickGet	;wreg free
 38883  00747C  C0A3  F0BA         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 38884  007480  C0A4  F0BB         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 38885  007484  C0A5  F0BC         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 38886  007488  C0A6  F0BD         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 38887                           
 38888                           ;drv_mrf_miwi_89xa.c: 378: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 38889  00748C  C0B6  F0AE         	movff	i2TxPacket@t1,??i2_TxPacket
 38890  007490  C0B7  F0AF         	movff	i2TxPacket@t1+1,??i2_TxPacket+1
 38891  007494  C0B8  F0B0         	movff	i2TxPacket@t1+2,??i2_TxPacket+2
 38892  007498  C0B9  F0B1         	movff	i2TxPacket@t1+3,??i2_TxPacket+3
 38893  00749C  0100               	movlb	0	; () banked
 38894  00749E  1FAE               	comf	??i2_TxPacket& (0+255),f,b
 38895  0074A0  1FAF               	comf	(??i2_TxPacket+1)& (0+255),f,b
 38896  0074A2  1FB0               	comf	(??i2_TxPacket+2)& (0+255),f,b
 38897  0074A4  1FB1               	comf	(??i2_TxPacket+3)& (0+255),f,b
 38898  0074A6  2BAE               	incf	??i2_TxPacket& (0+255),f,b
 38899  0074A8  0E00               	movlw	0
 38900  0074AA  23AF               	addwfc	(??i2_TxPacket+1)& (0+255),f,b
 38901  0074AC  23B0               	addwfc	(??i2_TxPacket+2)& (0+255),f,b
 38902  0074AE  23B1               	addwfc	(??i2_TxPacket+3)& (0+255),f,b
 38903  0074B0  0100               	movlb	0	; () banked
 38904  0074B2  51BA               	movf	i2TxPacket@t2& (0+255),w,b
 38905  0074B4  0100               	movlb	0	; () banked
 38906  0074B6  25AE               	addwf	??i2_TxPacket& (0+255),w,b
 38907  0074B8  0100               	movlb	0	; () banked
 38908  0074BA  6FB2               	movwf	(??i2_TxPacket+4)& (0+255),b
 38909  0074BC  0100               	movlb	0	; () banked
 38910  0074BE  51BB               	movf	(i2TxPacket@t2+1)& (0+255),w,b
 38911  0074C0  0100               	movlb	0	; () banked
 38912  0074C2  21AF               	addwfc	(??i2_TxPacket+1)& (0+255),w,b
 38913  0074C4  0100               	movlb	0	; () banked
 38914  0074C6  6FB3               	movwf	(??i2_TxPacket+5)& (0+255),b
 38915  0074C8  0100               	movlb	0	; () banked
 38916  0074CA  51BC               	movf	(i2TxPacket@t2+2)& (0+255),w,b
 38917  0074CC  0100               	movlb	0	; () banked
 38918  0074CE  21B0               	addwfc	(??i2_TxPacket+2)& (0+255),w,b
 38919  0074D0  0100               	movlb	0	; () banked
 38920  0074D2  6FB4               	movwf	(??i2_TxPacket+6)& (0+255),b
 38921  0074D4  0100               	movlb	0	; () banked
 38922  0074D6  51BD               	movf	(i2TxPacket@t2+3)& (0+255),w,b
 38923  0074D8  0100               	movlb	0	; () banked
 38924  0074DA  21B1               	addwfc	(??i2_TxPacket+3)& (0+255),w,b
 38925  0074DC  0100               	movlb	0	; () banked
 38926  0074DE  6FB5               	movwf	(??i2_TxPacket+7)& (0+255),b
 38927  0074E0  0100               	movlb	0	; () banked
 38928  0074E2  51B5               	movf	(??i2_TxPacket+7)& (0+255),w,b
 38929  0074E4  0100               	movlb	0	; () banked
 38930  0074E6  11B4               	iorwf	(??i2_TxPacket+6)& (0+255),w,b
 38931  0074E8  E108               	bnz	i2l19532
 38932  0074EA  0EA9               	movlw	169
 38933  0074EC  0100               	movlb	0	; () banked
 38934  0074EE  5DB2               	subwf	(??i2_TxPacket+4)& (0+255),w,b
 38935  0074F0  0E61               	movlw	97
 38936  0074F2  0100               	movlb	0	; () banked
 38937  0074F4  59B3               	subwfb	(??i2_TxPacket+5)& (0+255),w,b
 38938  0074F6  A0D8               	btfss	status,0,c
 38939  0074F8  D7B7               	goto	i2l19522
 38940  0074FA                     i2l19532:
 38941                           
 38942                           ; BSR set to: 0
 38943                           ;drv_mrf_miwi_89xa.c: 381: }
 38944                           ;drv_mrf_miwi_89xa.c: 382: }
 38945                           ;drv_mrf_miwi_89xa.c: 384: if(allowedTxFailure++ <= 3)
 38946  0074FA  0100               	movlb	0	; () banked
 38947  0074FC  2BC1               	incf	i2TxPacket@allowedTxFailure& (0+255),f,b
 38948  0074FE  05C1               	decf	i2TxPacket@allowedTxFailure& (0+255),w,b
 38949  007500  0100               	movlb	0	; () banked
 38950  007502  6FAE               	movwf	??i2_TxPacket& (0+255),b
 38951  007504  0E04               	movlw	4
 38952  007506  0100               	movlb	0	; () banked
 38953  007508  61AE               	cpfslt	??i2_TxPacket& (0+255),b
 38954  00750A  D005               	goto	i2l19538
 38955  00750C  D73F               	goto	i2l262
 38956  00750E                     i2l19536:
 38957                           
 38958                           ;drv_mrf_miwi_89xa.c: 388: else
 38959                           ;drv_mrf_miwi_89xa.c: 390: {
 38960                           ;drv_mrf_miwi_89xa.c: 391: status = 1;
 38961  00750E  0E01               	movlw	1
 38962  007510  0100               	movlb	0	; () banked
 38963  007512  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38964                           
 38965                           ;drv_mrf_miwi_89xa.c: 392: goto TX_END_HERE;
 38966  007514  0012               	return	
 38967  007516                     i2l19538:
 38968                           
 38969                           ; BSR set to: 0
 38970  007516  0100               	movlb	0	; () banked
 38971  007518  07C0               	decf	i2TxPacket@reTry& (0+255),f,b
 38972  00751A  0100               	movlb	0	; () banked
 38973  00751C  29C0               	incf	i2TxPacket@reTry& (0+255),w,b
 38974  00751E  A4D8               	btfss	status,2,c
 38975  007520  D732               	goto	i2l19472
 38976                           
 38977                           ; BSR set to: 0
 38978                           ;drv_mrf_miwi_89xa.c: 393: }
 38979                           ;drv_mrf_miwi_89xa.c: 394: }
 38980                           ;drv_mrf_miwi_89xa.c: 396: status = 0;
 38981                           
 38982                           ; BSR set to: 0
 38983  007522  0E00               	movlw	0
 38984  007524  0100               	movlb	0	; () banked
 38985  007526  6FBE               	movwf	i2TxPacket@status& (0+255),b
 38986                           
 38987                           ; BSR set to: 0
 38988                           
 38989                           ;drv_mrf_miwi_89xa.c: 397: TX_END_HERE:
 38990  007528  0012               	return	
 38991  00752A                     __end_ofi2_TxPacket:
 38992                           	opt stack 0
 38993                           pclatu	equ	0xFFB
 38994                           pclath	equ	0xFFA
 38995                           tblptru	equ	0xFF8
 38996                           tblptrh	equ	0xFF7
 38997                           tblptrl	equ	0xFF6
 38998                           tablat	equ	0xFF5
 38999                           prodh	equ	0xFF4
 39000                           prodl	equ	0xFF3
 39001                           intcon	equ	0xFF2
 39002                           intcon2	equ	0xFF1
 39003                           intcon3	equ	0xFF0
 39004                           indf0	equ	0xFEF
 39005                           postinc0	equ	0xFEE
 39006                           plusw0	equ	0xFEB
 39007                           fsr0h	equ	0xFEA
 39008                           fsr0l	equ	0xFE9
 39009                           wreg	equ	0xFE8
 39010                           indf1	equ	0xFE7
 39011                           postinc1	equ	0xFE6
 39012                           postdec1	equ	0xFE5
 39013                           plusw1	equ	0xFE3
 39014                           fsr1h	equ	0xFE2
 39015                           fsr1l	equ	0xFE1
 39016                           bsr	equ	0xFE0
 39017                           indf2	equ	0xFDF
 39018                           postinc2	equ	0xFDE
 39019                           postdec2	equ	0xFDD
 39020                           plusw2	equ	0xFDB
 39021                           fsr2h	equ	0xFDA
 39022                           fsr2l	equ	0xFD9
 39023                           status	equ	0xFD8
 39024                           
 39025 ;; *************** function i2_WriteFIFO *****************
 39026 ;; Defined at:
 39027 ;;		line 244 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39028 ;; Parameters:    Size  Location     Type
 39029 ;;  Data            1    wreg     unsigned char 
 39030 ;; Auto vars:     Size  Location     Type
 39031 ;;  Data            1    2[BANK0 ] unsigned char 
 39032 ;;  WriteFIFO       1    4[BANK0 ] unsigned char 
 39033 ;;  WriteFIFO       1    3[BANK0 ] unsigned char 
 39034 ;; Return value:  Size  Location     Type
 39035 ;;		None               void
 39036 ;; Registers used:
 39037 ;;		wreg, status,2, cstack
 39038 ;; Tracked objects:
 39039 ;;		On entry : 0/0
 39040 ;;		On exit  : 0/0
 39041 ;;		Unchanged: 0/0
 39042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39044 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39046 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39047 ;;Total ram usage:        3 bytes
 39048 ;; Hardware stack levels used:    1
 39049 ;; Hardware stack levels required when called:    1
 39050 ;; This function calls:
 39051 ;;		i2_SPIPut
 39052 ;; This function is called by:
 39053 ;;		i2_TxPacket
 39054 ;; This function uses a non-reentrant model
 39055 ;;
 39056                           
 39057                           	psect	text119
 39058  00B75A                     __ptext119:
 39059                           	opt stack 0
 39060  00B75A                     i2_WriteFIFO:
 39061                           	opt stack 4
 39062                           
 39063                           ; BSR set to: 0
 39064                           ;incstack = 0
 39065                           ;i2WriteFIFO@Data stored from wreg
 39066  00B75A  0100               	movlb	0	; () banked
 39067  00B75C  6FA5               	movwf	i2WriteFIFO@Data& (0+255),b
 39068                           
 39069                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39070  00B75E  0E00               	movlw	0
 39071  00B760  B6F0               	btfsc	intcon3,3,c	;volatile
 39072  00B762  0E01               	movlw	1
 39073  00B764  0100               	movlb	0	; () banked
 39074  00B766  6FA6               	movwf	i2WriteFIFO@IRQ1select& (0+255),b
 39075                           
 39076                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 39077  00B768  0E00               	movlw	0
 39078  00B76A  B8F2               	btfsc	intcon,4,c	;volatile
 39079  00B76C  0E01               	movlw	1
 39080  00B76E  0100               	movlb	0	; () banked
 39081  00B770  6FA7               	movwf	i2WriteFIFO@IRQ0select& (0+255),b
 39082                           
 39083                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 39084  00B772  98F2               	bcf	intcon,4,c	;volatile
 39085                           
 39086                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 39087  00B774  96F0               	bcf	intcon3,3,c	;volatile
 39088                           
 39089                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC6 = 0;
 39090  00B776  9C8B               	bcf	3979,6,c	;volatile
 39091                           
 39092                           ; BSR set to: 0
 39093                           ;drv_mrf_miwi_89xa.c: 255: SPIPut(Data);
 39094  00B778  0100               	movlb	0	; () banked
 39095  00B77A  51A5               	movf	i2WriteFIFO@Data& (0+255),w,b
 39096  00B77C  EC88  F05D         	call	i2_SPIPut
 39097                           
 39098                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC6 = 1;
 39099  00B780  8C8B               	bsf	3979,6,c	;volatile
 39100                           
 39101                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 39102  00B782  0100               	movlb	0	; () banked
 39103  00B784  B1A6               	btfsc	i2WriteFIFO@IRQ1select& (0+255),0,b
 39104  00B786  D002               	bra	i2u1362_45
 39105  00B788  96F0               	bcf	intcon3,3,c	;volatile
 39106  00B78A  D001               	bra	i2u1362_46
 39107  00B78C                     i2u1362_45:
 39108  00B78C  86F0               	bsf	intcon3,3,c	;volatile
 39109  00B78E                     i2u1362_46:
 39110                           
 39111                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 39112  00B78E  0100               	movlb	0	; () banked
 39113  00B790  B1A7               	btfsc	i2WriteFIFO@IRQ0select& (0+255),0,b
 39114  00B792  D002               	bra	i2u1363_45
 39115  00B794  98F2               	bcf	intcon,4,c	;volatile
 39116  00B796  D001               	bra	i2u1363_46
 39117  00B798                     i2u1363_45:
 39118  00B798  88F2               	bsf	intcon,4,c	;volatile
 39119  00B79A                     i2u1363_46:
 39120  00B79A  0012               	return		;funcret
 39121  00B79C                     __end_ofi2_WriteFIFO:
 39122                           	opt stack 0
 39123                           pclatu	equ	0xFFB
 39124                           pclath	equ	0xFFA
 39125                           tblptru	equ	0xFF8
 39126                           tblptrh	equ	0xFF7
 39127                           tblptrl	equ	0xFF6
 39128                           tablat	equ	0xFF5
 39129                           prodh	equ	0xFF4
 39130                           prodl	equ	0xFF3
 39131                           intcon	equ	0xFF2
 39132                           intcon2	equ	0xFF1
 39133                           intcon3	equ	0xFF0
 39134                           indf0	equ	0xFEF
 39135                           postinc0	equ	0xFEE
 39136                           plusw0	equ	0xFEB
 39137                           fsr0h	equ	0xFEA
 39138                           fsr0l	equ	0xFE9
 39139                           wreg	equ	0xFE8
 39140                           indf1	equ	0xFE7
 39141                           postinc1	equ	0xFE6
 39142                           postdec1	equ	0xFE5
 39143                           plusw1	equ	0xFE3
 39144                           fsr1h	equ	0xFE2
 39145                           fsr1l	equ	0xFE1
 39146                           bsr	equ	0xFE0
 39147                           indf2	equ	0xFDF
 39148                           postinc2	equ	0xFDE
 39149                           postdec2	equ	0xFDD
 39150                           plusw2	equ	0xFDB
 39151                           fsr2h	equ	0xFDA
 39152                           fsr2l	equ	0xFD9
 39153                           status	equ	0xFD8
 39154                           
 39155 ;; *************** function i2_SetRFMode *****************
 39156 ;; Defined at:
 39157 ;;		line 666 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39158 ;; Parameters:    Size  Location     Type
 39159 ;;  mode            1    wreg     unsigned char 
 39160 ;; Auto vars:     Size  Location     Type
 39161 ;;  mode            1    6[BANK0 ] unsigned char 
 39162 ;; Return value:  Size  Location     Type
 39163 ;;		None               void
 39164 ;; Registers used:
 39165 ;;		wreg, status,2, status,0, cstack
 39166 ;; Tracked objects:
 39167 ;;		On entry : 0/0
 39168 ;;		On exit  : 0/0
 39169 ;;		Unchanged: 0/0
 39170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39174 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39175 ;;Total ram usage:        1 bytes
 39176 ;; Hardware stack levels used:    1
 39177 ;; Hardware stack levels required when called:    2
 39178 ;; This function calls:
 39179 ;;		i2_RegisterSet
 39180 ;; This function is called by:
 39181 ;;		i2_TxPacket
 39182 ;; This function uses a non-reentrant model
 39183 ;;
 39184                           
 39185                           	psect	text120
 39186  00AC24                     __ptext120:
 39187                           	opt stack 0
 39188  00AC24                     i2_SetRFMode:
 39189                           	opt stack 3
 39190                           
 39191                           ;incstack = 0
 39192                           ;i2SetRFMode@mode stored from wreg
 39193  00AC24  0100               	movlb	0	; () banked
 39194  00AC26  6FA9               	movwf	i2SetRFMode@mode& (0+255),b
 39195                           
 39196                           ;drv_mrf_miwi_89xa.c: 668: switch (mode) {
 39197  00AC28  D037               	goto	i2l12940
 39198  00AC2A                     i2l12918:
 39199                           
 39200                           ;drv_mrf_miwi_89xa.c: 670: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x80);
 39201  00AC2A  0E00               	movlw	0
 39202  00AC2C  0100               	movlb	0	; () banked
 39203  00AC2E  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39204  00AC30  0E96               	movlw	150
 39205  00AC32  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39206  00AC34  EC47  F05B         	call	i2_RegisterSet	;wreg free
 39207                           
 39208                           ;drv_mrf_miwi_89xa.c: 671: RF_Mode = 0x80;
 39209  00AC38  0E80               	movlw	128
 39210  00AC3A  0100               	movlb	0	; () banked
 39211  00AC3C  6F9B               	movwf	_RF_Mode& (0+255),b
 39212                           
 39213                           ;drv_mrf_miwi_89xa.c: 672: break;
 39214  00AC3E  0012               	return	
 39215  00AC40                     i2l12922:
 39216                           
 39217                           ; BSR set to: 0
 39218                           ;drv_mrf_miwi_89xa.c: 674: RegisterSet(0x0000|((0x20 | 0x10 | 0x06) & 0x1F) | 0x60);
 39219  00AC40  0E00               	movlw	0
 39220  00AC42  0100               	movlb	0	; () banked
 39221  00AC44  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39222  00AC46  0E76               	movlw	118
 39223  00AC48  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39224  00AC4A  EC47  F05B         	call	i2_RegisterSet	;wreg free
 39225                           
 39226                           ;drv_mrf_miwi_89xa.c: 675: RF_Mode = 0x60;
 39227  00AC4E  0E60               	movlw	96
 39228  00AC50  0100               	movlb	0	; () banked
 39229  00AC52  6F9B               	movwf	_RF_Mode& (0+255),b
 39230                           
 39231                           ;drv_mrf_miwi_89xa.c: 676: break;
 39232  00AC54  0012               	return	
 39233  00AC56                     i2l12926:
 39234                           
 39235                           ; BSR set to: 0
 39236                           ;drv_mrf_miwi_89xa.c: 678: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x40);
 39237  00AC56  0E00               	movlw	0
 39238  00AC58  0100               	movlb	0	; () banked
 39239  00AC5A  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39240  00AC5C  0E56               	movlw	86
 39241  00AC5E  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39242  00AC60  EC47  F05B         	call	i2_RegisterSet	;wreg free
 39243                           
 39244                           ;drv_mrf_miwi_89xa.c: 679: RF_Mode = 0x40;
 39245  00AC64  0E40               	movlw	64
 39246  00AC66  0100               	movlb	0	; () banked
 39247  00AC68  6F9B               	movwf	_RF_Mode& (0+255),b
 39248                           
 39249                           ;drv_mrf_miwi_89xa.c: 680: break;
 39250  00AC6A  0012               	return	
 39251  00AC6C                     i2l12930:
 39252                           
 39253                           ; BSR set to: 0
 39254                           ;drv_mrf_miwi_89xa.c: 682: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x20);
 39255  00AC6C  0E00               	movlw	0
 39256  00AC6E  0100               	movlb	0	; () banked
 39257  00AC70  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39258  00AC72  0E36               	movlw	54
 39259  00AC74  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39260  00AC76  EC47  F05B         	call	i2_RegisterSet	;wreg free
 39261                           
 39262                           ;drv_mrf_miwi_89xa.c: 683: RF_Mode = 0x20;
 39263  00AC7A  0E20               	movlw	32
 39264  00AC7C  0100               	movlb	0	; () banked
 39265  00AC7E  6F9B               	movwf	_RF_Mode& (0+255),b
 39266                           
 39267                           ;drv_mrf_miwi_89xa.c: 684: break;
 39268  00AC80  0012               	return	
 39269  00AC82                     i2l12934:
 39270                           
 39271                           ; BSR set to: 0
 39272                           ;drv_mrf_miwi_89xa.c: 686: RegisterSet(0x0000 | ((0x20 | 0x10 | 0x06) & 0x1F) | 0x00);
 39273  00AC82  0E00               	movlw	0
 39274  00AC84  0100               	movlb	0	; () banked
 39275  00AC86  6FA6               	movwf	(i2RegisterSet@setting+1)& (0+255),b
 39276  00AC88  0E16               	movlw	22
 39277  00AC8A  6FA5               	movwf	i2RegisterSet@setting& (0+255),b
 39278  00AC8C  EC47  F05B         	call	i2_RegisterSet	;wreg free
 39279                           
 39280                           ;drv_mrf_miwi_89xa.c: 687: RF_Mode = 0x00;
 39281  00AC90  0E00               	movlw	0
 39282  00AC92  0100               	movlb	0	; () banked
 39283  00AC94  6F9B               	movwf	_RF_Mode& (0+255),b
 39284                           
 39285                           ; BSR set to: 0
 39286                           ;drv_mrf_miwi_89xa.c: 689: }
 39287                           
 39288                           ;drv_mrf_miwi_89xa.c: 688: break;
 39289  00AC96  0012               	return	
 39290  00AC98                     i2l12940:
 39291  00AC98  0100               	movlb	0	; () banked
 39292  00AC9A  51A9               	movf	i2SetRFMode@mode& (0+255),w,b
 39293                           
 39294                           ; Switch size 1, requested type "space"
 39295                           ; Number of cases is 5, Range of values is 0 to 128
 39296                           ; switch strategies available:
 39297                           ; Name         Instructions Cycles
 39298                           ; simple_byte           16     9 (average)
 39299                           ;	Chosen strategy is simple_byte
 39300  00AC9C  0A00               	xorlw	0	; case 0
 39301  00AC9E  B4D8               	btfsc	status,2,c
 39302  00ACA0  D7F0               	goto	i2l12934
 39303  00ACA2  0A20               	xorlw	32	; case 32
 39304  00ACA4  B4D8               	btfsc	status,2,c
 39305  00ACA6  D7E2               	goto	i2l12930
 39306  00ACA8  0A60               	xorlw	96	; case 64
 39307  00ACAA  B4D8               	btfsc	status,2,c
 39308  00ACAC  D7D4               	goto	i2l12926
 39309  00ACAE  0A20               	xorlw	32	; case 96
 39310  00ACB0  B4D8               	btfsc	status,2,c
 39311  00ACB2  D7C6               	goto	i2l12922
 39312  00ACB4  0AE0               	xorlw	224	; case 128
 39313  00ACB6  A4D8               	btfss	status,2,c
 39314  00ACB8  0012               	return	
 39315  00ACBA  D7B7               	goto	i2l12918
 39316  00ACBC                     __end_ofi2_SetRFMode:
 39317                           	opt stack 0
 39318                           pclatu	equ	0xFFB
 39319                           pclath	equ	0xFFA
 39320                           tblptru	equ	0xFF8
 39321                           tblptrh	equ	0xFF7
 39322                           tblptrl	equ	0xFF6
 39323                           tablat	equ	0xFF5
 39324                           prodh	equ	0xFF4
 39325                           prodl	equ	0xFF3
 39326                           intcon	equ	0xFF2
 39327                           intcon2	equ	0xFF1
 39328                           intcon3	equ	0xFF0
 39329                           indf0	equ	0xFEF
 39330                           postinc0	equ	0xFEE
 39331                           plusw0	equ	0xFEB
 39332                           fsr0h	equ	0xFEA
 39333                           fsr0l	equ	0xFE9
 39334                           wreg	equ	0xFE8
 39335                           indf1	equ	0xFE7
 39336                           postinc1	equ	0xFE6
 39337                           postdec1	equ	0xFE5
 39338                           plusw1	equ	0xFE3
 39339                           fsr1h	equ	0xFE2
 39340                           fsr1l	equ	0xFE1
 39341                           bsr	equ	0xFE0
 39342                           indf2	equ	0xFDF
 39343                           postinc2	equ	0xFDE
 39344                           postdec2	equ	0xFDD
 39345                           plusw2	equ	0xFDB
 39346                           fsr2h	equ	0xFDA
 39347                           fsr2l	equ	0xFD9
 39348                           status	equ	0xFD8
 39349                           
 39350 ;; *************** function i2_RegisterSet *****************
 39351 ;; Defined at:
 39352 ;;		line 164 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39353 ;; Parameters:    Size  Location     Type
 39354 ;;  setting         2    2[BANK0 ] unsigned int 
 39355 ;; Auto vars:     Size  Location     Type
 39356 ;;  RegisterSet     1    5[BANK0 ] unsigned char 
 39357 ;;  RegisterSet     1    4[BANK0 ] unsigned char 
 39358 ;; Return value:  Size  Location     Type
 39359 ;;		None               void
 39360 ;; Registers used:
 39361 ;;		wreg, status,2, cstack
 39362 ;; Tracked objects:
 39363 ;;		On entry : 0/0
 39364 ;;		On exit  : 0/0
 39365 ;;		Unchanged: 0/0
 39366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39370 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39371 ;;Total ram usage:        4 bytes
 39372 ;; Hardware stack levels used:    1
 39373 ;; Hardware stack levels required when called:    1
 39374 ;; This function calls:
 39375 ;;		i2_SPIPut
 39376 ;; This function is called by:
 39377 ;;		i2_TxPacket
 39378 ;;		i2_SetRFMode
 39379 ;; This function uses a non-reentrant model
 39380 ;;
 39381                           
 39382                           	psect	text121
 39383  00B68E                     __ptext121:
 39384                           	opt stack 0
 39385  00B68E                     i2_RegisterSet:
 39386                           	opt stack 3
 39387                           
 39388                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39389                           
 39390                           ; BSR set to: 0
 39391                           ;incstack = 0
 39392  00B68E  0E00               	movlw	0
 39393  00B690  B6F0               	btfsc	intcon3,3,c	;volatile
 39394  00B692  0E01               	movlw	1
 39395  00B694  0100               	movlb	0	; () banked
 39396  00B696  6FA7               	movwf	i2RegisterSet@IRQ1select& (0+255),b
 39397                           
 39398                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 39399  00B698  0E00               	movlw	0
 39400  00B69A  B8F2               	btfsc	intcon,4,c	;volatile
 39401  00B69C  0E01               	movlw	1
 39402  00B69E  0100               	movlb	0	; () banked
 39403  00B6A0  6FA8               	movwf	i2RegisterSet@IRQ0select& (0+255),b
 39404                           
 39405                           ; BSR set to: 0
 39406                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 39407  00B6A2  98F2               	bcf	intcon,4,c	;volatile
 39408                           
 39409                           ; BSR set to: 0
 39410                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 39411  00B6A4  96F0               	bcf	intcon3,3,c	;volatile
 39412                           
 39413                           ; BSR set to: 0
 39414                           ;drv_mrf_miwi_89xa.c: 173: LATBbits.LATB3 = 0;
 39415  00B6A6  968A               	bcf	3978,3,c	;volatile
 39416                           
 39417                           ; BSR set to: 0
 39418                           ;drv_mrf_miwi_89xa.c: 174: SPIPut((uint8_t)(setting >> 8));
 39419  00B6A8  0100               	movlb	0	; () banked
 39420  00B6AA  51A6               	movf	(i2RegisterSet@setting+1)& (0+255),w,b
 39421  00B6AC  EC88  F05D         	call	i2_SPIPut
 39422                           
 39423                           ;drv_mrf_miwi_89xa.c: 175: SPIPut((uint8_t)setting);
 39424  00B6B0  0100               	movlb	0	; () banked
 39425  00B6B2  51A5               	movf	i2RegisterSet@setting& (0+255),w,b
 39426  00B6B4  EC88  F05D         	call	i2_SPIPut
 39427                           
 39428                           ;drv_mrf_miwi_89xa.c: 176: LATBbits.LATB3 = 1;
 39429  00B6B8  868A               	bsf	3978,3,c	;volatile
 39430                           
 39431                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 39432  00B6BA  0100               	movlb	0	; () banked
 39433  00B6BC  B1A7               	btfsc	i2RegisterSet@IRQ1select& (0+255),0,b
 39434  00B6BE  D002               	bra	i2u1160_45
 39435  00B6C0  96F0               	bcf	intcon3,3,c	;volatile
 39436  00B6C2  D001               	bra	i2u1160_46
 39437  00B6C4                     i2u1160_45:
 39438  00B6C4  86F0               	bsf	intcon3,3,c	;volatile
 39439  00B6C6                     i2u1160_46:
 39440                           
 39441                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 39442  00B6C6  0100               	movlb	0	; () banked
 39443  00B6C8  B1A8               	btfsc	i2RegisterSet@IRQ0select& (0+255),0,b
 39444  00B6CA  D002               	bra	i2u1161_45
 39445  00B6CC  98F2               	bcf	intcon,4,c	;volatile
 39446  00B6CE  D001               	bra	i2u1161_46
 39447  00B6D0                     i2u1161_45:
 39448  00B6D0  88F2               	bsf	intcon,4,c	;volatile
 39449  00B6D2                     i2u1161_46:
 39450  00B6D2  0012               	return		;funcret
 39451  00B6D4                     __end_ofi2_RegisterSet:
 39452                           	opt stack 0
 39453                           pclatu	equ	0xFFB
 39454                           pclath	equ	0xFFA
 39455                           tblptru	equ	0xFF8
 39456                           tblptrh	equ	0xFF7
 39457                           tblptrl	equ	0xFF6
 39458                           tablat	equ	0xFF5
 39459                           prodh	equ	0xFF4
 39460                           prodl	equ	0xFF3
 39461                           intcon	equ	0xFF2
 39462                           intcon2	equ	0xFF1
 39463                           intcon3	equ	0xFF0
 39464                           indf0	equ	0xFEF
 39465                           postinc0	equ	0xFEE
 39466                           plusw0	equ	0xFEB
 39467                           fsr0h	equ	0xFEA
 39468                           fsr0l	equ	0xFE9
 39469                           wreg	equ	0xFE8
 39470                           indf1	equ	0xFE7
 39471                           postinc1	equ	0xFE6
 39472                           postdec1	equ	0xFE5
 39473                           plusw1	equ	0xFE3
 39474                           fsr1h	equ	0xFE2
 39475                           fsr1l	equ	0xFE1
 39476                           bsr	equ	0xFE0
 39477                           indf2	equ	0xFDF
 39478                           postinc2	equ	0xFDE
 39479                           postdec2	equ	0xFDD
 39480                           plusw2	equ	0xFDB
 39481                           fsr2h	equ	0xFDA
 39482                           fsr2l	equ	0xFD9
 39483                           status	equ	0xFD8
 39484                           
 39485 ;; *************** function i2_RegisterRead *****************
 39486 ;; Defined at:
 39487 ;;		line 200 in file "src/miwi/drv_mrf_miwi_89xa.c"
 39488 ;; Parameters:    Size  Location     Type
 39489 ;;  address         1    wreg     unsigned char 
 39490 ;; Auto vars:     Size  Location     Type
 39491 ;;  address         1    5[BANK0 ] unsigned char 
 39492 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 39493 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 39494 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 39495 ;; Return value:  Size  Location     Type
 39496 ;;                  1    wreg      unsigned char 
 39497 ;; Registers used:
 39498 ;;		wreg, status,2, status,0, cstack
 39499 ;; Tracked objects:
 39500 ;;		On entry : 0/0
 39501 ;;		On exit  : 0/0
 39502 ;;		Unchanged: 0/0
 39503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39505 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39507 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39508 ;;Total ram usage:        4 bytes
 39509 ;; Hardware stack levels used:    1
 39510 ;; Hardware stack levels required when called:    2
 39511 ;; This function calls:
 39512 ;;		i2_SPIGet
 39513 ;;		i2_SPIPut
 39514 ;; This function is called by:
 39515 ;;		_MIWIInterruptHandler
 39516 ;;		i2_TxPacket
 39517 ;; This function uses a non-reentrant model
 39518 ;;
 39519                           
 39520                           	psect	text122
 39521  00B558                     __ptext122:
 39522                           	opt stack 0
 39523  00B558                     i2_RegisterRead:
 39524                           	opt stack 3
 39525                           
 39526                           ;incstack = 0
 39527                           ;i2RegisterRead@address stored from wreg
 39528  00B558  0100               	movlb	0	; () banked
 39529  00B55A  6FA8               	movwf	i2RegisterRead@address& (0+255),b
 39530                           
 39531                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 39532                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 39533  00B55C  0E00               	movlw	0
 39534  00B55E  B6F0               	btfsc	intcon3,3,c	;volatile
 39535  00B560  0E01               	movlw	1
 39536  00B562  0100               	movlb	0	; () banked
 39537  00B564  6FA6               	movwf	i2RegisterRead@IRQ1select& (0+255),b
 39538                           
 39539                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 39540  00B566  0E00               	movlw	0
 39541  00B568  B8F2               	btfsc	intcon,4,c	;volatile
 39542  00B56A  0E01               	movlw	1
 39543  00B56C  0100               	movlb	0	; () banked
 39544  00B56E  6FA7               	movwf	i2RegisterRead@IRQ0select& (0+255),b
 39545                           
 39546                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 39547  00B570  98F2               	bcf	intcon,4,c	;volatile
 39548                           
 39549                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 39550  00B572  96F0               	bcf	intcon3,3,c	;volatile
 39551                           
 39552                           ;drv_mrf_miwi_89xa.c: 211: LATBbits.LATB3 = 0;
 39553  00B574  968A               	bcf	3978,3,c	;volatile
 39554                           
 39555                           ; BSR set to: 0
 39556                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 39557  00B576  0100               	movlb	0	; () banked
 39558  00B578  51A8               	movf	i2RegisterRead@address& (0+255),w,b
 39559  00B57A  0940               	iorlw	64
 39560  00B57C  0100               	movlb	0	; () banked
 39561  00B57E  6FA8               	movwf	i2RegisterRead@address& (0+255),b
 39562                           
 39563                           ; BSR set to: 0
 39564                           ;drv_mrf_miwi_89xa.c: 213: SPIPut(address);
 39565  00B580  0100               	movlb	0	; () banked
 39566  00B582  51A8               	movf	i2RegisterRead@address& (0+255),w,b
 39567  00B584  EC88  F05D         	call	i2_SPIPut
 39568                           
 39569                           ;drv_mrf_miwi_89xa.c: 214: value = SPIGet();
 39570  00B588  ECCB  F05D         	call	i2_SPIGet	;wreg free
 39571  00B58C  0100               	movlb	0	; () banked
 39572  00B58E  6FA5               	movwf	i2RegisterRead@value& (0+255),b
 39573                           
 39574                           ; BSR set to: 0
 39575                           ;drv_mrf_miwi_89xa.c: 215: LATBbits.LATB3 = 1;
 39576  00B590  868A               	bsf	3978,3,c	;volatile
 39577                           
 39578                           ; BSR set to: 0
 39579                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 39580  00B592  0100               	movlb	0	; () banked
 39581  00B594  B1A6               	btfsc	i2RegisterRead@IRQ1select& (0+255),0,b
 39582  00B596  D002               	bra	i2u1360_45
 39583  00B598  96F0               	bcf	intcon3,3,c	;volatile
 39584  00B59A  D001               	bra	i2u1360_46
 39585  00B59C                     i2u1360_45:
 39586  00B59C  86F0               	bsf	intcon3,3,c	;volatile
 39587  00B59E                     i2u1360_46:
 39588                           
 39589                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 39590  00B59E  0100               	movlb	0	; () banked
 39591  00B5A0  B1A7               	btfsc	i2RegisterRead@IRQ0select& (0+255),0,b
 39592  00B5A2  D002               	bra	i2u1361_45
 39593  00B5A4  98F2               	bcf	intcon,4,c	;volatile
 39594  00B5A6  D001               	bra	i2u1361_46
 39595  00B5A8                     i2u1361_45:
 39596  00B5A8  88F2               	bsf	intcon,4,c	;volatile
 39597  00B5AA                     i2u1361_46:
 39598                           
 39599                           ;drv_mrf_miwi_89xa.c: 222: return value;
 39600  00B5AA  0100               	movlb	0	; () banked
 39601  00B5AC  51A5               	movf	i2RegisterRead@value& (0+255),w,b
 39602  00B5AE  0012               	return	
 39603  00B5B0                     __end_ofi2_RegisterRead:
 39604                           	opt stack 0
 39605                           pclatu	equ	0xFFB
 39606                           pclath	equ	0xFFA
 39607                           tblptru	equ	0xFF8
 39608                           tblptrh	equ	0xFF7
 39609                           tblptrl	equ	0xFF6
 39610                           tablat	equ	0xFF5
 39611                           prodh	equ	0xFF4
 39612                           prodl	equ	0xFF3
 39613                           intcon	equ	0xFF2
 39614                           intcon2	equ	0xFF1
 39615                           intcon3	equ	0xFF0
 39616                           indf0	equ	0xFEF
 39617                           postinc0	equ	0xFEE
 39618                           plusw0	equ	0xFEB
 39619                           fsr0h	equ	0xFEA
 39620                           fsr0l	equ	0xFE9
 39621                           wreg	equ	0xFE8
 39622                           indf1	equ	0xFE7
 39623                           postinc1	equ	0xFE6
 39624                           postdec1	equ	0xFE5
 39625                           plusw1	equ	0xFE3
 39626                           fsr1h	equ	0xFE2
 39627                           fsr1l	equ	0xFE1
 39628                           bsr	equ	0xFE0
 39629                           indf2	equ	0xFDF
 39630                           postinc2	equ	0xFDE
 39631                           postdec2	equ	0xFDD
 39632                           plusw2	equ	0xFDB
 39633                           fsr2h	equ	0xFDA
 39634                           fsr2l	equ	0xFD9
 39635                           status	equ	0xFD8
 39636                           
 39637 ;; *************** function i2_SPIGet *****************
 39638 ;; Defined at:
 39639 ;;		line 104 in file "src/18F27J53/spi.c"
 39640 ;; Parameters:    Size  Location     Type
 39641 ;;		None
 39642 ;; Auto vars:     Size  Location     Type
 39643 ;;		None
 39644 ;; Return value:  Size  Location     Type
 39645 ;;                  1    wreg      unsigned char 
 39646 ;; Registers used:
 39647 ;;		wreg, status,2, cstack
 39648 ;; Tracked objects:
 39649 ;;		On entry : 0/0
 39650 ;;		On exit  : 0/0
 39651 ;;		Unchanged: 0/0
 39652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39657 ;;Total ram usage:        0 bytes
 39658 ;; Hardware stack levels used:    1
 39659 ;; Hardware stack levels required when called:    1
 39660 ;; This function calls:
 39661 ;;		i2_SPIPut
 39662 ;; This function is called by:
 39663 ;;		_MIWIInterruptHandler
 39664 ;;		i2_RegisterRead
 39665 ;; This function uses a non-reentrant model
 39666 ;;
 39667                           
 39668                           	psect	text123
 39669  00BB96                     __ptext123:
 39670                           	opt stack 0
 39671  00BB96                     i2_SPIGet:
 39672                           	opt stack 3
 39673                           
 39674                           ;spi.c: 128: SPIPut(0x00);
 39675                           
 39676                           ; BSR set to: 0
 39677                           ;incstack = 0
 39678  00BB96  0E00               	movlw	0
 39679  00BB98  EC88  F05D         	call	i2_SPIPut
 39680                           
 39681                           ;spi.c: 129: return SSP2BUF;
 39682  00BB9C  5075               	movf	3957,w,c	;volatile
 39683  00BB9E  0012               	return	
 39684  00BBA0                     __end_ofi2_SPIGet:
 39685                           	opt stack 0
 39686                           pclatu	equ	0xFFB
 39687                           pclath	equ	0xFFA
 39688                           tblptru	equ	0xFF8
 39689                           tblptrh	equ	0xFF7
 39690                           tblptrl	equ	0xFF6
 39691                           tablat	equ	0xFF5
 39692                           prodh	equ	0xFF4
 39693                           prodl	equ	0xFF3
 39694                           intcon	equ	0xFF2
 39695                           intcon2	equ	0xFF1
 39696                           intcon3	equ	0xFF0
 39697                           indf0	equ	0xFEF
 39698                           postinc0	equ	0xFEE
 39699                           plusw0	equ	0xFEB
 39700                           fsr0h	equ	0xFEA
 39701                           fsr0l	equ	0xFE9
 39702                           wreg	equ	0xFE8
 39703                           indf1	equ	0xFE7
 39704                           postinc1	equ	0xFE6
 39705                           postdec1	equ	0xFE5
 39706                           plusw1	equ	0xFE3
 39707                           fsr1h	equ	0xFE2
 39708                           fsr1l	equ	0xFE1
 39709                           bsr	equ	0xFE0
 39710                           indf2	equ	0xFDF
 39711                           postinc2	equ	0xFDE
 39712                           postdec2	equ	0xFDD
 39713                           plusw2	equ	0xFDB
 39714                           fsr2h	equ	0xFDA
 39715                           fsr2l	equ	0xFD9
 39716                           status	equ	0xFD8
 39717                           
 39718 ;; *************** function i2_SPIPut *****************
 39719 ;; Defined at:
 39720 ;;		line 45 in file "src/18F27J53/spi.c"
 39721 ;; Parameters:    Size  Location     Type
 39722 ;;  v               1    wreg     unsigned char 
 39723 ;; Auto vars:     Size  Location     Type
 39724 ;;  v               1    1[BANK0 ] unsigned char 
 39725 ;;  SPIPut          1    0[BANK0 ] unsigned char 
 39726 ;; Return value:  Size  Location     Type
 39727 ;;		None               void
 39728 ;; Registers used:
 39729 ;;		wreg
 39730 ;; Tracked objects:
 39731 ;;		On entry : 0/0
 39732 ;;		On exit  : 0/0
 39733 ;;		Unchanged: 0/0
 39734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39739 ;;Total ram usage:        2 bytes
 39740 ;; Hardware stack levels used:    1
 39741 ;; This function calls:
 39742 ;;		Nothing
 39743 ;; This function is called by:
 39744 ;;		i2_SPIGet
 39745 ;;		i2_RegisterSet
 39746 ;;		i2_RegisterRead
 39747 ;;		i2_WriteFIFO
 39748 ;; This function uses a non-reentrant model
 39749 ;;
 39750                           
 39751                           	psect	text124
 39752  00BB10                     __ptext124:
 39753                           	opt stack 0
 39754  00BB10                     i2_SPIPut:
 39755                           	opt stack 4
 39756                           
 39757                           ;incstack = 0
 39758                           ;i2SPIPut@v stored from wreg
 39759  00BB10  0100               	movlb	0	; () banked
 39760  00BB12  6FA4               	movwf	i2SPIPut@v& (0+255),b
 39761                           
 39762                           ;spi.c: 66: {
 39763                           ;spi.c: 68: uint8_t i;
 39764                           ;spi.c: 70: PIR3bits.SSP2IF = 0;
 39765  00BB14  9EA4               	bcf	4004,7,c	;volatile
 39766                           
 39767                           ;spi.c: 72: i = SSP2BUF;
 39768  00BB16  CF75 F0A3          	movff	3957,i2SPIPut@i	;volatile
 39769  00BB1A                     i2l29:
 39770                           
 39771                           ;spi.c: 75: {
 39772                           ;spi.c: 76: SSP2CON1bits.WCOL = 0;
 39773  00BB1A  9E72               	bcf	3954,7,c	;volatile
 39774                           
 39775                           ;spi.c: 77: SSP2BUF = v;
 39776  00BB1C  C0A4  FF75         	movff	i2SPIPut@v,3957	;volatile
 39777                           
 39778                           ;spi.c: 78: } while( SSP2CON1bits.WCOL );
 39779  00BB20  BE72               	btfsc	3954,7,c	;volatile
 39780  00BB22  D7FB               	goto	i2l29
 39781  00BB24                     i2l31:
 39782  00BB24  AEA4               	btfss	4004,7,c	;volatile
 39783  00BB26  D7FE               	goto	i2l31
 39784                           
 39785                           ;spi.c: 82: PIR3bits.SSP2IF = 0;
 39786  00BB28  9EA4               	bcf	4004,7,c	;volatile
 39787  00BB2A  0012               	return		;funcret
 39788  00BB2C                     __end_ofi2_SPIPut:
 39789                           	opt stack 0
 39790                           pclatu	equ	0xFFB
 39791                           pclath	equ	0xFFA
 39792                           tblptru	equ	0xFF8
 39793                           tblptrh	equ	0xFF7
 39794                           tblptrl	equ	0xFF6
 39795                           tablat	equ	0xFF5
 39796                           prodh	equ	0xFF4
 39797                           prodl	equ	0xFF3
 39798                           intcon	equ	0xFF2
 39799                           intcon2	equ	0xFF1
 39800                           intcon3	equ	0xFF0
 39801                           indf0	equ	0xFEF
 39802                           postinc0	equ	0xFEE
 39803                           plusw0	equ	0xFEB
 39804                           fsr0h	equ	0xFEA
 39805                           fsr0l	equ	0xFE9
 39806                           wreg	equ	0xFE8
 39807                           indf1	equ	0xFE7
 39808                           postinc1	equ	0xFE6
 39809                           postdec1	equ	0xFE5
 39810                           plusw1	equ	0xFE3
 39811                           fsr1h	equ	0xFE2
 39812                           fsr1l	equ	0xFE1
 39813                           bsr	equ	0xFE0
 39814                           indf2	equ	0xFDF
 39815                           postinc2	equ	0xFDE
 39816                           postdec2	equ	0xFDD
 39817                           plusw2	equ	0xFDB
 39818                           fsr2h	equ	0xFDA
 39819                           fsr2l	equ	0xFD9
 39820                           status	equ	0xFD8
 39821                           
 39822 ;; *************** function i2_MiWi_TickGet *****************
 39823 ;; Defined at:
 39824 ;;		line 105 in file "src/18F27J53/symbol.c"
 39825 ;; Parameters:    Size  Location     Type
 39826 ;;		None
 39827 ;; Auto vars:     Size  Location     Type
 39828 ;;  MiWi_TickGet    4    6[BANK0 ] struct _MIWI_TICK
 39829 ;;  MiWi_TickGet    1    5[BANK0 ] unsigned char 
 39830 ;; Return value:  Size  Location     Type
 39831 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 39832 ;; Registers used:
 39833 ;;		wreg, status,2, status,0
 39834 ;; Tracked objects:
 39835 ;;		On entry : 0/0
 39836 ;;		On exit  : 0/0
 39837 ;;		Unchanged: 0/0
 39838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39840 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39842 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39843 ;;Total ram usage:       10 bytes
 39844 ;; Hardware stack levels used:    1
 39845 ;; This function calls:
 39846 ;;		Nothing
 39847 ;; This function is called by:
 39848 ;;		_MIWIInterruptHandler
 39849 ;;		i2_TxPacket
 39850 ;; This function uses a non-reentrant model
 39851 ;;
 39852                           
 39853                           	psect	text125
 39854  00B16A                     __ptext125:
 39855                           	opt stack 0
 39856  00B16A                     i2_MiWi_TickGet:
 39857                           	opt stack 5
 39858                           
 39859                           ;symbol.c: 107: MIWI_TICK currentTime;
 39860                           ;symbol.c: 110: uint8_t failureCounter;
 39861                           ;symbol.c: 113: PIE1bits.TMR1IE = 0;
 39862                           
 39863                           ;incstack = 0
 39864  00B16A  909D               	bcf	3997,0,c	;volatile
 39865                           
 39866                           ;symbol.c: 116: currentTime.byte.b2 = 0;
 39867  00B16C  0E00               	movlw	0
 39868  00B16E  0100               	movlb	0	; () banked
 39869  00B170  6FAB               	movwf	(i2MiWi_TickGet@currentTime+2)& (0+255),b
 39870                           
 39871                           ;symbol.c: 117: currentTime.byte.b3 = 0;
 39872  00B172  0E00               	movlw	0
 39873  00B174  0100               	movlb	0	; () banked
 39874  00B176  6FAC               	movwf	(i2MiWi_TickGet@currentTime+3)& (0+255),b
 39875                           
 39876                           ;symbol.c: 119: failureCounter = 0;
 39877  00B178  0E00               	movlw	0
 39878  00B17A  0100               	movlb	0	; () banked
 39879  00B17C  6FA8               	movwf	i2MiWi_TickGet@failureCounter& (0+255),b
 39880  00B17E                     i2l18952:
 39881                           
 39882                           ; BSR set to: 0
 39883                           ;symbol.c: 122: {
 39884                           ;symbol.c: 123: currentTime.byte.b0 = TMR1L;
 39885  00B17E  CFCE F0A9          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 39886                           
 39887                           ; BSR set to: 0
 39888                           ;symbol.c: 124: currentTime.byte.b1 = TMR1H;
 39889  00B182  CFCF F0AA          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 39890                           
 39891                           ; BSR set to: 0
 39892                           ;symbol.c: 125: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 39893  00B186  0100               	movlb	0	; () banked
 39894  00B188  29A9               	incf	i2MiWi_TickGet@currentTime& (0+255),w,b
 39895  00B18A  E10D               	bnz	i2l62
 39896  00B18C  0100               	movlb	0	; () banked
 39897  00B18E  29AA               	incf	(i2MiWi_TickGet@currentTime+1)& (0+255),w,b
 39898  00B190  A4D8               	btfss	status,2,c
 39899  00B192  D009               	goto	i2l62
 39900                           
 39901                           ; BSR set to: 0
 39902  00B194  0100               	movlb	0	; () banked
 39903  00B196  2BA8               	incf	i2MiWi_TickGet@failureCounter& (0+255),f,b
 39904  00B198  05A8               	decf	i2MiWi_TickGet@failureCounter& (0+255),w,b
 39905  00B19A  0100               	movlb	0	; () banked
 39906  00B19C  6FA7               	movwf	??i2_MiWi_TickGet& (0+255),b
 39907  00B19E  0E02               	movlw	2
 39908  00B1A0  0100               	movlb	0	; () banked
 39909  00B1A2  65A7               	cpfsgt	??i2_MiWi_TickGet& (0+255),b
 39910  00B1A4  D7EC               	goto	i2l18952
 39911  00B1A6                     i2l62:
 39912                           
 39913                           ; BSR set to: 0
 39914                           ;symbol.c: 129: if(PIR1bits.TMR1IF)
 39915  00B1A6  A09E               	btfss	3998,0,c	;volatile
 39916  00B1A8  D008               	goto	i2l18966
 39917                           
 39918                           ; BSR set to: 0
 39919                           ;symbol.c: 130: {
 39920                           ;symbol.c: 132: {
 39921                           ;symbol.c: 135: currentTime.byte.b2++;
 39922  00B1AA  0100               	movlb	0	; () banked
 39923  00B1AC  2BAB               	incf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 39924                           
 39925                           ; BSR set to: 0
 39926                           ;symbol.c: 136: if(timerExtension1 == 0xFF)
 39927  00B1AE  0100               	movlb	0	; () banked
 39928  00B1B0  29A1               	incf	_timerExtension1& (0+255),w,b	;volatile
 39929  00B1B2  A4D8               	btfss	status,2,c
 39930  00B1B4  D002               	goto	i2l18966
 39931                           
 39932                           ; BSR set to: 0
 39933                           ;symbol.c: 137: {
 39934                           ;symbol.c: 138: currentTime.byte.b3++;
 39935  00B1B6  0100               	movlb	0	; () banked
 39936  00B1B8  2BAC               	incf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 39937  00B1BA                     i2l18966:
 39938                           
 39939                           ; BSR set to: 0
 39940                           ;symbol.c: 139: }
 39941                           ;symbol.c: 140: }
 39942                           ;symbol.c: 141: }
 39943                           ;symbol.c: 144: currentTime.byte.b2 += timerExtension1;
 39944  00B1BA  0100               	movlb	0	; () banked
 39945  00B1BC  51A1               	movf	_timerExtension1& (0+255),w,b	;volatile
 39946  00B1BE  0100               	movlb	0	; () banked
 39947  00B1C0  27AB               	addwf	(i2MiWi_TickGet@currentTime+2)& (0+255),f,b
 39948                           
 39949                           ; BSR set to: 0
 39950                           ;symbol.c: 145: currentTime.byte.b3 += timerExtension2;
 39951  00B1C2  0100               	movlb	0	; () banked
 39952  00B1C4  51A2               	movf	_timerExtension2& (0+255),w,b	;volatile
 39953  00B1C6  0100               	movlb	0	; () banked
 39954  00B1C8  27AC               	addwf	(i2MiWi_TickGet@currentTime+3)& (0+255),f,b
 39955                           
 39956                           ; BSR set to: 0
 39957                           ;symbol.c: 148: PIE1bits.TMR1IE = 1;
 39958  00B1CA  809D               	bsf	3997,0,c	;volatile
 39959                           
 39960                           ; BSR set to: 0
 39961                           ;symbol.c: 150: return currentTime;
 39962  00B1CC  C0A9  F0A3         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 39963  00B1D0  C0AA  F0A4         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 39964  00B1D4  C0AB  F0A5         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 39965  00B1D8  C0AC  F0A6         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 39966  00B1DC  0012               	return	
 39967  00B1DE                     __end_ofi2_MiWi_TickGet:
 39968                           	opt stack 0
 39969                           pclatu	equ	0xFFB
 39970                           pclath	equ	0xFFA
 39971                           tblptru	equ	0xFF8
 39972                           tblptrh	equ	0xFF7
 39973                           tblptrl	equ	0xFF6
 39974                           tablat	equ	0xFF5
 39975                           prodh	equ	0xFF4
 39976                           prodl	equ	0xFF3
 39977                           intcon	equ	0xFF2
 39978                           intcon2	equ	0xFF1
 39979                           intcon3	equ	0xFF0
 39980                           indf0	equ	0xFEF
 39981                           postinc0	equ	0xFEE
 39982                           plusw0	equ	0xFEB
 39983                           fsr0h	equ	0xFEA
 39984                           fsr0l	equ	0xFE9
 39985                           wreg	equ	0xFE8
 39986                           indf1	equ	0xFE7
 39987                           postinc1	equ	0xFE6
 39988                           postdec1	equ	0xFE5
 39989                           plusw1	equ	0xFE3
 39990                           fsr1h	equ	0xFE2
 39991                           fsr1l	equ	0xFE1
 39992                           bsr	equ	0xFE0
 39993                           indf2	equ	0xFDF
 39994                           postinc2	equ	0xFDE
 39995                           postdec2	equ	0xFDD
 39996                           plusw2	equ	0xFDB
 39997                           fsr2h	equ	0xFDA
 39998                           fsr2l	equ	0xFD9
 39999                           status	equ	0xFD8
 40000                           pclatu	equ	0xFFB
 40001                           pclath	equ	0xFFA
 40002                           tblptru	equ	0xFF8
 40003                           tblptrh	equ	0xFF7
 40004                           tblptrl	equ	0xFF6
 40005                           tablat	equ	0xFF5
 40006                           prodh	equ	0xFF4
 40007                           prodl	equ	0xFF3
 40008                           intcon	equ	0xFF2
 40009                           intcon2	equ	0xFF1
 40010                           intcon3	equ	0xFF0
 40011                           indf0	equ	0xFEF
 40012                           postinc0	equ	0xFEE
 40013                           plusw0	equ	0xFEB
 40014                           fsr0h	equ	0xFEA
 40015                           fsr0l	equ	0xFE9
 40016                           wreg	equ	0xFE8
 40017                           indf1	equ	0xFE7
 40018                           postinc1	equ	0xFE6
 40019                           postdec1	equ	0xFE5
 40020                           plusw1	equ	0xFE3
 40021                           fsr1h	equ	0xFE2
 40022                           fsr1l	equ	0xFE1
 40023                           bsr	equ	0xFE0
 40024                           indf2	equ	0xFDF
 40025                           postinc2	equ	0xFDE
 40026                           postdec2	equ	0xFDD
 40027                           plusw2	equ	0xFDB
 40028                           fsr2h	equ	0xFDA
 40029                           fsr2l	equ	0xFD9
 40030                           status	equ	0xFD8
 40031                           
 40032                           	psect	param0
 40033  0000                     pclatu	equ	0xFFB
 40034                           pclath	equ	0xFFA
 40035                           tblptru	equ	0xFF8
 40036                           tblptrh	equ	0xFF7
 40037                           tblptrl	equ	0xFF6
 40038                           tablat	equ	0xFF5
 40039                           prodh	equ	0xFF4
 40040                           prodl	equ	0xFF3
 40041                           intcon	equ	0xFF2
 40042                           intcon2	equ	0xFF1
 40043                           intcon3	equ	0xFF0
 40044                           indf0	equ	0xFEF
 40045                           postinc0	equ	0xFEE
 40046                           plusw0	equ	0xFEB
 40047                           fsr0h	equ	0xFEA
 40048                           fsr0l	equ	0xFE9
 40049                           wreg	equ	0xFE8
 40050                           indf1	equ	0xFE7
 40051                           postinc1	equ	0xFE6
 40052                           postdec1	equ	0xFE5
 40053                           plusw1	equ	0xFE3
 40054                           fsr1h	equ	0xFE2
 40055                           fsr1l	equ	0xFE1
 40056                           bsr	equ	0xFE0
 40057                           indf2	equ	0xFDF
 40058                           postinc2	equ	0xFDE
 40059                           postdec2	equ	0xFDD
 40060                           plusw2	equ	0xFDB
 40061                           fsr2h	equ	0xFDA
 40062                           fsr2l	equ	0xFD9
 40063                           status	equ	0xFD8
 40064                           
 40065                           	psect	temp
 40066  00005E                     btemp:
 40067                           	opt stack 0
 40068  00005E                     	ds	1
 40069  0000                     int$flags	set	btemp
 40070                           pclatu	equ	0xFFB
 40071                           pclath	equ	0xFFA
 40072                           tblptru	equ	0xFF8
 40073                           tblptrh	equ	0xFF7
 40074                           tblptrl	equ	0xFF6
 40075                           tablat	equ	0xFF5
 40076                           prodh	equ	0xFF4
 40077                           prodl	equ	0xFF3
 40078                           intcon	equ	0xFF2
 40079                           intcon2	equ	0xFF1
 40080                           intcon3	equ	0xFF0
 40081                           indf0	equ	0xFEF
 40082                           postinc0	equ	0xFEE
 40083                           plusw0	equ	0xFEB
 40084                           fsr0h	equ	0xFEA
 40085                           fsr0l	equ	0xFE9
 40086                           wreg	equ	0xFE8
 40087                           indf1	equ	0xFE7
 40088                           postinc1	equ	0xFE6
 40089                           postdec1	equ	0xFE5
 40090                           plusw1	equ	0xFE3
 40091                           fsr1h	equ	0xFE2
 40092                           fsr1l	equ	0xFE1
 40093                           bsr	equ	0xFE0
 40094                           indf2	equ	0xFDF
 40095                           postinc2	equ	0xFDE
 40096                           postdec2	equ	0xFDD
 40097                           plusw2	equ	0xFDB
 40098                           fsr2h	equ	0xFDA
 40099                           fsr2l	equ	0xFD9
 40100                           status	equ	0xFD8


Data Sizes:
    Strings     495
    Constant    480
    Data        12
    BSS         1553
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     67     134
    BANK1           256    144     251
    BANK2           256      0     255
    BANK3           256     31     227
    BANK4           256      0      64
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          208      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[32]), NULL(NULL[0]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(2) Largest target is 2
		 -> myPANID(BANK1[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 2
		 -> tempShortAddress(BANK1[2]), myShortAddress(BANK1[2]), 

    pUsbBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 132
		 -> do_PING@buffer(COMRAM[21]), UPDATE_FREQUENCY_LABEL(CODE[4]), UPTIME_LABEL(CODE[4]), NOISE_LABEL(CODE[4]), 
		 -> CHANNEL_LABEL(CODE[4]), POWER_LABEL(CODE[4]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> myLongAddress(BANK1[4]), NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), 
		 -> TX_POWER_N_2_DB_MW(CODE[6]), TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), 
		 -> TX_POWER_10_DB_MW(CODE[5]), TX_POWER_13_DB_MW(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_14(CODE[39]), STR_13(CODE[52]), STR_12(CODE[44]), STR_11(CODE[55]), 
		 -> STR_10(CODE[39]), STR_9(CODE[32]), STR_8(CODE[17]), STR_7(CODE[31]), 
		 -> STR_6(CODE[25]), STR_5(CODE[22]), STR_4(CODE[41]), STR_3(CODE[33]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    decode_variable@p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_ufixed16_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    encode_uint8_variable@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    dBm_to_mW_ufixed16@value2	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    dBm_to_mW_ufixed16@value1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    labelcmp@p2	PTR unsigned char  size(2) Largest target is 4
		 -> UPDATE_FREQUENCY_LABEL(CODE[4]), POWER_LABEL(CODE[4]), 

    labelcmp@p1	PTR unsigned char  size(2) Largest target is 10
		 -> m_var(BANK1[10]), 

    sendHIDText@str	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDText@p	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    sendHIDBinary@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> m_buffer(BANK2[32]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 64
		 -> decode_variable@var(BANK1[10]), m_var(BANK1[10]), m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), 
		 -> ToSendDataBuffer(BANK3[64]), TxBuffer(BANK2[43]), NULL(NULL[0]), 

    p_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> m_buffer(BANK2[32]), ReceivedDataBuffer(BANK4[64]), NULL(NULL[0]), 

    sp__dBm_to_mW	PTR const unsigned char  size(2) Largest target is 7
		 -> TX_POWER_INVALID(CODE[6]), TX_POWER_N_8_DB_MW(CODE[7]), TX_POWER_N_5_DB_MW(CODE[6]), TX_POWER_N_2_DB_MW(CODE[6]), 
		 -> TX_POWER_1_DB_MW(CODE[7]), TX_POWER_4_DB_MW(CODE[6]), TX_POWER_7_DB_MW(CODE[4]), TX_POWER_10_DB_MW(CODE[5]), 
		 -> TX_POWER_13_DB_MW(CODE[5]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 41
		 -> configDescriptor1(CODE[41]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), ToSendDataBuffer(BANK3[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), NULL(NULL[0]), 

    S2898$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S2888$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2888$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2864$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2864$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2864$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2864$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(SFR_1[1]), 

    MiApp_NoiseDetection@RSSIValue	PTR unsigned char  size(2) Largest target is 1
		 -> noise_level(BANK1[1]), MiApp_StartConnection@RSSIValue(BANK1[1]), 

    MiApp_UnicastAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), 

    UnicastShortAddress@DestAddress	PTR unsigned char  size(2) Largest target is 18
		 -> openSocketInfo.ShortAddress2(BANK1[2]), openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), 

    MIP.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), 

    SendMACPacket@Address	PTR unsigned char  size(2) Largest target is 576
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    MTP.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo.ShortAddress1(BANK1[2]), openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable.Address(BIGRAMl[4]), 
		 -> ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    S2010$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S2010$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK2[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), MACTxBuffer(BANK2[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 43
		 -> TxBuffer(BANK2[43]), 

    S1592$DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 576
		 -> do_UPDATE@shortaddress(COMRAM[2]), do_POWER_TEST@shortaddress(COMRAM[2]), do_NETWORK_REGISTER@shortaddress(COMRAM[2]), main@shortaddress(BANK3[2]), 
		 -> openSocketInfo(BANK1[18]), tempShortAddress(BANK1[2]), ConnectionTable(BIGRAMl[576]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1390$PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 4
		 -> myLongAddress(BANK1[4]), 

    S1614$Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket(BANK3[132]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 132
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 

    S1614$SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket(BANK3[132]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 132
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[132]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _SYS_InterruptLow in COMRAM

    _SYS_InterruptLow->_USBDeviceTasks
    i1___ftadd->i1___ftpack
    _USBDeviceTasks->_USBCtrlEPService
    i1_USBDeviceInit->i1_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_MIWIInterruptHandler
    _MIWIInterruptHandler->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _SYS_InterruptLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_UnicastAddress
    _update_variable->_MiMAC_SetPower
    _MiMAC_SetPower->_RegisterSet
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_periodic_update->___ftmul
    _send_network_register->_sendHIDBinary
    _send_complete_update->___ftmul
    _floor->___altoft
    ___fttol->___ftadd
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___ftneg->_floor
    ___ftmul->___ftneg
    _send_answer_to_update->_sendHIDBinary
    _sendHIDBinary->_memcpy
    _sendHIDText->_USBTransferOnePacket
    _decode_variable->_memcpy
    _USBDeviceInit->_memset
    _MiApp_MessageAvailable->_MiWiTasks
    _MiWiTasks->_UnicastShortAddress
    _UnicastShortAddress->_RouteMessage
    _RouteMessage->_SendMACPacket
    _SendBeacon->_SendMACPacket
    _SendMACPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _BroadcastJitter->_MiWi_TickGet
    _AddNodeToNetworkTable->_SearchForLongAddress
    _MiApp_StartConnection->_MiApp_NoiseDetection
    _MiApp_NoiseDetection->_MiMAC_ChannelAssessment
    _MiMAC_ChannelAssessment->___awdiv
    ___awdiv->_RegisterRead
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DELAY_ms
    _DELAY_ms->___lmul
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _SYS_InterruptLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _SYS_InterruptLow in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_MiApp_UnicastAddress

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _SYS_InterruptLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _SYS_InterruptLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _SYS_InterruptLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _SYS_InterruptLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _SYS_InterruptLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _SYS_InterruptLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _SYS_InterruptLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _SYS_InterruptLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _SYS_InterruptLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _SYS_InterruptLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _SYS_InterruptLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Critical Paths under _SYS_InterruptLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  949408
                                            137 BANK1      7     7      0
                                             19 BANK3     12    12      0
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
               _MiApp_NoiseDetection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
               _MiApp_UnicastAddress
                     _MiMAC_SetPower
                          _MiWiTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _USBTransferOnePacket
                          _dBm_to_mW
                    _decode_variable
                             _memcpy
                      _sendHIDBinary
                        _sendHIDText
              _send_answer_to_update
               _send_complete_update
              _send_network_register
               _send_periodic_update
                            _sprintf
                             _strcpy
                        _timer_reset
                         _update_LED
                    _update_variable
 ---------------------------------------------------------------------------------
 (1) _update_variable                                      0     0      0    3025
                     _MiMAC_SetPower
                           _RtccWrOn
                           _labelcmp
                 _mW_ufixed16_to_dBm
 ---------------------------------------------------------------------------------
 (2) _mW_ufixed16_to_dBm                                   2     1      1     600
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (2) _labelcmp                                             8     4      4     639
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetPower                                       3     3      0    1786
                                              6 BANK1      3     3      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (1) _update_LED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_reset                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     525
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             34    22     12   13264
                                             12 BANK1     30    18     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                          _dBm_to_mW (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    7276
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     440
                                              7 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _send_periodic_update                                14    14      0   39843
                                             71 BANK1     13    13      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
           _encode_ufixed16_variable
                              _floor
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_network_register                                0     0      0   15092
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (1) _send_complete_update                                14    14      0   42230
                                             71 BANK1     13    13      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                 _dBm_to_mW_ufixed16
           _encode_ufixed16_variable
              _encode_uint8_variable
                              _floor
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _floor                                                8     5      3   12016
                                             45 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     506
                                              0 BANK1      7     2      5
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     891
                                             20 BANK1     15    11      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     406
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5618
                                              8 BANK1     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3603
                                             35 BANK1     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     273
                                             53 BANK1      3     0      3
                            ___ftadd (ARG)
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4367
                                             56 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3295
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _send_answer_to_update                                2     2      0   18929
                                             16 BANK1      1     1      0
                 _dBm_to_mW_ufixed16
           _encode_ufixed16_variable
              _encode_uint8_variable
                             _memcpy
                      _sendHIDBinary
 ---------------------------------------------------------------------------------
 (2) _sendHIDBinary                                        6     3      3    9302
                                             10 BANK1      6     3      3
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _encode_uint8_variable                               15     3     12    1382
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _encode_ufixed16_variable                            15     3     12    1450
                                              0 BANK1     15     3     12
 ---------------------------------------------------------------------------------
 (2) _dBm_to_mW_ufixed16                                   5     1      4    1005
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (1) _sendHIDText                                         10     8      2    3558
                                              7 BANK1     10     8      2
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _decode_variable                                     22    12     10    6629
                                             10 BANK1     22    12     10
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6    5790
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _dBm_to_mW                                            3     1      2      31
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK1      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0      34
                                              0 BANK1      2     2      0
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                31    27      4  308644
                                            125 BANK1     12     8      4
                                              0 BANK3     19    19      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiMAC_SendPacket
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                               0     0      0  217277
                          _MiWiTasks
 ---------------------------------------------------------------------------------
 (1) _MiWiTasks                                           51    51      0  217277
                                             74 BANK1     51    51      0
              _AddNodeToNetworkTable
                    _BroadcastJitter
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                   _MiMAC_SendPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                       _RouteMessage
               _SearchForLongAddress
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
                _UnicastShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _UnicastShortAddress                                  2     0      2   66740
                                             72 BANK1      2     0      2
                       _RouteMessage
 ---------------------------------------------------------------------------------
 (3) _RouteMessage                                        11     6      5   66408
                                             61 BANK1     11     6      5
                   _MiMAC_SendPacket
              _SearchForShortAddress
                         _SendBeacon
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendBeacon                                           1     1      0   21293
                      _SendMACPacket
 ---------------------------------------------------------------------------------
 (4) _SendMACPacket                                        4     1      3   21293
                                             57 BANK1      4     1      3
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                    10     4      6   20160
                                             47 BANK1     10     4      6
                            _CCM_Enc
                           _TxPacket
 ---------------------------------------------------------------------------------
 (6) _TxPacket                                            24    23      1    4859
                                             10 BANK1     24    23      1
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (7) _WriteFIFO                                            3     3      0     133
                                              2 BANK1      3     3      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (6) _CCM_Enc                                             11     5      6    9189
                                             36 BANK1     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (2) _MiMAC_ReceivedPacket                                20    20      0   11429
                                             51 BANK1     20    20      0
                            _CCM_Dec
                       _MiWi_TickGet
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        7     3      4     400
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _CCM_Dec                                             15     9      6    9189
                                             36 BANK1     15     9      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (7) _CTR                                                 13     6      7    4021
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (7) _CBC_MAC                                             13     6      7    4021
                                             23 BANK1     13     6      7
                            ___awdiv
                             _encode
 ---------------------------------------------------------------------------------
 (8) _encode                                              23    19      4    1094
                                              0 BANK1     23    19      4
 ---------------------------------------------------------------------------------
 (2) _BroadcastJitter                                     18    18      0     872
                                             10 BANK1     18    18      0
                       _MiWi_TickGet
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     336
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _AddNodeToNetworkTable                                4     4      0    1034
                                              6 BANK1      4     4      0
               _SearchForLongAddress
              _SearchForShortAddress
               _findNextNetworkEntry
 ---------------------------------------------------------------------------------
 (2) _findNextNetworkEntry                                 1     1      0     130
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SearchForShortAddress                                3     3      0     192
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SearchForLongAddress                                 6     6      0     322
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (2) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_StartConnection                                9     4      5   16191
                                             65 BANK1      9     4      5
               _MiApp_NoiseDetection
                   _MiApp_SetChannel
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiApp_NoiseDetection                                36    28      8   10209
                                             29 BANK1     36    28      8
                   _MiApp_SetChannel
            _MiMAC_ChannelAssessment
                       _MiWi_TickGet
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) _MiWi_TickGet                                        10     6      4     400
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ChannelAssessment                             15    15      0    2999
                                             14 BANK1     15    15      0
                       _RegisterRead
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     865
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1485
                                              6 BANK1      8     4      4
                       _RegisterRead (ARG)
 ---------------------------------------------------------------------------------
 (7) _RegisterRead                                         4     4      0     235
                                              2 BANK1      4     4      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _SPIGet                                               0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   6     6      0   11123
                                             22 BANK1      6     6      0
                    _InitSymbolTimer
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetAltAddress                                  4     0      4    1872
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           4     1      3    5074
                                             18 BANK1      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             6     4      2    1033
                                             12 BANK1      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0    3738
                                             10 BANK1      1     1      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3676
                                              7 BANK1      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (7) _SetRFMode                                            1     1      0    1755
                                              6 BANK1      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     2      2    1724
                                              2 BANK1      4     2      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (4) _SPIPut                                               2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ConnectionMode                                 2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptLow                                   19    19      0   29395
                                             30 COMRAM    19    19      0
                     _USBDeviceTasks
                          i1___ftadd
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1___ftadd                                          12     6      6    1201
                                              8 COMRAM    12     6      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (15) i1___ftpack                                          8     3      5     309
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   28194
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i1_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i1_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    3746
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    3     3      0   16300
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   16003
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   12165
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    4244
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    4129
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3746
                                             12 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckHIDRequest
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_LEDUpdateUSBStatus                              0     0      0       0
                       i1_update_LED
 ---------------------------------------------------------------------------------
 (14) i1_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1054
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i1_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     644
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (23) _SYS_InterruptHigh                                  14    14      0    4094
                                             53 BANK0     14    14      0
               _MIWIInterruptHandler
 ---------------------------------------------------------------------------------
 (24) _MIWIInterruptHandler                               19    19      0    4094
                                             34 BANK0     19    19      0
                     i2_MiWi_TickGet
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
                       i2_update_LED
 ---------------------------------------------------------------------------------
 (25) i2_update_LED                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (25) i2_TxPacket                                         24    23      1    1577
                                             10 BANK0     24    23      1
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (26) i2_WriteFIFO                                         3     3      0      91
                                              2 BANK0      3     3      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_SetRFMode                                         1     1      0     291
                                              6 BANK0      1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (27) i2_RegisterSet                                       4     2      2     269
                                              2 BANK0      4     2      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (26) i2_RegisterRead                                      4     4      0     160
                                              2 BANK0      4     4      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIGet                                            0     0      0      23
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (27) i2_SPIPut                                            2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (26) i2_MiWi_TickGet                                     10     6      4     316
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MiApp_ConnectionMode
   _MiApp_DiscardMessage
     _MiMAC_DiscardPacket
   _MiApp_MessageAvailable
     _MiWiTasks
       _AddNodeToNetworkTable
         _SearchForLongAddress
         _SearchForShortAddress
         _findNextNetworkEntry
       _BroadcastJitter
         _MiWi_TickGet
         ___lbmod
       _MiMAC_DiscardPacket
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _MiWi_TickGet
         _isSameAddress
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _MiMAC_SetAltAddress
       _MiWi_TickGet
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SearchForLongAddress
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
       _UnicastShortAddress
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
       _findNextNetworkEntry
   _MiApp_NoiseDetection
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_ChannelAssessment
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
       ___lwdiv
     _MiWi_TickGet
     ___awdiv
       _RegisterRead (ARG)
         _SPIGet
           _SPIPut
         _SPIPut
   _MiApp_ProtocolInit
     _InitSymbolTimer
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_Init
       _DELAY_ms
         ___lmul
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_SetChannel
     _MiMAC_SetChannel
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiApp_StartConnection
     _MiApp_NoiseDetection
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
       _MiMAC_ChannelAssessment
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         ___awdiv
           _RegisterRead (ARG)
             _SPIGet
               _SPIPut
             _SPIPut
         ___lwdiv
       _MiWi_TickGet
       ___awdiv
         _RegisterRead (ARG)
           _SPIGet
             _SPIPut
           _SPIPut
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiMAC_SetAltAddress
   _MiApp_UnicastAddress
     _MiApp_DiscardMessage
       _MiMAC_DiscardPacket
     _MiApp_MessageAvailable
       _MiWiTasks
         _AddNodeToNetworkTable
           _SearchForLongAddress
           _SearchForShortAddress
           _findNextNetworkEntry
         _BroadcastJitter
           _MiWi_TickGet
           ___lbmod
         _MiMAC_DiscardPacket
         _MiMAC_ReceivedPacket
           _CCM_Dec
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _MiWi_TickGet
           _isSameAddress
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _MiMAC_SetAltAddress
         _MiWi_TickGet
         _RouteMessage
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
           _SearchForShortAddress
           _SendBeacon
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SearchForLongAddress
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
         _UnicastShortAddress
           _RouteMessage
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
             _SearchForShortAddress
             _SendBeacon
               _SendMACPacket
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                     _CTR
                       ___awdiv
                         _RegisterRead (ARG)
                           _SPIGet
                             _SPIPut
                           _SPIPut
                       _encode
                   _TxPacket
                     _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
             _SendMACPacket
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                   _CTR
                     ___awdiv
                       _RegisterRead (ARG)
                         _SPIGet
                           _SPIPut
                         _SPIPut
                     _encode
                 _TxPacket
                   _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
         _findNextNetworkEntry
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
   _MiMAC_SetPower
     _RegisterSet
       _SPIPut
   _MiWiTasks
     _AddNodeToNetworkTable
       _SearchForLongAddress
       _SearchForShortAddress
       _findNextNetworkEntry
     _BroadcastJitter
       _MiWi_TickGet
       ___lbmod
     _MiMAC_DiscardPacket
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _MiWi_TickGet
       _isSameAddress
     _MiMAC_SendPacket
       _CCM_Enc
         _CBC_MAC
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
         _CTR
           ___awdiv
             _RegisterRead (ARG)
               _SPIGet
                 _SPIPut
               _SPIPut
           _encode
       _TxPacket
         _MiWi_TickGet
         _RegisterRead
           _SPIGet
             _SPIPut
           _SPIPut
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
         _WriteFIFO
           _SPIPut
     _MiMAC_SetAltAddress
     _MiWi_TickGet
     _RouteMessage
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
       _SearchForShortAddress
       _SendBeacon
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SearchForLongAddress
     _SearchForShortAddress
     _SendBeacon
       _SendMACPacket
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
     _SendMACPacket
       _MiMAC_SendPacket
         _CCM_Enc
           _CBC_MAC
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
           _CTR
             ___awdiv
               _RegisterRead (ARG)
                 _SPIGet
                   _SPIPut
                 _SPIPut
             _encode
         _TxPacket
           _MiWi_TickGet
           _RegisterRead
             _SPIGet
               _SPIPut
             _SPIPut
           _RegisterSet
             _SPIPut
           _SetRFMode
             _RegisterSet
               _SPIPut
           _WriteFIFO
             _SPIPut
     _UnicastShortAddress
       _RouteMessage
         _MiMAC_SendPacket
           _CCM_Enc
             _CBC_MAC
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
             _CTR
               ___awdiv
                 _RegisterRead (ARG)
                   _SPIGet
                     _SPIPut
                   _SPIPut
               _encode
           _TxPacket
             _MiWi_TickGet
             _RegisterRead
               _SPIGet
                 _SPIPut
               _SPIPut
             _RegisterSet
               _SPIPut
             _SetRFMode
               _RegisterSet
                 _SPIPut
             _WriteFIFO
               _SPIPut
         _SearchForShortAddress
         _SendBeacon
           _SendMACPacket
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
                 _CTR
                   ___awdiv
                     _RegisterRead (ARG)
                       _SPIGet
                         _SPIPut
                       _SPIPut
                   _encode
               _TxPacket
                 _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
         _SendMACPacket
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
               _CTR
                 ___awdiv
                   _RegisterRead (ARG)
                     _SPIGet
                       _SPIPut
                     _SPIPut
                 _encode
             _TxPacket
               _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
     _findNextNetworkEntry
   _SYSTEM_Initialize
     _RtccWrOn
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBTransferOnePacket
   _dBm_to_mW
   _decode_variable
     _memcpy
   _memcpy
   _sendHIDBinary
     _USBTransferOnePacket
     _memcpy
   _sendHIDText
     _USBTransferOnePacket
   _send_answer_to_update
     _dBm_to_mW_ufixed16
     _encode_ufixed16_variable
     _encode_uint8_variable
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_complete_update
     ___ftadd
       ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     _dBm_to_mW_ufixed16
     _encode_ufixed16_variable
     _encode_uint8_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       _frexp
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_network_register
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _send_periodic_update
     ___ftadd
       ___ftpack
     ___ftmul
       ___ftadd (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
           ___ftadd
             ___ftpack
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___ftneg
       ___ftadd (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
         ___ftadd
           ___ftpack
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftpack
         _frexp
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     _encode_ufixed16_variable
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
       ___ftadd
         ___ftpack
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftpack
       _frexp
     _memcpy
     _sendHIDBinary
       _USBTransferOnePacket
       _memcpy
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _dBm_to_mW (ARG)
     _isdigit (ARG)
   _strcpy
   _timer_reset
   _update_LED
   _update_variable
     _MiMAC_SetPower
       _RegisterSet
         _SPIPut
     _RtccWrOn
     _labelcmp
     _mW_ufixed16_to_dBm

 _SYS_InterruptLow (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_update_LED
               _USBCheckHIDRequest
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               i1_update_LED
             _USBCheckHIDRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             i1_update_LED
           _USBCheckHIDRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_update_LED
         _USBCheckHIDRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         i1_update_LED
       _USBCheckHIDRequest
     i1_USBDeviceInit
       i1_memset
   i1___ftadd
     i1___ftpack
   i1_update_LED

 _SYS_InterruptHigh (ROOT)
   _MIWIInterruptHandler
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_SPIGet
       i2_SPIPut
     i2_TxPacket
       i2_MiWi_TickGet
       i2_RegisterRead
         i2_SPIGet
           i2_SPIPut
         i2_SPIPut
       i2_RegisterSet
         i2_SPIPut
       i2_SetRFMode
         i2_RegisterSet
           i2_SPIPut
       i2_WriteFIFO
         i2_SPIPut
     i2_update_LED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     240      36       17.3%
BIGRAMh            180      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      40      14       25.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     1F      E3      12       88.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     90      FB       7       98.0%
BITBANK13           D0      0       0      31        0.0%
BANK13              D0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5D       1       98.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     500       8        0.0%
DATA                 0      0     740       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 04 10:59:16 2016

                              i2_TxPacket 737A                              ___altoft@exp 012B  
                              _USB_SD_Ptr 20C3                                i1___ftpack A7BA  
                    ?_MiMAC_DiscardPacket 0001                              _UPTIME_LABEL 21CD  
                          ?_isSameAddress 0100                              _RoutingTable 0071  
                           ___altoft@sign 012C                                        l31 BB08  
                                      l18 A8F4                                        l19 A8E0  
                                      l29 BAFE                                        l62 B132  
                            ___awdiv@sign 010B                    ??_MiApp_NoiseDetection 0125  
                                      bsr 000FE0                             _USBDeviceInit 7BAC  
                     ___wmul@multiplicand 0102                        _USBCheckHIDRequest 939E  
                     MiApp_ProtocolInit@i 011B                         _ActiveScanResults 0200  
                            __CFG_CP0$OFF 000000                              ___ftadd@exp1 0113  
                            ___ftadd@exp2 0112                                _MiMAC_Init 8398  
    USER_USB_CALLBACK_EVENT_HANDLER@event 000D      USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                            ___ftadd@sign 0111                                       l322 6B8A  
             __end_of_USBStdGetDscHandler 810E                                       l262 76E8  
                                     l263 7730                                       l327 6BF8  
                                     l328 6C54                                       l460 8DAE  
                                     l356 5B78                                       l383 8AB2  
                                     l641 3B08                            ?i2_RegisterSet 00A5  
                                     l486 8972                                       l670 296A  
                                     l495 7EB8                                       l904 8CE4  
                                     l753 37BE                                       l746 3564  
                                     l907 8D0C                                       l691 2CC6  
                                     l667 28D4                                       l940 BA0E  
                                     l692 2CCA                                       _BDT 000D00  
                                     l790 3C02                                       l774 39D6  
                                     l758 3788                                       l769 399A  
                                     l697 2D8A                              i1___ftadd@f1 0009  
                            i1___ftadd@f2 000C                                       l899 8C32  
                                     _CTR 8D46                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _MTP 01AD                                       _UIR 000F62  
                  _APP_LEDUpdateUSBStatus B7DA                                       _key 02F1  
                              _USBSuspend BA82                           __end_of_CBC_MAC 92A0  
             __end_of_MiMAC_SetAltAddress BBAE                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                    __end_ofi1_update_LED B444                            _USBDeviceTasks 810E  
                     ?_USBCheckHIDRequest 0001                           __end_of_CCM_Dec 7FC0  
                          _USBDeviceState 004B        encode_ufixed16_variable@m_writable 010E  
                         __end_of_CCM_Enc 89CC            __end_of_UPDATE_FREQUENCY_LABEL 21CD  
                             i2_WriteFIFO B75A                     ??_USBCtrlTrfRxService 0001  
          __size_of_MiApp_StartConnection 010C                  USBEnableEndpoint@options 0009  
              __end_of_mW_ufixed16_to_dBm 9EEC                                      ?_CTR 0117  
           __end_of_MiApp_StartConnection 9196                                      CTR@i 0122  
                                    CTR@j 0123                    ??_send_complete_update 0147  
                                    l1014 5DE6                                      l1024 5FF0  
                                    l1033 6166                                      l1019 5E42  
                                    l1222 7C22                                      l2028 A962  
                                    l2038 A246                                      l2161 5606  
                                    l1283 B8BE                                      l1284 B8BC  
                                    l2508 6A7C                USBConfigureEndpoint@handle 0007  
                                    l2445 9056                                      l2517 6AA6  
                                    l1813 9824                                      l2550 B9C2  
                                    l1751 3ECE                                      l1735 3E04  
                                    l2456 9390                                      l1760 4212  
                                    l1818 BB3A                                      l1860 B394  
                                    l2653 B076                                      l2493 6944  
                                    l1749 3EC2                                      l2663 B318  
                                    l2497 697E                                      l1777 4632  
                                    l1858 B386                                      l2499 69A6  
                                    l1779 4636                                      l1977 A704  
                         ?i2_RegisterRead 0001                                      STR_1 23B5  
                                    STR_2 2304                                      STR_3 22E3  
                                    STR_4 226C                                      STR_5 237D  
                                    STR_6 2364                                      STR_7 2345  
                                    STR_8 23A4                                      STR_9 2325  
                                    i2l31 BB24                                      i2l29 BB1A  
                                    i2l62 B1A6                     ??_USBCtrlTrfTxService 0001  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
   MiMAC_ChannelAssessment@AssessmentMode 0118    USBStdFeatureReqHandler@current_ep_data 0018  
               MiApp_StartConnection@Mode 0147                                      _pDst 003C  
              MiMAC_SetChannel@offsetFreq 0107                                      _main 3D4A  
                            ___ftpack@arg 0100                              ___ftpack@exp 0103  
                                    _role 01CA                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach B88E                                      btemp 005E  
                                    pclat 000FFA                           _update_variable 9774  
              MiApp_UnicastAddress@handle 03D6                     MiApp_ProtocolInit@MIP 0118  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 01E4                             __CFG_IESO$OFF 000000  
                        __end_of_DELAY_ms A912                      ??_USBCheckHIDRequest 0001  
               do_NETWORK_REGISTER@F10229 0040                      __end_ofi2_update_LED B4A4  
              __end_of_USBCheckStdRequest 9774                    ??_USBCtrlTrfOutHandler 0003  
                          _InitConfigRegs 1FF5                              ___ftmul@cntr 0145  
          UnicastShortAddress@DestAddress 0148           MiApp_NoiseDetection@channelMask 012E  
                            ___param_bank 000000                              ___ftmul@sign 0146  
               ??_USBStdFeatureReqHandler 0015                              _USBOutHandle 01B7  
                   ??_MiMAC_DiscardPacket 0100                                     ??_CTR 011E  
                 decode_variable@p_buffer 010A            MiApp_StartConnection@RSSIValue 0149  
                        CCM_Enc@headerLen 0126                  ??_USBStdGetStatusHandler 0001  
                            ___fttol@exp1 0122                              ___fttol@lval 011E  
                          ?_USBDeviceInit 0001              __end_of_MiApp_DiscardMessage BB8C  
      MiApp_NoiseDetection@OptimalChannel 013A                             __CFG_PLLDIV$2 000000  
                                   l20100 5DF6                                     l20110 5E32  
                                   l20104 5E00                                     l21002 97B6  
                                   l20300 7A64                                     l20204 6020  
                                   l20302 7A6A                                     l20214 60AC  
                                   l20150 5EBC                                     l20320 7AD8  
                                   l20312 7AA6                                     l20330 7B02  
                                   l20306 7A74                                     l20218 60B0  
                                   l20324 7AE2                                     l20500 7C30  
                                   l20262 6180                                     l20158 5F04  
                                   l20094 5DDC                                     l21046 9852  
                                   l20272 6196                                     l20512 7C66  
                                   l20290 7A36                                     l20282 6222  
                                   l20194 600A                                     l20522 7CD6  
                                   l20444 90EE                                     l20428 9090  
                                   l20516 7C70                                     l20508 7C48  
                                   l21084 7974                                     l20700 5660  
                                   l20294 7A40                                     l20630 5400  
                                   l20712 569C                                     l20624 53E4  
                                   l20570 9F32                                     l21098 79EC  
                                   l20714 56A2                                     l20730 56F0  
                                   l20626 53F6                                     l20618 53C6  
                                   l20468 9182                                     l20484 7BF8  
                                   l20564 9EF6                                     l20740 574A  
                                   l20644 54B8                                     l20636 5438  
                                   l20556 B8D2                                     l21612 3DA4  
                                   l20582 9F6E                                     l20750 577A  
                                   l20742 5754                                     l20670 5574  
                                   l20654 54F0                                     l20646 54BE  
                                   l20558 B8DE                                     l21702 4032  
                                   l21630 3DFC                                     l21622 3DEC  
                                   l20488 7C02                                     l20920 A2C4  
                                   l20576 9F56                                     l20568 9F28  
                                   l20760 57AE                                     l20736 5712  
                                   l20728 56DE                                     l20672 558C  
                                   l20664 5556                                     l20656 54FC  
                                   l20912 BB3E                                     l21616 3DBA  
                                   l17002 6BDE                                     l20666 5562  
                                   l20658 5502                                     l20682 55CA  
                                   l21650 3E80                                     l17100 AF88  
                                   l17020 6C6A                                     l17012 6C3A  
                                   l20940 A30A                                     l20932 A2EE  
                                   l20924 A2D2                                     l20916 A2B6  
                                   l20772 57F4                                     l21900 47D2  
                                   l21652 3E8A                                     l17006 6C06  
                                   l20774 57FA                                     l20782 58A6  
                                   l20766 57D4                                     l20758 57A2  
                                   l20694 563E                                     l20678 55B2  
                                   l20790 58D6                                     l21902 47FA  
                                   l21822 4492                                     l21806 43E6  
                                   l21750 41E0                                     l21670 3EE2  
                                   l21646 3E4E                                     l17016 6C60  
                                   l18000 2694                                     l20944 A318  
                                   l20936 A2FC                                     l20928 A2E0  
                                   l20776 584C                                     l20784 58B8  
                                   l20792 58F6                                     l21656 3E98  
                                   l17050 6D3C                                     l18010 26B0  
                                   l20954 A334                                     l20698 565A  
                                   l21826 44D8                                     l21850 45C4  
                                   l17204 7FB6                                     l17052 6D44  
                                   l17060 6D84                                     l17044 6D04  
                                   l17028 6C9C                                     l18004 26A0  
                                   l20948 A326                                     l20972 9500  
                                   l20788 58CA                                     l21852 45E8  
                                   l21668 3ED2                                     l17038 6CD0  
                                   l17222 4830                                     l18102 2926  
                                   l18006 26A6                                     l18030 2784  
                                   l20990 9574                                     l20966 94E8  
                                   l21846 456E                                     l21782 42FA  
                                   l17208 7FBC                                     l17072 AFB2  
                                   l17400 4CAE                                     l17320 4B06  
                                   l18200 2C18                                     l20984 955C  
                                   l21872 4686                                     l21856 461A  
                                   l17082 AF0A                                     l17154 B5B6  
                                   l17058 6D78                                     l17410 4CD8  
                                   l17234 4882                                     l17242 48A8  
                                   l18122 29C4                                     l18114 29A8  
                                   l18018 26D6                                     l21858 4624  
                                   l21786 4350                                     l16700 A1CA  
                                   l17500 9DB0                                     l17164 B5F8  
                                   l17308 4AB6                                     l17260 4944  
                                   l18300 2EC6                                     l18220 2CA0  
                                   l18108 2976                                     l18028 2778  
                                   l21884 473C                                     l19030 83FA  
                                   l19014 83C4                                     l17086 AF14  
                                   l17182 7E92                                     l17174 7E70  
                                   l17158 B5C0                                     l17422 4D40  
                                   l17406 4CCE                                     l17326 4B0A  
                                   l17254 4940                                     l17238 4886  
                                   l18206 2C36                                     l18118 29BA  
                                   l18150 2A92                                     l21894 47A4  
                                   l21878 46B6                                     l19024 83EA  
                                   l16704 A1D8                                     l17512 9E16  
                                   l17504 9DBA                                     l17520 9E22  
                                   l17096 AF82                                     l16800 8D72  
                                   l17168 B5FE                                     l17600 5A38  
                                   l17416 4D30                                     l17352 4BB4  
                                   l18400 33CE                                     l18160 2AD2  
                                   l18128 2A30                                     l18080 2884  
                                   l19050 846C                                     l19042 8438  
                                   l19026 83F0                                     l19018 83CE  
                                   l16730 B146                                     l19122 7152  
                                   l19106 7070                                     l16650 6DD8  
                                   l17194 7F3E                                     l17178 7E7A  
                                   l17610 5AAA                                     l17418 4D36  
                                   l17346 4B9A                                     l17290 49F2  
                                   l17282 49D2                                     l18330 2FF4  
                                   l18314 2F52                                     l18226 2CB0  
                                   l18146 2A88                                     l18234 2CD2  
                                   l18242 2D2C                                     l18082 28A4  
                                   l21898 47C2                                     l19060 84A4  
                                   l19036 8416                                     l16708 A1EC  
                                   l16716 B10A                                     l19124 7156  
                                   l17516 9E1C                                     l16804 8D7C  
                                   l17188 7ED4                                     l16900 7774  
                                   l17380 4C54                                     l17428 4D98  
                                   l17372 4BF6                                     l17444 4DEE  
                                   l17356 4BBA                                     l18500 3606  
                                   l18420 3450                                     l18332 2FFA  
                                   l18172 2B4C                                     l18164 2ADC  
                                   l18236 2CF2                                     l18068 283C  
                                   l18084 28A8                                     l19212 A254  
                                   l19054 8476                                     l19038 842E  
                                   l19134 718E                                     l17470 B7A2  
                                   l17534 B70C                                     l17526 B6E4  
                                   l17710 A37E                                     l16654 6DE2  
                                   l16814 8DD0                                     l16830 8E58  
                                   l17198 7F48                                     l17630 5B84  
                                   l17462 4E5E                                     l17438 4DE4  
                                   l17390 4C96                                     l17294 49FC  
                                   l18414 3440                                     l18406 342A  
                                   l18190 2BCA                                     l19310 9E42  
                                   l19048 8466                                     l19136 7192  
                                   l17480 B7D0                                     l17720 A418  
                                   l16664 6F8A                                     l16840 91C4  
                                   l17640 5BDC                                     l17616 5B00  
                                   l16912 7796                                     l17384 4C5E  
                                   l17368 4BEC                                     l17288 49EC  
                                   l18416 3446                                     l18408 3430  
                                   l18344 3064                                     l18336 3004  
                                   l18272 2DE0                                     l18184 2BB8  
                                   l18264 2DB8                                     l19144 B976  
                                   l19160 AB3A                                     l17800 8F98  
                                   l19320 9E5A                                     l16770 AB92  
                                   l16690 A194                                     l16682 A16A  
                                   l17490 9D64                                     l17474 B7AC  
                                   l17714 A396                                     l16850 91F2  
                                   l16818 8DDA                                     l17634 5B8E  
                                   l17618 5B0C                                     l17570 590A  
                                   l17394 4C9C                                     l17378 4C4E  
                                   l18530 370E                                     l18514 3662  
                                   l18426 3482                                     l18354 30BA  
                                   l18258 2DA2                                     l18194 2BD4  
                                   l18098 291C                                     l19170 8B02  
                                   l19250 A970                                     l19154 AAFE  
                                   l19330 9E72                                     l17548 A434  
                                   l16692 A19A                                     l16676 A154  
                                   l17900 8A7C                                     l17484 B7D6  
                                   l17740 8C82                                     l17732 8C50  
                                   l16836 91BA                                     l16828 8E54  
                                   l17652 5BFA                                     l17644 5BE2  
                                   l16924 77C6                                     l16908 778A  
                                   l16940 7868                                     l18444 34CA  
                                   l18364 3120                                     l18348 3070  
                                   l18188 2BC4                                     l19148 B988  
                                   l19180 8B84                                     l19172 8B1C  
                                   l17812 900A                                     l17804 8FAC  
                                   l19340 9E8A                                     l16782 ABD4  
                                   l16774 ABA8                                     l17910 8AC2  
                                   l17494 9D6E                                     l16854 91FC  
                                   l16846 91E4                                     l17670 5CD0  
                                   l17574 5914                                     l16950 88CA  
                                   l16934 7850                                     l18542 3744  
                                   l18526 36F0                                     l18462 355A  
                                   l18390 338E                                     l18358 30C4  
                                   l18366 31CA                                     l18278 2E14  
                                   l19182 8B9E                                     l19174 8B36  
                                   l19190 8BEC                                     l19158 AB30  
                                   l17822 9060                                     l17814 903A  
                                   l17806 8FBA                                     l19414 7D80  
                                   l19350 9EA0                                     l16792 AC00  
                                   l16688 A188                                     l17840 B032  
                                   l19096 6FD6                                     l17744 8C8C  
                                   l17752 8D40                                     l17728 8C40  
                                   l16864 927A                                     l16848 91EC  
                                   l17680 5D56                                     l17648 5BF0  
                                   l17584 5A16                                     l16960 8924  
                                   l16872 76E2                                     l18704 3C4E  
                                   l18616 3960                                     l18624 3976  
                                   l18480 35AE                                     l18448 350C  
                                   l19184 8BB8                                     l19176 8B50  
                                   l17816 9048                                     l17808 8FEA  
                                   l19432 7DEC                                     l19408 7D46  
                                   l19360 9EB8                                     l16786 ABEA  
                                   l16778 ABBE                                     l17850 B068  
                                   l17842 B038                                     l19098 6FDE  
                                   l17658 5C66                                     l17682 5D5E  
                                   l17594 5A28                                     l16970 894C  
                                   l16962 892A                                     l16954 88D4  
                                   l16938 7864                                     l18634 39CC  
                                   l18562 37EC                                     l18538 373A  
                                   l18394 33BE                                     l18298 2EA4  
                                   l19186 8BD2                                     l19178 8B6A  
                                   l19442 7E2A                                     l19282 930E  
                                   l19274 92DC                                     l19370 9ED0  
                                   l16868 9292                                     l17668 5CAE  
                                   l17596 5A2E                                     l17588 5A1C  
                                   l16876 76FE                                     l18716 3C8A  
                                   l18708 3C58                                     l18652 3A24  
                                   l18564 37F2                                     l18548 3776  
                                   l18492 35E2                                     l18476 35A8  
                                   l18484 35C0                                     l18396 33C4  
                                   l17828 907C                                     l19428 7DCE  
                                   l18812 698C                                     l19460 B2E0  
                                   l19380 9EE8                                     l17838 B026  
                                   l16798 8D6C                                     l17694 5DB2  
                                   l16966 8934                                     l18726 3CD4  
                                   l18662 3AC2                                     l18590 3898  
                                   l18574 382E                                     l17942 2470  
                                   l18670 3AEC                                     l19438 7E0C  
                                   l18806 6952                                     l19278 92F0  
                                   l19462 B2E6                                     l17792 B0B8  
                                   l16976 898E                                     l16896 7758  
                                   l16984 6B50                                     l18648 3A0C  
                                   l18584 3888                                     l18568 37FC  
                                   l17936 2460                                     l18840 6A34  
                                   l19392 BA78                                     l18738 BAF0  
                                   l17882 8A28                                     l17874 89F2  
                                   l17698 5DB8                                     l18682 3B34  
                                   l18658 3AA6                                     l18586 388E  
                                   l18666 3AC8                                     l17970 25A0  
                                   l17962 257A                                     l17946 247C  
                                   l18674 3B10                                     l18754 9994  
                                   l18746 9960                                     l18834 6A0C  
                                   l18818 699C                                     l18930 8334  
                                   l19466 B30A                                     l19458 B2D4  
                                   l17788 B092                                     l16996 6BAA  
                                   l17956 254C                                     l19548 862A  
                                   l18780 B36C                                     l18836 6A1A  
                                   l18828 69DE                                     l18940 836A  
                                   l18908 828E                                     l17886 8A62  
                                   l18678 3B2A                                     l17982 260A  
                                   l18774 B334                                     l18766 99FA  
                                   l18790 A9E4                                     l18854 6AD0  
                                   l18846 6A62                                     l18838 6A28  
                                   l18926 8320                                     l17896 8A76  
                                   l17888 8A68                                     l18688 3BFC  
                                   l17984 2610                                     l17976 25D4  
                                   l18792 A9F4                                     l18864 6B1E  
                                   l18848 6A70                                     l18944 8386  
                                   l18936 8350                                     l18938 8360  
                                   l18874 AE08                                     l17996 268E  
                                   l17988 261A                                     l18892 9D16  
                                   l18888 9CD6                                     l18898 9D5A  
                                   l19954 B3B6                                     l19962 B3C8  
                                   l19948 B3A0                                     l18996 B862  
                                   ?_main 0001                           __end_of___awdiv A1F6  
                         __end_of___ftadd 6B44                                     STR_10 22BC  
                                   STR_11 21D5                                     STR_12 2240  
                                   STR_13 220C                                     STR_14 2295  
                                   STR_15 23BD                                     STR_16 2393  
                         __end_of___lbmod B718         __size_of_USBCtrlEPServiceComplete 00F4  
                         __end_of___ftneg B9D0                 _send_periodic_update$6064 0148  
               _send_periodic_update$6065 014B                 _send_periodic_update$6066 014E  
               _send_periodic_update$6067 0151                           __end_of___ftmul 7E6A  
                         ___awdiv@divisor 0108                                     u20141 2798  
                                   u20151 27AE                                     u21200 3D44  
                                   _T1CON 000FCD                                     u20401 2D20  
                  __end_of_USBDeviceTasks 8254                                     u21140 3BDE  
                                   u21301 6910                           __end_of___fttol 8398  
                                   u21250 B35E                                     u22211 7D22  
                                   u20524 2F28                                     u20525 2F22  
                                   u21510 AE3A                                     u22231 7D5C  
                                   u21257 B354                                     u23130 60A4  
                                   u21291 68F2                                     u21518 AE3E  
                                   u21551 826A                                     u20824 3598  
                                   u20825 3592                                     u23065 5E8A  
                                   u23066 5E8E                                     u21570 82B4  
               ?_USBCtrlEPServiceComplete 0001                                     u23180 621A  
                                   u21900 AB20                                     u23255 7B22  
                                   u21575 82AA                                     u23256 7B26  
                                   u21760 BB7E                                     u23450 9F18  
                                   u21780 7004                                     u20884 36E0  
                                   u21908 AB24                                     u20885 36DA  
                                   u18015 6E38                                     u25207 40E0  
                                   u21785 6FF8                                     u18025 6EC0  
                                   u23801 6606                                     u25217 412E  
                                   u23458 9F1C                                     u18035 6F1A  
                                   u25227 416C                                     u21980 9300  
                                   u24620 3E70                                     u25237 41B4  
                                   u25157 3E40                                     u25247 736E  
                                   u25167 3F50                                     u24800 4672  
                                   u25257 640A                                     u23761 62F0  
                                   u25177 3FD0                                     u24810 4674  
                                   u18155 B544                                     u25267 664C  
                                   u23771 635A                                     u25187 4024  
                                   u18156 B546                                     u24740 460A  
                                   u24628 3E74                                     u18165 B550  
                                   u23845 951A                                     u25277 7A10  
                                   u23941 7952                                     u23781 63C4  
                                   u24821 4698                                     u25197 4066  
                                   u18166 B552                                     u19054 4C84  
                                   u18175 B74A                                     u19055 4C7C  
                                   u23871 9584                                     u23791 659C  
                                   u19320 5A00                                     u18176 B74C  
                                   u18185 B756                                     u23961 79C4  
                                   u18186 B758                                     u18610 AFC0  
                         __end_of___lwdiv B080                                     u19155 4E04  
                                   u23971 7328                                     u19156 4E08  
                                   u24748 460E                                     u18480 6B5E  
                                   u18628 AFC4                                     u18814 48BE  
                                   u18815 48B8                                     u18498 6B62  
                                   u18924 4A82                                     u18844 4916  
                                   u19900 23EC                                     u18925 4A7C  
                                   u18845 4910                                     u18855 495A  
                                   u18856 495E                                     u19920 2424  
                                   u17985 B638                                     u18945 4B20  
                                   u17986 B63A                                     u18946 4B24  
                                   u17995 B644                                     u18795 4846  
                                   u19915 240C                                     u17996 B646  
                                   u18796 484A                                     u19908 23F0  
                                   u19917 2410                                     u18894 4A2A  
                                   u19791 89E4                                     u18895 4A24  
                                   u19945 244A                           __end_of___lwmod B322  
                                   u19938 2428                                     u18995 4BDA  
                                   u19947 244E                                     u18996 4BDE  
                                   u19991 254A                                     u19975 252E  
                                   u19977 2532                                     i2l410 4EF8  
                                   i2l421 4FD0                                     i2l262 738C  
                                   i2l263 73D2                                     i2l416 4F54  
                                   i2l419 5024                                     _UADDR 000F38  
                         ___awdiv@counter 010A                  __size_of_InitSymbolTimer 0018  
                    BroadcastJitter@range 011A                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _RTCEN 0079FF  
                                   _RTCOE 0079FA                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                            i1___ftadd@exp1 0014  
                          i1___ftadd@exp2 0013                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                 __end_of_BroadcastJitter A424                                     _USTAT 000F64  
                          i1___ftadd@sign 0012                                i1memset@p1 0001  
      __size_of_USBCtrlEPAllowStatusStage 00C4                          __end_ofi2_SPIGet BBA0  
                     ___lmul@multiplicand 0104                                _MiWiSeqNum 01C3  
                        __end_ofi2_SPIPut BB2C                            _myShortAddress 01F2  
                         _decode_variable 949A                            __CFG_FCMEN$OFF 000000  
           __size_of_MIWIInterruptHandler 0550           __end_of_USBCtrlEPAllowDataStage AAF4  
                             _BestChannel 01BE                           __end_of_myMODEL FFF5  
                                   _sd000 21D1                                     _sd001 20CF  
                                   _sd002 2103              MiMAC_ChannelAssessment@count 011A  
           __size_of_MiApp_ConnectionMode 002C                           __end_of_dpowers 20BB  
                                   _myUID FFF6                                     _floor 92A0  
                                   _m_var 01DE                                     _frexp ADE6  
           __size_of_MiApp_UnicastAddress 046A                                     _errno 0036  
                         __end_of_isdigit BA82                             ___ftpack@sign 0104  
                    _send_periodic_update 71A0                                     main@x 03DE  
                                   tablat 000FF5                  __end_of_SYS_InterruptLow 01E4  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                              ?_sendHIDText 0107  
                                   status 000FD8                           __end_of_sprintf 5904  
       __size_of_encode_ufixed16_variable 00BA                        __size_ofi1___ftadd 01AC  
                        __end_ofi1_memset BA58                 ?_encode_ufixed16_variable 0100  
                  __end_of_InitConfigRegs 2035                            i1___ftpack@arg 0001  
                          i1___ftpack@exp 0004                 __size_of_MiMAC_SetChannel 00BA  
            __size_of_USBStdSetCfgHandler 00E2                           __initialization 9AF2  
                         ??_isSameAddress 0104                               ?i2_TxPacket 00AD  
                       BroadcastJitter@t1 0112                         BroadcastJitter@t2 0116  
                   _AddNodeToNetworkTable 8C22                 __size_of_MiMAC_SendPacket 0254  
                            __end_of_main 480E                   __size_of_MiMAC_SetPower 003A  
                             ?i1___ftpack 0001                    __size_of_SendMACPacket 007C  
                          TxPacket@status 011E                                 ??_CBC_MAC 011E  
                        __end_of_ScanTime 2071                           ??i2_RegisterSet 00A7  
               __size_of_USBCtrlEPService 00CE                                 ??_CCM_Dec 012A  
                               ??_CCM_Enc 012A                             ??_RegisterSet 0104  
                                  ??_main 0189                             ___fttol@sign1 011D  
                             ?_MiMAC_Init 0112                            _myMUTA_version FFF2  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
           MiMAC_ChannelAssessment@F10758 02F9                      __end_of_MiWi_TickGet B16A  
                                  CTR@len 0119                                    CTR@key 011A  
                           _IRQ1_Received 0099                               ?_USBSuspend 0001  
                    _SearchForLongAddress 9D5E                   MiApp_SetChannel@channel 010A  
                        __end_of_TxPacket 7880                           i1_USBDeviceInit 84DC  
                        __end_of_RtccWrOn BB70                                _SendBeacon 875C  
       MiApp_ProtocolInit@bNetworkFreezer 0117                      _MiMAC_ReceivedPacket 5904  
                      __size_of_MiWiTasks 1984               _myMUTA_version_absconstaddr 01FFF2  
                         i2SetRFMode@mode 00A9                   __end_of_USBDeviceAttach B8C8  
                 ??_encode_uint8_variable 010C                                    ?_floor 012D  
                                  ?_frexp 0100                          __end_of___altoft AA56  
                           RouteMessage@i 0147                             RouteMessage@j 0145  
                   ?_send_periodic_update 0001            __size_of_send_answer_to_update 019C  
                                  _CCPR1L 000FBB                                    _EECON2 000FA7  
                 __end_of_update_variable 9860                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0106  
                 _MiMAC_ChannelAssessment 89CC             __end_of_send_answer_to_update 7A1C  
                        __end_of___ftpack 908A                      _IncomingFrameCounter 0500  
                                  i1l1222 8542                                    i1l1234 813E  
                                  i1l1308 9608                                    i1l1244 81D8  
                                  i1l1421 A128                                    i1l1245 8250  
                                  i1l1246 81EA                                    _MACSeq 01C0  
                                  i1l1450 6682                                    i1l1371 A4EC  
                                  i1l1435 9692                                    i1l1444 96F6  
                                  i1l1374 A57A                                    i1l1375 A4FC  
                                  i1l1376 A502                                    i1l1384 B68A  
                                  i1l2508 7648                                    i1l1469 6848  
                                  i1l2445 A848                                    i1l2517 7664  
                                  i1l1860 B3F4                                    i1l2493 756E  
                                  i1l2497 7598                                    i1l1858 B3E6  
                                  i1l1891 019C                                    i1l1869 014C  
                                  i1l1888 019A                                    i1l1889 0196  
                          __CFG_WDTEN$OFF 000000                                    i2l1860 B454  
                                  i2l1858 B446           ??_APP_DeviceCustomHIDInitialize 000D  
                   BroadcastJitter@jitter 011B                                    _RTCCAL 000F3E  
                          sendHIDText@str 0107                                    _RTCCFG 000F3F  
                                  _PVALUE 2071                                    _RPINR1 000EE1  
                                  _RPOR17 000ED1                                    _SVALUE 2091  
                                  _SPIGet BB8C              i1USBTransferOnePacket@handle 0006  
                                  _SPIPut BAF4                   i2RegisterSet@IRQ0select 00A8  
         MiApp_StartConnection@ChannelMap 0142                   i2RegisterSet@IRQ1select 00A7  
                __end_of_TX_POWER_1_DB_MW 2190                  __end_of_TX_POWER_4_DB_MW 219D  
                              TxPacket@t1 0113                                TxPacket@t2 0117  
                       _StaticSecurityKey 1FEC                        __size_of_SetRFMode 0098  
                       _shortPacketStatus 0054                  __end_of_TX_POWER_7_DB_MW 21C9  
                          __CFG_XINST$OFF 000000                        _myUID_absconstaddr 01FFF6  
                                  _TxData 01C6                          __end_of_labelcmp A70A  
                         USBDeviceTasks@i 001E               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0101                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0108                                    ___ftge 9C96  
                                  ___lmul B080                                    ___wmul B900  
                               ??___awdiv 010A                      MiWiTasks@sourcePANID 0175  
                               ??___ftadd 010E                                 ??___lbmod 0101  
                                  _hasAck 009F                                 ??___ftneg 0138  
                               ??___ftmul 013E                                 ??___fttol 0118  
           MiMAC_ChannelAssessment@result 0112                 __size_of_MiApp_SetChannel 0024  
                               ??___lwdiv 0104                        __size_of_dBm_to_mW 00BA  
                               ??___lwmod 010B                                    _encode 6D98  
                __end_of_TX_POWER_INVALID 21A3                         _USBEnableEndpoint B818  
         __size_of_USBStdGetStatusHandler 00BA                    __end_of_myMUTA_version FFF3  
                                  _memcpy B322                                    _memset B96C  
                                  clear_0 9AFA                                    clear_1 9B0E  
                                  clear_2 9B20                                    clear_3 9B2C  
                                  clear_4 9B38                                    clear_5 9B44  
                                  clear_6 9B50                                    clear_7 9B5C  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 010C  
                            _CCM_Dec$1986 0130                   __end_of_decode_variable 958E  
                   __size_ofi1_update_LED 0060                __p_StaticSecurityKey_const 1FEC  
                      ?_USBEnableEndpoint 0009            __size_of_SearchForShortAddress 0088  
           __end_of_SearchForShortAddress AF8C                                    _strcpy B8C8  
                      decode_variable@var 0116                                    floor@i 0130  
                                  floor@x 012D                     ___ftmul@f3_as_product 0142  
           __size_of_USBTransferOnePacket 00D8                         __end_ofi1___ftadd 76D6  
                   ?_SearchForLongAddress 0001                   __p_myMUTA_version_const FFF2  
              __end_of_dBm_to_mW_ufixed16 8C22                              __pdataCOMRAM 005B  
                               ??_isdigit 0100                              _CCM_Enc$1978 012C  
                        ?_BroadcastJitter 0001                            _openSocketInfo 01CC  
                            __mediumconst 1FF4                     ?_MiMAC_ReceivedPacket 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                    _myMODEL_absconstaddr 01FFF4                                    tblptru 000FF8  
                               ?_DELAY_ms 010C                       ??_USBEnableEndpoint 000A  
                     __end_of_RegisterSet B648                              ?_timer_reset 0001  
                           ?_RegisterRead 0001                       __size_ofi2_TxPacket 01B0  
                               ??_sprintf 0118                         _ReceivedBankIndex 01C5  
                             _CtrlTrfData 000D28                             _SendMACPacket AF8C  
                       ??_InitSymbolTimer 0100                             _CHANNEL_LABEL 21B9  
                            ?i2_SetRFMode 0001                       __size_ofi1___ftpack 00AE  
                    _controlTransferState 004F      MiApp_UnicastAddress@MiWiFrameControl 03D4  
                    __CFG_LS48MHZ$SYS48X8 000000                         _SYSTEM_Initialize 861E  
                         ___lbmod@divisor 0100                      _MiApp_DiscardMessage BB82  
                   __size_ofi2_update_LED 0060                                __accesstop 0060  
                      __size_of_WriteFIFO 0042                   __end_of__initialization 9BBE  
                              ___altoft@c 0123                i1USBTransferOnePacket@data 0002  
                         ___lbmod@counter 0102                              __pbssBIGRAMl 0600  
                              ___ftadd@f1 0108                                ___ftadd@f2 010B  
                              ___ftge@ff1 0100                                ___ftge@ff2 0103  
               __end_of_StaticSecurityKey 1FF4                           i1___ftpack@sign 0005  
         MiMAC_ReceivedPacket@currentTick 013B                        ?_SYSTEM_Initialize 0001  
                     __size_of_MiMAC_Init 0144                             ___rparam_used 000000  
                __size_of_USBStallHandler 0046                  MIWIInterruptHandler@bAck 00D2  
                       CCM_Enc@payloadLen 0127                                ___ftneg@f1 0135  
                  ?_AddNodeToNetworkTable 0001                       __size_of_USBSuspend 002A  
                              ___ftmul@f1 0138                                ___ftmul@f2 013B  
                            i1_update_LED B3E4                          _sendHIDText$4973 010B  
            __end_of_findNextNetworkEntry B7DA                                ___fttol@f1 0114  
                   _ActiveScanResultIndex 01BD                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint B854                         __end_of_MiWiTasks 3D4A  
                               ?i2_SPIGet 0001                             __end_of_sd000 21D5  
                           __end_of_sd001 2103                             __end_of_sd002 2131  
                               ?i2_SPIPut 0001            __size_of_send_network_register 00B0  
                            __pidataBANK1 BBA9                              __pidataBANK2 BBA0  
                     ??_SYSTEM_Initialize 0100             __end_of_send_network_register A7BA  
        __size_of_USBCtrlEPAllowDataStage 009E                     i2RegisterRead@address 00A8  
                           __end_of_myUID FFF8                             __end_of_floor 939E  
                           __end_of_frexp AE76                           _active_protocol 0059  
        MiMAC_ReceivedPacket@FrameCounter 013F             __size_of_USBConfigureEndpoint 0094  
                 __end_ofi1_USBDeviceInit 861E               __end_of_USBCtrlTrfInHandler A138  
                               CTR@nounce 011C                   ?_APP_LEDUpdateUSBStatus 0001  
         MiApp_UnicastAddress@DestAddress 017D                           TxPacket@rssival 0121  
             MiApp_NoiseDetection@maxRSSI 0140               MiApp_NoiseDetection@minRSSI 013E  
                         _ConnectionTable 0600                                 ?i1_memset 0001  
                        ??i2_RegisterRead 00A5                               ?_SendBeacon 0001  
               ??_MiMAC_ChannelAssessment 010E                         __end_of_SetRFMode AC24  
                            ?i2_WriteFIFO 0001                              i2_update_LED B444  
                              ??_DELAY_ms 010E                    ??_send_periodic_update 0147  
                          ??_RegisterRead 0102              __size_of_UnicastShortAddress 0096  
                  __size_of_sendHIDBinary 0098                  ??_USBCtrlTrfSetupHandler 001B  
                          ?_SendMACPacket 0139                                   ??_floor 0130  
                                 ??_frexp 0105                          ?_USBDeviceAttach 0001  
               __end_of_SYSTEM_Initialize 875C                    _USBStdGetStatusHandler A4DE  
                            sprintf@width 0127                 MiWiTasks@destShortAddress 0173  
                        ?_update_variable 0001                     isSameAddress@Address1 0100  
                   isSameAddress@Address2 0102                         __end_of_dBm_to_mW A36A  
                              __pbssBANK0 0060                                __pbssBANK1 0190  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                   ?_MiApp_DiscardMessage 0001               __size_of_MiApp_ProtocolInit 0190  
                                 ?_SPIGet 0001                                   CTR@text 0117  
                                 ?_SPIPut 0001                        RegisterSet@setting 0102  
                          isSameAddress@i 0106                             _m_uptime_days 01B0  
                     i2RegisterRead@value 00A5               __size_of_USBWakeFromSuspend 0030  
                       _m_failed_messages 0032                               _pBDTEntryIn 008B  
                        _MiMAC_SetChannel A424                      __size_of_sendHIDText 00C4  
        __end_of_USBCtrlEPServiceComplete 9682                                CBC_MAC@MIC 011C  
   __end_of_APP_DeviceCustomHIDInitialize B96C    __size_of_APP_DeviceCustomHIDInitialize 0036  
           _APP_DeviceCustomHIDInitialize B936                  MiMAC_SetAltAddress@PANID 0102  
                            CBC_MAC@block 0121                        _mW_ufixed16_to_dBm 9E26  
                              CBC_MAC@len 0119                                CBC_MAC@key 011A  
                               ?_TxPacket 010A                                 ?_RtccWrOn 0001  
                    USBCtrlTrfRxService@i 0001                          _MiMAC_SendPacket 6B44  
                              ??i2_SPIGet 00A5                               _UpF_updated 009E  
                                 ?___ftge 0100                            _MiMAC_SetPower B854  
                              ??i2_SPIPut 00A3                                   ?___lmul 0100  
                          dBm_to_mW@power 0102                                   ?___wmul 0100  
          __end_of_APP_LEDUpdateUSBStatus B818                                   ?_encode 0100  
                   __size_of_MiWi_TickGet 0074                                 ?___altoft 0123  
                                 ?_memcpy 0100                                   _CBC_MAC 9196  
                                 ?_memset 0100                            ___lmul@product 0108  
                              _device_dsc 2177                       ?_mW_ufixed16_to_dBm 0100  
                                 SPIPut@i 0100                                   SPIPut@v 0101  
                               ?___ftpack 0100                          _USBCtrlEPService 9BC8  
                        ?_decode_variable 010A                                   _CCM_Dec 7E6A  
                                 _CCM_Enc 8898                                _ep_data_in 0095  
                  ??_SearchForLongAddress 0100                         __end_of_WriteFIFO B75A  
                                 ?_strcpy 0100                               _RegisterSet B602  
           __size_of_MiApp_NoiseDetection 01EE                                _pUsbBuffer 003E  
             __end_of_USBCtrlTrfRxService 8F7E                        _USBCheckStdRequest 9682  
                         MiWiTasks@j_2532 0172                           MiWiTasks@j_2544 0169  
                         MiWiTasks@j_2488 0171                           MiWiTasks@j_2569 016C  
                                 i1l11000 AAA4                                   i1l11020 98A2  
                                 i1l11004 AAC0                                   i1l10302 A634  
                                 i1l11102 A562                                   i1l11030 98D6  
                                 i1l10320 B416                                   i1l11120 667E  
                                 i1l11024 98AA                                   i1l10314 B400  
                                 i1l10402 9470                                   i1l10420 B7FE  
                                 i1l11140 673C                                   i1l10174 ADB4  
                                 i1l10270 B828                                   i1l10414 B7EE  
                                 i1l10510 B1E0                                   i1l11142 673E  
                                 i1l11134 66F8                                   i1l11054 7FD2  
                                 i1l11046 9920                                   i1l10328 B428  
                                 i1l10512 B1E6                                   i1l11080 80F6  
                                 i1l10274 B836                                   i1l10290 A5D8  
                                 i1l10282 A5AE                                   i1l10514 B1EC  
                                 i1l10522 B1FE                                   i1l11162 67E2  
                                 i1l11146 675A                                   i1l11074 80E6  
                                 i1l11066 8084                                   i1l11058 7FEA  
                       _configDescriptor1 2131                                   i1l10428 B80E  
                                 i1l10380 941C                                   i1l10364 93DA  
                                 i1l10516 B1F2                                   i1l11172 6828  
                                 i1l11156 67AC                                   i1l11076 80EE  
                                 i1l11068 808C                                   i1l11092 A522  
                                 i1l10542 9A3C                                   i1l10390 9446  
                                 i1l10366 93E2                                   i1l10358 93BE  
                                 i1l10374 93FA                                   i1l10518 B1F8  
                                 i1l11190 68B6                                   i1l11182 6864  
                                 i1l11174 6834                                   i1l11158 67C8  
                                 i1l10376 940C                                   i1l10546 9A46  
                                 i1l11522 8E96                                   i1l10386 943A  
                                 i1l10556 9A72                                   i1l10564 9AAA  
                                 i1l11540 8F18                                   i1l10396 9464  
                                 i1l11188 68AA                                   i1l13124 B9F8  
                                 i1l10566 9AB2                                   i1l10574 9AEA  
                                 i1l10582 BA46                                   i1l13126 B9FA  
                                 i1l11544 8F32                                   i1l11528 8EBA  
                                 i1l10578 BA36                                   i1l11562 969C  
                                 i1l11474 95B2                                   i1l11564 96A2  
                                 i1l13164 9C18                                   i1l13180 9C80  
                                 i1l13148 B686                                   i1l11574 96C4  
                                 i1l11566 96A8                                   i1l11494 962E  
                                 i1l13182 9C86                                   i1l11576 96CA  
                                 i1l11592 9730                                   i1l13176 9C66  
                                 i1l13168 9C20                                   i1l10970 9FF8  
                                 i1l12642 B4FA                                   i1l12634 B4B2  
                                 i1l11578 96D0                                   i1l13610 8550  
                                 i1l11588 9712                                   i1l12670 A0EE  
                                 i1l13622 8584                                   i1l12656 A0A8  
                                 i1l13632 85E8                                   i1l12682 A132  
                                 i1l12658 A0AC                                   i1l22186 B216  
                                 i1l13626 858C                                   i1l13618 8568  
                                 i1l12676 A10E                                   i1l22188 B24A  
                                 i1l14710 8126                                   i1l16310 012E  
                                 i1l13680 A7E2                                   i1l15520 75F8  
                                 u1650_21 753A                                   i1l13594 851E  
                                 i1l13690 A83E                                   i1l13682 A800  
                                 i1l13674 A7CA                                   i1l15522 7602  
                                 i1l15514 75D6                                   i1l16314 013A  
                                 i1l14740 8164                                   i1l14732 8154  
                                 i1l15540 7680                                   i1l15532 7636  
                                 i1l15524 760C                                   i1l16308 012A  
                                 i1l13598 8526                                   i1l14718 8136  
                                 i1l13686 A816                                   i1l13678 A7D8  
                                 i1l15550 76B0                                   i1l15534 7640  
                                 i1l15526 7614                                   i1l16318 0146  
                                 i1l13688 A834                                   i1l16280 0076  
                                 u1651_21 754E                                   i1l14770 81CE  
                                 i1l14762 81A6                                   i1l14746 818A  
                                 i1l16290 00C4                                   i1l14756 819A  
                                 i1l15492 757C                                   i1l14790 8210  
                                 i1l16286 00A0                                   i1l14776 81E2  
                                 i1l16296 010C                                   i1l15498 75A6  
                                 i1l14796 8230                                   i1l14798 824C  
                  ??_MiMAC_ReceivedPacket 0133                                   i2l12930 AC6C  
                                 i2l12922 AC40                                   i2l12940 AC98  
                                 i2l13660 B476                                   i2l12934 AC82  
                                 i2l12926 AC56                                   i2l12918 AC2A  
                                 i2l13654 B460                                   i2l13668 B488  
                      __CFG_OSC$INTOSCPLL 000000                                   i2l19510 7438  
                                 i2l19522 7468                                   i2l19506 742C  
                                 i2l19532 74FA                                   i2l19526 7478  
                                 i2l19536 750E                                   i2l19472 7386  
                                 i2l19538 7516                                   i2l19476 73A2  
                                 i2l19804 4F9A                                   i2l19494 73FA  
                                 i2l19822 4FE8                                   i2l19910 536A  
                                 i2l18952 B17E                                   i2l19904 533E  
                                 i2l19760 4EB8                                   i2l19752 4E9A  
                                 i2l19498 7416                                   i2l19842 513C  
                                 i2l19834 50F8                                   i2l19818 4FD8  
                                 i2l19906 5356                                   i2l19914 536E  
                                 i2l19852 5174                                   i2l19828 506E  
                                 i2l19836 50FC                                   i2l19764 4EC6  
                                 i2l19748 4E90                                   i2l19908 5364  
                                 i2l18966 B1BA                                   i2l19862 51AE  
                                 i2l19846 5146                                   i2l19838 5116  
                                 i2l19774 4EF0                                   i2l19928 539C  
                                 i2l19872 51E6                                   i2l19784 4F12  
                                 i2l19890 52A4                                   i2l19874 51EC  
                                 i2l19866 51B8                                   i2l19884 5282  
                                 i2l19796 4F4E                                   i2l19788 4F22  
                                 i2l19894 52AA                                   i2l19878 51F6  
                          _LED_brightness 005B                                ??i1_memset 0007  
                         MiWiTasks@cIndex 016B               __end_of_USBCtrlTrfTxService 9AF2  
                     _USBStdSetCfgHandler 9860                     i2WriteFIFO@IRQ0select 00A7  
                   i2WriteFIFO@IRQ1select 00A6                           sendHIDText@size 010F  
                                 _RPINR21 000EFC                                   _RPINR22 000EFD  
                                 _SSP2BUF 000F75                           MiWiTasks@handle 0177  
        MIWIInterruptHandler@ackInfoIndex 00D4                                 ?_labelcmp 0100  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 014E  
                                 _RF_Mode 009B                                   _AckInfo 0248  
                                 _UIEbits 000F36                                   _RSSIVal 009C  
                         MiWiTasks@jitter 0162                                   _UIRbits 000F62  
            __size_of_MiMAC_SetAltAddress 0002                      ??_mW_ufixed16_to_dBm 0101  
                   _MiApp_StartConnection 908A                          __CFG_CFGPLLEN$ON 000000  
             AddNodeToNetworkTable@handle 0109             __size_of_send_complete_update 0432  
                       ?_SYS_InterruptLow 0001                  ??i1_USBTransferOnePacket 0005  
                         _timerExtension1 00A1                           _timerExtension2 00A2  
                             TxPacket@CCA 010A                  MiApp_ConnectionMode@Mode 0101  
                         __size_of_SPIGet 000A                           __size_of_SPIPut 001C  
             __end_of_MiMAC_DiscardPacket BAD0                        ??_SYS_InterruptLow 001F  
                              DELAY_ms@ms 010C                       _AcknowledgementAddr 01B3  
                            _MiWi_TickGet B0F6              __end_of_MIWIInterruptHandler 53B8  
                  __end_of_MiMAC_SetPower B88E                                   __Hparam 0000  
                          _LED_increasing 0045                      ?_USBStdSetCfgHandler 0001  
             __size_of_USBCheckHIDRequest 00FC                                   __Lparam 0000  
                       __end_of_hid_rpt01 2177              __end_of_MiApp_ConnectionMode BA2C  
                            ??i2_TxPacket 00AE                                ??_TxPacket 010B  
                              ??_RtccWrOn 0100                             _sendHIDBinary AAF4  
                              CCM_Dec@key 0128                       __size_of_SendBeacon 013C  
            __end_of_MiApp_UnicastAddress 6226                __size_of_USBEnableEndpoint 003C  
                    ??_USBCheckStdRequest 001B                           __size_of___ftge 00C8  
           __size_of_USBCtrlTrfOutHandler 005C                   __size_ofi2_MiWi_TickGet 0074  
                            ??i1___ftpack 0006                                   ___awdiv A138  
                        _ToSendDataBuffer 0384                           __size_of___lmul 0076  
                                 ___ftadd 68DC                                   ___lbmod B6D4  
                   MIWIInterruptHandler@i 00D7                                CCM_Enc@key 0128  
                                 ___ftneg B9A0                          ??_USBDeviceTasks 001E  
                         __size_of___wmul 0036                                   ___ftmul 7D0C  
                              _myAppState 0052                                   ___fttol 8254  
                        _MiApp_SetChannel BAD0                                   ___lwdiv B008  
                       ??_USBStallHandler 0001                                   ___lwmod B2C0  
                         __size_of_encode 021A                                ??___altoft 0127  
                         __CFG_STVREN$OFF 000000                     __CFG_RTCOSC$INTOSCREF 000000  
                        ?i1_USBDeviceInit 0001                            _tempNodeStatus 00A0  
                                 __pcinit 9AF2                           __size_of_memcpy 0062  
                              ??___ftpack 0105                           __size_of_memset 0034  
               __end_of_configDescriptor1 215A                                   __ramtop 0F00  
                    SendMACPacket@Address 0139                                   __ptext0 3D4A  
                                 __ptext1 9774                              ??_MiMAC_Init 0115  
                                 __ptext2 9E26                                   __ptext3 A652  
                                 __ptext4 B854                                   __ptext5 B384  
                                 __ptext6 BB2C                                   __ptext7 B8C8  
                                 __ptext8 53B8                                   __ptext9 BA58  
                                 _inPipes 0081                                   _myPANID 01F0  
                                 _myMODEL FFF4               _USBDeferOUTDataStagePackets 0049  
                            __size_of_CTR 0120                           __size_of_strcpy 0038  
                       __end_of_hexpowers 20C3                                 _T1CONbits 000FCD  
                                 _dpowers 20B1                              ??_USBSuspend 0015  
                                 _m_power 01C8                  ??_MiApp_MessageAvailable 017D  
                               _T2CONbits 000FCA                     MiApp_NoiseDetection@i 013F  
                   MiApp_NoiseDetection@j 013B                                   _isdigit BA58  
                   MiApp_NoiseDetection@k 013C                             _myLongAddress 01E8  
                               _T4CONbits 000F76                           ??_SendMACPacket 013C  
                  RegisterRead@IRQ0select 0104                     MiApp_UnicastAddress@i 03D5  
                  RegisterRead@IRQ1select 0103                                   encode@i 0110  
                    _findNextNetworkEntry B79C                        __end_of_USB_CD_Ptr 20CF  
                              ??_labelcmp 0104                __size_of_SYSTEM_Initialize 013E  
                                 _sprintf 53B8           __size_of_USBCtrlTrfSetupHandler 008E  
                  ??_MiApp_DiscardMessage 0100                            __pintcode_body B250  
                      __end_ofi2_TxPacket 752A                      end_of_initialization 9BBE  
                        _MiWiStateMachine 01B5            __size_of_encode_uint8_variable 00A6  
           __end_of_encode_uint8_variable A9B8                        __end_of_USB_SD_Ptr 20C9  
                    __size_of_timer_reset 001A          MiApp_NoiseDetection@ScanDuration 0121  
                               i2SPIPut@i 00A3                                 i2SPIPut@v 00A4  
                      __end_ofi1___ftpack A868                  dBm_to_mW_ufixed16@value1 0100  
                dBm_to_mW_ufixed16@value2 0102                                   memcpy@d 0106  
                                 memcpy@n 0104                                   memcpy@s 0108  
                     _pBDTEntryEP0OutNext 003A                                   memset@c 0102  
                                 memset@n 0104                                   memset@p 0106  
                               i1u1071_20 80DA                                 i1u1071_27 80D0  
           MIWIInterruptHandler@BankIndex 00D6             MiMAC_SendPacket@MACPayloadLen 0134  
                               i1u1068_20 8048                                 i1u1068_27 803E  
                               i1u1069_20 807E                                 i1u1069_27 8074  
                                 int_func B250                      __size_ofi2_SetRFMode 0098  
                 SendMACPacket@PacketType 013B                                 i1u1757_20 0094  
                ?_USBStdFeatureReqHandler 0001                                 i2u1160_45 B6C4  
                               i2u1160_46 B6C6                                 i2u1161_45 B6D0  
                               i2u1161_46 B6D2                                 i2u1360_45 B59C  
                               i2u1360_46 B59E                                 i2u1361_45 B5A8  
                               i2u1361_46 B5AA                                 i2u1362_45 B78C  
                               i2u1362_46 B78E                                 i2u1363_45 B798  
                               i2u1363_46 B79A                     ??_USBStdSetCfgHandler 0015  
                      __end_of_MiMAC_Init 84DC                           ?_MiMAC_SetPower 0001  
                          ?_sendHIDBinary 010A               MIWIInterruptHandler@counter 00CB  
             encode_uint8_variable@buffer 0100                        __end_of_USBSuspend BAAC  
           encode_uint8_variable@m_signed 010D                   _USBCtrlEPAllowDataStage AA56  
                 MiMAC_SetChannel@channel 0109                                   postdec1 000FE5  
                                 postdec2 000FDD                      __end_of_RegisterRead B558  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     __end_of_isSameAddress B602  
                _USBCtrlEPServiceComplete 958E      DELAY_ms@cyclesRequiredForEntireDelay 010E  
                     RegisterRead@address 0105                     MiWiTasks@CapacityByte 0170  
                           WriteFIFO@Data 0102                _USBStatusStageEnabledFlag1 004C  
              _USBStatusStageEnabledFlag2 004D                                _timer_flag 01CB  
                      USBEnableEndpoint@p 000A                           _InitSymbolTimer BB46  
                   __end_ofi2_RegisterSet B6D4            encode_ufixed16_variable@buffer 0100  
                        ___lbmod@dividend 0101                                _update_LED B384  
                             _Pwr_updated 009A                                labelcmp@p1 0100  
                              labelcmp@p2 0102                                 _TRISAbits 000F92  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                      _ReceivedDataBuffer 0400                                encode@text 0100  
                      _BothEP0OutUOWNsSet 0044                     ?_findNextNetworkEntry 0001  
                           _mySecurityKey 0079                                 i1___ftadd 752A  
                 MiMAC_SendPacket@TxIndex 0137             MIWIInterruptHandler@PacketLen 00D5  
                           ?_RouteMessage 013D                 USBConfigureEndpoint@EPNum 0006  
                    __size_ofi2_WriteFIFO 0042                    ?_MiApp_StartConnection 0141  
              ?_USBCtrlEPAllowStatusStage 0001                  _encode_ufixed16_variable A1F6  
                       __size_of_DELAY_ms 00AA       USER_USB_CALLBACK_EVENT_HANDLER@size 0011  
                               _USTATcopy 0058                  RouteMessage@ShortAddress 013F  
                             ___lbmod@rem 0103                         CCM_Dec@payloadLen 0127  
              MiMAC_SendPacket@transParam 012F                  i1USBTransferOnePacket@ep 0005  
                   _send_answer_to_update 7880                        _dBm_to_mW_ufixed16 8AFC  
                              _status_led 0055              __end_of_USBTransferOnePacket 9A1A  
                 ??_AddNodeToNetworkTable 0106                               _CCP1CONbits 000FBA  
              MiMAC_SetAltAddress@Address 0100           __size_ofi1_USBTransferOnePacket 00BA  
               MiApp_UnicastAddress@SecEn 0180                            __end_of_PVALUE 2091  
                          __end_of_SVALUE 20B1                            __end_of_SPIGet BB96  
                          __end_of_SPIPut BB10                    SearchForShortAddress@i 0102  
                             ___ftmul@exp 0141                       ?_dBm_to_mW_ufixed16 0100  
                     _UnicastShortAddress ACBC                    _USBCtrlTrfSetupHandler AE76  
                   __end_of_USBDeviceInit 7D0C                            __end_of___ftge 9D5E  
                          __end_of___lmul B0F6                              sendHIDText@c 010A  
                            sendHIDText@p 010D                            __end_of___wmul B936  
                       __size_ofi2_SPIGet 000A                         __size_ofi2_SPIPut 001C  
                               i1memset@c 0003                                 i1memset@n 0005  
                               i1memset@p 0007                             __pidataCOMRAM BBA6  
                               _MiWiTasks 23C6                            __end_of_encode 6FB2  
                          __end_of_memcpy B384                            __end_of_memset B9A0  
                              floor@expon 0133                         _USBBusIsSuspended 0047  
                          __end_of_strcpy B900           __size_of_MiApp_MessageAvailable 0012  
        MiMAC_ReceivedPacket@PayloadIndex 0145                  __end_of_MiMAC_SetChannel A4DE  
                     start_initialization 9AF2                     _SearchForShortAddress AF04  
                            ??_SendBeacon 013D                   ?_USBStdGetStatusHandler 0001  
                             __end_of_CTR 8E66             MiApp_NoiseDetection@RSSIValue 0123  
           USBCtrlTrfRxService@byteToRead 0002                      ??_dBm_to_mW_ufixed16 0104  
                    _MIWIInterruptHandler 4E68                      ?_UnicastShortAddress 0148  
                     WriteFIFO@IRQ0select 0104                             TxPacket@reTry 011C  
           MiApp_NoiseDetection@RSSIcheck 013D                       WriteFIFO@IRQ1select 0103  
                              ?i1___ftadd 0009                  __end_of_MiMAC_SendPacket 6D98  
                          ??_RouteMessage 0142                      _MiApp_ConnectionMode BA00  
                      TxPacket@CCARetries 011B                         __size_ofi1_memset 002C  
              i2TxPacket@allowedTxFailure 00C1                      _MiApp_UnicastAddress 5DBC  
            __end_of_USBConfigureEndpoint ADE6             MIWIInterruptHandler@ackPacket 00CE  
         __end_of_USBStdFeatureReqHandler 68DC                                 _SetRFMode AB8C  
       __end_of_USBCtrlEPAllowStatusStage A074                  __size_of_BroadcastJitter 00BA  
                                CBC_MAC@i 0123                                  CBC_MAC@j 0122  
                              frexp@value 0100                  __end_of_USBCtrlEPService 9C96  
                                ??_SPIGet 0102                                  ??_SPIPut 0100  
                         ??_sendHIDBinary 010D                                 _dBm_to_mW A2B0  
               ??_USBCtrlEPAllowDataStage 0002                            _currentChannel 01F6  
                          USBDeviceInit@i 0108                                 TxPacket@i 0120  
                  _pBDTEntryEP0OutCurrent 0038                                  CCM_Dec@i 0132  
                 USBTransferOnePacket@dir 0100                                  CCM_Enc@i 012E  
                 USBTransferOnePacket@len 0103                                  ??___ftge 0106  
                 __end_of_InitSymbolTimer BB5E                            i2_MiWi_TickGet B16A  
                                ??___lmul 0108                        __end_of_SendBeacon 8898  
                                ??___wmul 0104         MiApp_UnicastAddress@PermanentAddr 017F  
                     _USBStdGetDscHandler 7FC0                                  ??_encode 0104  
                             __pdataBANK1 01F8                               __pdataBANK2 02F9  
                mW_ufixed16_to_dBm@value1 0101                         __size_of_TxPacket 01AA  
                mW_ufixed16_to_dBm@value2 0100                         __size_of_RtccWrOn 0012  
                     _MiMAC_SetAltAddress BBAC                                  ??_memcpy 0106  
                                ?_CBC_MAC 0117                                  ??_memset 0106  
            MiApp_StartConnection@channel 0148                     _send_network_register A70A  
                              ?_MiWiTasks 0001                                  ?_CCM_Dec 0124  
                                ?_CCM_Enc 0124                    i1_USBTransferOnePacket A598  
                            ?_RegisterSet 0102                                  ??_strcpy 0104  
                       __size_of___altoft 009E             MIWIInterruptHandler@fifo_stat 00CD  
                             _ALRMCFGbits 000F47                    _USBActiveConfiguration 0056  
          __end_of_USBStdGetStatusHandler A598                         RegisterRead@value 0102  
                       __size_of___ftpack 010C                 i1USBTransferOnePacket@dir 0001  
               i1USBTransferOnePacket@len 0004                   MiWi_TickGet@currentTime 0106  
                             __pbssCOMRAM 0032                    ??_findNextNetworkEntry 0100  
                             ?_update_LED 0001                     ?_MIWIInterruptHandler 0001  
                   ??_UnicastShortAddress 014A                                 _WriteFIFO B718  
                           __pcstackBANK0 00A3                             __pcstackBANK1 0100  
                           __pcstackBANK3 03C4              __size_of_USBCtrlTrfInHandler 00C4  
                   ?_MiApp_ConnectionMode 0001                                  CTR@block 0121  
                             _defaultHops 01F9                     ?_MiApp_UnicastAddress 017D  
                    ?_USBStdGetDscHandler 0001                              _isdigit$5571 0101  
              __end_of_MiApp_ProtocolInit 7BAC                  __end_of_MiApp_SetChannel BAF4  
           __size_of_send_periodic_update 01DA                                ?_SetRFMode 0001  
              __end_of_TX_POWER_N_2_DB_MW 21A9                      ?_MiMAC_SetAltAddress 0100  
                  ?_send_answer_to_update 0001                          __p_myMODEL_const FFF4  
              __end_of_TX_POWER_N_5_DB_MW 21AF                       __end_of_PANID_LABEL 20CD  
                             MiMAC_Init@i 0115                         __size_of_labelcmp 00B8  
                           ??_sendHIDText 0109                __end_of_USBWakeFromSuspend BA00  
            __end_of_MiApp_NoiseDetection 71A0                __end_of_TX_POWER_N_8_DB_MW 2197  
                             sprintf@flag 0126                               sprintf@prec 011D  
                         _USBStallHandler B648                              _pBDTEntryOut 008F  
                     sendHIDBinary@buffer 010A                                ?_dBm_to_mW 0100  
                     sendHIDBinary@length 010C                     __size_of_RegisterRead 0058  
                  _MiApp_MessageAvailable BB70                  __size_of_USBDeviceAttach 003A  
                __size_of_update_variable 00EC                    __end_ofi2_MiWi_TickGet B1DE  
                               _main$4921 03DA                         MiMAC_SendPacket@i 0138  
                               _main$4898 03D8                          ___lwdiv@dividend 0100  
                        _MiWiCapacityInfo 01C2           encode_uint8_variable@m_writable 010E  
                             CBC_MAC@text 0117                                 __pintcode 0008  
                           __pmediumconst 1FF4                                  ?___awdiv 0106  
                               __ptext100 7FC0                                 __ptext101 6658  
                               __ptext110 B4A4                                 __ptext102 B1DE  
                               __ptext111 8E66                                 __ptext103 939E  
                               __ptext120 AC24                                 __ptext112 9FB0  
                               __ptext104 B7DA                                 __ptext121 B68E  
                               __ptext113 A074                                 __ptext105 B3E4  
                               __ptext122 B558                                 __ptext114 9A1A  
                               __ptext106 B936                                 __ptext123 BB96  
                               __ptext107 A598                                 __ptext124 BB10  
                               __ptext116 4E68                                 __ptext108 B818  
                               __ptext125 B16A                                 __ptext117 B444  
                               __ptext109 AD52                                  ?___ftadd 0108  
                               __ptext118 737A                                 __ptext119 B75A  
               MiMAC_SendPacket@headerLen 0136                                  ?___lbmod 0100  
                                ?___ftneg 0135                                  ?___ftmul 0138  
                                ?___fttol 0114                                  ?___lwdiv 0100  
                                ?___lwmod 0107               MiApp_UnicastAddress@t1_2749 03CC  
             MiApp_UnicastAddress@t2_2760 03D0                                 _hid_rpt01 215A  
            __end_of_send_complete_update 6658                               __pintcodelo 0018  
               __size_of_SYS_InterruptLow 01CC                                 _idle_rate 005A  
                ?_MiMAC_ChannelAssessment 0001                            MiWiTasks@entry 017A  
                    _USBTransferOnePacket 9942                    ?_SearchForShortAddress 0001  
           __size_of_SearchForLongAddress 00C8                                  ?_isdigit 0001  
                              ?_WriteFIFO 0001                        _AcknowledgementSeq 01F8  
                                _CCPTMRS0 000F52             __size_of_MiMAC_ReceivedPacket 04B8  
                                _DELAY_ms A868              __end_of_USBCtrlTrfOutHandler B500  
                        CCM_Dec@headerLen 0126                               ??i1___ftadd 000F  
                               _hexpowers 20BB                     ??_USBStdGetDscHandler 0001  
             MiWiTasks@sourceShortAddress 0178                  __size_of_decode_variable 00F4  
                               _last_rssi 0051                               _ep_data_out 0097  
                        ___lwdiv@quotient 0105                                  ?_sprintf 010C  
                          __size_of_floor 00FE                            __size_of_frexp 0090  
            __size_of_USBCtrlTrfRxService 0118                              _RegisterRead B500  
           USBConfigureEndpoint@direction 0001                     ??_MiMAC_SetAltAddress 0104  
                        MiWiTasks@t1_2546 0156                          MiWiTasks@t2_2557 015A  
               MiMAC_SetPower@outputPower 0108               __size_of_mW_ufixed16_to_dBm 00C6  
                        ??_MiMAC_SetPower 0106               encode_ufixed16_variable@var 0102  
            __size_of_USBCtrlTrfTxService 00D8                    _UPDATE_FREQUENCY_LABEL 21C9  
                          ___wmul@product 0104                   __size_ofi2_RegisterRead 0058  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                    i2RegisterSet@setting 00A5                                  _LATCbits 000F8B  
              __end_of_USBCheckHIDRequest 949A                MiWiTasks@coordinatorNumber 0168  
                               _tempPANID 01BB                ??_USBCtrlEPServiceComplete 0002  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _IPR3bits 000FA5                                  _PIE2bits 000FA0  
                 dBm_to_mW_ufixed16@power 0104                                  _PIE3bits 000FA3  
                   MiWiTasks@CoordAddress 015E                           ?i2_MiWi_TickGet 00A3  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_BroadcastJitter 010A  
                     __end_of_NOISE_LABEL 21C1                                 _rxMessage 0190  
               USBCtrlEPService@setup_cnt 001D                                  i1u993_20 9A9C  
                                i1u993_27 9A92                                  i1u995_20 9ADC  
                                i1u995_27 9AD2                       __size_of_update_LED 0060  
                     __end_of_sendHIDText 9FB0                                  _RCONbits 000FD0  
                                i2_SPIGet BB96                                  _UEP0bits 000F26  
                                i2_SPIPut BB10                          ?_InitSymbolTimer 0001  
              _USBDeferINDataStagePackets 0048                                  _SSP2CON1 000F72  
             __size_of_USBCheckStdRequest 00F2                      __end_of_RouteMessage 4E68  
                encode_uint8_variable@var 0102                                  _UCONbits 000F65  
                                _SSP2STAT 000F73              __size_of_MiMAC_DiscardPacket 0024  
                  ?_send_network_register 0001           MIWIInterruptHandler@RxPacketPtr 00D3  
                    _USBConfigureEndpoint AD52         MiApp_StartConnection@ScanDuration 0141  
                             ??_MiWiTasks 014A                               _MACRxPacket 019A  
                         main@last_update 03D7                                 encode@key 0102  
                               encode@sum 0115                                  _RSSILock 01C4  
        __size_of_USBStdFeatureReqHandler 0284                               _MACTxBuffer 0266  
                           SetRFMode@mode 0106                          __size_of_CBC_MAC 010A  
        encode_ufixed16_variable@m_signed 010D                           _m_sent_messages 0087  
                       ___wmul@multiplier 0100                     ?_USBTransferOnePacket 0100  
                        MiWiTasks@rxIndex 016F                          __size_of_CCM_Dec 0156  
                        __size_of_CCM_Enc 0134                ??_encode_ufixed16_variable 010C  
                  ??_MIWIInterruptHandler 00C5                         _SYS_InterruptHigh 0008  
                       RouteMessage@PANID 013D                     i2TxPacket@TxPacketLen 00C2  
                                i1_memset BA2C                    ??_MiApp_ConnectionMode 0100  
                            _RemoteWakeup 0046            MiApp_NoiseDetection@ChannelMap 011D  
                    _OutgoingFrameCounter 01A2                                 main@power 03DC  
                  ??_MiApp_UnicastAddress 0181                   ??_MiApp_StartConnection 0146  
                             _PANID_LABEL 20C9                        ?_SYS_InterruptHigh 0001  
                       RouteMessage@SecEn 0141                  __size_ofi1_USBDeviceInit 0142  
                         _MiWiAckRequired 01C1                             ??_timer_reset 0100  
                 __end_of_USBStallHandler B68E                     __end_of_SendMACPacket B008  
                                _ConnMode 01BF                      __end_of_UPTIME_LABEL 21D1  
               _send_complete_update$6060 0148                 _send_complete_update$6061 014B  
               _send_complete_update$6062 014E                 _send_complete_update$6063 0151  
                   __end_of_CHANNEL_LABEL 21BD                         ___lmul@multiplier 0100  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                               copy_data0 9B76                             ??i2_SetRFMode 00A9  
                             ??_SetRFMode 0106               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 9942                     SearchForLongAddress@i 0105  
                   SearchForLongAddress@j 0104             __size_of_MiApp_DiscardMessage 000A  
                     ??_SYS_InterruptHigh 00D8                                  _TxMACSeq 009D  
                                _ScanTime 2035                     _encode_uint8_variable A912  
                      __end_of_device_dsc 2189                               ??_dBm_to_mW 0102  
                               frexp@eptr 0103                                  __Hparam0 0000  
                ??_APP_LEDUpdateUSBStatus 0001            __size_of_AddNodeToNetworkTable 0124  
                 ?_USBCtrlTrfSetupHandler 0001             __end_of_AddNodeToNetworkTable 8D46  
                 USBStdGetStatusHandler@p 0002                                  __Lparam0 0000  
                           ?i1_update_LED 0001                                  _RxPacket 0300  
                                _TxBuffer 02A6                    USBTransferOnePacket@ep 0104  
                                _TxPacket 76D6                                  _RtccWrOn BB5E  
                                _SetupPkt 000D20                               CCM_Dec@text 0124  
         __end_of_MiMAC_ChannelAssessment 8AFC                     ?_USBConfigureEndpoint 0001  
                   MiMAC_ReceivedPacket@i 0146                     MiMAC_ReceivedPacket@j 0144  
                   MiMAC_ReceivedPacket@k 0143                         ??_USBDeviceAttach 0100  
                     __end_of_POWER_LABEL 21C5                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___lbmod 0044  
                        __size_of___ftneg 0030                                  ___altoft A9B8  
                        __size_of___ftmul 015E                         ??_update_variable 0109  
                        __size_of___fttol 0144                           _tempLongAddress 01A6  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                                ___ftpack 8F7E                               CCM_Enc@text 0124  
               __end_of_SYS_InterruptHigh B2C0                  i2RegisterRead@IRQ0select 00A7  
                    _MiApp_NoiseDetection 6FB2                  i2RegisterRead@IRQ1select 00A6  
                      _sendHIDBinary$4970 010E                  MiMAC_ChannelAssessment@i 011C  
                MiMAC_ChannelAssessment@k 0119                    AddNodeToNetworkTable@i 0108  
                              sprintf@idx 011C                                sprintf@len 0122  
                              sprintf@val 0124                      __size_of_RegisterSet 0046  
                        main@shortaddress 03E1                             ??i2_WriteFIFO 00A5  
                           ?i2_update_LED 0001                               ??_WriteFIFO 0102  
                        __size_of_isdigit 002A                         ?_MiMAC_SetChannel 0107  
                 __size_of_USBDeviceTasks 0146                           ___lwdiv@divisor 0102  
                         ___lwdiv@counter 0104                                  __ptext10 B900  
                                __ptext11 B2C0                                  __ptext20 A9B8  
                                __ptext12 71A0                                  __ptext21 B9A0  
                                __ptext13 A70A                                  __ptext30 9942  
                                __ptext22 7D0C                                  __ptext14 6226  
                                __ptext31 949A                                  __ptext23 8F7E  
                                __ptext15 92A0                                  __ptext40 BB70  
                                __ptext32 B322                                  __ptext24 7880  
                                __ptext16 ADE6                                  __ptext41 23C6  
                                __ptext33 A2B0                                  __ptext25 AAF4  
                                __ptext17 8254                                  __ptext50 5904  
                                __ptext42 ACBC                                  __ptext34 7BAC  
                                __ptext26 A912                                  __ptext18 9C96  
                                __ptext51 B5B0                                  __ptext43 480E  
                                __ptext35 B96C                                  __ptext27 A1F6  
                                __ptext19 68DC                                  __ptext60 AF04  
                                __ptext52 7E6A                                  __ptext44 875C  
                                __ptext36 B88E                                  __ptext28 8AFC  
                                __ptext61 9D5E                                  __ptext53 8D46  
                                __ptext45 AF8C                                  __ptext37 861E  
                                __ptext29 9EEC                                  __ptext70 B500  
                                __ptext62 BB82                                  __ptext54 9196  
                                __ptext46 6B44                                  __ptext38 BB5E  
                                __ptext71 BB8C                                  __ptext63 BAAC  
                                __ptext55 6D98                                  __ptext47 76D6  
                                __ptext39 5DBC                                  __ptext80 B602  
                                __ptext72 7A1C                                  __ptext64 908A  
                                __ptext56 A36A                                  __ptext48 B718  
                                __ptext81 BAF4                                  __ptext73 BBAC  
                                __ptext65 6FB2                                  __ptext57 B6D4  
                                __ptext49 8898                                  __ptext90 BA82  
                                __ptext82 BB46                                  __ptext74 8398  
                                __ptext66 B0F6                                  __ptext58 8C22  
                                __ptext91 B648                                  __ptext83 BA00  
                                __ptext75 A868                                  __ptext67 89CC  
                                __ptext59 B79C                                  __ptext92 9BC8  
                                __ptext76 B080                                  __ptext68 B008  
                                __ptext93 AE76                                  __ptext85 752A  
                                __ptext77 BAD0                                  __ptext69 A138  
                                __ptext94 958E                                  __ptext86 A7BA  
                                __ptext78 A424                                  __ptext95 AA56  
                                __ptext87 810E                                  __ptext79 AB8C  
                                __ptext96 9682                                  __ptext88 84DC  
                                __ptext97 9860                                  __ptext89 B9D0  
                                __ptext98 BA2C                                  __ptext99 A4DE  
                                _labelcmp A652                  TxPacket@allowedTxFailure 011D  
                      ??_MiMAC_SetChannel 0108                         ?_MiMAC_SendPacket 012F  
                           _labelcmp$5111 0107                              _SSP2CON1bits 000F72  
                                _m_buffer 02D1                             MiWiTasks@mask 0160  
                  RouteMessage@parentNode 0146                          __size_of_sprintf 054C  
                  __size_of_isSameAddress 0052                                strcpy@from 0102  
                      ??_MiMAC_SendPacket 0135                                  _p_buffer 01B9  
                    _send_complete_update 6226                               _NOISE_LABEL 21BD  
                             _sendHIDText 9EEC            __end_of_USBCtrlTrfSetupHandler AF04  
                           __size_of_main 0AC4                         ?_USBCtrlEPService 0001  
                  MiApp_NoiseDetection@t1 0132                    MiApp_NoiseDetection@t2 0136  
                     __end_of_timer_reset BB46                         ??_decode_variable 0114  
                                _myParent 01C9                            ??i1_update_LED 0001  
                  __size_ofi2_RegisterSet 0046                       __end_ofi2_SetRFMode ACBC  
                      ??_USBCtrlEPService 001B                       _USBCtrlTrfInHandler A074  
                  MiApp_UnicastAddress@t1 03C4                    MiApp_UnicastAddress@t2 03C8  
                                _tmpBlock 01EC                          _tempShortAddress 01F4  
                                _outPipes 0060                      _USBCtrlTrfOutHandler B4A4  
                                int$flags 005E                   ?i1_USBTransferOnePacket 0001  
               _USBCtrlEPAllowStatusStage 9FB0                         _TX_POWER_10_DB_MW 21AF  
            i2MiWi_TickGet@failureCounter 00A8                         _TX_POWER_13_DB_MW 21B4  
                        _SYS_InterruptLow 0018                    ??_USBTransferOnePacket 0104  
                                main@size 03E0                                  main@rssi 03DD  
                   ?_MiApp_NoiseDetection 011D                MiMAC_SendPacket@MACPayload 0132  
          ?_APP_DeviceCustomHIDInitialize 0001                     __CFG_CPUDIV$OSC3_PLL3 000000  
                   findNextNetworkEntry@i 0100                 _USBDeferStatusStagePacket 004A  
                        i1USBDeviceInit@i 0009                               _OSCTUNEbits 000F9B  
                          ??i2_update_LED 00A3                                _INTCONbits 000FF2  
                         do_UPDATE@F10257 0042                              ??_update_LED 0100  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0100  
                         i2WriteFIFO@Data 00A5                                  memcpy@s1 0102  
           USBCtrlTrfTxService@byteToSend 0001                   ??_send_answer_to_update 0110  
             __size_of_dBm_to_mW_ufixed16 0126                                  isdigit@c 0102  
                                memset@p1 0100         MiApp_NoiseDetection@DetectionMode 0122  
                             _repeat_full 0053                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                                  intlevel1 0000  
                                intlevel2 0000                         ?_MiApp_SetChannel 0001  
                               sprintf@ap 0120                                 sprintf@cp 011E  
                               sprintf@sp 010C                     ?_send_complete_update 0001  
                 ?_MiApp_MessageAvailable 0001                       __end_ofi2_WriteFIFO B79C  
                  __size_of_USBDeviceInit 0160                    ?_encode_uint8_variable 0100  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER B250  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0072  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0013          ?_USER_USB_CALLBACK_EVENT_HANDLER 000D  
         _USER_USB_CALLBACK_EVENT_HANDLER B1DE                            i2_RegisterRead B558  
                       ??i1_USBDeviceInit 0009                          ___lwmod@dividend 0107  
                             _noise_level 01F7                        ??_MiApp_SetChannel 010A  
    SYSTEM_Initialize@pll_startup_counter 0100                             ?_MiWi_TickGet 0100  
                   __size_of_RouteMessage 065A                               _POWER_LABEL 21C1  
         __size_of_APP_LEDUpdateUSBStatus 003E                     __end_of_sendHIDBinary AB8C  
                      _m_update_frequency 01FA                        _MiApp_ProtocolInit 7A1C  
               __end_of_TX_POWER_10_DB_MW 21B4            __end_ofi1_USBTransferOnePacket A652  
                             _RTCVALHbits 000F3B                    ??_USBConfigureEndpoint 0002  
                   ?_USBCtrlTrfOutHandler 0001                               _RTCVALLbits 000F3A  
               __end_of_TX_POWER_13_DB_MW 21B9                        _TX_POWER_N_2_DB_MW 21A3  
                           _MACInitParams 01AA                        __end_of_update_LED B3E4  
            __end_of_send_periodic_update 737A                       MiMAC_Init@initValue 0112  
                      _TX_POWER_N_5_DB_MW 21A9                       _USBCtrlTrfRxService 8E66  
                      _USBWakeFromSuspend B9D0                        _TX_POWER_N_8_DB_MW 2190  
                 _USBStdFeatureReqHandler 6658                             _isSameAddress B5B0  
                 ??_SearchForShortAddress 0100                       ?_MiApp_ProtocolInit 0001  
              MiWi_TickGet@failureCounter 0105                       _USBCtrlTrfTxService 9A1A  
             __end_of_UnicastShortAddress AD52                __size_of_SYS_InterruptHigh B2B8  
                              _RTCCFGbits 000F3F          __end_of_encode_ufixed16_variable A2B0  
                          __p_myUID_const FFF6                          _BroadcastRecords 0228  
                                sprintf@c 0129                                  sprintf@f 010E  
                      MiWiTasks@destPANID 016D                          _TX_POWER_1_DB_MW 2189  
                           i2_RegisterSet B68E                       ?_USBWakeFromSuspend 0001  
                              _PPSCONbits 000EBF                          _TX_POWER_4_DB_MW 2197  
                             MiWiTasks@t1 0164                               MiWiTasks@t2 0152  
                         ___lwmod@divisor 0109                     ??_USBCtrlTrfInHandler 0002  
                                strcpy@cp 0104                                  strcpy@to 0100  
                   _USBAlternateInterface 0057                           ___lwmod@counter 010B  
                       i2TxPacket@rssival 00C4                       TxPacket@TxPacketLen 011F  
                        _TX_POWER_7_DB_MW 21C5                       USBEnableEndpoint@ep 000C  
                         _endpoint_number 0050                               _timer_count 005D  
                    i2TxPacket@CCARetries 00BF             __size_of_findNextNetworkEntry 003E  
                             _timer_reset BB2C                      ?_USBCtrlTrfRxService 0001  
          __end_of_MiApp_MessageAvailable BB82                    __end_ofi2_RegisterRead B5B0  
                            _RouteMessage 480E                          _TX_POWER_INVALID 219D  
                     _MiMAC_DiscardPacket BAAC                         _knownCoordinators 01C7  
                          _RouterFailures 0069                           _BroadcastJitter A36A  
                             i2_SetRFMode AC24                                MiWiTasks@i 017C  
                              MiWiTasks@j 017B                  ?_USBCtrlEPAllowDataStage 0001  
        __size_of_MiMAC_ChannelAssessment 0130                      ??_MiApp_ProtocolInit 0116  
                        i2TxPacket@status 00BE                      ?_USBCtrlTrfTxService 0001  
                        ??i2_MiWi_TickGet 00A7                       MiWiTasks@entry_2536 0161  
                         i2TxPacket@reTry 00C0              _USBStatusStageTimeoutCounter 004E  
                          ??_MiWi_TickGet 0104              __end_of_SearchForLongAddress 9E26  
                    ??_USBWakeFromSuspend 0015                             i2TxPacket@CCA 00AD  
          _StaticSecurityKey_absconstaddr 001FEC                 i2MiWi_TickGet@currentTime 00A9  
              USBTransferOnePacket@handle 0105                               encode@delta 010E  
                   RegisterSet@IRQ0select 0105                  MiWiTasks@associateStatus 0163  
                   RegisterSet@IRQ1select 0104              __end_of_MiMAC_ReceivedPacket 5DBC  
                              _USB_CD_Ptr 20CD                              i2TxPacket@t1 00B6  
                            i2TxPacket@t2 00BA                               encode@part1 0111  
                             encode@part2 0113                   ??_send_network_register 0110  
                             i2TxPacket@i 00C3                               _USBInHandle 0093  
